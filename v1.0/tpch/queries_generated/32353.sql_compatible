
WITH RECURSIVE SupplierHierarchy AS (
    SELECT s_suppkey, s_name, s_nationkey, 0 AS level
    FROM supplier
    WHERE s_suppkey IN (SELECT ps_suppkey FROM partsupp WHERE ps_availqty > 100)
    
    UNION ALL
    
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, sh.level + 1
    FROM supplier s
    INNER JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey
)
, OrderSummary AS (
    SELECT o.o_orderkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue, o.o_orderdate
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE o.o_orderstatus = 'O' AND l.l_shipdate >= '1997-01-01'
    GROUP BY o.o_orderkey, o.o_orderdate
)
, RegionSummary AS (
    SELECT r.r_name, COUNT(n.n_nationkey) AS nation_count
    FROM region r
    LEFT JOIN nation n ON r.r_regionkey = n.n_regionkey
    GROUP BY r.r_name
)
SELECT 
    s.s_name AS supplier_name,
    sh.level AS supplier_level,
    os.total_revenue,
    rs.r_name AS region_name,
    COALESCE(os.total_revenue, 0) AS revenue_adjusted,
    CASE 
        WHEN os.total_revenue IS NULL THEN 'No Orders'
        ELSE 'Active'
    END AS order_status,
    ROW_NUMBER() OVER (PARTITION BY rs.r_name ORDER BY os.total_revenue DESC) AS revenue_rank
FROM SupplierHierarchy sh
JOIN supplier s ON sh.s_suppkey = s.s_suppkey
LEFT JOIN OrderSummary os ON s.s_suppkey IN (SELECT ps_suppkey FROM partsupp WHERE ps_partkey IN (SELECT p_partkey FROM part WHERE p_size > 10))
JOIN RegionSummary rs ON s.s_nationkey IN (SELECT n.n_nationkey FROM nation n WHERE n.n_regionkey IS NOT NULL)
GROUP BY s.s_name, sh.level, os.total_revenue, rs.r_name
ORDER BY rs.nation_count DESC, revenue_rank;
