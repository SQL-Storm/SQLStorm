
WITH RECURSIVE PartHierarchy AS (
    SELECT p_partkey, p_name, p_size, 
           CAST(p_name AS VARCHAR(100)) AS full_name
    FROM part
    WHERE p_size < 10

    UNION ALL

    SELECT p.p_partkey, p.p_name, p.p_size,
           CONCAT(ph.full_name, ' -> ', p.p_name)
    FROM PartHierarchy ph
    JOIN part p ON p.p_size = ph.p_size + 1
),
TopRegions AS (
    SELECT r.r_regionkey, r.r_name, SUM(s.s_acctbal) AS total_acctbal
    FROM region r
    LEFT JOIN nation n ON r.r_regionkey = n.n_regionkey
    LEFT JOIN supplier s ON n.n_nationkey = s.n_nationkey
    GROUP BY r.r_regionkey, r.r_name
    ORDER BY total_acctbal DESC
    LIMIT 5
),
OrderDetails AS (
    SELECT o.o_orderkey, o.o_orderdate, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_price
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE l.l_shipdate >= '1997-01-01'
    GROUP BY o.o_orderkey, o.o_orderdate
),
CustomerOrderDetails AS (
    SELECT c.c_custkey, c.c_name, COUNT(o.o_orderkey) AS order_count,
           COALESCE(SUM(od.total_price), 0) AS total_spent
    FROM customer c
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    LEFT JOIN OrderDetails od ON o.o_orderkey = od.o_orderkey
    GROUP BY c.c_custkey, c.c_name
    HAVING COUNT(o.o_orderkey) > 5
),
FinalResults AS (
    SELECT ch.full_name, tr.r_name, co.total_spent
    FROM PartHierarchy ch
    JOIN partsupp ps ON ch.p_partkey = ps.ps_partkey
    JOIN CustomerOrderDetails co ON ps.ps_suppkey = co.c_custkey
    JOIN TopRegions tr ON co.c_name = tr.r_name
    WHERE co.total_spent > 1000
)
SELECT DISTINCT fr.full_name, fr.total_spent
FROM FinalResults fr
WHERE fr.total_spent IS NOT NULL
ORDER BY fr.total_spent DESC
LIMIT 10;
