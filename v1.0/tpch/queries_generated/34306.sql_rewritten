WITH RECURSIVE supplier_hierarchy AS (
    SELECT s_suppkey, s_name, s_acctbal, s_nationkey, 0 AS level
    FROM supplier
    WHERE s_acctbal IS NOT NULL AND s_acctbal > (SELECT AVG(s_acctbal) FROM supplier)
    
    UNION ALL
    
    SELECT s.s_suppkey, s.s_name, s.s_acctbal, s.s_nationkey, sh.level + 1
    FROM supplier s
    INNER JOIN supplier_hierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE sh.level < 3
),
ordered_customers AS (
    SELECT c.c_custkey, c.c_name, ROW_NUMBER() OVER (PARTITION BY c.c_nationkey ORDER BY c.c_acctbal DESC) AS rnk
    FROM customer c
    WHERE c.c_acctbal IS NOT NULL AND c.c_mktsegment = 'BUILDING'
),
part_supplier AS (
    SELECT p.p_partkey, p.p_name, SUM(ps.ps_supplycost * ps.ps_availqty) AS total_cost
    FROM part p
    JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
    WHERE p.p_retailprice > 100.00
    GROUP BY p.p_partkey, p.p_name
),
customer_orders AS (
    SELECT o.o_custkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_spent
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    GROUP BY o.o_custkey
)
SELECT 
    s.hierarchy_level,
    n.n_name AS nation_name,
    COUNT(DISTINCT oc.o_custkey) AS total_customers,
    COALESCE(SUM(ps.total_cost), 0) AS total_part_cost,
    AVG(oc.total_spent) AS avg_spent
FROM supplier_hierarchy s
LEFT JOIN nation n ON s.s_nationkey = n.n_nationkey
LEFT JOIN customer_orders oc ON oc.o_custkey = s.s_suppkey
LEFT JOIN part_supplier ps ON ps.p_partkey IN (
    SELECT l.l_partkey
    FROM lineitem l
    JOIN orders o ON l.l_orderkey = o.o_orderkey
    WHERE o.o_orderdate > cast('1998-10-01' as date) - INTERVAL '1 year'
)
WHERE s.hierarchy_level IS NOT NULL
GROUP BY s.hierarchy_level, n.n_name
HAVING COUNT(DISTINCT oc.o_custkey) > 5
ORDER BY total_customers DESC, total_part_cost DESC;