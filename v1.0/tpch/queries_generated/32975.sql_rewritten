WITH RECURSIVE supplier_hierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, 0 AS level
    FROM supplier s
    WHERE s.s_suppkey = 
        (SELECT MIN(s1.s_suppkey) 
         FROM supplier s1 
         WHERE s1.s_acctbal = (SELECT MAX(s2.s_acctbal) 
                               FROM supplier s2))
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, sh.level + 1
    FROM supplier s
    JOIN supplier_hierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE sh.level < 5
), qualified_orders AS (
    SELECT o.o_orderkey, o.o_totalprice, o.o_orderdate, 
           ROW_NUMBER() OVER (PARTITION BY o.o_orderstatus ORDER BY o.o_totalprice DESC) AS rank
    FROM orders o
    WHERE o.o_orderstatus IN ('O', 'F') AND o.o_totalprice > 
        (SELECT AVG(o1.o_totalprice) 
         FROM orders o1 
         WHERE o1.o_orderdate < cast('1998-10-01 12:34:56' as timestamp) - INTERVAL '1 year')
), part_supplier_totals AS (
    SELECT ps.ps_partkey, SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_cost
    FROM partsupp ps
    GROUP BY ps.ps_partkey
)
SELECT p.p_name, p.p_type, p.p_retailprice, 
       COALESCE(sh.s_name, 'Unknown Supplier') AS supplier_name,
       COALESCE(qo.o_orderkey, 'No Orders') AS order_info,
       pst.total_supply_cost
FROM part p
LEFT JOIN supplier_hierarchy sh ON sh.s_nationkey = 
    (SELECT n.n_nationkey 
     FROM nation n 
     WHERE n.n_name = p.p_mfgr)
LEFT JOIN qualified_orders qo ON qo.o_orderkey = 
    (SELECT MAX(o.o_orderkey) 
     FROM qualified_orders o 
     WHERE o.o_totalprice > p.p_retailprice)
LEFT JOIN part_supplier_totals pst ON pst.ps_partkey = p.p_partkey
WHERE p.p_size BETWEEN 10 AND 20 
AND (p.p_brand LIKE 'Brand%' OR p.p_container IS NULL)
ORDER BY total_supply_cost DESC NULLS LAST;