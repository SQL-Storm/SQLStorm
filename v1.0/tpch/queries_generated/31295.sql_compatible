
WITH RECURSIVE SupplierHierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal, 1 AS level
    FROM supplier s
    WHERE s.s_acctbal > 1000
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal, sh.level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE sh.level < 3
),
PartStats AS (
    SELECT p.p_partkey, p.p_name, SUM(ps.ps_availqty) AS total_available, AVG(ps.ps_supplycost) AS avg_cost,
           MAX(ps.ps_supplycost) AS max_cost, MIN(ps.ps_supplycost) AS min_cost
    FROM part p
    JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
    GROUP BY p.p_partkey, p.p_name
),
CustomerOrderStats AS (
    SELECT c.c_custkey, c.c_name, COUNT(o.o_orderkey) AS total_orders, SUM(o.o_totalprice) AS total_spent
    FROM customer c
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    GROUP BY c.c_custkey, c.c_name
    HAVING SUM(o.o_totalprice) IS NOT NULL
),
RegionSummary AS (
    SELECT r.r_regionkey, r.r_name, COUNT(n.n_nationkey) AS nation_count
    FROM region r 
    LEFT JOIN nation n ON r.r_regionkey = n.n_regionkey
    GROUP BY r.r_regionkey, r.r_name
)
SELECT 
    p.p_name AS part_name,
    ps.total_available,
    ps.avg_cost,
    ps.max_cost,
    ps.min_cost,
    ch.c_name AS customer_name,
    ch.total_orders,
    ch.total_spent,
    rg.r_name AS region_name,
    COALESCE(sh.level, 0) AS hierarchy_level
FROM PartStats ps
JOIN CustomerOrderStats ch ON ps.p_partkey = (SELECT ps_partkey FROM partsupp WHERE ps_availqty = (SELECT MAX(ps_availqty) FROM partsupp))
LEFT JOIN RegionSummary rg ON ch.c_custkey = rg.r_regionkey
LEFT JOIN SupplierHierarchy sh ON ch.total_orders > 5 AND sh.s_nationkey = ch.c_custkey
WHERE ps.total_available > 0
ORDER BY ps.avg_cost DESC, ch.total_spent DESC;
