WITH RankedSuppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        s.s_acctbal,
        RANK() OVER (PARTITION BY ps_partkey ORDER BY s.s_acctbal DESC) AS SupplierRank
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    WHERE 
        s.s_acctbal > (SELECT AVG(s_acctbal) FROM supplier WHERE s_regionkey = 1)
),
CustomerOrders AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        COUNT(o.o_orderkey) AS TotalOrders,
        SUM(o.o_totalprice) AS TotalSpend
    FROM 
        customer c
    LEFT JOIN 
        orders o ON c.c_custkey = o.o_custkey
    GROUP BY 
        c.c_custkey, c.c_name
),
FilteredLineItems AS (
    SELECT 
        l.l_orderkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS NetSales,
        COUNT(DISTINCT l.l_suppkey) AS UniqueSuppliers
    FROM 
        lineitem l
    WHERE 
        l.l_shipdate BETWEEN '1996-01-01' AND '1996-12-31'
    GROUP BY 
        l.l_orderkey
    HAVING 
        SUM(l.l_extendedprice * (1 - l.l_discount)) > 10000
)
SELECT 
    c.c_name,
    COALESCE(o.TotalOrders, 0) AS TotalOrders,
    COALESCE(o.TotalSpend, 0) AS TotalSpend,
    COUNT(DISTINCT li.l_orderkey) AS HighValueOrders,
    SUM(li.NetSales) AS TotalHighValueSales,
    COUNT(DISTINCT rs.s_suppkey) AS TotalSuppliersUsed
FROM 
    CustomerOrders o
LEFT JOIN 
    Customer c ON o.c_custkey = c.c_custkey
LEFT JOIN 
    FilteredLineItems li ON li.l_orderkey IN (SELECT o.o_orderkey FROM orders o WHERE o.o_custkey = c.c_custkey)
LEFT JOIN 
    RankedSuppliers rs ON li.l_orderkey IN (SELECT l.l_orderkey FROM lineitem l WHERE l.l_linenumber = 1)
WHERE 
    c.c_accountbal IS NOT NULL AND c.c_accountbal > (
        SELECT AVG(c_accountbal) FROM customer WHERE c_mktsegment = 'BUILDING'
    )
GROUP BY 
    c.c_name
ORDER BY 
    TotalHighValueSales DESC, TotalOrders DESC
LIMIT 10;