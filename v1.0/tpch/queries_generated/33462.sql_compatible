
WITH RECURSIVE SupplierHierarchy AS (
    SELECT s_suppkey,
           s_name,
           s_nationkey,
           s_acctbal,
           0 AS level
    FROM supplier
    WHERE s_acctbal > 1000
    
    UNION ALL
    
    SELECT s.s_suppkey,
           s.s_name,
           s.s_nationkey,
           s.s_acctbal,
           sh.level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE s.s_acctbal > sh.s_acctbal
),
AggLineItems AS (
    SELECT l_orderkey,
           SUM(l_extendedprice * (1 - l_discount)) AS total_revenue,
           COUNT(*) AS line_count
    FROM lineitem
    WHERE l_shipdate >= DATE '1997-01-01'
    GROUP BY l_orderkey
),
CustomerCustomerRevenue AS (
    SELECT c.c_custkey,
           SUM(al.total_revenue) AS customer_revenue,
           ROW_NUMBER() OVER (PARTITION BY c.c_nationkey ORDER BY SUM(al.total_revenue) DESC) AS revenue_rank
    FROM customer c
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    LEFT JOIN AggLineItems al ON o.o_orderkey = al.l_orderkey
    GROUP BY c.c_custkey, c.c_nationkey
)
SELECT n.n_name AS nation_name,
       COUNT(DISTINCT c.c_custkey) AS total_customers,
       COALESCE(SUM(cr.customer_revenue), 0) AS total_customer_revenue,
       COALESCE(AVG(cr.customer_revenue), 0) AS avg_customer_revenue,
       MAX(sh.level) AS max_supplier_level
FROM nation n
LEFT JOIN customer c ON c.c_nationkey = n.n_nationkey
LEFT JOIN CustomerCustomerRevenue cr ON c.c_custkey = cr.c_custkey
LEFT JOIN SupplierHierarchy sh ON sh.s_nationkey = n.n_nationkey
WHERE n.n_name IS NOT NULL
GROUP BY n.n_name
HAVING COUNT(DISTINCT c.c_custkey) > 10
ORDER BY total_customer_revenue DESC, nation_name ASC;
