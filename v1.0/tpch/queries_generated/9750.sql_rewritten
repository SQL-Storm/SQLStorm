WITH RankedOrders AS (
  SELECT 
    o.o_orderkey,
    o.o_orderdate,
    o.o_totalprice,
    c.c_name,
    c.c_acctbal,
    ROW_NUMBER() OVER (PARTITION BY c.c_nationkey ORDER BY o.o_orderdate DESC) AS order_rank
  FROM 
    orders o
  JOIN 
    customer c ON o.o_custkey = c.c_custkey
  WHERE 
    o.o_orderdate >= DATE '1997-01-01' AND o.o_orderdate < DATE '1997-12-31'
), 
SupplierParts AS (
  SELECT 
    ps.ps_partkey,
    ps.ps_suppkey,
    SUM(ps.ps_availqty) AS total_quantity,
    SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supplycost
  FROM 
    partsupp ps
  GROUP BY 
    ps.ps_partkey, ps.ps_suppkey
), 
HighValueSuppliers AS (
  SELECT 
    s.s_suppkey,
    s.s_name,
    r.r_name AS supplier_region,
    SUM(sp.total_supplycost) AS total_supplycost
  FROM 
    supplier s
  JOIN 
    SupplierParts sp ON s.s_suppkey = sp.ps_suppkey
  JOIN 
    nation n ON s.s_nationkey = n.n_nationkey
  JOIN 
    region r ON n.n_regionkey = r.r_regionkey
  GROUP BY 
    s.s_suppkey, s.s_name, r.r_name
  HAVING 
    SUM(sp.total_supplycost) > 100000
), 
OrderSummary AS (
  SELECT 
    ro.o_orderkey,
    ro.c_name,
    ro.o_orderdate,
    ro.o_totalprice,
    hvs.supplier_region
  FROM 
    RankedOrders ro
  JOIN 
    HighValueSuppliers hvs ON ro.o_custkey IN (
      SELECT c.c_custkey 
      FROM customer c 
      WHERE c.c_nationkey = (SELECT n.n_nationkey FROM nation n JOIN supplier s ON n.n_nationkey = s.s_nationkey WHERE s.s_suppkey = hvs.s_suppkey)
    )
)
SELECT 
  o.o_orderkey,
  o.c_name,
  o.o_orderdate,
  o.o_totalprice,
  o.supplier_region,
  COUNT(l.l_orderkey) AS line_item_count,
  SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue
FROM 
  OrderSummary o
JOIN 
  lineitem l ON o.o_orderkey = l.l_orderkey
GROUP BY 
  o.o_orderkey, o.c_name, o.o_orderdate, o.o_totalprice, o.supplier_region
ORDER BY 
  o.o_orderdate DESC, total_revenue DESC
LIMIT 100;