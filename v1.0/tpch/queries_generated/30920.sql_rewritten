WITH RECURSIVE SupplierHierarchy AS (
    SELECT s_nationkey, s_suppkey, s_name, s_acctbal, 1 AS depth
    FROM supplier
    WHERE s_acctbal > 5000
    UNION ALL
    SELECT s.n_nationkey, s.s_suppkey, s.s_name, s.s_acctbal, sh.depth + 1
    FROM supplier s
    JOIN nation n ON s.s_nationkey = n.n_nationkey
    JOIN SupplierHierarchy sh ON n.n_nationkey = sh.s_nationkey
    WHERE sh.depth < 3
),
OrderDetails AS (
    SELECT o.o_orderkey, o.o_orderdate, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_price
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE o.o_orderdate BETWEEN '1997-01-01' AND '1997-12-31'
    GROUP BY o.o_orderkey, o.o_orderdate
),
CustomerSummary AS (
    SELECT c.c_custkey, c.c_name, COUNT(o.o_orderkey) AS order_count, COALESCE(SUM(od.total_price), 0) AS total_spent
    FROM customer c
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    LEFT JOIN OrderDetails od ON o.o_orderkey = od.o_orderkey
    GROUP BY c.c_custkey, c.c_name
),
Sums AS (
    SELECT r.r_regionkey, r.r_name, SUM(cs.total_spent) AS region_spending
    FROM region r
    JOIN nation n ON r.r_regionkey = n.n_regionkey
    JOIN customer_summary cs ON cs.c_nationkey = n.n_nationkey
    GROUP BY r.r_regionkey, r.r_name
)
SELECT sh.s_name, 
       sh.s_acctbal, 
       SUM(s.region_spending) AS total_spending,
       ROW_NUMBER() OVER (PARTITION BY sh.s_nationkey ORDER BY SUM(s.region_spending) DESC) AS spending_rank
FROM SupplierHierarchy sh
LEFT JOIN Sums s ON sh.s_nationkey = s.r_regionkey
WHERE sh.depth = 2
GROUP BY sh.s_name, sh.s_acctbal, sh.s_nationkey
HAVING SUM(s.region_spending) > 10000
ORDER BY total_spending DESC;