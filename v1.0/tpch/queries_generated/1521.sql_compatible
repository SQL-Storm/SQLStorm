
WITH regional_sales AS (
    SELECT 
        r.r_name AS region_name,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_sales
    FROM 
        region r
    JOIN 
        nation n ON r.r_regionkey = n.n_regionkey
    JOIN 
        supplier s ON n.n_nationkey = s.s_nationkey
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    JOIN 
        part p ON ps.ps_partkey = p.p_partkey
    JOIN 
        lineitem l ON p.p_partkey = l.l_partkey
    GROUP BY 
        r.r_name
), average_sales AS (
    SELECT 
        AVG(total_sales) AS avg_sales
    FROM 
        regional_sales
), customer_orders AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        o.o_orderkey,
        o.o_orderstatus,
        o.o_orderdate,
        o.o_totalprice
    FROM 
        customer c
    LEFT JOIN 
        orders o ON c.c_custkey = o.o_custkey
    WHERE 
        o.o_orderstatus = 'O' OR o.o_orderstatus IS NULL
), ranked_orders AS (
    SELECT 
        co.*,
        RANK() OVER (PARTITION BY co.c_custkey ORDER BY co.o_totalprice DESC) AS order_rank
    FROM 
        customer_orders co
)
SELECT 
    r.region_name,
    COUNT(DISTINCT co.c_custkey) AS customer_count,
    COALESCE(SUM(ro.o_totalprice), 0) AS total_order_value,
    CASE 
        WHEN COALESCE(SUM(ro.o_totalprice), 0) > (SELECT avg_sales FROM average_sales)
        THEN 'Above Average'
        ELSE 'Below Average'
    END AS sales_performance
FROM 
    regional_sales r
LEFT JOIN 
    ranked_orders ro ON r.region_name = 
        (SELECT r_name 
         FROM region 
         WHERE r_regionkey = 
             (SELECT n_regionkey 
              FROM nation 
              WHERE n_nationkey = 
                  (SELECT c_nationkey 
                   FROM customer 
                   WHERE c_custkey = ro.c_custkey 
                   LIMIT 1) 
              LIMIT 1) 
         LIMIT 1)
GROUP BY 
    r.region_name
ORDER BY 
    r.region_name;
