
WITH RECURSIVE NationalSuppliers AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal, 
           ROW_NUMBER() OVER (PARTITION BY s.s_nationkey ORDER BY s.s_acctbal DESC) AS rank
    FROM supplier s
    JOIN nation n ON s.s_nationkey = n.n_nationkey
),
PartStatistics AS (
    SELECT p.p_partkey, p.p_name, SUM(ps.ps_availqty) AS total_available_qty,
           AVG(ps.ps_supplycost) AS avg_supply_cost,
           COUNT(DISTINCT ps.ps_suppkey) AS supplier_count
    FROM part p
    JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
    GROUP BY p.p_partkey, p.p_name
),
CustomerOrders AS (
    SELECT c.c_custkey, c.c_name, SUM(o.o_totalprice) AS total_spent,
           DENSE_RANK() OVER (ORDER BY SUM(o.o_totalprice) DESC) AS spending_rank
    FROM customer c
    JOIN orders o ON c.c_custkey = o.o_custkey
    GROUP BY c.c_custkey, c.c_name
)
SELECT DISTINCT ns.s_name AS Supplier_Name, 
       ps.p_name AS Part_Name, 
       ps.total_available_qty, 
       ps.avg_supply_cost,
       co.total_spent,
       (CASE WHEN ns.rank = 1 THEN 'Top Supplier' ELSE 'Other Supplier' END) AS status,
       (CASE WHEN co.spending_rank <= 10 THEN 'High Value Customer' ELSE 'Regular Customer' END) AS customer_status
FROM NationalSuppliers ns
LEFT JOIN PartStatistics ps ON ns.s_nationkey = ps.p_partkey
LEFT JOIN CustomerOrders co ON co.total_spent > ps.avg_supply_cost
WHERE ns.s_acctbal > 1000.00 
    AND ps.total_available_qty > 50 
    AND ns.s_nationkey IN (SELECT DISTINCT s_nationkey FROM supplier WHERE s_acctbal IS NOT NULL)
ORDER BY ps.total_available_qty DESC, co.total_spent DESC;
