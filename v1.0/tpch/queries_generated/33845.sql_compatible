
WITH RECURSIVE PartHierarchy AS (
    SELECT p_partkey, p_name, p_brand, p_retailprice, 0 AS level
    FROM part
    WHERE p_size < 10
    
    UNION ALL
    
    SELECT p.p_partkey, p.p_name, p.p_brand, p.p_retailprice * 0.9, ph.level + 1
    FROM part p
    INNER JOIN PartHierarchy ph ON ph.p_partkey = p.p_partkey
    WHERE p.p_size >= 10
),
OrderDetails AS (
    SELECT o.o_orderkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE l.l_shipdate >= '1997-01-01' AND l.l_shipdate < '1998-01-01'
    GROUP BY o.o_orderkey
),
CustomerStats AS (
    SELECT c.c_custkey, c.c_name, SUM(o.o_totalprice) AS total_spent,
           AVG(o.o_totalprice) AS avg_spent, COUNT(o.o_orderkey) AS order_count
    FROM customer c
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    GROUP BY c.c_custkey, c.c_name
),
NationRevenue AS (
    SELECT n.n_nationkey, n.n_name, SUM(od.total_revenue) AS nation_revenue
    FROM nation n
    LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
    LEFT JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    LEFT JOIN lineitem l ON ps.ps_partkey = l.l_partkey
    LEFT JOIN OrderDetails od ON l.l_orderkey = od.o_orderkey
    GROUP BY n.n_nationkey, n.n_name
)
SELECT
    p.p_name,
    p.p_retailprice,
    p.p_brand,
    ns.nation_revenue,
    cs.total_spent,
    ROW_NUMBER() OVER (PARTITION BY ns.n_name ORDER BY ns.nation_revenue DESC) AS revenue_rank
FROM part p
JOIN PartHierarchy ph ON p.p_partkey = ph.p_partkey
JOIN NationRevenue ns ON ns.nation_revenue > 10000
LEFT JOIN CustomerStats cs ON cs.total_spent IS NOT NULL
WHERE p.p_brand IS NOT NULL AND ph.level < 2
GROUP BY p.p_name, p.p_retailprice, p.p_brand, ns.nation_revenue, cs.total_spent
ORDER BY ns.nation_revenue DESC, cs.avg_spent DESC
LIMIT 100;
