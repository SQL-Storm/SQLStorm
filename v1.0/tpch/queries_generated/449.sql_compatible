
WITH SupplierStats AS (
    SELECT
        s.s_suppkey,
        s.s_name,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_cost,
        COUNT(DISTINCT ps.ps_partkey) AS part_count
    FROM
        supplier s
    JOIN
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY
        s.s_suppkey, s.s_name
),
CustomerOrders AS (
    SELECT
        c.c_custkey,
        c.c_name,
        COUNT(DISTINCT o.o_orderkey) AS order_count,
        SUM(o.o_totalprice) AS total_spent
    FROM
        customer c
    LEFT JOIN
        orders o ON c.c_custkey = o.o_custkey
    WHERE
        c.c_acctbal IS NOT NULL AND c.c_acctbal > 1000
    GROUP BY
        c.c_custkey, c.c_name
),
LineItemSummary AS (
    SELECT
        l.l_orderkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue
    FROM
        lineitem l
    WHERE
        l.l_shipdate >= '1997-01-01' AND l.l_shipdate < '1998-01-01'
    GROUP BY
        l.l_orderkey
)
SELECT
    cs.c_name AS customer_name,
    ss.s_name AS supplier_name,
    ls.total_revenue AS order_revenue,
    ss.total_cost AS supplier_cost,
    ss.part_count AS unique_parts,
    CASE
        WHEN ss.total_cost > 100000 THEN 'High Cost'
        ELSE 'Low Cost'
    END AS cost_category
FROM
    CustomerOrders cs
JOIN
    SupplierStats ss ON cs.order_count > 10
LEFT JOIN
    LineItemSummary ls ON cs.c_custkey IN (
        SELECT o.o_custkey
        FROM orders o
        WHERE o.o_orderkey = ls.l_orderkey
    )
WHERE
    ss.part_count > 5
ORDER BY
    order_revenue DESC
LIMIT 100;
