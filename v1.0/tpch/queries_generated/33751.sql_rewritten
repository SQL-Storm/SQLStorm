WITH RECURSIVE RegionalOrders AS (
    SELECT 
        r.r_name AS region_name,
        COUNT(DISTINCT o.o_orderkey) AS total_orders,
        SUM(o.o_totalprice) AS total_sales,
        RANK() OVER (ORDER BY SUM(o.o_totalprice) DESC) AS sales_rank
    FROM region r
    LEFT JOIN nation n ON r.r_regionkey = n.n_regionkey
    LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
    LEFT JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    LEFT JOIN part p ON ps.ps_partkey = p.p_partkey
    LEFT JOIN lineitem l ON p.p_partkey = l.l_partkey
    LEFT JOIN orders o ON l.l_orderkey = o.o_orderkey
    GROUP BY r.r_name
    HAVING count(DISTINCT o.o_orderkey) > 0
),
FilteredOrders AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        SUM(coalesce(l.l_extendedprice * (1 - l.l_discount), 0)) AS revenue
    FROM customer c
    JOIN orders o ON c.c_custkey = o.o_custkey
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE l.l_returnflag = 'R'
    GROUP BY c.c_custkey, c.c_name
    HAVING SUM(coalesce(l.l_extendedprice * (1 - l.l_discount), 0)) > 1000
),
TopProducts AS (
    SELECT 
        p.p_name,
        SUM(l.l_quantity) AS total_quantity
    FROM lineitem l
    JOIN part p ON l.l_partkey = p.p_partkey
    WHERE l.l_shipdate >= '1997-01-01'
    GROUP BY p.p_name
    ORDER BY total_quantity DESC
    LIMIT 10
)
SELECT 
    r.region_name,
    ro.total_orders,
    ro.total_sales,
    fo.c_custkey,
    fo.c_name,
    fo.revenue,
    tp.p_name,
    tp.total_quantity
FROM RegionalOrders ro
JOIN FilteredOrders fo ON ro.sales_rank <= 5 
CROSS JOIN TopProducts tp
ORDER BY ro.total_sales DESC, fo.revenue DESC;