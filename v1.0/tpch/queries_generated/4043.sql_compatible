
WITH SupplierStats AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_cost,
        COUNT(DISTINCT ps.ps_partkey) AS unique_parts
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey, s.s_name
),
LargeOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_custkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_order_value,
        o.o_orderdate
    FROM 
        orders o
    JOIN 
        lineitem l ON o.o_orderkey = l.l_orderkey
    GROUP BY 
        o.o_orderkey, o.o_custkey, o.o_orderdate
    HAVING 
        SUM(l.l_extendedprice * (1 - l.l_discount)) > 10000
),
RankedOrders AS (
    SELECT 
        lo.o_orderkey,
        RANK() OVER (PARTITION BY lo.o_custkey ORDER BY lo.total_order_value DESC) AS order_rank
    FROM 
        LargeOrders lo
)
SELECT 
    s.s_name AS supplier_name,
    ss.total_supply_cost,
    COUNT(DISTINCT lo.o_orderkey) AS order_count,
    AVG(lo.total_order_value) AS avg_order_value,
    n.n_name AS nation_name
FROM 
    SupplierStats ss
LEFT JOIN 
    supplier s ON ss.s_suppkey = s.s_suppkey
LEFT JOIN 
    nation n ON s.s_nationkey = n.n_nationkey
LEFT JOIN 
    RankedOrders ro ON ss.unique_parts > 5 AND ro.o_orderkey IN (
        SELECT o.o_orderkey FROM LargeOrders o WHERE o.total_order_value > 15000
    )
GROUP BY 
    s.s_name, ss.total_supply_cost, n.n_name
HAVING 
    COUNT(DISTINCT ro.o_orderkey) > 0 
ORDER BY 
    ss.total_supply_cost DESC, avg_order_value DESC;
