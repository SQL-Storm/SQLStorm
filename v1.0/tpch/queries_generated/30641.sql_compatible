
WITH RECURSIVE SupplierHierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal, 0 AS level
    FROM supplier s
    WHERE s.s_acctbal > (SELECT AVG(s_acctbal) FROM supplier)
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal, sh.level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE sh.level < 2
),
FilteredLineItems AS (
    SELECT l.l_orderkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_sales
    FROM lineitem l
    WHERE l.l_discount > 0.1
    GROUP BY l.l_orderkey
),
SupplierStats AS (
    SELECT sh.s_nationkey, COUNT(DISTINCT sh.s_suppkey) AS supplier_count, SUM(sh.s_acctbal) AS total_acctbal
    FROM SupplierHierarchy sh
    GROUP BY sh.s_nationkey
),
ComplexJoin AS (
    SELECT n.n_name, r.r_name, ss.supplier_count, ss.total_acctbal
    FROM nation n
    JOIN region r ON n.n_regionkey = r.r_regionkey
    LEFT JOIN SupplierStats ss ON n.n_nationkey = ss.s_nationkey
)
SELECT cj.n_name AS nation_name, 
       cj.r_name AS region_name, 
       COALESCE(cj.supplier_count, 0) AS total_suppliers,
       COALESCE(cj.total_acctbal, 0.00) AS total_acctbal,
       COUNT(DISTINCT li.l_orderkey) AS order_count, 
       SUM(li.total_sales) AS total_sales
FROM ComplexJoin cj
LEFT JOIN FilteredLineItems li ON cj.n_name = (SELECT n2.n_name FROM nation n2 WHERE n2.n_nationkey = cj.n_nationkey)
GROUP BY cj.n_name, cj.r_name, cj.supplier_count, cj.total_acctbal
HAVING COALESCE(SUM(li.total_sales), 0) > 10000
ORDER BY total_acctbal DESC, order_count ASC
LIMIT 10;
