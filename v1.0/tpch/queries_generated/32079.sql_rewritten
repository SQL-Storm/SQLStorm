WITH RECURSIVE SupplierHierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_acctbal, n.n_nationkey, n.n_name, 1 AS level
    FROM supplier s
    JOIN nation n ON s.s_nationkey = n.n_nationkey
    WHERE s.s_acctbal > 1000
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_acctbal, n.n_nationkey, n.n_name, sh.level + 1
    FROM supplier s
    JOIN nation n ON s.s_nationkey = n.n_nationkey
    JOIN SupplierHierarchy sh ON s.s_acctbal < sh.s_acctbal
    WHERE sh.level < 5
),
OrderStats AS (
    SELECT o.o_orderkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS revenue
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE o.o_orderdate BETWEEN '1995-01-01' AND '1995-12-31'
    GROUP BY o.o_orderkey
),
PartSupplier AS (
    SELECT p.p_partkey, COALESCE(SUM(ps.ps_availqty), 0) AS total_avail_qty, 
           COALESCE(AVG(ps.ps_supplycost), 0) AS avg_supply_cost
    FROM part p
    LEFT JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
    GROUP BY p.p_partkey
)

SELECT n.n_name, COUNT(DISTINCT sh.s_suppkey) AS supplier_count, 
       SUM(os.revenue) AS total_revenue, 
       pt.total_avail_qty, pt.avg_supply_cost,
       ROW_NUMBER() OVER (PARTITION BY n.n_name ORDER BY os.revenue DESC) AS rank
FROM nation n
LEFT JOIN SupplierHierarchy sh ON n.n_nationkey = sh.n_nationkey
LEFT JOIN OrderStats os ON os.o_orderkey IN (
    SELECT o.o_orderkey 
    FROM orders o 
    WHERE o.o_custkey IN(
        SELECT c.c_custkey 
        FROM customer c 
        WHERE c.c_nationkey = n.n_nationkey AND c.c_acctbal > 500
    )
)
LEFT JOIN PartSupplier pt ON sh.s_suppkey = pt.p_partkey
GROUP BY n.n_name, pt.total_avail_qty, pt.avg_supply_cost
HAVING COUNT(DISTINCT sh.s_suppkey) > 0
ORDER BY total_revenue DESC;