
WITH RankedOrders AS (
    SELECT 
        o.o_orderkey, 
        o.o_orderdate, 
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS order_revenue,
        DENSE_RANK() OVER (PARTITION BY EXTRACT(YEAR FROM o.o_orderdate) ORDER BY SUM(l.l_extendedprice * (1 - l.l_discount)) DESC) AS revenue_rank
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE o.o_orderdate BETWEEN DATE '1996-01-01' AND DATE '1996-12-31'
    GROUP BY o.o_orderkey, o.o_orderdate
),
TopRevenueOrders AS (
    SELECT o_orderkey, o_orderdate, order_revenue
    FROM RankedOrders
    WHERE revenue_rank <= 10
),
CustomerOrders AS (
    SELECT 
        c.c_custkey, 
        c.c_name, 
        COUNT(o.o_orderkey) AS total_orders,
        SUM(o.o_totalprice) AS total_spent
    FROM customer c
    JOIN orders o ON c.c_custkey = o.o_custkey
    GROUP BY c.c_custkey, c.c_name
)
SELECT 
    to.o_orderkey,
    to.o_orderdate,
    co.c_custkey,
    co.c_name,
    co.total_orders,
    co.total_spent,
    to.order_revenue
FROM TopRevenueOrders to
JOIN CustomerOrders co ON co.c_custkey IN 
    (SELECT o.o_custkey 
     FROM orders o 
     WHERE o.o_orderkey = to.o_orderkey)
ORDER BY to.order_revenue DESC, co.total_spent DESC;
