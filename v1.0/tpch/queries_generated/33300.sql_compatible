
WITH RECURSIVE SupplierHierarchy AS (
    SELECT s_suppkey, s_name, s_nationkey, s_acctbal, 0 AS hierarchy_level
    FROM supplier
    WHERE s_acctbal IS NOT NULL
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal, sh.hierarchy_level + 1
    FROM supplier s
    INNER JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE s.s_acctbal < sh.s_acctbal
),
RankedOrders AS (
    SELECT o.o_orderkey, o.o_custkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
           RANK() OVER (PARTITION BY o.o_custkey ORDER BY SUM(l.l_extendedprice * (1 - l.l_discount)) DESC) AS rank
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    GROUP BY o.o_orderkey, o.o_custkey
),
NationStats AS (
    SELECT n.n_name, COUNT(DISTINCT s.s_suppkey) AS supplier_count, AVG(s.s_acctbal) AS avg_acctbal
    FROM nation n
    LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
    GROUP BY n.n_name
)
SELECT r.r_name,
       n.n_name,
       COALESCE(ns.supplier_count, 0) AS total_suppliers,
       COALESCE(ns.avg_acctbal, 0) AS avg_supplier_acctbal,
       COUNT(DISTINCT o.o_orderkey) AS total_orders,
       SUM(rog.total_revenue) AS total_revenue
FROM region r
LEFT JOIN nation n ON r.r_regionkey = n.n_regionkey
LEFT JOIN NationStats ns ON n.n_name = ns.n_name
LEFT JOIN RankedOrders rog ON n.n_nationkey = rog.o_custkey
GROUP BY r.r_name, n.n_name, ns.supplier_count, ns.avg_acctbal
HAVING COUNT(DISTINCT o.o_orderkey) > 5
ORDER BY total_revenue DESC NULLS LAST;
