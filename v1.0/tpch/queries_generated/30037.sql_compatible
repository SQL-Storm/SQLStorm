
WITH RECURSIVE SupplierHierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal, 1 AS hierarchy_level
    FROM supplier s
    WHERE s.s_acctbal > 1000
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal * 1.1, sh.hierarchy_level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON sh.s_nationkey = s.s_nationkey
    WHERE sh.hierarchy_level < 5
), OrderedLineItems AS (
    SELECT l.l_orderkey, l.l_partkey, l.l_quantity, l.l_extendedprice,
           SUM(l.l_extendedprice * (1 - l.l_discount)) OVER (PARTITION BY l.l_orderkey) AS total_order_value,
           RANK() OVER (PARTITION BY l.l_orderkey ORDER BY l.l_extendedprice DESC) as item_rank
    FROM lineitem l
    WHERE l.l_returnflag = 'N'
), NationSummary AS (
    SELECT n.n_nationkey, n.n_name,
           COUNT(DISTINCT s.s_suppkey) AS supplier_count,
           SUM(s.s_acctbal) AS total_acctbal
    FROM nation n
    LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
    GROUP BY n.n_nationkey, n.n_name
)
SELECT p.p_partkey, p.p_name, ps.ps_availqty, ps.ps_supplycost,
       ns.n_name, ns.supplier_count, ns.total_acctbal,
       ol.total_order_value,
       CASE 
           WHEN ol.total_order_value IS NULL THEN 'No Order' 
           ELSE 'Order Exists' 
       END AS order_status,
       COUNT(DISTINCT sh.s_suppkey) AS num_levels
FROM part p
JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
LEFT JOIN OrderedLineItems ol ON ps.ps_suppkey = ol.l_suppkey
LEFT JOIN NationSummary ns ON p.p_mfgr = CAST(ns.n_nationkey AS VARCHAR)
LEFT JOIN SupplierHierarchy sh ON ps.ps_suppkey = sh.s_suppkey
WHERE ps.ps_availqty > 10 AND (ps.ps_supplycost < 500 OR ns.total_acctbal IS NULL)
GROUP BY p.p_partkey, p.p_name, ps.ps_availqty, ps.ps_supplycost, ns.n_name, ns.supplier_count, ns.total_acctbal, ol.total_order_value
HAVING COUNT(ol.l_orderkey) > 2
ORDER BY p.p_partkey, num_levels DESC;
