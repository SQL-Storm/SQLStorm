WITH RECURSIVE PartHierarchy AS (
    SELECT p_partkey, p_name, p_mfgr, p_retailprice, 0 AS level
    FROM part
    WHERE p_size < 50
    UNION ALL
    SELECT p.p_partkey, p.p_name, p.p_mfgr, p.p_retailprice, ph.level + 1
    FROM part p
    JOIN PartHierarchy ph ON p.p_size = ph.p_size + 10
), RankedSuppliers AS (
    SELECT s.s_suppkey, s.s_name, s.s_acctbal, ROW_NUMBER() OVER (PARTITION BY s.s_nationkey ORDER BY s.s_acctbal DESC) AS rank
    FROM supplier s
), LineItemSummary AS (
    SELECT l.l_orderkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue
    FROM lineitem l
    WHERE l.l_shipdate >= DATE '1997-01-01' 
      AND l.l_shipdate < DATE '1998-01-01'
    GROUP BY l.l_orderkey
)
SELECT 
    ph.p_name AS part_name,
    ph.p_retailprice,
    rs.s_name AS supplier_name,
    li.total_revenue,
    CASE 
        WHEN li.total_revenue > 1000 THEN 'High Revenue'
        WHEN li.total_revenue BETWEEN 500 AND 1000 THEN 'Medium Revenue'
        ELSE 'Low Revenue'
    END AS revenue_category
FROM PartHierarchy ph
LEFT JOIN RankedSuppliers rs ON ph.p_partkey IN (
    SELECT ps.ps_partkey 
    FROM partsupp ps 
    WHERE ps.ps_supplycost > (
        SELECT AVG(ps_supplycost) 
        FROM partsupp 
        WHERE ps_partkey = ph.p_partkey
    )
)
LEFT JOIN LineItemSummary li ON li.l_orderkey = (
    SELECT o.o_orderkey 
    FROM orders o 
    WHERE o.o_custkey = (
        SELECT c.c_custkey 
        FROM customer c 
        WHERE c.c_nationkey = rs.s_nationkey
        AND c.c_acctbal IS NOT NULL
    )
    ORDER BY o.o_orderdate DESC 
    LIMIT 1
)
WHERE rs.rank = 1
ORDER BY ph.p_name ASC, li.total_revenue DESC;