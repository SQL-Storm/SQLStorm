
WITH RankedParts AS (
    SELECT 
        p.p_partkey,
        p.p_name,
        p.p_retailprice,
        ROW_NUMBER() OVER (PARTITION BY p.p_brand ORDER BY p.p_retailprice DESC) as rn
    FROM part p
    WHERE p.p_retailprice > (SELECT AVG(p2.p_retailprice) FROM part p2)
),
SupplierInfo AS (
    SELECT 
        s.s_suppkey, 
        s.s_name, 
        COALESCE(NULLIF(s.s_address, ''), 'UNKNOWN') AS s_address,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_cost
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY s.s_suppkey, s.s_name, s.s_address
),
CustomerOrders AS (
    SELECT 
        c.c_custkey,
        SUM(o.o_totalprice) AS total_spent,
        COUNT(o.o_orderkey) AS order_count
    FROM customer c
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    GROUP BY c.c_custkey
),
NationRegionInfo AS (
    SELECT 
        n.n_nationkey,
        r.r_regionkey,
        SUM(CASE WHEN np.r_name IS NULL THEN 0 ELSE 1 END) AS regional_count
    FROM nation n
    LEFT JOIN region r ON n.n_regionkey = r.r_regionkey
    LEFT JOIN nation np ON np.n_regionkey = n.n_regionkey
    GROUP BY n.n_nationkey, r.r_regionkey
)
SELECT 
    rp.p_name,
    si.s_name,
    co.total_spent,
    nr.regional_count,
    COUNT(DISTINCT lp.l_orderkey) AS order_count,
    SUM(lp.l_extendedprice * (1 - lp.l_discount)) AS total_revenue,
    MAX(lp.l_tax) AS max_tax
FROM RankedParts rp
JOIN partsupp ps ON rp.p_partkey = ps.ps_partkey
JOIN SupplierInfo si ON ps.ps_suppkey = si.s_suppkey
JOIN lineitem lp ON lp.l_partkey = rp.p_partkey
JOIN CustomerOrders co ON lp.l_orderkey IN (
    SELECT o.o_orderkey 
    FROM orders o 
    WHERE o.o_orderstatus = 'O'
)
LEFT JOIN NationRegionInfo nr ON nr.n_nationkey = si.s_suppkey
WHERE rp.rn = 1
AND si.total_supply_cost IS NOT NULL AND si.total_supply_cost > 1000
GROUP BY rp.p_name, si.s_name, co.total_spent, nr.regional_count
HAVING COUNT(DISTINCT lp.l_orderkey) > 10
ORDER BY total_revenue DESC, rp.p_name ASC
LIMIT 50;
