WITH RecursiveSupplierInfo AS (
    SELECT 
        s.s_suppkey, 
        s.s_name, 
        s.s_acctbal, 
        s.n_nationkey,
        ROW_NUMBER() OVER (PARTITION BY s.s_nationkey ORDER BY s.s_acctbal DESC) AS rank
    FROM 
        supplier s
    WHERE 
        s.s_acctbal IS NOT NULL AND s.s_acctbal > (SELECT AVG(s_acctbal) FROM supplier)
), 
PartRevenue AS (
    SELECT 
        p.p_partkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue
    FROM 
        part p
    JOIN 
        lineitem l ON l.l_partkey = p.p_partkey
    WHERE 
        l.l_returnflag = 'N'
    GROUP BY 
        p.p_partkey
), 
SupplierPartCounts AS (
    SELECT 
        ps.ps_partkey, 
        COUNT(DISTINCT ps.ps_suppkey) AS supplier_count
    FROM 
        partsupp ps
    GROUP BY 
        ps.ps_partkey
), 
HighRevenueParts AS (
    SELECT 
        p.p_partkey, 
        pr.total_revenue
    FROM 
        PartRevenue pr 
    JOIN 
        part p ON p.p_partkey = pr.p_partkey
    WHERE 
        pr.total_revenue > (SELECT AVG(total_revenue) FROM PartRevenue)
)

SELECT 
    r.r_name AS region_name,
    ns.n_name AS nation_name,
    COUNT(DISTINCT c.c_custkey) AS customer_count,
    SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_sales,
    COALESCE(SUM(pr.total_revenue), 0) AS part_revenue,
    COALESCE(SUM(sp.supplier_count), 0) AS supplier_count
FROM 
    region r
LEFT JOIN 
    nation ns ON r.r_regionkey = ns.n_regionkey
LEFT JOIN 
    customer c ON c.c_nationkey = ns.n_nationkey
LEFT JOIN 
    orders o ON o.o_custkey = c.c_custkey
LEFT JOIN 
    lineitem l ON l.l_orderkey = o.o_orderkey
LEFT JOIN 
    HighRevenueParts pr ON pr.p_partkey = l.l_partkey
LEFT JOIN 
    SupplierPartCounts sp ON sp.ps_partkey = pr.p_partkey
WHERE 
    (o.o_orderdate BETWEEN '1996-01-01' AND '1996-12-31' OR o.o_orderstatus IS NULL)
    AND (l.l_shipdate IS NOT NULL OR l.l_commitdate < cast('1998-10-01' as date))
GROUP BY 
    r.r_name, ns.n_name
ORDER BY 
    region_name, nation_name;