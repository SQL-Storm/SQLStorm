
WITH RECURSIVE supplier_hierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, 1 AS level
    FROM supplier s
    WHERE s.s_acctbal > (SELECT AVG(s_acctbal) FROM supplier)

    UNION ALL

    SELECT s.s_suppkey, s.s_name, s.s_nationkey, sh.level + 1
    FROM supplier s
    JOIN supplier_hierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE sh.level < 5
),
top_parts AS (
    SELECT p.p_partkey, p.p_name, SUM(ps.ps_supplycost * ps.ps_availqty) AS total_cost
    FROM part p
    JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
    GROUP BY p.p_partkey, p.p_name
    HAVING SUM(ps.ps_supplycost * ps.ps_availqty) > 1000
    ORDER BY total_cost DESC
    LIMIT 10
),
order_summary AS (
    SELECT o.o_orderkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS order_value
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE o.o_orderdate BETWEEN '1996-01-01' AND '1996-12-31'
    GROUP BY o.o_orderkey
)
SELECT 
    n.n_name,
    r.r_name,
    COUNT(DISTINCT c.c_custkey) AS customer_count,
    SUM(o.order_value) AS total_order_value,
    STRING_AGG(DISTINCT p.p_name, ', ') AS part_names,
    MAX(s.s_acctbal) AS highest_supplier_balance
FROM nation n
LEFT JOIN region r ON n.n_regionkey = r.r_regionkey
LEFT JOIN customer c ON n.n_nationkey = c.c_nationkey
LEFT JOIN order_summary o ON c.c_custkey = o.o_orderkey
LEFT JOIN top_parts p ON o.o_orderkey = p.p_partkey
LEFT JOIN supplier_hierarchy s ON c.c_nationkey = s.s_nationkey
GROUP BY n.n_name, r.r_name
HAVING COUNT(DISTINCT c.c_custkey) > 5 AND MAX(s.s_acctbal) IS NOT NULL
ORDER BY total_order_value DESC;
