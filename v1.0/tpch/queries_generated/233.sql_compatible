
WITH RankedSuppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        s.s_acctbal,
        RANK() OVER (PARTITION BY p.p_partkey ORDER BY ps.ps_supplycost ASC) AS supplier_rank
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    JOIN 
        part p ON ps.ps_partkey = p.p_partkey
),
CustomerOrders AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        COUNT(o.o_orderkey) AS total_orders,
        SUM(o.o_totalprice) AS total_spent
    FROM 
        customer c
    LEFT JOIN 
        orders o ON c.c_custkey = o.o_custkey
    GROUP BY 
        c.c_custkey, c.c_name
),
OrderLineItems AS (
    SELECT 
        o.o_orderkey,
        l.l_partkey,
        l.l_quantity,
        l.l_extendedprice,
        l.l_discount,
        l.l_tax
    FROM 
        orders o
    JOIN 
        lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE 
        l.l_returnflag = 'N'
),
SupplierStats AS (
    SELECT 
        rank.s_suppkey,
        s.s_name,
        SUM(ol.l_extendedprice * (1 - ol.l_discount)) AS total_sales
    FROM 
        RankedSuppliers rank
    JOIN 
        OrderLineItems ol ON ol.l_partkey = rank.s_suppkey
    JOIN 
        supplier s ON rank.s_suppkey = s.s_suppkey
    GROUP BY 
        rank.s_suppkey, s.s_name
)
SELECT 
    co.c_name,
    COALESCE(cs.total_orders, 0) AS order_count,
    COALESCE(ss.total_sales, 0) AS supplier_sales,
    COALESCE(rs.supplier_rank, 0) AS supplier_rank
FROM 
    CustomerOrders co
LEFT JOIN 
    SupplierStats ss ON ss.s_suppkey = co.c_custkey
LEFT JOIN 
    RankedSuppliers rs ON rs.s_suppkey = co.c_custkey
WHERE 
    (ss.total_sales > 10000 OR co.total_spent > 5000)
ORDER BY 
    co.total_spent DESC, ss.total_sales DESC;
