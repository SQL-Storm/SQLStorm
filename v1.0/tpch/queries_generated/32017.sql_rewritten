WITH RECURSIVE SupplierHierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_acctbal, s.s_nationkey, 1 AS level
    FROM supplier s
    WHERE s.s_acctbal > (SELECT AVG(s2.s_acctbal) FROM supplier s2)

    UNION ALL

    SELECT s.s_suppkey, s.s_name, s.s_acctbal, s.s_nationkey, sh.level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE s.s_acctbal > sh.s_acctbal
), 
RegionSupply AS (
    SELECT r.r_name, SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_cost
    FROM region r
    LEFT JOIN nation n ON r.r_regionkey = n.n_regionkey
    LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
    LEFT JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY r.r_name
),
OrderStatistics AS (
    SELECT o.o_orderkey, o.o_totalprice, DENSE_RANK() OVER (ORDER BY o.o_totalprice DESC) AS rank_order
    FROM orders o
    WHERE o.o_orderdate >= DATE '1997-01-01'
)
SELECT 
    rh.s_name,
    rh.level,
    rs.r_name,
    rs.total_supply_cost,
    os.o_totalprice,
    CASE 
        WHEN os.rank_order <= 5 THEN 'Top 5 Order'
        ELSE 'Other Orders'
    END AS order_category
FROM SupplierHierarchy rh
FULL OUTER JOIN RegionSupply rs ON rh.s_nationkey = (SELECT n.n_nationkey FROM nation n WHERE n.n_nationkey = rh.s_nationkey)
INNER JOIN OrderStatistics os ON os.o_orderkey IN (
    SELECT l.l_orderkey
    FROM lineitem l
    WHERE l.l_quantity > 0 AND l.l_discount > 0.1
)
WHERE rh.s_acctbal IS NOT NULL OR rs.total_supply_cost IS NULL
ORDER BY rh.level, rs.total_supply_cost DESC;