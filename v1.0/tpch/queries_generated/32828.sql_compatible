
WITH RECURSIVE nation_hierarchy AS (
    SELECT n_nationkey, n_name, n_regionkey, 0 AS level
    FROM nation
    WHERE n_nationkey = 1
    UNION ALL
    SELECT n.n_nationkey, n.n_name, n.n_regionkey, nh.level + 1
    FROM nation n
    JOIN nation_hierarchy nh ON n.n_regionkey = nh.n_nationkey
),
supplier_summary AS (
    SELECT s.s_nationkey, SUM(s.s_acctbal) AS total_acctbal, COUNT(DISTINCT s.s_suppkey) AS num_suppliers
    FROM supplier s
    GROUP BY s.s_nationkey
),
part_profit AS (
    SELECT ps.ps_partkey,
           SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
           SUM(COALESCE(l.l_discount, 0) * l.l_extendedprice) AS total_discount
    FROM partsupp ps
    JOIN lineitem l ON ps.ps_partkey = l.l_partkey
    GROUP BY ps.ps_partkey
),
ranked_parts AS (
    SELECT p.p_partkey,
           p.p_name,
           pp.total_revenue,
           RANK() OVER (ORDER BY pp.total_revenue DESC) AS revenue_rank
    FROM part p
    JOIN part_profit pp ON p.p_partkey = pp.ps_partkey
)
SELECT n.n_name,
       SUM(ps.total_acctbal) AS total_supplier_acctbal,
       COUNT(rp.p_partkey) AS high_profit_parts,
       AVG(rp.total_revenue) AS avg_revenue_per_part
FROM nation_hierarchy n
LEFT JOIN supplier_summary ps ON n.n_nationkey = ps.s_nationkey
LEFT JOIN ranked_parts rp ON n.n_nationkey = (SELECT s.s_nationkey FROM supplier s WHERE s.s_suppkey = rp.p_partkey)
WHERE ps.total_acctbal IS NOT NULL
  AND n.level < 3
GROUP BY n.n_name, ps.total_acctbal
HAVING COUNT(rp.p_partkey) > 0
ORDER BY total_supplier_acctbal DESC, avg_revenue_per_part DESC;
