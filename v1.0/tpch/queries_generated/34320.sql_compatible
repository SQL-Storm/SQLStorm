
WITH RECURSIVE SupplierHierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, 0 AS level
    FROM supplier s
    WHERE s.s_acctbal > (SELECT AVG(s_acctbal) FROM supplier WHERE s_nationkey = s.s_nationkey)

    UNION ALL

    SELECT s.s_suppkey, s.s_name, s.s_nationkey, sh.level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE s.s_acctbal > (SELECT AVG(s_acctbal) FROM supplier WHERE s_nationkey = s.nationkey) AND sh.level < 10
),
OrderDetails AS (
    SELECT o.o_orderkey, o.o_orderdate, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_sales
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE o.o_orderstatus = 'O' AND l.l_quantity > 0
    GROUP BY o.o_orderkey, o.o_orderdate
),
SupplierOrder AS (
    SELECT s.s_name, SUM(od.total_sales) AS supplier_total_sales
    FROM SupplierHierarchy sh
    JOIN partsupp ps ON sh.s_suppkey = ps.ps_suppkey
    JOIN part p ON ps.ps_partkey = p.p_partkey
    JOIN OrderDetails od ON p.p_partkey = od.o_orderkey
    JOIN supplier s ON sh.s_suppkey = s.s_suppkey
    GROUP BY s.s_name
)
SELECT s.s_name, s.s_acctbal, COALESCE(so.supplier_total_sales, 0) AS supplier_total_sales,
       CASE 
           WHEN so.supplier_total_sales IS NULL THEN 'No Sales'
           ELSE 'Sales Recorded'
       END AS sales_status
FROM supplier s
LEFT JOIN SupplierOrder so ON s.s_name = so.s_name
WHERE s.s_acctbal < (
    SELECT AVG(s_acctbal) 
    FROM supplier 
    WHERE s_nationkey IN (SELECT n.nationkey FROM nation n WHERE n.regionkey = (SELECT r.regionkey FROM region r WHERE r.r_name = 'ASIA'))
)
ORDER BY supplier_total_sales DESC, s.s_name ASC;
