WITH RecursiveSupplierCTE AS (
    SELECT s_suppkey, s_name, s_acctbal, 
           ROW_NUMBER() OVER (PARTITION BY s_nationkey ORDER BY s_acctbal DESC) as rnk
    FROM supplier
    WHERE s_acctbal IS NOT NULL
),
FrequentCustomers AS (
    SELECT c_nationkey, COUNT(DISTINCT o_orderkey) AS order_count 
    FROM customer 
    JOIN orders ON c_custkey = o_custkey 
    WHERE o_orderdate >= '1997-01-01' 
    GROUP BY c_nationkey
),
RegionSupplier AS (
    SELECT r.r_name, s.s_name, s.s_acctbal
    FROM region r 
    LEFT JOIN nation n ON r.r_regionkey = n.n_regionkey
    LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
)
SELECT 
    r.r_name AS region_name,
    COALESCE(s.s_name, 'Unknown') AS supplier_name,
    AVG(ps.ps_supplycost) AS average_supply_cost,
    MAX(ps.ps_availqty) AS max_available_qty,
    SUM(CASE WHEN l.l_returnflag = 'R' THEN l.l_quantity ELSE 0 END) AS total_returned_quantity,
    COUNT(DISTINCT CASE WHEN c.c_mktsegment = 'BUILDING' THEN c.c_custkey END) AS building_customers,
    COUNT(c.c_custkey) FILTER (WHERE c.c_acctbal > 2000 OR c.c_acctbal IS NULL) AS high_or_null_balance_customers,
    RANK() OVER (PARTITION BY s.s_nationkey ORDER BY SUM(l.l_extendedprice * (1 - l.l_discount)) DESC) AS sales_rank
FROM partsupp ps
JOIN lineitem l ON ps.ps_partkey = l.l_partkey
JOIN RegionSupplier s ON l.l_suppkey = s.s_suppkey
JOIN FrequentCustomers f ON f.c_nationkey = s.s_nationkey
JOIN customer c ON c.c_nationkey = f.c_nationkey
LEFT JOIN RecursiveSupplierCTE rcte ON rcte.s_suppkey = s.s_suppkey AND rcte.rnk = 1
WHERE ps.ps_supplycost BETWEEN 0 AND 100 
AND s.s_acctbal IS NOT NULL 
GROUP BY r.r_name, s.s_name
HAVING AVG(ps.ps_supplycost) > (SELECT AVG(ps_supplycost) FROM partsupp WHERE ps_availqty IS NOT NULL)
ORDER BY region_name, sales_rank;