
WITH RankedSuppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        n.n_name AS nation_name,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_cost,
        ROW_NUMBER() OVER (PARTITION BY n.n_nationkey ORDER BY SUM(ps.ps_supplycost * ps.ps_availqty) DESC) AS rank
    FROM 
        supplier s
    JOIN 
        nation n ON s.s_nationkey = n.n_nationkey
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey, s.s_name, n.n_name
),
CustomerOrders AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        o.o_orderkey,
        o.o_orderstatus,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue
    FROM 
        customer c
    JOIN 
        orders o ON c.c_custkey = o.o_custkey
    JOIN 
        lineitem l ON o.o_orderkey = l.l_orderkey
    GROUP BY 
        c.c_custkey, c.c_name, o.o_orderkey, o.o_orderstatus
)
SELECT 
    rs.nation_name,
    COUNT(DISTINCT co.c_custkey) AS number_of_customers,
    AVG(co.total_revenue) AS avg_order_revenue,
    MAX(rs.total_cost) AS max_supply_cost,
    MIN(rs.total_cost) AS min_supply_cost
FROM 
    RankedSuppliers rs
JOIN 
    CustomerOrders co ON rs.s_suppkey = co.o_orderkey
GROUP BY 
    rs.nation_name
HAVING 
    COUNT(DISTINCT co.c_custkey) > 50
ORDER BY 
    avg_order_revenue DESC, number_of_customers DESC;
