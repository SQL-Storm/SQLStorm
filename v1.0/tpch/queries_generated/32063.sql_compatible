
WITH RECURSIVE SupplierHierarchy AS (
    SELECT s_nationkey, s_suppkey, s_name, 1 AS level
    FROM supplier
    WHERE s_acctbal > (SELECT AVG(s_acctbal) FROM supplier)
    UNION ALL
    SELECT s.s_nationkey, s.s_suppkey, s.s_name, sh.level + 1
    FROM supplier s
    INNER JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE s.s_acctbal > (SELECT AVG(s_acctbal) FROM supplier) AND sh.level < 5
),
NationDetails AS (
    SELECT n.n_nationkey, n.n_name, COUNT(s.s_suppkey) AS supplier_count
    FROM nation n
    LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
    GROUP BY n.n_nationkey, n.n_name
),
OrderLineItem AS (
    SELECT o.o_orderkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_price
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE o.o_orderdate >= DATE '1997-01-01' AND o.o_orderdate < DATE '1998-01-01'
    GROUP BY o.o_orderkey
),
TopCustomers AS (
    SELECT c.c_custkey, c.c_name, SUM(ol.total_price) AS total_spent
    FROM customer c
    JOIN OrderLineItem ol ON c.c_custkey = ol.o_orderkey
    GROUP BY c.c_custkey, c.c_name
    ORDER BY total_spent DESC
    LIMIT 10
)
SELECT n.n_name, nd.supplier_count, tc.c_name, tc.total_spent
FROM NationDetails nd
LEFT JOIN SupplierHierarchy sh ON nd.n_nationkey = sh.s_nationkey
LEFT JOIN TopCustomers tc ON nd.supplier_count > 0 
WHERE nd.supplier_count IS NOT NULL
  AND (tc.total_spent IS NULL OR tc.total_spent > 5000)
ORDER BY nd.supplier_count DESC, tc.total_spent DESC;
