WITH SupplierOrders AS (
    SELECT
        s.s_suppkey,
        s.s_name,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
        COUNT(DISTINCT o.o_orderkey) AS order_count
    FROM
        supplier s
    JOIN
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    JOIN
        lineitem l ON ps.ps_partkey = l.l_partkey
    JOIN
        orders o ON l.l_orderkey = o.o_orderkey
    WHERE
        o.o_orderstatus = 'O' AND
        l.l_shipdate >= '1997-01-01' AND
        l.l_shipdate < '1997-10-01'
    GROUP BY
        s.s_suppkey, s.s_name
),
RankedSuppliers AS (
    SELECT
        s.s_suppkey,
        s.s_name,
        so.total_revenue,
        so.order_count,
        RANK() OVER (ORDER BY so.total_revenue DESC) AS revenue_rank
    FROM
        SupplierOrders so
    JOIN
        supplier s ON s.s_suppkey = so.s_suppkey
)
SELECT
    r.r_name,
    COUNT(DISTINCT rs.s_suppkey) AS number_of_suppliers,
    AVG(rs.total_revenue) AS avg_revenue,
    SUM(rs.order_count) AS total_orders,
    MAX(rs.total_revenue) AS max_revenue
FROM
    RankedSuppliers rs
JOIN
    nation n ON rs.s_suppkey = n.n_nationkey
JOIN
    region r ON n.n_regionkey = r.r_regionkey
GROUP BY
    r.r_name
HAVING
    MAX(rs.total_revenue) > 100000
UNION ALL
SELECT
    r.r_name,
    COUNT(DISTINCT s.s_suppkey) AS number_of_suppliers,
    AVG(COALESCE(ps.ps_supplycost, 0)) AS avg_supply_cost,
    SUM(COALESCE(ps.ps_availqty, 0)) AS total_available_quantity,
    NULL AS max_revenue
FROM
    partsupp ps
LEFT JOIN
    supplier s ON ps.ps_suppkey = s.s_suppkey
JOIN
    nation n ON s.s_nationkey = n.n_nationkey
JOIN
    region r ON n.n_regionkey = r.r_regionkey
WHERE
    ps.ps_availqty > (SELECT AVG(ps_availqty) FROM partsupp)
GROUP BY
    r.r_name
ORDER BY
    r.r_name;