
WITH RankedOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_orderdate,
        o.o_totalprice,
        ROW_NUMBER() OVER (PARTITION BY o.o_custkey ORDER BY o.o_orderdate DESC) AS rn,
        o.o_custkey
    FROM 
        orders o
),
CustomerNation AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        n.n_name AS nation_name,
        SUM(o.o_totalprice) AS total_spent
    FROM 
        customer c
    JOIN 
        nation n ON c.c_nationkey = n.n_nationkey
    LEFT JOIN 
        orders o ON c.c_custkey = o.o_custkey
    GROUP BY 
        c.c_custkey, c.c_name, n.n_name
),
SupplierPart AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        p.p_name,
        ps.ps_supplycost,
        SUM(ps.ps_availqty) AS total_available
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    JOIN 
        part p ON ps.ps_partkey = p.p_partkey
    GROUP BY 
        s.s_suppkey, s.s_name, p.p_name, ps.ps_supplycost
)
SELECT 
    cn.nation_name,
    COUNT(DISTINCT co.o_orderkey) AS total_orders,
    SUM(co.total_spent) AS total_revenue,
    AVG(sp.total_available) AS avg_available,
    MIN(sp.ps_supplycost) AS min_supply_cost,
    MAX(sp.ps_supplycost) AS max_supply_cost,
    STRING_AGG(DISTINCT sp.p_name, ', ') AS products_supplied
FROM 
    CustomerNation cn
LEFT JOIN 
    RankedOrders co ON cn.c_custkey = co.o_custkey AND co.rn = 1
LEFT JOIN 
    SupplierPart sp ON sp.s_suppkey = (
        SELECT ps.ps_suppkey 
        FROM partsupp ps 
        WHERE ps.ps_partkey IN (
            SELECT p.p_partkey 
            FROM part p 
            WHERE p.p_retailprice > 100.00
        )
        LIMIT 1
    )
GROUP BY 
    cn.nation_name
HAVING 
    SUM(co.total_spent) > 1000.00
ORDER BY 
    total_revenue DESC;
