WITH RECURSIVE OrderHierarchy AS (
    SELECT o.o_orderkey, o.o_orderdate, o.o_totalprice, 1 AS order_level
    FROM orders o
    WHERE o.o_orderdate >= DATE '1996-01-01'
    UNION ALL
    SELECT o.o_orderkey, o.o_orderdate, o.o_totalprice, oh.order_level + 1
    FROM orders o
    JOIN OrderHierarchy oh ON o.o_orderkey > oh.o_orderkey
    WHERE o.o_orderstatus = 'O'
),
SupplierStats AS (
    SELECT s.s_suppkey, s.s_name, SUM(ps.ps_supplycost * ps.ps_availqty) AS total_cost
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY s.s_suppkey, s.s_name
    HAVING SUM(ps.ps_availqty) > 0
),
LineItemStats AS (
    SELECT l.l_orderkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS revenue, COUNT(*) AS item_count
    FROM lineitem l
    WHERE l.l_returnflag = 'N'
    GROUP BY l.l_orderkey
)
SELECT r.r_name, 
       COALESCE(SUM(ls.revenue), 0) AS total_revenue, 
       COALESCE(SUM(ss.total_cost), 0) AS total_supplier_cost, 
       AVG(oh.o_totalprice) AS avg_order_price, 
       COUNT(DISTINCT o.o_orderkey) AS unique_orders
FROM region r
LEFT JOIN nation n ON r.r_regionkey = n.n_regionkey
LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
LEFT JOIN SupplierStats ss ON s.s_suppkey = ss.s_suppkey
LEFT JOIN LineItemStats ls ON ss.s_suppkey = ls.l_orderkey
LEFT JOIN OrderHierarchy oh ON ls.l_orderkey = oh.o_orderkey
WHERE r.r_name LIKE 'S%' 
  AND (n.n_comment IS NULL OR n.n_comment NOT LIKE '%dummy%')
GROUP BY r.r_name
ORDER BY total_revenue DESC
LIMIT 10;