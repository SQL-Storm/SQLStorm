
WITH RankedParts AS (
    SELECT 
        p.p_partkey, 
        p.p_name, 
        p.p_brand, 
        p.p_container, 
        p.p_retailprice,
        p.p_size,
        ROW_NUMBER() OVER (PARTITION BY p.p_brand ORDER BY p.p_retailprice DESC) AS rn
    FROM part p
    WHERE p.p_retailprice IS NOT NULL
),
SupplierAvailability AS (
    SELECT 
        ps.ps_partkey, 
        SUM(ps.ps_availqty) AS total_availqty
    FROM partsupp ps
    GROUP BY ps.ps_partkey
    HAVING SUM(ps.ps_availqty) > 0
),
CustomerOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_custkey,
        o.o_orderdate,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_spent
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE l.l_returnflag = 'N'
    GROUP BY o.o_orderkey, o.o_custkey, o.o_orderdate
),
CombinedData AS (
    SELECT 
        r.r_name AS region_name,
        n.n_name AS nation_name,
        s.s_name AS supplier_name,
        cp.p_name AS product_name,
        cp.total_spent,
        sa.total_availqty,
        ROW_NUMBER() OVER (PARTITION BY r.r_regionkey ORDER BY cp.total_spent DESC) AS regional_rank
    FROM region r
    JOIN nation n ON n.n_regionkey = r.r_regionkey
    JOIN supplier s ON s.s_nationkey = n.n_nationkey
    JOIN SupplierAvailability sa ON sa.ps_partkey IN (
        SELECT p.p_partkey 
        FROM RankedParts p 
        WHERE p.rn = 1 AND p.p_retailprice > 100
    )
    LEFT JOIN CustomerOrders cp ON cp.o_custkey = s.s_suppkey
)
SELECT 
    region_name, 
    nation_name, 
    supplier_name, 
    product_name,
    COALESCE(total_spent, 0) AS total_spent,
    COALESCE(total_availqty, 0) AS total_availqty,
    CASE 
        WHEN total_spent IS NULL THEN 'No Orders'
        ELSE 'Active Customer'
    END AS customer_status
FROM CombinedData
WHERE (total_spent > 500 OR total_availqty < 20)
ORDER BY region_name, total_spent DESC
LIMIT 10;
