WITH RECURSIVE nation_costs AS (
    SELECT n.n_nationkey, n.n_name, SUM(ps.ps_supplycost * ps.ps_availqty) AS total_cost
    FROM nation n
    JOIN supplier s ON n.n_nationkey = s.s_nationkey
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY n.n_nationkey, n.n_name
),
ranked_orders AS (
    SELECT o.o_orderkey, o.o_totalprice,
           ROW_NUMBER() OVER (PARTITION BY o.o_orderpriority ORDER BY o.o_totalprice DESC) AS order_rank
    FROM orders o
    WHERE o.o_orderdate BETWEEN DATE '1997-01-01' AND DATE '1997-12-31'
),
part_summary AS (
    SELECT p.p_partkey, AVG(p.p_retailprice) AS avg_price,
           COUNT(DISTINCT ps.ps_suppkey) AS supplier_count
    FROM part p
    LEFT JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
    GROUP BY p.p_partkey
),
customer_summary AS (
    SELECT c.c_custkey, SUM(o.o_totalprice) AS total_spent,
           COUNT(DISTINCT o.o_orderkey) AS order_count
    FROM customer c
    JOIN orders o ON c.c_custkey = o.o_custkey
    GROUP BY c.c_custkey
)
SELECT nc.n_name, COALESCE(nc.total_cost, 0) AS total_cost,
       ps.p_partkey, ps.avg_price, ps.supplier_count,
       cs.total_spent, cs.order_count
FROM nation_costs nc
FULL OUTER JOIN part_summary ps ON ps.p_partkey IN (SELECT p_partkey FROM part WHERE p_size > 10)
FULL OUTER JOIN customer_summary cs ON nc.n_nationkey = cs.c_custkey
WHERE (nc.total_cost > 100000 OR nc.total_cost IS NULL)
  AND (cs.total_spent > 5000 OR cs.total_spent IS NULL)
ORDER BY nc.n_name, ps.avg_price DESC
LIMIT 50;