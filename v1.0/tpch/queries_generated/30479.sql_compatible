
WITH RECURSIVE SupplierHierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, 0 AS level
    FROM supplier s
    WHERE s.s_acctbal > 1000
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, sh.level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE sh.level < 5
),
TotalOrderCost AS (
    SELECT o.o_orderkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_cost
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    GROUP BY o.o_orderkey
),
HighestCostOrder AS (
    SELECT o.o_orderkey AS order_key, total_cost,
           DENSE_RANK() OVER (ORDER BY total_cost DESC) AS rnk
    FROM TotalOrderCost
),
NationSummary AS (
    SELECT n.n_nationkey, COUNT(DISTINCT c.c_custkey) AS cust_count, 
           SUM(s.s_acctbal) AS total_acctbal,
           AVG(s.s_acctbal) AS avg_acctbal
    FROM nation n
    LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
    LEFT JOIN customer c ON n.n_nationkey = c.c_nationkey
    GROUP BY n.n_nationkey
)
SELECT ns.n_nationkey, ns.cust_count, ns.total_acctbal, ns.avg_acctbal, 
       hco.total_cost, 
       COALESCE(NULLIF(hco.total_cost, 0), NULL) AS safe_cost,
       sh.level
FROM NationSummary ns
LEFT JOIN HighestCostOrder hco ON ns.n_nationkey = (
    SELECT s.s_nationkey 
    FROM supplier s 
    WHERE s.s_suppkey = hco.order_key 
    LIMIT 1
)
LEFT JOIN SupplierHierarchy sh ON ns.n_nationkey = sh.s_nationkey
WHERE ns.cust_count > 5
ORDER BY ns.total_acctbal DESC, hco.total_cost DESC;
