WITH RECURSIVE ranked_orders AS (
    SELECT o_orderkey, o_custkey, o_totalprice, o_orderdate,
           RANK() OVER (PARTITION BY o_custkey ORDER BY o_totalprice DESC) AS price_rank
    FROM orders
    WHERE o_orderdate >= '1995-01-01'
), 
customer_counts AS (
    SELECT c_nationkey, COUNT(DISTINCT c_custkey) AS cust_count
    FROM customer
    GROUP BY c_nationkey
), 
high_value_parts AS (
    SELECT p_partkey, p_name, p_retailprice
    FROM part
    WHERE p_retailprice > (
        SELECT AVG(p_retailprice) FROM part
    )
), 
supplier_info AS (
    SELECT s_nationkey, SUM(s_acctbal) AS total_acctbal 
    FROM supplier 
    GROUP BY s_nationkey
), 
order_summary AS (
    SELECT l_orderkey, SUM(l_extendedprice * (1 - l_discount)) AS total_revenue
    FROM lineitem
    WHERE l_shipdate BETWEEN cast('1998-10-01' as date) - INTERVAL '1 year' AND cast('1998-10-01' as date)
    GROUP BY l_orderkey
)
SELECT 
    n.n_name AS nation_name,
    COALESCE(COUNT(DISTINCT c.c_custkey), 0) AS customer_count,
    COALESCE(SUM(s.total_acctbal), 0) AS total_supplier_balance,
    COUNT(DISTINCT r.partitioned_key) AS high_value_parts_count,
    AVG(o.total_revenue) AS avg_order_revenue,
    MAX(o.total_revenue) FILTER (WHERE o.price_rank = 1) AS max_revenue_order
FROM nation n
LEFT JOIN customer_counts cc ON n.n_nationkey = cc.c_nationkey
LEFT JOIN supplier_info s ON n.n_nationkey = s.s_nationkey
LEFT JOIN high_value_parts p ON p.p_partkey IN (
    SELECT ps.ps_partkey FROM partsupp ps
    WHERE ps.ps_supplycost < 10 OR ps.ps_supplycost IS NULL
)
LEFT JOIN (
    SELECT o.orderkey, o.total_revenue, r.price_rank
    FROM order_summary o
    LEFT JOIN ranked_orders r ON o.l_orderkey = r.o_orderkey
) AS o ON n.n_nationkey = o.o_custkey
LEFT JOIN (
    SELECT DISTINCT r.partitioned_key
    FROM ranked_orders r
    WHERE r.price_rank < 5
) AS r ON r.partitioned_key = o.orderkey
GROUP BY n.n_name
HAVING COUNT(DISTINCT c.c_custkey) > 0
ORDER BY total_supplier_balance DESC NULLS LAST;