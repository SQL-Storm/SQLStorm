WITH RankedParts AS (
    SELECT 
        p.p_partkey, 
        p.p_name, 
        p.p_retailprice,
        RANK() OVER (PARTITION BY p.p_brand ORDER BY p.p_retailprice DESC) as price_rank
    FROM part p
),
HighValueSuppliers AS (
    SELECT 
        s.s_suppkey, 
        s.s_name, 
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_value
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY s.s_suppkey, s.s_name
    HAVING SUM(ps.ps_supplycost * ps.ps_availqty) > 100000
),
RecentOrders AS (
    SELECT 
        o.o_orderkey, 
        o.o_orderdate, 
        o.o_totalprice, 
        c.c_mktsegment
    FROM orders o
    JOIN customer c ON o.o_custkey = c.c_custkey
    WHERE o.o_orderdate > cast('1998-10-01' as date) - INTERVAL '1 YEAR'
),
BrazenCustomers AS (
    SELECT 
        c.c_custkey,
        COUNT(DISTINCT o.o_orderkey) as order_count
    FROM customer c
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    GROUP BY c.c_custkey
    HAVING COUNT(DISTINCT o.o_orderkey) > 5
)
SELECT 
    ns.n_name, 
    AVG(COALESCE(rp.p_retailprice, 0)) AS avg_price,
    MAX(cv.total_supply_value) AS max_supply_value,
    SUM(RO.o_totalprice) AS total_recent_orders
FROM nation ns
LEFT JOIN RankedParts rp ON ns.n_nationkey = (SELECT DISTINCT n.n_nationkey FROM nation n WHERE n.n_name = 'USA') 
LEFT JOIN HighValueSuppliers cv ON cv.s_suppkey IN (SELECT ps.ps_suppkey FROM partsupp ps WHERE ps.ps_availqty > 50)
LEFT JOIN RecentOrders RO ON RO.o_orderkey IN (SELECT l.l_orderkey FROM lineitem l WHERE l.l_discount = 0.05)
LEFT JOIN BrazenCustomers bc ON bc.c_custkey = (CASE WHEN COUNT(bc.c_custkey) IS NULL THEN 0 ELSE MAX(bc.c_custkey) END)
GROUP BY ns.n_name
HAVING AVG(rp.p_retailprice) IS NOT NULL
   OR MAX(cv.total_supply_value) IS NOT NULL
   OR SUM(RO.o_totalprice) > 10000
ORDER BY avg_price DESC NULLS LAST;