WITH SupplierSummary AS (
    SELECT 
        s.s_suppkey, 
        s.s_name, 
        SUM(ps.ps_availqty) AS total_available_qty,
        AVG(ps.ps_supplycost) AS avg_supply_cost
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey, s.s_name
),
CustomerOrders AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        COUNT(o.o_orderkey) AS order_count,
        SUM(o.o_totalprice) AS total_spent
    FROM 
        customer c
    LEFT JOIN 
        orders o ON c.c_custkey = o.o_custkey
    GROUP BY 
        c.c_custkey, c.c_name
),
OrderLineSummary AS (
    SELECT 
        o.o_orderkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_value,
        COUNT(l.l_linenumber) AS item_count
    FROM 
        orders o
    JOIN 
        lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE 
        l.l_shipdate >= '1996-01-01' AND l.l_shipdate < '1997-01-01'
    GROUP BY 
        o.o_orderkey
)
SELECT 
    s.s_name,
    c.c_name,
    cs.total_available_qty,
    cs.avg_supply_cost,
    co.order_count,
    co.total_spent,
    ol.total_value,
    ol.item_count
FROM 
    SupplierSummary cs
FULL OUTER JOIN 
    CustomerOrders co ON cs.s_suppkey = co.c_custkey
LEFT JOIN 
    OrderLineSummary ol ON co.order_count > 0 AND ol.total_value > 1000
WHERE 
    cs.total_available_qty IS NOT NULL OR 
    co.total_spent > 10000
ORDER BY 
    cs.total_available_qty DESC NULLS LAST, 
    co.total_spent DESC;