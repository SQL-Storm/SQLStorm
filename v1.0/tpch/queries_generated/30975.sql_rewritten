WITH RECURSIVE OrderSummary AS (
    SELECT 
        o.o_orderkey,
        o.o_orderdate,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_price,
        ROW_NUMBER() OVER (PARTITION BY o.o_orderkey ORDER BY SUM(l.l_extendedprice * (1 - l.l_discount)) DESC) AS order_rank
    FROM 
        orders o
    JOIN 
        lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE 
        l.l_shipdate BETWEEN '1997-01-01' AND '1997-12-31'
    GROUP BY 
        o.o_orderkey, o.o_orderdate
),
TopOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_orderdate,
        total_price
    FROM 
        OrderSummary o
    WHERE 
        order_rank <= 10
),
SupplierParts AS (
    SELECT 
        DISTINCT p.p_partkey,
        p.p_name,
        s.s_suppkey,
        ps.ps_availqty,
        ps.ps_supplycost
    FROM 
        partsupp ps
    JOIN 
        supplier s ON ps.ps_suppkey = s.s_suppkey
    JOIN 
        part p ON ps.ps_partkey = p.p_partkey
    WHERE 
        ps.ps_availqty > 0
),
BorderlineNations AS (
    SELECT 
        n.n_nationkey,
        n.n_name,
        r.r_name
    FROM 
        nation n
    JOIN 
        region r ON n.n_regionkey = r.r_regionkey
    WHERE 
        n.n_comment LIKE '%borderline%'
)
SELECT 
    o.o_orderkey,
    o.o_orderdate,
    tp.p_name,
    SUM(sp.ps_supplycost * sp.ps_availqty) AS total_supply_cost,
    bn.n_name AS nation_name
FROM 
    TopOrders o
LEFT JOIN 
    lineitem l ON o.o_orderkey = l.l_orderkey
JOIN 
    SupplierParts sp ON l.l_partkey = sp.p_partkey
LEFT JOIN 
    BorderlineNations bn ON sp.s_suppkey = (SELECT s.s_suppkey 
                                              FROM supplier s 
                                              WHERE s.s_nationkey = bn.n_nationkey 
                                              LIMIT 1)
WHERE 
    o.o_orderdate IS NOT NULL
GROUP BY 
    o.o_orderkey, o.o_orderdate, tp.p_name, bn.n_name
HAVING 
    SUM(sp.ps_supplycost * sp.ps_availqty) > 1000
ORDER BY 
    o.o_orderdate DESC, total_supply_cost DESC;