
WITH RankedSuppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_cost,
        ROW_NUMBER() OVER (PARTITION BY s.s_nationkey ORDER BY SUM(ps.ps_supplycost * ps.ps_availqty) DESC) AS rank
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey, s.s_name, s.s_nationkey
),
OrderedCustomers AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        c.c_acctbal,
        RANK() OVER (ORDER BY c.c_acctbal DESC) AS account_rank
    FROM 
        customer c
    WHERE 
        c.c_acctbal IS NOT NULL
),
OrderDetails AS (
    SELECT 
        o.o_orderkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS order_value,
        COUNT(l.l_orderkey) AS item_count
    FROM 
        orders o
    JOIN 
        lineitem l ON o.o_orderkey = l.l_orderkey
    GROUP BY 
        o.o_orderkey
),
FinalResults AS (
    SELECT 
        n.n_name AS nation_name,
        COUNT(DISTINCT o.o_orderkey) AS total_orders,
        SUM(od.order_value) AS total_revenue,
        STRING_AGG(DISTINCT s.s_name, ', ') AS supplier_names
    FROM 
        nation n
    LEFT JOIN 
        supplier s ON n.n_nationkey = s.s_nationkey
    LEFT JOIN 
        orders o ON s.s_suppkey IN (SELECT ps.ps_suppkey FROM partsupp ps WHERE ps.ps_partkey IN 
            (SELECT l.l_partkey FROM lineitem l WHERE l.l_orderkey = o.o_orderkey))
    LEFT JOIN 
        OrderDetails od ON o.o_orderkey = od.o_orderkey
    GROUP BY 
        n.n_name
)
SELECT 
    fr.nation_name,
    fr.total_orders,
    fr.total_revenue,
    COALESCE(rs.total_cost, 0) AS total_supplier_cost
FROM 
    FinalResults fr
LEFT JOIN 
    RankedSuppliers rs ON fr.nation_name = (SELECT n.n_name FROM nation n WHERE n.n_nationkey = rs.s_nationkey)
WHERE 
    fr.total_orders > 1 
    AND fr.total_revenue IS NOT NULL
ORDER BY 
    fr.total_revenue DESC;
