
WITH RECURSIVE SupplierHierarchy AS (
    SELECT s_suppkey, s_name, s_nationkey, s_acctbal, 1 AS level
    FROM supplier
    WHERE s_acctbal > (SELECT AVG(s_acctbal) FROM supplier)
    
    UNION ALL
    
    SELECT ps.ps_suppkey, s.s_name, s.n_nationkey, s.s_acctbal, sh.level + 1
    FROM partsupp ps
    JOIN SupplierHierarchy sh ON ps.ps_suppkey = sh.s_suppkey
    JOIN supplier s ON ps.ps_suppkey = s.s_suppkey
),

RegionStats AS (
    SELECT r.r_name, COUNT(DISTINCT n.n_nationkey) AS nation_count, 
           SUM(s.s_acctbal) AS total_acctbal
    FROM region r
    LEFT JOIN nation n ON r.r_regionkey = n.n_regionkey
    LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
    GROUP BY r.r_name
),

TopSuppliers AS (
    SELECT s.s_suppkey, s.s_name, SUM(ps.ps_supplycost * ps.ps_availqty) AS total_value
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY s.s_suppkey, s.s_name
    HAVING SUM(ps.ps_supplycost * ps.ps_availqty) > (SELECT AVG(ps.ps_supplycost * ps.ps_availqty) FROM partsupp)
)

SELECT 
    r.r_name,
    rs.total_acctbal,
    sh.level AS supplier_level,
    ts.total_value,
    COALESCE(ts.total_value, 0) AS supplier_total_value,
    ROW_NUMBER() OVER (PARTITION BY r.r_name ORDER BY ts.total_value DESC) AS rank
FROM RegionStats rs
JOIN region r ON rs.r_name = r.r_name
LEFT JOIN SupplierHierarchy sh ON sh.s_nationkey = r.r_regionkey
LEFT JOIN TopSuppliers ts ON ts.s_suppkey = sh.s_suppkey
WHERE r.r_name LIKE 'N%'
ORDER BY r.r_name DESC, supplier_total_value DESC;
