WITH RankedOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_orderdate,
        o.o_totalprice,
        o.o_orderstatus,
        ROW_NUMBER() OVER (PARTITION BY o.o_orderstatus ORDER BY o.o_orderdate DESC) AS OrderRank
    FROM 
        orders o
    WHERE 
        o.o_orderstatus IN ('O', 'F') AND 
        o.o_totalprice > 1000
),
HighValueSuppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        s.s_acctbal,
        s.s_nationkey,
        SUM(ps.ps_supplycost) AS TotalSupplyCost
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    WHERE 
        s.s_acctbal IS NOT NULL
    GROUP BY 
        s.s_suppkey, s.s_name, s.s_acctbal, s.s_nationkey
    HAVING 
        SUM(ps.ps_supplycost) < 50000
),
FilteredLineItems AS (
    SELECT 
        l.l_orderkey,
        l.l_partkey,
        l.l_quantity,
        l.l_discount,
        l.l_returnflag,
        l.l_linestatus,
        CASE 
            WHEN l.l_returnflag = 'Y' THEN l.l_extendedprice * (1 - l.l_discount)
            ELSE 0
        END AS ReturnAmount
    FROM 
        lineitem l
    WHERE 
        l.l_shipdate >= DATE '1997-01-01' AND 
        l.l_shipdate < DATE '1997-10-01'
),
AggregatedData AS (
    SELECT 
        p.p_partkey,
        COUNT(DISTINCT l.l_orderkey) AS OrderCount,
        AVG(l.l_quantity) AS AvgQuantity,
        SUM(fd.ReturnAmount) AS TotalReturns,
        SUM(CASE WHEN l.l_returnflag = 'N' THEN l.l_extendedprice * (1 - l.l_discount) ELSE 0 END) AS TotalNonReturns
    FROM 
        part p
    LEFT JOIN 
        FilteredLineItems l ON p.p_partkey = l.l_partkey
    LEFT JOIN 
        HighValueSuppliers s ON s.s_suppkey IN (SELECT ps.ps_suppkey FROM partsupp ps WHERE ps.ps_partkey = p.p_partkey)
    WHERE 
        p.p_retailprice BETWEEN 20 AND 50
    GROUP BY 
        p.p_partkey
)
SELECT 
    r.r_name,
    a.p_partkey,
    a.OrderCount,
    a.AvgQuantity,
    a.TotalReturns,
    a.TotalNonReturns,
    CASE 
        WHEN a.TotalReturns > 500 THEN 'High Return'
        WHEN a.TotalNonReturns < 1000 AND a.TotalReturns = 0 THEN 'Low Sales'
        ELSE 'Standard'
    END AS SalesCategory
FROM 
    AggregatedData a
JOIN 
    nation n ON n.n_nationkey = (SELECT MAX(c.c_nationkey) FROM customer c WHERE c.c_custkey = (SELECT DISTINCT o.o_custkey FROM RankedOrders o WHERE o.o_orderkey = (SELECT DISTINCT l.l_orderkey FROM lineitem l WHERE l.l_partkey = a.p_partkey)))
JOIN 
    region r ON r.r_regionkey = n.n_regionkey
WHERE 
    a.TotalReturns IS NOT NULL OR a.TotalNonReturns IS NOT NULL
ORDER BY 
    a.TotalReturns DESC, a.AvgQuantity ASC;