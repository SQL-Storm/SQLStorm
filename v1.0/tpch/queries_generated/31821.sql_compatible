
WITH RECURSIVE OrderHierarchy AS (
    SELECT o_orderkey, o_custkey, o_orderdate, o_totalprice, o_shippriority, 1 AS level
    FROM orders
    WHERE o_orderstatus = 'O'  
    UNION ALL
    SELECT o.o_orderkey, o.o_custkey, o.o_orderdate, o.o_totalprice, o.o_shippriority, oh.level + 1
    FROM orders o
    JOIN OrderHierarchy oh ON o.o_orderkey = oh.o_orderkey
    WHERE o.o_orderdate > oh.o_orderdate
),
SupplierDetails AS (
    SELECT s.s_suppkey, s.s_name, s.s_acctbal, n.n_name AS nation_name,
        ROW_NUMBER() OVER (PARTITION BY n.n_name ORDER BY s.s_acctbal DESC) AS rank
    FROM supplier s
    JOIN nation n ON s.s_nationkey = n.n_nationkey
),
LineItemAnalysis AS (
    SELECT l.l_orderkey,
        SUM(l.l_quantity * l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
        COUNT(*) AS line_count,
        AVG(l.l_tax) AS avg_tax,
        MAX(l.l_shipdate) AS latest_shipdate
    FROM lineitem l
    GROUP BY l.l_orderkey
),
MaxSupplierRevenue AS (
    SELECT l.l_orderkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS supplier_revenue
    FROM lineitem l
    JOIN partsupp ps ON l.l_partkey = ps.ps_partkey
    GROUP BY l.l_orderkey
)
SELECT oh.o_orderkey, oh.o_orderdate, oh.o_totalprice, oh.level, 
       COALESCE(SUM(l.total_revenue), 0) AS total_revenue,
       COALESCE(AVG(sd.s_acctbal), 0) AS avg_supplier_acctbal,
       COALESCE(max_sr.supplier_revenue, 0) AS max_supplier_revenue
FROM OrderHierarchy oh
LEFT JOIN LineItemAnalysis l ON oh.o_orderkey = l.l_orderkey
LEFT JOIN SupplierDetails sd ON sd.rank = 1
LEFT JOIN MaxSupplierRevenue max_sr ON max_sr.l_orderkey = oh.o_orderkey
GROUP BY oh.o_orderkey, oh.o_orderdate, oh.o_totalprice, oh.level
HAVING oh.o_totalprice > 10000 AND oh.o_shippriority < 5
ORDER BY oh.o_orderdate DESC, total_revenue DESC;
