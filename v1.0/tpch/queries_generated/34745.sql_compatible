
WITH RECURSIVE nation_hierarchy AS (
    SELECT n_nationkey, n_name, n_regionkey, 1 AS level
    FROM nation
    WHERE n_regionkey IS NOT NULL
    UNION ALL
    SELECT n.n_nationkey, n.n_name, n.n_regionkey, nh.level + 1
    FROM nation n
    INNER JOIN nation_hierarchy nh ON n.n_regionkey = nh.n_nationkey
),
supplier_summary AS (
    SELECT s.s_suppkey, s.s_name, SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_cost
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY s.s_suppkey, s.s_name
),
customer_orders AS (
    SELECT c.c_custkey, COUNT(o.o_orderkey) AS total_orders, SUM(o.o_totalprice) AS total_spent
    FROM customer c
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    GROUP BY c.c_custkey
),
top_customers AS (
    SELECT c.c_custkey, c.c_name, co.total_orders, co.total_spent,
           ROW_NUMBER() OVER (ORDER BY co.total_spent DESC) AS rank
    FROM customer_orders co
    JOIN customer c ON co.c_custkey = c.c_custkey
)
SELECT p.p_partkey, p.p_name, p.p_brand, 
       COALESCE(s.s_name, 'No Supplier') AS supplier_name,
       (SELECT SUM(l.l_extendedprice * (1 - l.l_discount))
        FROM lineitem l
        WHERE l.l_orderkey IN (SELECT o.o_orderkey FROM orders o WHERE o.o_custkey IN (SELECT cc.c_custkey FROM top_customers cc WHERE cc.rank <= 5))
        AND l.l_partkey = p.p_partkey) AS total_revenue,
       nh.level AS nation_level
FROM part p
LEFT JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
LEFT JOIN supplier_summary s ON ps.ps_suppkey = s.s_suppkey
JOIN nation_hierarchy nh ON nh.n_nationkey = (SELECT n.n_nationkey FROM supplier su JOIN nation n ON su.s_nationkey = n.n_nationkey WHERE su.s_suppkey = s.s_suppkey)
WHERE p.p_retailprice > (SELECT AVG(p2.p_retailprice) FROM part p2 WHERE p2.p_size < 10)
ORDER BY total_revenue DESC, p.p_brand;
