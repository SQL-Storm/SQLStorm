
WITH RECURSIVE OrderHierarchy AS (
    SELECT o.o_orderkey, o.o_orderdate, o.o_totalprice, 1 AS depth
    FROM orders o
    WHERE o.o_orderstatus = 'O' 
      AND o.o_orderdate >= DATE '1997-01-01'
    
    UNION ALL
    
    SELECT oh.o_orderkey, o.o_orderdate, o.o_totalprice, oh.depth + 1
    FROM orders o
    JOIN OrderHierarchy oh ON o.o_custkey = oh.o_orderkey
    WHERE o.o_orderstatus = 'O'
      AND o.o_orderdate >= DATE '1997-01-01'
)

SELECT 
    n.n_name AS nation,
    SUM(CASE WHEN li.l_returnflag = 'R' THEN li.l_extendedprice * (1 - li.l_discount) ELSE 0 END) AS returned_sales,
    AVG(CASE WHEN li.l_returnflag = 'R' THEN li.l_extendedprice * (1 - li.l_discount) ELSE NULL END) AS avg_returned_price,
    COUNT(DISTINCT oh.o_orderkey) AS total_orders,
    COUNT(DISTINCT li.l_linenumber) AS total_lineitems,
    COUNT(DISTINCT cs.c_custkey) AS total_customers,
    PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY o.o_totalprice) OVER (PARTITION BY n.n_name) AS median_order_value
FROM 
    lineitem li
LEFT JOIN 
    orders o ON li.l_orderkey = o.o_orderkey
LEFT JOIN 
    customer cs ON o.o_custkey = cs.c_custkey
JOIN 
    supplier s ON li.l_suppkey = s.s_suppkey
JOIN 
    partsupp ps ON li.l_partkey = ps.ps_partkey AND li.l_suppkey = ps.ps_suppkey
JOIN 
    part p ON ps.ps_partkey = p.p_partkey
JOIN 
    nation n ON s.s_nationkey = n.n_nationkey
WHERE 
    o.o_orderdate BETWEEN DATE '1997-01-01' AND DATE '1997-12-31'
GROUP BY 
    n.n_name
HAVING 
    SUM(li.l_extendedprice * li.l_discount) > 10000
ORDER BY 
    returned_sales DESC
LIMIT 10;
