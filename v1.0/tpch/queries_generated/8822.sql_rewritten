WITH PartSupplierStats AS (
    SELECT 
        p.p_partkey, 
        p.p_name,
        SUM(ps.ps_availqty) AS total_available_qty,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_cost
    FROM 
        part p
    JOIN 
        partsupp ps ON p.p_partkey = ps.ps_partkey
    GROUP BY 
        p.p_partkey, p.p_name
), 
TopSuppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_value
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey, s.s_name
    ORDER BY 
        total_supply_value DESC
    LIMIT 5
),
CustomerOrderStats AS (
    SELECT 
        c.c_custkey, 
        c.c_name, 
        COUNT(o.o_orderkey) AS total_orders, 
        SUM(o.o_totalprice) AS total_spent
    FROM 
        customer c
    JOIN 
        orders o ON c.c_custkey = o.o_custkey
    WHERE 
        o.o_orderdate >= DATE '1996-01-01' AND 
        o.o_orderdate < DATE '1996-12-31'
    GROUP BY 
        c.c_custkey, c.c_name
    HAVING 
        total_spent > 10000
)
SELECT 
    p.p_name,
    p.total_available_qty,
    p.total_supply_cost,
    ts.s_name AS top_supplier,
    cos.c_name AS high_value_customer
FROM 
    PartSupplierStats p
CROSS JOIN 
    TopSuppliers ts
CROSS JOIN 
    CustomerOrderStats cos
WHERE 
    p.total_available_qty > 50;