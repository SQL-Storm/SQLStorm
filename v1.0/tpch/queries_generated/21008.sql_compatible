
WITH ranked_sales AS (
    SELECT 
        l.l_orderkey,
        l.l_partkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_sales,
        RANK() OVER (PARTITION BY l.l_partkey ORDER BY SUM(l.l_extendedprice * (1 - l.l_discount)) DESC) AS sales_rank
    FROM 
        lineitem l
    WHERE 
        l.l_shipdate >= '1997-01-01'
        AND l.l_shipdate < '1998-01-01'
    GROUP BY 
        l.l_orderkey, l.l_partkey
),

supp_counts AS (
    SELECT 
        ps.ps_partkey,
        COUNT(DISTINCT ps.ps_suppkey) AS supplier_count
    FROM 
        partsupp ps
    GROUP BY 
        ps.ps_partkey
)

SELECT 
    p.p_partkey,
    p.p_name,
    COALESCE(supp_count.supplier_count, 0) AS supplier_count,
    r.region,
    n.n_name,
    SUM(COALESCE(rs.total_sales, 0)) AS total_sales_value,
    CASE 
        WHEN SUM(COALESCE(rs.total_sales, 0)) = 0 THEN 'No Sales'
        WHEN SUM(COALESCE(rs.total_sales, 0)) > 10000 THEN 'High Sales'
        ELSE 'Low Sales' 
    END AS sales_category
FROM 
    part p
LEFT JOIN 
    ranked_sales rs ON p.p_partkey = rs.l_partkey
LEFT JOIN 
    supp_counts supp_count ON p.p_partkey = supp_count.ps_partkey
JOIN 
    supplier s ON s.s_suppkey IN (SELECT ps.ps_suppkey FROM partsupp ps WHERE ps.ps_partkey = p.p_partkey AND ps.ps_availqty > 0)
JOIN 
    nation n ON s.s_nationkey = n.n_nationkey
JOIN 
    region r ON n.n_regionkey = r.r_regionkey
GROUP BY 
    p.p_partkey, p.p_name, supp_count.supplier_count, r.region, n.n_name
ORDER BY 
    total_sales_value DESC
LIMIT 10;
