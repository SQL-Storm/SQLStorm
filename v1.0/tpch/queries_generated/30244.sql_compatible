
WITH RECURSIVE popular_parts AS (
    SELECT p_partkey, p_name, SUM(l_extendedprice * (1 - l_discount)) AS total_sales
    FROM part
    JOIN lineitem ON p_partkey = l_partkey
    WHERE l_shipdate >= '1996-01-01' AND l_shipdate < '1997-01-01'
    GROUP BY p_partkey, p_name
    HAVING SUM(l_extendedprice * (1 - l_discount)) > 100000
    UNION ALL
    SELECT pp.p_partkey, pp.p_name, SUM(li.l_extendedprice * (1 - li.l_discount))
    FROM popular_parts pp
    JOIN lineitem li ON pp.p_partkey = li.l_partkey
    GROUP BY pp.p_partkey, pp.p_name
),
nation_sales AS (
    SELECT n.n_name, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_nation_sales
    FROM nation n
    JOIN supplier s ON n.n_nationkey = s.s_nationkey
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    JOIN lineitem l ON ps.ps_partkey = l.l_partkey
    WHERE l.l_shipdate >= '1996-01-01' AND l.l_shipdate < '1997-01-01'
    GROUP BY n.n_name
),
ranked_sales AS (
    SELECT n.n_name, ns.total_nation_sales,
           RANK() OVER (ORDER BY ns.total_nation_sales DESC) AS sales_rank
    FROM nation_sales ns
    JOIN nation n ON ns.n_name = n.n_name
)
SELECT pp.p_name, pp.total_sales, rs.n_name, rs.total_nation_sales, rs.sales_rank
FROM popular_parts pp
LEFT JOIN ranked_sales rs ON pp.total_sales > rs.total_nation_sales
ORDER BY pp.total_sales DESC, rs.sales_rank
LIMIT 100;
