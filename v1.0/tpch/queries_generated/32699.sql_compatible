
WITH RECURSIVE supplier_hierarchy AS (
    SELECT s_suppkey, s_name, s_nationkey, s_acctbal, 1 AS level
    FROM supplier
    WHERE s_acctbal > 50000
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal, sh.level + 1
    FROM supplier s
    JOIN supplier_hierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE s.s_acctbal > 0 AND sh.level < 5
),
part_supplier_info AS (
    SELECT p.p_partkey, p.p_name, ps.ps_availqty, ps.ps_supplycost,
           (ps.ps_availqty * ps.ps_supplycost) AS total_supply_cost
    FROM part p
    JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
    WHERE p.p_size BETWEEN 10 AND 20
),
customer_order_summary AS (
    SELECT c.c_custkey, SUM(o.o_totalprice) AS total_order_value
    FROM customer c
    JOIN orders o ON c.c_custkey = o.o_custkey
    WHERE o.o_orderdate >= '1997-01-01'
    GROUP BY c.c_custkey
),
nation_region_info AS (
    SELECT n.n_nationkey, n.n_name, r.r_name AS region_name,
           COUNT(DISTINCT s.s_suppkey) AS supplier_count
    FROM nation n
    JOIN region r ON n.n_regionkey = r.r_regionkey
    LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
    GROUP BY n.n_nationkey, n.n_name, r.r_name
)
SELECT DISTINCT ns.n_name AS nation_name,
                p.p_name AS part_name,
                p.ps_availqty AS available_quantity,
                css.total_order_value AS customer_order_value,
                sh.level AS supplier_level,
                r.region_name,
                COALESCE(sh.s_acctbal, 0) AS supplier_acct_balance
FROM part_supplier_info p
JOIN nation_region_info ns ON ns.n_nationkey = p.p_partkey
JOIN customer_order_summary css ON css.total_order_value > 10000
LEFT JOIN supplier_hierarchy sh ON sh.s_nationkey = ns.n_nationkey
FULL OUTER JOIN region r ON r.r_name = ns.region_name
WHERE p.total_supply_cost > 1000
  AND (r.r_name IS NOT NULL OR ns.supplier_count > 0)
ORDER BY sh.level, css.total_order_value DESC;
