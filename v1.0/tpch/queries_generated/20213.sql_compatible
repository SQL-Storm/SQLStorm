
WITH RECURSIVE SUPPLIER_HIERARCHY AS (
    SELECT s_suppkey, s_name, s_nationkey, s_acctbal,
           s_name AS path
    FROM supplier
    WHERE s_acctbal > (SELECT AVG(s_acctbal) FROM supplier)

    UNION ALL

    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal,
           CONCAT(sh.path, ' -> ', s.s_name)
    FROM supplier s
    JOIN SUPPLIER_HIERARCHY sh ON s.s_nationkey = sh.s_nationkey
    WHERE s.s_acctbal < sh.s_acctbal
),
BEST_SELLERS AS (
    SELECT l.l_partkey,
           SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue
    FROM lineitem l
    JOIN orders o ON l.l_orderkey = o.o_orderkey
    WHERE o.o_orderdate BETWEEN '1994-01-01' AND '1997-12-31'
      AND o.o_orderstatus = 'F'
    GROUP BY l.l_partkey
    HAVING SUM(l.l_extendedprice * (1 - l.l_discount)) > 10000
),
PART_SUPPLY_INFO AS (
    SELECT ps.ps_partkey, 
           SUM(ps.ps_availqty) AS total_available,
           AVG(ps.ps_supplycost) AS avg_supply_cost
    FROM partsupp ps
    WHERE ps.ps_supplycost IS NOT NULL
    GROUP BY ps.ps_partkey
),
NATION_REVENUE AS (
    SELECT n.n_nationkey, 
           SUM(l.l_extendedprice * (1 - l.l_discount)) AS nation_revenue
    FROM lineitem l
    JOIN orders o ON l.l_orderkey = o.o_orderkey
    JOIN customer c ON o.o_custkey = c.c_custkey
    JOIN nation n ON c.c_nationkey = n.n_nationkey
    WHERE l.l_shipdate >= '1997-01-01'
    GROUP BY n.n_nationkey
),
RANKED_PARTS AS (
    SELECT p.p_partkey,
           p.p_name,
           ROW_NUMBER() OVER (PARTITION BY n.n_regionkey ORDER BY b.total_revenue DESC) AS part_rank
    FROM part p
    JOIN BEST_SELLERS b ON p.p_partkey = b.l_partkey
    JOIN nation n ON p.p_mfgr = n.n_name
)
SELECT DISTINCT p.p_partkey, 
                p.p_name,
                COALESCE(ps.total_available, 0) AS supply_info,
                COALESCE(nr.nation_revenue, 0) AS revenue_info,
                sh.path AS supplier_path
FROM part p
LEFT JOIN PART_SUPPLY_INFO ps ON p.p_partkey = ps.ps_partkey
LEFT JOIN NATION_REVENUE nr ON p.p_partkey IN (SELECT b.l_partkey FROM BEST_SELLERS b)
JOIN SUPPLIER_HIERARCHY sh ON p.p_partkey IN (
    SELECT ps.ps_partkey 
    FROM partsupp ps 
    WHERE ps.ps_availqty < (SELECT MAX(ps2.ps_availqty) FROM partsupp ps2)
)
WHERE p.p_size IS NOT NULL AND p.p_comment IS NOT NULL
  AND LOWER(sh.path) LIKE LOWER('%Supplier%') 
ORDER BY p.p_partkey;
