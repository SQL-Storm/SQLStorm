WITH RECURSIVE total_sales AS (
    SELECT 
        o.o_orderkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total
    FROM 
        orders AS o
    JOIN 
        lineitem AS l ON o.o_orderkey = l.l_orderkey
    WHERE 
        o.o_orderdate >= DATE '1997-01-01' 
    GROUP BY 
        o.o_orderkey
    UNION ALL
    SELECT 
        o.o_orderkey, 
        ts.total + SUM(l.l_extendedprice * (1 - l.l_discount)) 
    FROM 
        total_sales AS ts
    JOIN 
        orders AS o ON ts.o_orderkey = o.o_orderkey
    JOIN 
        lineitem AS l ON o.o_orderkey = l.l_orderkey
    WHERE 
        o.o_orderdate >= DATE '1997-01-01'
    GROUP BY 
        o.o_orderkey, ts.total
),
supplier_avg AS (
    SELECT 
        s.s_suppkey,
        AVG(ps.ps_supplycost) AS avg_supplycost
    FROM 
        supplier AS s
    JOIN 
        partsupp AS ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey
),
customer_orders AS (
    SELECT 
        c.c_custkey,
        COUNT(o.o_orderkey) AS order_count,
        SUM(o.o_totalprice) AS total_spent
    FROM 
        customer AS c
    LEFT JOIN 
        orders AS o ON c.c_custkey = o.o_custkey
    GROUP BY 
        c.c_custkey
),
part_sales AS (
    SELECT 
        p.p_partkey,
        p.p_name,
        SUM(l.l_quantity) AS total_quantity,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue
    FROM 
        part AS p
    JOIN 
        lineitem AS l ON p.p_partkey = l.l_partkey
    GROUP BY 
        p.p_partkey, p.p_name
)
SELECT 
    p.p_name,
    p.total_quantity,
    ps.total_revenue,
    COALESCE(ts.total, 0) AS total_sales_until_now,
    sa.avg_supplycost,
    c.order_count,
    c.total_spent
FROM 
    part_sales AS ps
INNER JOIN 
    part AS p ON ps.p_partkey = p.p_partkey
LEFT JOIN 
    total_sales AS ts ON ts.o_orderkey IN (SELECT o.o_orderkey FROM orders AS o WHERE o.o_orderkey = (SELECT MIN(o2.o_orderkey) FROM orders AS o2))
LEFT JOIN 
    supplier_avg AS sa ON sa.s_suppkey = p.p_partkey
LEFT JOIN 
    customer_orders AS c ON c.c_custkey = (SELECT MIN(c2.c_custkey) FROM customer AS c2)
ORDER BY 
    total_quantity DESC
LIMIT 10;