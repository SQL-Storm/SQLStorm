
WITH RECURSIVE supplier_hierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, 1 AS level
    FROM supplier s
    WHERE s.s_acctbal > (
        SELECT AVG(s2.s_acctbal)
        FROM supplier s2
        WHERE s2.s_nationkey = s.s_nationkey
    )
    UNION ALL
    SELECT sh.s_suppkey, s.s_name, s.s_nationkey, sh.level + 1
    FROM supplier_hierarchy sh
    JOIN supplier s ON sh.s_nationkey = s.s_nationkey
    WHERE sh.level < 3
),
order_summary AS (
    SELECT o.o_orderkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE l.l_shipdate >= DATE '1997-01-01' AND l.l_shipdate < DATE '1998-01-01'
    GROUP BY o.o_orderkey
),
nation_summary AS (
    SELECT n.n_nationkey, n.n_name, COUNT(DISTINCT c.c_custkey) AS num_customers
    FROM nation n
    JOIN customer c ON n.n_nationkey = c.c_nationkey
    GROUP BY n.n_nationkey, n.n_name
),
part_supplier AS (
    SELECT p.p_partkey, p.p_name, ps.ps_supplycost, ps.ps_availqty, ps.ps_comment
    FROM part p
    JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
    WHERE ps.ps_availqty > (
        SELECT AVG(ps2.ps_availqty)
        FROM partsupp ps2
        WHERE ps2.ps_partkey = p.p_partkey
    )
)
SELECT 
    n.n_name AS nation_name,
    COALESCE(SUM(os.total_revenue), 0) AS total_revenue,
    COALESCE(SUM(ps.ps_supplycost * ps.ps_availqty), 0) AS total_supply_cost,
    COUNT(DISTINCT sh.s_suppkey) AS total_suppliers,
    RANK() OVER (PARTITION BY n.n_name ORDER BY COALESCE(SUM(os.total_revenue), 0) DESC) AS revenue_rank
FROM nation_summary n
LEFT JOIN order_summary os ON n.n_nationkey = (
    SELECT c.c_nationkey
    FROM customer c
    WHERE c.c_custkey IN (SELECT o.o_custkey FROM orders o)
)
LEFT JOIN part_supplier ps ON n.n_nationkey = ps.ps_partkey
LEFT JOIN supplier_hierarchy sh ON n.n_nationkey = sh.s_nationkey
GROUP BY n.n_nationkey, n.n_name
HAVING COUNT(DISTINCT sh.s_suppkey) > 5
ORDER BY total_revenue DESC, nation_name;
