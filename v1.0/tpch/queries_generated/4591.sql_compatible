
WITH SupplierStats AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        SUM(ps.ps_availqty) AS total_available_quantity,
        AVG(ps.ps_supplycost) AS avg_supply_cost,
        COUNT(DISTINCT ps.ps_partkey) AS part_count
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey, s.s_name
),
CustomerOrders AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        c.n_nationkey,  -- Added to GROUP BY
        COUNT(o.o_orderkey) AS order_count,
        SUM(o.o_totalprice) AS total_spent
    FROM 
        customer c
    LEFT JOIN 
        orders o ON c.c_custkey = o.o_custkey
    GROUP BY 
        c.c_custkey, c.c_name, c.n_nationkey  -- Ensure all grouped columns are included
),
NationRegion AS (
    SELECT 
        n.n_nationkey,
        n.n_name,
        r.r_regionkey,
        r.r_name
    FROM 
        nation n
    LEFT JOIN 
        region r ON n.n_regionkey = r.r_regionkey
),
PartSupplierInfo AS (
    SELECT 
        p.p_partkey,
        p.p_name,
        s.s_suppkey,
        s.s_name,
        ps.ps_supplycost,
        ps.ps_availqty,
        p.p_retailprice  -- Added to ensure selected column is accounted for
    FROM 
        part p 
    JOIN 
        partsupp ps ON p.p_partkey = ps.ps_partkey
    JOIN 
        supplier s ON ps.ps_suppkey = s.s_suppkey
)
SELECT 
    nr.r_name AS region,
    cs.c_name AS customer,
    ss.s_name AS supplier,
    p.p_name AS part_name,
    ss.avg_supply_cost,  -- Changed to reference from SupplierStats
    SUM(l.l_quantity) AS total_quantity_sold,
    COUNT(DISTINCT o.o_orderkey) AS total_orders,
    AVG(CASE WHEN l.l_discount > 0 THEN l.l_extendedprice * (1 - l.l_discount) ELSE 0 END) AS avg_discounted_price,
    MAX(CASE WHEN l.l_shipdate < '1998-10-01 12:34:56' THEN l.l_tax ELSE NULL END) AS max_tax_if_shipped
FROM 
    CustomerOrders cs
JOIN 
    PartSupplierInfo p ON p.s_suppkey IN (SELECT s_suppkey FROM SupplierStats WHERE total_available_quantity > 50)
LEFT JOIN 
    lineitem l ON l.l_orderkey IN (SELECT o_orderkey FROM orders WHERE o_custkey = cs.c_custkey)
JOIN 
    NationRegion nr ON cs.n_nationkey = nr.n_nationkey  -- Correctly referencing the nation key
JOIN 
    SupplierStats ss ON ss.s_name = p.s_name
WHERE 
    p.p_retailprice IS NOT NULL
GROUP BY 
    nr.r_name, cs.c_name, ss.s_name, p.p_name, ss.avg_supply_cost  -- Corrected to use ss.avg_supply_cost
ORDER BY 
    total_quantity_sold DESC, total_orders DESC;
