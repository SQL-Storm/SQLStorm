WITH RECURSIVE order_dates AS (
    SELECT o_orderdate, o_orderkey, o_custkey
    FROM orders
    WHERE o_orderdate >= DATE '1997-01-01'

    UNION ALL

    SELECT o.orderdate, o.o_orderkey, o.o_custkey
    FROM orders o
    JOIN order_dates od ON o.o_orderkey = od.o_orderkey + 1
)

SELECT 
    r.r_name AS region_name,
    n.n_name AS nation_name,
    s.s_name AS supplier_name,
    SUM(CASE WHEN l.l_shipdate < l.l_commitdate THEN l.l_extendedprice * (1 - l.l_discount) ELSE 0 END) AS total_revenue,
    COUNT(DISTINCT o.o_orderkey) AS total_orders,
    AVG(l.l_quantity) AS avg_quantity_per_order,
    COUNT(DISTINCT c.c_custkey) AS unique_customers,
    COALESCE(SUM(ps.ps_availqty), 0) AS total_available_quantity,
    ROW_NUMBER() OVER (PARTITION BY r.r_name ORDER BY SUM(l.l_extendedprice) DESC) AS rank
FROM 
    region r
    LEFT JOIN nation n ON r.r_regionkey = n.n_regionkey
    LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
    LEFT JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    LEFT JOIN lineitem l ON ps.ps_partkey = l.l_partkey 
    LEFT JOIN orders o ON l.l_orderkey = o.o_orderkey
    LEFT JOIN customer c ON o.o_custkey = c.c_custkey
WHERE 
    o.o_orderstatus = 'O'
    AND l.l_discount > 0.05
    AND l.l_returnflag IS NULL
    AND DATE_PART('year', o.o_orderdate) = 1997
GROUP BY 
    r.r_name, n.n_name, s.s_name
HAVING 
    SUM(l.l_extendedprice) > 10000
ORDER BY 
    total_revenue DESC;