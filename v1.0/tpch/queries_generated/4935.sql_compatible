
WITH RankedOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_orderdate,
        o.o_totalprice,
        c.c_name,
        c.c_acctbal,
        ROW_NUMBER() OVER (PARTITION BY c.c_nationkey ORDER BY o.o_orderdate DESC) AS order_rank
    FROM 
        orders o
    JOIN 
        customer c ON o.o_custkey = c.c_custkey
    WHERE 
        o.o_orderstatus = 'F' 
        AND o.o_orderdate BETWEEN DATE '1997-01-01' AND DATE '1997-12-31'
),
TopCustomers AS (
    SELECT 
        r.r_name AS region,
        n.n_name AS nation,
        SUM(o.o_totalprice) AS total_spent
    FROM 
        RankedOrders o
    JOIN 
        customer c ON o.o_custkey = c.c_custkey
    JOIN 
        nation n ON c.c_nationkey = n.n_nationkey
    JOIN 
        region r ON n.n_regionkey = r.r_regionkey
    WHERE 
        o.order_rank <= 10
    GROUP BY 
        r.r_name, n.n_name
),
PartDetails AS (
    SELECT 
        p.p_partkey,
        p.p_name,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_cost
    FROM 
        part p
    JOIN 
        partsupp ps ON p.p_partkey = ps.ps_partkey
    GROUP BY 
        p.p_partkey, p.p_name
)
SELECT 
    c.region,
    c.nation,
    c.total_spent,
    p.p_name,
    COALESCE(pd.total_supply_cost, 0) AS supply_cost,
    (c.total_spent - COALESCE(pd.total_supply_cost, 0)) AS net_spending
FROM 
    TopCustomers c
LEFT JOIN 
    PartDetails pd ON c.region = 'Asia' AND pd.p_name LIKE '%widget%'
WHERE 
    c.total_spent > 1000
ORDER BY 
    c.total_spent DESC, net_spending ASC;
