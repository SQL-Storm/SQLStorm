
WITH RankedParts AS (
    SELECT 
        p.p_partkey,
        p.p_name,
        ROW_NUMBER() OVER (PARTITION BY p.p_mfgr ORDER BY p.p_retailprice DESC) AS rn_highest_price,
        COUNT(*) OVER (PARTITION BY p.p_mfgr) AS part_count
    FROM 
        part p
),
NationsWithComments AS (
    SELECT 
        n.n_nationkey,
        n.n_name,
        COALESCE(NULLIF(n.n_comment, ''), 'No Comment') AS nation_comment
    FROM 
        nation n
    WHERE 
        n.n_regionkey IN (SELECT r.r_regionkey FROM region r WHERE r.r_name LIKE 'E%')
),
CustomerOrders AS (
    SELECT 
        o.o_orderkey,
        c.c_custkey,
        c.c_name,
        SUM(o.o_totalprice) OVER (PARTITION BY c.c_custkey ORDER BY o.o_orderdate) AS total_spent
    FROM 
        orders o
    JOIN 
        customer c ON o.o_custkey = c.c_custkey
),
SupplierPartCounts AS (
    SELECT 
        ps.ps_partkey,
        COUNT(DISTINCT ps.ps_suppkey) AS supplier_count
    FROM 
        partsupp ps
    GROUP BY 
        ps.ps_partkey
)
SELECT 
    p.rn_highest_price,
    np.n_name,
    np.nation_comment,
    COALESCE(sp.supplier_count, 0) AS supplier_count,
    COUNT(DISTINCT co.o_orderkey) AS customer_order_count
FROM 
    RankedParts p
LEFT JOIN 
    NationsWithComments np ON np.n_nationkey = (
        SELECT n.n_nationkey 
        FROM supplier s 
        LEFT JOIN nations n ON s.s_nationkey = n.n_nationkey 
        WHERE s.s_suppkey IN (
            SELECT ps.ps_suppkey 
            FROM partsupp ps 
            WHERE ps.ps_partkey = p.p_partkey
        )
        LIMIT 1)
LEFT JOIN 
    SupplierPartCounts sp ON sp.ps_partkey = p.p_partkey
LEFT JOIN 
    CustomerOrders co ON co.o_orderkey IN (
        SELECT o.o_orderkey 
        FROM orders o 
        WHERE o.o_custkey IN (
            SELECT c.c_custkey 
            FROM customer c 
            WHERE c.c_acctbal > 100 OR c.c_mktsegment IS NULL
        )
    )
WHERE 
    p.rn_highest_price <= 5
    AND (p.p_retailprice IS NOT NULL OR p.p_comment IS NULL)
GROUP BY 
    p.rn_highest_price, np.n_name, np.nation_comment, sp.supplier_count
HAVING 
    SUM(CASE WHEN p.p_partkey % 2 = 0 THEN 1 ELSE 0 END) = 0
ORDER BY 
    p.rn_highest_price DESC, np.n_name ASC
LIMIT 10 OFFSET 5;
