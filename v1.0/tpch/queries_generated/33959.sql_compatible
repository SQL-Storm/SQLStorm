
WITH RECURSIVE Sales_CTE AS (
    SELECT 
        o.o_orderkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_sales,
        RANK() OVER (PARTITION BY o.o_orderstatus ORDER BY SUM(l.l_extendedprice * (1 - l.l_discount)) DESC) AS sales_rank
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE o.o_orderdate >= DATE '1996-01-01' AND o.o_orderdate < DATE '1997-01-01'
    GROUP BY o.o_orderkey
),
Supplier_Sales AS (
    SELECT 
        s.s_suppkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS supplier_sales
    FROM supplier s
    LEFT JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    LEFT JOIN lineitem l ON ps.ps_partkey = l.l_partkey
    WHERE s.s_acctbal IS NOT NULL 
    GROUP BY s.s_suppkey
),
High_Sales_Suppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        ss.supplier_sales
    FROM supplier s
    JOIN Supplier_Sales ss ON s.s_suppkey = ss.s_suppkey
    WHERE ss.supplier_sales > (
        SELECT AVG(supplier_sales) FROM Supplier_Sales
    )
),
Nations AS (
    SELECT 
        n.n_nationkey,
        n.n_name,
        r.r_name,
        COUNT(s.s_suppkey) AS supplier_count
    FROM nation n
    JOIN region r ON n.n_regionkey = r.r_regionkey
    LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
    GROUP BY n.n_nationkey, n.n_name, r.r_name
)
SELECT 
    ns.n_name,
    ns.r_name,
    s.s_name,
    ss.supplier_sales,
    cs.total_sales,
    CASE 
        WHEN ns.supplier_count > 5 THEN 'High Supplier'
        ELSE 'Low Supplier'
    END AS supplier_category
FROM Nations ns
JOIN High_Sales_Suppliers s ON ns.supplier_count = (
    SELECT COUNT(*) FROM supplier WHERE supplier.n_nationkey = ns.n_nationkey
)
LEFT JOIN Sales_CTE cs ON cs.o_orderkey IN (
    SELECT o.o_orderkey 
    FROM orders o 
    WHERE o.o_custkey IN (
        SELECT c.custkey 
        FROM customer c 
        WHERE c.c_nationkey = ns.n_nationkey
    )
)
WHERE ns.r_name LIKE 'Europe%' OR ns.r_name IS NULL
ORDER BY ss.supplier_sales DESC, cs.total_sales DESC;
