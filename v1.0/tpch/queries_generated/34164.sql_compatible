
WITH RECURSIVE OrderHierarchy AS (
    SELECT o.o_orderkey, o.o_custkey, o.o_totalprice, o.o_orderdate, 1 AS level
    FROM orders o
    WHERE o.o_orderstatus = 'O'
    
    UNION ALL
    
    SELECT o.o_orderkey, o.o_custkey, o.o_totalprice, o.o_orderdate, oh.level + 1
    FROM orders o
    JOIN OrderHierarchy oh ON o.o_custkey = oh.o_custkey AND o.o_orderdate > oh.o_orderdate
    WHERE o.o_orderstatus = 'O'
),
CustomerStats AS (
    SELECT c.c_custkey, 
           c.c_name, 
           SUM(o.o_totalprice) AS total_spent, 
           COUNT(DISTINCT o.o_orderkey) AS order_count,
           AVG(o.o_totalprice) AS average_order_value,
           RANK() OVER (ORDER BY SUM(o.o_totalprice) DESC) AS spending_rank
    FROM customer c
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    WHERE c.c_acctbal > 0
    GROUP BY c.c_custkey, c.c_name
),
PartSupplierStats AS (
    SELECT p.p_partkey, 
           p.p_name, 
           SUM(ps.ps_supplycost * ps.ps_availqty) AS total_cost,
           COUNT(DISTINCT ps.ps_suppkey) AS supplier_count
    FROM part p
    JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
    GROUP BY p.p_partkey, p.p_name
),
NationRegion AS (
    SELECT n.n_nationkey, 
           n.n_name AS nation_name, 
           r.r_name AS region_name
    FROM nation n
    JOIN region r ON n.n_regionkey = r.r_regionkey
)
SELECT 
    c.c_name AS customer_name, 
    cs.total_spent, 
    cs.order_count, 
    cs.average_order_value,
    ps.p_name AS part_name, 
    pss.total_cost, 
    pss.supplier_count, 
    nr.region_name,
    NULLIF(cs.average_order_value, 0) AS avg_order_value_non_zero
FROM CustomerStats cs
JOIN lineitem l ON l.l_orderkey IN (SELECT o.o_orderkey FROM orders o WHERE o.o_custkey = cs.c_custkey)
JOIN PartSupplierStats pss ON pss.p_partkey = l.l_partkey
JOIN NationRegion nr ON nr.n_nationkey = (SELECT c.c_nationkey FROM customer c WHERE c.c_custkey = cs.c_custkey)
LEFT JOIN OrderHierarchy oh ON cs.c_custkey = oh.o_custkey
WHERE cs.spending_rank <= 10
ORDER BY cs.total_spent DESC, pss.total_cost ASC;
