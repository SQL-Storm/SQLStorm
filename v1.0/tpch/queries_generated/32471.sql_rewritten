WITH RECURSIVE CustomerHierarchy AS (
    SELECT c.c_custkey, c.c_name, c.c_nationkey, 1 AS level
    FROM customer c
    WHERE c.c_acctbal > 5000.00
    
    UNION ALL
    
    SELECT c.c_custkey, c.c_name, c.c_nationkey, ch.level + 1
    FROM customer c
    JOIN CustomerHierarchy ch ON c.c_nationkey = ch.c_nationkey
    WHERE c.c_acctbal <= 5000.00 AND ch.level < 5
),
TotalSales AS (
    SELECT o.o_custkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_sales
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    GROUP BY o.o_custkey
),
SupplierRank AS (
    SELECT s.s_suppkey, SUM(ps.ps_supplycost * ps.ps_availqty) AS total_cost,
           RANK() OVER (ORDER BY SUM(ps.ps_supplycost * ps.ps_availqty) DESC) AS supplier_rank
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY s.s_suppkey
)
SELECT r.r_name, SUM(ts.total_sales) AS total_sales_region, AVG(s.r_total_cost) AS avg_cost_per_supplier,
       COALESCE(SUM(CASE WHEN l.l_shipdate < '1996-01-01' THEN l.l_extendedprice END), 0) AS sales_before_1996
FROM region r
LEFT JOIN nation n ON r.r_regionkey = n.n_regionkey
LEFT JOIN customer c ON n.n_nationkey = c.c_nationkey
LEFT JOIN TotalSales ts ON c.c_custkey = ts.o_custkey
LEFT JOIN (
    SELECT s_nationkey, SUM(total_cost) AS r_total_cost
    FROM SupplierRank sr
    JOIN supplier s ON sr.s_suppkey = s.s_suppkey
    GROUP BY s.n_nationkey
) s ON n.n_nationkey = s.s_nationkey
LEFT JOIN lineitem l ON c.c_custkey = l.l_orderkey
WHERE c.c_nationkey IS NOT NULL
GROUP BY r.r_name
ORDER BY total_sales_region DESC, r.r_name
FETCH FIRST 10 ROWS ONLY;