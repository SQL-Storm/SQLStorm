WITH RECURSIVE OrderHierarchy AS (
    SELECT o_orderkey, o_custkey, o_orderdate, o_totalprice,
           1 AS order_level
    FROM orders
    WHERE o_orderstatus = 'O'
    UNION ALL
    SELECT o.o_orderkey, o.o_custkey, o.o_orderdate, o.o_totalprice,
           oh.order_level + 1
    FROM orders o
    JOIN OrderHierarchy oh ON o.o_custkey = oh.o_custkey
    WHERE o.o_orderdate > oh.o_orderdate
)
, RankedSuppliers AS (
    SELECT s.s_suppkey, s.s_name, s.s_acctbal,
           RANK() OVER (PARTITION BY p.p_brand ORDER BY s.s_acctbal DESC) AS rank
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    JOIN part p ON ps.ps_partkey = p.p_partkey
    WHERE s.s_acctbal IS NOT NULL
)
SELECT n.n_name, COUNT(DISTINCT oh.o_orderkey) AS total_orders,
       SUM(CASE 
               WHEN l.l_discount > 0.1 THEN l.l_extendedprice * (1 - l.l_discount)
               ELSE l.l_extendedprice 
           END) AS revenue,
       AVG(s.s_acctbal) AS avg_supplier_acctbal
FROM nation n
LEFT JOIN customer c ON n.n_nationkey = c.c_nationkey
LEFT JOIN orders o ON c.c_custkey = o.o_custkey
LEFT JOIN lineitem l ON o.o_orderkey = l.l_orderkey
LEFT JOIN RankedSuppliers s ON l.l_suppkey = s.s_suppkey AND s.rank <= 5
LEFT JOIN OrderHierarchy oh ON o.o_orderkey = oh.o_orderkey
WHERE o.o_orderdate >= DATE '1997-01-01' 
AND (n.n_name LIKE 'A%' OR n.n_name IS NULL)
GROUP BY n.n_name
HAVING SUM(l.l_quantity) > 100
ORDER BY total_orders DESC, n.n_name;