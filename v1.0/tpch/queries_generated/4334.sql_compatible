
WITH SupplierCosts AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_cost,
        COUNT(DISTINCT ps.ps_partkey) AS part_count
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey, s.s_name
), OrderDetails AS (
    SELECT 
        o.o_orderkey,
        o.o_orderdate,
        o.o_totalprice,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_lineitem_cost,
        ROW_NUMBER() OVER (PARTITION BY o.o_orderkey ORDER BY o.o_orderdate DESC) AS rn
    FROM 
        orders o
    LEFT JOIN 
        lineitem l ON o.o_orderkey = l.l_orderkey
    GROUP BY 
        o.o_orderkey, o.o_orderdate, o.o_totalprice
)

SELECT 
    s.s_name,
    s.total_cost,
    COUNT(od.o_orderkey) AS order_count,
    AVG(od.total_lineitem_cost) AS avg_order_value,
    COALESCE(NULLIF(SUM(od.o_totalprice), 0), 'No Orders') AS total_order_value
FROM 
    SupplierCosts s
LEFT JOIN 
    OrderDetails od ON s.s_suppkey IN (SELECT DISTINCT ps.ps_suppkey FROM partsupp ps WHERE ps.ps_partkey IN (SELECT l.l_partkey FROM lineitem l))
GROUP BY 
    s.s_name, s.total_cost
HAVING 
    s.total_cost > 1000 AND COUNT(od.o_orderkey) > 0
ORDER BY 
    s.total_cost DESC, order_count DESC
LIMIT 10;
