
WITH RecursivePart AS (
    SELECT 
        p_partkey,
        p_name,
        p_retailprice,
        p_comment,
        ROW_NUMBER() OVER (PARTITION BY p_brand ORDER BY p_retailprice DESC) AS price_rank
    FROM 
        part
    WHERE 
        p_size IN (
            SELECT DISTINCT p_size 
            FROM part 
            WHERE p_container = 'SM CASE' AND p_retailprice > 500
        )
),
SupplierOrders AS (
    SELECT 
        s.s_suppkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_sales,
        COUNT(DISTINCT l.l_orderkey) AS order_count
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    JOIN 
        lineitem l ON ps.ps_partkey = l.l_partkey
    WHERE 
        s.s_acctbal IS NOT NULL
    GROUP BY 
        s.s_suppkey
),
FilteredOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_totalprice,
        c.c_mktsegment,
        RANK() OVER (PARTITION BY c.c_mktsegment ORDER BY o.o_totalprice DESC) AS seg_rank
    FROM 
        orders o
    JOIN 
        customer c ON o.o_custkey = c.c_custkey
    WHERE 
        o.o_orderdate BETWEEN DATE '1996-01-01' AND DATE '1996-12-31'
        AND (c.c_acctbal IS NULL OR c.c_acctbal > (SELECT AVG(c2.c_acctbal) FROM customer c2))
),
LatestLineItems AS (
    SELECT 
        l.*,
        DATEDIFF(l.l_shipdate, l.l_commitdate) AS delivery_duration,
        CASE 
            WHEN l.l_returnflag = 'R' THEN 'Returned'
            ELSE 'Not Returned' 
        END AS return_status
    FROM 
        lineitem l
    WHERE 
        l.l_shipdate >= (SELECT MAX(o.o_orderdate) FROM orders o)
)

SELECT 
    r.r_name,
    SUM(l_total.total_sales) AS total_sales,
    AVG(COALESCE(lp.p_retailprice, 0)) AS avg_price,
    COUNT(DISTINCT fo.o_orderkey) AS orders_count,
    MAX(CASE WHEN r.r_name IS NOT NULL THEN fo.o_totalprice ELSE 0 END) AS max_order_price
FROM 
    region r
LEFT JOIN 
    SupplierOrders l_total ON r.r_regionkey IN (
        SELECT n.n_regionkey 
        FROM nation n 
        WHERE n.n_nationkey IN (
            SELECT s.s_nationkey 
            FROM supplier s 
            WHERE s.s_suppkey IN (
                SELECT DISTINCT ps.ps_suppkey 
                FROM partsupp ps 
                JOIN RecursivePart rp ON ps.ps_partkey = rp.p_partkey
                WHERE rp.price_rank <= 10
            )
        )
    )
LEFT JOIN 
    FilteredOrders fo ON EXISTS (
        SELECT 1 
        FROM LatestLineItems lli 
        WHERE lli.l_orderkey = fo.o_orderkey AND lli.delivery_duration <= 7
    )
LEFT JOIN 
    RecursivePart lp ON lp.p_partkey = l_total.s_suppkey
GROUP BY 
    r.r_name
HAVING 
    SUM(l_total.total_sales) > 10000
ORDER BY 
    r.r_name ASC, total_sales DESC;
