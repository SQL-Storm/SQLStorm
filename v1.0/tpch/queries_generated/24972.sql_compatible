
WITH RECURSIVE price_rank AS (
    SELECT 
        ps.ps_partkey,
        ps.ps_suppkey,
        ps.ps_supplycost,
        RANK() OVER (PARTITION BY ps.ps_partkey ORDER BY ps.ps_supplycost DESC) AS rnk
    FROM 
        partsupp ps
),
customer_orders AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        SUM(o.o_totalprice) AS total_spent,
        COUNT(o.o_orderkey) AS order_count
    FROM 
        customer c
    LEFT JOIN 
        orders o ON c.c_custkey = o.o_custkey
    GROUP BY 
        c.c_custkey, c.c_name
),
high_spenders AS (
    SELECT 
        c.custkey,
        c.c_name
    FROM 
        customer_orders c
    WHERE 
        c.total_spent > (SELECT AVG(total_spent) FROM customer_orders)
),
supplier_details AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        COUNT(DISTINCT ps.ps_partkey) AS part_count,
        SUM(ps.ps_supplycost) AS total_supply_cost
    FROM 
        supplier s
    LEFT JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey, s.s_name
    HAVING 
        COUNT(DISTINCT ps.ps_partkey) > 5
)

SELECT 
    n.n_name AS nation,
    COALESCE(sp.s_name, 'Unknown Supplier') AS supplier_name,
    COUNT(DISTINCT li.l_orderkey) AS total_orders,
    SUM(li.l_extendedprice * (1 - li.l_discount)) AS total_revenue,
    MAX(pr.ps_supplycost) AS max_supply_cost,
    MIN(pr.ps_supplycost) AS min_supply_cost,
    CASE 
        WHEN SUM(li.l_quantity) > 10000 THEN 'High Volume'
        ELSE 'Standard Volume'
    END AS volume_category
FROM 
    lineitem li
JOIN 
    orders o ON li.l_orderkey = o.o_orderkey 
JOIN 
    customer c ON o.o_custkey = c.c_custkey 
JOIN 
    nation n ON c.c_nationkey = n.n_nationkey 
LEFT JOIN 
    supplier_details sp ON sp.s_suppkey = li.l_suppkey 
LEFT JOIN 
    price_rank pr ON li.l_partkey = pr.ps_partkey AND pr.rnk = 1 
WHERE 
    o.o_orderstatus = 'F' 
    AND li.l_shipdate BETWEEN '1996-01-01' AND '1997-12-31' 
GROUP BY 
    n.n_name, sp.s_name
HAVING 
    SUM(li.l_extendedprice) > 10000
    OR COUNT(DISTINCT CASE WHEN c.c_name IN (SELECT c_name FROM high_spenders) THEN c.c_custkey END) > 0
ORDER BY 
    total_revenue DESC, volume_category ASC;
