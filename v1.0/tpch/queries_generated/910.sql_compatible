
WITH RankedParts AS (
    SELECT 
        p.p_partkey,
        p.p_name,
        p.p_brand,
        p.p_retailprice,
        RANK() OVER (PARTITION BY p.p_brand ORDER BY p.p_retailprice DESC) AS price_rank
    FROM 
        part p
),
SupplierAggregates AS (
    SELECT 
        ps.ps_partkey,
        COUNT(DISTINCT ps.ps_suppkey) AS supplier_count,
        SUM(ps.ps_supplycost) AS total_supply_cost
    FROM 
        partsupp ps
    GROUP BY 
        ps.ps_partkey
),
CustomerOrders AS (
    SELECT 
        c.c_custkey,
        SUM(o.o_totalprice) AS total_spent,
        COUNT(o.o_orderkey) AS order_count
    FROM 
        customer c 
    JOIN 
        orders o ON c.c_custkey = o.o_custkey
    WHERE 
        o.o_orderstatus = 'O'
    GROUP BY 
        c.c_custkey
),
SalesData AS (
    SELECT 
        l.l_orderkey,
        l.l_partkey,
        l.l_quantity,
        l.l_extendedprice,
        l.l_discount,
        c.c_mktsegment,
        l.l_returnflag,
        l.l_shipdate,
        ROW_NUMBER() OVER (PARTITION BY l.l_partkey ORDER BY l.l_shipdate DESC) AS shipment_rank
    FROM 
        lineitem l
    JOIN 
        orders o ON l.l_orderkey = o.o_orderkey
    JOIN 
        customer c ON o.o_custkey = c.c_custkey
    WHERE 
        l.l_shipdate >= DATE '1997-01-01' 
),
TopCustomers AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        COALESCE(AVG(cd.total_spent), 0) AS avg_spent
    FROM 
        customer c
    LEFT JOIN 
        CustomerOrders cd ON c.c_custkey = cd.c_custkey
    GROUP BY 
        c.c_custkey, c.c_name
    HAVING 
        COUNT(cd.order_count) > 0
)
SELECT 
    rp.p_partkey,
    rp.p_name,
    rp.p_brand,
    sa.supplier_count,
    sa.total_supply_cost,
    tc.c_name,
    tc.avg_spent
FROM 
    RankedParts rp
LEFT JOIN 
    SupplierAggregates sa ON rp.p_partkey = sa.ps_partkey
LEFT JOIN 
    SalesData sd ON rp.p_partkey = sd.l_partkey 
LEFT JOIN 
    TopCustomers tc ON sd.l_orderkey = (SELECT MAX(sd_sub.l_orderkey) FROM SalesData sd_sub WHERE sd_sub.l_partkey = rp.p_partkey)
WHERE 
    rp.price_rank <= 3
ORDER BY 
    rp.p_brand, sa.supplier_count DESC, tc.avg_spent DESC;
