WITH RankedParts AS (
    SELECT 
        p.p_partkey, 
        p.p_name, 
        p.p_retailprice, 
        RANK() OVER (PARTITION BY p.p_type ORDER BY p.p_retailprice DESC) AS rnk
    FROM 
        part p
), 
SuppliersWithNoParts AS (
    SELECT 
        s.s_suppkey, 
        s.s_name 
    FROM 
        supplier s
    LEFT JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    WHERE 
        ps.ps_partkey IS NULL
), 
CustomAggregates AS (
    SELECT 
        c.c_custkey, 
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_spent
    FROM 
        customer c
    JOIN 
        orders o ON c.c_custkey = o.o_custkey
    JOIN 
        lineitem l ON o.o_orderkey = l.l_orderkey
    GROUP BY 
        c.c_custkey
), 
FilteredOrders AS (
    SELECT 
        o.o_orderkey, 
        o.o_orderdate,
        o.o_totalprice,
        CASE 
            WHEN o.o_orderstatus = 'F' THEN 'FINALIZED'
            ELSE 'OPEN'
        END AS order_status
    FROM 
        orders o
    WHERE 
        o.o_orderdate BETWEEN DATE '1997-01-01' AND DATE '1997-12-31'
), 
NationSummary AS (
    SELECT 
        n.n_nationkey, 
        n.n_name, 
        COUNT(DISTINCT s.s_suppkey) AS supplier_count,
        SUM(ps.ps_supplycost * ps.ps_availqty) as total_supply_value
    FROM 
        nation n
    LEFT JOIN 
        supplier s ON n.n_nationkey = s.s_nationkey
    LEFT JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        n.n_nationkey, n.n_name
)

SELECT 
    rp.rnk,
    rp.p_partkey, 
    rp.p_name,
    COUNT(DISTINCT fo.o_orderkey) AS order_count,
    ns.supplier_count,
    cu.total_spent
FROM 
    RankedParts rp
LEFT JOIN 
    FilteredOrders fo ON rp.rnk <= 10
LEFT JOIN 
    NationSummary ns ON ns.n_nationkey = (
        SELECT n.n_nationkey
        FROM nation n
        JOIN supplier s ON n.n_nationkey = s.s_nationkey
        WHERE s.s_suppkey = (SELECT MAX(s2.s_suppkey) FROM supplier s2)
    )
LEFT JOIN 
    CustomAggregates cu ON cu.c_custkey = (
        SELECT c.c_custkey 
        FROM customer c 
        ORDER BY c.c_acctbal DESC 
        LIMIT 1
    )
WHERE 
    rp.p_retailprice > (
        SELECT AVG(p2.p_retailprice) 
        FROM part p2 
        WHERE p2.p_container IS NOT NULL 
        AND p2.p_size NOT IN (SELECT DISTINCT s.s_size FROM supplier s WHERE s.s_acctbal < 0)
    )
GROUP BY 
    rp.rnk, rp.p_partkey, rp.p_name, ns.supplier_count, cu.total_spent
HAVING 
    SUM(fo.o_totalprice) IS NOT NULL
ORDER BY 
    rp.rnk, rp.p_partkey;