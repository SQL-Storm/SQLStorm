WITH RECURSIVE SupplierOrders AS (
    SELECT s.s_suppkey, s.s_name, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    JOIN lineitem l ON ps.ps_partkey = l.l_partkey
    WHERE l.l_shipdate >= '1996-01-01'
    GROUP BY s.s_suppkey, s.s_name
    
    UNION ALL
    
    SELECT s.s_suppkey, s.s_name, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    JOIN lineitem l ON ps.ps_partkey = l.l_partkey
    WHERE l.l_shipdate < '1996-01-01' AND LAG(l.l_shipdate) OVER (PARTITION BY s.s_suppkey ORDER BY l.l_shipdate) IS NOT NULL
    GROUP BY s.s_suppkey, s.s_name
),
AggregatedRevenue AS (
    SELECT s.s_suppkey, s.s_name, COALESCE(SUM(so.total_revenue), 0) AS total_revenue
    FROM supplier s
    LEFT JOIN SupplierOrders so ON s.s_suppkey = so.s_suppkey
    GROUP BY s.s_suppkey, s.s_name
)
SELECT r.r_name, COUNT(DISTINCT n.n_nationkey) AS nation_count,
       AVG(ar.total_revenue) AS avg_revenue, 
       MAX(ar.total_revenue) AS max_revenue,
       STRING_AGG(ar.s_name, ', ') AS suppliers
FROM region r
JOIN nation n ON r.r_regionkey = n.n_regionkey
JOIN supplier s ON n.n_nationkey = s.s_nationkey
JOIN AggregatedRevenue ar ON s.s_suppkey = ar.s_suppkey
WHERE ar.total_revenue > (
    SELECT AVG(total_revenue) 
    FROM AggregatedRevenue
    WHERE total_revenue IS NOT NULL
)
GROUP BY r.r_name
HAVING COUNT(DISTINCT n.n_nationkey) > 1
ORDER BY avg_revenue DESC;