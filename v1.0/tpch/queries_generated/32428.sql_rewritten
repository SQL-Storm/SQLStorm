WITH RECURSIVE part_hierarchy AS (
    SELECT p_partkey, p_name, p_container, p_retailprice, p_comment, 0 AS level
    FROM part
    WHERE p_size = 10
    UNION ALL
    SELECT p.p_partkey, p.p_name, p.p_container, p.p_retailprice, p.p_comment, ph.level + 1
    FROM part_hierarchy ph
    JOIN part p ON p.p_partkey = ph.p_partkey + 1
),
order_summary AS (
    SELECT o.o_orderkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE l.l_shipdate >= '1997-01-01' AND l.l_shipdate < '1998-01-01'
    GROUP BY o.o_orderkey
),
supplier_availability AS (
    SELECT ps.ps_partkey, SUM(ps.ps_availqty) AS total_available
    FROM partsupp ps
    GROUP BY ps.ps_partkey
),
customer_segment AS (
    SELECT c.c_mktsegment, COUNT(DISTINCT o.o_orderkey) AS total_orders
    FROM customer c
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    GROUP BY c.c_mktsegment
)
SELECT
    ph.p_partkey,
    ph.p_name,
    COALESCE(sa.total_available, 0) AS available_quantity,
    COALESCE(os.total_revenue, 0) AS total_revenue,
    cs.total_orders,
    ph.p_retailprice * COALESCE(sa.total_available, 0) AS potential_revenue
FROM
    part_hierarchy ph
LEFT JOIN supplier_availability sa ON ph.p_partkey = sa.ps_partkey
LEFT JOIN order_summary os ON ph.p_partkey = os.o_orderkey
LEFT JOIN customer_segment cs ON cs.c_mktsegment = 'FOOD'
ORDER BY potential_revenue DESC;