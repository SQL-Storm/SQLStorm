WITH RankedOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_orderdate,
        o.o_totalprice,
        o.o_orderstatus,
        c.c_name,
        RANK() OVER (PARTITION BY o.o_orderstatus ORDER BY o.o_totalprice DESC) AS OrderRank
    FROM 
        orders o
    JOIN 
        customer c ON o.o_custkey = c.c_custkey
    WHERE 
        o.o_orderdate >= DATE '1997-01-01'
),
SupplyDetails AS (
    SELECT 
        ps.ps_partkey,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS TotalSupplyCost
    FROM 
        partsupp ps
    JOIN 
        supplier s ON ps.ps_suppkey = s.s_suppkey
    GROUP BY 
        ps.ps_partkey
),
LineItemSummary AS (
    SELECT 
        l.l_orderkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS TotalLinePrice,
        COUNT(*) AS ItemCount
    FROM 
        lineitem l
    GROUP BY 
        l.l_orderkey
)
SELECT 
    o.o_orderkey,
    o.o_orderdate,
    o.o_totalprice,
    o.c_name,
    COALESCE(ls.TotalLinePrice, 0) AS TotalLinePrice,
    COALESCE(sd.TotalSupplyCost, 0) AS TotalSupplyCost,
    CASE 
        WHEN o.o_orderstatus = 'F' THEN 'Completed'
        WHEN o.o_orderstatus = 'P' THEN 'Pending'
        ELSE 'Other'
    END AS StatusDescription
FROM 
    RankedOrders o
LEFT JOIN 
    LineItemSummary ls ON o.o_orderkey = ls.l_orderkey
LEFT JOIN 
    SupplyDetails sd ON EXISTS (
        SELECT 1 FROM partsupp ps
        WHERE ps.ps_partkey IN (
            SELECT l.l_partkey FROM lineitem l WHERE l.l_orderkey = o.o_orderkey
        )
    )
WHERE 
    o.OrderRank <= 5 OR (o.o_totalprice > 1000 AND o.o_orderstatus = 'F')
ORDER BY 
    o.o_orderdate DESC, o.o_orderkey;