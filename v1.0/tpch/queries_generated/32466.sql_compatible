
WITH RECURSIVE SupplierHierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal, 0 AS level
    FROM supplier s
    WHERE s.s_acctbal > 1000

    UNION ALL

    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal, sh.level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON sh.s_nationkey = s.s_nationkey
    WHERE s.s_acctbal > 500
), RankedCustomers AS (
    SELECT c.c_custkey, c.c_name, c.c_acctbal,
           RANK() OVER (PARTITION BY c.c_nationkey ORDER BY c.c_acctbal DESC) AS rank
    FROM customer c
), LineItemSummary AS (
    SELECT l.l_orderkey,
           SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
           COUNT(DISTINCT l.l_partkey) AS part_count
    FROM lineitem l
    GROUP BY l.l_orderkey
), RegionSupplierStats AS (
    SELECT r.r_name, SUM(s.s_acctbal) AS total_acctbal
    FROM region r
    LEFT JOIN nation n ON r.r_regionkey = n.n_regionkey
    LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
    GROUP BY r.r_name
)
SELECT rh.s_name, 
       rc.c_name, 
       rs.r_name, 
       l.total_revenue, 
       l.part_count,
       CASE 
           WHEN l.total_revenue IS NULL THEN 'No Revenue'
           ELSE CONCAT('Revenue: $', ROUND(l.total_revenue, 2))
       END AS revenue_status
FROM SupplierHierarchy rh
FULL OUTER JOIN RankedCustomers rc ON rh.s_nationkey = rc.c_nationkey AND rc.rank = 1
LEFT JOIN LineItemSummary l ON rc.c_custkey = (
    SELECT o.o_custkey 
    FROM orders o 
    WHERE o.o_orderkey = l.l_orderkey 
    FETCH FIRST 1 ROWS ONLY
)
JOIN RegionSupplierStats rs ON rh.s_nationkey = (
    SELECT n.n_nationkey 
    FROM nation n 
    WHERE n.n_regionkey = (SELECT r.r_regionkey FROM region r WHERE r.r_name = rs.r_name)
);
