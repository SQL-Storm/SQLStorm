
WITH ranked_orders AS (
    SELECT 
        o.o_orderkey, 
        o.o_orderdate, 
        o.o_totalprice, 
        o.o_orderstatus, 
        ROW_NUMBER() OVER (PARTITION BY o.o_orderstatus ORDER BY o.o_totalprice DESC) AS rn
    FROM orders o 
    WHERE o.o_orderdate >= DATE '1997-01-01' 
        AND o.o_orderstatus IN ('O', 'F')
),
supplier_stats AS (
    SELECT 
        s.s_suppkey, 
        AVG(ps.ps_supplycost) AS avg_supplycost, 
        COUNT(DISTINCT ps.ps_partkey) AS parts_count
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY s.s_suppkey
),
part_aggregates AS (
    SELECT 
        p.p_partkey, 
        SUM(l.l_quantity) AS total_quantity, 
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue
    FROM part p
    JOIN lineitem l ON p.p_partkey = l.l_partkey
    WHERE l.l_shipdate BETWEEN DATE '1997-01-01' AND DATE '1997-12-31'
    GROUP BY p.p_partkey
),
final_report AS (
    SELECT 
        r.r_name AS region_name,
        COUNT(DISTINCT c.c_custkey) AS customer_count,
        SUM(o.o_totalprice) AS total_orders,
        p.p_name AS popular_part,
        pp.total_quantity,
        ps.avg_supplycost
    FROM region r
    LEFT JOIN nation n ON r.r_regionkey = n.n_regionkey
    LEFT JOIN customer c ON n.n_nationkey = c.c_nationkey
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    LEFT JOIN part_aggregates pp ON pp.p_partkey = o.o_orderkey
    LEFT JOIN supplier_stats ps ON ps.s_suppkey = (
        SELECT ps_suppkey 
        FROM partsupp 
        WHERE ps_partkey = pp.p_partkey 
        ORDER BY ps_supplycost DESC 
        FETCH FIRST 1 ROWS ONLY
    )
    WHERE o.o_orderstatus IS NOT NULL AND pp.total_quantity IS NOT NULL
    GROUP BY r.r_name, pp.total_quantity, ps.avg_supplycost, p.p_name
    HAVING SUM(o.o_totalprice) > (SELECT AVG(o_totalprice) FROM orders)
)
SELECT 
    COALESCE(region_name, 'Unknown Region') AS region_name,
    customer_count, 
    total_orders, 
    popular_part, 
    total_quantity, 
    COALESCE(avg_supplycost, 0) AS avg_supplycost
FROM final_report
ORDER BY total_orders DESC, customer_count ASC
FETCH FIRST 50 ROWS ONLY;
