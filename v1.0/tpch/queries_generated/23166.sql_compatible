
WITH RankedSuppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        s.s_acctbal,
        RANK() OVER (PARTITION BY s.s_nationkey ORDER BY s.s_acctbal DESC) AS rank_acctbal
    FROM supplier s
), FilteredOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_totalprice,
        o.o_orderdate,
        DENSE_RANK() OVER (ORDER BY o.o_orderdate DESC) AS order_rank
    FROM orders o
    WHERE o.o_orderstatus = 'O'
), HighValueParts AS (
    SELECT 
        p.p_partkey,
        p.p_name,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_value
    FROM part p
    JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
    GROUP BY p.p_partkey, p.p_name
    HAVING SUM(ps.ps_supplycost * ps.ps_availqty) > (SELECT AVG(ps_supplycost) FROM partsupp)
), CustomerWiseTotal AS (
    SELECT 
        c.c_custkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_spent,
        ROW_NUMBER() OVER (PARTITION BY c.c_nationkey ORDER BY SUM(l.l_extendedprice * (1 - l.l_discount)) DESC) AS cust_rank
    FROM customer c
    JOIN orders o ON c.c_custkey = o.o_custkey
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    GROUP BY c.c_custkey, c.c_nationkey
), NationSummary AS (
    SELECT 
        n.n_nationkey,
        n.n_name,
        COUNT(DISTINCT s.s_suppkey) AS supplier_count,
        COALESCE(MAX(r.s_acctbal), 0) AS max_acct_balance
    FROM nation n
    LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
    LEFT JOIN RankedSuppliers r ON s.s_suppkey = r.s_suppkey
    GROUP BY n.n_nationkey, n.n_name
)
SELECT 
    r.n_name AS nation_name,
    r.supplier_count,
    r.max_acct_balance,
    p.total_supply_value,
    c.total_spent
FROM NationSummary r
LEFT JOIN HighValueParts p ON p.p_partkey = 
    (SELECT ps.ps_partkey FROM partsupp ps WHERE ps.ps_availqty = (
        SELECT MAX(ps_availqty) FROM partsupp WHERE ps.partkey = p.p_partkey
    ) LIMIT 1)
LEFT JOIN CustomerWiseTotal c ON r.n_nationkey = c.c_nationkey
WHERE c.cust_rank <= 5 
ORDER BY r.n_name, c.total_spent DESC
