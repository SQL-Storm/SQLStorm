WITH RECURSIVE CustomerHierarchy AS (
    SELECT c.c_custkey, c.c_name, c.c_nationkey, 0 AS level
    FROM customer c
    WHERE c.c_acctbal > 1000
    UNION ALL
    SELECT c.c_custkey, c.c_name, c.c_nationkey, ch.level + 1
    FROM customer c
    JOIN CustomerHierarchy ch ON c.c_nationkey = ch.c_nationkey
    WHERE c.c_acctbal > 500
),
TopSuppliers AS (
    SELECT s.s_suppkey, s.s_name, SUM(ps.ps_supplycost) AS total_supplycost
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY s.s_suppkey, s.s_name
    HAVING SUM(ps.ps_supplycost) > 10000
),
OrderAnalysis AS (
    SELECT o.o_orderkey, o.o_totalprice, 
           ROW_NUMBER() OVER (PARTITION BY o.o_orderstatus ORDER BY o.o_totalprice DESC) AS order_rank
    FROM orders o
)
SELECT c.c_name AS Customer_Name,
       r.r_name AS Region_Name,
       s.s_name AS Supplier_Name,
       p.p_name AS Part_Name,
       la.o_totalprice AS Total_Order_Price,
       COALESCE(NULLIF(p.p_comment, ''), 'No Comment') AS Part_Comment,
       SUM(li.l_extendedprice * (1 - li.l_discount)) AS Total_Sales,
       AVG(li.l_tax) AS Average_Tax,
       COUNT(DISTINCT l.l_orderkey) AS Unique_Orders
FROM lineitem li
JOIN orders la ON li.l_orderkey = la.o_orderkey
JOIN partsupp ps ON li.l_partkey = ps.ps_partkey
JOIN supplier s ON ps.ps_suppkey = s.s_suppkey
JOIN part p ON li.l_partkey = p.p_partkey
JOIN nation n ON s.s_nationkey = n.n_nationkey
JOIN region r ON n.n_regionkey = r.r_regionkey
JOIN CustomerHierarchy ch ON ch.c_nationkey = n.n_nationkey
WHERE p.p_size IN (SELECT DISTINCT p_size FROM part WHERE p_retailprice > 100)
  AND li.l_shipdate >= DATE '1996-01-01'
  AND li.l_shipdate < DATE '1997-01-01'
GROUP BY c.c_name, r.r_name, s.s_name, p.p_name, la.o_totalprice
HAVING SUM(li.l_extendedprice * (1 - li.l_discount)) > 5000
ORDER BY Total_Sales DESC
LIMIT 50;