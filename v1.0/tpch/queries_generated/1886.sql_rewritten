WITH RankedOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_orderdate,
        o.o_totalprice,
        o.o_orderstatus,
        ROW_NUMBER() OVER (PARTITION BY o.o_orderstatus ORDER BY o.o_orderdate DESC) AS rn
    FROM 
        orders o
    WHERE 
        o.o_orderdate >= DATE '1997-01-01'
),
SupplierSummary AS (
    SELECT 
        ps.ps_partkey,
        SUM(ps.ps_availqty * ps.ps_supplycost) AS total_supply_cost,
        COUNT(DISTINCT ps.ps_suppkey) AS unique_suppliers
    FROM 
        partsupp ps
    GROUP BY 
        ps.ps_partkey
),
PartDetails AS (
    SELECT 
        p.p_partkey,
        p.p_name,
        COALESCE(SUM(l.l_quantity), 0) AS total_quantity,
        AVG(l.l_extendedprice) AS avg_extended_price
    FROM 
        part p
    LEFT JOIN 
        lineitem l ON p.p_partkey = l.l_partkey
    GROUP BY 
        p.p_partkey
),
CustomerNation AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        n.n_name AS nation_name,
        c.c_acctbal
    FROM 
        customer c
    JOIN 
        nation n ON c.c_nationkey = n.n_nationkey
    WHERE 
        c.c_acctbal > (SELECT AVG(c2.c_acctbal) FROM customer c2)
)
SELECT 
    COALESCE(pd.p_name, 'Unknown Part') AS part_name,
    pd.total_quantity,
    pd.avg_extended_price,
    ss.total_supply_cost,
    cn.nation_name,
    o.o_orderdate
FROM 
    PartDetails pd
FULL OUTER JOIN 
    SupplierSummary ss ON pd.p_partkey = ss.ps_partkey
LEFT JOIN 
    CustomerNation cn ON pd.p_partkey IN (SELECT ps.ps_partkey FROM partsupp ps WHERE ps.ps_suppkey IN (SELECT s.s_suppkey FROM supplier s WHERE s.s_nationkey IN (SELECT n.n_nationkey FROM nation n WHERE n.n_name = cn.nation_name)))
LEFT JOIN 
    RankedOrders o ON o.o_orderkey = (SELECT l.l_orderkey FROM lineitem l WHERE l.l_partkey = pd.p_partkey ORDER BY l.l_shipdate DESC LIMIT 1)
WHERE 
    pd.total_quantity > 0 OR ss.total_supply_cost IS NOT NULL
ORDER BY 
    pd.avg_extended_price DESC,
    total_quantity ASC;