
WITH RECURSIVE SupplierHierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, 0 AS level
    FROM supplier s
    WHERE s.s_acctbal > (SELECT AVG(s_acctbal) FROM supplier)
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, sh.level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE sh.level < 5
),
SalesData AS (
    SELECT o.o_orderkey, 
           SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_sales,
           ROW_NUMBER() OVER (PARTITION BY o.o_orderkey ORDER BY SUM(l.l_extendedprice * (1 - l.l_discount)) DESC) AS sales_rank
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    GROUP BY o.o_orderkey
),
TopSales AS (
    SELECT o.o_orderkey,
           o.o_orderstatus,
           sd.total_sales
    FROM orders o
    JOIN SalesData sd ON o.o_orderkey = sd.o_orderkey
    WHERE sd.sales_rank <= 10
)
SELECT sh.s_name AS supplier_name,
       r.r_name AS region_name,
       COUNT(DISTINCT ts.o_orderkey) AS order_count,
       AVG(ps.ps_supplycost) AS avg_supply_cost,
       SUM(ts.total_sales) AS total_sales_value,
       SUM(CASE WHEN ts.o_orderstatus = 'F' THEN ts.total_sales ELSE 0 END) AS completed_sales
FROM TopSales ts
JOIN SupplierHierarchy sh ON sh.s_nationkey = ts.o_orderkey
LEFT JOIN region r ON r.r_regionkey = (SELECT n.n_regionkey FROM nation n WHERE n.n_nationkey = sh.s_nationkey)
JOIN partsupp ps ON ps.ps_suppkey = sh.s_suppkey
WHERE ts.total_sales > 1000
GROUP BY sh.s_name, r.r_name
HAVING COUNT(DISTINCT ts.o_orderkey) > 5
ORDER BY total_sales_value DESC;
