WITH RankedOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_totalprice,
        o.o_orderdate,
        ROW_NUMBER() OVER (PARTITION BY o.o_orderstatus ORDER BY o.o_totalprice DESC) AS price_rank
    FROM 
        orders o
    WHERE 
        o.o_orderdate >= DATE '1995-01-01' 
        AND o.o_orderdate < DATE '1997-01-01'
),
NationalSuppliers AS (
    SELECT 
        n.n_nationkey,
        n.n_name,
        COUNT(DISTINCT s.s_suppkey) AS total_suppliers
    FROM 
        nation n
    LEFT JOIN 
        supplier s ON n.n_nationkey = s.s_nationkey
    GROUP BY 
        n.n_nationkey, n.n_name
),
CustomerExpenditure AS (
    SELECT 
        c.c_custkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_expenditure,
        STRING_AGG(l.l_comment, '; ') AS comments
    FROM 
        customer c
    JOIN 
        orders o ON c.c_custkey = o.o_custkey
    JOIN 
        lineitem l ON o.o_orderkey = l.l_orderkey
    GROUP BY 
        c.c_custkey
),
PartSupplierInfo AS (
    SELECT 
        p.p_partkey,
        COUNT(DISTINCT ps.ps_suppkey) AS supplier_count,
        AVG(ps.ps_supplycost) AS avg_supply_cost,
        MAX(ps.ps_availqty) AS max_avail_qty
    FROM 
        part p
    JOIN 
        partsupp ps ON p.p_partkey = ps.ps_partkey
    GROUP BY 
        p.p_partkey
)
SELECT 
    r.r_name AS region_name,
    n.total_suppliers,
    SUM(COALESCE(ce.total_expenditure, 0)) AS total_customer_expenditure,
    COUNT(DISTINCT CASE WHEN ro.price_rank <= 10 THEN ro.o_orderkey END) AS high_value_orders,
    pi.supplier_count,
    pi.avg_supply_cost,
    pi.max_avail_qty
FROM 
    region r
LEFT JOIN 
    nation n ON r.r_regionkey = n.n_regionkey
LEFT JOIN 
    NationalSuppliers ns ON n.n_nationkey = ns.n_nationkey
LEFT JOIN 
    CustomerExpenditure ce ON n.n_nationkey = (SELECT c.c_nationkey FROM customer c WHERE c.c_custkey = ce.c_custkey) 
LEFT JOIN 
    PartSupplierInfo pi ON pi.p_partkey IN (SELECT l.l_partkey FROM lineitem l JOIN orders o ON l.l_orderkey = o.o_orderkey WHERE o.o_orderstatus = 'F')
LEFT JOIN 
    RankedOrders ro ON ro.o_orderkey = (SELECT l.l_orderkey FROM lineitem l WHERE l.l_partkey IN (SELECT p.p_partkey FROM part p) LIMIT 1)
GROUP BY 
    r.r_name, n.total_suppliers, pi.supplier_count, pi.avg_supply_cost, pi.max_avail_qty
HAVING 
    SUM(COALESCE(ce.total_expenditure, 0)) > 1000000
ORDER BY 
    total_customer_expenditure DESC, region_name;