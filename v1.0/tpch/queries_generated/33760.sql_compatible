
WITH RECURSIVE nation_hierarchy AS (
    SELECT n_nationkey, n_name, n_regionkey, 0 AS level
    FROM nation
    WHERE n_regionkey IS NOT NULL
    UNION ALL
    SELECT n.n_nationkey, n.n_name, n.n_regionkey, nh.level + 1
    FROM nation n
    JOIN nation_hierarchy nh ON n.n_regionkey = nh.n_nationkey
),
high_value_orders AS (
    SELECT o.o_orderkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_value
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    GROUP BY o.o_orderkey
    HAVING SUM(l.l_extendedprice * (1 - l.l_discount)) > 1000
),
supplier_part_info AS (
    SELECT s.s_suppkey, s.s_name, p.p_partkey, p.p_name, ps.ps_availqty, ps.ps_supplycost,
           ROW_NUMBER() OVER (PARTITION BY p.p_partkey ORDER BY ps.ps_supplycost ASC) AS rank
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    JOIN part p ON ps.ps_partkey = p.p_partkey
    WHERE ps.ps_availqty > 0
),
avg_supplier_cost AS (
    SELECT ps_partkey, AVG(ps_supplycost) AS avg_cost
    FROM supplier_part_info
    WHERE rank <= 3
    GROUP BY ps_partkey
)
SELECT r.r_name, COUNT(DISTINCT o.o_orderkey) AS order_count,
       AVG(l.l_extendedprice) AS avg_price, SUM(CASE WHEN l.l_shipdate > DATE '1996-01-01' THEN l.l_quantity ELSE 0 END) AS total_recent_qty,
       STRING_AGG(DISTINCT p.p_name, ', ') AS part_names
FROM region r
LEFT JOIN nation n ON r.r_regionkey = n.n_regionkey
LEFT JOIN customer c ON n.n_nationkey = c.c_nationkey
LEFT JOIN orders o ON c.c_custkey = o.o_custkey
LEFT JOIN lineitem l ON o.o_orderkey = l.l_orderkey
JOIN high_value_orders hvo ON o.o_orderkey = hvo.o_orderkey
JOIN avg_supplier_cost asc ON l.l_partkey = asc.ps_partkey
JOIN supplier_part_info spi ON spi.p_partkey = l.l_partkey AND spi.rank = 1
GROUP BY r.r_name
HAVING COUNT(DISTINCT o.o_orderkey) > 10 
   AND AVG(l.l_extendedprice) > (SELECT AVG(avg_cost) FROM avg_supplier_cost)
ORDER BY order_count DESC;
