WITH RankedOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_orderdate,
        o.o_totalprice,
        o.o_orderpriority,
        c.c_mktsegment,
        ROW_NUMBER() OVER (PARTITION BY c.c_mktsegment ORDER BY o.o_totalprice DESC) as rank
    FROM 
        orders o
    JOIN 
        customer c ON o.o_custkey = c.c_custkey
    WHERE 
        o.o_orderdate >= DATE '1996-01-01' 
        AND o.o_orderdate < DATE '1997-01-01'
),
TopOrders AS (
    SELECT 
        r.o_orderkey,
        r.o_orderdate,
        r.o_totalprice,
        r.o_orderpriority,
        r.c_mktsegment
    FROM 
        RankedOrders r
    WHERE 
        r.rank <= 10
),
SupplierDetails AS (
    SELECT 
        ps.ps_partkey,
        ps.ps_suppkey,
        s.s_name,
        s.s_acctbal,
        ps.ps_supplycost
    FROM 
        partsupp ps
    JOIN 
        supplier s ON ps.ps_suppkey = s.s_suppkey
),
OrderLineItems AS (
    SELECT 
        l.l_orderkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue
    FROM 
        lineitem l
    JOIN 
        TopOrders t ON l.l_orderkey = t.o_orderkey
    GROUP BY 
        l.l_orderkey
)
SELECT 
    t.o_orderkey,
    t.o_orderdate,
    t.o_totalprice,
    s.s_name AS supplier_name,
    s.s_acctbal AS supplier_account_balance,
    o.total_revenue AS order_revenue
FROM 
    TopOrders t
JOIN 
    OrderLineItems o ON t.o_orderkey = o.l_orderkey
JOIN 
    SupplierDetails s ON s.ps_partkey IN (SELECT ps_partkey FROM partsupp WHERE ps_suppkey = s.ps_suppkey)
ORDER BY 
    t.o_orderdate DESC, 
    t.o_totalprice DESC;