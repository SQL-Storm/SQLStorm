
WITH RankedOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_orderdate,
        o.o_totalprice,
        c.c_mktsegment,
        ROW_NUMBER() OVER (PARTITION BY c.c_mktsegment ORDER BY o.o_totalprice DESC) AS rn
    FROM 
        orders o
    JOIN 
        customer c ON o.o_custkey = c.c_custkey
    WHERE 
        o.o_orderdate >= DATE '1997-01-01' 
        AND o.o_orderdate < DATE '1997-12-31'
),
SupplierParts AS (
    SELECT 
        ps.ps_partkey,
        SUM(ps.ps_supplycost) AS total_supply_cost
    FROM 
        partsupp ps
    GROUP BY 
        ps.ps_partkey
),
HighValueItems AS (
    SELECT 
        p.p_partkey,
        p.p_name,
        p.p_retailprice,
        COALESCE(sp.total_supply_cost, 0) AS supply_cost,
        p.p_retailprice - COALESCE(sp.total_supply_cost, 0) AS profit_margin
    FROM 
        part p
    LEFT JOIN 
        SupplierParts sp ON p.p_partkey = sp.ps_partkey
    WHERE 
        p.p_retailprice > 100
)
SELECT 
    DISTINCT r.r_name,
    p.p_name,
    hvi.profit_margin,
    hvi.supply_cost,
    COUNT(ro.o_orderkey) AS order_count,
    AVG(ro.o_totalprice) AS avg_order_price
FROM 
    HighValueItems hvi
JOIN 
    lineitem l ON hvi.p_partkey = l.l_partkey
JOIN 
    orders o ON l.l_orderkey = o.o_orderkey
JOIN 
    customer c ON o.o_custkey = c.c_custkey
JOIN 
    nation n ON c.c_nationkey = n.n_nationkey
JOIN 
    region r ON n.n_regionkey = r.r_regionkey
LEFT JOIN 
    RankedOrders ro ON c.c_mktsegment = ro.c_mktsegment
WHERE 
    hvi.profit_margin > 0
    AND r.r_comment IS NOT NULL
GROUP BY 
    r.r_name, hvi.p_name, hvi.profit_margin, hvi.supply_cost
HAVING 
    COUNT(ro.o_orderkey) > 5
ORDER BY 
    r.r_name, avg_order_price DESC;
