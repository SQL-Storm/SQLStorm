
WITH RankedOrders AS (
    SELECT
        o.o_orderkey,
        o.o_orderdate,
        o.o_totalprice,
        c.c_custkey,
        c.c_name,
        DENSE_RANK() OVER (PARTITION BY c.c_nationkey ORDER BY o.o_totalprice DESC) AS rank_by_price
    FROM
        orders o
    JOIN
        customer c ON o.o_custkey = c.c_custkey
    WHERE
        o.o_orderstatus = 'O' AND
        o.o_orderdate >= DATE '1996-01-01'
),
HighValueOrders AS (
    SELECT
        o.o_orderkey,
        o.o_totalprice,
        o.o_orderdate,
        o.c_custkey,
        o.c_name
    FROM
        RankedOrders o
    WHERE
        o.rank_by_price <= 5
),
SupplierPartStats AS (
    SELECT
        ps.ps_partkey,
        SUM(ps.ps_availqty) AS total_available,
        COUNT(DISTINCT ps.ps_suppkey) AS supplier_count
    FROM
        partsupp ps
    GROUP BY
        ps.ps_partkey
)
SELECT
    p.p_partkey,
    p.p_name,
    p.p_retailprice,
    COALESCE(sp.supplier_count, 0) AS supplier_count,
    COALESCE(s.total_available, 0) AS total_available,
    h.o_totalprice,
    h.o_orderdate,
    h.c_name
FROM
    part p
LEFT JOIN
    SupplierPartStats sp ON p.p_partkey = sp.ps_partkey
LEFT JOIN
    HighValueOrders h ON h.o_orderkey IN (
        SELECT
            l.l_orderkey
        FROM
            lineitem l
        WHERE
            l.l_partkey = p.p_partkey
    )
LEFT JOIN
    supplier s ON h.custkey = s.s_nationkey
WHERE
    p.p_retailprice > (
        SELECT
            AVG(p2.p_retailprice)
        FROM
            part p2
    )
ORDER BY
    p.p_retailprice DESC, 
    h.o_totalprice DESC;
