WITH RECURSIVE SupplierHierarchy AS (
    SELECT s_suppkey, s_name, s_nationkey, s_acctbal
    FROM supplier
    WHERE s_acctbal > 10000
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE s.s_acctbal > sh.s_acctbal
),
TopCustomers AS (
    SELECT c.c_custkey, c.c_name, SUM(o.o_totalprice) AS total_spent
    FROM customer c
    JOIN orders o ON c.c_custkey = o.o_custkey
    WHERE o.o_orderstatus = 'O'
    GROUP BY c.c_custkey, c.c_name
    HAVING SUM(o.o_totalprice) > 50000
),
PartSupplierInfo AS (
    SELECT p.p_partkey, p.p_name, ps.ps_supplycost, s.s_name, s.s_acctbal
    FROM part p
    JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
    JOIN supplier s ON ps.ps_suppkey = s.s_suppkey
    WHERE p.p_size IN (SELECT DISTINCT p_size FROM part WHERE p_retailprice < 100)
),
AggregatedLineItem AS (
    SELECT l.l_orderkey, 
           SUM(l.l_extendedprice * (1 - l.l_discount)) AS revenue,
           COUNT(*) AS line_count,
           RANK() OVER (PARTITION BY l.l_orderkey ORDER BY SUM(l.l_extendedprice * (1 - l.l_discount)) DESC) AS rank
    FROM lineitem l
    WHERE l.l_shipdate BETWEEN '1997-01-01' AND '1997-12-31'
    GROUP BY l.l_orderkey
)
SELECT 
    r.r_name,
    SUM(pli.ps_supplycost) AS total_cost,
    a.revenue,
    tc.total_spent
FROM region r
LEFT JOIN PartSupplierInfo pli ON r.r_regionkey = pli.ps_partkey
LEFT JOIN AggregatedLineItem a ON a.l_orderkey = pli.ps_partkey
JOIN TopCustomers tc ON tc.c_custkey = a.l_orderkey
WHERE a.line_count > 5
  AND tc.total_spent IS NOT NULL
GROUP BY r.r_name, a.revenue, tc.total_spent
ORDER BY total_cost DESC;