WITH RECURSIVE sales_ranking AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        SUM(o.o_totalprice) AS total_spent,
        RANK() OVER (PARTITION BY c.c_custkey ORDER BY SUM(o.o_totalprice) DESC) AS rank_spent
    FROM customer c
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    GROUP BY c.c_custkey, c.c_name
),
supplier_info AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_value
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY s.s_suppkey, s.s_name
),
part_sales AS (
    SELECT 
        p.p_partkey,
        p.p_name,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_sales
    FROM part p
    JOIN lineitem l ON p.p_partkey = l.l_partkey
    WHERE l.l_shipdate BETWEEN '1995-01-01' AND '1995-12-31'
    GROUP BY p.p_partkey, p.p_name
)
SELECT 
    r.r_name,
    n.n_name,
    coalesce(ps.p_name, 'Unknown Part') AS product_name,
    COALESCE(ss.total_supply_value, 0) AS total_supplier_value,
    COALESCE(sr.total_spent, 0) AS total_customer_spending
FROM region r
LEFT JOIN nation n ON r.r_regionkey = n.n_regionkey
LEFT JOIN part_sales ps ON ps.p_partkey = (
        SELECT p.p_partkey 
        FROM part p 
        WHERE p.p_size IN (SELECT DISTINCT p_size FROM part WHERE p_retailprice < 50.00) 
        ORDER BY p.p_retailprice ASC 
        LIMIT 1
    )
LEFT JOIN supplier_info ss ON ss.s_suppkey = (
        SELECT ps.ps_suppkey 
        FROM partsupp ps 
        ORDER BY ps.ps_availqty DESC 
        FETCH FIRST 1 ROWS ONLY
    )
LEFT JOIN sales_ranking sr ON sr.c_custkey = (
        SELECT DISTINCT c.c_custkey 
        FROM customer c 
        WHERE c.c_acctbal IS NOT NULL 
        AND c.c_acctbal > (
            SELECT AVG(c2.c_acctbal) 
            FROM customer c2 
            WHERE c2.c_nationkey = n.n_nationkey
        )
        ORDER BY c.c_acctbal DESC 
        LIMIT 1
    )
WHERE n.n_name IS NOT NULL
ORDER BY r.r_name, n.n_name, total_customer_spending DESC;