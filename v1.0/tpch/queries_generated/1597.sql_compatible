
WITH CustomerOrderSummary AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        SUM(o.o_totalprice) AS total_spent,
        COUNT(o.o_orderkey) AS order_count
    FROM 
        customer c
    LEFT JOIN 
        orders o ON c.c_custkey = o.o_custkey
    GROUP BY 
        c.c_custkey, c.c_name
),
HighValueParts AS (
    SELECT 
        ps.ps_partkey,
        SUM(ps.ps_availqty) AS total_available
    FROM 
        partsupp ps
    JOIN 
        part p ON ps.ps_partkey = p.p_partkey
    WHERE 
        p.p_retailprice > (SELECT AVG(p2.p_retailprice) FROM part p2)
    GROUP BY 
        ps.ps_partkey
),
OrderLineDetails AS (
    SELECT 
        o.o_orderkey,
        SUM(ROUND(l.l_extendedprice * (1 - l.l_discount), 2)) AS net_revenue,
        COUNT(l.l_orderkey) AS line_item_count,
        AVG(l.l_quantity) AS avg_quantity
    FROM 
        orders o
    JOIN 
        lineitem l ON o.o_orderkey = l.l_orderkey
    GROUP BY 
        o.o_orderkey
),
TotalRevenue AS (
    SELECT 
        SUM(net_revenue) AS total_revenue
    FROM 
        OrderLineDetails
),
SupplierPerformance AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        COUNT(DISTINCT ps.ps_partkey) AS parts_supplied,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_cost
    FROM 
        supplier s
    LEFT JOIN 
        partsupp ps ON s.s_suppkey = ps.s_suppkey
    GROUP BY 
        s.s_suppkey, s.s_name
)

SELECT 
    r.r_name AS region_name,
    n.n_name AS nation_name,
    c.c_name AS customer_name,
    COALESCE(cos.total_spent, 0) AS customer_total_spent,
    COALESCE(hvp.total_available, 0) AS high_value_parts_available,
    tos.total_revenue,
    sperf.s_name AS supplier_name,
    sperf.parts_supplied,
    sperf.total_supply_cost,
    ROW_NUMBER() OVER (PARTITION BY r.r_name ORDER BY COALESCE(cos.total_spent, 0) DESC) AS customer_rank
FROM 
    region r
JOIN 
    nation n ON r.r_regionkey = n.n_regionkey
LEFT JOIN 
    CustomerOrderSummary cos ON cos.c_custkey IN (SELECT c_custkey FROM customer WHERE c_nationkey = n.n_nationkey)
LEFT JOIN 
    HighValueParts hvp ON hvp.ps_partkey IN (SELECT ps_partkey FROM partsupp)
LEFT JOIN 
    TotalRevenue tos ON TRUE
LEFT JOIN 
    SupplierPerformance sperf ON sperf.parts_supplied > 0
ORDER BY 
    region_name, customer_rank;
