WITH RECURSIVE SupplierHierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, 0 AS level
    FROM supplier s
    WHERE s.s_acctbal > (SELECT AVG(s2.s_acctbal) FROM supplier s2)

    UNION ALL

    SELECT s.s_suppkey, s.s_name, s.s_nationkey, sh.level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE s.s_acctbal > (SELECT AVG(s2.s_acctbal) FROM supplier s2 WHERE s2.s_nationkey = s.s_nationkey) 
)
, OrderSummary AS (
    SELECT o.o_orderkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
           COUNT(DISTINCT o.o_custkey) AS customer_count
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE l.l_shipdate >= '1997-01-01'
    GROUP BY o.o_orderkey
)
SELECT p.p_name, COUNT(DISTINCT ps.ps_suppkey) AS supplier_count, 
       SUM(COALESCE(os.total_revenue, 0)) AS total_revenue,
       MAX(COALESCE(sh.level, 0)) AS max_supplier_level
FROM part p
LEFT JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
LEFT JOIN OrderSummary os ON ps.ps_suppkey = (SELECT MIN(ps2.ps_suppkey) 
                                                  FROM partsupp ps2 
                                                  WHERE ps2.ps_partkey = ps.ps_partkey 
                                                  GROUP BY ps2.ps_partkey)
LEFT JOIN SupplierHierarchy sh ON ps.ps_suppkey = sh.s_suppkey
GROUP BY p.p_name
HAVING COUNT(DISTINCT ps.ps_suppkey) > 1
ORDER BY total_revenue DESC, p.p_name ASC
LIMIT 10;