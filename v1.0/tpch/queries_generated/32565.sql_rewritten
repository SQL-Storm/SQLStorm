WITH RECURSIVE RegionHierarchy AS (
    SELECT r_regionkey, r_name, 0 AS level
    FROM region
    WHERE r_regionkey = 1  
    UNION ALL
    SELECT r.r_regionkey, r.r_name, rh.level + 1
    FROM region r
    JOIN RegionHierarchy rh ON r.r_regionkey != rh.r_regionkey
),
OrderSummary AS (
    SELECT o.o_orderkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
           COUNT(DISTINCT o.o_custkey) AS unique_customers,
           RANK() OVER (PARTITION BY o.o_orderstatus ORDER BY SUM(l.l_extendedprice * (1 - l.l_discount)) DESC) AS revenue_rank
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE o.o_orderdate >= DATE '1997-01-01' AND o.o_orderdate < DATE '1997-12-31'
    GROUP BY o.o_orderkey
),
SupplierDetails AS (
    SELECT s.s_suppkey, s.s_name, COUNT(ps.ps_partkey) AS supply_count,
           SUM(ps.ps_supplycost) AS total_supply_cost
    FROM supplier s
    LEFT JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY s.s_suppkey, s.s_name
),
FinalReport AS (
    SELECT p.p_name, p.p_retailprice, od.total_revenue, sd.total_supply_cost,
           CASE WHEN od.total_revenue IS NULL THEN 'NO SALES'
                ELSE 'HAS SALES' END AS sales_status
    FROM part p
    LEFT JOIN OrderSummary od ON p.p_partkey = od.o_orderkey
    LEFT JOIN SupplierDetails sd ON p.p_partkey = sd.s_suppkey
    WHERE p.p_retailprice > 100.00 OR (p.p_comment IS NOT NULL AND LENGTH(p.p_comment) > 10)
)
SELECT rh.r_name, fr.p_name, fr.sales_status, fr.total_revenue, fr.total_supply_cost
FROM FinalReport fr
JOIN RegionHierarchy rh ON fr.total_supply_cost IS NOT NULL
ORDER BY rh.level, fr.total_revenue DESC
LIMIT 100;