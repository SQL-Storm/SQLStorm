
WITH RankedParts AS (
    SELECT 
        p.p_partkey,
        p.p_name,
        p.p_brand,
        p.p_retailprice,
        ROW_NUMBER() OVER (PARTITION BY p.p_brand ORDER BY p.p_retailprice DESC) AS price_rank
    FROM 
        part p
    WHERE 
        p.p_retailprice > (SELECT AVG(p2.p_retailprice) FROM part p2 WHERE p2.p_size < 50)
),
CustomerOrders AS (
    SELECT 
        c.c_custkey,
        COUNT(DISTINCT o.o_orderkey) AS order_count,
        SUM(o.o_totalprice) AS total_spent
    FROM 
        customer c
    LEFT JOIN 
        orders o ON c.c_custkey = o.o_custkey
    GROUP BY 
        c.c_custkey
),
HighValueSuppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS supplier_value
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey, s.s_name
    HAVING 
        SUM(ps.ps_supplycost * ps.ps_availqty) > (SELECT AVG(ps2.ps_supplycost * ps2.ps_availqty) FROM partsupp ps2)
)
SELECT 
    COALESCE(c.c_name, 'Unknown Customer') AS customer_name,
    r.r_name AS region_name,
    SUM(li.l_extendedprice * (1 - li.l_discount)) AS revenue,
    COUNT(DISTINCT CASE WHEN li.l_returnflag = 'R' THEN li.l_orderkey END) AS returned_orders,
    AVG(cp.total_spent) AS avg_spent_per_customer,
    STRING_AGG(DISTINCT pp.p_name, ', ') AS popular_parts
FROM 
    lineitem li
LEFT JOIN 
    customer c ON li.l_orderkey IN (SELECT o.o_orderkey FROM orders o WHERE o.o_custkey = c.c_custkey)
LEFT JOIN 
    nation n ON c.c_nationkey = n.n_nationkey
LEFT JOIN 
    region r ON n.n_regionkey = r.r_regionkey
LEFT JOIN 
    RankedParts pp ON pp.p_partkey = li.l_partkey
JOIN 
    CustomerOrders cp ON cp.c_custkey = c.c_custkey
JOIN 
    HighValueSuppliers hs ON hs.s_suppkey = li.l_suppkey
WHERE 
    li.l_shipdate BETWEEN '1997-01-01' AND '1998-10-01'
GROUP BY 
    c.c_custkey, c.c_name, r.r_name
HAVING 
    SUM(li.l_extendedprice * (1 - li.l_discount)) > 1000
ORDER BY 
    revenue DESC, region_name;
