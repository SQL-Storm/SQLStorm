
WITH RankedOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_orderdate,
        c.c_name,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
        RANK() OVER (PARTITION BY c.c_mktsegment ORDER BY SUM(l.l_extendedprice * (1 - l.l_discount)) DESC) AS revenue_rank
    FROM 
        orders o
    JOIN 
        customer c ON o.o_custkey = c.c_custkey
    JOIN 
        lineitem l ON l.l_orderkey = o.o_orderkey
    WHERE 
        o.o_orderdate BETWEEN DATE '1997-01-01' AND DATE '1997-12-31'
    GROUP BY 
        o.o_orderkey, o.o_orderdate, c.c_name, c.c_mktsegment
),

TopSuppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        COUNT(DISTINCT ps.ps_partkey) AS parts_supplied,
        SUM(ps.ps_supplycost) AS total_supply_cost
    FROM 
        supplier s
    LEFT JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey, s.s_name
    HAVING 
        COUNT(DISTINCT ps.ps_partkey) > 5
),

RevenueComparison AS (
    SELECT 
        r.r_name,
        COALESCE(SUM(Top.total_revenue), 0) AS total_revenue,
        COUNT(DISTINCT Top.o_orderkey) AS total_orders
    FROM 
        region r
    LEFT JOIN 
        nation n ON r.r_regionkey = n.n_regionkey
    LEFT JOIN 
        customer c ON n.n_nationkey = c.c_nationkey
    LEFT JOIN 
        RankedOrders Top ON c.c_custkey = Top.c_custkey
    GROUP BY 
        r.r_name
)

SELECT 
    r_name,
    total_revenue,
    total_orders,
    CASE 
        WHEN total_revenue BETWEEN 0 AND 50000 THEN 'Low Revenue'
        WHEN total_revenue BETWEEN 50001 AND 200000 THEN 'Medium Revenue'
        ELSE 'High Revenue'
    END AS revenue_category,
    (SELECT COUNT(*) FROM TopSuppliers WHERE parts_supplied > 10) AS active_suppliers
FROM 
    RevenueComparison
WHERE 
    total_orders > 0
ORDER BY 
    total_revenue DESC;
