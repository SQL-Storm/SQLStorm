
WITH RECURSIVE top_suppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_cost,
        ROW_NUMBER() OVER (PARTITION BY s.s_nationkey ORDER BY SUM(ps.ps_supplycost * ps.ps_availqty) DESC) AS rnk
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey, s.s_name, s.s_nationkey
),
revenue_per_nation AS (
    SELECT 
        n.n_name,
        SUM(o.o_totalprice) AS total_revenue
    FROM 
        orders o
    JOIN 
        customer c ON o.o_custkey = c.c_custkey
    JOIN 
        nation n ON c.c_nationkey = n.n_nationkey
    GROUP BY 
        n.n_name
),
customer_order_counts AS (
    SELECT 
        c.c_nationkey,
        COUNT(o.o_orderkey) AS order_count
    FROM 
        customer c
    LEFT JOIN 
        orders o ON c.c_custkey = o.o_custkey
    GROUP BY 
        c.c_nationkey
),
supplier_ranked AS (
    SELECT 
        s.s_name,
        n.n_name,
        ts.total_cost,
        ts.s_nationkey
    FROM 
        top_suppliers ts
    JOIN 
        nation n ON ts.s_nationkey = n.n_nationkey
    WHERE 
        ts.rnk <= 5
)
SELECT 
    sr.s_name,
    sr.n_name,
    rp.total_revenue,
    co.order_count
FROM 
    supplier_ranked sr
LEFT JOIN 
    revenue_per_nation rp ON sr.n_name = rp.n_name
LEFT JOIN 
    customer_order_counts co ON co.c_nationkey = sr.s_nationkey
WHERE 
    (rp.total_revenue IS NOT NULL AND rp.total_revenue > 10000) 
    OR (co.order_count IS NULL OR co.order_count = 0)
ORDER BY 
    sr.n_name, sr.total_cost DESC;
