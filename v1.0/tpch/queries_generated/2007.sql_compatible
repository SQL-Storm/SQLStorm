
WITH RankedSuppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        s.s_acctbal,
        ROW_NUMBER() OVER (PARTITION BY s.s_nationkey ORDER BY s.s_acctbal DESC) AS rank
    FROM 
        supplier s
),
OrderSummary AS (
    SELECT 
        o.o_orderkey,
        o.o_custkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_sales,
        COUNT(l.l_orderkey) AS total_items
    FROM 
        orders o
    JOIN 
        lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE 
        o.o_orderstatus = 'O' AND
        l.l_shipdate BETWEEN DATE '1997-01-01' AND DATE '1997-12-31'
    GROUP BY 
        o.o_orderkey, o.o_custkey
),
CustomerSales AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        COALESCE(SUM(os.total_sales), 0) AS year_to_date_sales
    FROM 
        customer c
    LEFT JOIN 
        OrderSummary os ON c.c_custkey = os.o_custkey
    GROUP BY 
        c.c_custkey, c.c_name
),
NationSupplierCount AS (
    SELECT 
        n.n_nationkey,
        COUNT(DISTINCT rs.s_suppkey) AS supplier_count
    FROM 
        nation n
    LEFT JOIN 
        RankedSuppliers rs ON n.n_nationkey = rs.s_nationkey
    GROUP BY 
        n.n_nationkey
)
SELECT 
    c.c_name,
    cs.year_to_date_sales,
    n.n_name AS region,
    ns.supplier_count,
    CASE 
        WHEN cs.year_to_date_sales > 10000 THEN 'High Value Customer'
        ELSE 'Regular Customer'
    END AS customer_value_status
FROM 
    customer c
LEFT JOIN 
    CustomerSales cs ON c.c_custkey = cs.c_custkey
LEFT JOIN 
    nation n ON c.c_nationkey = n.n_nationkey
LEFT JOIN 
    NationSupplierCount ns ON n.n_nationkey = ns.n_nationkey
WHERE 
    cs.year_to_date_sales IS NOT NULL 
ORDER BY 
    cs.year_to_date_sales DESC, 
    ns.supplier_count DESC;
