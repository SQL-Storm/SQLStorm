
WITH RECURSIVE PartHierarchy AS (
    SELECT p_partkey, p_name, 1 AS level 
    FROM part 
    WHERE p_size < 15
    UNION ALL
    SELECT p.p_partkey, p.p_name, ph.level + 1
    FROM part p
    JOIN PartHierarchy ph ON p.p_partkey = ph.p_partkey + 1
    WHERE p.p_size < 20
),
RankedSuppliers AS (
    SELECT s.s_suppkey, s.s_name, s.s_acctbal,
           ROW_NUMBER() OVER (PARTITION BY s.n_nationkey ORDER BY s.s_acctbal DESC) AS rank
    FROM supplier s
),
OrdersAboveAverage AS (
    SELECT o.o_orderkey, AVG(l.l_extendedprice) AS avg_price
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    GROUP BY o.o_orderkey
    HAVING AVG(l.l_extendedprice) > (SELECT AVG(l_extendedprice) FROM lineitem)
)
SELECT DISTINCT
    ph.p_name,
    s.s_name,
    CASE 
        WHEN l.l_discount IS NULL THEN 'No Discount'
        ELSE CONCAT('Discount: ', l.l_discount)
    END AS discount_info,
    COALESCE(r.region_info, 'Unknown') AS region_info,
    COUNT(DISTINCT o.o_orderkey) AS order_count,
    SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue
FROM lineitem l
LEFT JOIN orders o ON l.l_orderkey = o.o_orderkey
JOIN RankedSuppliers s ON l.l_suppkey = s.s_suppkey AND s.rank <= 5
LEFT JOIN nation n ON s.s_nationkey = n.n_nationkey
LEFT JOIN region r ON n.n_regionkey = r.r_regionkey
JOIN PartHierarchy ph ON l.l_partkey = ph.p_partkey
WHERE o.o_orderstatus = 'O'
AND l.l_shipmode IN ('AIR', 'SEA')
GROUP BY ph.p_name, s.s_name, l.l_discount, r.region_info
HAVING SUM(l.l_extendedprice * (1 - l.l_discount)) > (SELECT AVG(avg_price) FROM OrdersAboveAverage)
ORDER BY total_revenue DESC;
