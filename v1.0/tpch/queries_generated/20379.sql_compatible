
WITH RankedOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_orderdate,
        o.o_totalprice,
        o.o_orderstatus,
        RANK() OVER (PARTITION BY o.o_orderstatus ORDER BY o.o_totalprice DESC) AS price_rank,
        DENSE_RANK() OVER (PARTITION BY o.o_orderdate ORDER BY o.o_orderkey) AS order_date_rank
    FROM 
        orders o
    WHERE 
        o.o_orderdate BETWEEN DATE '1997-01-01' AND DATE '1997-12-31'
        AND o.o_totalprice > (SELECT AVG(o2.o_totalprice) FROM orders o2)
)
SELECT 
    p.p_name,
    s.s_name,
    ps.ps_availqty,
    SUM(CASE 
            WHEN l.l_discount > 0.2 THEN l.l_extendedprice * (1 - l.l_discount)
            ELSE l.l_extendedprice
        END) AS adjusted_total,
    COUNT(DISTINCT c.c_custkey) AS unique_customers,
    COALESCE(MAX(l.l_shipdate), DATE '1900-01-01') AS last_ship_date,
    CASE 
        WHEN COUNT(l.l_orderkey) > 10 THEN 'Frequent Buyer'
        ELSE 'Infrequent Buyer'
    END AS buyer_status
FROM 
    lineitem l 
JOIN 
    partsupp ps ON l.l_partkey = ps.ps_partkey
JOIN 
    supplier s ON ps.ps_suppkey = s.s_suppkey
JOIN 
    part p ON ps.ps_partkey = p.p_partkey
LEFT JOIN 
    customer c ON c.c_custkey IN (
        SELECT o.o_custkey 
        FROM RankedOrders ro 
        JOIN orders o ON ro.o_orderkey = o.o_orderkey
        WHERE ro.price_rank <= 10
    )
WHERE 
    s.s_acctbal IS NOT NULL 
    AND l.l_returnflag = 'N'
GROUP BY 
    p.p_name, s.s_name, ps.ps_availqty, last_ship_date, buyer_status
HAVING 
    adjusted_total > (SELECT AVG(l2.l_extendedprice) FROM lineitem l2 WHERE l2.l_shipinstruct = 'DELIVER IN PERSON')
ORDER BY 
    buyer_status DESC, adjusted_total DESC
LIMIT 50;
