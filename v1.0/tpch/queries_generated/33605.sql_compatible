
WITH RECURSIVE OrderHierarchy AS (
    SELECT o.o_orderkey, o.o_custkey, o.o_orderstatus, o.o_totalprice, o.o_orderdate, o.o_orderpriority, o.o_clerk, o.o_shippriority, o.o_comment, 0 AS level
    FROM orders o
    WHERE o.o_orderstatus = 'O'
    UNION ALL
    SELECT o.o_orderkey, oh.o_custkey, oh.o_orderstatus, oh.o_totalprice, oh.o_orderdate, oh.o_orderpriority, oh.o_clerk, oh.o_shippriority, oh.o_comment, oh_parent.level + 1 
    FROM orders oh
    INNER JOIN OrderHierarchy oh_parent ON oh.o_custkey = oh_parent.o_custkey AND oh.o_orderdate > oh_parent.o_orderdate
)
SELECT 
    n.n_name AS nation_name,
    r.r_name AS region_name,
    COALESCE(SUM(l.l_extendedprice * (1 - l.l_discount)), 0) AS total_sales,
    COUNT(DISTINCT c.c_custkey) AS total_customers,
    MAX(l.l_shipdate) AS last_ship_date,
    AVG(CASE WHEN l.l_returnflag = 'R' THEN l.l_quantity END) AS avg_return_quantity,
    STRING_AGG(DISTINCT p.p_name, ', ') AS product_names
FROM nation n
JOIN region r ON n.n_regionkey = r.r_regionkey
LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
JOIN part p ON ps.ps_partkey = p.p_partkey
JOIN lineitem l ON p.p_partkey = l.l_partkey
JOIN orders o ON l.l_orderkey = o.o_orderkey
JOIN customer c ON o.o_custkey = c.c_custkey
LEFT JOIN OrderHierarchy oh ON c.c_custkey = oh.o_custkey
WHERE l.l_shipmode IN ('MAIL', 'SHIP')
AND l.l_discount BETWEEN 0.05 AND 0.07
AND o.o_orderdate >= DATE '1997-01-01'
GROUP BY n.n_name, r.r_name
HAVING SUM(l.l_extendedprice * (1 - l.l_discount)) > 10000
ORDER BY total_sales DESC;
