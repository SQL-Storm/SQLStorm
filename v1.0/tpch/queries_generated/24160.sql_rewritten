WITH RankedSuppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        s.s_acctbal,
        RANK() OVER (PARTITION BY ps_partkey ORDER BY s.s_acctbal DESC) AS rank
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
),
EligibleCustomers AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        c.c_acctbal,
        CASE 
            WHEN c.c_acctbal IS NULL THEN 'No Account Balance'
            WHEN c.c_acctbal > 1000 THEN 'High Value Customer'
            ELSE 'Regular Customer'
        END AS customer_type
    FROM customer c
    WHERE c.c_acctbal IS NOT NULL OR c.c_acctbal < 0
),
OrdersWithLineItems AS (
    SELECT 
        o.o_orderkey,
        o.o_orderdate,
        l.l_quantity,
        l.l_discount,
        l.l_extendedprice,
        l.l_returnflag,
        l.l_linestatus,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    GROUP BY o.o_orderkey, o.o_orderdate, l.l_returnflag, l.l_linestatus, l.l_quantity, l.l_discount
)
SELECT 
    c.c_name,
    r.n_name AS supplier_nation,
    ps.ps_partkey,
    p.p_name,
    COALESCE(MAX(s.s_name), 'No Supplier') AS supplier_name,
    SUM(o.total_revenue) AS total_revenue,
    COUNT(DISTINCT o.o_orderkey) AS order_count,
    CASE 
        WHEN COUNT(o.o_orderkey) > 5 THEN 'Frequent Buyer'
        ELSE 'Occasional Buyer'
    END AS buyer_status
FROM EligibleCustomers c
LEFT JOIN RankedSuppliers s ON c.c_custkey = s.s_suppkey
LEFT JOIN partsupp ps ON ps.ps_suppkey = s.s_suppkey
LEFT JOIN part p ON ps.ps_partkey = p.p_partkey
LEFT JOIN OrdersWithLineItems o ON o.o_orderkey IN (
    SELECT o2.o_orderkey 
    FROM orders o2 
    WHERE o2.o_orderstatus = 'O' AND EXTRACT(YEAR FROM o2.o_orderdate) = 1997
) OR o.l_discount IS NULL
JOIN nation r ON c.c_nationkey = r.n_nationkey
GROUP BY c.c_name, r.n_name, ps.ps_partkey, p.p_name
HAVING SUM(o.total_revenue) IS NOT NULL OR COUNT(o.o_orderkey) < 1
ORDER BY total_revenue DESC, buyer_status, p.p_name;