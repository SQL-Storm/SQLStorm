
WITH RankedSales AS (
    SELECT 
        l_orderkey,
        SUM(l_extendedprice * (1 - l_discount)) AS total_sales,
        RANK() OVER (PARTITION BY l_orderkey ORDER BY SUM(l_extendedprice * (1 - l_discount)) DESC) AS sales_rank
    FROM 
        lineitem
    GROUP BY 
        l_orderkey
),
SupplierDetails AS (
    SELECT 
        s_suppkey, 
        s_name, 
        s_acctbal, 
        n.n_name AS nation_name, 
        COALESCE(s_comment, 'No comment') AS supplier_comment
    FROM 
        supplier s
    LEFT JOIN 
        nation n ON s.n_nationkey = n.n_nationkey
),
PartStats AS (
    SELECT 
        p_partkey, 
        COUNT(ps_suppkey) AS supply_count,
        AVG(ps_supplycost) AS avg_supply_cost
    FROM 
        partsupp
    GROUP BY 
        p_partkey
),
OrderStats AS (
    SELECT 
        o.o_orderkey,
        COUNT(DISTINCT l.l_orderkey) AS lineitem_count,
        MAX(o.o_totalprice) AS max_price
    FROM 
        orders o
    LEFT JOIN 
        lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE 
        o.o_orderdate BETWEEN DATE '1997-01-01' AND DATE '1997-12-31'
    GROUP BY 
        o.o_orderkey
    HAVING 
        COUNT(DISTINCT l.l_orderkey) > 1
)

SELECT 
    ps.p_partkey,
    p.p_name,
    sd.s_name AS supplier_name,
    sd.nation_name,
    os.max_price,
    rs.total_sales,
    (CASE WHEN rs.sales_rank = 1 THEN 'Top Sale' ELSE 'Regular Sale' END) AS sale_category,
    (CASE WHEN sd.s_acctbal IS NULL OR sd.s_acctbal <= 0 THEN 'Inactive Supplier' ELSE 'Active Supplier' END) AS supplier_status,
    ps.avg_supply_cost,
    COALESCE(p.p_comment, 'No comment available') AS part_comment
FROM 
    PartStats ps
JOIN 
    part p ON ps.p_partkey = p.p_partkey
LEFT JOIN 
    SupplierDetails sd ON ps.p_partkey = sd.s_suppkey
JOIN 
    OrderStats os ON os.o_orderkey = (SELECT o.o_orderkey FROM orders o WHERE o.o_orderkey = rs.l_orderkey LIMIT 1)
JOIN 
    RankedSales rs ON rs.l_orderkey = os.o_orderkey
WHERE 
    (UPPER(sd.s_name) LIKE '%ACME%' OR sd.nation_name = 'USA')
    AND (p.p_size IS NULL OR p.p_size > 10)
ORDER BY 
    rs.total_sales DESC, 
    p.p_name, 
    supplier_name;
