
WITH RegionSupplier AS (
    SELECT 
        r.r_regionkey, 
        r.r_name, 
        SUM(CASE 
                WHEN s.s_acctbal IS NOT NULL THEN s.s_acctbal 
                ELSE 0 
            END) AS total_acctbal,
        COUNT(DISTINCT s.s_suppkey) AS supplier_count
    FROM 
        region r
    LEFT JOIN 
        nation n ON r.r_regionkey = n.n_regionkey
    LEFT JOIN 
        supplier s ON n.n_nationkey = s.s_nationkey
    GROUP BY 
        r.r_regionkey, r.r_name
),
FilteredParts AS (
    SELECT 
        p.p_partkey,
        p.p_name,
        p.p_retailprice,
        p.p_comment,
        ps.ps_supplycost,
        ps.ps_availqty,
        ROW_NUMBER() OVER (PARTITION BY p.p_partkey ORDER BY ps.ps_supplycost DESC) AS row_num
    FROM 
        part p
    JOIN 
        partsupp ps ON p.p_partkey = ps.ps_partkey
    WHERE 
        p.p_retailprice > (SELECT AVG(p_retailprice) FROM part)
)
SELECT 
    rs.r_name,
    rs.total_acctbal,
    fp.p_name AS part_name,
    fp.ps_supplycost,
    fp.ps_availqty,
    CASE 
        WHEN fp.ps_availqty IS NULL THEN 'No Stock' 
        ELSE 'In Stock' 
    END AS stock_status,
    (SELECT COUNT(*) FROM lineitem l 
     WHERE l.l_partkey = fp.p_partkey 
       AND l.l_returnflag = 'R') AS return_count,
    AVG(fp.ps_supplycost) OVER (PARTITION BY rs.r_regionkey) AS avg_supplycost_region,
    COUNT(fp.p_partkey) FILTER (WHERE fp.row_num = 1) AS top_supplier_parts
FROM 
    RegionSupplier rs
OUTER JOIN 
    FilteredParts fp ON rs.supplier_count > 5
WHERE 
    fp.ps_supplycost > (
        SELECT 
            AVG(ps.ps_supplycost) 
        FROM 
            partsupp ps
        WHERE 
            ps.ps_availqty > 0
    )
ORDER BY 
    rs.total_acctbal DESC, 
    fp.p_name;
