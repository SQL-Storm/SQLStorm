WITH RECURSIVE supplier_hierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_acctbal, NULL::integer AS parent_suppkey
    FROM supplier s
    WHERE s.s_acctbal > (SELECT AVG(s_acctbal) FROM supplier)

    UNION ALL

    SELECT s.s_suppkey, s.s_name, s.s_acctbal, sh.s_suppkey
    FROM supplier_hierarchy sh
    JOIN partsupp ps ON sh.s_suppkey = ps.ps_suppkey
    JOIN supplier s ON ps.ps_partkey = s.s_suppkey
    WHERE sh.s_acctbal > s.s_acctbal
)

SELECT r.r_name, 
       n.n_name, 
       COUNT(DISTINCT o.o_orderkey) AS total_orders,
       SUM(ROUND(l.l_extendedprice * (1 - l.l_discount), 2)) AS total_revenue,
       AVG(CASE WHEN c.c_acctbal IS NULL THEN 0 ELSE c.c_acctbal END) AS avg_customer_balance,
       MAX(CASE WHEN l.l_returnflag = 'R' THEN l.l_quantity ELSE 0 END) AS max_returned_quantity,
       STRING_AGG(DISTINCT p.p_name || ' : ' || ps.ps_availqty, '; ') AS part_supplier_info
FROM region r
JOIN nation n ON r.r_regionkey = n.n_regionkey
JOIN supplier s ON n.n_nationkey = s.s_nationkey
LEFT JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
JOIN part p ON ps.ps_partkey = p.p_partkey
JOIN lineitem l ON p.p_partkey = l.l_partkey
JOIN orders o ON l.l_orderkey = o.o_orderkey
JOIN customer c ON o.o_custkey = c.c_custkey
WHERE o.o_orderstatus IN ('F', 'O')
  AND l.l_shipdate BETWEEN '1997-01-01' AND cast('1998-10-01' as date)
  AND EXISTS (SELECT 1 FROM supplier_hierarchy sh WHERE sh.s_suppkey = s.s_suppkey)
GROUP BY r.r_name, n.n_name
HAVING COUNT(DISTINCT o.o_orderkey) > 10
ORDER BY total_revenue DESC
LIMIT 50;