
WITH RECURSIVE SupplierHierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, 0 AS level
    FROM supplier s
    WHERE s.s_acctbal > 5000
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, sh.level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE sh.level < 5
),
RecentOrders AS (
    SELECT o.o_orderkey, o.o_custkey, o.o_totalprice, o.o_orderdate
    FROM orders o
    WHERE o.o_orderdate > DATEADD(year, -1, '1998-10-01')
),
SupplierStats AS (
    SELECT ps.ps_partkey,
           SUM(ps.ps_availqty) AS total_available,
           COUNT(DISTINCT ps.ps_suppkey) AS unique_suppliers
    FROM partsupp ps
    GROUP BY ps.ps_partkey
),
LineItemStats AS (
    SELECT l.l_partkey,
           COUNT(l.l_orderkey) AS order_count,
           AVG(l.l_discount) AS avg_discount
    FROM lineitem l
    GROUP BY l.l_partkey
)
SELECT 
    p.p_partkey,
    p.p_name,
    COALESCE(ss.total_available, 0) AS available_quantity,
    COALESCE(ls.order_count, 0) AS order_count,
    COALESCE(ls.avg_discount, 0.0) AS average_discount,
    COUNT(DISTINCT c.c_custkey) AS customer_count,
    MAX(o.o_totalprice) AS max_order_value
FROM
    part p
LEFT JOIN 
    SupplierStats ss ON p.p_partkey = ss.ps_partkey
LEFT JOIN 
    LineItemStats ls ON p.p_partkey = ls.l_partkey
LEFT JOIN 
    lineitem l ON l.l_partkey = p.p_partkey
LEFT JOIN 
    RecentOrders o ON o.o_orderkey = l.l_orderkey
LEFT JOIN 
    customer c ON c.c_custkey = o.o_custkey
WHERE 
    p.p_retailprice > 100
    AND (p.p_size BETWEEN 10 AND 20 OR p.p_comment IS NOT NULL)
GROUP BY 
    p.p_partkey, p.p_name, ss.total_available, ls.order_count, ls.avg_discount
HAVING 
    COUNT(DISTINCT l.l_partkey) > 1
ORDER BY 
    customer_count DESC, max_order_value DESC
OFFSET 10 ROWS FETCH NEXT 10 ROWS ONLY;
