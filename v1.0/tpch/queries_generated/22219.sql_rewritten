WITH RankedSuppliers AS (
    SELECT s.s_suppkey, s.s_name, s.s_acctbal,
           ROW_NUMBER() OVER (PARTITION BY s.s_nationkey ORDER BY s.s_acctbal DESC) AS rn
    FROM supplier s
    WHERE s.s_acctbal IS NOT NULL
),
TopSuppliers AS (
    SELECT s.s_suppkey, s.s_name, s.s_acctbal 
    FROM RankedSuppliers s
    WHERE s.rn = 1
),
HighValueCustomers AS (
    SELECT c.c_custkey, c.c_name, c.c_acctbal,
           (SELECT COUNT(DISTINCT o.o_orderkey) 
            FROM orders o 
            WHERE o.o_custkey = c.c_custkey 
              AND o.o_orderstatus = 'O') AS order_count
    FROM customer c
    WHERE c.c_acctbal > (SELECT AVG(c2.c_acctbal) FROM customer c2)
),
SupplierPartCount AS (
    SELECT ps.ps_partkey, COUNT(DISTINCT ps.ps_suppkey) AS supplier_count
    FROM partsupp ps
    GROUP BY ps.ps_partkey
)
SELECT p.p_partkey, p.p_name, p.p_mfgr, 
       COALESCE(s.s_name, 'No Supplier') AS supplier_name,
       COALESCE(c.c_name, 'No Customer') AS customer_name,
       sp.supplier_count,
       CASE 
           WHEN l.l_discount > 0.2 THEN 'High Discount'
           ELSE 'Regular Discount'
       END AS discount_category,
       SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_sales,
       DENSE_RANK() OVER (PARTITION BY p.p_partkey ORDER BY SUM(l.l_extendedprice * (1 - l.l_discount)) DESC) AS sales_rank
FROM part p
LEFT JOIN lineitem l ON p.p_partkey = l.l_partkey
LEFT JOIN TopSuppliers s ON l.l_suppkey = s.s_suppkey
LEFT JOIN HighValueCustomers c ON l.l_orderkey IN (SELECT o.o_orderkey FROM orders o WHERE o.o_custkey = c.c_custkey)
LEFT JOIN SupplierPartCount sp ON p.p_partkey = sp.ps_partkey
WHERE p.p_retailprice > (SELECT AVG(p2.p_retailprice) FROM part p2) 
  AND (l.l_shipdate IS NULL OR l.l_shipdate < cast('1998-10-01' as date) - INTERVAL '30 days')
GROUP BY p.p_partkey, p.p_name, p.p_mfgr, s.s_name, c.c_name, sp.supplier_count, l.l_discount
HAVING total_sales IS NOT NULL AND total_sales > 10000
ORDER BY sales_rank, supplier_name;