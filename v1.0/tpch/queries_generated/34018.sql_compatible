
WITH RECURSIVE CustomerHierarchy AS (
    SELECT c.c_custkey, c.c_name, c.c_nationkey, 1 AS level
    FROM customer c
    WHERE c.c_acctbal IS NOT NULL AND c.c_acctbal > 1000

    UNION ALL

    SELECT c.c_custkey, c.c_name, c.c_nationkey, ch.level + 1
    FROM customer c
    JOIN CustomerHierarchy ch ON c.c_nationkey = ch.c_nationkey
    WHERE c.c_acctbal IS NOT NULL AND c.c_acctbal > 1000 AND ch.level < 5
),
TopSuppliers AS (
    SELECT ps.ps_suppkey, SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_cost
    FROM partsupp ps
    JOIN part p ON ps.ps_partkey = p.p_partkey
    GROUP BY ps.ps_suppkey
    ORDER BY total_supply_cost DESC
    LIMIT 10
),
HighValueOrders AS (
    SELECT o.o_orderkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS high_value
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE o.o_orderstatus = 'F' AND l.l_discount > 0.05
    GROUP BY o.o_orderkey
    HAVING SUM(l.l_extendedprice * (1 - l.l_discount)) > 50000
)
SELECT 
    r.r_name AS region_name,
    n.n_name AS nation_name,
    s.s_name AS supplier_name,
    SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
    COUNT(DISTINCT co.c_custkey) AS customer_count,
    AVG(co.level) AS average_customer_level,
    COALESCE(s.s_acctbal, 0) AS supplier_balance
FROM region r
JOIN nation n ON r.r_regionkey = n.n_regionkey
JOIN supplier s ON n.n_nationkey = s.s_nationkey
JOIN lineitem l ON s.s_suppkey = l.l_suppkey
LEFT JOIN CustomerHierarchy co ON n.n_nationkey = co.c_nationkey
WHERE l.l_shipdate BETWEEN DATE '1995-01-01' AND DATE '1995-12-31'
AND l.l_returnflag = 'N'
GROUP BY r.r_name, n.n_name, s.s_name, s.s_acctbal
HAVING SUM(l.l_extendedprice * (1 - l.l_discount)) > 100000
ORDER BY total_revenue DESC
LIMIT 5;
