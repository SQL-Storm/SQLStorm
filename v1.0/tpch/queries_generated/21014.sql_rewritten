WITH RankedOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_orderdate,
        o.o_totalprice,
        o.o_orderstatus,
        ROW_NUMBER() OVER (PARTITION BY o.o_orderstatus ORDER BY o.o_totalprice DESC) AS order_rank,
        DENSE_RANK() OVER (PARTITION BY o.o_orderstatus ORDER BY o.o_orderdate DESC) AS date_rank
    FROM orders o
    WHERE o.o_orderdate >= '1997-01-01'
),
SupplierStats AS (
    SELECT 
        s.s_suppkey,
        COUNT(DISTINCT ps.ps_partkey) AS unique_parts,
        SUM(ps.ps_supplycost) AS total_supplycost
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY s.s_suppkey
),
PartDetails AS (
    SELECT 
        p.p_partkey,
        p.p_name,
        p.p_retailprice,
        p.p_size,
        ROW_NUMBER() OVER (ORDER BY p.p_retailprice DESC) AS price_rank
    FROM part p
    WHERE p.p_size IS NOT NULL AND p.p_retailprice IS NOT NULL
),
HighValueOrders AS (
    SELECT 
        r.r_name,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue
    FROM lineitem l
    JOIN orders o ON l.l_orderkey = o.o_orderkey
    JOIN customer c ON o.o_custkey = c.c_custkey
    JOIN nation n ON c.c_nationkey = n.n_nationkey
    JOIN region r ON n.n_regionkey = r.r_regionkey
    WHERE o.o_orderstatus = 'F'
      AND o.o_orderdate = (SELECT MAX(o2.o_orderdate) FROM orders o2 WHERE o2.o_orderstatus = o.o_orderstatus)
    GROUP BY r.r_name
)
SELECT 
    p.p_partkey,
    p.p_name,
    COALESCE((SELECT AVG(l.l_quantity) 
              FROM lineitem l 
              WHERE l.l_partkey = p.p_partkey 
                AND l.l_shipdate < cast('1998-10-01' as date) 
                AND l.l_shipdate IS NOT NULL), 0) AS avg_quantity,
    CAST((SELECT COUNT(*) 
          FROM RankedOrders ro 
          WHERE ro.o_orderkey IN (SELECT o.o_orderkey FROM orders o WHERE o.o_orderdate BETWEEN '1997-01-01' AND '1997-12-31')) AS DECIMAL) AS order_count,
    (
        SELECT DISTINCT r.r_name
        FROM HighValueOrders hvo
        JOIN lineitem l ON l.l_orderkey IN (SELECT o.o_orderkey FROM orders o WHERE o.o_orderdate = (SELECT MAX(o2.o_orderdate) FROM orders o2))
        WHERE l.l_partkey = p.p_partkey
        FOR UPDATE SKIP LOCKED
    ) AS region_name
FROM PartDetails p
LEFT JOIN SupplierStats ss ON p.p_partkey IN (SELECT ps.ps_partkey FROM partsupp ps WHERE ps.ps_suppkey = ss.s_suppkey)
ORDER BY p.p_retailprice DESC, region_name NULLS LAST
LIMIT 100 OFFSET 10;