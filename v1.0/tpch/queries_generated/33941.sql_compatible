
WITH RECURSIVE supplier_hierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, 1 AS level
    FROM supplier s
    WHERE s.s_acctbal > (SELECT AVG(s2.s_acctbal) FROM supplier s2)

    UNION ALL

    SELECT s.s_suppkey, s.s_name, s.s_nationkey, sh.level + 1
    FROM supplier s
    JOIN supplier_hierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE sh.level < 5
),
recent_orders AS (
    SELECT o.o_orderkey, o.o_custkey, o.o_orderdate, o.o_totalprice,
           RANK() OVER (PARTITION BY o.o_custkey ORDER BY o.o_orderdate DESC) AS rnk
    FROM orders o
    WHERE o.o_orderdate >= DATEADD(month, -6, CAST('1998-10-01' AS DATE))
),
lineitem_summary AS (
    SELECT li.l_orderkey, SUM(li.l_extendedprice * (1 - li.l_discount)) AS total_revenue
    FROM lineitem li
    GROUP BY li.l_orderkey
),
supplier_part AS (
    SELECT ps.ps_partkey, ps.ps_suppkey, ps.ps_availqty, p.p_type
    FROM partsupp ps
    JOIN part p ON ps.ps_partkey = p.p_partkey
    WHERE p.p_size BETWEEN 10 AND 20
),
nation_order_summary AS (
    SELECT n.n_name, COUNT(DISTINCT o.o_orderkey) AS order_count
    FROM nation n
    JOIN customer c ON n.n_nationkey = c.c_nationkey
    JOIN recent_orders ro ON c.c_custkey = ro.o_custkey
    GROUP BY n.n_name
),
final_summary AS (
    SELECT r.n_name, r.order_count, sh.level,
           COALESCE(ls.total_revenue, 0) AS total_revenue,
           SUM(ls.total_revenue) OVER (PARTITION BY r.n_name ORDER BY r.order_count ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS cumulative_revenue
    FROM nation_order_summary r
    LEFT JOIN lineitem_summary ls ON r.order_count = ls.l_orderkey
    JOIN supplier_hierarchy sh ON sh.s_nationkey = (SELECT n.n_nationkey FROM nation n WHERE n.n_name = r.n_name)
)
SELECT f.n_name, f.order_count, f.level, f.total_revenue, f.cumulative_revenue
FROM final_summary f
WHERE f.cumulative_revenue > (SELECT AVG(cumulative_revenue) FROM final_summary)
ORDER BY f.n_name, f.level DESC;
