
WITH RECURSIVE nation_hierarchy AS (
    SELECT n_nationkey, n_name, n_regionkey, 
           ROW_NUMBER() OVER (PARTITION BY n_regionkey ORDER BY n_nationkey) AS rn
    FROM nation
    WHERE n_regionkey IN (SELECT r_regionkey FROM region WHERE r_name LIKE 'A%')
    UNION ALL
    SELECT n.nationkey, CONCAT(n.name, ' (Subregion)') AS name, n.regionkey, 
           ROW_NUMBER() OVER (PARTITION BY n.regionkey ORDER BY n.nationkey) + rn
    FROM nation n
    JOIN nation_hierarchy nh ON n.regionkey = nh.n_nationkey
)
SELECT 
    p.partkey,
    p.name,
    p.mfgr,
    SUM(ps.availqty) AS total_available_quantity,
    MAX(l.shipdate) AS last_ship_date,
    AVG(p.retailprice) OVER (PARTITION BY p.mfgr) AS avg_retail_price_by_mfgr,
    CASE 
        WHEN SUM(ps.supplycost) IS NULL OR AVG(p.retailprice) < 0 THEN 'Unknown' 
        ELSE 'Known' 
    END AS availability_status,
    STRING_AGG(DISTINCT s.name, ', ') AS supplier_names
FROM part p
LEFT JOIN partsupp ps ON p.partkey = ps.partkey
LEFT JOIN lineitem l ON ps.suppkey = l.suppkey AND l.orderkey IN (
    SELECT o.orderkey FROM orders o WHERE o.orderstatus = 'O'
)
JOIN supplier s ON ps.suppkey = s.suppkey
FULL OUTER JOIN nation_hierarchy nh ON s.nationkey = nh.n_nationkey
WHERE p.size BETWEEN 1 AND 10
  AND (p.comment IS NULL OR p.comment LIKE '%Fresh%')
GROUP BY p.partkey, p.name, p.mfgr
HAVING COUNT(DISTINCT l.orderkey) > (
    SELECT COUNT(*) FROM customer c WHERE c.acctbal < 1000
)
ORDER BY total_available_quantity DESC
LIMIT 50 OFFSET 100;
