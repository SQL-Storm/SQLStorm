WITH RECURSIVE supplier_hierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal, 1 AS level
    FROM supplier s
    WHERE s.s_acctbal > 100000
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal, sh.level + 1
    FROM supplier_hierarchy sh
    JOIN partsupp ps ON sh.s_suppkey = ps.ps_suppkey
    JOIN supplier s ON ps.ps_partkey = s.s_suppkey
    WHERE s.s_acctbal > sh.s_acctbal
),
costs AS (
    SELECT ps.ps_partkey, SUM(ps.ps_supplycost * l.l_quantity) AS total_cost
    FROM partsupp ps
    JOIN lineitem l ON ps.ps_partkey = l.l_partkey
    GROUP BY ps.ps_partkey
),
high_value_orders AS (
    SELECT o.o_orderkey, o.o_totalprice,
           RANK() OVER (PARTITION BY o.o_orderstatus ORDER BY o.o_totalprice DESC) as price_rank
    FROM orders o
    WHERE o.o_orderdate >= DATE_SUB(cast('1998-10-01' as date), INTERVAL 1 YEAR)
)
SELECT n.n_name AS nation, 
       COUNT(DISTINCT c.c_custkey) AS customer_count,
       SUM(l.l_extendedprice * (1 - l.l_discount)) AS revenue,
       COALESCE(SUM(ch.total_cost), 0) AS supplier_cost
FROM customer c
LEFT JOIN nation n ON c.c_nationkey = n.n_nationkey
LEFT JOIN lineitem l ON c.c_custkey = l.l_orderkey
LEFT JOIN costs ch ON l.l_partkey = ch.ps_partkey
WHERE n.n_regionkey IS NOT NULL
  AND l.l_shipdate BETWEEN '1997-01-01' AND '1997-12-31'
GROUP BY n.n_name
HAVING SUM(l.l_extendedprice * (1 - l.l_discount)) > 10000
ORDER BY revenue DESC
LIMIT 10;