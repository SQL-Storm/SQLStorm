
WITH RECURSIVE SupplierHierarchy AS (
    SELECT s_suppkey, s_name, s_nationkey, s_acctbal, 1 AS level
    FROM supplier
    WHERE s_acctbal > 50000

    UNION ALL

    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal, sh.level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE s.s_acctbal > 0 AND sh.level < 5
),
SalesData AS (
    SELECT 
        c.c_custkey, 
        c.c_name,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_sales,
        ROW_NUMBER() OVER (PARTITION BY c.c_nationkey ORDER BY SUM(l.l_extendedprice * (1 - l.l_discount)) DESC) AS sales_rank
    FROM customer c
    JOIN orders o ON c.c_custkey = o.o_custkey
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE o.o_orderdate >= '1997-01-01' AND o.o_orderdate < '1998-01-01'
    GROUP BY c.c_custkey, c.c_name, c.c_nationkey
),
NationStats AS (
    SELECT 
        n.n_name,
        COUNT(DISTINCT c.c_custkey) AS customer_count,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS nation_sales
    FROM nation n
    LEFT JOIN customer c ON n.n_nationkey = c.c_nationkey
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    LEFT JOIN lineitem l ON o.o_orderkey = l.o_orderkey
    WHERE l.l_shipdate IS NOT NULL
    GROUP BY n.n_name
)
SELECT 
    ns.n_name,
    ns.customer_count,
    ns.nation_sales,
    sd.c_name,
    sd.total_sales,
    sh.s_name AS supplier_name,
    sh.level AS supplier_level
FROM NationStats ns
LEFT JOIN SalesData sd ON ns.customer_count > 0 AND sd.sales_rank <= 5
LEFT JOIN SupplierHierarchy sh ON sh.s_nationkey = ns.n_name
WHERE ns.nation_sales > 100000
ORDER BY ns.nation_sales DESC, sd.total_sales DESC, sh.level ASC;
