WITH RECURSIVE RegionalSales AS (
    SELECT 
        r.r_name AS region_name, 
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_sales,
        ROW_NUMBER() OVER (PARTITION BY r.r_name ORDER BY SUM(l.l_extendedprice * (1 - l.l_discount)) DESC) AS region_rank
    FROM region r 
    JOIN nation n ON r.r_regionkey = n.n_regionkey
    JOIN supplier s ON n.n_nationkey = s.s_nationkey
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    JOIN part p ON ps.ps_partkey = p.p_partkey
    JOIN lineitem l ON p.p_partkey = l.l_partkey
    JOIN orders o ON l.l_orderkey = o.o_orderkey
    WHERE l.l_shipdate BETWEEN '1997-01-01' AND '1997-12-31'
    GROUP BY r.r_name
),
CustomerDetails AS (
    SELECT 
        c.c_name, 
        n.n_name AS nation_name, 
        c.c_acctbal,
        COALESCE(SUM(l.l_extendedprice * (1 - l.l_discount)), 0) AS total_spent
    FROM customer c
    LEFT JOIN nation n ON c.c_nationkey = n.n_nationkey
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    LEFT JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    GROUP BY c.c_name, n.n_name, c.c_acctbal
    HAVING c.c_acctbal > 100 AND total_spent > 0
),
SupplierAggregates AS (
    SELECT 
        s.s_name,
        COUNT(DISTINCT ps.ps_partkey) AS parts_supplied,
        AVG(ps.ps_supplycost) AS avg_supply_cost
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY s.s_name
)
SELECT 
    rs.region_name,
    cd.nation_name,
    cd.c_name AS customer_name,
    SUM(cd.total_spent) AS total_spent,
    sa.parts_supplied,
    sa.avg_supply_cost,
    ROW_NUMBER() OVER (PARTITION BY rs.region_name ORDER BY SUM(cd.total_spent) DESC) AS customer_rank
FROM RegionalSales rs
JOIN CustomerDetails cd ON cd.total_spent > 100
JOIN SupplierAggregates sa ON sa.parts_supplied > 5
GROUP BY rs.region_name, cd.nation_name, cd.c_name, sa.parts_supplied, sa.avg_supply_cost
ORDER BY rs.region_name, total_spent DESC;