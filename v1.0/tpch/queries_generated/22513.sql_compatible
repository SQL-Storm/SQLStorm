
WITH RECURSIVE supplier_hierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, 0 AS level
    FROM supplier s
    WHERE s.s_acctbal IS NOT NULL
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, sh.level + 1
    FROM supplier s
    JOIN supplier_hierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE sh.level < 3
), 
part_supplier_stats AS (
    SELECT p.p_partkey, 
           COUNT(DISTINCT ps.ps_suppkey) AS supplier_count, 
           AVG(ps.ps_supplycost) AS avg_supplycost, 
           MAX(ps.ps_availqty) AS max_availqty
    FROM part p
    JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
    GROUP BY p.p_partkey
),
customer_order_summary AS (
    SELECT c.c_custkey, 
           SUM(o.o_totalprice) AS total_spent, 
           SUM(CASE WHEN o.o_orderstatus = 'F' THEN 1 ELSE 0 END) AS fulfilled_orders,
           RANK() OVER (ORDER BY SUM(o.o_totalprice) DESC) AS revenue_rank
    FROM customer c
    JOIN orders o ON c.c_custkey = o.o_custkey
    GROUP BY c.c_custkey
)
SELECT n.n_name, 
       COALESCE(SUM(pos.avg_supplycost), 0) AS avg_supplycost_for_parts,
       COALESCE(SUM(cos.total_spent), 0) AS total_spent_by_customers,
       COALESCE(MAX(sh.level), -1) AS max_supplier_level
FROM nation n 
LEFT OUTER JOIN part_supplier_stats pos ON n.n_nationkey = (SELECT s.s_nationkey FROM supplier s WHERE s.s_suppkey IN (SELECT ps.ps_suppkey FROM partsupp ps WHERE ps.ps_partkey = ANY(SELECT p.p_partkey FROM part p)))
LEFT OUTER JOIN customer_order_summary cos ON n.n_nationkey = (SELECT c.c_nationkey FROM customer c WHERE c.c_custkey IN (SELECT o.o_custkey FROM orders o WHERE o.o_orderstatus IN ('F', 'O')))
LEFT OUTER JOIN supplier_hierarchy sh ON n.n_nationkey = sh.s_nationkey
WHERE (pos.supplier_count >= 10 OR cos.total_spent > 10000)
AND n.n_name NOT IN ('NATION23', 'NATION8') 
GROUP BY n.n_name
HAVING COUNT(DISTINCT sh.s_suppkey) > 0
ORDER BY n.n_name ASC;
