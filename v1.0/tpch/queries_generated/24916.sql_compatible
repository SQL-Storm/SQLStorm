
WITH RankedSuppliers AS (
    SELECT 
        s.s_suppkey, 
        s.s_name, 
        s.s_acctbal,
        ROW_NUMBER() OVER (PARTITION BY s.s_nationkey ORDER BY s.s_acctbal DESC) AS rn,
        s.s_nationkey
    FROM supplier s
),
HighValueSuppliers AS (
    SELECT 
        r.r_name, 
        n.n_name,
        s.s_name,
        s.s_acctbal,
        s.rn
    FROM RankedSuppliers s
    JOIN nation n ON s.s_nationkey = n.n_nationkey
    JOIN region r ON n.n_regionkey = r.r_regionkey
    WHERE s.rn <= 3
),
OrderTotals AS (
    SELECT 
        o.o_orderkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    GROUP BY o.o_orderkey
),
TotalRevenue AS (
    SELECT 
        o.o_orderkey, 
        COALESCE(SUM(l.l_extendedprice * (1 - l.l_discount)), 0) AS revenue
    FROM orders o
    LEFT JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    GROUP BY o.o_orderkey
)
SELECT 
    p.p_name, 
    COALESCE(SUM(tr.revenue), 0) AS total_revenue,
    hs.s_name AS supplier_name,
    hs.s_acctbal AS supplier_balance
FROM part p
LEFT JOIN TotalRevenue tr ON p.p_partkey = tr.o_orderkey
LEFT JOIN HighValueSuppliers hs ON p.p_partkey = hs.s_suppkey
WHERE p.p_size IN (SELECT DISTINCT ps.ps_partkey FROM partsupp ps WHERE ps.ps_availqty < 100)
GROUP BY p.p_name, hs.s_name, hs.s_acctbal
HAVING COALESCE(SUM(tr.revenue), 0) > 10000
ORDER BY total_revenue DESC
LIMIT 10 OFFSET 5;
