
WITH RankedSuppliers AS (
    SELECT 
        s.s_suppkey, 
        s.s_name, 
        s.s_acctbal, 
        RANK() OVER (PARTITION BY ps_partkey ORDER BY s.s_acctbal DESC) as rank
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
), 

FilteredOrders AS (
    SELECT 
        o.o_orderkey, 
        o.o_totalprice,
        CASE 
            WHEN o.o_orderstatus = 'F' THEN 'Finalized'
            ELSE 'Pending'
        END AS order_status,
        o.o_orderdate, 
        o.o_shippriority
    FROM 
        orders o
    WHERE 
        o.o_totalprice > (SELECT AVG(o2.o_totalprice) FROM orders o2 WHERE o2.o_orderdate >= '1996-01-01')
), 

SupplierAvailability AS (
    SELECT 
        ps.ps_partkey, 
        SUM(ps.ps_availqty) AS total_avail_qty,
        COUNT(DISTINCT s.s_suppkey) AS supplier_count
    FROM 
        partsupp ps
    JOIN 
        supplier s ON ps.ps_suppkey = s.s_suppkey
    GROUP BY 
        ps.ps_partkey
)

SELECT 
    p.p_partkey, 
    p.p_name, 
    p.p_brand, 
    sa.total_avail_qty, 
    sa.supplier_count,
    COALESCE((
        SELECT MAX(l.l_extendedprice) 
        FROM lineitem l 
        WHERE l.l_partkey = p.p_partkey AND l.l_returnflag = 'R'
    ), 0) AS max_extended_price_returned,
    ROW_NUMBER() OVER (PARTITION BY p.p_brand ORDER BY p.p_retailprice DESC) as retail_rank,
    RANK() OVER (ORDER BY p.p_size) as size_rank
FROM 
    part p
LEFT JOIN 
    SupplierAvailability sa ON p.p_partkey = sa.ps_partkey
LEFT JOIN 
    RankedSuppliers rs ON p.p_partkey = rs.ps_partkey AND rs.rank <= 5
LEFT JOIN 
    FilteredOrders fo ON fo.o_orderkey IN (
        SELECT o.o_orderkey 
        FROM orders o 
        WHERE o.o_orderdate BETWEEN '1997-01-01' AND '1997-12-31'
    )
WHERE 
    p.p_retailprice < (
        SELECT 
            AVG(p2.p_retailprice) 
        FROM 
            part p2 
        WHERE 
            p2.p_size IS NOT NULL
    )
GROUP BY 
    p.p_partkey, 
    p.p_name, 
    p.p_brand, 
    sa.total_avail_qty, 
    sa.supplier_count, 
    p.p_retailprice, 
    p.p_size
ORDER BY 
    p.p_partkey, 
    retail_rank DESC, 
    size_rank ASC;
