WITH RECURSIVE SupplierHierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal, 1 AS level
    FROM supplier s
    WHERE s.s_acctbal > 100000
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal, sh.level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE s.s_acctbal > sh.s_acctbal
),
TopCustomers AS (
    SELECT c.c_custkey, c.c_name, SUM(o.o_totalprice) AS total_spent
    FROM customer c
    JOIN orders o ON c.c_custkey = o.o_custkey
    GROUP BY c.c_custkey, c.c_name
    HAVING SUM(o.o_totalprice) > 50000
),
PartDetails AS (
    SELECT p.p_partkey, p.p_name, p.p_retailprice, COALESCE(SUM(ps.ps_availqty), 0) AS total_available
    FROM part p
    LEFT JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
    GROUP BY p.p_partkey, p.p_name, p.p_retailprice
),
OrderDetails AS (
    SELECT l.l_orderkey, l.l_partkey, l.l_extendedprice * (1 - l.l_discount) AS price_after_discount
    FROM lineitem l
    WHERE l.l_shipdate >= '1997-01-01' AND l.l_shipdate < '1998-01-01'
)
SELECT 
    r.r_name,
    COUNT(DISTINCT c.c_custkey) AS customer_count,
    SUM(od.price_after_discount) AS total_revenue,
    AVG(pd.total_available) AS avg_part_availability,
    MAX(sh.level) AS max_supplier_level
FROM region r
LEFT JOIN nation n ON r.r_regionkey = n.n_regionkey
LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
LEFT JOIN SupplierHierarchy sh ON s.s_suppkey = sh.s_suppkey
LEFT JOIN TopCustomers c ON c.c_nationkey = n.n_nationkey
LEFT JOIN OrderDetails od ON od.l_partkey IN (SELECT p.p_partkey FROM part p WHERE p.p_mfgr = s.s_name)
LEFT JOIN PartDetails pd ON pd.p_partkey = od.l_partkey
WHERE r.r_name IS NOT NULL
GROUP BY r.r_name
ORDER BY total_revenue DESC
LIMIT 10;