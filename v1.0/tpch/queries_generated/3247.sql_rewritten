WITH SupplierSummary AS (
    SELECT s.s_suppkey, 
           s.s_name, 
           SUM(ps.ps_supplycost * ps.ps_availqty) AS total_cost,
           COUNT(DISTINCT ps.ps_partkey) AS part_count
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY s.s_suppkey, s.s_name
),
OrderSummary AS (
    SELECT o.o_orderkey, 
           o.o_orderstatus, 
           o.o_totalprice, 
           o.o_orderdate,
           RANK() OVER (PARTITION BY o.o_orderstatus ORDER BY o.o_totalprice DESC) AS order_rank
    FROM orders o
    WHERE o.o_orderdate >= DATE '1997-01-01'
),
LineItemSummary AS (
    SELECT l.l_orderkey,
           SUM(l.l_extendedprice * (1 - l.l_discount)) AS revenue,
           SUM(l.l_quantity) AS total_quantity,
           COUNT(DISTINCT l.l_suppkey) AS supplier_count
    FROM lineitem l
    GROUP BY l.l_orderkey
)
SELECT 
    r.r_name,
    ss.s_name,
    ss.total_cost,
    os.o_orderkey,
    os.o_orderstatus,
    os.o_totalprice,
    os.o_orderdate,
    lis.revenue AS total_revenue,
    lis.total_quantity,
    lis.supplier_count
FROM region r
LEFT JOIN nation n ON r.r_regionkey = n.n_regionkey
LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
LEFT JOIN SupplierSummary ss ON s.s_suppkey = ss.s_suppkey
LEFT JOIN OrderSummary os ON os.o_orderkey IN (SELECT l.l_orderkey FROM lineitem l WHERE l.l_suppkey = s.s_suppkey)
LEFT JOIN LineItemSummary lis ON os.o_orderkey = lis.l_orderkey
WHERE ss.total_cost IS NOT NULL 
  AND os.order_rank <= 10
ORDER BY r.r_name, ss.total_cost DESC;