
WITH SupplierRevenue AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    JOIN 
        lineitem l ON ps.ps_partkey = l.l_partkey
    WHERE 
        l.l_shipdate >= DATE '1996-01-01'
        AND l.l_shipdate < DATE '1997-01-01'
    GROUP BY 
        s.s_suppkey, s.s_name
),
CustomerOrders AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        COUNT(o.o_orderkey) AS order_count,
        SUM(o.o_totalprice) AS total_spent
    FROM 
        customer c
    LEFT JOIN 
        orders o ON c.c_custkey = o.o_custkey
    WHERE 
        c.c_acctbal > 1000
    GROUP BY 
        c.c_custkey, c.c_name
),
TopSuppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        RANK() OVER (ORDER BY total_revenue DESC) AS revenue_rank
    FROM 
        SupplierRevenue s
),
HighValueCustomers AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        ROW_NUMBER() OVER (ORDER BY total_spent DESC) AS customer_rank
    FROM 
        CustomerOrders c
    WHERE 
        order_count > 10
)
SELECT 
    ts.s_name AS supplier_name,
    hv.c_name AS customer_name,
    COALESCE(hv.total_spent, 0) AS total_customer_spent,
    COALESCE(sr.total_revenue, 0) AS total_supplier_revenue,
    CASE 
        WHEN sr.total_revenue IS NULL THEN 'No Sales'
        ELSE 'Has Sales'
    END AS sales_status
FROM 
    TopSuppliers ts
LEFT JOIN 
    SupplierRevenue sr ON ts.s_suppkey = sr.s_suppkey
FULL OUTER JOIN 
    HighValueCustomers hv ON sr.total_revenue > 5000
WHERE 
    ts.revenue_rank <= 10
ORDER BY 
    ts.revenue_rank, hv.customer_rank;
