WITH RECURSIVE SupplyChain AS (
    SELECT 
        ps.ps_partkey, 
        ps.ps_suppkey, 
        ps.ps_availqty, 
        ps.ps_supplycost,
        1 AS level
    FROM partsupp ps
    WHERE ps.ps_availqty > 5 
    UNION ALL
    SELECT 
        ps.ps_partkey, 
        ps.ps_suppkey, 
        ps.ps_availqty, 
        ps.ps_supplycost,
        sc.level + 1
    FROM partsupp ps
    INNER JOIN SupplyChain sc ON ps.ps_partkey = sc.ps_partkey
    WHERE sc.level < 10 
),
RankedOrders AS (
    SELECT 
        o.o_orderkey, 
        o.o_orderdate, 
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS revenue,
        RANK() OVER (PARTITION BY EXTRACT(YEAR FROM o.o_orderdate) ORDER BY SUM(l.l_extendedprice * (1 - l.l_discount)) DESC) AS rn
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    GROUP BY o.o_orderkey, o.o_orderdate
),
TotalRevenue AS (
    SELECT 
        SUM(revenue) AS total_revenue
    FROM RankedOrders
    WHERE rn <= 10 
)
SELECT 
    r.r_name,
    COUNT(DISTINCT n.n_nationkey) AS nation_count,
    COALESCE(t.total_revenue, 0) AS total_revenue
FROM region r
LEFT JOIN nation n ON r.r_regionkey = n.n_regionkey
LEFT JOIN TotalRevenue t ON r.r_name LIKE '%' || n.n_name || '%' 
GROUP BY r.r_name
HAVING COUNT(n.n_nationkey) > 1 AND COALESCE(t.total_revenue, 0) > 10000 
ORDER BY total_revenue DESC;