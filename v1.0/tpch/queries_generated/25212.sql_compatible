
WITH RankedParts AS (
    SELECT p.p_partkey, p.p_name, p.p_mfgr, p.p_brand, 
           p.p_type, p.p_size, p.p_container, 
           p.p_retailprice, p.p_comment,
           ROW_NUMBER() OVER (PARTITION BY p.p_brand ORDER BY p.p_retailprice DESC) AS rank
    FROM part p
    WHERE p.p_retailprice > 50
),
HighValueSuppliers AS (
    SELECT s.s_suppkey, s.s_name, s.s_address,
           COUNT(ps.ps_partkey) AS parts_supplied,
           SUM(s.s_acctbal) AS total_acctbal
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY s.s_suppkey, s.s_name, s.s_address
    HAVING SUM(ps.ps_supplycost) > 1000
),
CustomerOrders AS (
    SELECT c.c_custkey, c.c_name, 
           COUNT(o.o_orderkey) AS total_orders,
           SUM(o.o_totalprice) AS total_spent
    FROM customer c
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    GROUP BY c.c_custkey, c.c_name
    HAVING SUM(o.o_totalprice) > 5000
)
SELECT rp.p_name, rp.p_brand, 
       SUM(lo.l_quantity) AS total_quantity_sold,
       SUM(lo.l_extendedprice) AS total_sales,
       csv.c_name AS customer_name, 
       csv.total_orders
FROM RankedParts rp
JOIN lineitem lo ON rp.p_partkey = lo.l_partkey
JOIN CustomerOrders csv ON lo.l_orderkey IN (
    SELECT o.o_orderkey 
    FROM orders o 
    JOIN customer c ON o.o_custkey = c.c_custkey 
    WHERE c.c_name = csv.c_name
)
GROUP BY rp.p_name, rp.p_brand, csv.c_name, csv.total_orders
HAVING SUM(lo.l_extendedprice) > 10000 
ORDER BY total_sales DESC, rp.p_name;
