
WITH RECURSIVE supplier_hierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, 1 AS level
    FROM supplier s
    WHERE s.s_acctbal > 1000.00
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, sh.level + 1
    FROM supplier s
    JOIN supplier_hierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE s.s_acctbal > 1000.00 AND sh.level < 5
),
order_summary AS (
    SELECT 
        o.o_orderkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
        COUNT(DISTINCT l.l_linenumber) AS total_items,
        DENSE_RANK() OVER (ORDER BY SUM(l.l_extendedprice * (1 - l.l_discount)) DESC) AS revenue_rank
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE o.o_orderdate >= '1997-01-01'
    GROUP BY o.o_orderkey
),
supplier_revenue AS (
    SELECT 
        s.s_suppkey, 
        s.s_name,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_supplied_revenue
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    JOIN lineitem l ON ps.ps_partkey = l.l_partkey
    GROUP BY s.s_suppkey, s.s_name
    HAVING SUM(l.l_extendedprice * (1 - l.l_discount)) > 50000.00
)
SELECT 
    r.r_name,
    COALESCE(s.s_name, 'Unknown Supplier') AS supplier_name,
    so.total_revenue,
    sr.total_supplied_revenue
FROM region r
LEFT JOIN nation n ON r.r_regionkey = n.n_regionkey
LEFT JOIN supplier_hierarchy s ON n.n_nationkey = s.s_nationkey
LEFT JOIN order_summary so ON so.o_orderkey IN (SELECT o.o_orderkey FROM orders o WHERE o.o_custkey = s.s_suppkey)
LEFT JOIN supplier_revenue sr ON s.s_suppkey = sr.s_suppkey
WHERE r.r_name IS NOT NULL
ORDER BY r.r_name, supplier_name NULLS LAST
LIMIT 100;
