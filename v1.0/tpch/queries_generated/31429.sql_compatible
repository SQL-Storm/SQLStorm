
WITH RECURSIVE NationHierarchy AS (
    SELECT n.n_nationkey, n.n_name, n.n_regionkey, 0 AS Level
    FROM nation n
    WHERE n.n_regionkey = (SELECT r.r_regionkey FROM region r WHERE r.r_name = 'ASIA')
    
    UNION ALL
    
    SELECT n.n_nationkey, n.n_name, n.n_regionkey, nh.Level + 1
    FROM nation n
    JOIN NationHierarchy nh ON n.n_regionkey = nh.n_nationkey
),
SupplierStats AS (
    SELECT s.s_suppkey, s.s_name, SUM(ps.ps_availqty) AS TotalAvailable
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY s.s_suppkey, s.s_name
),
CustomerOrders AS (
    SELECT c.c_custkey, c.c_name, SUM(o.o_totalprice) AS TotalSpent,
           COUNT(o.o_orderkey) AS OrderCount,
           RANK() OVER (PARTITION BY c.c_nationkey ORDER BY SUM(o.o_totalprice) DESC) AS SpendRank
    FROM customer c
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    GROUP BY c.c_custkey, c.c_name, c.c_nationkey
),
LineItemAggregates AS (
    SELECT l.l_orderkey, 
           SUM(l.l_extendedprice * (1 - l.l_discount)) AS TotalRevenue,
           COUNT(l.l_linenumber) AS LineCount,
           AVG(l.l_quantity) AS AvgQuantity
    FROM lineitem l
    GROUP BY l.l_orderkey
)
SELECT nh.n_name, 
       COALESCE(SUM(cs.TotalSpent), 0) AS TotalCustomerSpending,
       COUNT(DISTINCT ss.s_suppkey) AS UniqueSuppliers,
       AVG(la.TotalRevenue) AS AvgRevenuePerOrder
FROM NationHierarchy nh
LEFT JOIN CustomerOrders cs ON nh.n_nationkey = cs.c_nationkey
LEFT JOIN SupplierStats ss ON ss.TotalAvailable > 100
JOIN LineItemAggregates la ON la.l_orderkey IN (SELECT o.o_orderkey FROM orders o WHERE o.o_orderstatus = 'O')
WHERE nh.Level < 2
GROUP BY nh.n_nationkey, nh.n_name
HAVING COALESCE(SUM(cs.TotalSpent), 0) > 10000
ORDER BY TotalCustomerSpending DESC;
