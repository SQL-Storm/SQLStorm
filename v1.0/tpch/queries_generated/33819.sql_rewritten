WITH RECURSIVE OrderHierarchy AS (
    SELECT o.o_orderkey, o.o_orderdate, o.o_totalprice, 1 AS order_level
    FROM orders o
    WHERE o.o_orderstatus = 'F' AND o.o_orderdate >= cast('1998-10-01' as date) - INTERVAL '2 year'
    
    UNION ALL
    
    SELECT o.o_orderkey, o.o_orderdate, o.o_totalprice, oh.order_level + 1
    FROM orders o
    JOIN OrderHierarchy oh ON o.o_orderkey = oh.o_orderkey
    WHERE o.o_orderstatus = 'F' AND oh.order_level < 5
),
SupplierStats AS (
    SELECT s.s_name, SUM(ps.ps_supplycost) AS total_supply_cost, COUNT(DISTINCT ps.ps_partkey) AS part_count
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY s.s_name
),
HighValueOrders AS (
    SELECT o.o_orderkey, o.o_totalprice, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_value
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE l.l_shipdate BETWEEN '1997-01-01' AND '1997-12-31' 
    GROUP BY o.o_orderkey, o.o_totalprice
    HAVING total_value > 10000
)
SELECT r.r_name, 
       p.p_name, 
       COALESCE(ss.total_supply_cost, 0) AS total_supply_cost,
       oh.o_orderkey,
       oh.o_orderdate,
       oh.o_totalprice,
       CASE 
           WHEN oh.o_orderkey IS NOT NULL THEN 'Has Orders'
           ELSE 'No Orders'
       END AS order_status
FROM region r
LEFT JOIN nation n ON r.r_regionkey = n.n_regionkey
LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
LEFT JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
LEFT JOIN part p ON ps.ps_partkey = p.p_partkey
LEFT JOIN SupplierStats ss ON s.s_name = ss.s_name
LEFT JOIN HighValueOrders oh ON p.p_partkey = oh.o_orderkey 
WHERE r.r_comment IS NULL OR LENGTH(r.r_comment) > 50
ORDER BY r.r_name, p.p_name, oh.o_totalprice DESC;