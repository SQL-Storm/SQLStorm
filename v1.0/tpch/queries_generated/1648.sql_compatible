
WITH RankedOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_totalprice,
        ROW_NUMBER() OVER (PARTITION BY o.o_orderstatus ORDER BY o.o_orderdate DESC) AS order_rank
    FROM orders o
    WHERE o.o_orderstatus IN ('O', 'F')
), SupplierDetails AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        COUNT(DISTINCT ps.ps_partkey) AS product_count
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY s.s_suppkey, s.s_name
), LineItemSummary AS (
    SELECT 
        l.l_orderkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
        COUNT(*) AS total_items
    FROM lineitem l
    WHERE l.l_shipdate BETWEEN DATE '1996-01-01' AND DATE '1996-12-31'
    GROUP BY l.l_orderkey
)
SELECT 
    RANK() OVER (ORDER BY SUM(L.total_revenue) DESC) AS revenue_rank,
    C.c_name,
    COALESCE(SD.product_count, 0) AS supplier_product_count,
    O.o_orderkey,
    O.o_totalprice,
    L.total_revenue
FROM RankedOrders O
JOIN LineItemSummary L ON O.o_orderkey = L.l_orderkey
LEFT JOIN SupplierDetails SD ON L.total_items = SD.product_count AND SD.product_count > 5
JOIN customer C ON O.o_custkey = C.c_custkey
WHERE C.c_acctbal IS NOT NULL AND C.c_acctbal > (
    SELECT AVG(c2.c_acctbal)
    FROM customer c2
    WHERE c2.c_nationkey = C.c_nationkey
)
GROUP BY C.c_name, O.o_orderkey, O.o_totalprice, L.total_revenue, SD.product_count
HAVING SUM(L.total_revenue) > 100000
ORDER BY revenue_rank ASC, O.o_totalprice DESC;
