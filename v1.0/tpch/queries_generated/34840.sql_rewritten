WITH RECURSIVE supplier_tree AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, 0 AS level
    FROM supplier s
    WHERE s.s_acctbal > 500

    UNION ALL

    SELECT s.s_suppkey, s.s_name, s.s_nationkey, st.level + 1
    FROM supplier s
    JOIN supplier_tree st ON s.s_nationkey = st.s_nationkey AND s.s_suppkey <> st.s_suppkey
)
SELECT 
    p.p_partkey,
    p.p_name,
    p.p_brand,
    SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
    COUNT(DISTINCT o.o_orderkey) AS order_count,
    AVG(CASE WHEN c.c_acctbal IS NOT NULL THEN c.c_acctbal ELSE 0 END) AS avg_acct_balance,
    ROW_NUMBER() OVER (PARTITION BY p.p_brand ORDER BY total_revenue DESC) AS revenue_rank,
    r.r_name AS region_name
FROM part p
JOIN lineitem l ON p.p_partkey = l.l_partkey
JOIN orders o ON l.l_orderkey = o.o_orderkey
LEFT JOIN customer c ON o.o_custkey = c.c_custkey
JOIN nation n ON c.c_nationkey = n.n_nationkey
JOIN region r ON n.n_regionkey = r.r_regionkey
LEFT JOIN supplier_tree st ON st.s_nationkey = n.n_nationkey
WHERE 
    p.p_size > 10 AND 
    (l.l_shipdate BETWEEN DATE '1997-01-01' AND DATE '1997-12-31') AND 
    (o.o_orderstatus = 'O' OR o.o_orderstatus = 'F')
GROUP BY 
    p.p_partkey, p.p_name, p.p_brand, r.r_name
HAVING 
    total_revenue > 1000.00
ORDER BY 
    total_revenue DESC
LIMIT 100;