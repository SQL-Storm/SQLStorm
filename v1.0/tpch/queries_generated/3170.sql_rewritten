WITH SupplierSales AS (
    SELECT 
        s.s_name,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_sales,
        COUNT(DISTINCT o.o_orderkey) AS order_count
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    JOIN 
        lineitem l ON ps.ps_partkey = l.l_partkey
    JOIN 
        orders o ON l.l_orderkey = o.o_orderkey
    WHERE 
        o.o_orderdate >= DATE '1997-01-01' AND o.o_orderdate < DATE '1997-12-31'
    GROUP BY 
        s.s_name
),

NationSales AS (
    SELECT 
        n.n_name,
        SUM(ss.total_sales) AS total_sales_by_nation,
        SUM(ss.order_count) AS total_orders
    FROM 
        nation n
    LEFT JOIN 
        supplier s ON n.n_nationkey = s.s_nationkey
    LEFT JOIN 
        SupplierSales ss ON s.s_name = ss.s_name
    GROUP BY 
        n.n_name
),

RegionSales AS (
    SELECT 
        r.r_name,
        COALESCE(SUM(ns.total_sales_by_nation), 0) AS total_sales_by_region,
        COUNT(DISTINCT ns.total_orders) AS total_orders_by_region
    FROM 
        region r
    LEFT JOIN 
        nation n ON r.r_regionkey = n.n_regionkey
    LEFT JOIN 
        NationSales ns ON n.n_name = ns.n_name
    GROUP BY 
        r.r_name
)

SELECT 
    r.r_name AS Region,
    r.total_sales_by_region AS Total_Sales,
    r.total_orders_by_region AS Total_Orders,
    CASE 
        WHEN r.total_orders_by_region IS NULL OR r.total_orders_by_region = 0 THEN 'No Orders'
        ELSE ROUND(r.total_sales_by_region / NULLIF(r.total_orders_by_region, 0), 2)
    END AS Average_Sales_Per_Order
FROM 
    RegionSales r
ORDER BY 
    r.total_sales_by_region DESC;