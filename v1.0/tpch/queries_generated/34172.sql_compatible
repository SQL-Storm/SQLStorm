
WITH RECURSIVE CTE_Supplier_Names AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, 1 AS level
    FROM supplier s
    WHERE s.s_acctbal > 10000
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, c.level + 1
    FROM supplier s
    JOIN CTE_Supplier_Names c ON s.s_nationkey = c.s_nationkey
    WHERE c.level < 3
),
CTE_Aggregated_Orders AS (
    SELECT o.o_custkey, SUM(o.o_totalprice) AS total_spent, COUNT(o.o_orderkey) AS order_count
    FROM orders o
    WHERE o.o_orderdate >= DATE '1997-01-01' AND o.o_orderdate < DATE '1997-10-01'
    GROUP BY o.o_custkey
),
CTE_Lineitem_Summary AS (
    SELECT li.l_orderkey, SUM(li.l_extendedprice * (1 - li.l_discount)) AS total_sales
    FROM lineitem li
    WHERE li.l_shipdate BETWEEN DATE '1997-01-01' AND DATE '1997-12-31'
    GROUP BY li.l_orderkey
)
SELECT DISTINCT c.c_name, 
       COALESCE(s.s_name, 'No Supplier') AS supplier_name, 
       r.r_name AS region_name, 
       CASE 
           WHEN ao.total_spent IS NULL THEN 'No Orders' 
           ELSE ao.total_spent 
       END AS total_spent,
       COALESCE(ao.order_count, 0) AS order_count,
       ls.total_sales
FROM customer c
LEFT JOIN CTE_Aggregated_Orders ao ON c.c_custkey = ao.o_custkey
LEFT JOIN partsupp ps ON ps.ps_partkey IN (SELECT p.p_partkey FROM part p WHERE p.p_size < 10)
LEFT JOIN supplier s ON ps.ps_suppkey = s.s_suppkey
LEFT JOIN nation n ON c.c_nationkey = n.n_nationkey
LEFT JOIN region r ON n.n_regionkey = r.r_regionkey
LEFT JOIN CTE_Lineitem_Summary ls ON ls.l_orderkey IN (SELECT o.o_orderkey FROM orders o WHERE o.o_custkey = c.c_custkey)
WHERE (c.c_acctbal IS NOT NULL AND c.c_acctbal > 5000)
  AND (r.r_name IS NOT NULL OR s.s_nationkey IS NULL)
ORDER BY total_spent DESC NULLS LAST, total_sales ASC;
