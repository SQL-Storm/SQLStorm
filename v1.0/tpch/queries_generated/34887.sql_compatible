
WITH RECURSIVE SupplierHierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal, 1 AS level
    FROM supplier s
    WHERE s.s_acctbal > (SELECT AVG(s_acctbal) FROM supplier)
    
    UNION ALL
    
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal, sh.level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE sh.level < 5
),
NationSupplier AS (
    SELECT n.n_name, COUNT(DISTINCT s.s_suppkey) AS supplier_count
    FROM nation n
    LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
    GROUP BY n.n_name
),
SalesData AS (
    SELECT o.o_orderkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_sales
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE o.o_orderdate >= '1996-01-01' AND o.o_orderdate < '1997-01-01'
    GROUP BY o.o_orderkey
),
RankedOrders AS (
    SELECT o.o_orderkey, o.o_totalprice, ROW_NUMBER() OVER (PARTITION BY o.o_orderstatus ORDER BY o.o_totalprice DESC) AS rank_order
    FROM orders o
)
SELECT n.n_name, 
       ns.supplier_count, 
       COALESCE(SUM(sd.total_sales), 0) AS total_sales, 
       MAX(ro.o_totalprice) AS max_order_price,
       COUNT(DISTINCT sh.s_suppkey) AS active_suppliers
FROM NationSupplier ns
LEFT JOIN SupplierHierarchy sh ON ns.supplier_count > 10
LEFT JOIN SalesData sd ON ns.n_name = (SELECT n.n_name FROM nation n WHERE n.n_nationkey = sh.s_nationkey)
LEFT JOIN RankedOrders ro ON ro.rank_order <= 5
GROUP BY n.n_name, ns.supplier_count
HAVING COALESCE(SUM(sd.total_sales), 0) > 100000
ORDER BY total_sales DESC, ns.supplier_count ASC;
