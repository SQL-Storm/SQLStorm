
WITH RankedOrders AS (
    SELECT o.o_orderkey, o.o_orderdate, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
           ROW_NUMBER() OVER (PARTITION BY o.o_orderkey ORDER BY l.l_extendedprice DESC) AS rank_by_price
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE o.o_orderdate >= DATE '1997-01-01' AND o.o_orderdate < DATE '1998-01-01'
    GROUP BY o.o_orderkey, o.o_orderdate
),
TopNOrders AS (
    SELECT r.* 
    FROM RankedOrders r 
    WHERE r.rank_by_price <= 5
),
SupplierDetails AS (
    SELECT s.s_suppkey, s.s_name, s.s_acctbal,
           COALESCE(SUM(ps.ps_supplycost * ps.ps_availqty), 0) AS total_supply_cost
    FROM supplier s
    LEFT JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY s.s_suppkey, s.s_name, s.s_acctbal
),
CustomerRevenue AS (
    SELECT c.c_custkey, c.c_name, SUM(l.l_extendedprice * (1 - l.l_discount)) AS customer_revenue
    FROM customer c
    JOIN orders o ON c.c_custkey = o.o_custkey
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE o.o_orderstatus = 'O'
    GROUP BY c.c_custkey, c.c_name
)
SELECT COALESCE(c.c_name, 'Unknown Customer') AS customer_name,
       t.total_revenue AS order_revenue,
       s.s_name AS supplier_name,
       s.total_supply_cost,
       COALESCE(cr.customer_revenue, 0) AS customer_total_revenue
FROM TopNOrders t
LEFT JOIN SupplierDetails s ON s.s_suppkey IN (
    SELECT ps.ps_suppkey
    FROM partsupp ps
    JOIN lineitem l ON ps.ps_partkey = l.l_partkey
    WHERE l.l_orderkey = t.o_orderkey
)
LEFT JOIN CustomerRevenue cr ON cr.c_custkey IN (
    SELECT o.o_custkey
    FROM orders o
    WHERE o.o_orderkey = t.o_orderkey
)
WHERE s.total_supply_cost > (
    SELECT AVG(total_supply_cost) FROM SupplierDetails
)
ORDER BY order_revenue DESC, customer_name;
