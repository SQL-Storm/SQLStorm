WITH RECURSIVE supply_chain AS (
    SELECT p.p_partkey, p.p_name, p.p_brand, 
           s.s_suppkey, s.s_name, s.s_acctbal,
           ROW_NUMBER() OVER (PARTITION BY p.p_partkey ORDER BY s.s_acctbal DESC) as rn
    FROM part p
    JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
    JOIN supplier s ON ps.ps_suppkey = s.s_suppkey
    WHERE s.s_acctbal > (SELECT AVG(s2.s_acctbal) FROM supplier s2 WHERE s2.s_nationkey = (SELECT n.n_nationkey FROM nation n WHERE n.n_name = 'CANADA'))
),
high_value_orders AS (
    SELECT o.o_orderkey, o.o_totalprice, o.o_orderdate, 
           SUM(l.l_extendedprice * (1 - l.l_discount)) OVER (PARTITION BY o.o_orderkey) AS total_value
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE o.o_orderdate < cast('1998-10-01 12:34:56' as timestamp) - INTERVAL '1 year'
      AND l.l_returnflag = 'N'
),
distinct_customers AS (
    SELECT DISTINCT c.c_custkey, c.c_name, c.c_mktsegment
    FROM customer c
    WHERE c.c_acctbal IS NOT NULL
      AND EXISTS (SELECT 1 FROM orders o WHERE o.o_custkey = c.c_custkey)
)
SELECT n.n_name, COUNT(DISTINCT c.c_custkey) AS customer_count, 
       SUM(l.l_quantity) AS total_quantity, 
       MAX(h.total_value) AS max_order_value, 
       COALESCE(MAX(s.s_acctbal), 0) AS max_supplier_acctbal
FROM nation n
LEFT JOIN distinct_customers c ON c.c_nationkey = n.n_nationkey
LEFT JOIN high_value_orders h ON h.o_orderkey IN (SELECT o.o_orderkey FROM orders o WHERE o.o_custkey = c.c_custkey)
LEFT JOIN supply_chain s ON s.p_partkey IN (SELECT ps.ps_partkey FROM partsupp ps WHERE ps.ps_suppkey IN (SELECT DISTINCT l.l_suppkey FROM lineitem l JOIN orders o ON l.l_orderkey = o.o_orderkey WHERE o.o_custkey = c.c_custkey))
GROUP BY n.n_name
HAVING COUNT(DISTINCT c.c_custkey) > 10 AND COALESCE(MAX(s.s_acctbal), 0) < (SELECT AVG(s2.s_acctbal) FROM supplier s2)
ORDER BY n.n_name DESC
LIMIT 100;