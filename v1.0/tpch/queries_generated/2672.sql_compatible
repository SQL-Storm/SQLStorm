
WITH RankedSuppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        s.s_acctbal,
        RANK() OVER (PARTITION BY ps.partkey ORDER BY s.s_acctbal DESC) AS supplier_rank
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
),
FilteredOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_totalprice,
        o.o_orderdate,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_lineitem_cost,
        COUNT(l.l_orderkey) AS lineitem_count
    FROM 
        orders o
    JOIN 
        lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE 
        o.o_orderstatus = 'F' 
        AND o.o_orderdate BETWEEN DATE '1997-01-01' AND DATE '1997-12-31'
    GROUP BY 
        o.o_orderkey, o.o_totalprice, o.o_orderdate
),
SuppliersWithDetails AS (
    SELECT 
        ps.ps_partkey,
        ps.ps_suppkey,
        ps.ps_availqty,
        ps.ps_supplycost,
        RANK() OVER (ORDER BY ps.ps_supplycost) AS supply_rank
    FROM 
        partsupp ps
)
SELECT 
    p.p_partkey,
    p.p_name,
    COALESCE(s.s_name, 'N/A') AS supplier_name,
    COALESCE(RA.total_lineitem_cost, 0) AS total_cost,
    F.lineitem_count,
    SUM(COALESCE(F.total_lineitem_cost, 0) * RA.supplier_rank) AS weighted_cost,
    COUNT(DISTINCT s.s_suppkey) AS unique_suppliers
FROM 
    part p
LEFT JOIN 
    SuppliersWithDetails s ON p.p_partkey = s.ps_partkey
LEFT JOIN 
    RankedSuppliers RA ON s.s_suppkey = RA.s_suppkey
LEFT JOIN 
    FilteredOrders F ON F.o_totalprice > p.p_retailprice
WHERE 
    p.p_size > 20
GROUP BY 
    p.p_partkey, p.p_name, s.s_name, F.lineitem_count, RA.supplier_rank
HAVING 
    AVG(s.ps_supplycost) > (SELECT AVG(ps_supplycost) FROM partsupp)
ORDER BY 
    total_cost DESC;
