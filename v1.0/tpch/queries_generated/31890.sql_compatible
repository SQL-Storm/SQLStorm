
WITH RECURSIVE SupplierHierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal, 1 AS hierarchy_level
    FROM supplier s
    WHERE s.s_acctbal > (SELECT AVG(s_acctbal) FROM supplier)
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal, sh.hierarchy_level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE sh.hierarchy_level < 5
),
PartSupplier AS (
    SELECT ps.ps_partkey, ps.ps_suppkey, SUM(ps.ps_availqty) AS total_available_qty
    FROM partsupp ps
    JOIN supplier s ON ps.ps_suppkey = s.s_suppkey
    WHERE s.s_acctbal > 5000
    GROUP BY ps.ps_partkey, ps.ps_suppkey
),
CustomerOrderStats AS (
    SELECT c.c_custkey, c.c_name, COUNT(o.o_orderkey) AS order_count, 
           SUM(o.o_totalprice) AS total_spent
    FROM customer c
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    GROUP BY c.c_custkey, c.c_name
),
RegionAvgOrders AS (
    SELECT n.n_regionkey, r.r_name, AVG(o.o_totalprice) AS avg_order_value
    FROM nation n
    JOIN region r ON n.n_regionkey = r.r_regionkey
    JOIN orders o ON n.n_nationkey = (SELECT c.c_nationkey FROM customer c WHERE c.c_custkey = o.o_custkey)
    GROUP BY n.n_regionkey, r.r_name
),
TopParts AS (
    SELECT p.p_partkey, p.p_name, p.p_mfgr, p.p_retailprice,
           ROW_NUMBER() OVER (PARTITION BY p.p_mfgr ORDER BY p.p_retailprice DESC) AS price_rank
    FROM part p
    WHERE p.p_retailprice IS NOT NULL
)
SELECT rh.r_name, 
       AVG(cos.total_spent) AS average_customer_spending,
       SUM(ps.total_available_qty) AS total_parts_available,
       COUNT(DISTINCT tp.p_partkey) AS unique_parts_count
FROM RegionAvgOrders rh
LEFT JOIN CustomerOrderStats cos ON rh.r_regionkey = (SELECT n.n_regionkey FROM nation n WHERE n.n_nationkey = cos.c_custkey)
LEFT JOIN PartSupplier ps ON ps.ps_partkey IN (SELECT tp.p_partkey FROM TopParts tp WHERE tp.price_rank <= 5)
LEFT JOIN supplier s ON ps.ps_suppkey = s.s_suppkey
GROUP BY rh.r_name
ORDER BY average_customer_spending DESC;
