
WITH RankedOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_custkey,
        o.o_orderstatus,
        o.o_totalprice,
        o.o_orderdate,
        o.o_orderpriority,
        ROW_NUMBER() OVER (PARTITION BY o.o_orderstatus ORDER BY o.o_orderdate DESC) AS rn
    FROM 
        orders o
    WHERE 
        EXTRACT(YEAR FROM o.o_orderdate) > 1995
),
SupplierDetails AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        s.s_acctbal,
        s.s_comment,
        DENSE_RANK() OVER (ORDER BY s.s_acctbal DESC) AS rn
    FROM 
        supplier s
    WHERE 
        s.s_acctbal IS NOT NULL AND s.s_acctbal > 1000
),
TopRegions AS (
    SELECT 
        n.n_regionkey,
        r.r_name,
        COUNT(DISTINCT s.s_suppkey) AS supplier_count
    FROM 
        region r
        JOIN nation n ON r.r_regionkey = n.n_regionkey
        JOIN supplier s ON n.n_nationkey = s.s_nationkey
    GROUP BY 
        n.n_regionkey, r.r_name
    HAVING 
        COUNT(DISTINCT s.s_suppkey) > 5
),
OrderLineSummary AS (
    SELECT 
        l.l_orderkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
        SUM(l.l_quantity) AS total_quantity,
        AVG(l.l_tax) AS average_tax
    FROM 
        lineitem l
    GROUP BY 
        l.l_orderkey
),
FinalOutput AS (
    SELECT 
        ro.o_orderkey,
        ols.total_revenue,
        ols.total_quantity,
        CASE 
            WHEN ro.o_orderstatus = 'F' THEN 'Completed'
            WHEN ro.o_orderstatus = 'P' THEN 'Pending'
            ELSE 'Other'
        END AS order_status,
        CASE 
            WHEN s.rn IS NOT NULL THEN 'Top Supplier'
            ELSE 'Regular Supplier'
        END AS supplier_status
    FROM 
        RankedOrders ro
    LEFT JOIN 
        OrderLineSummary ols ON ro.o_orderkey = ols.l_orderkey
    LEFT JOIN 
        SupplierDetails s ON s.rn <= 10 AND s.s_suppkey IN (
            SELECT ps.ps_suppkey
            FROM partsupp ps
            WHERE ps.ps_availqty > 20
        )
)
SELECT 
    fo.o_orderkey,
    fo.total_revenue,
    fo.total_quantity,
    fo.order_status,
    SUM(tr.supplier_count) AS region_supplier_count
FROM 
    FinalOutput fo
LEFT OUTER JOIN 
    TopRegions tr ON tr.n_regionkey IN (
        SELECT n.n_regionkey
        FROM nation n
        WHERE n.n_nationkey = (
            SELECT c.c_nationkey
            FROM customer c
            WHERE c.c_custkey = fo.o_custkey
        )
    )
GROUP BY 
    fo.o_orderkey, fo.total_revenue, fo.total_quantity, fo.order_status
HAVING 
    fo.total_revenue IS NOT NULL AND fo.total_quantity > 0
ORDER BY 
    fo.total_revenue DESC, fo.o_orderkey;
