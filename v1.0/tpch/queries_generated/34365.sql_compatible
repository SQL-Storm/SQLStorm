
WITH RECURSIVE OrderHierarchy AS (
    SELECT o.o_orderkey, o.o_orderdate, o.o_totalprice, 
           ROW_NUMBER() OVER (PARTITION BY o.o_orderkey ORDER BY o.o_orderdate) AS level
    FROM orders o 
    WHERE o.o_orderstatus = 'O' 
    UNION ALL
    SELECT oh.o_orderkey, oh.o_orderdate, oh.o_totalprice,
           level + 1
    FROM OrderHierarchy oh
    JOIN lineitem li ON oh.o_orderkey = li.l_orderkey
    WHERE li.l_discount > 0.1 
),
TopCustomers AS (
    SELECT c.c_custkey, c.c_name, SUM(o.o_totalprice) AS total_spent
    FROM customer c
    JOIN orders o ON c.c_custkey = o.o_custkey
    LEFT JOIN lineitem li ON o.o_orderkey = li.l_orderkey
    GROUP BY c.c_custkey, c.c_name
    HAVING SUM(o.o_totalprice) > (SELECT AVG(o_totalprice) FROM orders) 
), 
MaxPricePerPart AS (
    SELECT ps.ps_partkey, MAX(ps.ps_supplycost) AS max_supply_cost
    FROM partsupp ps
    GROUP BY ps.ps_partkey
)
SELECT 
    p.p_name,
    p.p_type,
    MAX(ps.max_supply_cost) AS max_supply_cost,
    SUM(l.l_quantity) AS total_quantity_sold,
    COUNT(DISTINCT o.o_orderkey) AS total_orders,
    RANK() OVER (ORDER BY SUM(l.l_extendedprice * (1 - l.l_discount)) DESC) AS sales_rank,
    COALESCE(n.n_name, 'Unknown') AS nation_name
FROM part p
JOIN lineitem l ON p.p_partkey = l.l_partkey
JOIN orders o ON l.l_orderkey = o.o_orderkey
LEFT JOIN supplier s ON l.l_suppkey = s.s_suppkey
LEFT JOIN nation n ON s.s_nationkey = n.n_nationkey
JOIN MaxPricePerPart mpp ON p.p_partkey = mpp.ps_partkey
WHERE l.l_shipdate BETWEEN DATE '1997-01-01' AND DATE '1997-12-31' 
  AND o.o_orderstatus IN ('O', 'F') 
GROUP BY p.p_name, p.p_type, n.n_name
HAVING SUM(l.l_quantity) > 1000 
ORDER BY sales_rank, total_quantity_sold DESC
LIMIT 10;
