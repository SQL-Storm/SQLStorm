
WITH RankedSuppliers AS (
    SELECT
        s.s_suppkey,
        s.s_name,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supplycost,
        ROW_NUMBER() OVER (PARTITION BY ps.ps_partkey ORDER BY SUM(ps.ps_supplycost * ps.ps_availqty) DESC) AS rank
    FROM
        supplier s
    JOIN
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY
        s.s_suppkey, s.s_name, ps.ps_partkey
),
RecentOrders AS (
    SELECT
        o.o_orderkey,
        o.o_custkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS order_total,
        o.o_orderdate
    FROM
        orders o
    JOIN
        lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE
        o.o_orderdate >= DATEADD(month, -6, '1998-10-01')
    GROUP BY
        o.o_orderkey, o.o_custkey, o.o_orderdate
),
CustomerOrders AS (
    SELECT
        c.c_custkey,
        c.c_name,
        COUNT(DISTINCT r.o_orderkey) AS total_orders,
        SUM(r.order_total) AS total_spent
    FROM
        customer c
    JOIN
        RecentOrders r ON c.c_custkey = r.o_custkey
    GROUP BY
        c.c_custkey, c.c_name
)
SELECT
    co.c_custkey,
    co.c_name,
    co.total_orders,
    co.total_spent,
    rs.s_name AS top_supplier,
    rs.total_supplycost
FROM
    CustomerOrders co
LEFT JOIN
    RankedSuppliers rs ON rs.s_suppkey IN (
        SELECT DISTINCT ps.ps_suppkey
        FROM partsupp ps
        JOIN lineitem l ON ps.ps_partkey = l.l_partkey
        WHERE l.l_orderkey IN (
            SELECT o.o_orderkey
            FROM orders o
            WHERE o.o_custkey = co.c_custkey
        )
    )
WHERE
    co.total_spent > 10000
ORDER BY
    co.total_spent DESC
LIMIT 100;
