WITH SupplierStats AS (
    SELECT 
        s.s_suppkey, 
        SUM(ps.ps_availqty) AS TotalAvailable, 
        AVG(ps.ps_supplycost) AS AvgSupplyCost
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey
),
CustomerOrders AS (
    SELECT 
        c.c_custkey, 
        COUNT(o.o_orderkey) AS OrderCount, 
        SUM(o.o_totalprice) AS TotalSpent
    FROM 
        customer c
    LEFT JOIN 
        orders o ON c.c_custkey = o.o_custkey
    GROUP BY 
        c.c_custkey
),
RecentLineItems AS (
    SELECT 
        l.l_orderkey, 
        l.l_partkey,
        ROW_NUMBER() OVER (PARTITION BY l.l_orderkey ORDER BY l.l_shipdate DESC) AS Rn
    FROM 
        lineitem l
    WHERE 
        l.l_shipdate >= cast('1998-10-01' as date) - INTERVAL '30 days'
)
SELECT 
    n.n_name, 
    p.p_name, 
    COALESCE(cs.TotalSpent, 0) AS CustomerSpent, 
    COALESCE(ss.TotalAvailable, 0) AS SupplierAvailable,
    SUM(l.l_extendedprice * (1 - l.l_discount)) AS Revenue,
    CASE 
        WHEN l.l_returnflag = 'R' THEN 'Returned'
        ELSE 'Sold'
    END AS SaleStatus,
    COUNT(DISTINCT CustomOrder.c_custkey) AS UniqueCustomers
FROM 
    part p
JOIN 
    RecentLineItems l ON p.p_partkey = l.l_partkey
JOIN 
    supplier s ON l.l_suppkey = s.s_suppkey
LEFT JOIN 
    SupplierStats ss ON s.s_suppkey = ss.s_suppkey
LEFT JOIN 
    CustomerOrders cs ON l.l_orderkey IN (SELECT o.o_orderkey FROM orders o WHERE o.o_custkey = cs.c_custkey)
JOIN 
    nation n ON s.s_nationkey = n.n_nationkey
LEFT JOIN 
    orders o ON l.l_orderkey = o.o_orderkey
WHERE 
    p.p_retailprice > (SELECT AVG(p2.p_retailprice) FROM part p2 WHERE p2.p_size < p.p_size)
    AND (l.l_discount BETWEEN 0 AND 0.2 OR l.l_discount IS NULL)
GROUP BY 
    n.n_name, p.p_name, SaleStatus
HAVING 
    SUM(l.l_extendedprice) > 1000
ORDER BY 
    Revenue DESC, UniqueCustomers ASC NULLS LAST;