
WITH ranked_orders AS (
    SELECT 
        o.o_orderkey,
        o.o_orderdate,
        o.o_totalprice,
        o.o_orderstatus,
        RANK() OVER (PARTITION BY o.o_orderstatus ORDER BY o.o_totalprice DESC) AS order_rank
    FROM 
        orders o
    WHERE 
        o.o_orderdate >= DATE '1997-01-01' AND o.o_orderdate < DATE '1997-12-31'
),
supplier_avg_cost AS (
    SELECT 
        ps.ps_suppkey,
        AVG(ps.ps_supplycost) AS avg_supply_cost
    FROM 
        partsupp ps
    JOIN 
        part p ON ps.ps_partkey = p.p_partkey
    GROUP BY 
        ps.ps_suppkey
),
customer_orders AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        COUNT(o.o_orderkey) AS order_count
    FROM 
        customer c
    LEFT JOIN 
        orders o ON c.c_custkey = o.o_custkey
    GROUP BY 
        c.c_custkey, c.c_name
    HAVING 
        COUNT(o.o_orderkey) > 5
)
SELECT 
    c.c_name,
    COALESCE(r.order_rank, 0) AS order_rank,
    s.s_name,
    s_avg.avg_supply_cost,
    COUNT(DISTINCT co.o_orderkey) AS total_orders,
    SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_sales
FROM 
    customer c
LEFT JOIN 
    customer_orders co ON c.c_custkey = co.c_custkey
LEFT JOIN 
    ranked_orders r ON co.o_orderkey = r.o_orderkey
LEFT JOIN 
    supplier s ON s.s_nationkey = c.c_nationkey
JOIN 
    partsupp ps ON s.s_suppkey = ps.ps_suppkey
JOIN 
    lineitem l ON ps.ps_partkey = l.l_partkey
LEFT JOIN 
    supplier_avg_cost s_avg ON s.s_suppkey = s_avg.ps_suppkey
WHERE 
    l.l_shipdate BETWEEN DATE '1997-01-01' AND DATE '1997-12-31'
GROUP BY 
    c.c_name, r.order_rank, s.s_name, s_avg.avg_supply_cost
ORDER BY 
    total_sales DESC, order_rank DESC;
