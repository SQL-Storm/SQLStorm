
WITH RankedOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_orderdate,
        o.o_totalprice,
        o.o_orderstatus,
        RANK() OVER (PARTITION BY o.o_orderstatus ORDER BY o.o_totalprice DESC) AS status_rank
    FROM orders o
    WHERE o.o_orderdate >= DATE '1995-01-01' AND o.o_orderdate < DATE '1996-01-01'
),
TopSupp AS (
    SELECT 
        ps.ps_suppkey,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_cost
    FROM partsupp ps
    JOIN supplier s ON ps.ps_suppkey = s.s_suppkey
    GROUP BY ps.ps_suppkey
    HAVING SUM(ps.ps_supplycost * ps.ps_availqty) > 100000
),
HighValueCustomers AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        c.c_acctbal,
        ROW_NUMBER() OVER (ORDER BY c.c_acctbal DESC) AS rn
    FROM customer c
    WHERE c.c_acctbal IS NOT NULL AND c.c_acctbal > 5000
)
SELECT 
    n.n_name,
    p.p_name,
    SUM(l.l_extendedprice * (1 - l.l_discount)) AS revenue,
    (SELECT COUNT(DISTINCT c.c_custkey)
     FROM HighValueCustomers hvc
     WHERE hvc.c_custkey IN (SELECT o.o_custkey FROM RankedOrders o WHERE o.o_orderkey IN (
         SELECT l.l_orderkey FROM lineitem l WHERE l.l_partkey = p.p_partkey
     ))) AS high_value_count,
    CASE
        WHEN SUM(l.l_extendedprice * (1 - l.l_discount)) > 1000000 THEN 'High Revenue'
        WHEN SUM(l.l_extendedprice * (1 - l.l_discount)) IS NULL OR SUM(l.l_extendedprice * (1 - l.l_discount)) = 0 THEN 'No Revenue'
        ELSE 'Moderate Revenue'
    END AS revenue_category
FROM part p
LEFT JOIN lineitem l ON p.p_partkey = l.l_partkey
LEFT JOIN supplier s ON l.l_suppkey = s.s_suppkey
LEFT JOIN nation n ON s.s_nationkey = n.n_nationkey
RIGHT JOIN TopSupp ts ON s.s_suppkey = ts.ps_suppkey
WHERE p.p_retailprice < 50 AND (p.p_comment LIKE '%fragile%' OR p.p_type = 'standby')
GROUP BY n.n_name, p.p_name
HAVING SUM(l.l_extendedprice * (1 - l.l_discount)) > 20000 OR COUNT(DISTINCT l.l_orderkey) > 5
ORDER BY revenue DESC
LIMIT 10;
