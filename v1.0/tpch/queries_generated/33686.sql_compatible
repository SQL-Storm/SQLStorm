
WITH RECURSIVE sales_data AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_sales
    FROM 
        customer c
    JOIN 
        orders o ON c.c_custkey = o.o_custkey
    JOIN 
        lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE 
        o.o_orderdate < '1997-01-01'
    GROUP BY 
        c.c_custkey, c.c_name
    UNION ALL
    SELECT 
        sd.c_custkey,
        sd.c_name,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_sales
    FROM 
        sales_data sd
    JOIN 
        orders o ON sd.c_custkey = o.o_custkey
    JOIN 
        lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE 
        o.o_orderdate < '1997-01-01'
    GROUP BY 
        sd.c_custkey, sd.c_name
),
ranked_sales AS (
    SELECT 
        s.c_custkey,
        s.c_name,
        s.total_sales,
        RANK() OVER (ORDER BY s.total_sales DESC) AS sales_rank
    FROM 
        sales_data s
)
SELECT 
    r.r_name,
    COUNT(DISTINCT n.n_nationkey) AS num_nations,
    SUM(COALESCE(rw.total_sales, 0)) AS total_sales_region,
    MAX(rw.total_sales) AS max_sales,
    AVG(rw.total_sales) AS avg_sales
FROM 
    region r
LEFT JOIN 
    nation n ON r.r_regionkey = n.n_regionkey
LEFT JOIN 
    (SELECT 
         n.n_nationkey,
         sd.c_custkey,
         sd.total_sales
     FROM 
         nation n
     JOIN 
         ranked_sales sd ON n.n_nationkey = sd.c_custkey) rw ON n.n_nationkey = rw.n_nationkey
GROUP BY 
    r.r_regionkey, r.r_name
HAVING 
    AVG(COALESCE(rw.total_sales, 0)) > (
        SELECT 
            AVG(total_sales) 
        FROM 
            ranked_sales
    ) - 100000
ORDER BY 
    total_sales_region DESC;
