WITH RECURSIVE OrderHierarchy AS (
    SELECT o.o_orderkey, o.o_orderdate, o.o_totalprice, o.o_orderstatus, 1 AS order_level
    FROM orders o
    WHERE o.o_orderstatus = 'F' 
    UNION ALL
    SELECT o.o_orderkey, o.o_orderdate, o.o_totalprice, o.o_orderstatus, oh.order_level + 1
    FROM orders o
    JOIN OrderHierarchy oh ON o.o_custkey = (SELECT c.c_custkey FROM customer c WHERE c.c_custkey = oh.o_orderkey)
    WHERE o.o_orderdate < cast('1998-10-01' as date) - INTERVAL '1 year' 
),
SupplierStats AS (
    SELECT ps.ps_partkey, ps.ps_suppkey, SUM(ps.ps_availqty) AS total_available_quantity,
    AVG(ps.ps_supplycost) AS average_supply_cost
    FROM partsupp ps
    GROUP BY ps.ps_partkey, ps.ps_suppkey
),
NationRegion AS (
    SELECT n.n_name, r.r_name, COUNT(s.s_suppkey) AS total_suppliers
    FROM nation n
    JOIN region r ON n.n_regionkey = r.r_regionkey
    JOIN supplier s ON n.n_nationkey = s.s_nationkey
    GROUP BY n.n_name, r.r_name
)
SELECT 
    p.p_name,
    p.p_brand,
    p.p_retailprice,
    COALESCE(ss.total_available_quantity, 0) AS total_available_quantity,
    COALESCE(ss.average_supply_cost, 0) AS average_supply_cost,
    COUNT(DISTINCT oh.o_orderkey) AS total_orders,
    nr.total_suppliers,
    ROW_NUMBER() OVER (PARTITION BY p.p_brand ORDER BY p.p_retailprice DESC) AS price_rank
FROM part p
LEFT JOIN SupplierStats ss ON p.p_partkey = ss.ps_partkey
LEFT JOIN OrderHierarchy oh ON p.p_partkey = (SELECT l.l_partkey FROM lineitem l WHERE l.l_orderkey = oh.o_orderkey)
JOIN NationRegion nr ON p.p_brand = nr.n.n_name
GROUP BY p.p_name, p.p_brand, p.p_retailprice, ss.total_available_quantity, ss.average_supply_cost, nr.total_suppliers
HAVING SUM(oh.o_totalprice) > 10000.00 OR nr.total_suppliers > 5
ORDER BY price_rank, total_orders DESC;