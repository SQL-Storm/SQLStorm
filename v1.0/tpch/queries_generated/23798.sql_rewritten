WITH RECURSIVE SupplierCTE AS (
    SELECT s_suppkey, s_name, s_acctbal, 1 AS level
    FROM supplier
    WHERE s_acctbal > (SELECT AVG(s_acctbal) FROM supplier) 
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_acctbal, c.level + 1
    FROM supplier s
    JOIN SupplierCTE c ON s.s_suppkey = (SELECT ps_suppkey FROM partsupp ps WHERE ps.partkey IN (SELECT p_partkey FROM part WHERE p_retailprice > 100) ORDER BY random() LIMIT 1)
    WHERE c.level < 5
),
LineItemStats AS (
    SELECT 
        l_orderkey, 
        AVG(l_extendedprice * (1 - l_discount)) AS avg_price,
        SUM(l_quantity) AS total_quantity,
        COUNT(DISTINCT l_partkey) AS unique_parts
    FROM lineitem
    WHERE l_shipdate BETWEEN '1997-01-01' AND '1997-12-31'
    GROUP BY l_orderkey
),
FilteredOrders AS (
    SELECT 
        o.o_orderkey, 
        o.o_custkey, 
        o.o_orderstatus,
        CASE 
            WHEN o.o_orderpriority IN ('HIGH', 'MEDIUM') THEN AVG(ls.avg_price)
            ELSE NULL 
        END AS relevant_avg_price,
        f.unique_parts,
        l.total_quantity
    FROM orders o
    LEFT JOIN LineItemStats l ON o.o_orderkey = l.l_orderkey
    LEFT JOIN (
        SELECT o_custkey, COUNT(*) AS unique_parts 
        FROM orders o
        JOIN lineitem li ON o.o_orderkey = li.l_orderkey
        GROUP BY o_custkey
    ) f ON o.o_custkey = f.o_custkey
    GROUP BY o.o_orderkey, o.o_custkey, o.o_orderstatus, f.unique_parts, l.total_quantity
),
OverallStats AS (
    SELECT 
        SUM(total_quantity) AS grand_total_quantity,
        COUNT(DISTINCT o_orderkey) AS order_count,
        COUNT(DISTINCT o_custkey) AS customer_count
    FROM FilteredOrders
    WHERE relevant_avg_price IS NOT NULL
)
SELECT 
    s.s_name,
    COALESCE(o.grand_total_quantity, 0) AS grand_total_quantity,
    COALESCE(o.order_count, 0) AS order_count,
    COALESCE(o.customer_count, 0) AS customer_count
FROM SupplierCTE s
LEFT JOIN OverallStats o ON s.level <= (SELECT level FROM SupplierCTE ORDER BY level ASC LIMIT 1 OFFSET 0)
WHERE s.s_acctbal IS NOT NULL AND s.s_name NOT LIKE '%supplier%' 
ORDER BY grand_total_quantity DESC, order_count DESC
LIMIT 10;