
WITH RECURSIVE supplier_hierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, 1 AS level
    FROM supplier s
    WHERE s.s_acctbal > 1000
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, sh.level + 1
    FROM supplier s
    JOIN supplier_hierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE sh.level < 5
),
part_supply_stats AS (
    SELECT ps.ps_partkey, SUM(ps.ps_availqty) AS total_available, 
           AVG(ps.ps_supplycost) AS avg_supply_cost
    FROM partsupp ps
    GROUP BY ps.ps_partkey
),
nations_products AS (
    SELECT n.n_name AS nation, COUNT(DISTINCT p.p_partkey) AS total_parts,
           SUM(ps.ps_supplycost * ps.ps_availqty) AS total_cost
    FROM nation n
    LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
    LEFT JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    LEFT JOIN part p ON ps.ps_partkey = p.p_partkey
    GROUP BY n.n_name
)
SELECT r.r_name, np.nation, np.total_parts, 
       np.total_cost, 
       CASE 
           WHEN np.total_cost IS NULL THEN 'No Supplies' 
           ELSE 'Supplies Available' 
       END AS supply_status,
       ROW_NUMBER() OVER (PARTITION BY np.nation ORDER BY np.total_cost DESC) AS rank,
       (SELECT COUNT(*)
        FROM orders o
        WHERE o.o_orderdate >= '1996-01-01' 
        AND o.o_orderdate < '1997-01-01'
        AND EXISTS (SELECT 1 
                    FROM lineitem l 
                    WHERE l.l_orderkey = o.o_orderkey AND l.l_discount > 0.5)) AS high_discount_orders
FROM region r
JOIN nations_products np ON r.r_regionkey = (SELECT n.n_regionkey FROM nation n WHERE n.n_name = np.nation)
LEFT JOIN supplier_hierarchy sh ON sh.s_nationkey = np.nation
WHERE (np.total_parts > 10 OR np.total_cost < 10000)
ORDER BY r.r_name, np.total_cost DESC;
