
WITH SupplierStats AS (
    SELECT
        s.s_suppkey,
        s.s_name,
        SUM(ps.ps_availqty) AS total_avail_qty,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_value
    FROM
        supplier s
    LEFT JOIN
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY
        s.s_suppkey, s.s_name
),
CustomerOrders AS (
    SELECT
        c.c_custkey,
        c.c_name,
        COUNT(o.o_orderkey) AS total_orders,
        SUM(o.o_totalprice) AS total_spent
    FROM
        customer c
    LEFT JOIN
        orders o ON c.c_custkey = o.o_custkey
    WHERE
        o.o_orderdate >= DATEADD(year, -1, '1998-10-01')
    GROUP BY
        c.c_custkey, c.c_name
),
TopRegions AS (
    SELECT
        n.n_regionkey,
        r.r_name,
        COUNT(DISTINCT c.c_custkey) AS customer_count
    FROM
        nation n
    JOIN
        region r ON n.n_regionkey = r.r_regionkey
    JOIN
        customer c ON n.n_nationkey = c.c_nationkey
    GROUP BY
        n.n_regionkey, r.r_name
    HAVING
        COUNT(DISTINCT c.c_custkey) > 5
),
ExtendedLineItems AS (
    SELECT
        l.l_orderkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_line_item_value
    FROM
        lineitem l
    GROUP BY
        l.l_orderkey
)
SELECT
    ss.s_name,
    cs.c_name,
    ts.r_name,
    cs.total_orders,
    cs.total_spent,
    ss.total_avail_qty,
    ss.total_supply_value,
    el.total_line_item_value,
    CASE WHEN cs.total_spent IS NULL THEN 'No Orders' ELSE 'Active Customer' END AS customer_status
FROM
    SupplierStats ss
JOIN
    CustomerOrders cs ON ss.total_supply_value > 1000000
LEFT JOIN
    TopRegions ts ON cs.c_custkey IN (
        SELECT c.c_custkey FROM customer c WHERE c.c_nationkey IN (SELECT n.n_nationkey FROM nation n WHERE n.n_regionkey = ts.n_regionkey)
    )
LEFT JOIN
    ExtendedLineItems el ON el.l_orderkey IN (SELECT o.o_orderkey FROM orders o WHERE o.o_custkey = cs.c_custkey)
WHERE
    cs.total_spent IS NOT NULL
ORDER BY
    ss.total_supply_value DESC, cs.total_orders DESC;
