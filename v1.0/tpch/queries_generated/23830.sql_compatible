
WITH ranked_orders AS (
    SELECT 
        o.o_orderkey,
        o.o_orderdate,
        o.o_totalprice,
        ROW_NUMBER() OVER (PARTITION BY o.o_orderstatus ORDER BY o.o_totalprice DESC) AS order_rank
    FROM 
        orders o
    WHERE 
        o.o_orderdate >= DATEADD(month, -6, CURRENT_TIMESTAMP)
),
supplier_stats AS (
    SELECT 
        s.s_suppkey,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_cost,
        COUNT(DISTINCT ps.ps_partkey) AS part_count
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey
),
high_value_parts AS (
    SELECT 
        p.p_partkey,
        p.p_name,
        p.p_retailprice,
        CASE 
            WHEN p.p_retailprice IS NULL THEN 'UNKNOWN'
            WHEN p.p_retailprice > 1000 THEN 'HIGH'
            ELSE 'LOW'
        END AS price_category
    FROM 
        part p
    WHERE 
        p.p_retailprice > (SELECT AVG(p2.p_retailprice) FROM part p2)
)
SELECT 
    n.n_name,
    SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
    COUNT(DISTINCT c.c_custkey) AS customer_count,
    MAX(rp.order_rank) AS max_order_rank
FROM 
    lineitem l
JOIN 
    orders o ON l.l_orderkey = o.o_orderkey
JOIN 
    customer c ON o.o_custkey = c.c_custkey
JOIN 
    supplier s ON l.l_suppkey = s.s_suppkey
JOIN 
    nation n ON s.s_nationkey = n.n_nationkey
LEFT JOIN 
    ranked_orders rp ON o.o_orderkey = rp.o_orderkey OR rp.o_orderkey IS NULL
WHERE 
    l.l_shipdate BETWEEN '1996-01-01' AND '1997-01-01'
    AND (n.n_name LIKE '%land' OR n.n_name IS NULL)
    AND EXISTS (
        SELECT 1
        FROM high_value_parts hvp
        WHERE hvp.p_partkey = l.l_partkey AND hvp.price_category = 'HIGH'
    )
GROUP BY 
    n.n_name
HAVING 
    SUM(l.l_extendedprice * (1 - l.l_discount)) > (SELECT AVG(l2.l_extendedprice) FROM lineitem l2)
    AND COUNT(DISTINCT c.c_custkey) < 50
ORDER BY 
    total_revenue DESC
OFFSET 10 ROWS FETCH NEXT 5 ROWS ONLY;
