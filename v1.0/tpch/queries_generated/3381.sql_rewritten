WITH OrderAggregates AS (
    SELECT 
        o.o_orderkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
        COUNT(DISTINCT l.l_suppkey) AS distinct_suppliers
    FROM 
        orders o
    JOIN 
        lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE 
        o.o_orderdate >= DATE '1995-01-01' AND o.o_orderdate < DATE '1996-01-01'
    GROUP BY 
        o.o_orderkey
),
TopOrders AS (
    SELECT 
        oa.o_orderkey,
        oa.total_revenue,
        RANK() OVER (ORDER BY oa.total_revenue DESC) AS revenue_rank
    FROM 
        OrderAggregates oa
)
SELECT 
    o.o_orderkey,
    o.o_totalprice,
    COALESCE(t.total_revenue, 0) AS total_revenue,
    COALESCE(t.distinct_suppliers, 0) AS distinct_suppliers,
    CASE 
        WHEN t.revenue_rank <= 10 THEN 'Top 10'
        ELSE 'Other'
    END AS order_category,
    p.p_name,
    s.s_name,
    r.r_name
FROM 
    orders o
LEFT JOIN 
    TopOrders t ON o.o_orderkey = t.o_orderkey
LEFT JOIN 
    lineitem l ON o.o_orderkey = l.l_orderkey
LEFT JOIN 
    partsupp ps ON l.l_partkey = ps.ps_partkey
LEFT JOIN 
    part p ON ps.ps_partkey = p.p_partkey
LEFT JOIN 
    supplier s ON ps.ps_suppkey = s.s_suppkey
LEFT JOIN 
    nation n ON s.s_nationkey = n.n_nationkey
LEFT JOIN 
    region r ON n.n_regionkey = r.r_regionkey
WHERE 
    (s.s_acctbal IS NULL OR s.s_acctbal > 1000)
    AND (o.o_orderstatus = 'O' OR o.o_orderstatus IS NULL)
ORDER BY 
    total_revenue DESC, 
    o.o_orderkey ASC
LIMIT 50;