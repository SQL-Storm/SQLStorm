WITH RECURSIVE OrderHierarchy AS (
    SELECT o_orderkey, o_custkey, o_orderdate, o_totalprice, o_orderstatus, 1 AS level
    FROM orders
    WHERE o_orderdate >= DATE '1997-01-01'
    
    UNION ALL
    
    SELECT o.o_orderkey, o.o_custkey, o.o_orderdate, o.o_totalprice, o.o_orderstatus, oh.level + 1
    FROM orders o
    JOIN OrderHierarchy oh ON o.o_custkey = oh.o_custkey AND o.o_orderkey > oh.o_orderkey
),
SupplierStats AS (
    SELECT ps.ps_partkey, SUM(ps.ps_availqty) AS total_avail_qty, AVG(ps.ps_supplycost) AS avg_supply_cost
    FROM partsupp ps
    GROUP BY ps.ps_partkey
),
CustomerOrderSummary AS (
    SELECT c.c_custkey, C.c_name, COUNT(o.o_orderkey) AS order_count,
           SUM(o.o_totalprice) AS total_spent, MAX(o.o_orderdate) AS last_order_date
    FROM customer c
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    GROUP BY c.c_custkey, c.c_name
    HAVING SUM(o.o_totalprice) > 1000
),
LineItemAggregates AS (
    SELECT l.l_orderkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS revenue,
           COUNT(DISTINCT l.l_partkey) AS distinct_parts
    FROM lineitem l
    WHERE l.l_shipdate >= DATE '1997-01-01'
    GROUP BY l.l_orderkey
),
RegionalSupplierCount AS (
    SELECT n.n_regionkey, COUNT(DISTINCT s.s_suppkey) AS regional_supply_count
    FROM supplier s
    JOIN nation n ON s.s_nationkey = n.n_nationkey
    GROUP BY n.n_regionkey
)

SELECT r.r_name, 
       COALESCE(cs.order_count, 0) AS customer_order_count, 
       COALESCE(cs.total_spent, 0) AS total_spent, 
       AVG(ss.total_avail_qty) AS avg_avail_qty, 
       COUNT(DISTINCT ss.ps_partkey) AS total_parts_supplied,
       MAX(lia.revenue) AS max_revenue_per_order
FROM region r
LEFT JOIN CustomerOrderSummary cs ON r.r_regionkey = (SELECT n.n_regionkey FROM nation n WHERE n.n_nationkey = cs.c_custkey)
LEFT JOIN SupplierStats ss ON ss.ps_partkey IN (SELECT DISTINCT l.l_partkey FROM lineitem l)
LEFT JOIN LineItemAggregates lia ON lia.l_orderkey IN (SELECT o.o_orderkey FROM orders o WHERE o.o_orderstatus = 'O')
GROUP BY r.r_name
ORDER BY total_spent DESC, customer_order_count DESC, avg_avail_qty DESC
LIMIT 10;