WITH RECURSIVE SupplierHierarchy AS (
    SELECT s_suppkey, s_name, s_nationkey, s_acctbal, 1 AS level
    FROM supplier
    WHERE s_acctbal > 1000

    UNION ALL

    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal, sh.level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE s.s_acctbal > 1000 AND sh.level < 5
), HighValueOrders AS (
    SELECT o.o_orderkey, o.o_totalprice, o.o_orderdate, 
           ROW_NUMBER() OVER (PARTITION BY o.o_orderstatus ORDER BY o.o_totalprice DESC) AS rank
    FROM orders o
    WHERE o.o_totalprice > (
        SELECT AVG(o2.o_totalprice) 
        FROM orders o2
    )
), OrderDetails AS (
    SELECT lo.l_orderkey, lo.l_partkey, lo.l_quantity, 
           lo.l_extendedprice * (1 - lo.l_discount) AS net_price,
           COALESCE(s.s_name, 'Unknown Supplier') AS supplier_name,
           c.c_name AS customer_name,
           RANK() OVER (PARTITION BY lo.l_orderkey ORDER BY lo.l_linenumber ASC) AS item_rank
    FROM lineitem lo
    LEFT JOIN partsupp ps ON lo.l_partkey = ps.ps_partkey
    LEFT JOIN supplier s ON ps.ps_suppkey = s.s_suppkey
    JOIN customer c ON o.o_custkey = c.c_custkey
    JOIN orders o ON lo.l_orderkey = o.o_orderkey
    WHERE lo.l_shipdate BETWEEN '1997-01-01' AND '1997-12-31'
), SignificantOrders AS (
    SELECT od.l_orderkey, SUM(od.net_price) AS total_price, COUNT(od.l_partkey) AS item_count
    FROM OrderDetails od
    WHERE od.item_rank = 1
    GROUP BY od.l_orderkey
), FinalSummary AS (
    SELECT so.l_orderkey, so.total_price, so.item_count, 
           sh.s_name AS supplier_name,
           r.r_name as region_name
    FROM SignificantOrders so
    LEFT JOIN SupplierHierarchy sh ON so.l_orderkey = sh.s_suppkey
    JOIN nation n ON sh.s_nationkey = n.n_nationkey
    JOIN region r ON n.n_regionkey = r.r_regionkey
)

SELECT fs.l_orderkey, fs.total_price, fs.item_count, 
       COALESCE(fs.supplier_name, 'No Supplier') AS supplier_name,
       COALESCE(fs.region_name, 'Unknown Region') AS region_name
FROM FinalSummary fs
WHERE fs.total_price > 5000
ORDER BY fs.total_price DESC;