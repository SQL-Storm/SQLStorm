WITH RECURSIVE RegionStats AS (
    SELECT 
        r.r_regionkey,
        r.r_name,
        SUM(s.s_acctbal) AS total_acct_balance,
        COUNT(DISTINCT s.s_suppkey) AS supplier_count
    FROM 
        region r
    LEFT JOIN 
        nation n ON r.r_regionkey = n.n_regionkey
    LEFT JOIN 
        supplier s ON n.n_nationkey = s.s_nationkey
    GROUP BY 
        r.r_regionkey, r.r_name
    UNION ALL
    SELECT 
        r.r_regionkey,
        r.r_name,
        SUM(s.s_acctbal) + 100 AS total_acct_balance,
        COUNT(DISTINCT s.s_suppkey) 
    FROM 
        region r
    JOIN 
        nation n ON r.r_regionkey = n.n_regionkey
    JOIN 
        supplier s ON n.n_nationkey = s.s_nationkey
    WHERE 
        s.s_acctbal IS NOT NULL
        AND r.r_name LIKE 'A%'
    GROUP BY 
        r.r_regionkey, r.r_name
),
AggregateLineItems AS (
    SELECT 
        l.l_orderkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS net_revenue,
        COUNT(l.l_linenumber) FILTER (WHERE l.l_returnflag = 'R') AS return_count,
        ROW_NUMBER() OVER (PARTITION BY l.l_orderkey ORDER BY l.l_extendedprice DESC) AS item_rank
    FROM 
        lineitem l
    GROUP BY 
        l.l_orderkey
),
FilteredOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_totalprice,
        o.o_orderdate,
        r.total_acct_balance,
        COALESCE(al.net_revenue, 0) AS order_revenue
    FROM 
        orders o
    LEFT JOIN 
        RegionStats r ON r.r_regionkey = (SELECT n.n_regionkey FROM nation n JOIN customer c ON n.n_nationkey = c.c_nationkey WHERE c.c_custkey = o.o_custkey)
    LEFT JOIN 
        AggregateLineItems al ON al.l_orderkey = o.o_orderkey
    WHERE 
        o.o_orderstatus = 'F' 
        AND o.o_totalprice > (
            SELECT AVG(o1.o_totalprice) FROM orders o1 WHERE o1.o_orderdate < cast('1998-10-01' as date)
        )
)
SELECT 
    f.o_orderkey,
    f.o_totalprice,
    f.o_orderdate,
    f.total_acct_balance,
    f.order_revenue,
    CASE 
        WHEN f.order_revenue > f.total_acct_balance THEN 'Above Balance'
        WHEN f.order_revenue < f.total_acct_balance THEN 'Below Balance'
        ELSE 'Equal Balance'
    END AS revenue_balance_status
FROM 
    FilteredOrders f
WHERE 
    f.total_acct_balance IS NOT NULL
ORDER BY 
    f.o_orderdate DESC, f.o_totalprice ASC
LIMIT 100;