
WITH SupplierCost AS (
    SELECT s.s_suppkey, s.s_name, SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_cost
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY s.s_suppkey, s.s_name
),
CustomerOrderSummary AS (
    SELECT c.c_custkey, c.c_name, COUNT(o.o_orderkey) AS total_orders, 
           SUM(o.o_totalprice) AS total_spent,
           DENSE_RANK() OVER (PARTITION BY c.c_nationkey ORDER BY SUM(o.o_totalprice) DESC) AS rank
    FROM customer c
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    GROUP BY c.c_custkey, c.c_name, c.c_nationkey
),
PartSupplier AS (
    SELECT p.p_partkey, p.p_name, p.p_retailprice, ps.ps_availqty, 
           COALESCE(SUM(ps.ps_supplycost), 0) AS total_cost
    FROM part p
    LEFT JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
    GROUP BY p.p_partkey, p.p_name, p.p_retailprice, ps.ps_availqty
),
LineitemDetails AS (
    SELECT l.l_orderkey, l.l_partkey, l.l_quantity, l.l_extendedprice,
           ROW_NUMBER() OVER (PARTITION BY l.l_orderkey ORDER BY l.l_linenumber) AS line_num,
           CASE WHEN l.l_discount > 0 THEN 'Discounted' ELSE 'Full Price' END AS price_status
    FROM lineitem l
)
SELECT r.r_name, COALESCE(SUM(so.total_supply_cost), 0) AS region_total_supply_cost,
       COALESCE(COUNT(DISTINCT co.c_custkey), 0) AS unique_customer_count,
       COUNT(DISTINCT ps.p_partkey) AS total_parts_supplied,
       AVG(ps.p_retailprice * COALESCE(ps.ps_availqty, 0)) AS avg_retail_value,
       AVG(ld.l_extendedprice) AS avg_lineitem_price,
       MAX(co.total_spent) AS highest_spent_customer
FROM region r
LEFT JOIN nation n ON r.r_regionkey = n.n_regionkey
LEFT JOIN SupplierCost so ON n.n_nationkey = so.s_suppkey
LEFT JOIN CustomerOrderSummary co ON n.n_nationkey = co.c_nationkey
LEFT JOIN PartSupplier ps ON so.s_suppkey = ps.p_partkey
LEFT JOIN LineitemDetails ld ON ld.l_orderkey IN (SELECT o.o_orderkey FROM orders o WHERE o.o_custkey = co.c_custkey)
GROUP BY r.r_name
ORDER BY r.r_name;
