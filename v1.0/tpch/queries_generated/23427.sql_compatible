
WITH RECURSIVE order_summary AS (
    SELECT 
        o.o_orderkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
        COUNT(DISTINCT l.l_orderkey) AS total_orders,
        ROW_NUMBER() OVER (PARTITION BY o.o_orderkey ORDER BY SUM(l.l_extendedprice * (1 - l.l_discount)) DESC) AS rn
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE l.l_returnflag = 'N'
    GROUP BY o.o_orderkey
),
supplier_part_info AS (
    SELECT 
        s.s_suppkey,
        COUNT(ps.ps_partkey) AS part_count,
        MAX(p.p_retailprice) AS max_price
    FROM supplier s
    LEFT JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    LEFT JOIN part p ON ps.ps_partkey = p.p_partkey
    GROUP BY s.s_suppkey
),
filtered_nations AS (
    SELECT 
        n.n_nationkey,
        n.n_name,
        r.r_name,
        COUNT(DISTINCT s.s_suppkey) AS supplier_count
    FROM nation n
    JOIN region r ON n.n_regionkey = r.r_regionkey
    JOIN supplier s ON n.n_nationkey = s.s_nationkey
    WHERE LENGTH(n.n_name) > 5
    GROUP BY n.n_nationkey, n.n_name, r.r_name
),
max_revenue_per_order AS (
    SELECT 
        os.o_orderkey,
        ROW_NUMBER() OVER (ORDER BY os.total_revenue DESC) AS rn,
        LEAD(os.total_revenue) OVER (ORDER BY os.total_revenue DESC) AS next_highest_revenue
    FROM order_summary os
)
SELECT 
    fn.n_name,
    GREATEST(sp.max_price, COALESCE(MIN(sp.part_count), 0)) AS max_part_price_or_count,
    MAX(os.total_revenue) AS highest_revenue,
    COUNT(fp.o_orderkey) AS orders_count,
    STRING_AGG(DISTINCT fn.r_name || ': ' || CAST(fn.supplier_count AS TEXT), '; ') AS region_supplier_info
FROM filtered_nations fn
LEFT JOIN supplier_part_info sp ON fn.supplier_count > sp.part_count
LEFT JOIN max_revenue_per_order os ON os.rn = 1 OR os.next_highest_revenue IS NULL
LEFT JOIN order_summary fp ON fn.n_nationkey = fp.o_orderkey
WHERE sp.max_price IS NOT NULL OR fn.supplier_count > 0
GROUP BY fn.n_name
HAVING SUM(CASE WHEN os.highest_revenue IS NULL THEN 1 ELSE 0 END) = 0
ORDER BY highest_revenue DESC NULLS LAST;
