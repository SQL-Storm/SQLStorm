WITH RECURSIVE order_hierarchy AS (
    SELECT o.o_orderkey, o.o_orderdate, o.o_totalprice,
           ROW_NUMBER() OVER (PARTITION BY o.o_orderkey ORDER BY o.o_orderdate) AS order_rank
    FROM orders o
    WHERE o.o_orderdate >= DATE '1997-01-01' 
), part_supplier AS (
    SELECT ps.ps_partkey, ps.ps_suppkey, 
           SUM(ps.ps_availqty) AS total_avail_qty,
           AVG(ps.ps_supplycost) AS avg_supply_cost
    FROM partsupp ps
    GROUP BY ps.ps_partkey, ps.ps_suppkey
), nation_supplier AS (
    SELECT n.n_nationkey, n.n_name, s.s_suppkey, s.s_name, s.s_acctbal
    FROM nation n
    JOIN supplier s ON n.n_nationkey = s.s_nationkey
), ranked_lineitems AS (
    SELECT l.l_orderkey, l.l_partkey, l.l_quantity, l.l_discount, 
           ROW_NUMBER() OVER (PARTITION BY l.l_orderkey ORDER BY l.l_linenumber) AS line_rank,
           CASE WHEN l.l_returnflag = 'R' THEN 'Returned' ELSE 'Not Returned' END AS return_status
    FROM lineitem l
), order_summary AS (
    SELECT oh.o_orderkey, oh.o_orderdate, oh.o_totalprice,
           COALESCE(SUM(rl.l_quantity * (1 - rl.l_discount)), 0) AS total_revenue
    FROM order_hierarchy oh
    LEFT JOIN ranked_lineitems rl ON oh.o_orderkey = rl.l_orderkey
    GROUP BY oh.o_orderkey, oh.o_orderdate, oh.o_totalprice
), supplier_summary AS (
    SELECT ps.ps_partkey, ps.ps_suppkey, ps.total_avail_qty,
           ps.avg_supply_cost, ns.n_name
    FROM part_supplier ps
    JOIN nation_supplier ns ON ps.ps_suppkey = ns.s_suppkey
)
SELECT 
    os.o_orderkey, os.o_orderdate, os.total_revenue, 
    COALESCE(ss.total_avail_qty, 0) AS available_quantity, 
    ss.n_name AS supplier_nation, 
    os.total_revenue - (ss.avg_supply_cost * COALESCE(ss.total_avail_qty, 0)) AS profit_margin
FROM order_summary os
LEFT JOIN supplier_summary ss ON os.o_orderkey IN (
    SELECT l.l_orderkey FROM lineitem l WHERE l.l_partkey IN (
        SELECT p.p_partkey FROM part p WHERE p.p_retailprice > 50.00
    )
)
WHERE os.total_revenue > 0
ORDER BY profit_margin DESC, os.o_orderdate DESC;