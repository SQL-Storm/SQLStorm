
WITH RankedSuppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        s.s_acctbal,
        RANK() OVER (PARTITION BY ps.ps_partkey ORDER BY s.s_acctbal DESC) AS rank
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    WHERE 
        s.s_acctbal IS NOT NULL
),
CustomerOrders AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        o.o_orderkey,
        o.o_totalprice,
        o.o_orderdate,
        ROW_NUMBER() OVER (PARTITION BY c.c_custkey ORDER BY o.o_orderdate DESC) AS order_rank
    FROM 
        customer c
    JOIN 
        orders o ON c.c_custkey = o.o_custkey
    WHERE 
        o.o_orderstatus = 'O'
),
TotalSales AS (
    SELECT 
        l.l_orderkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_price
    FROM 
        lineitem l
    WHERE 
        l.l_shipdate >= DATE '1997-01-01'
    GROUP BY 
        l.l_orderkey
)
SELECT 
    p.p_partkey,
    p.p_name,
    COUNT(DISTINCT cs.c_custkey) AS customer_count,
    COALESCE(SUM(ts.total_price), 0) AS total_sales,
    STRING_AGG(DISTINCT s.s_name || ' (Rank: ' || rs.rank || ')', ', ') AS suppliers
FROM 
    part p
LEFT JOIN 
    partsupp ps ON p.p_partkey = ps.ps_partkey
LEFT JOIN 
    RankedSuppliers rs ON ps.ps_suppkey = rs.s_suppkey
LEFT JOIN 
    CustomerOrders cs ON cs.o_orderkey = ps.ps_partkey
LEFT JOIN 
    TotalSales ts ON ts.l_orderkey = ps.ps_partkey
WHERE 
    p.p_retailprice > 100.00
    AND (p.p_size IS NULL OR p.p_size < 20)
GROUP BY 
    p.p_partkey, p.p_name
ORDER BY 
    total_sales DESC
LIMIT 10;
