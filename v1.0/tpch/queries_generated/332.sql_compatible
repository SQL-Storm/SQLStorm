
WITH RankedSuppliers AS (
    SELECT s.s_suppkey, 
           s.s_name, 
           SUM(ps.ps_supplycost * ps.ps_availqty) AS TotalSupplyCost,
           ROW_NUMBER() OVER (PARTITION BY n.n_name ORDER BY SUM(ps.ps_supplycost * ps.ps_availqty) DESC) AS Rank
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    JOIN nation n ON s.s_nationkey = n.n_nationkey
    GROUP BY s.s_suppkey, s.s_name, n.n_name
),
TopSuppliers AS (
    SELECT * 
    FROM RankedSuppliers 
    WHERE Rank <= 3
),
OrderDetails AS (
    SELECT o.o_orderkey, 
           o.o_orderdate, 
           o.o_totalprice,
           l.l_partkey,
           l.l_quantity,
           l.l_extendedprice
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE o.o_orderstatus = 'F' AND 
          l.l_shipdate >= DATE '1997-01-01'
),
SupplierOrderSummary AS (
    SELECT ts.s_suppkey,
           ts.s_name,
           SUM(od.l_extendedprice) AS TotalOrderValue,
           COUNT(DISTINCT od.o_orderkey) AS OrderCount
    FROM TopSuppliers ts
    LEFT JOIN partsupp ps ON ts.s_suppkey = ps.ps_suppkey
    LEFT JOIN OrderDetails od ON ps.ps_partkey = od.l_partkey
    GROUP BY ts.s_suppkey, ts.s_name
)
SELECT sos.s_suppkey, 
       sos.s_name, 
       sos.TotalOrderValue, 
       sos.OrderCount, 
       COALESCE(NULLIF(sos.TotalOrderValue - 1000, 0), sos.TotalOrderValue) AS AdjustedValue
FROM SupplierOrderSummary sos
WHERE sos.TotalOrderValue > 5000
UNION
SELECT NULL AS s_suppkey, 
       'Total' AS s_name, 
       SUM(COALESCE(TotalOrderValue, 0)) AS TotalOrderValue, 
       SUM(OrderCount) AS TotalOrders
FROM SupplierOrderSummary;
