
WITH RankedSuppliers AS (
    SELECT 
        s.s_suppkey, 
        s.s_name, 
        s.s_acctbal, 
        ROW_NUMBER() OVER (PARTITION BY p.p_partkey ORDER BY s.s_acctbal DESC) AS SupplierRank
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    JOIN 
        part p ON ps.ps_partkey = p.p_partkey
),
OrdersSummary AS (
    SELECT 
        o.o_orderkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS TotalRevenue,
        COUNT(DISTINCT l.l_linenumber) AS TotalLineItems,
        o.o_orderdate,
        o.o_orderstatus
    FROM 
        orders o
    JOIN 
        lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE 
        o.o_orderstatus = 'O'
    GROUP BY 
        o.o_orderkey, o.o_orderdate, o.o_orderstatus
),
SuppliersWithPart AS (
    SELECT 
        s.s_suppkey,
        p.p_partkey,
        ps.ps_availqty,
        ps.ps_supplycost
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    JOIN 
        part p ON ps.ps_partkey = p.p_partkey
)
SELECT 
    n.n_name AS NationName,
    SUM(OS.TotalRevenue) AS TotalOrderRevenue,
    COUNT(DISTINCT OS.o_orderkey) AS TotalOrders,
    COALESCE(AVG(RS.s_acctbal), 0) AS AvgSupplierBalance,
    SUM(CASE WHEN S.ps_availqty < 10 THEN 1 ELSE 0 END) AS LowStockCount
FROM 
    nation n
LEFT JOIN 
    customer c ON n.n_nationkey = c.c_nationkey
LEFT JOIN 
    orders o ON c.c_custkey = o.o_custkey
LEFT JOIN 
    OrdersSummary OS ON o.o_orderkey = OS.o_orderkey
LEFT JOIN 
    SuppliersWithPart S ON S.ps_partkey IN (SELECT p.p_partkey FROM part p WHERE S.ps_supplycost > 100)
LEFT JOIN 
    RankedSuppliers RS ON RS.s_suppkey = S.s_suppkey
WHERE 
    OS.o_orderdate > (DATE '1998-10-01' - INTERVAL '1 year')
GROUP BY 
    n.n_name
ORDER BY 
    TotalOrderRevenue DESC
LIMIT 10;
