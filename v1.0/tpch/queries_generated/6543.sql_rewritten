WITH RankedOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_orderdate,
        o.o_totalprice,
        o.o_orderstatus,
        c.c_name,
        ROW_NUMBER() OVER (PARTITION BY o.o_orderstatus ORDER BY o.o_totalprice DESC) AS rn
    FROM 
        orders o
    JOIN 
        customer c ON o.o_custkey = c.c_custkey
    WHERE 
        o.o_orderdate >= DATE '1997-01-01' AND o.o_orderdate < DATE '1997-12-31'
),
TopOrders AS (
    SELECT 
        ro.o_orderkey,
        ro.o_orderdate,
        ro.o_totalprice,
        ro.o_orderstatus,
        ro.c_name
    FROM 
        RankedOrders ro
    WHERE 
        ro.rn <= 10
),
PartSupplier AS (
    SELECT 
        ps.ps_partkey,
        ps.ps_suppkey,
        SUM(ps.ps_availqty * ps.ps_supplycost) AS total_supply_value
    FROM 
        partsupp ps
    GROUP BY 
        ps.ps_partkey, ps.ps_suppkey
),
LineItemDetails AS (
    SELECT 
        l.l_orderkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_lineitem_value,
        SUM(l.l_tax) AS total_tax
    FROM 
        lineitem l
    GROUP BY 
        l.l_orderkey
)
SELECT 
    to.o_orderkey,
    to.o_orderdate,
    to.o_totalprice,
    to.o_orderstatus,
    to.c_name,
    COALESCE(l.value, 0) AS total_lineitem_value,
    COALESCE(l.total_tax, 0) AS total_tax,
    COALESCE(ps.total_supply_value, 0) AS total_supply_value
FROM 
    TopOrders to
LEFT JOIN 
    LineItemDetails l ON to.o_orderkey = l.l_orderkey
LEFT JOIN 
    PartSupplier ps ON ps.ps_partkey IN (SELECT l_partkey FROM lineitem WHERE l_orderkey = to.o_orderkey)
ORDER BY 
    to.o_totalprice DESC;