
WITH RECURSIVE CustomerHierarchy AS (
    SELECT c.c_custkey, c.c_name, c.c_acctbal, 0 AS depth
    FROM customer c
    WHERE c.c_acctbal IS NOT NULL
    UNION ALL
    SELECT c.c_custkey, c.c_name, c.c_acctbal, ch.depth + 1
    FROM customer c
    JOIN CustomerHierarchy ch ON c.c_custkey = ch.c_custkey
    WHERE ch.depth < 5
),
RankedOrders AS (
    SELECT o.o_orderkey, o.o_custkey, o.o_totalprice,
           RANK() OVER (PARTITION BY o.o_orderstatus ORDER BY o.o_totalprice DESC) AS order_rank
    FROM orders o
    WHERE o.o_orderdate >= '1997-01-01'
),
SupplierDetails AS (
    SELECT s.s_suppkey, s.s_name, s.s_acctbal,
           SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supplycost
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    WHERE s.s_acctbal > 1000
    GROUP BY s.s_suppkey, s.s_name, s.s_acctbal
),
OrderSummary AS (
    SELECT o.o_orderkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
           COUNT(DISTINCT l.l_partkey) AS distinct_parts
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    GROUP BY o.o_orderkey
)

SELECT r.r_name, 
       COUNT(DISTINCT c.c_custkey) AS customer_count, 
       COALESCE(SUM(s.total_supplycost), 0) AS total_supplier_cost,
       SUM(os.total_revenue) AS total_order_revenue,
       AVG(ch.depth) AS avg_hierarchy_depth
FROM region r
LEFT JOIN nation n ON n.n_regionkey = r.r_regionkey
LEFT JOIN supplier s ON s.s_nationkey = n.n_nationkey
LEFT JOIN CustomerHierarchy ch ON ch.c_custkey = s.s_suppkey
LEFT JOIN RankedOrders ro ON ro.o_custkey = ch.c_custkey AND ro.order_rank <= 10
LEFT JOIN OrderSummary os ON os.o_orderkey = ro.o_orderkey
WHERE r.r_comment IS NOT NULL
GROUP BY r.r_name
HAVING SUM(os.total_revenue) > 1000000
ORDER BY customer_count DESC, total_supplier_cost DESC;
