
WITH RankedLineItems AS (
    SELECT 
        l.l_orderkey,
        l.l_partkey,
        l.l_suppkey,
        l.l_quantity,
        l.l_extendedprice,
        l.l_discount,
        ROW_NUMBER() OVER (PARTITION BY l.l_orderkey ORDER BY l.l_extendedprice DESC) AS rn
    FROM 
        lineitem l
), SupplierInfo AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_cost
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey, s.s_name
), CustomerOrderSummary AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        COUNT(o.o_orderkey) AS order_count,
        SUM(o.o_totalprice) AS total_spent
    FROM 
        customer c
    LEFT JOIN 
        orders o ON c.c_custkey = o.o_custkey
    GROUP BY 
        c.c_custkey, c.c_name
)

SELECT 
    co.c_name,
    co.order_count,
    co.total_spent,
    sli.l_partkey,
    sli.l_quantity,
    sli.l_extendedprice,
    si.s_name AS supplier_name,
    si.total_supply_cost
FROM 
    CustomerOrderSummary co
LEFT JOIN 
    RankedLineItems sli ON sli.l_orderkey IN (SELECT o.o_orderkey FROM orders o WHERE o.o_custkey = co.c_custkey)
LEFT JOIN 
    SupplierInfo si ON si.s_suppkey = sli.l_suppkey
WHERE 
    co.total_spent > 1000 AND 
    (SELECT AVG(total_spent) FROM CustomerOrderSummary) < co.total_spent
ORDER BY 
    co.total_spent DESC, 
    sli.l_extendedprice DESC
LIMIT 10;
