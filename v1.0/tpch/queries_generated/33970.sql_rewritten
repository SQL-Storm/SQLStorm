WITH RECURSIVE SupplierHierarchy AS (
    SELECT s_suppkey, s_name, s_nationkey, s_acctbal, 1 AS level
    FROM supplier
    WHERE s_acctbal > (SELECT AVG(s_acctbal) FROM supplier) 

    UNION ALL

    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal, sh.level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE sh.level < 3 
),
CustomerOrders AS (
    SELECT c.c_custkey, c.c_name, COUNT(o.o_orderkey) AS order_count, SUM(o.o_totalprice) AS total_spent
    FROM customer c
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    WHERE o.o_orderdate >= '1997-01-01'
    GROUP BY c.c_custkey, c.c_name
),
PartSuppliers AS (
    SELECT ps.ps_partkey, SUM(ps.ps_availqty) AS total_availqty, AVG(ps.ps_supplycost) AS avg_supplycost
    FROM partsupp ps
    GROUP BY ps.ps_partkey
),
TargetNations AS (
    SELECT n.n_nationkey, n.n_name
    FROM nation n
    WHERE n.n_regionkey IN (SELECT r.r_regionkey FROM region r WHERE r.r_name LIKE 'Asia%')
)
SELECT 
    p.p_name,
    p.p_retailprice,
    COALESCE(co.order_count, 0) AS customer_order_count,
    COALESCE(co.total_spent, 0) AS customer_total_spent,
    ph.total_availqty,
    ph.avg_supplycost,
    sh.level AS supplier_level
FROM 
    part p
LEFT JOIN PartSuppliers ph ON p.p_partkey = ph.ps_partkey
LEFT JOIN CustomerOrders co ON co.total_spent > 10000 
LEFT JOIN SupplierHierarchy sh ON sh.s_nationkey = ANY (SELECT n.n_nationkey FROM TargetNations n WHERE n.n_nationkey = (SELECT s.s_nationkey FROM supplier s WHERE s.s_suppkey IN (SELECT ps.ps_suppkey FROM partsupp ps WHERE ps.ps_partkey = p.p_partkey)))
WHERE 
    p.p_size IN (SELECT TOP 5 p_size FROM part ORDER BY p_retailprice DESC) 
ORDER BY 
    p.p_retailprice DESC, sh.level ASC;