WITH RankedSuppliers AS (
    SELECT 
        s.s_suppkey, 
        s.s_name, 
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_cost,
        RANK() OVER (PARTITION BY s.s_nationkey ORDER BY SUM(ps.ps_supplycost * ps.ps_availqty) DESC) AS supplier_rank
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey, s.s_name, s.s_nationkey
),
TopSuppliers AS (
    SELECT 
        ts.s_suppkey, 
        ts.s_name 
    FROM 
        RankedSuppliers ts 
    WHERE 
        ts.supplier_rank <= 3
),
CustomerOrderSummary AS (
    SELECT 
        c.c_custkey, 
        c.c_name, 
        SUM(o.o_totalprice) AS total_orders,
        COUNT(o.o_orderkey) AS order_count
    FROM 
        customer c
    LEFT JOIN 
        orders o ON c.c_custkey = o.o_custkey
    WHERE 
        o.o_orderstatus IN ('O', 'P') 
    GROUP BY 
        c.c_custkey, c.c_name
),
LineItemStats AS (
    SELECT 
        l.l_orderkey, 
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS revenue,
        SUM(CASE WHEN l.l_returnflag = 'R' THEN 1 ELSE 0 END) AS returns_count
    FROM 
        lineitem l
    WHERE 
        l.l_shipdate >= '1997-01-01' 
    GROUP BY 
        l.l_orderkey
)
SELECT 
    cs.c_name, 
    cs.total_orders, 
    cs.order_count,
    ts.s_name AS top_supplier,
    lis.revenue,
    lis.returns_count
FROM 
    CustomerOrderSummary cs
LEFT JOIN 
    TopSuppliers ts ON cs.c_custkey = ts.s_suppkey
LEFT JOIN 
    LineItemStats lis ON cs.c_custkey = (SELECT c.c_custkey FROM customer c WHERE c.c_name = 'CustomerName') 
WHERE 
    ls.total_orders > 100.00
ORDER BY 
    cs.total_orders DESC, 
    cs.order_count ASC;