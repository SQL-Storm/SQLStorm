
WITH RankedParts AS (
    SELECT 
        p.p_partkey,
        p.p_name,
        p.p_retailprice,
        ROW_NUMBER() OVER (PARTITION BY p.p_brand ORDER BY p.p_retailprice DESC) AS rn
    FROM 
        part p
    WHERE 
        p.p_retailprice IS NOT NULL
),
TotalSales AS (
    SELECT 
        l.l_partkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue
    FROM 
        lineitem l
    WHERE 
        l.l_shipdate BETWEEN '1996-01-01' AND '1996-12-31'
    GROUP BY 
        l.l_partkey
),
TopSuppliers AS (
    SELECT 
        s.s_suppkey, 
        s.s_name,
        ROW_NUMBER() OVER (ORDER BY SUM(ps.ps_supplycost * ps.ps_availqty) DESC) AS supplier_rank
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey, s.s_name
)
SELECT 
    rp.p_name,
    rp.p_retailprice,
    COALESCE(ts.total_revenue, 0) AS revenue,
    CASE 
        WHEN rp.rn <= 5 THEN 'Top Seller'
        ELSE 'Regular'
    END AS part_category,
    ROUND(AVG(s.s_acctbal), 2) AS avg_supplier_balance,
    (SELECT COUNT(DISTINCT o.o_orderkey) 
     FROM orders o 
     WHERE o.o_orderdate < DATE '1998-10-01') AS total_orders 
FROM 
    RankedParts rp
LEFT JOIN 
    TotalSales ts ON ts.l_partkey = rp.p_partkey
JOIN 
    TopSuppliers s ON s.supplier_rank <= 10
GROUP BY 
    rp.p_name, rp.p_retailprice, rp.rn
HAVING 
    SUM(CASE WHEN s.s_suppkey IS NULL THEN 1 ELSE 0 END) = 0
ORDER BY 
    revenue DESC, rp.p_name ASC;
