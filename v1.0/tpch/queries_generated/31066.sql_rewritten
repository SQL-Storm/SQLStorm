WITH RECURSIVE supplier_hierarchy AS (
    SELECT s.s_suppkey, s.s_name, 1 AS level
    FROM supplier s
    WHERE s.s_acctbal > 50000

    UNION ALL

    SELECT s.s_suppkey, sh.s_name, level + 1
    FROM supplier_hierarchy sh
    JOIN partsupp ps ON ps.ps_suppkey = sh.s_suppkey
    JOIN supplier s ON ps.ps_partkey = s.s_suppkey
    WHERE sh.level < 5
),

order_summary AS (
    SELECT o.o_orderkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_sales
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE o.o_orderdate >= DATE '1997-01-01'
    GROUP BY o.o_orderkey
    HAVING SUM(l.l_extendedprice * (1 - l.l_discount)) > 10000
),

top_customers AS (
    SELECT c.c_custkey, c.c_name, ROW_NUMBER() OVER (ORDER BY SUM(o.o_totalprice) DESC) AS order_rank
    FROM customer c
    JOIN orders o ON c.c_custkey = o.o_custkey
    GROUP BY c.c_custkey, c.c_name
    HAVING COUNT(o.o_orderkey) > 5
)

SELECT 
    p.p_name,
    COUNT(DISTINCT ps.ps_suppkey) AS unique_suppliers,
    MAX(sh.level) AS max_supply_chain_depth,
    SUM(os.total_sales) AS total_order_sales,
    STRING_AGG(DISTINCT c.c_name, ', ') AS top_customers_names
FROM part p
LEFT JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
LEFT JOIN supplier_hierarchy sh ON ps.ps_suppkey = sh.s_suppkey
LEFT JOIN order_summary os ON os.o_orderkey IN (
    SELECT o.o_orderkey
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE l.l_quantity > 10 AND l.l_returnflag = 'N'
)
JOIN top_customers c ON c.c_custkey IN (
    SELECT o.o_custkey
    FROM orders o
    WHERE o.o_orderstatus = 'F'
)
WHERE p.p_retialprice IS NOT NULL AND p.p_size BETWEEN 10 AND 50
GROUP BY p.p_name
HAVING MAX(sh.level) IS NOT NULL
ORDER BY total_order_sales DESC
LIMIT 10;