
WITH RECURSIVE SupplyChain AS (
    SELECT s.s_suppkey, s.s_name, s.s_acctbal, ps.ps_availqty, ps.ps_supplycost, p.p_name
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    JOIN part p ON ps.ps_partkey = p.p_partkey
    WHERE s.s_acctbal > (SELECT AVG(s_acctbal) FROM supplier)
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_acctbal, ps.ps_availqty, ps.ps_supplycost, p.p_name
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    JOIN part p ON ps.ps_partkey = p.p_partkey
    JOIN SupplyChain sc ON s.s_suppkey = sc.s_suppkey
    WHERE ps.ps_availqty < sc.ps_availqty
)
SELECT n.n_name, COUNT(DISTINCT s.s_suppkey) AS total_suppliers, SUM(ps.ps_supplycost * ps.ps_availqty) AS total_cost
FROM nation n
JOIN supplier s ON n.n_nationkey = s.s_nationkey
JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
JOIN SupplyChain sc ON s.s_suppkey = sc.s_suppkey
GROUP BY n.n_name
HAVING SUM(ps.ps_supplycost * ps.ps_availqty) > (SELECT AVG(total_cost) FROM (
    SELECT SUM(ps.ps_supplycost * ps.ps_availqty) AS total_cost
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY s.s_nationkey) AS avg_cost)
ORDER BY total_suppliers DESC
LIMIT 10;
