WITH RecursiveSupplier AS (
    SELECT s_suppkey, s_name, s_nationkey, s_acctbal,
           ROW_NUMBER() OVER (PARTITION BY s_nationkey ORDER BY s_acctbal DESC) AS rank
    FROM supplier
    WHERE s_acctbal IS NOT NULL
),
TopSuppliers AS (
    SELECT s_nationkey, COUNT(*) AS num_suppliers
    FROM RecursiveSupplier
    WHERE rank <= 3
    GROUP BY s_nationkey
)
SELECT
    r.r_name AS region_name,
    n.n_name AS nation_name,
    COALESCE(ts.num_suppliers, 0) AS total_top_suppliers,
    SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
    AVG(NULLIF(l.l_tax, 0)) AS average_tax_rate,
    COUNT(DISTINCT c.c_custkey) AS unique_customers
FROM region r
LEFT JOIN nation n ON r.r_regionkey = n.n_regionkey
LEFT JOIN TopSuppliers ts ON n.n_nationkey = ts.s_nationkey
LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
LEFT JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
LEFT JOIN part p ON ps.ps_partkey = p.p_partkey
LEFT JOIN lineitem l ON l.l_partkey = p.p_partkey
LEFT JOIN orders o ON l.l_orderkey = o.o_orderkey
LEFT JOIN customer c ON o.o_custkey = c.c_custkey
WHERE l.l_shipdate BETWEEN DATEADD(MONTH, -12, cast('1998-10-01' as date)) AND cast('1998-10-01' as date)
  AND (s.s_acctbal IS NULL OR s.s_acctbal > 1000)
  AND p.p_container IN ('SM CASE', 'MED BAG', 'LG CASE')
  AND EXISTS (
      SELECT 1
      FROM lineitem l_sub
      WHERE l_sub.l_orderkey = l.l_orderkey
        AND l_sub.l_discount > 0.1
        AND l_sub.l_returnflag = 'N'
  )
GROUP BY r.r_name, n.n_name, ts.num_suppliers
HAVING COALESCE(ts.num_suppliers, 0) > 0
   AND SUM(l.l_extendedprice * (1 - l.l_discount)) > 10000
ORDER BY total_revenue DESC;