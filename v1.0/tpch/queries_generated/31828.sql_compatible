
WITH RECURSIVE OrderHierarchy AS (
    SELECT o.o_orderkey, o.o_orderdate, o.o_totalprice, o.o_orderstatus,
           ROW_NUMBER() OVER (PARTITION BY o.o_orderstatus ORDER BY o.o_orderdate) AS order_rank
    FROM orders o
    WHERE o.o_orderdate >= DATE '1997-01-01'
),
SupplierStats AS (
    SELECT s.s_suppkey, s.s_name, SUM(ps.ps_availqty) AS total_available_qty,
           AVG(ps.ps_supplycost) AS avg_supply_cost
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY s.s_suppkey, s.s_name
),
SalesAnalysis AS (
    SELECT c.c_custkey, c.c_name, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_sales,
           COUNT(DISTINCT o.o_orderkey) AS orders_count
    FROM customer c
    JOIN orders o ON c.c_custkey = o.o_custkey
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE l.l_shipdate BETWEEN DATE '1997-01-01' AND DATE '1997-12-31'
    GROUP BY c.c_custkey, c.c_name
),
TopSuppliers AS (
    SELECT s.s_suppkey, s.s_name, ss.total_available_qty, ss.avg_supply_cost
    FROM SupplierStats ss
    JOIN nation n ON ss.s_suppkey = n.n_nationkey
    WHERE n.n_regionkey = (SELECT r.r_regionkey FROM region r WHERE r.r_name = 'Europe')
    ORDER BY ss.total_available_qty DESC
    LIMIT 5
)
SELECT oh.o_orderkey, oh.o_orderdate, oh.o_totalprice, oh.o_orderstatus,
       sa.total_sales, sa.orders_count, ts.s_name, ts.total_available_qty
FROM OrderHierarchy oh
LEFT JOIN SalesAnalysis sa ON oh.o_orderkey = sa.orders_count
LEFT JOIN TopSuppliers ts ON sa.orders_count BETWEEN 1 AND 10
WHERE oh.order_rank < 10
GROUP BY oh.o_orderkey, oh.o_orderdate, oh.o_totalprice, oh.o_orderstatus,
         sa.total_sales, sa.orders_count, ts.s_name, ts.total_available_qty
ORDER BY oh.o_orderdate DESC, ts.total_available_qty ASC;
