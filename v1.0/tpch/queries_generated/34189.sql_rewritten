WITH RECURSIVE OrderHierarchy AS (
    SELECT o.o_orderkey, o.o_custkey, o.o_orderdate, 
           CAST(o.o_orderkey AS VARCHAR) AS order_path
    FROM orders o
    WHERE o.o_orderstatus = 'O'
    
    UNION ALL

    SELECT o.o_orderkey, o.o_custkey, o.o_orderdate, 
           CAST(oh.order_path || '->' || o.o_orderkey AS VARCHAR)
    FROM orders o
    JOIN OrderHierarchy oh ON o.o_custkey = oh.o_custkey
    WHERE o.o_orderdate > oh.o_orderdate
)
SELECT 
    n.n_name, 
    COUNT(DISTINCT c.c_custkey) AS customer_count,
    SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
    AVG(s.s_acctbal) AS avg_supplier_balance,
    COUNT(DISTINCT oh.o_orderkey) AS total_orders,
    ARRAY_AGG(DISTINCT p.p_name) AS part_names,
    COUNT(CASE WHEN l.l_returnflag = 'R' THEN 1 END) AS returned_items_count
FROM part p
JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
JOIN supplier s ON ps.ps_suppkey = s.s_suppkey
JOIN nation n ON s.s_nationkey = n.n_nationkey
JOIN lineitem l ON p.p_partkey = l.l_partkey
LEFT JOIN customer c ON c.c_custkey = (
    SELECT o.o_custkey
    FROM orders o
    JOIN OrderHierarchy oh ON o.o_orderkey = oh.o_orderkey
    WHERE l.l_orderkey = o.o_orderkey
    LIMIT 1
)
LEFT JOIN OrderHierarchy oh ON l.l_orderkey = oh.o_orderkey
WHERE p.p_size > 20 
  AND (s.s_acctbal IS NULL OR s.s_acctbal < 500.00)
  AND l.l_shipdate BETWEEN DATE '1997-01-01' AND DATE '1997-12-31'
GROUP BY n.n_name
ORDER BY total_revenue DESC;