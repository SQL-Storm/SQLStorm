WITH RECURSIVE ranked_orders AS (
    SELECT 
        o.o_orderkey,
        o.o_orderdate,
        o.o_totalprice,
        ROW_NUMBER() OVER (PARTITION BY o.o_orderdate ORDER BY o.o_totalprice DESC) as rank
    FROM 
        orders o
    WHERE 
        o.o_orderstatus = 'O'
),
supplier_part_info AS (
    SELECT 
        ps.ps_partkey,
        s.s_name,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_cost
    FROM 
        partsupp ps
    JOIN 
        supplier s ON ps.ps_suppkey = s.s_suppkey
    GROUP BY 
        ps.ps_partkey, s.s_name
),
lineitem_summary AS (
    SELECT 
        l.l_orderkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_value,
        COUNT(*) AS total_lines,
        MAX(l.l_shipdate) AS latest_ship_date
    FROM 
        lineitem l
    GROUP BY 
        l.l_orderkey
)
SELECT 
    r.o_orderkey,
    r.o_orderdate,
    r.o_totalprice,
    COALESCE(spi.total_supply_cost, 0) AS total_supplier_cost,
    ls.total_value AS order_total_value,
    ls.total_lines AS order_line_count,
    CASE 
        WHEN ls.latest_ship_date < cast('1998-10-01' as date) THEN 'Delayed' 
        ELSE 'On Time' 
    END AS shipping_status
FROM 
    ranked_orders r
LEFT JOIN 
    supplier_part_info spi ON spi.ps_partkey = (
        SELECT ps.ps_partkey 
        FROM partsupp ps 
        WHERE ps.ps_supplycost = (
            SELECT MIN(ps2.ps_supplycost) 
            FROM partsupp ps2 
            WHERE ps2.ps_partkey = spi.ps_partkey
        ) LIMIT 1
    )
LEFT JOIN 
    lineitem_summary ls ON ls.l_orderkey = r.o_orderkey
WHERE 
    r.rank <= 5
ORDER BY 
    r.o_orderdate DESC, r.o_totalprice DESC;