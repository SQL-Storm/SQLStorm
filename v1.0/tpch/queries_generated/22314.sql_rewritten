WITH RECURSIVE OrderCTE AS (
    SELECT 
        o.o_orderkey,
        o.o_orderdate,
        o.o_totalprice,
        o.o_shippriority,
        ROW_NUMBER() OVER (PARTITION BY o.o_orderkey ORDER BY o.o_orderdate DESC) AS rn
    FROM 
        orders o
    WHERE 
        o.o_orderstatus = 'O'
),
SupplierDetails AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        ROUND(SUM(ps.ps_supplycost * ps.ps_availqty), 2) AS total_cost,
        COUNT(DISTINCT ps.ps_partkey) AS part_count
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey, s.s_name
),
PartDetails AS (
    SELECT 
        p.p_partkey,
        p.p_name,
        p.p_brand,
        p.p_retailprice,
        p.p_size,
        CASE 
            WHEN p.p_size IN (SELECT DISTINCT p2.p_size FROM part p2 WHERE p2.p_mfgr = p.p_mfgr) THEN 'Varied Size'
            ELSE 'Standard Size'
        END AS size_variation
    FROM 
        part p
),
QualifiedOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_totalprice,
        COUNT(DISTINCT l.l_suppkey) AS supplier_count,
        SUM(l.l_quantity * (CASE WHEN l.l_discount > 0.1 THEN l.l_extendedprice * (1 - l.l_discount) ELSE l.l_extendedprice END)) AS total_revenue
    FROM 
        orders o
    JOIN 
        lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE 
        l.l_shipdate BETWEEN DATE '1997-01-01' AND DATE '1997-12-31'
    GROUP BY 
        o.o_orderkey, o.o_totalprice
)
SELECT 
    p.p_name,
    p.p_brand,
    CASE 
        WHEN pd.part_count IS NULL THEN 'No Suppliers'
        ELSE pd.part_count::text || ' Suppliers'
    END AS num_suppliers,
    o.o_orderkey,
    o.o_totalprice,
    o.shippriority,
    o.orderdate,
    ROW_NUMBER() OVER (PARTITION BY p.p_partkey ORDER BY o.o_orderdate DESC) AS order_rank
FROM 
    PartDetails p
LEFT JOIN 
    SupplierDetails pd ON p.p_partkey = pd.s_suppkey
LEFT JOIN 
    QualifiedOrders o ON o.o_orderkey = p.p_partkey
WHERE 
    p.p_retailprice > (
        SELECT 
            AVG(p2.p_retailprice) 
        FROM 
            part p2 
        WHERE 
            p2.p_type = p.p_type
    )
    AND o.o_totalprice IS NOT NULL
ORDER BY 
    p.p_brand, o.o_orderdate DESC NULLS LAST;