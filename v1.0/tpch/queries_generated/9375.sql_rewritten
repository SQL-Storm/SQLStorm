WITH RankedOrders AS (
    SELECT
        o.o_orderkey,
        o.o_orderdate,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
        RANK() OVER (PARTITION BY o.o_orderdate ORDER BY SUM(l.l_extendedprice * (1 - l.l_discount)) DESC) AS rnk
    FROM
        orders o
    JOIN
        lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE
        o.o_orderdate >= DATE '1997-01-01' AND o.o_orderdate < DATE '1997-12-31'
    GROUP BY
        o.o_orderkey, o.o_orderdate
),
TopRevenueOrders AS (
    SELECT
        o.o_orderkey,
        o.o_orderdate,
        o.o_totalprice,
        r.total_revenue
    FROM
        RankedOrders r
    JOIN
        orders o ON r.o_orderkey = o.o_orderkey
    WHERE
        r.rnk <= 10
),
CustomerRevenue AS (
    SELECT
        c.c_name,
        SUM(t.total_revenue) AS total_customer_revenue
    FROM
        TopRevenueOrders t
    JOIN
        customer c ON t.o_orderkey IN (SELECT o.o_orderkey FROM orders o WHERE o.o_custkey = c.c_custkey)
    GROUP BY
        c.c_name
)
SELECT
    c.c_name,
    cr.total_customer_revenue,
    RANK() OVER (ORDER BY cr.total_customer_revenue DESC) AS revenue_rank
FROM
    CustomerRevenue cr
JOIN
    customer c ON cr.c_name = c.c_name
ORDER BY
    revenue_rank
LIMIT 10;