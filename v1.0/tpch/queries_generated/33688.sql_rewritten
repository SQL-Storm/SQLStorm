WITH RECURSIVE CustomerOrders AS (
    SELECT c.c_custkey, c.c_name, o.o_orderkey, o.o_orderdate, o.o_totalprice
    FROM customer c
    JOIN orders o ON c.c_custkey = o.o_custkey
    WHERE o.o_orderstatus = 'O' 
    UNION ALL
    SELECT c.c_custkey, c.c_name, o.o_orderkey, o.o_orderdate, o.o_totalprice
    FROM customer c
    JOIN orders o ON c.c_custkey = o.o_custkey
    JOIN CustomerOrders co ON c.c_custkey = co.c_custkey
    WHERE o.o_orderdate > co.o_orderdate
),
TopSuppliers AS (
    SELECT ps.ps_suppkey, SUM(ps.ps_supplycost * ps.ps_availqty) AS TotalSupplyCost
    FROM partsupp ps
    GROUP BY ps.ps_suppkey
    ORDER BY TotalSupplyCost DESC
    LIMIT 5
),
RegionSupplier AS (
    SELECT r.r_name, s.s_name, s.s_acctbal, s.s_comment
    FROM region r
    JOIN nation n ON r.r_regionkey = n.n_regionkey
    JOIN supplier s ON n.n_nationkey = s.s_nationkey
    WHERE s.s_acctbal IS NOT NULL
),
AggregatedLineItems AS (
    SELECT l.l_orderkey, 
           SUM(l.l_extendedprice * (1 - l.l_discount)) AS NetRevenue,
           COUNT(*) AS LineItemCount,
           AVG(l.l_discount) AS AvgDiscount 
    FROM lineitem l
    WHERE l.l_shipdate >= '1997-01-01' 
    GROUP BY l.l_orderkey
)
SELECT co.c_name, 
       COALESCE(MAX(al.NetRevenue), 0) AS MaxNetRevenue, 
       COALESCE(SUM(al.LineItemCount), 0) AS TotalLineItems,
       rs.r_name, 
       rs.s_name, 
       rs.s_acctbal,
       ts.TotalSupplyCost
FROM CustomerOrders co
LEFT JOIN AggregatedLineItems al ON co.o_orderkey = al.l_orderkey
LEFT JOIN RegionSupplier rs ON rs.s_comment LIKE '%important%'
LEFT JOIN TopSuppliers ts ON rs.s_name = ts.ps_suppkey
GROUP BY co.c_name, rs.r_name, rs.s_name, rs.s_acctbal, ts.TotalSupplyCost
HAVING SUM(al.NetRevenue) > 1000
ORDER BY MaxNetRevenue DESC, TotalLineItems DESC;