WITH RECURSIVE SupplierHierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal, 1 AS hierarchy_level
    FROM supplier s
    WHERE s.s_acctbal IS NOT NULL
    
    UNION ALL
    
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal, sh.hierarchy_level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE s.s_suppkey <> sh.s_suppkey
),
RecentOrders AS (
    SELECT o.o_orderkey, o.o_custkey, o.o_totalprice, o.o_orderdate
    FROM orders o
    WHERE o.o_orderdate >= cast('1998-10-01' as date) - INTERVAL '30 days'
),
AggregatedSales AS (
    SELECT l.l_partkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_sales
    FROM lineitem l
    JOIN RecentOrders r ON l.l_orderkey = r.o_orderkey
    WHERE l.l_returnflag = 'N'
    GROUP BY l.l_partkey
),
TopSales AS (
    SELECT p.p_partkey, p.p_name, p.p_brand, p.p_mfgr, s.total_sales,
           RANK() OVER (ORDER BY s.total_sales DESC) AS sales_rank
    FROM part p
    JOIN AggregatedSales s ON p.p_partkey = s.l_partkey
)
SELECT nh.n_name AS nation_name, 
       COUNT(DISTINCT sh.s_suppkey) AS supplier_count,
       COALESCE(SUM(ts.total_sales), 0) AS total_sales,
       MAX(sh.hierarchy_level) AS max_hierarchy_level
FROM nation nh
LEFT JOIN supplier s ON nh.n_nationkey = s.s_nationkey
LEFT JOIN SupplierHierarchy sh ON s.s_suppkey = sh.s_suppkey
LEFT JOIN TopSales ts ON s.s_suppkey = ts.p_partkey
GROUP BY nh.n_name
ORDER BY total_sales DESC, supplier_count DESC;