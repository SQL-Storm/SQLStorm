WITH RECURSIVE SupplierHierarchy AS (
    SELECT s_suppkey, s_name, s_nationkey, 0 AS level
    FROM supplier
    WHERE s_acctbal > 1000
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, sh.level + 1
    FROM supplier s
    INNER JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE s.suppkey != sh.s_suppkey AND s.s_acctbal > 1000
),
LineitemSummary AS (
    SELECT l_orderkey, 
           COUNT(*) AS total_items, 
           SUM(l_extendedprice * (1 - l_discount)) AS total_revenue 
    FROM lineitem
    WHERE l_shipdate >= DATE '1997-01-01'
    GROUP BY l_orderkey
),
NationRegion AS (
    SELECT n.n_name AS nation_name, 
           r.r_name AS region_name, 
           COUNT(DISTINCT s.s_suppkey) AS supplier_count
    FROM nation n
    JOIN region r ON n.n_regionkey = r.r_regionkey
    LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
    GROUP BY n.n_name, r.r_name
),
OrdersWithPrices AS (
    SELECT o.o_orderkey, 
           o.o_totalprice, 
           CASE WHEN o.o_totalprice > 500 THEN 'High' ELSE 'Low' END AS price_category 
    FROM orders o
),
FinalSummary AS (
    SELECT nh.nation_name, 
           nh.region_name, 
           SUM(l.total_revenue) AS total_sales, 
           AVG(o.o_totalprice) AS avg_order_value,
           COUNT(DISTINCT o.o_orderkey) AS order_count,
           SUM(CASE WHEN s.level > 0 THEN 1 ELSE 0 END) AS supplier_count_above_threshold
    FROM NationRegion nh
    JOIN LineitemSummary l ON nh.nation_name = l.l_orderkey
    JOIN OrdersWithPrices o ON o.o_orderkey = l.l_orderkey
   LEFT JOIN SupplierHierarchy s ON s.s_nationkey = nh.nation_name
    GROUP BY nh.nation_name, nh.region_name
)
SELECT * 
FROM FinalSummary
WHERE total_sales IS NOT NULL 
ORDER BY total_sales DESC
LIMIT 10;