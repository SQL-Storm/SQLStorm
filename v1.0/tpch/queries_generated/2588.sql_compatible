
WITH SupplierSummary AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        SUM(ps.ps_availqty) AS total_available,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_cost
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey, s.s_name
),
CustomerOrderStats AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        COUNT(DISTINCT o.o_orderkey) AS total_orders,
        SUM(o.o_totalprice) AS total_spent
    FROM 
        customer c
    LEFT JOIN 
        orders o ON c.c_custkey = o.o_custkey
    GROUP BY 
        c.c_custkey, c.c_name
),
OrderDetails AS (
    SELECT 
        o.o_orderkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS revenue,
        COUNT(l.l_orderkey) AS num_line_items,
        MAX(l.l_shipdate) AS latest_ship_date
    FROM 
        orders o
    JOIN 
        lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE 
        o.o_orderdate >= DATE '1997-01-01'
    GROUP BY 
        o.o_orderkey
)

SELECT 
    cs.c_name,
    ss.s_name,
    cs.total_orders,
    cs.total_spent,
    COALESCE(os.revenue, 0) AS total_revenue,
    COALESCE(os.num_line_items, 0) AS total_line_items,
    COALESCE(os.latest_ship_date, 'N/A') AS last_shipment_date,
    ss.total_available,
    ss.total_cost
FROM 
    CustomerOrderStats cs
LEFT JOIN 
    OrderDetails os ON cs.total_orders > 0 AND os.o_orderkey IN 
        (SELECT o.o_orderkey 
         FROM orders o 
         WHERE o.o_custkey = cs.c_custkey)
LEFT JOIN 
    SupplierSummary ss ON ss.total_available > 0
WHERE 
    cs.total_spent > (
        SELECT AVG(total_spent) 
        FROM CustomerOrderStats 
        WHERE total_orders > 5
    )
ORDER BY 
    cs.total_spent DESC, 
    ss.total_available DESC;
