
WITH CTE_Suppliers AS (
    SELECT s.s_suppkey, s.s_name, 
           SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_cost,
           ROW_NUMBER() OVER (PARTITION BY s.s_nationkey ORDER BY SUM(ps.ps_supplycost * ps.ps_availqty) DESC) AS rank
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY s.s_suppkey, s.s_name, s.s_nationkey
),
CTE_Customers AS (
    SELECT c.c_custkey, c.c_name, 
           SUM(o.o_totalprice) AS total_spent,
           DENSE_RANK() OVER (PARTITION BY c.c_nationkey ORDER BY SUM(o.o_totalprice) DESC) AS cust_rank
    FROM customer c
    JOIN orders o ON c.c_custkey = o.o_custkey
    GROUP BY c.c_custkey, c.c_name, c.c_nationkey
),
Nation_Summary AS (
    SELECT n.n_nationkey, n.n_name,
           COUNT(DISTINCT c.c_custkey) AS customer_count,
           COUNT(DISTINCT s.s_suppkey) AS supplier_count
    FROM nation n
    LEFT JOIN customer c ON n.n_nationkey = c.c_nationkey
    LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
    GROUP BY n.n_nationkey, n.n_name
)
SELECT ns.n_name,
       COALESCE(MAX(cs.total_spent), 0) AS max_spent,
       COALESCE(MIN(ss.total_supply_cost), 0) AS min_supply_cost,
       AVG(ss.total_supply_cost) AS avg_supply_cost,
       SUM(CASE WHEN cs.cust_rank <= 3 THEN 1 ELSE 0 END) AS top_customers,
       SUM(CASE WHEN ss.rank <= 3 THEN 1 ELSE 0 END) AS top_suppliers
FROM Nation_Summary ns
LEFT JOIN CTE_Customers cs ON ns.n_nationkey = cs.c_nationkey
LEFT JOIN CTE_Suppliers ss ON ns.n_nationkey = ss.s_nationkey
GROUP BY ns.n_name
HAVING COUNT(DISTINCT cs.c_custkey) > 0 OR COUNT(DISTINCT ss.s_suppkey) > 0
ORDER BY ns.n_name;
