
WITH RECURSIVE SupplierHierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal, 1 AS level
    FROM supplier s
    WHERE s.s_acctbal > 1000
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal, sh.level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE s.s_acctbal > 1000 AND sh.level < 5
), HighValueOrders AS (
    SELECT o.o_orderkey, o.o_totalprice, c.c_name, c.c_nationkey, ROW_NUMBER() OVER (PARTITION BY c.c_nationkey ORDER BY o.o_totalprice DESC) AS rn
    FROM orders o
    JOIN customer c ON o.o_custkey = c.c_custkey
    WHERE o.o_orderstatus = 'O' AND o.o_totalprice > 5000
), LineItemStatistics AS (
    SELECT 
        li.l_suppkey, 
        SUM(li.l_extendedprice * (1 - li.l_discount)) AS total_sales,
        COUNT(*) AS item_count
    FROM lineitem li
    GROUP BY li.l_suppkey
), NationSummary AS (
    SELECT 
        n.n_name,
        COUNT(DISTINCT s.s_suppkey) AS supplier_count,
        SUM(s.s_acctbal) AS total_acctbal
    FROM nation n
    LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
    GROUP BY n.n_name
)
SELECT 
    ns.n_name,
    ns.supplier_count,
    ns.total_acctbal,
    COALESCE(lis.total_sales, 0) AS total_sales,
    COALESCE(lis.item_count, 0) AS item_count,
    COUNT(DISTINCT h.o_orderkey) AS high_value_order_count
FROM NationSummary ns
LEFT JOIN LineItemStatistics lis ON ns.supplier_count = lis.l_suppkey
LEFT JOIN HighValueOrders h ON h.c_nationkey = ns.n_nationkey
GROUP BY ns.n_name, ns.supplier_count, ns.total_acctbal, lis.total_sales, lis.item_count
HAVING ns.total_acctbal > 10000 OR COUNT(h.o_orderkey) > 5
ORDER BY ns.n_name ASC, ns.total_acctbal DESC;
