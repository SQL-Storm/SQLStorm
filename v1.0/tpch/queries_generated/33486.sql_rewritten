WITH RECURSIVE SalesCTE AS (
    SELECT o.o_orderkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_sales
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE o.o_orderdate >= DATE '1996-01-01'
    GROUP BY o.o_orderkey
    UNION ALL
    SELECT o.o_orderkey, SUM(l.l_extendedprice * (1 - l.l_discount)) + s.total_sales
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    JOIN SalesCTE s ON o.o_orderkey = s.o_orderkey
    WHERE o.o_orderdate < DATE '1996-01-01' AND l.l_returnflag = 'R'
),
PartInfo AS (
    SELECT p.p_partkey, p.p_name, p.p_retailprice,
           ROW_NUMBER() OVER (PARTITION BY p.p_brand ORDER BY p.p_retailprice DESC) AS price_rank
    FROM part p
)
SELECT n.n_name AS nation_name, 
       SUM(COALESCE(total_sales, 0)) AS total_revenue,
       COUNT(DISTINCT o.o_orderkey) AS order_count,
       COUNT(DISTINCT CASE WHEN p.price_rank = 1 THEN p.p_partkey END) AS top_part_count
FROM nation n
LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
LEFT JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
LEFT JOIN part p ON ps.ps_partkey = p.p_partkey
LEFT JOIN orders o ON p.p_partkey = l.l_partkey
LEFT JOIN lineitem l ON o.o_orderkey = l.l_orderkey
LEFT JOIN SalesCTE sc ON o.o_orderkey = sc.o_orderkey
WHERE n.n_name IS NOT NULL AND p.p_size BETWEEN 1 AND 30
GROUP BY n.n_name
ORDER BY total_revenue DESC
LIMIT 10;