WITH RECURSIVE supplier_hierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, 1 AS level
    FROM supplier s
    WHERE s.s_acctbal > (SELECT AVG(s_acctbal) FROM supplier WHERE s_acctbal IS NOT NULL)

    UNION ALL

    SELECT s.s_suppkey, s.s_name, s.s_nationkey, sh.level + 1
    FROM supplier s
    JOIN supplier_hierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE sh.level < 5
),
high_value_orders AS (
    SELECT o.o_orderkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_amount
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE o.o_orderstatus = 'O'
    GROUP BY o.o_orderkey
    HAVING SUM(l.l_extendedprice * (1 - l.l_discount)) > 10000
),
nation_summary AS (
    SELECT n.n_nationkey, n.n_name, COUNT(DISTINCT s.s_suppkey) AS supplier_count
    FROM nation n
    LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
    GROUP BY n.n_nationkey, n.n_name
),
best_selling_parts AS (
    SELECT p.p_partkey, p.p_name, SUM(l.l_quantity) AS total_sold
    FROM part p
    JOIN lineitem l ON p.p_partkey = l.l_partkey
    WHERE l.l_shipdate BETWEEN '1996-01-01' AND '1997-10-31'
    GROUP BY p.p_partkey, p.p_name
)
SELECT n.n_name,
       ns.supplier_count,
       COALESCE(BP.total_sold, 0) AS total_parts_sold,
       COALESCE(HBO.total_amount, 0) AS high_value_order_amount,
       CASE
          WHEN ns.supplier_count > 10 THEN 'Many Suppliers'
          WHEN ns.supplier_count BETWEEN 5 AND 10 THEN 'Moderate Suppliers'
          ELSE 'Few Suppliers'
       END AS supplier_quality,
       ROW_NUMBER() OVER (PARTITION BY n.n_nationkey ORDER BY COALESCE(BP.total_sold, 0) DESC) AS rank
FROM nation_summary ns
JOIN nation n ON n.n_nationkey = ns.n_nationkey
LEFT JOIN best_selling_parts BP ON BP.total_sold > 100
LEFT JOIN high_value_orders HBO ON HBO.o_orderkey IN (
    SELECT o_orderkey FROM orders WHERE o_orderkey = HBO.o_orderkey
)
ORDER BY n.n_name, rank;