
WITH RECURSIVE supplier_hierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_acctbal, 0 AS level
    FROM supplier s
    WHERE s.s_acctbal IS NOT NULL AND s.s_acctbal > 1000
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_acctbal, sh.level + 1
    FROM supplier_hierarchy sh
    JOIN partsupp ps ON sh.s_suppkey = ps.ps_suppkey
    JOIN supplier s ON ps.ps_partkey = s.s_suppkey
    WHERE sh.level < 5
), ranked_customers AS (
    SELECT c.c_custkey, c.c_name, c.c_acctbal,
           ROW_NUMBER() OVER (PARTITION BY c.c_nationkey ORDER BY c.c_acctbal DESC) AS rank
    FROM customer c
    WHERE c.c_acctbal IS NOT NULL AND c.c_acctbal > (SELECT AVG(c_acctbal) FROM customer WHERE c_acctbal IS NOT NULL)
), part_supply_info AS (
    SELECT p.p_partkey, p.p_name, SUM(ps.ps_availqty) AS total_available,
           MAX(ps.ps_supplycost) AS max_supply_cost
    FROM part p
    JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
    GROUP BY p.p_partkey, p.p_name
), complex_orders AS (
    SELECT o.o_orderkey, COUNT(l.l_orderkey) AS line_item_count,
           SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_line_price
    FROM orders o
    LEFT JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE o.o_orderstatus IN ('F', 'O', 'P')
    GROUP BY o.o_orderkey
)
SELECT r.r_name,
       COUNT(DISTINCT n.n_nationkey) AS nation_count,
       SUM(CASE WHEN custom.rank <= 3 THEN custom.c_acctbal ELSE 0 END) AS top_customers_revenue,
       COALESCE(NULLIF(MAX(p.total_available), 0), 'No Supply') AS supply_status,
       MIN(o.line_item_count) FILTER (WHERE o.total_line_price > 500) AS min_line_items_above_threshold
FROM region r
JOIN nation n ON r.r_regionkey = n.n_regionkey
LEFT JOIN ranked_customers custom ON n.n_nationkey = custom.c_nationkey
FULL OUTER JOIN part_supply_info p ON p.p_partkey = (SELECT ps.ps_partkey
                                                      FROM partsupp ps
                                                      ORDER BY ps.ps_availqty DESC
                                                      LIMIT 1)
JOIN complex_orders o ON o.o_orderkey = (SELECT o.o_orderkey
                                          FROM complex_orders o
                                          ORDER BY o.total_line_price DESC
                                          LIMIT 1)
GROUP BY r.r_regionkey, r.r_name
HAVING COUNT(DISTINCT n.n_nationkey) > 1 AND SUM(custom.c_acctbal) IS NOT NULL
ORDER BY r.r_name;
