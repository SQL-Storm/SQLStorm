
WITH RankedSuppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supplycost,
        DENSE_RANK() OVER (PARTITION BY n.n_regionkey ORDER BY SUM(ps.ps_supplycost * ps.ps_availqty) DESC) AS supplier_rank
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    JOIN 
        nation n ON s.s_nationkey = n.n_nationkey
    GROUP BY 
        s.s_suppkey, s.s_name, n.n_regionkey
), 
LowValueCustomers AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        c.c_acctbal,
        ROW_NUMBER() OVER (ORDER BY c.c_acctbal ASC) AS low_rank
    FROM 
        customer c
    WHERE 
        c.c_acctbal < (SELECT AVG(c2.c_acctbal) FROM customer c2) 
), 
RecentOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_custkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_order_value,
        ROW_NUMBER() OVER (PARTITION BY o.o_custkey ORDER BY o.o_orderdate DESC) AS order_rank
    FROM 
        orders o
    JOIN 
        lineitem l ON o.o_orderkey = l.l_orderkey
    GROUP BY 
        o.o_orderkey, o.o_custkey
)
SELECT 
    r.r_name AS region_name,
    COALESCE(sup.s_name, 'Unspecified Supplier') AS supplier_name,
    cust.c_name AS customer_name,
    ord.total_order_value,
    CASE 
        WHEN ord.total_order_value IS NULL THEN 'No Orders'
        ELSE 'Has Orders'
    END AS order_status,
    lt.cust_count,
    SUM(COALESCE(ord.total_order_value, 0)) OVER (PARTITION BY r.r_regionkey) AS total_region_value
FROM 
    region r
LEFT JOIN 
    RankedSuppliers sup ON r.r_regionkey = (SELECT n.n_regionkey FROM nation n WHERE n.n_nationkey = sup.s_nationkey) 
JOIN 
    LowValueCustomers cust ON cust.low_rank <= 5  
LEFT JOIN 
    RecentOrders ord ON cust.c_custkey = ord.o_custkey AND ord.order_rank <= 5  
LEFT JOIN (
    SELECT 
        n.n_regionkey,
        COUNT(c.c_custkey) AS cust_count
    FROM 
        customer c
    JOIN 
        nation n ON c.c_nationkey = n.n_nationkey
    GROUP BY 
        n.n_regionkey
) lt ON lt.n_regionkey = r.r_regionkey
WHERE 
    (ord.total_order_value IS NOT NULL OR sup.s_name IS NOT NULL)
ORDER BY 
    r.r_regionkey, sup.total_supplycost DESC;
