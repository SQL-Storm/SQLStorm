
WITH RECURSIVE OrderHierarchy AS (
    SELECT 
        o.o_orderkey,
        o.o_orderstatus,
        o.o_totalprice,
        o.o_orderdate,
        o.o_clerk,
        1 AS order_level
    FROM 
        orders o
    WHERE 
        o.o_orderstatus = 'O'
    
    UNION ALL
    
    SELECT 
        oh.o_orderkey,
        oh.o_orderstatus,
        oh.o_totalprice,
        oh.o_orderdate,
        oh.o_clerk,
        oh.order_level + 1
    FROM 
        orders oh
    JOIN 
        OrderHierarchy ohg ON oh.o_orderkey = ohg.o_orderkey
    WHERE 
        oh.o_orderstatus = 'I'
)

SELECT 
    n.n_name AS nation_name,
    COUNT(DISTINCT c.c_custkey) AS total_customers,
    ROUND(AVG(o.o_totalprice), 2) AS avg_order_value,
    SUM(CASE 
        WHEN l.l_discount > 0.1 THEN l.l_extendedprice * (1 - l.l_discount)
        ELSE 0 
    END) AS total_discounted_sales,
    p.p_type,
    STRING_AGG(DISTINCT p.p_name, ', ') AS part_names,
    SUM(l.l_quantity) AS total_quantity
FROM 
    customer c
JOIN 
    nation n ON c.c_nationkey = n.n_nationkey
LEFT JOIN 
    orders o ON c.c_custkey = o.o_custkey
LEFT JOIN 
    lineitem l ON o.o_orderkey = l.l_orderkey
LEFT JOIN 
    partsupp ps ON l.l_partkey = ps.ps_partkey
LEFT JOIN 
    part p ON ps.ps_partkey = p.p_partkey
WHERE 
    o.o_orderdate >= DATE '1997-01-01'
    AND (l.l_shipmode IS NOT NULL OR l.l_returnflag = 'R')
GROUP BY 
    n.n_name, p.p_type
HAVING 
    SUM(l.l_quantity) > 100
ORDER BY 
    total_discounted_sales DESC;
