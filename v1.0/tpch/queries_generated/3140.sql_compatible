
WITH RankedCustomers AS (
    SELECT c.c_custkey, c.c_name, c.c_acctbal,
           ROW_NUMBER() OVER (PARTITION BY c.c_nationkey ORDER BY c.c_acctbal DESC) AS rn
    FROM customer c
), 
SupplierPartDetails AS (
    SELECT p.p_partkey, p.p_name, p.p_retailprice, 
           ps.ps_availqty, s.s_nationkey,
           COALESCE(NULLIF(s.s_acctbal, 0), 1) AS supplier_acctbal
    FROM part p
    JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
    JOIN supplier s ON ps.ps_suppkey = s.s_suppkey
    WHERE p.p_retailprice > (
        SELECT AVG(p2.p_retailprice) 
        FROM part p2 
        WHERE p2.p_size BETWEEN 1 AND 20
    )
), 
CustomerOrders AS (
    SELECT o.o_orderkey, o.o_custkey, o.o_orderdate, 
           SUM(li.l_extendedprice * (1 - li.l_discount)) AS total_order_value
    FROM orders o
    JOIN lineitem li ON o.o_orderkey = li.l_orderkey
    GROUP BY o.o_orderkey, o.o_custkey, o.o_orderdate
)
SELECT r.r_name, COUNT(DISTINCT n.n_nationkey) AS region_supplier_count,
       SUM(sp.ps_availqty) AS total_availability,
       AVG(sp.p_retailprice) AS avg_price_per_part,
       SUM(CASE WHEN co.total_order_value > 10000 THEN 1 ELSE 0 END) AS high_value_orders
FROM region r
LEFT JOIN nation n ON r.r_regionkey = n.n_regionkey
LEFT JOIN SupplierPartDetails sp ON sp.s_nationkey = n.n_nationkey
LEFT JOIN CustomerOrders co ON co.o_custkey IN (
    SELECT rc.c_custkey 
    FROM RankedCustomers rc 
    WHERE rc.rn <= 5
)
GROUP BY r.r_name
HAVING COUNT(DISTINCT sp.p_partkey) > 10
ORDER BY avg_price_per_part DESC;
