
WITH RankedSuppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        s.s_acctbal,
        ROW_NUMBER() OVER (PARTITION BY n.n_nationkey ORDER BY s.s_acctbal DESC) AS rn
    FROM 
        supplier s
    JOIN 
        nation n ON s.s_nationkey = n.n_nationkey
),
RecentOrders AS (
    SELECT 
        o.o_orderkey, 
        o.o_orderdate, 
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue
    FROM 
        orders o
    JOIN 
        lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE 
        o.o_orderdate >= CURRENT_DATE - INTERVAL '6 months'
    GROUP BY 
        o.o_orderkey, o.o_orderdate
),
SupplierOrderStats AS (
    SELECT 
        ps.ps_partkey,
        COUNT(DISTINCT o.o_orderkey) AS order_count,
        SUM(l.l_quantity) AS total_quantity,
        AVG(l.l_discount) AS avg_discount
    FROM 
        partsupp ps
    JOIN 
        lineitem l ON ps.ps_partkey = l.l_partkey
    LEFT JOIN 
        orders o ON l.l_orderkey = o.o_orderkey
    GROUP BY 
        ps.ps_partkey
)
SELECT 
    p.p_name,
    p.p_mfgr,
    COALESCE(rs.s_name, 'No Supplier') AS supplier_name,
    p.p_retailprice,
    (SELECT COUNT(*) FROM RecentOrders) AS total_recent_orders,
    COALESCE(ss.order_count, 0) AS total_orders,
    SUM(CASE WHEN ls.l_returnflag = 'R' THEN ls.l_quantity ELSE 0 END) AS returned_quantity,
    RANK() OVER (PARTITION BY p.p_mfgr ORDER BY p.p_retailprice DESC) AS price_rank
FROM 
    part p
LEFT JOIN 
    RankedSuppliers rs ON rs.rn = 1
LEFT JOIN 
    SupplierOrderStats ss ON ss.ps_partkey = p.p_partkey
LEFT JOIN 
    lineitem ls ON ls.l_partkey = p.p_partkey
WHERE 
    p.p_size IN (SELECT DISTINCT p_size FROM part WHERE p_brand LIKE 'Brand%') 
    AND (p.p_retailprice IS NOT NULL OR p.p_comment IS NOT NULL)
GROUP BY 
    p.p_name, 
    p.p_mfgr, 
    rs.s_name, 
    p.p_retailprice, 
    ss.order_count,
    price_rank
HAVING 
    COUNT(ls.l_orderkey) > 5
ORDER BY 
    price_rank ASC, total_orders DESC;
