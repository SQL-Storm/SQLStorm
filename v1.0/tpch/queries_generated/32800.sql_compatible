
WITH RECURSIVE RegionalSales AS (
    SELECT 
        r.r_name AS region_name,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_sales,
        1 AS level
    FROM 
        region r
    JOIN 
        nation n ON r.r_regionkey = n.n_regionkey
    JOIN 
        supplier s ON n.n_nationkey = s.s_nationkey
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    JOIN 
        part p ON ps.ps_partkey = p.p_partkey
    JOIN 
        lineitem l ON p.p_partkey = l.l_partkey
    GROUP BY 
        r.r_name
    
    UNION ALL
    
    SELECT 
        r.r_name AS region_name,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_sales,
        level + 1
    FROM 
        region r
    JOIN 
        nation n ON r.r_regionkey = n.n_regionkey
    JOIN 
        supplier s ON n.n_nationkey = s.s_nationkey
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    JOIN 
        part p ON ps.ps_partkey = p.p_partkey
    JOIN 
        lineitem l ON p.p_partkey = l.l_partkey
    WHERE 
        l.l_shipdate > (SELECT AVG(o.o_orderdate) FROM orders o)
    GROUP BY 
        r.r_name, level
)

SELECT 
    r.region_name,
    r.total_sales,
    r.total_sales / (SELECT SUM(total_sales) FROM RegionalSales) * 100 AS percentage_of_total,
    COUNT(DISTINCT s.s_suppkey) AS supplier_count,
    MAX(o.o_totalprice) AS highest_order_value,
    COUNT(o.o_orderkey) FILTER (WHERE o.o_orderstatus = 'O') AS open_orders_count
FROM 
    RegionalSales r
LEFT JOIN 
    supplier s ON r.region_name = (SELECT r_name FROM region WHERE r_regionkey = (SELECT n_regionkey FROM nation WHERE n_nationkey = s.s_nationkey))
LEFT JOIN 
    orders o ON s.s_suppkey = (SELECT ps.ps_suppkey FROM partsupp ps WHERE ps.ps_partkey IN (SELECT p.p_partkey FROM part p WHERE p.p_mfgr = 'Manufacturer#1'))
GROUP BY 
    r.region_name, r.total_sales
ORDER BY 
    r.total_sales DESC
LIMIT 10;
