WITH RankedSuppliers AS (
    SELECT s.s_suppkey, s.s_name, s.s_acctbal, 
           RANK() OVER (PARTITION BY ps_partkey ORDER BY s.s_acctbal DESC) as supplier_rank
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
), 
HighValueCustomers AS (
    SELECT c.c_custkey, c.c_name, c.c_acctbal,
           CASE 
               WHEN c.c_acctbal IS NULL THEN 'UNKNOWN ACCOUNT BALANCE'
               WHEN c.c_acctbal < 5000 THEN 'LOW VALUE CUSTOMER'
               ELSE 'HIGH VALUE CUSTOMER' 
           END as customer_value
    FROM customer c
    WHERE c.c_acctbal IS NOT NULL
), 
OrderDetails AS (
    SELECT o.o_orderkey, o.o_orderdate, 
           SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
           COUNT(l.l_orderkey) AS item_count
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    GROUP BY o.o_orderkey, o.o_orderdate
), 
CustomerOrderCounts AS (
    SELECT c.c_custkey, COUNT(DISTINCT o.o_orderkey) AS order_count
    FROM customer c
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    GROUP BY c.c_custkey
)
SELECT n.n_name, 
       COALESCE(SUM(od.total_revenue), 0) AS total_revenue, 
       COUNT(DISTINCT o.o_orderkey) AS total_orders,
       COUNT(r.s_suppkey) FILTER (WHERE r.supplier_rank = 1) AS top_supplier_count,
       COALESCE(SUM(cc.order_count), 0) OVER (PARTITION BY n.n_nationkey) AS customer_order_count
FROM nation n
LEFT JOIN RankedSuppliers r ON n.n_nationkey = (
    SELECT n2.n_nationkey
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    JOIN nation n2 ON s.s_nationkey = n2.n_nationkey
    WHERE r.s_suppkey = s.s_suppkey
    LIMIT 1
)
LEFT JOIN OrderDetails od ON od.o_orderkey IN (
    SELECT o.o_orderkey
    FROM orders o
    WHERE o.o_orderstatus = 'O' AND o.o_orderdate >= cast('1998-10-01' as date) - INTERVAL '30 days'
)
LEFT JOIN CustomerOrderCounts cc ON cc.c_custkey = (
    SELECT c.c_custkey FROM customer c 
    WHERE c.c_nationkey = n.n_nationkey 
    AND c.c_acctbal IS NOT NULL
    ORDER BY c.c_acctbal DESC
    LIMIT 1
)
GROUP BY n.n_name
ORDER BY total_revenue DESC
LIMIT 10;