
WITH RankedSales AS (
    SELECT 
        l_orderkey,
        l_partkey,
        l_quantity,
        l_extendedprice * (1 - l_discount) AS net_price,
        RANK() OVER (PARTITION BY l_orderkey ORDER BY l_extendedprice DESC) AS rank
    FROM 
        lineitem
    WHERE 
        l_shipdate >= '1996-01-01'
),
SupplierDetails AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        n.n_name AS nation_name,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_cost
    FROM 
        supplier s
    JOIN 
        nation n ON s.s_nationkey = n.n_nationkey
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey, s.s_name, n.n_name
)
SELECT 
    p.p_name,
    COALESCE(SUM(rs.net_price), 0) AS total_net_sales,
    sd.total_supply_cost,
    CASE 
        WHEN sd.total_supply_cost IS NULL OR sd.total_supply_cost = 0 THEN 'No Supply'
        ELSE 'Active Supplier'
    END AS supplier_status
FROM 
    part p
LEFT JOIN 
    RankedSales rs ON p.p_partkey = rs.l_partkey
LEFT JOIN 
    SupplierDetails sd ON p.p_partkey IN (SELECT ps.ps_partkey FROM partsupp ps WHERE ps.ps_suppkey IN (SELECT s.s_suppkey FROM supplier s))
GROUP BY 
    p.p_name, sd.total_supply_cost
HAVING 
    COALESCE(SUM(rs.net_price), 0) > (SELECT AVG(total_net_sales) FROM (SELECT SUM(net_price) AS total_net_sales FROM RankedSales GROUP BY l_orderkey) AS T)
ORDER BY 
    total_net_sales DESC;
