
WITH RankedParts AS (
    SELECT 
        p.p_partkey,
        p.p_name,
        p.p_mfgr,
        p.p_brand,
        p.p_type,
        p.p_size,
        p.p_retailprice,
        p.p_comment,
        ROW_NUMBER() OVER (PARTITION BY p.p_brand ORDER BY p.p_retailprice DESC) AS rank
    FROM 
        part p
    WHERE 
        LENGTH(p.p_name) BETWEEN 10 AND 30
        AND p.p_retailprice > (
            SELECT AVG(p2.p_retailprice)
            FROM part p2
        )
),
SupplierDetails AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        s.s_acctbal,
        s.s_comment,
        s.s_nationkey,
        RANK() OVER (PARTITION BY s.s_nationkey ORDER BY s.s_acctbal DESC) AS supp_rank
    FROM 
        supplier s
    WHERE 
        s.s_acctbal > 50000
)
SELECT 
    rp.p_name,
    rp.p_brand,
    sd.s_name AS supplier_name,
    sd.s_acctbal,
    CONCAT('Ordered on ', TO_CHAR(o.o_orderdate, 'YYYY-MM-DD')) AS order_date,
    SUM(li.l_extendedprice * (1 - li.l_discount)) AS total_price
FROM 
    RankedParts rp
JOIN 
    partsupp ps ON rp.p_partkey = ps.ps_partkey
JOIN 
    supplier sd ON ps.ps_suppkey = sd.s_suppkey
JOIN 
    lineitem li ON li.l_partkey = rp.p_partkey
JOIN 
    orders o ON li.l_orderkey = o.o_orderkey
WHERE 
    sd.s_nationkey IN (SELECT r.r_regionkey FROM region r WHERE r.r_name LIKE '%Asia%')
    AND rp.rank <= 5 
    AND sd.supp_rank <= 3
GROUP BY 
    rp.p_name, rp.p_brand, sd.s_name, sd.s_acctbal, o.o_orderdate
ORDER BY 
    total_price DESC, rp.p_name;
