
WITH RankedSuppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        s.s_acctbal,
        ROW_NUMBER() OVER (PARTITION BY s.s_nationkey ORDER BY s.s_acctbal DESC) AS rn
    FROM 
        supplier s
),
TopCustomers AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        c.c_acctbal,
        SUM(o.o_totalprice) AS total_spent
    FROM 
        customer c
    LEFT JOIN 
        orders o ON c.c_custkey = o.o_custkey
    GROUP BY 
        c.c_custkey, c.c_name, c.c_acctbal
    HAVING 
        SUM(o.o_totalprice) IS NOT NULL
        AND c.c_acctbal > 100
),
CheapestParts AS (
    SELECT 
        p.p_partkey,
        p.p_name,
        MIN(ps.ps_supplycost) AS min_supplycost
    FROM 
        part p
    INNER JOIN 
        partsupp ps ON p.p_partkey = ps.ps_partkey
    GROUP BY 
        p.p_partkey, p.p_name
    HAVING 
        COUNT(DISTINCT ps.ps_suppkey) > 2
),
AggLineItems AS (
    SELECT 
        l.l_orderkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_price,
        COUNT(*) AS item_count,
        AVG(l.l_quantity) AS avg_quantity
    FROM 
        lineitem l
    WHERE 
        l.l_returnflag = 'N'
    GROUP BY 
        l.l_orderkey
)
SELECT 
    ns.n_name,
    COUNT(DISTINCT tc.c_custkey) AS num_customers,
    SUM(ac.total_price) AS total_sales,
    AVG(sp.min_supplycost) AS avg_min_cost,
    (SELECT 
        SUM(l.l_quantity) 
     FROM 
        lineitem l 
     WHERE 
        l.l_orderkey IN (SELECT o.o_orderkey FROM orders o WHERE o.o_orderstatus = 'F')) AS total_finished_goods
FROM 
    nation ns
LEFT JOIN 
    TopCustomers tc ON ns.n_nationkey = tc.c_nationkey
LEFT JOIN 
    AggLineItems ac ON ac.l_orderkey IN (SELECT o.o_orderkey FROM orders o WHERE o.o_custkey = tc.c_custkey)
LEFT JOIN 
    CheapestParts sp ON sp.p_partkey IN (SELECT ps.ps_partkey FROM partsupp ps WHERE ps.ps_suppkey = (SELECT s.s_suppkey FROM RankedSuppliers s WHERE s.rn = 1 AND s.s_suppkey IS NOT NULL))
GROUP BY 
    ns.n_name
HAVING 
    COUNT(DISTINCT tc.c_custkey) > 0 OR AVG(sp.min_supplycost) IS NOT NULL
ORDER BY 
    num_customers DESC, total_sales ASC
LIMIT 10;
