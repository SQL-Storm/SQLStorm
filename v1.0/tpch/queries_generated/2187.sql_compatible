
WITH RankedSuppliers AS (
    SELECT
        s.s_suppkey,
        s.s_name,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS TotalSupplyCost,
        ROW_NUMBER() OVER (PARTITION BY n.n_name ORDER BY SUM(ps.ps_supplycost * ps.ps_availqty) DESC) AS RankPerNation
    FROM
        supplier s
    JOIN
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    JOIN
        nation n ON s.s_nationkey = n.n_nationkey
    GROUP BY
        s.s_suppkey, s.s_name, n.n_name
),
TopSuppliers AS (
    SELECT
        r.r_name,
        rs.s_name,
        rs.TotalSupplyCost
    FROM
        RankedSuppliers rs
    JOIN
        nation n ON rs.n_name = n.n_name
    JOIN
        region r ON n.n_regionkey = r.r_regionkey
    WHERE
        rs.RankPerNation <= 3
),
CustomerOrderSummary AS (
    SELECT
        c.c_custkey,
        c.c_name,
        SUM(o.o_totalprice) AS TotalOrderValue,
        COUNT(o.o_orderkey) AS OrderCount
    FROM
        customer c
    JOIN
        orders o ON c.c_custkey = o.o_custkey
    GROUP BY
        c.c_custkey, c.c_name
)
SELECT
    ts.r_name AS Region,
    ts.s_name AS Supplier,
    cos.c_name AS Customer,
    cos.TotalOrderValue,
    cos.OrderCount
FROM
    TopSuppliers ts
LEFT JOIN
    CustomerOrderSummary cos ON cos.c_custkey IN (
        SELECT c.c_custkey
        FROM customer c
        WHERE c.c_nationkey IN (
            SELECT n.n_nationkey
            FROM nation n
            WHERE n.n_name = ts.s_name
        )
    )
WHERE
    cos.TotalOrderValue IS NOT NULL OR ts.TotalSupplyCost > 10000
ORDER BY
    ts.r_name, ts.TotalSupplyCost DESC, cos.TotalOrderValue DESC;
