
WITH RECURSIVE RegionSales AS (
    SELECT 
        R.r_regionkey,
        R.r_name,
        SUM(L.l_extendedprice * (1 - L.l_discount)) AS total_sales,
        1 AS level
    FROM 
        region R
    JOIN 
        nation N ON R.r_regionkey = N.n_regionkey
    JOIN 
        supplier S ON N.n_nationkey = S.s_nationkey
    JOIN 
        partsupp PS ON S.s_suppkey = PS.ps_suppkey
    JOIN 
        part P ON PS.ps_partkey = P.p_partkey
    JOIN 
        lineitem L ON P.p_partkey = L.l_partkey
    GROUP BY 
        R.r_regionkey, R.r_name

    UNION ALL 

    SELECT 
        R.r_regionkey,
        R.r_name,
        SUM(L.l_extendedprice * (1 - L.l_discount)) AS total_sales,
        RS.level + 1
    FROM 
        RegionSales RS
    JOIN 
        region R ON RS.r_regionkey = R.r_regionkey
    JOIN 
        nation N ON R.r_regionkey = N.n_regionkey
    JOIN 
        supplier S ON N.n_nationkey = S.s_nationkey
    JOIN 
        partsupp PS ON S.s_suppkey = PS.ps_suppkey
    JOIN 
        part P ON PS.ps_partkey = P.p_partkey
    JOIN 
        lineitem L ON P.p_partkey = L.l_partkey
    WHERE 
        L.l_shipdate >= DATE '1996-01-01'
        AND L.l_shipdate < DATE '1997-01-01'
    GROUP BY 
        R.r_regionkey, R.r_name, RS.level
)

SELECT 
    R.r_name AS region_name,
    SUM(COALESCE(RS.total_sales, 0)) AS aggregated_sales,
    COUNT(DISTINCT S.s_suppkey) AS supplier_count
FROM 
    region R
LEFT JOIN 
    RegionSales RS ON R.r_regionkey = RS.r_regionkey
LEFT JOIN 
    supplier S ON R.r_regionkey = S.s_nationkey
GROUP BY 
    R.r_name
HAVING 
    SUM(COALESCE(RS.total_sales, 0)) > 10000
ORDER BY 
    aggregated_sales DESC;
