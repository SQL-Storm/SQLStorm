
WITH SupplierSummary AS (
    SELECT s.s_suppkey,
           s.s_name,
           SUM(ps.ps_availqty) AS total_available_qty,
           SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supplycost,
           ROW_NUMBER() OVER (PARTITION BY s.s_nationkey ORDER BY SUM(ps.ps_supplycost * ps.ps_availqty) DESC) AS rank
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY s.s_suppkey, s.s_name, s.s_nationkey
),
CustomerOrders AS (
    SELECT c.c_custkey,
           c.c_name,
           COUNT(o.o_orderkey) AS order_count,
           SUM(o.o_totalprice) AS total_spent,
           ROW_NUMBER() OVER (PARTITION BY c.c_nationkey ORDER BY SUM(o.o_totalprice) DESC) AS rank
    FROM customer c
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    GROUP BY c.c_custkey, c.c_name, c.c_nationkey
)
SELECT r.r_name AS region_name,
       COALESCE(ss.s_name, 'Unknown Supplier') AS supplier_name,
       cs.c_name AS customer_name,
       ss.total_available_qty,
       cs.total_spent,
       (cs.order_count * 1.0 / NULLIF(ss.total_available_qty, 0)) AS order_per_avail_qty_ratio
FROM region r
LEFT JOIN nation n ON r.r_regionkey = n.n_regionkey
LEFT JOIN SupplierSummary ss ON n.n_nationkey = ss.s_nationkey AND ss.rank = 1
LEFT JOIN CustomerOrders cs ON n.n_nationkey = cs.c_nationkey AND cs.rank <= 5
WHERE (ss.total_available_qty IS NOT NULL OR cs.total_spent IS NOT NULL)
ORDER BY region_name, supplier_name, customer_name;
