WITH RECURSIVE SupplierHierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, 1 AS level
    FROM supplier s
    WHERE s.s_acctbal > 10000

    UNION ALL

    SELECT s.s_suppkey, s.s_name, s.s_nationkey, sh.level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE s.s_acctbal > 5000 AND sh.level < 5
),
TopParts AS (
    SELECT p.p_partkey, p.p_name, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue
    FROM part p
    JOIN lineitem l ON p.p_partkey = l.l_partkey
    GROUP BY p.p_partkey, p.p_name
    HAVING total_revenue > (
        SELECT AVG(total_revenue) FROM (
            SELECT SUM(l_extendedprice * (1 - l_discount)) AS total_revenue
            FROM lineitem
            GROUP BY l_partkey
        ) AS revenue
    )
),
RecentOrders AS (
    SELECT o.o_orderkey, o.o_orderdate, o.o_totalprice, o.o_orderstatus
    FROM orders o
    WHERE o.o_orderdate > cast('1998-10-01' as date) - INTERVAL '60 days'
    ORDER BY o.o_totalprice DESC
    LIMIT 100
)
SELECT 
    rh.r_name AS region_name,
    COUNT(DISTINCT c.c_custkey) AS customer_count,
    SUM(l.l_quantity * (1 - l.l_discount)) AS total_quantity,
    AVG(l.l_extendedprice) AS avg_extended_price,
    ROW_NUMBER() OVER (PARTITION BY rh.r_name ORDER BY SUM(l.l_quantity) DESC) AS rank,
    COUNT(DISTINCT so.s_suppkey) AS supplier_count
FROM region rh
LEFT JOIN nation n ON rh.r_regionkey = n.n_regionkey
LEFT JOIN customer c ON c.c_nationkey = n.n_nationkey
LEFT JOIN orders o ON c.c_custkey = o.o_custkey
LEFT JOIN lineitem l ON o.o_orderkey = l.l_orderkey
LEFT JOIN supplier so ON so.s_nationkey = n.n_nationkey
WHERE l.l_shipdate >= cast('1998-10-01' as date) - INTERVAL '30 days'
  AND o.o_orderstatus IN ('O', 'F')
  AND EXISTS (
      SELECT 1
      FROM SupplierHierarchy sh
      WHERE sh.s_nationkey = c.c_nationkey
  )
  AND l.l_returnflag IS NULL
GROUP BY rh.r_name
HAVING SUM(l.l_quantity) > 1000
ORDER BY customer_count DESC, total_quantity DESC;