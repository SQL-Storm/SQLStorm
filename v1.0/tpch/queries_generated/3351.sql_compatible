
WITH RankedOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_orderdate,
        o.o_totalprice,
        DENSE_RANK() OVER (PARTITION BY o.o_orderdate ORDER BY o.o_totalprice DESC) AS total_price_rank
    FROM 
        orders o
    WHERE 
        o.o_orderstatus = 'O' AND 
        o.o_orderdate >= DATE '1997-01-01'
),
SupplierInfo AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        s.s_acctbal,
        COUNT(DISTINCT ps.ps_partkey) AS parts_count
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey, s.s_name, s.s_acctbal
)
SELECT 
    c.c_name,
    r.r_name,
    SUM(l.l_extendedprice * (1 - l.l_discount)) AS net_revenue,
    COUNT(DISTINCT o.o_orderkey) AS total_orders,
    COALESCE(SUM(CASE WHEN l.l_returnflag = 'R' THEN 1 ELSE 0 END), 0) AS total_returns,
    d.city AS customer_city
FROM 
    customer c
JOIN 
    nation n ON c.c_nationkey = n.n_nationkey
JOIN 
    region r ON n.n_regionkey = r.r_regionkey
LEFT JOIN 
    orders o ON c.c_custkey = o.o_custkey
LEFT JOIN 
    lineitem l ON o.o_orderkey = l.l_orderkey
LEFT JOIN 
    (SELECT 
        o_orderkey,
        MIN(o_orderdate) AS first_order_date
     FROM 
        orders
     GROUP BY 
        o_orderkey) d ON o.o_orderkey = d.o_orderkey
WHERE 
    c.c_acctbal > (SELECT AVG(s.s_acctbal) FROM supplier s)
    AND r.r_name IS NOT NULL
GROUP BY 
    c.c_name, r.r_name, d.city
HAVING 
    SUM(l.l_extendedprice * (1 - l.l_discount)) > 100000
ORDER BY 
    net_revenue DESC,
    total_orders DESC
FETCH FIRST 10 ROWS ONLY;
