WITH RECURSIVE OrderHierarchy AS (
    SELECT o.o_orderkey, o.o_orderdate, o.o_totalprice, 1 AS level
    FROM orders o
    WHERE o.o_orderdate >= DATE '1997-01-01' 
      AND o.o_orderdate < DATE '1997-12-31'
    UNION ALL
    SELECT o.o_orderkey, o.o_orderdate, oh.o_totalprice * (1 - l.l_discount) AS discounted_totalprice, level + 1
    FROM orders o
    JOIN OrderHierarchy oh ON o.o_orderkey = oh.o_orderkey
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE l.l_returnflag = 'N'
),
SupplierData AS (
    SELECT s.s_suppkey, SUM(ps.ps_supplycost * ps.ps_availqty) AS total_cost
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY s.s_suppkey
),
CustomerSegment AS (
    SELECT c.c_nationkey, c.c_mktsegment, COUNT(DISTINCT o.o_orderkey) AS order_count
    FROM customer c
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    GROUP BY c.c_nationkey, c.c_mktsegment
)
SELECT
    r.r_name AS region_name,
    n.n_name AS nation_name,
    COALESCE(cs.order_count, 0) AS total_orders,
    SUM(sd.total_cost) AS supplier_cost,
    AVG(oh.discounted_totalprice) AS average_discounted_price
FROM region r
LEFT JOIN nation n ON r.r_regionkey = n.n_regionkey
LEFT JOIN CustomerSegment cs ON n.n_nationkey = cs.c_nationkey
LEFT JOIN SupplierData sd ON n.n_nationkey = (SELECT s_nationkey FROM supplier WHERE s_suppkey = sd.s_suppkey)
LEFT JOIN OrderHierarchy oh ON n.n_nationkey = (SELECT c_nationkey FROM customer INNER JOIN orders o ON c.c_custkey = o.o_custkey WHERE o.o_orderkey = oh.o_orderkey)
WHERE r.r_name LIKE 'N%'
GROUP BY r.r_name, n.n_name
HAVING SUM(sd.total_cost) IS NOT NULL
ORDER BY region_name, nation_name;