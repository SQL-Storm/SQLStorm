WITH RankedSuppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        s.s_acctbal,
        ROW_NUMBER() OVER (PARTITION BY s.s_nationkey ORDER BY s.s_acctbal DESC) AS rank
    FROM 
        supplier s
),
HighValueParts AS (
    SELECT 
        ps.ps_partkey,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_value
    FROM 
        partsupp ps
    GROUP BY 
        ps.ps_partkey
    HAVING 
        SUM(ps.ps_supplycost * ps.ps_availqty) > 1000000
),
RecentOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_custkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_order_value
    FROM 
        orders o
    JOIN 
        lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE 
        o.o_orderdate >= DATE '1997-01-01'
    GROUP BY 
        o.o_orderkey, o.o_custkey
)
SELECT   
    c.c_name AS customer_name,
    n.n_name AS nation_name,
    COUNT(DISTINCT o.o_orderkey) AS orders_count,
    SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_spent,
    COALESCE(r.rank, -1) AS supplier_rank,
    p.p_name AS part_name,
    hp.total_supply_value
FROM 
    customer c
JOIN 
    recentorders o ON c.c_custkey = o.o_custkey
JOIN 
    nation n ON c.c_nationkey = n.n_nationkey
LEFT JOIN 
    RankedSuppliers r ON r.s_suppkey IN (
        SELECT ps.ps_suppkey 
        FROM partsupp ps 
        WHERE ps.ps_partkey IN (
            SELECT hp.ps_partkey 
            FROM HighValueParts hp
        )
    )
LEFT JOIN 
    lineitem l ON o.o_orderkey = l.l_orderkey
LEFT JOIN 
    part p ON l.l_partkey = p.p_partkey
LEFT JOIN 
    HighValueParts hp ON hp.ps_partkey = p.p_partkey
WHERE 
    n.n_regionkey IS NOT NULL
GROUP BY 
    c.c_name, n.n_name, r.rank, p.p_name, hp.total_supply_value
ORDER BY 
    total_spent DESC, orders_count DESC;