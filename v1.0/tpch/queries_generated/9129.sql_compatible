
WITH RankedOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_orderstatus,
        o.o_totalprice,
        o.o_orderdate,
        o.o_orderpriority,
        c.c_mktsegment,
        ROW_NUMBER() OVER (PARTITION BY o.o_orderstatus ORDER BY o.o_totalprice DESC) AS order_rank
    FROM 
        orders o
    JOIN 
        customer c ON o.o_custkey = c.c_custkey
    WHERE 
        o.o_orderdate >= DATE '1996-01-01' AND o.o_orderdate < DATE '1997-01-01'
),
TopOrders AS (
    SELECT 
        ro.o_orderkey,
        ro.o_orderstatus,
        ro.o_totalprice,
        ro.o_orderdate,
        ro.o_orderpriority,
        ro.c_mktsegment
    FROM 
        RankedOrders ro
    WHERE 
        ro.order_rank <= 10
),
SupplierStats AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_cost,
        COUNT(DISTINCT ps.ps_partkey) AS part_count
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey, s.s_name
),
FinalReport AS (
    SELECT 
        to.o_orderkey,
        to.o_orderstatus,
        to.o_totalprice,
        to.o_orderdate,
        to.o_orderpriority,
        to.c_mktsegment,
        ss.total_supply_cost,
        ss.part_count
    FROM 
        TopOrders to
    JOIN 
        SupplierStats ss ON ss.part_count > 5
)
SELECT 
    f.o_orderkey,
    f.o_orderstatus,
    f.o_totalprice,
    f.o_orderdate,
    f.o_orderpriority,
    f.c_mktsegment,
    f.total_supply_cost,
    f.part_count
FROM 
    FinalReport f
ORDER BY 
    f.o_orderdate DESC, f.o_totalprice DESC;
