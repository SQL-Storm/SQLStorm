WITH RankedOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_orderdate,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS revenue,
        RANK() OVER (PARTITION BY o.o_orderkey ORDER BY o.o_orderdate DESC) AS order_rank
    FROM 
        orders o
    JOIN 
        lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE 
        o.o_orderdate >= cast('1998-10-01' as date) - INTERVAL '1 year'
    GROUP BY 
        o.o_orderkey, o.o_orderdate
),
SupplierRevenue AS (
    SELECT 
        s.s_suppkey, 
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_cost
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey
),
TopSuppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        s.s_acctbal,
        sr.total_supply_cost,
        RANK() OVER (ORDER BY sr.total_supply_cost DESC) AS supplier_rank
    FROM 
        supplier s
    JOIN 
        SupplierRevenue sr ON s.s_suppkey = sr.s_suppkey
)
SELECT 
    r.r_name,
    COALESCE(TO_CHAR(MAX(o.o_orderdate), 'YYYY-MM-DD'), 'No Orders') AS last_order_date,
    COUNT(DISTINCT o.o_orderkey) AS total_orders,
    COALESCE(SUM(CASE WHEN l.l_returnflag = 'R' THEN 1 ELSE 0 END), 0) AS total_returns,
    COALESCE(AVG(tr.revenue), 0) AS average_revenue,
    STRING_AGG(DISTINCT ts.s_name || ' (Rank: ' || ts.supplier_rank || ')', ', ') AS top_suppliers
FROM 
    region r
LEFT JOIN 
    nation n ON r.r_regionkey = n.n_regionkey
LEFT JOIN 
    customer c ON n.n_nationkey = c.c_nationkey
LEFT JOIN 
    orders o ON c.c_custkey = o.o_custkey
LEFT JOIN 
    lineitem l ON o.o_orderkey = l.l_orderkey
LEFT JOIN 
    RankedOrders tr ON o.o_orderkey = tr.o_orderkey
LEFT JOIN 
    TopSuppliers ts ON ts.s_suppkey IN (SELECT ps.ps_suppkey FROM partsupp ps WHERE ps.ps_partkey IN (SELECT p.p_partkey FROM part p WHERE p.p_size > 10))
GROUP BY 
    r.r_name
ORDER BY 
    r.r_name;