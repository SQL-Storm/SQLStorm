
WITH RECURSIVE AvgSupplierCost AS (
    SELECT ps_partkey, 
           AVG(ps_supplycost) AS avg_cost
    FROM partsupp
    GROUP BY ps_partkey
), 
CustomerOrderCount AS (
    SELECT c.c_custkey, 
           COUNT(o.o_orderkey) AS order_count,
           SUM(o.o_totalprice) AS total_spent
    FROM customer c
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    GROUP BY c.c_custkey
),
TopCustomers AS (
    SELECT c.c_custkey,
           c.c_name,
           co.order_count,
           co.total_spent,
           RANK() OVER (ORDER BY co.total_spent DESC) AS rank
    FROM customer c
    JOIN CustomerOrderCount co ON c.c_custkey = co.c_custkey
    WHERE co.order_count > 0
)
SELECT DISTINCT p.p_name,
                p.p_brand,
                RANK() OVER (PARTITION BY p.p_brand ORDER BY AVG(ps.ps_supplycost) DESC) AS rank_within_brand,
                COALESCE(SUM(l.l_quantity), 0) AS total_quantity_sold,
                tc.c_name AS top_customer_name,
                tc.total_spent AS top_customer_spending,
                rc.r_name
FROM part p
LEFT JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
LEFT JOIN lineitem l ON ps.ps_partkey = l.l_partkey
LEFT JOIN supplier s ON ps.ps_suppkey = s.s_suppkey
LEFT JOIN nation n ON s.s_nationkey = n.n_nationkey
LEFT JOIN region rc ON n.n_regionkey = rc.r_regionkey
LEFT JOIN TopCustomers tc ON l.l_orderkey IN (SELECT o.o_orderkey FROM orders o WHERE o.o_custkey = tc.c_custkey)
WHERE p.p_retailprice IS NOT NULL
GROUP BY p.p_name, p.p_brand, tc.c_name, tc.total_spent, rc.r_name
ORDER BY total_quantity_sold DESC, rank_within_brand;
