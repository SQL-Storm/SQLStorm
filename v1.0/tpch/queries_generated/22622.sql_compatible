
WITH RecursivePart AS (
    SELECT p_partkey, p_name, p_retailprice, ROW_NUMBER() OVER (PARTITION BY p_brand ORDER BY p_size DESC) AS part_rank
    FROM part
    WHERE p_size IS NOT NULL
),
SupplierDetails AS (
    SELECT s.s_suppkey, s.s_name, s.s_acctbal, n.n_name AS nation_name
    FROM supplier s
    JOIN nation n ON s.s_nationkey = n.n_nationkey
    WHERE s.s_acctbal > (
        SELECT AVG(s_acctbal) FROM supplier WHERE s_nationkey IN 
        (SELECT n_nationkey FROM nation WHERE n_name = 'CANADA')
    )
),
HighValueOrder AS (
    SELECT o.o_orderkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_value
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE o.o_orderstatus = 'O' AND l.l_discount BETWEEN 0.05 AND 0.15
    GROUP BY o.o_orderkey
    HAVING COUNT(DISTINCT l.l_orderkey) > 2
),
PartSupplier AS (
    SELECT pp.p_name, ps.ps_supplycost, ps.ps_availqty, s.s_name
    FROM partsupp ps
    JOIN RecursivePart pp ON ps.ps_partkey = pp.p_partkey
    JOIN SupplierDetails s ON ps.ps_suppkey = s.s_suppkey
)
SELECT 
    COALESCE(ns.nation_name, 'UNKNOWN') AS nation, 
    AVG(ps.ps_supplycost) AS avg_supply_cost, 
    COUNT(DISTINCT po.o_orderkey) AS total_orders,
    SUM(CASE WHEN po.total_value > 10000 THEN 1 ELSE 0 END) AS high_value_orders
FROM PartSupplier ps
LEFT JOIN HighValueOrder po ON ps.p_name LIKE '%' || 'widget' || '%' 
LEFT JOIN nation ns ON ps.s_name = ns.n_name
WHERE ps.ps_availqty > 0 AND ps.ps_supplycost IS NOT NULL
GROUP BY ns.nation_name, ps.ps_supplycost
HAVING COUNT(ps.ps_availqty) > 10 OR MAX(ps.ps_supplycost) > 500
ORDER BY avg_supply_cost DESC, total_orders DESC;
