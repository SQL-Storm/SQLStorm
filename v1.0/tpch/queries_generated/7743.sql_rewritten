WITH RankedParts AS (
    SELECT 
        p.p_partkey,
        p.p_name,
        p.p_brand,
        p.p_type,
        p.p_size,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_cost,
        ROW_NUMBER() OVER (PARTITION BY p.p_type ORDER BY SUM(ps.ps_supplycost * ps.ps_availqty) DESC) AS rank
    FROM 
        part p
    JOIN 
        partsupp ps ON p.p_partkey = ps.ps_partkey
    GROUP BY 
        p.p_partkey, p.p_name, p.p_brand, p.p_type, p.p_size
),
TopParts AS (
    SELECT 
        rp.p_partkey,
        rp.p_name,
        rp.p_brand,
        rp.p_type,
        rp.total_cost
    FROM 
        RankedParts rp
    WHERE 
        rp.rank <= 5
),
CustomerOrders AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        SUM(o.o_totalprice) AS total_spent
    FROM 
        customer c
    JOIN 
        orders o ON c.c_custkey = o.o_custkey
    WHERE 
        o.o_orderstatus = 'F'  
    GROUP BY 
        c.c_custkey, c.c_name
),
FinalReport AS (
    SELECT 
        to.p_partkey,
        to.p_name,
        to.p_brand,
        to.p_type,
        co.c_custkey,
        co.c_name,
        co.total_spent
    FROM 
        TopParts to
    JOIN 
        CustomerOrders co ON co.total_spent > 5000 
)
SELECT 
    f.p_partkey,
    f.p_name,
    f.p_brand,
    f.p_type,
    f.c_custkey,
    f.c_name,
    f.total_spent
FROM 
    FinalReport f
ORDER BY 
    f.total_spent DESC, f.p_brand, f.p_name;