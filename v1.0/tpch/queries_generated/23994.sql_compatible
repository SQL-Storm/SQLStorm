
WITH RECURSIVE CustomerHierarchy AS (
    SELECT c_custkey, c_name, c_acctbal, 0 AS level
    FROM customer
    WHERE c_acctbal > (SELECT AVG(c_acctbal) FROM customer)

    UNION ALL

    SELECT c.c_custkey, c.c_name, c.c_acctbal, ch.level + 1
    FROM customer c
    JOIN CustomerHierarchy ch ON c.c_custkey <> ch.c_custkey
    WHERE c.c_acctbal < ch.c_acctbal
),
PartRatings AS (
    SELECT p.p_partkey, 
           p.p_name, 
           AVG(l.l_discount) AS avg_discount,
           SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue
    FROM part p
    JOIN lineitem l ON p.p_partkey = l.l_partkey
    GROUP BY p.p_partkey, p.p_name
),
HighValueOrders AS (
    SELECT o.o_orderkey, 
           o.o_orderstatus,
           SUM(l.l_extendedprice * (1 - l.l_discount)) AS order_value
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE o.o_orderstatus IN ('O', 'F', 'P') 
    GROUP BY o.o_orderkey, o.o_orderstatus
    HAVING SUM(l.l_extendedprice * (1 - l.l_discount)) > (SELECT AVG(l.l_extendedprice) FROM lineitem l)
),
SupplierInfo AS (
    SELECT s.s_suppkey, 
           s.s_name, 
           STRING_AGG(DISTINCT p.p_mfgr, ', ') AS manufacturers,
           COUNT(DISTINCT ps.ps_partkey) AS available_parts,
           SUM(ps.ps_availqty) AS total_available
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    JOIN part p ON ps.ps_partkey = p.p_partkey
    GROUP BY s.s_suppkey, s.s_name
)
SELECT ch.c_name, 
       ch.level, 
       COUNT(DISTINCT h.order_value) AS high_value_orders,
       COALESCE(SUM(pr.total_revenue), 0) AS total_revenue_by_parts,
       COALESCE(SUM(si.total_available), 0) AS total_parts_supplied,
       CASE 
           WHEN COUNT(DISTINCT h.o_orderstatus) = 0 THEN 'No Orders'
           ELSE 'Orders Found'
       END AS order_status
FROM CustomerHierarchy ch
LEFT JOIN HighValueOrders h ON h.o_orderkey IN (
    SELECT o.o_orderkey FROM orders o WHERE o.o_custkey = ch.c_custkey
)
LEFT JOIN PartRatings pr ON pr.p_partkey IN (
    SELECT l.l_partkey FROM lineitem l JOIN orders o ON l.l_orderkey = o.o_orderkey
    WHERE o.o_custkey = ch.c_custkey
)
LEFT JOIN SupplierInfo si ON si.s_suppkey IN (
    SELECT ps.ps_suppkey FROM partsupp ps WHERE ps.ps_partkey IN (
        SELECT l.l_partkey FROM lineitem l JOIN orders o ON l.l_orderkey = o.o_orderkey WHERE o.o_custkey = ch.c_custkey
    )
)
GROUP BY ch.c_name, ch.level
HAVING COUNT(DISTINCT h.order_value) > 5
ORDER BY ch.level DESC, total_revenue_by_parts DESC;
