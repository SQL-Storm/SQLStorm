
WITH RankedSuppliers AS (
    SELECT s.s_suppkey, s.s_name, s.s_acctbal,
           ROW_NUMBER() OVER (PARTITION BY s.s_nationkey ORDER BY s.s_acctbal DESC) AS rnk
    FROM supplier s
),
ProductSales AS (
    SELECT l.l_partkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_sales
    FROM lineitem l
    JOIN orders o ON l.l_orderkey = o.o_orderkey
    WHERE o.o_orderstatus = 'F'
    AND l.l_shipdate >= DATE '1996-01-01' AND l.l_shipdate < DATE '1997-01-01'
    GROUP BY l.l_partkey
),
SupplierPart AS (
    SELECT ps.ps_partkey, ps.ps_suppkey, ps.ps_availqty, ps.ps_supplycost,
           ROW_NUMBER() OVER (PARTITION BY ps.ps_partkey ORDER BY ps.ps_supplycost ASC) AS cheapest_supplier
    FROM partsupp ps
),
FilteredCustomers AS (
    SELECT c.c_custkey, c.c_name, c.c_acctbal
    FROM customer c
    WHERE c.c_acctbal > (SELECT AVG(c2.c_acctbal)
                         FROM customer c2
                         WHERE c2.c_nationkey = c.c_nationkey)
)
SELECT r.r_name, COUNT(DISTINCT o.o_orderkey) AS order_count,
       SUM(ps.total_sales) AS total_sales,
       SUM(CASE WHEN ps.total_sales IS NOT NULL THEN 1 ELSE 0 END) AS processed_sales,
       COUNT(DISTINCT fs.c_custkey) AS high_value_customers
FROM region r
LEFT JOIN nation n ON r.r_regionkey = n.n_regionkey
LEFT JOIN FilteredCustomers fs ON n.n_nationkey = fs.c_nationkey
LEFT JOIN orders o ON fs.c_custkey = o.o_custkey
LEFT JOIN ProductSales ps ON o.o_orderkey = ps.l_partkey
LEFT JOIN RankedSuppliers rs ON rs.s_suppkey IN (
    SELECT ps.ps_suppkey
    FROM SupplierPart ps
    WHERE ps.ps_partkey = ps.ps_partkey AND ps.cheapest_supplier = 1
)
GROUP BY r.r_name
ORDER BY total_sales DESC NULLS LAST;
