
WITH RECURSIVE supplier_hierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_acctbal, 0 AS depth
    FROM supplier s
    WHERE s.s_acctbal > 1000.00

    UNION ALL

    SELECT s.s_suppkey, s.s_name, s.s_acctbal, sh.depth + 1
    FROM supplier s
    JOIN supplier_hierarchy sh ON s.s_suppkey = sh.s_suppkey
    WHERE s.s_acctbal IS NOT NULL
),
order_summary AS (
    SELECT o.o_orderkey, o.o_totalprice, o.o_orderdate,
           RANK() OVER (PARTITION BY o.o_orderstatus ORDER BY o.o_totalprice DESC) AS price_rank
    FROM orders o
    WHERE o.o_orderdate >= DATE '1996-01-01'
),
lineitem_summary AS (
    SELECT l.l_orderkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_price,
           COUNT(DISTINCT l.l_linenumber) AS line_count,
           AVG(l.l_tax) AS avg_tax
    FROM lineitem l
    WHERE l.l_returnflag = 'N'
    GROUP BY l.l_orderkey
)
SELECT 
    p.p_name, 
    ps.ps_availqty, 
    COALESCE(ss.s_name, 'Unknown Supplier') AS supplier_name,
    os.o_totalprice AS order_total,
    ls.total_price AS line_total,
    ls.line_count,
    ROW_NUMBER() OVER (PARTITION BY p.p_partkey ORDER BY os.o_totalprice DESC) AS order_rank
FROM part p
LEFT JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
LEFT JOIN supplier_hierarchy ss ON ps.ps_suppkey = ss.s_suppkey
FULL OUTER JOIN order_summary os ON os.o_orderkey = (
    SELECT o.o_orderkey
    FROM orders o 
    WHERE o.o_orderkey = os.o_orderkey
    ORDER BY o.o_orderdate DESC
    FETCH FIRST 1 ROW ONLY
)
JOIN lineitem_summary ls ON ls.l_orderkey = os.o_orderkey
WHERE (p.p_retailprice > 10.00 AND ss.depth <= 2)
   OR (p.p_size IS NULL AND os.price_rank = 1)
GROUP BY p.p_name, ps.ps_availqty, ss.s_name, os.o_totalprice, ls.total_price, ls.line_count, p.p_partkey
ORDER BY p.p_partkey, order_rank DESC;
