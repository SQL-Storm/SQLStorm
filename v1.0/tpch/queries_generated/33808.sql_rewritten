WITH RECURSIVE SupplyChain AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal,
           SUM(ps.ps_availqty) AS total_available
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, 
           s.s_acctbal + sc.total_available,
           SUM(ps.ps_availqty) + sc.total_available
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    JOIN SupplyChain sc ON s.s_nationkey = sc.s_nationkey
    GROUP BY s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal, sc.total_available
),
TotalSales AS (
    SELECT c.c_custkey, c.c_name, SUM(o.o_totalprice) AS total_spent
    FROM customer c
    JOIN orders o ON c.c_custkey = o.o_custkey
    GROUP BY c.c_custkey, c.c_name
),
ProductLine AS (
    SELECT p.p_partkey, p.p_name, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue
    FROM part p
    JOIN lineitem l ON p.p_partkey = l.l_partkey
    WHERE l.l_shipdate >= '1997-01-01'
    GROUP BY p.p_partkey, p.p_name
),
RegionSummary AS (
    SELECT r.r_regionkey, r.r_name,
           COUNT(DISTINCT n.n_nationkey) AS nation_count,
           SUM(s.s_acctbal) AS total_supply_balance
    FROM region r
    LEFT JOIN nation n ON r.r_regionkey = n.n_regionkey
    LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
    GROUP BY r.r_regionkey, r.r_name
)
SELECT 
    ps.s_suppkey,
    ps.s_name,
    ts.total_spent,
    pr.total_revenue,
    r.r_name AS region_name,
    COALESCE(SC.total_available, 0) AS total_available_supply,
    ROW_NUMBER() OVER (PARTITION BY r.r_name ORDER BY ts.total_spent DESC) AS rank_by_spending
FROM SupplyChain SC
JOIN TotalSales ts ON SC.s_nationkey = ts.c_custkey
JOIN ProductLine pr ON SC.s_suppkey = pr.p_partkey
JOIN RegionSummary r ON SC.s_nationkey = r.n_nationkey
WHERE ts.total_spent > 1000
  AND pr.total_revenue IS NOT NULL
ORDER BY r.r_name, ts.total_spent DESC;