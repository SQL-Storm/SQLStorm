
WITH RankedSuppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_cost,
        RANK() OVER (PARTITION BY s.s_nationkey ORDER BY SUM(ps.ps_supplycost * ps.ps_availqty) DESC) AS rank_within_nation
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey, s.s_name, s.s_nationkey
),
RecentOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_custkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue
    FROM 
        orders o
    JOIN 
        lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE 
        o.o_orderdate >= DATE '1998-10-01' - INTERVAL '1 year'
    GROUP BY 
        o.o_orderkey, o.o_custkey
),
CustomerRevenue AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        COALESCE(SUM(ro.total_revenue), 0) AS total_spent,
        CASE 
            WHEN c.c_acctbal IS NULL THEN 'No Account Balance'
            ELSE 'Account Balance Available'
        END AS balance_status
    FROM 
        customer c
    LEFT JOIN 
        RecentOrders ro ON c.c_custkey = ro.o_custkey
    GROUP BY 
        c.c_custkey, c.c_name, c.c_acctbal
)
SELECT 
    cr.c_custkey,
    cr.c_name,
    cr.total_spent,
    rs.s_name AS supplier_name,
    rs.total_cost
FROM 
    CustomerRevenue cr
LEFT JOIN 
    RankedSuppliers rs ON rs.rank_within_nation = 1
JOIN 
    nation n ON rs.s_nationkey = n.n_nationkey
WHERE 
    cr.total_spent > 1000 
    AND cr.balance_status = 'Account Balance Available'
ORDER BY 
    cr.total_spent DESC, rs.total_cost ASC;
