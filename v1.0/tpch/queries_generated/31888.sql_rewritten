WITH RECURSIVE SupplierHierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_acctbal, 1 AS level
    FROM supplier s
    WHERE s.s_acctbal > (SELECT AVG(s_acctbal) FROM supplier)
    
    UNION ALL
    
    SELECT sp.s_suppkey, sp.s_name, sp.s_acctbal, sh.level + 1
    FROM supplier sp
    JOIN SupplierHierarchy sh ON sp.s_acctbal > sh.s_acctbal
),
OrderStats AS (
    SELECT o.o_orderkey, SUM(li.l_extendedprice * (1 - li.l_discount)) AS total_revenue,
           COUNT(DISTINCT li.l_partkey) AS part_count,
           RANK() OVER (ORDER BY SUM(li.l_extendedprice * (1 - li.l_discount)) DESC) AS revenue_rank
    FROM orders o
    JOIN lineitem li ON o.o_orderkey = li.l_orderkey
    WHERE o.o_orderdate >= '1996-01-01' AND o.o_orderdate < '1997-01-01'
    GROUP BY o.o_orderkey
    HAVING COUNT(DISTINCT li.l_partkey) > 5
),
NationRevenue AS (
    SELECT n.n_nationkey, n.n_name, SUM(os.total_revenue) AS total_nation_revenue
    FROM nation n
    JOIN customer c ON n.n_nationkey = c.c_nationkey
    JOIN orders o ON c.c_custkey = o.o_custkey
    JOIN OrderStats os ON o.o_orderkey = os.o_orderkey
    GROUP BY n.n_nationkey, n.n_name
)
SELECT rh.r_name, COALESCE(nv.total_nation_revenue, 0) AS total_revenue,
       s.s_name AS supplier_name, s.s_acctbal
FROM region rh
LEFT JOIN nation n ON rh.r_regionkey = n.n_regionkey
LEFT JOIN NationRevenue nv ON n.n_nationkey = nv.n_nationkey
LEFT JOIN SupplierHierarchy s ON nv.total_nation_revenue > s.s_acctbal
WHERE rh.r_name IS NOT NULL
ORDER BY total_revenue DESC, s.s_acctbal DESC;