
WITH RankedOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_orderdate,
        o.o_totalprice,
        o.o_orderstatus,
        ROW_NUMBER() OVER (PARTITION BY o.o_orderstatus ORDER BY o.o_totalprice DESC) as OrderRank
    FROM 
        orders o
    WHERE 
        o.o_orderdate >= DATE '1997-01-01' AND o.o_orderdate < DATE '1997-12-31'
),
SupplierSummary AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        SUM(ps.ps_availqty) AS TotalAvailable,
        AVG(ps.ps_supplycost) AS AvgSupplyCost
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    WHERE 
        s.s_acctbal > 1000
    GROUP BY 
        s.s_suppkey, s.s_name
),
OrderLineItems AS (
    SELECT 
        l.l_orderkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS NetRevenue,
        COUNT(DISTINCT l.l_partkey) AS DistinctParts
    FROM 
        lineitem l
    WHERE 
        l.l_shipdate >= DATE '1997-01-01' AND l.l_shipdate < DATE '1997-12-31'
    GROUP BY 
        l.l_orderkey
)
SELECT 
    n.n_name AS NationName,
    SUM(COALESCE(oli.NetRevenue, 0)) AS TotalRevenue,
    COUNT(DISTINCT oli.l_orderkey) AS TotalOrders,
    MAX(ro.o_totalprice) AS MaxOrderPrice,
    s.s_name AS SupplierName,
    SUP.TotalAvailable,
    SUP.AvgSupplyCost
FROM 
    nation n
LEFT JOIN 
    supplier s ON n.n_nationkey = s.s_nationkey
LEFT JOIN 
    SupplierSummary SUP ON s.s_suppkey = SUP.s_suppkey
LEFT JOIN 
    OrderLineItems oli ON EXISTS (
        SELECT 1 
        FROM RankedOrders ro 
        WHERE ro.o_orderkey = oli.l_orderkey AND ro.OrderRank <= 10
    )
WHERE 
    n.n_regionkey IS NOT NULL /* Only nations with a region */
GROUP BY 
    n.n_name, s.s_name, SUP.TotalAvailable, SUP.AvgSupplyCost
ORDER BY 
    TotalRevenue DESC, NationName;
