
WITH RankedOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_orderdate,
        o.o_totalprice,
        ROW_NUMBER() OVER (PARTITION BY o.o_orderstatus ORDER BY o.o_totalprice DESC) AS order_rank
    FROM 
        orders o
    WHERE 
        o.o_orderdate >= '1997-01-01' AND o.o_orderdate < '1997-12-31'
),
SupplierParts AS (
    SELECT 
        ps.ps_partkey,
        s.s_suppkey,
        s.s_name,
        SUM(ps.ps_availqty) AS total_available
    FROM 
        partsupp ps
    JOIN 
        supplier s ON ps.ps_suppkey = s.s_suppkey
    GROUP BY 
        ps.ps_partkey, s.s_suppkey, s.s_name
),
CustomerOrders AS (
    SELECT 
        c.c_custkey,
        COUNT(DISTINCT o.o_orderkey) AS total_orders,
        SUM(o.o_totalprice) AS total_spent
    FROM 
        customer c
    LEFT JOIN 
        orders o ON c.c_custkey = o.o_custkey
    WHERE 
        c.c_acctbal > 100.00 OR c.c_mktsegment = 'B2B'
    GROUP BY 
        c.c_custkey
    HAVING 
        COUNT(DISTINCT o.o_orderkey) > 5
),
PopularParts AS (
    SELECT 
        l.l_partkey,
        SUM(l.l_quantity) AS total_quantity
    FROM 
        lineitem l
    WHERE 
        l.l_shipdate BETWEEN '1997-01-01' AND '1997-12-31'
    GROUP BY 
        l.l_partkey
    HAVING 
        SUM(l.l_quantity) > 1000
)
SELECT 
    c.c_name,
    c.c_address,
    COUNT(DISTINCT o.o_orderkey) AS order_count,
    SUM(o.o_totalprice) AS total_spent,
    COUNT(DISTINCT pp.ps_partkey) AS unique_parts_supplied,
    COALESCE(MAX(so.total_available), 0) AS max_available_qty,
    (SELECT COUNT(DISTINCT pp.ps_partkey) 
     FROM SupplierParts pp 
     WHERE pp.s_suppkey IN (SELECT s.s_suppkey FROM supplier s WHERE s.s_comment LIKE '%preferred%')) AS preferred_supplier_parts
FROM 
    customer c
JOIN 
    orders o ON c.c_custkey = o.o_custkey
LEFT JOIN 
    SupplierParts so ON so.s_suppkey IN (SELECT s.s_suppkey FROM supplier s WHERE s.s_nationkey IN 
    (SELECT n.n_nationkey FROM nation n WHERE n.n_regionkey = 
        (SELECT r.r_regionkey FROM region r WHERE r.r_name = 'ASIA')))
LEFT JOIN 
    PopularParts pp ON pp.l_partkey IN (SELECT l.l_partkey FROM lineitem l WHERE l.l_orderkey = o.o_orderkey)
WHERE 
    c.c_acctbal IS NOT NULL
GROUP BY 
    c.c_name, c.c_address
HAVING 
    SUM(o.o_totalprice) > 5000
ORDER BY 
    total_spent DESC
LIMIT 10;
