
WITH RankedSuppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        RANK() OVER (PARTITION BY p.p_partkey ORDER BY ps.ps_supplycost ASC) AS supply_rank,
        SUM(ps.ps_availqty) AS total_available
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    JOIN 
        part p ON ps.ps_partkey = p.p_partkey
    WHERE 
        p.p_retailprice > (SELECT AVG(p2.p_retailprice) FROM part p2 WHERE p2.p_size < p.p_size)
    GROUP BY 
        s.s_suppkey, s.s_name, p.p_partkey
),
CustomerOrders AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        COUNT(o.o_orderkey) AS total_orders,
        COALESCE(SUM(CASE WHEN o.o_orderstatus = 'F' THEN o.o_totalprice END), 0) AS completed_price,
        COUNT(o.o_orderkey) FILTER (WHERE o.o_orderstatus = 'O') AS open_orders
    FROM 
        customer c
    LEFT JOIN 
        orders o ON c.c_custkey = o.o_custkey
    GROUP BY 
        c.c_custkey, c.c_name
),
SourcedData AS (
    SELECT 
        l.l_orderkey,
        l.l_shipdate,
        l.l_discount,
        l.l_extendedprice,
        COALESCE(r.r_name, 'Unknown') AS region_name
    FROM 
        lineitem l
    LEFT JOIN 
        supplier s ON l.l_suppkey = s.s_suppkey
    LEFT JOIN 
        nation n ON s.s_nationkey = n.n_nationkey
    LEFT JOIN 
        region r ON n.n_regionkey = r.r_regionkey
    WHERE 
        l.l_shipdate BETWEEN DATE '1997-01-01' AND DATE '1997-12-31'
)
SELECT 
    cs.c_custkey,
    cs.c_name,
    SUM(sd.l_extendedprice * (1 - sd.l_discount)) AS total_revenue,
    COUNT(DISTINCT sd.l_orderkey) AS order_count,
    COALESCE(rs.supply_rank, 0) AS supplier_rank,
    AVG(cs.completed_price) FILTER (WHERE cs.open_orders > 0) AS avg_completed_price_open
FROM 
    CustomerOrders cs
LEFT JOIN 
    SourcedData sd ON cs.total_orders > 0
LEFT JOIN 
    RankedSuppliers rs ON rs.s_suppkey = (
        SELECT ps.ps_suppkey 
        FROM partsupp ps 
        WHERE ps.ps_partkey IN (
            SELECT p.p_partkey 
            FROM part p 
            WHERE p.p_size > 10
        ) 
        ORDER BY ps.ps_supplycost 
        LIMIT 1
    )
GROUP BY 
    cs.c_custkey, cs.c_name
HAVING 
    COUNT(DISTINCT sd.l_orderkey) > 0
ORDER BY 
    total_revenue DESC, cs.c_custkey ASC;
