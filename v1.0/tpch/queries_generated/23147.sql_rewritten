WITH RECURSIVE RecursiveCTE AS (
    SELECT
        p.p_partkey,
        p.p_name,
        ps.ps_supplycost,
        ROW_NUMBER() OVER (PARTITION BY p.p_partkey ORDER BY ps.ps_supplycost DESC) AS rank_cost
    FROM
        part p
    JOIN
        partsupp ps ON p.p_partkey = ps.ps_partkey
    WHERE
        ps.ps_availqty > 10
    UNION ALL
    SELECT
        r.p_partkey,
        r.p_name,
        r.ps_supplycost,
        r.rank_cost
    FROM
        RecursiveCTE r
    JOIN
        partsupp ps ON r.p_partkey = ps.ps_partkey
    WHERE
        r.rank_cost < 3
),
SupplierInfo AS (
    SELECT
        s.s_suppkey,
        s.s_name,
        SUM(ps.ps_supplycost) AS total_supply_cost
    FROM
        supplier s
    LEFT JOIN
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY
        s.s_suppkey, s.s_name
),
FilteredNations AS (
    SELECT
        n.n_nationkey,
        n.n_name
    FROM
        nation n
    WHERE
        n.n_name LIKE '%land%' AND n.n_regionkey IN (
            SELECT r.r_regionkey FROM region r WHERE r.r_comment IS NOT NULL
        ) 
)
SELECT
    c.c_custkey,
    c.c_name,
    SUM(CASE WHEN l.l_discount = 0 THEN l.l_extendedprice ELSE 0 END) AS total_price_no_discount,
    COUNT(DISTINCT o.o_orderkey) AS total_orders,
    STRING_AGG(DISTINCT s.s_name) AS supplier_names,
    RANK() OVER (PARTITION BY c.c_custkey ORDER BY SUM(l.l_extendedprice) DESC) AS customer_rank
FROM
    customer c
JOIN
    orders o ON c.c_custkey = o.o_custkey
LEFT JOIN
    lineitem l ON o.o_orderkey = l.l_orderkey
LEFT JOIN
    FilteredNations fn ON c.c_nationkey = fn.n_nationkey
LEFT JOIN
    SupplierInfo si ON si.total_supply_cost > (SELECT AVG(ps.ps_supplycost) FROM partsupp ps)
WHERE
    l.l_shipdate BETWEEN '1996-01-01' AND '1997-01-01'
    AND (o.o_orderstatus IS NULL OR o.o_orderstatus IN ('O', 'F'))
GROUP BY
    c.c_custkey, c.c_name
HAVING
    SUM(l.l_discount) IS NULL OR COUNT(l.l_linenumber) > 5
ORDER BY
    customer_rank, c.c_custkey
FETCH FIRST 100 ROWS ONLY;