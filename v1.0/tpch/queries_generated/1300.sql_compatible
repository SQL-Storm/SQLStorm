
WITH RankedOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_orderdate,
        o.o_totalprice,
        ROW_NUMBER() OVER (PARTITION BY o.o_orderstatus ORDER BY o.o_orderdate DESC) AS order_rank
    FROM 
        orders o
    WHERE 
        o.o_orderdate >= CURRENT_DATE - INTERVAL '6 months'
),
SupplierDetails AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        COALESCE(s.s_acctbal, 0) AS account_balance,
        ROW_NUMBER() OVER (ORDER BY s.s_acctbal DESC) AS supplier_rank
    FROM 
        supplier s
    WHERE 
        s.s_acctbal IS NOT NULL
),
LineItemSummary AS (
    SELECT 
        l.l_orderkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_value,
        COUNT(*) AS total_items
    FROM 
        lineitem l
    GROUP BY 
        l.l_orderkey
)

SELECT 
    o.o_orderkey,
    o.o_orderdate,
    o.o_totalprice,
    ls.total_value,
    sd.s_name AS supplier_name,
    sd.account_balance
FROM 
    RankedOrders o
LEFT JOIN 
    LineItemSummary ls ON o.o_orderkey = ls.l_orderkey
LEFT JOIN 
    partsupp ps ON ls.l_orderkey = ps.ps_partkey
LEFT JOIN 
    SupplierDetails sd ON ps.ps_suppkey = sd.s_suppkey
WHERE 
    (o.o_totalprice > 500 OR ls.total_value IS NULL)
    AND o.o_orderstatus IN ('F', 'P')
    AND sd.supplier_rank <= 10
ORDER BY 
    o.o_orderdate DESC, 
    ls.total_value DESC;
