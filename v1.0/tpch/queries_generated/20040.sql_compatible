
WITH RECURSIVE SupplierHierarchy AS (
    SELECT s_suppkey, s_name, s_nationkey, s_acctbal, 1 AS level
    FROM supplier
    WHERE s_acctbal IS NOT NULL
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal, sh.level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey 
    WHERE s.s_acctbal > sh.s_acctbal
),
HighValueOrders AS (
    SELECT o_orderkey, o_totalprice, o_custkey,
           ROW_NUMBER() OVER (PARTITION BY o_custkey ORDER BY o_totalprice DESC) AS order_rank
    FROM orders
    WHERE o_orderstatus IN ('O', 'P') AND o_totalprice > (SELECT AVG(o_totalprice) FROM orders)
),
DetailedLineItems AS (
    SELECT l.l_orderkey, l.l_partkey, l.l_quantity,
           l.l_extendedprice * (1 - l.l_discount) AS net_price,
           ROW_NUMBER() OVER (PARTITION BY l.l_orderkey ORDER BY l.l_linenumber) AS line_rank
    FROM lineitem l
    WHERE l.l_returnflag = 'N' AND l.l_shipdate > DATE '1998-10-01' - INTERVAL '1 year'
),
SupplierPartCount AS (
    SELECT ps.ps_partkey, COUNT(DISTINCT ps.ps_suppkey) AS supplier_count
    FROM partsupp ps
    GROUP BY ps.ps_partkey
    HAVING COUNT(DISTINCT ps.ps_suppkey) > 1
)
SELECT 
    p.p_name,
    COUNT(DISTINCT ps.ps_suppkey) AS unique_suppliers,
    SUM(dli.net_price) AS total_net_price,
    MAX(dli.l_quantity) AS max_line_quantity,
    MAX(CASE WHEN dli.line_rank = 1 THEN dli.l_orderkey END) AS first_line_orderkey,
    MIN(CASE WHEN sh.level = 2 THEN sh.s_name END) AS level_2_supplier_name,
    r.r_name AS region_name,
    CASE 
        WHEN AVG(o.o_totalprice) IS NULL THEN 'No Orders'
        ELSE 'Average Order Price: ' || TO_CHAR(AVG(o.o_totalprice), 'FM$999,999,999.00')
    END AS order_summary
FROM part p
JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
LEFT JOIN supplier s ON ps.ps_suppkey = s.s_suppkey
LEFT JOIN DetailedLineItems dli ON dli.l_partkey = p.p_partkey
LEFT JOIN HighValueOrders o ON o.o_custkey = s.s_nationkey
LEFT JOIN nation n ON s.s_nationkey = n.n_nationkey
LEFT JOIN region r ON n.n_regionkey = r.r_regionkey
LEFT JOIN SupplierHierarchy sh ON sh.s_suppkey = s.s_suppkey
WHERE p.p_retailprice > (SELECT AVG(p2.p_retailprice) FROM part p2)
  AND r.r_name IS NOT NULL
GROUP BY p.p_name, r.r_name
ORDER BY total_net_price DESC
FETCH FIRST 10 ROWS ONLY;
