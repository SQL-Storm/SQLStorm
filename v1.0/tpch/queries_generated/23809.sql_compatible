
WITH RankedParts AS (
    SELECT 
        p.p_partkey,
        p.p_name,
        RANK() OVER (PARTITION BY p.p_brand ORDER BY p.p_retailprice DESC) AS price_rank
    FROM 
        part p 
    WHERE 
        p.p_retailprice IS NOT NULL
),
SupplierInfo AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        COUNT(DISTINCT ps.ps_partkey) AS part_count,
        SUM(ps.ps_supplycost) AS total_supply_cost
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    WHERE 
        s.s_acctbal > (SELECT AVG(s2.s_acctbal) FROM supplier s2)
    GROUP BY 
        s.s_suppkey, s.s_name
),
FilteredOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_custkey,
        SUM(l.l_discount * l.l_extendedprice) AS total_discounted_price
    FROM 
        orders o
    JOIN 
        lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE 
        o.o_orderstatus = 'F'
    GROUP BY 
        o.o_orderkey, o.o_custkey
    HAVING 
        SUM(l.l_discount * l.l_extendedprice) > 1000
),
CustomersWithRegion AS (
    SELECT 
        c.c_custkey,
        c.c_name AS cust_name,
        n.n_name AS nation_name,
        r.r_name AS region_name
    FROM 
        customer c
    JOIN 
        nation n ON c.c_nationkey = n.n_nationkey
    JOIN 
        region r ON n.n_regionkey = r.r_regionkey
    WHERE 
        r.r_name IS NOT NULL
)
SELECT 
    cwr.cust_name,
    COUNT(DISTINCT fo.o_orderkey) AS order_count,
    SUM(fo.total_discounted_price) AS total_discount,
    COUNT(DISTINCT rp.p_partkey) AS ranked_parts_count,
    AVG(sp.total_supply_cost) AS avg_supply_cost,
    STRING_AGG(DISTINCT rp.p_name, '; ') AS part_names
FROM 
    CustomersWithRegion cwr
LEFT JOIN 
    FilteredOrders fo ON cwr.c_custkey = fo.o_custkey
LEFT JOIN 
    RankedParts rp ON rp.price_rank <= 3
LEFT JOIN 
    SupplierInfo sp ON sp.part_count > 5
WHERE 
    cwr.region_name NOT IN ('Eastern', 'Western')
GROUP BY 
    cwr.cust_name
HAVING 
    SUM(fo.total_discounted_price) IS NOT NULL
ORDER BY 
    order_count DESC NULLS LAST;
