
WITH RECURSIVE SupplyCostCTE AS (
    SELECT ps_partkey, ps_suppkey, ps_availqty, ps_supplycost, 
           ROW_NUMBER() OVER (PARTITION BY ps_partkey ORDER BY ps_supplycost ASC) AS rn
    FROM partsupp
    WHERE ps_availqty > 0
),
RankedOrders AS (
    SELECT o_orderkey, o_custkey, o_totalprice, o_orderdate, 
           ROW_NUMBER() OVER (PARTITION BY o_custkey ORDER BY o_orderdate DESC) AS order_rank
    FROM orders
    WHERE o_orderstatus = 'O'
),
CustomerNations AS (
    SELECT c.c_custkey, c.c_name, n.n_name AS nation_name, c.c_acctbal
    FROM customer c
    JOIN nation n ON c.c_nationkey = n.n_nationkey
    WHERE c.c_acctbal > (SELECT AVG(c2.c_acctbal) FROM customer c2)
),
SupplierParts AS (
    SELECT p.p_partkey, p.p_name, s.s_suppkey, s.s_name, 
           COALESCE(SUM(ps.ps_supplycost * ps.ps_availqty), 0) AS total_supply_cost
    FROM part p
    LEFT JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
    LEFT JOIN supplier s ON ps.ps_suppkey = s.s_suppkey
    GROUP BY p.p_partkey, p.p_name, s.s_suppkey, s.s_name
),
AggregatedResults AS (
    SELECT c.nation_name, s.p_name, SUM(st.total_supply_cost) AS total_supply
    FROM CustomerNations c
    LEFT JOIN SupplierParts s ON s.p_partkey IN (SELECT ps_partkey FROM SupplyCostCTE WHERE rn = 1)
    JOIN SupplyCostCTE st ON s.s_suppkey = st.ps_suppkey
    GROUP BY c.nation_name, s.p_name
)
SELECT nation_name, p_name, total_supply
FROM AggregatedResults
WHERE total_supply > (SELECT AVG(total_supply) FROM AggregatedResults)
ORDER BY nation_name, total_supply DESC;
