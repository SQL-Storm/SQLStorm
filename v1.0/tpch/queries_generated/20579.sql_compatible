
WITH RankedSuppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supplycost,
        ROW_NUMBER() OVER (PARTITION BY s.s_nationkey ORDER BY SUM(ps.ps_supplycost * ps.ps_availqty) DESC) AS rank_within_region
    FROM 
        supplier s 
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey, s.s_name, s.s_nationkey
),
CustomerOrders AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        COUNT(o.o_orderkey) AS order_count,
        SUM(o.o_totalprice) AS total_spent
    FROM 
        customer c
    LEFT JOIN 
        orders o ON c.c_custkey = o.o_custkey
    GROUP BY 
        c.c_custkey, c.c_name
),
FilteredCustomers AS (
    SELECT 
        co.c_custkey,
        co.c_name,
        co.order_count,
        co.total_spent,
        CASE 
            WHEN co.order_count IS NULL OR co.total_spent IS NULL THEN 0 
            ELSE AVG(co.total_spent / NULLIF(co.order_count, 0))
        END AS avg_spent_per_order
    FROM 
        CustomerOrders co
    WHERE 
        co.order_count > 0
),
NationRegion AS (
    SELECT 
        n.n_nationkey,
        n.n_name,
        r.r_name
    FROM 
        nation n 
    JOIN 
        region r ON n.n_regionkey = r.r_regionkey
)
SELECT 
    fr.c_custkey,
    fr.c_name,
    fr.order_count,
    fr.total_spent,
    COALESCE(rs.total_supplycost, 0) AS total_supplier_cost,
    CASE 
        WHEN fr.avg_spent_per_order > 1000 THEN 'High Value Customer'
        WHEN fr.avg_spent_per_order = 0 THEN 'No Orders'
        ELSE 'Standard Customer'
    END AS customer_category,
    nr.n_name AS nation,
    nr.r_name AS region
FROM 
    FilteredCustomers fr
LEFT JOIN 
    RankedSuppliers rs ON fr.c_custkey = (
        SELECT s.s_suppkey 
        FROM supplier s 
        WHERE s.s_nationkey IN (SELECT n.n_nationkey FROM nation n WHERE n.n_name IS NOT NULL) 
        AND rs.rank_within_region = 1
        LIMIT 1
    )
JOIN 
    nation n ON n.n_nationkey = fr.c_custkey  
JOIN 
    NationRegion nr ON nr.n_nationkey = n.n_nationkey
WHERE 
    fr.total_spent IS NOT NULL
ORDER BY 
    fr.total_spent DESC, fr.avg_spent_per_order;
