
WITH RankedOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_orderstatus,
        o.o_totalprice,
        o.o_orderdate,
        o.o_orderpriority,
        ROW_NUMBER() OVER (PARTITION BY o.o_orderstatus ORDER BY o.o_orderdate DESC) AS rn
    FROM 
        orders o
    WHERE 
        o.o_orderstatus IN ('O', 'F') AND 
        o.o_totalprice > (SELECT AVG(o2.o_totalprice) FROM orders o2 WHERE o2.o_orderstatus = 'O')
),
SupplierSummary AS (
    SELECT 
        s.s_suppkey,
        SUM(ps.ps_availqty) AS total_avail_qty,
        COUNT(DISTINCT ps.ps_partkey) AS unique_parts,
        MAX(s.s_acctbal) AS max_balance
    FROM 
        supplier s
    LEFT JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey
),
HighValueCustomers AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        SUM(o.o_totalprice) AS total_spent
    FROM 
        customer c
    JOIN 
        orders o ON c.c_custkey = o.o_custkey
    WHERE 
        c.c_acctbal > 1000
    GROUP BY 
        c.c_custkey, c.c_name
    HAVING 
        SUM(o.o_totalprice) > 5000
),
LineItemDetails AS (
    SELECT 
        l.l_orderkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS revenue,
        l.l_returnflag,
        COUNT(l.l_linenumber) AS item_count,
        COUNT(DISTINCT l.l_partkey) AS part_count
    FROM 
        lineitem l
    GROUP BY 
        l.l_orderkey, l.l_returnflag
)
SELECT 
    p.p_partkey,
    p.p_name,
    COALESCE(ss.total_avail_qty, 0) AS available_quantity,
    COALESCE(hvc.total_spent, 0) AS customer_expenditure,
    COALESCE(ld.revenue, 0) AS total_revenue_generated,
    ROW_NUMBER() OVER (PARTITION BY p.p_brand ORDER BY COALESCE(ld.revenue, 0) DESC) AS brand_ranking
FROM 
    part p
LEFT JOIN 
    partsupp ps ON p.p_partkey = ps.ps_partkey
LEFT JOIN 
    SupplierSummary ss ON ps.ps_suppkey = ss.s_suppkey
LEFT JOIN 
    LineItemDetails ld ON ps.ps_partkey IN (SELECT l.l_partkey FROM lineitem l WHERE l.l_orderkey IN (SELECT o.o_orderkey FROM RankedOrders o WHERE o.o_orderstatus = 'F'))
LEFT JOIN 
    HighValueCustomers hvc ON hvc.c_custkey = (SELECT o.o_custkey FROM orders o WHERE o.o_orderkey IN (SELECT l.l_orderkey FROM lineitem l WHERE l.l_partkey = p.p_partkey LIMIT 1))
WHERE 
    p.p_retailprice > (SELECT AVG(p2.p_retailprice) FROM part p2 WHERE p2.p_size > 5)
    AND COALESCE(ss.unique_parts, 0) > 1
ORDER BY 
    brand_ranking, p.p_partkey;
