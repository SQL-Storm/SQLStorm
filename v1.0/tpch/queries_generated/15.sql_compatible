
WITH RankedOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_orderdate,
        o.o_totalprice,
        DENSE_RANK() OVER (PARTITION BY o.o_orderdate ORDER BY o.o_totalprice DESC) AS price_rank
    FROM 
        orders o
    WHERE 
        o.o_orderdate >= DATE '1997-01-01' AND o.o_orderdate <= DATE '1997-12-31'
),
SupplierStats AS (
    SELECT 
        s.s_suppkey,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_cost,
        COUNT(DISTINCT ps.ps_partkey) AS part_count
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey
),
TopSuppliers AS (
    SELECT 
        s.s_name,
        ss.total_supply_cost,
        ss.part_count,
        ROW_NUMBER() OVER (ORDER BY ss.total_supply_cost DESC) AS supplier_rank
    FROM 
        supplier s
    JOIN 
        SupplierStats ss ON s.s_suppkey = ss.s_suppkey
    WHERE 
        ss.total_supply_cost > 50000
),
CustomerOrderDetails AS (
    SELECT 
        c.c_name,
        o.o_orderkey,
        o.o_orderdate,
        l.l_quantity,
        l.l_extendedprice,
        l.l_discount,
        l.l_tax,
        l.l_returnflag,
        l.l_shipmode
    FROM 
        customer c
    JOIN 
        orders o ON c.c_custkey = o.o_custkey
    JOIN 
        lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE 
        l.l_returnflag = 'N'
    AND 
        c.c_acctbal > 10000
)
SELECT 
    co.c_name,
    co.o_orderkey,
    co.o_orderdate,
    co.l_quantity,
    co.l_extendedprice,
    co.l_discount,
    ts.s_name AS supplier_name,
    TOP.supplier_rank,
    co.l_shipmode
FROM 
    CustomerOrderDetails co
LEFT JOIN 
    RankedOrders ro ON co.o_orderkey = ro.o_orderkey
JOIN 
    partsupp ps ON co.o_orderkey = ps.ps_partkey
JOIN 
    TopSuppliers TOP ON ps.ps_suppkey = TOP.s_suppkey
WHERE 
    ro.price_rank <= 10
ORDER BY 
    co.o_orderdate DESC, co.l_quantity DESC;
