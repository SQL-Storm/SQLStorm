WITH RECURSIVE SupplierHierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_acctbal, 1 AS level
    FROM supplier s
    WHERE s.s_acctbal > 1000  
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_acctbal, sh.level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.s_suppkey = sh.s_suppkey 
), OrderSummary AS (
    SELECT o.o_orderkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_price
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE l.l_shipdate BETWEEN '1997-01-01' AND '1997-12-31'
    GROUP BY o.o_orderkey
), CustomerRanked AS (
    SELECT c.c_custkey, c.c_name, ROW_NUMBER() OVER (PARTITION BY c.c_mktsegment ORDER BY c.c_acctbal DESC) AS rank
    FROM customer c
), NationRegion AS (
    SELECT n.n_name, r.r_name, COUNT(s.s_suppkey) AS supplier_count
    FROM nation n
    JOIN region r ON n.n_regionkey = r.r_regionkey
    LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
    GROUP BY n.n_name, r.r_name
)
SELECT 
    p.p_name,
    COALESCE(NR.n_name, 'Unknown') AS nation,
    CASE 
        WHEN SUM(l.l_quantity) > 100 THEN 'Bulk Order'
        ELSE 'Regular Order'
    END AS order_type,
    SUM(OSS.total_price) AS total_order_value,
    COUNT(DISTINCT C.rank) AS customer_rank_count
FROM part p
LEFT JOIN lineitem l ON p.p_partkey = l.l_partkey
LEFT JOIN OrderSummary OSS ON l.l_orderkey = OSS.o_orderkey
LEFT JOIN CustomerRanked C ON OSS.o_orderkey = C.c_custkey 
LEFT JOIN NationRegion NR ON NR.supplier_count > 50 
GROUP BY p.p_name, NR.n_name
HAVING SUM(l.l_quantity) > 0
ORDER BY total_order_value DESC, p.p_name;