
WITH RECURSIVE SupplierHierarchy AS (
    SELECT s_suppkey, s_name, s_nationkey, s_acctbal, 0 AS level
    FROM supplier
    WHERE s_acctbal > 5000
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal, sh.level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE sh.level < 10
),
TopCustomers AS (
    SELECT c.c_custkey, c.c_name, SUM(o.o_totalprice) AS total_spent
    FROM customer c
    JOIN orders o ON c.c_custkey = o.o_custkey
    GROUP BY c.c_custkey, c.c_name
    HAVING SUM(o.o_totalprice) > 100000
),
PartSupplierStats AS (
    SELECT p.p_partkey, p.p_name, SUM(ps.ps_availqty) AS total_available, AVG(ps.ps_supplycost) AS avg_supply_cost
    FROM part p
    JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
    GROUP BY p.p_partkey, p.p_name
),
AggregatedLineItems AS (
    SELECT l.l_orderkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS net_value
    FROM lineitem l
    GROUP BY l.l_orderkey
)
SELECT 
    n.n_name AS nation_name,
    COUNT(DISTINCT s.s_suppkey) AS supplier_count,
    COALESCE(MAX(s.s_acctbal), 0) AS max_account_balance,
    COUNT(DISTINCT tc.c_custkey) AS top_customer_count,
    SUM(p.total_available) AS total_part_availability,
    AVG(p.avg_supply_cost) AS average_supply_cost,
    COUNT(DISTINCT ali.l_orderkey) AS order_count
FROM nation n
LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
LEFT JOIN TopCustomers tc ON s.s_nationkey = tc.c_nationkey
INNER JOIN PartSupplierStats p ON s.s_suppkey = p.p_partkey 
JOIN AggregatedLineItems ali ON ali.l_orderkey IN (SELECT o.o_orderkey FROM orders o WHERE o.o_orderstatus = 'O')
GROUP BY n.n_name
HAVING MAX(s.s_acctbal) IS NOT NULL AND COUNT(DISTINCT s.s_suppkey) > 5
ORDER BY n.n_name;
