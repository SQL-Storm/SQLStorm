WITH RECURSIVE nation_orders AS (
    SELECT n.n_nationkey, n.n_name, SUM(o.o_totalprice) AS total_order_value
    FROM nation n
    JOIN supplier s ON n.n_nationkey = s.s_nationkey
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    JOIN part p ON ps.ps_partkey = p.p_partkey
    JOIN lineitem l ON p.p_partkey = l.l_partkey
    JOIN orders o ON l.l_orderkey = o.o_orderkey
    GROUP BY n.n_nationkey, n.n_name
    HAVING SUM(o.o_totalprice) > (SELECT AVG(o2.o_totalprice) 
                                    FROM orders o2 
                                    WHERE o2.o_orderstatus = 'O')
    UNION ALL
    SELECT n_nationkey, n_name, total_order_value
    FROM nation_orders
    WHERE total_order_value IS NOT NULL
),
supplier_average AS (
    SELECT s.s_nationkey, AVG(s.s_acctbal) AS avg_acctbal
    FROM supplier s
    GROUP BY s.s_nationkey
),
high_value_suppliers AS (
    SELECT s.s_suppkey, s.s_name, s.s_acctbal, s.s_nationkey
    FROM supplier s
    JOIN supplier_average sa ON s.s_nationkey = sa.s_nationkey
    WHERE s.s_acctbal > sa.avg_acctbal
)
SELECT n.n_name, COUNT(DISTINCT o.o_orderkey) AS order_count, 
       SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
       ROW_NUMBER() OVER (PARTITION BY n.n_nationkey ORDER BY SUM(l.l_extendedprice * (1 - l.l_discount)) DESC) AS revenue_rank
FROM nation n
LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
LEFT JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
LEFT JOIN part p ON ps.ps_partkey = p.p_partkey
LEFT JOIN lineitem l ON p.p_partkey = l.l_partkey
LEFT JOIN orders o ON l.l_orderkey = o.o_orderkey
WHERE o.o_orderstatus = 'O' AND l.l_shipdate >= '1997-01-01'
GROUP BY n.n_name
HAVING SUM(l.l_extendedprice * (1 - l.l_discount)) > (
    SELECT AVG(total_revenue) FROM (
        SELECT SUM(l_extendedprice * (1 - l_discount)) AS total_revenue
        FROM lineitem
        JOIN orders ON lineitem.l_orderkey = orders.o_orderkey
        GROUP BY orders.o_orderkey
    ) AS revenue_summary
)
ORDER BY order_count DESC, total_revenue DESC;