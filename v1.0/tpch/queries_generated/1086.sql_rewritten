WITH RankedSuppliers AS (
    SELECT 
        ps.ps_partkey,
        s.s_name,
        ps.ps_availqty,
        ps.ps_supplycost,
        ROW_NUMBER() OVER (PARTITION BY ps.ps_partkey ORDER BY ps.ps_supplycost ASC) AS rn
    FROM 
        partsupp ps
    JOIN 
        supplier s ON ps.ps_suppkey = s.s_suppkey
),
CustomerOrders AS (
    SELECT 
        c.c_custkey,
        COUNT(o.o_orderkey) AS order_count,
        SUM(o.o_totalprice) AS total_spent
    FROM 
        customer c
    LEFT JOIN 
        orders o ON c.c_custkey = o.o_custkey
    GROUP BY 
        c.custkey
),
TopCustomers AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        c.c_acctbal,
        ROW_NUMBER() OVER (ORDER BY SUM(o.o_totalprice) DESC) AS rnk
    FROM 
        customer c
    JOIN 
        orders o ON c.c_custkey = o.o_custkey
    GROUP BY 
        c.c_custkey, c.c_name, c.c_acctbal
    HAVING 
        SUM(o.o_totalprice) > 10000
)
SELECT 
    p.p_name,
    COUNT(DISTINCT l.l_orderkey) AS total_orders,
    SUM(l.l_extendedprice * (1 - l.l_discount)) AS revenue,
    COALESCE(MAX(CASE WHEN lst.rn = 1 THEN lst.s_name END), 'No Supplier') AS cheapest_supplier,
    COUNT(DISTINCT c.c_custkey) AS unique_customers
FROM 
    part p
JOIN 
    lineitem l ON p.p_partkey = l.l_partkey
LEFT JOIN 
    RankedSuppliers lst ON p.p_partkey = lst.ps_partkey
LEFT JOIN 
    CustomerOrders co ON co.c_custkey IN (SELECT c.c_custkey FROM TopCustomers tc WHERE tc.rnk <= 10)
WHERE 
    l.l_shipdate > '1997-01-01' AND 
    (l.l_discount BETWEEN 0.05 AND 0.15 OR (l.l_discount IS NULL AND l.l_returnflag = 'R'))
GROUP BY 
    p.p_name
HAVING 
    SUM(l.l_extendedprice * (1 - l.l_discount)) > 5000
ORDER BY 
    revenue DESC;