
WITH RECURSIVE OrderCTE AS (
    SELECT o.orderkey, o.orderdate, o.totalprice, 0 AS depth
    FROM orders o
    WHERE o.orderstatus = 'O'
    UNION ALL
    SELECT o.orderkey, o.orderdate, o.totalprice, c.depth + 1
    FROM orders o
    JOIN OrderCTE c ON o.orderkey = c.orderkey
    WHERE o.orderdate > c.orderdate
),
RankedSuppliers AS (
    SELECT s.s_suppkey, s.s_name, SUM(ps.ps_supplycost) AS total_supplycost,
           RANK() OVER (PARTITION BY r.r_regionkey ORDER BY SUM(ps.ps_supplycost) DESC) AS rank_in_region
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    JOIN region r ON s.s_nationkey = r.r_nationkey
    GROUP BY s.s_suppkey, s.s_name, r.r_regionkey
),
CustomerOrders AS (
    SELECT c.c_custkey, c.c_name, COUNT(o.o_orderkey) AS order_count
    FROM customer c
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    GROUP BY c.c_custkey, c.c_name
)
SELECT p.p_name, 
       SUM(l.l_extendedprice * (1 - l.l_discount)) AS revenue, 
       COALESCE(co.order_count, 0) AS total_orders,
       rs.s_name AS top_supplier
FROM part p
LEFT JOIN lineitem l ON p.p_partkey = l.l_partkey
LEFT JOIN CustomerOrders co ON l.l_orderkey = co.c_custkey
LEFT JOIN RankedSuppliers rs ON l.l_suppkey = rs.s_suppkey AND rs.rank_in_region = 1
WHERE p.p_size BETWEEN 10 AND 50
  AND l.l_shipdate > '1997-01-01'
GROUP BY p.p_name, co.order_count, rs.s_name
HAVING SUM(l.l_extendedprice * (1 - l.l_discount)) > 1000000
ORDER BY revenue DESC
LIMIT 10;
