WITH RECURSIVE RegionSales AS (
    SELECT 
        r.r_regionkey,
        r.r_name,
        SUM(o.o_totalprice) AS total_sales
    FROM 
        region r
    LEFT JOIN 
        nation n ON r.r_regionkey = n.n_regionkey
    LEFT JOIN 
        supplier s ON n.n_nationkey = s.s_nationkey
    LEFT JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    LEFT JOIN 
        part p ON ps.ps_partkey = p.p_partkey
    LEFT JOIN 
        lineitem l ON p.p_partkey = l.l_partkey
    LEFT JOIN 
        orders o ON l.l_orderkey = o.o_orderkey
    GROUP BY 
        r.r_regionkey, r.r_name

    UNION ALL

    SELECT 
        r.r_regionkey,
        r.r_name,
        SUM(o.o_totalprice) AS total_sales
    FROM 
        region r
    JOIN 
        nation n ON r.r_regionkey = n.n_regionkey
    JOIN 
        supplier s ON n.n_nationkey = s.s_nationkey
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    JOIN 
        part p ON ps.ps_partkey = p.p_partkey
    JOIN 
        lineitem l ON p.p_partkey = l.l_partkey
    JOIN 
        orders o ON l.l_orderkey = o.o_orderkey
    WHERE 
        o.o_totalprice > (SELECT AVG(o_totalprice) FROM orders) 
    GROUP BY 
        r.r_regionkey, r.r_name
)

SELECT 
    r.r_regionkey,
    r.r_name,
    COALESCE(rs.total_sales, 0) AS total_sales,
    COUNT(DISTINCT c.c_custkey) AS customer_count,
    STRING_AGG(DISTINCT s.s_name, ', ') AS suppliers,
    ROW_NUMBER() OVER (PARTITION BY r.r_regionkey ORDER BY COALESCE(rs.total_sales, 0) DESC) AS sales_rank
FROM 
    region r
LEFT JOIN 
    RegionSales rs ON r.r_regionkey = rs.r_regionkey
LEFT JOIN 
    nation n ON r.r_regionkey = n.n_regionkey
LEFT JOIN 
    supplier s ON n.n_nationkey = s.s_nationkey
LEFT JOIN 
    customer c ON s.s_nationkey = c.c_nationkey
WHERE 
    r.r_name IS NOT NULL
GROUP BY 
    r.r_regionkey, r.r_name
ORDER BY 
    total_sales DESC, r.r_name;