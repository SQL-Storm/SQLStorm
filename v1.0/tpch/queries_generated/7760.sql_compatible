
WITH RankedSuppliers AS (
    SELECT s.s_suppkey, s.s_name, s.s_acctbal, s.n_nationkey, 
           RANK() OVER (PARTITION BY s.n_nationkey ORDER BY s.s_acctbal DESC) AS rank
    FROM supplier s
),
SelectedParts AS (
    SELECT p.p_partkey, p.p_name, p.p_retailprice
    FROM part p
    WHERE p.p_retailprice > (SELECT AVG(p2.p_retailprice) FROM part p2)
),
OrderLineItems AS (
    SELECT l.l_orderkey, l.l_partkey, l.l_suppkey, l.l_quantity, 
           l.l_extendedprice, l.l_discount
    FROM lineitem l
    WHERE l.l_shipdate >= DATE '1997-01-01' AND l.l_shipdate <= DATE '1997-12-31'
),
CustomerOrderSummary AS (
    SELECT o.o_orderkey, o.o_totalprice, o.o_orderdate, 
           c.c_name, r.r_name
    FROM orders o
    JOIN customer c ON o.o_custkey = c.c_custkey
    JOIN nation n ON c.c_nationkey = n.n_nationkey
    JOIN region r ON n.n_regionkey = r.r_regionkey
)
SELECT 
    cr.o_orderdate, 
    cs.c_name AS customer_name, 
    cs.r_name AS region_name, 
    SUM(oli.l_extendedprice * (1 - oli.l_discount)) AS total_revenue,
    COUNT(DISTINCT oli.l_orderkey) AS total_orders,
    COUNT(DISTINCT rp.p_partkey) AS total_parts,
    STRING_AGG(DISTINCT rs.s_name, ', ') AS supplier_names
FROM CustomerOrderSummary cr
JOIN OrderLineItems oli ON cr.o_orderkey = oli.l_orderkey
JOIN RankedSuppliers rs ON oli.l_suppkey = rs.s_suppkey AND rs.rank <= 3
JOIN SelectedParts rp ON oli.l_partkey = rp.p_partkey
GROUP BY cr.o_orderdate, cs.c_name, cs.r_name
ORDER BY total_revenue DESC
LIMIT 10;
