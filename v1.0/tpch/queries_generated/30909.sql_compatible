
WITH RECURSIVE SupplierHierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, 1 AS level
    FROM supplier s
    WHERE s.s_acctbal > 1000
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, sh.level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE s.s_acctbal > 1000 AND sh.level < 5
),
PartStatistics AS (
    SELECT p.p_partkey, p.p_name, SUM(ps.ps_availqty) AS total_availqty, 
           AVG(ps.ps_supplycost) AS avg_supplycost,
           COUNT(DISTINCT ps.ps_suppkey) AS total_suppliers
    FROM part p
    JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
    GROUP BY p.p_partkey, p.p_name
),
CustomerOrders AS (
    SELECT c.c_custkey, c.c_name, COUNT(o.o_orderkey) AS total_orders,
           SUM(o.o_totalprice) AS total_spent
    FROM customer c
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    WHERE o.o_orderstatus IN ('O', 'F') OR o.o_orderstatus IS NULL
    GROUP BY c.c_custkey, c.c_name
),
RegionSummary AS (
    SELECT r.r_regionkey, r.r_name, COUNT(DISTINCT n.n_nationkey) AS total_nations
    FROM region r
    JOIN nation n ON r.r_regionkey = n.n_regionkey
    GROUP BY r.r_regionkey, r.r_name
)
SELECT 
    p.p_name,
    ps.total_availqty,
    ps.avg_supplycost,
    cs.c_name,
    cs.total_orders,
    cs.total_spent,
    rs.r_name,
    rh.level AS supplier_level
FROM PartStatistics ps
JOIN CustomerOrders cs ON ps.total_suppliers > 0
LEFT JOIN RegionSummary rs ON ps.total_suppliers > 0
JOIN SupplierHierarchy rh ON ps.total_suppliers > 0
WHERE ps.avg_supplycost < 50.00
ORDER BY ps.total_availqty DESC, cs.total_spent DESC
LIMIT 100 OFFSET 20;
