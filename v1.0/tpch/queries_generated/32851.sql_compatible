
WITH RECURSIVE CustomerHierarchy AS (
    SELECT c.c_custkey, c.c_name, c.c_nationkey, c.c_acctbal, CAST(c.c_name AS VARCHAR) AS FullName
    FROM customer c
    WHERE c.c_acctbal > 1000

    UNION ALL

    SELECT c.c_custkey, c.c_name, c.c_nationkey, c.c_acctbal, CAST(CONCAT(CH.FullName, ' -> ', c.c_name) AS VARCHAR) AS FullName
    FROM CustomerHierarchy CH
    JOIN customer c ON c.c_custkey <> CH.c_custkey AND c.c_acctbal > 300
)

SELECT
    n.n_name AS Nation,
    COUNT(DISTINCT o.o_orderkey) AS TotalOrders,
    SUM(l.l_extendedprice * (1 - l.l_discount)) AS TotalRevenue,
    AVG(l.l_discount) AS AvgDiscount,
    MAX(c.c_acctbal) AS MaxCustomerBalance,
    STRING_AGG(DISTINCT c.c_name, ', ') AS CustomerNames,
    STRING_AGG(DISTINCT p.p_name, ', ') AS Products
FROM
    orders o
JOIN
    lineitem l ON o.o_orderkey = l.l_orderkey
JOIN
    partsupp ps ON l.l_partkey = ps.ps_partkey
JOIN
    part p ON ps.ps_partkey = p.p_partkey
JOIN
    supplier s ON ps.ps_suppkey = s.s_suppkey
JOIN
    nation n ON s.s_nationkey = n.n_nationkey
LEFT JOIN
    (SELECT CH.c_custkey, CH.FullName FROM CustomerHierarchy CH) CH ON o.o_custkey = CH.c_custkey
LEFT JOIN
    customer c ON o.o_custkey = c.c_custkey
GROUP BY
    n.n_name
HAVING
    SUM(l.l_extendedprice * (1 - l.l_discount)) > 5000
ORDER BY
    TotalRevenue DESC
LIMIT 10 OFFSET 0;
