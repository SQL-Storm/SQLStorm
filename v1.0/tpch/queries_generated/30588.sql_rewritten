WITH RECURSIVE supplier_hierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.nationkey, 
           1 AS level, 
           CAST(s.s_name AS VARCHAR(255)) AS path
    FROM supplier s
    WHERE s.s_acctbal > 1000.00

    UNION ALL

    SELECT s1.s_suppkey, s1.s_name, s1.nationkey, 
           sh.level + 1, 
           CONCAT(sh.path, ' -> ', s1.s_name)
    FROM supplier_hierarchy sh
    JOIN supplier s1 ON sh.s_nationkey = s1.nationkey
    WHERE s1.s_acctbal > 500.00 AND sh.level < 3
),
lineitem_aggregated AS (
    SELECT l.l_partkey, 
           SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue
    FROM lineitem l
    WHERE l.l_shipdate >= '1996-01-01' AND l.l_shipdate < '1997-01-01'
    GROUP BY l.l_partkey
),
high_value_nations AS (
    SELECT n.n_nationkey, 
           n.n_name, 
           SUM(s.s_acctbal) AS total_acct_bal
    FROM nation n
    JOIN supplier s ON n.n_nationkey = s.s_nationkey
    GROUP BY n.n_nationkey, n.n_name
    HAVING SUM(s.s_acctbal) > 5000.00
),
part_supplier_stats AS (
    SELECT p.p_partkey, 
           p.p_name, 
           COUNT(DISTINCT ps.ps_suppkey) AS num_suppliers,
           AVG(ps.ps_supplycost) AS avg_supply_cost,
           MAX(ps.ps_availqty) AS max_avail_qty
    FROM part p
    JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
    GROUP BY p.p_partkey, p.p_name
)
SELECT
    p.p_name,
    p.avg_supply_cost,
    p.num_suppliers,
    l.total_revenue,
    COALESCE(hv.n_name, 'Unknown') AS high_value_nation,
    sh.path AS supplier_path
FROM part_supplier_stats p
LEFT JOIN lineitem_aggregated l ON p.p_partkey = l.l_partkey
LEFT JOIN high_value_nations hv ON hv.n_nationkey IN (
    SELECT DISTINCT s.s_nationkey 
    FROM supplier s
    JOIN partsupp ps ON ps.ps_suppkey = s.s_suppkey
    WHERE ps.ps_partkey = p.p_partkey
)
LEFT JOIN supplier_hierarchy sh ON sh.s_nationkey = hv.n_nationkey
WHERE p.avg_supply_cost IS NOT NULL
ORDER BY p.num_suppliers DESC, l.total_revenue DESC;