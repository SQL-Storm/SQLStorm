
WITH RECURSIVE OrderHierarchy AS (
    SELECT o.o_orderkey, o.o_orderdate, o.o_totalprice, o.o_custkey, 1 AS level
    FROM orders o
    WHERE o.o_orderstatus = 'O'
    
    UNION ALL
    
    SELECT o.o_orderkey, o.o_orderdate, o.o_totalprice, o.o_custkey, oh.level + 1
    FROM orders o
    JOIN OrderHierarchy oh ON o.o_custkey = oh.o_custkey
    WHERE o.o_orderdate > oh.o_orderdate
)

SELECT 
    n.n_name AS Nation,
    COUNT(DISTINCT c.c_custkey) AS CustomerCount,
    SUM(l.l_extendedprice * (1 - l.l_discount)) AS TotalSales,
    AVG(l.l_quantity) AS AvgQuantity,
    MAX(o.o_orderdate) AS LastOrderDate,
    COUNT(CASE WHEN l.l_returnflag = 'R' THEN 1 END) AS ReturnCount
FROM 
    nation n 
    LEFT JOIN customer c ON n.n_nationkey = c.c_nationkey
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    LEFT JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    LEFT JOIN OrderHierarchy oh ON o.o_orderkey = oh.o_orderkey
WHERE 
    l.l_shipdate >= DATE '1997-01-01' 
    AND l.l_shipdate < DATE '1998-01-01'
    AND (c.c_acctbal IS NOT NULL OR c.c_mktsegment = 'BUILDING')
GROUP BY 
    n.n_name
HAVING 
    SUM(l.l_extendedprice * (1 - l.l_discount)) > 10000
ORDER BY 
    TotalSales DESC
    NULLS LAST;
