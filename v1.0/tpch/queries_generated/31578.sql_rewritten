WITH RECURSIVE SupplierHierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_acctbal, 0 AS level
    FROM supplier s
    WHERE s.s_acctbal > (SELECT AVG(s_acctbal) FROM supplier)
    
    UNION ALL
    
    SELECT s.s_suppkey, s.s_name, s.s_acctbal, sh.level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.s_acctbal < sh.s_acctbal
    WHERE sh.level < 5
),
PartSupplierStats AS (
    SELECT ps.ps_partkey, SUM(ps.ps_availqty) AS total_avail, AVG(ps.ps_supplycost) AS avg_cost
    FROM partsupp ps
    GROUP BY ps.ps_partkey
),
OrderAggregation AS (
    SELECT o.o_orderkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_sales, 
           COUNT(DISTINCT l.l_orderkey) AS total_line_items,
           RANK() OVER (PARTITION BY o.o_orderstatus ORDER BY SUM(l.l_extendedprice * (1 - l.l_discount)) DESC) as sales_rank
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE o.o_orderdate >= DATE '1997-01-01'
    GROUP BY o.o_orderkey
)

SELECT p.p_name, 
       r.r_name AS region_name, 
       COUNT(DISTINCT s.s_suppkey) AS supplier_count, 
       AVG(ps.total_avail) AS avg_avail_per_part, 
       SUM(os.total_sales) AS total_sales,
       MAX(os.sales_rank) AS highest_rank
FROM part p
JOIN partsect psec ON p.p_partkey = ps.ps_partkey
JOIN PartSupplierStats ps ON ps.ps_partkey = p.p_partkey
JOIN supplier s ON ps.ps_suppkey = s.s_suppkey
LEFT JOIN nation n ON s.s_nationkey = n.n_nationkey
LEFT JOIN region r ON n.n_regionkey = r.r_regionkey
JOIN OrderAggregation os ON os.o_orderkey IN (SELECT o.o_orderkey 
                                               FROM orders o 
                                               JOIN lineitem l ON o.o_orderkey = l.l_orderkey
                                               WHERE l.l_partkey = p.p_partkey)
WHERE p.p_retailprice > (SELECT AVG(p_retailprice) FROM part)
GROUP BY p.p_name, r.r_name
HAVING COUNT(DISTINCT s.s_suppkey) > 2
ORDER BY total_sales DESC, supplier_count ASC;