
WITH RankedOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_orderdate,
        o.o_totalprice,
        o.o_orderpriority,
        RANK() OVER (PARTITION BY o.o_orderpriority ORDER BY o.o_totalprice DESC) AS order_rank
    FROM 
        orders o
    WHERE 
        o.o_orderstatus = 'O'
        AND o.o_orderdate >= DATE '1996-01-01'
),
SupplierParts AS (
    SELECT 
        ps.ps_partkey,
        ps.ps_suppkey,
        SUM(ps.ps_availqty) AS total_available_qty,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supplycost
    FROM 
        partsupp ps
    JOIN 
        supplier s ON ps.ps_suppkey = s.s_suppkey
    GROUP BY 
        ps.ps_partkey, ps.ps_suppkey
),
TopSuppliers AS (
    SELECT 
        s.s_nationkey,
        COUNT(DISTINCT ps.ps_partkey) AS part_count,
        SUM(sp.total_available_qty) AS total_qty
    FROM 
        SupplierParts sp
    JOIN 
        supplier s ON sp.ps_suppkey = s.s_suppkey
    GROUP BY 
        s.s_nationkey
    HAVING 
        COUNT(DISTINCT ps.ps_partkey) > 10
),
YearlySales AS (
    SELECT 
        EXTRACT(YEAR FROM o.o_orderdate) AS order_year,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_sales
    FROM 
        lineitem l
    JOIN 
        orders o ON l.l_orderkey = o.o_orderkey
    GROUP BY 
        EXTRACT(YEAR FROM o.o_orderdate)
)
SELECT 
    n.n_name,
    r.r_name AS region_name,
    ts.part_count,
    ts.total_qty,
    ys.order_year,
    ys.total_sales
FROM 
    TopSuppliers ts
JOIN 
    nation n ON ts.s_nationkey = n.n_nationkey
JOIN 
    region r ON n.n_regionkey = r.r_regionkey
LEFT JOIN 
    YearlySales ys ON ys.order_year = (SELECT MAX(order_year) FROM YearlySales)
ORDER BY 
    ys.total_sales DESC, n.n_name
OFFSET 10 ROWS FETCH NEXT 10 ROWS ONLY;
