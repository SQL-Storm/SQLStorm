WITH RankedOrders AS (
    SELECT o.o_orderkey, o.o_orderdate, o.o_totalprice,
           RANK() OVER (PARTITION BY o.o_orderstatus ORDER BY o.o_totalprice DESC) AS order_rank
    FROM orders o
    WHERE o.o_orderdate >= DATE '1996-01-01'
),

SupplierParts AS (
    SELECT ps.ps_partkey, ps.ps_suppkey, SUM(ps.ps_availqty) AS total_avail
    FROM partsupp ps
    GROUP BY ps.ps_partkey, ps.ps_suppkey
),

HighValueCustomers AS (
    SELECT c.c_custkey, c.c_name, c.c_acctbal
    FROM customer c
    WHERE c.c_acctbal > (SELECT AVG(c2.c_acctbal) FROM customer c2)
),

PartDetails AS (
    SELECT p.p_partkey, p.p_name, p.p_retailprice, p.p_comment,
           COALESCE(NULLIF(p.p_comment, ''), 'No comment available') AS processed_comment
    FROM part p
),

NationSupplier AS (
    SELECT n.n_name, s.s_name, COUNT(*) AS num_parts
    FROM nation n
    LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
    LEFT JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY n.n_name, s.s_name
    HAVING COUNT(ps.ps_partkey) > 10
),

FinalResults AS (
    SELECT r.r_name, n.n_name, sp.total_avail, po.total_orders
    FROM region r
    LEFT JOIN nation n ON r.r_regionkey = n.n_regionkey
    LEFT JOIN (
        SELECT o.o_orderkey, COUNT(ol.l_orderkey) AS total_orders
        FROM orders o
        JOIN lineitem ol ON o.o_orderkey = ol.l_orderkey
        GROUP BY o.o_orderkey
    ) po ON po.o_orderkey = (
        SELECT o.o_orderkey
        FROM RankedOrders ro
        WHERE ro.order_rank = 1
        LIMIT 1
    )
    LEFT JOIN SupplierParts sp ON sp.ps_partkey = (
        SELECT p.p_partkey
        FROM PartDetails p
        WHERE processed_comment LIKE '%special%'
        LIMIT 1
    )
)

SELECT DISTINCT f.r_name, f.n_name, f.total_avail, COALESCE(f.total_orders, 0) AS total_orders
FROM FinalResults f
WHERE f.total_avail IS NOT NULL AND (f.total_orders IS NULL OR f.total_orders = 0)
ORDER BY f.r_name, f.n_name;