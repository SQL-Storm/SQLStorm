WITH RECURSIVE OrderHierarchy AS (
    SELECT o_o.orderkey, o_o.custkey, o_o.orderdate, o_o.totalprice, 1 AS level
    FROM orders o_o
    WHERE o_o.orderstatus = 'O' 
      AND o_o.orderdate >= DATE '1997-01-01'
    UNION ALL
    SELECT o_o.orderkey, oh.custkey, o_o.orderdate, o_o.totalprice, oh.level + 1
    FROM orders o_o
    JOIN OrderHierarchy oh ON o_o.custkey = oh.custkey
    WHERE o_o.orderstatus = 'O'
      AND o_o.orderdate > oh.orderdate
)
SELECT
    n.n_name AS nation,
    COUNT(DISTINCT c.c_custkey) AS total_customers,
    SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
    AVG(oh.totalprice) AS average_order_value,
    MAX(SUM(l.l_quantity)) OVER (PARTITION BY n.n_name) AS max_quantities,
    COUNT(DISTINCT CASE WHEN l.l_returnflag = 'R' THEN l.l_orderkey END) AS total_returns
FROM
    customer c
    JOIN nation n ON c.c_nationkey = n.n_nationkey
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    LEFT JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    LEFT JOIN OrderHierarchy oh ON o.o_orderkey = oh.orderkey
WHERE
    o.o_orderdate BETWEEN DATE '1997-01-01' AND DATE '1997-12-31'
GROUP BY
    n.n_name
HAVING
    SUM(l.l_extendedprice * (1 - l.l_discount)) > 10000
ORDER BY
    total_revenue DESC
LIMIT 10;