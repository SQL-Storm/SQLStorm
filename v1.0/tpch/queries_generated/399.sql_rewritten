WITH ranked_orders AS (
    SELECT 
        o.o_orderkey,
        o.o_totalprice,
        ROW_NUMBER() OVER (PARTITION BY o.o_orderstatus ORDER BY o.o_totalprice DESC) AS order_rank
    FROM 
        orders o
    WHERE 
        o.o_orderdate >= DATE '1997-01-01' AND
        o.o_orderdate < DATE '1997-12-31'
),
supplier_info AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_cost
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey, s.s_name
    HAVING 
        SUM(ps.ps_availqty) > 100
),
customer_summary AS (
    SELECT 
        c.c_custkey,
        COUNT(DISTINCT o.o_orderkey) AS order_count,
        AVG(o.o_totalprice) AS avg_order_value
    FROM 
        customer c
    LEFT JOIN 
        orders o ON c.c_custkey = o.o_custkey
    WHERE 
        c.c_acctbal IS NOT NULL
    GROUP BY 
        c.c_custkey
)
SELECT 
    r.o_orderkey,
    COALESCE(cs.order_count, 0) AS customer_order_count,
    COALESCE(cs.avg_order_value, 0) AS avg_order_value,
    si.s_name,
    si.total_supply_cost
FROM 
    ranked_orders r
LEFT JOIN 
    customer_summary cs ON cs.order_count = r.order_rank
LEFT JOIN 
    supplier_info si ON r.o_orderkey IN (SELECT l.l_orderkey FROM lineitem l WHERE l.l_orderkey = r.o_orderkey)
WHERE 
    r.order_rank <= 10
ORDER BY 
    r.o_totalprice DESC
OFFSET 5 ROWS
FETCH NEXT 10 ROWS ONLY;