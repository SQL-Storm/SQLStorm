WITH RankedParts AS (
    SELECT 
        p.p_partkey,
        p.p_name,
        p.p_retailprice,
        RANK() OVER (PARTITION BY p.p_mfgr ORDER BY p.p_retailprice DESC) AS rank_price
    FROM 
        part p
    WHERE 
        p.p_size > 0
),
SupplierInfo AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        s.s_acctbal,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supplycost
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey, s.s_name, s.s_acctbal
),
CustomerOrders AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        SUM(o.o_totalprice) AS total_spent,
        COUNT(DISTINCT o.o_orderkey) AS order_count
    FROM 
        customer c
    LEFT JOIN 
        orders o ON c.c_custkey = o.o_custkey
    WHERE 
        c.c_acctbal IS NOT NULL AND c.c_acctbal > 0
    GROUP BY 
        c.c_custkey, c.c_name
)
SELECT 
    n.n_name AS nation_name,
    COALESCE(SUM(l.l_extendedprice * (1 - l.l_discount)), 0) AS total_revenue,
    COUNT(DISTINCT c.c_custkey) AS customer_count,
    AVG(ci.total_spent) AS avg_customer_spending
FROM 
    nation n
LEFT JOIN 
    customer c ON n.n_nationkey = c.c_nationkey
LEFT JOIN 
    orders o ON c.c_custkey = o.o_custkey
LEFT JOIN 
    lineitem l ON o.o_orderkey = l.l_orderkey
JOIN 
    CustomerOrders ci ON c.c_custkey = ci.c_custkey
WHERE 
    EXISTS (SELECT 1 FROM SupplierInfo si WHERE si.total_supplycost > 10000)
GROUP BY 
    n.n_name
HAVING 
    COUNT(l.l_orderkey) > 0
ORDER BY 
    total_revenue DESC, customer_count DESC
LIMIT 10
OFFSET 5
UNION ALL
SELECT 
    'Total' AS nation_name,
    SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
    COUNT(DISTINCT c.c_custkey) AS customer_count,
    AVG(ci.total_spent) AS avg_customer_spending
FROM 
    nation n
INNER JOIN 
    customer c ON n.n_nationkey = c.c_nationkey
INNER JOIN 
    orders o ON c.c_custkey = o.o_custkey
INNER JOIN 
    lineitem l ON o.o_orderkey = l.l_orderkey
JOIN 
    CustomerOrders ci ON c.c_custkey = ci.c_custkey
WHERE 
    l.l_shipdate < cast('1998-10-01' as date) AND l.l_shipdate > cast('1998-10-01' as date) - INTERVAL '3 month'
  AND 
    l.l_returnflag != 'R'
  AND 
    l.l_linestatus = 'O'
;