WITH RECURSIVE CustomerHierarchy AS (
    SELECT c.c_custkey, c.c_name, c.c_nationkey, c.c_acctbal, 1 AS level
    FROM customer c
    WHERE c.c_acctbal > 1000
    UNION ALL
    SELECT c.c_custkey, c.c_name, c.c_nationkey, c.c_acctbal, ch.level + 1
    FROM customer c
    JOIN CustomerHierarchy ch ON ch.c_custkey = c.c_custkey
    WHERE c.c_acctbal > 1000
), 
AverageSupplyCost AS (
    SELECT ps.partkey, AVG(ps.ps_supplycost) AS avg_supplycost
    FROM partsupp ps
    GROUP BY ps.ps_partkey
),
OrderDetails AS (
    SELECT o.o_orderkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS revenue
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE o.o_orderdate >= DATE '1996-01-01'
      AND o.o_orderdate < DATE '1997-01-01'
    GROUP BY o.o_orderkey
),
HighValueOrders AS (
    SELECT od.o_orderkey, od.revenue
    FROM OrderDetails od
    WHERE od.revenue > 10000
)
SELECT 
    r.r_name AS region_name, 
    n.n_name AS nation_name, 
    s.s_name AS supplier_name, 
    COALESCE(AVG(asc.avg_supplycost), 0) AS average_supply_cost,
    SUM(CASE WHEN hvo.o_orderkey IS NOT NULL THEN od.revenue ELSE 0 END) AS total_revenue
FROM region r
JOIN nation n ON r.r_regionkey = n.n_regionkey
JOIN supplier s ON n.n_nationkey = s.s_nationkey
LEFT JOIN AverageSupplyCost asc ON asc.partkey = (
    SELECT ps.ps_partkey 
    FROM partsupp ps 
    WHERE ps.ps_suppkey = s.s_suppkey 
    ORDER BY ps.ps_availqty DESC 
    LIMIT 1
)
LEFT JOIN HighValueOrders hvo ON hvo.o_orderkey IN (
    SELECT o.o_orderkey 
    FROM orders o 
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey 
    WHERE l.l_shipdate > cast('1998-10-01' as date) - INTERVAL '1 year'
)
JOIN CustomerHierarchy ch ON ch.c_nationkey = n.n_nationkey
GROUP BY r.r_name, n.n_name, s.s_name
ORDER BY total_revenue DESC, region_name;