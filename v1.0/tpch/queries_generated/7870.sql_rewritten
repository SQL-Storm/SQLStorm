WITH SupplierStats AS (
    SELECT
        s.s_suppkey,
        s.s_name,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_cost,
        COUNT(DISTINCT ps.ps_partkey) AS supplied_parts,
        RANK() OVER (ORDER BY SUM(ps.ps_supplycost * ps.ps_availqty) DESC) AS cost_rank
    FROM
        supplier s
    JOIN
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY
        s.s_suppkey, s.s_name
),
RegionSummary AS (
    SELECT
        r.r_regionkey,
        r.r_name,
        COUNT(DISTINCT n.n_nationkey) AS nation_count,
        SUM(COALESCE(c.c_acctbal, 0)) AS total_customer_balance
    FROM
        region r
    JOIN
        nation n ON r.r_regionkey = n.n_regionkey
    JOIN
        customer c ON n.n_nationkey = c.c_nationkey
    GROUP BY
        r.r_regionkey, r.r_name
),
OrderLineItemSummary AS (
    SELECT
        o.o_orderkey,
        o.o_orderstatus,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
        COUNT(l.l_lineitemnumber) AS line_item_count
    FROM
        orders o
    JOIN
        lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE
        o.o_orderdate BETWEEN '1997-01-01' AND '1997-12-31'
    GROUP BY
        o.o_orderkey, o.o_orderstatus
)
SELECT
    rs.r_name,
    ss.s_name,
    ols.o_orderstatus,
    ols.total_revenue,
    rs.total_customer_balance,
    ss.total_supply_cost,
    ss.supplied_parts
FROM
    RegionSummary rs
JOIN
    SupplierStats ss ON rs.nation_count > 1
JOIN
    OrderLineItemSummary ols ON ols.total_revenue > 10000
WHERE
    ss.cost_rank <= 10
ORDER BY
    rs.r_name, ss.total_supply_cost DESC, ols.total_revenue DESC;