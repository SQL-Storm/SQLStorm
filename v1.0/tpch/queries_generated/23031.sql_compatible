
WITH Supplier_Costs AS (
    SELECT ps.s_supplycost, s.s_name, p.p_name, p.p_retailprice,
           ROW_NUMBER() OVER (PARTITION BY s.s_nationkey ORDER BY ps.ps_supplycost DESC) AS supply_rank
    FROM partsupp ps
    JOIN supplier s ON ps.ps_suppkey = s.s_suppkey
    JOIN part p ON ps.ps_partkey = p.p_partkey
),
High_Value_Customers AS (
    SELECT c.c_custkey, c.c_name, SUM(o.o_totalprice) AS total_spent
    FROM customer c
    JOIN orders o ON c.c_custkey = o.o_custkey
    WHERE o.o_orderstatus IN ('F', 'O')
    GROUP BY c.c_custkey, c.c_name
    HAVING SUM(o.o_totalprice) > (
        SELECT AVG(o2.o_totalprice)
        FROM orders o2
    )
),
Indexed_Supplies AS (
    SELECT DISTINCT ps.ps_partkey, ps.ps_suppkey,
           CASE 
               WHEN ps.ps_availqty IS NULL THEN 'Not Available'
               WHEN ps.ps_availqty < 500 THEN 'Low Stock'
               ELSE 'In Stock'
           END AS availability_status
    FROM partsupp ps
    WHERE ps.ps_supplycost < (
        SELECT p.p_retailprice
        FROM part p
        WHERE p.p_size = (SELECT MAX(p2.p_size) FROM part p2)
    )
)
SELECT 
    r.r_name AS region_name,
    COUNT(DISTINCT c.c_custkey) AS high_value_customer_count,
    SUM(COALESCE(hvc.total_spent, 0)) AS total_high_value_spending,
    AVG(sc.supply_rank) AS avg_supply_rank,
    STRING_AGG(DISTINCT s.s_name, ', ') AS suppliers,
    SUM(CASE 
            WHEN l.l_discount > 0.1 THEN 1 
            ELSE 0 
        END) AS discounted_items_count
FROM region r
LEFT JOIN nation n ON r.r_regionkey = n.n_regionkey
LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
LEFT JOIN Supplier_Costs sc ON sc.s_name = s.s_name
LEFT JOIN High_Value_Customers hvc ON hvc.c_custkey IN (
    SELECT c.c_custkey
    FROM customer c
    WHERE c.c_nationkey = n.n_nationkey
)
LEFT JOIN partsupp ps ON ps.ps_suppkey = s.s_suppkey
LEFT JOIN lineitem l ON l.l_suppkey = s.s_suppkey
WHERE (CURRENT_TIMESTAMP IS NULL OR DATE(l.l_shipdate) > DATE('1996-01-01'))
  AND (sc.supply_rank = 1 OR sc.s_supplycost IS NOT NULL)
GROUP BY r.r_name
ORDER BY region_name;
