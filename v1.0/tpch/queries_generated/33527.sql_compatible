
WITH RECURSIVE SupplierHierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_acctbal, 0 AS level
    FROM supplier s
    WHERE s.s_acctbal > (SELECT AVG(s_acctbal) FROM supplier)

    UNION ALL

    SELECT s.s_suppkey, s.s_name, s.s_acctbal, sh.level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.s_nationkey = (SELECT n.n_nationkey FROM nation n WHERE n.n_name = 'FRANCE')
    WHERE s.s_acctbal > sh.s_acctbal
),
CustomerOrderDetails AS (
    SELECT c.c_custkey, c.c_name, COUNT(o.o_orderkey) AS order_count, COALESCE(SUM(o.o_totalprice), 0) AS total_spent
    FROM customer c
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    WHERE c.c_mktsegment = 'BUILDING'
    GROUP BY c.c_custkey, c.c_name
),
PartSupplierData AS (
    SELECT p.p_partkey, p.p_name, SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_cost
    FROM part p
    JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
    WHERE p.p_size > 15 AND p.p_retailprice < 100
    GROUP BY p.p_partkey, p.p_name
)
SELECT DISTINCT c.c_name, COALESCE(c.total_spent, 0) AS total_spent, 
       p.p_name, p.total_supply_cost AS supply_cost, sh.level
FROM CustomerOrderDetails c
JOIN PartSupplierData p ON (c.order_count > 5) OR (p.p_name LIKE 'widget%')
LEFT JOIN SupplierHierarchy sh ON sh.s_suppkey IN 
    (SELECT ps.ps_suppkey FROM partsupp ps 
     WHERE ps.ps_partkey IN 
         (SELECT p.p_partkey FROM part p WHERE p.p_name LIKE 'widget%'))
FULL OUTER JOIN lineitem l ON l.l_orderkey IN 
    (SELECT o.o_orderkey FROM orders o WHERE o.o_orderstatus = 'O')
WHERE (sh.level IS NULL OR sh.level < 2)
ORDER BY total_spent DESC, supply_cost ASC;
