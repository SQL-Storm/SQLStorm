
WITH RECURSIVE NationHierarchy AS (
    SELECT n_regionkey, n_nationkey, n_name, n_comment
    FROM nation
    WHERE n_regionkey IS NOT NULL

    UNION ALL

    SELECT n.regionkey, n.n_nationkey, n.n_name, n.n_comment
    FROM nation n
    INNER JOIN NationHierarchy nh ON n.n_regionkey = nh.n_nationkey
),
SupplierStats AS (
    SELECT s.s_nationkey, COUNT(DISTINCT s.s_suppkey) AS supplier_count,
           SUM(s.s_acctbal) AS total_balance
    FROM supplier s
    GROUP BY s.s_nationkey
),
TopRegions AS (
    SELECT r.r_name, COUNT(DISTINCT n.n_nationkey) AS nation_count
    FROM region r
    LEFT JOIN nation n ON r.r_regionkey = n.n_regionkey
    GROUP BY r.r_name
    ORDER BY nation_count DESC
    LIMIT 5
),
OrderSummary AS (
    SELECT o.o_custkey,
           SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
           COUNT(DISTINCT o.o_orderkey) AS total_orders,
           DENSE_RANK() OVER (ORDER BY SUM(l.l_extendedprice * (1 - l.l_discount)) DESC) AS order_rank
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE o.o_orderdate >= DATE '1997-01-01'
    GROUP BY o.o_custkey
),
CustomerBalance AS (
    SELECT c.c_custkey, c.c_name, c.c_acctbal,
           CASE
               WHEN c.c_acctbal IS NULL THEN 'No Balance'
               WHEN c.c_acctbal < 500 THEN 'Low Balance'
               ELSE 'Sufficient Balance'
           END AS balance_status
    FROM customer c
)
SELECT ns.n_name, ns.n_comment, ps.supplier_count, 
       os.total_orders, os.total_revenue,
       cb.balance_status
FROM NationHierarchy ns
JOIN SupplierStats ps ON ns.n_nationkey = ps.s_nationkey
JOIN OrderSummary os ON ns.n_nationkey = os.o_custkey
JOIN CustomerBalance cb ON os.o_custkey = cb.c_custkey
WHERE ps.total_balance > 10000
AND ns.n_name IN (SELECT n_name FROM NationHierarchy WHERE n_comment IS NOT NULL)
ORDER BY os.total_revenue DESC, ps.supplier_count DESC
LIMIT 10;
