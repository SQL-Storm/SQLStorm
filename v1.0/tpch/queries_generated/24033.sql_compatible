
WITH RankedSuppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        s.s_acctbal,
        RANK() OVER (PARTITION BY n.n_nationkey ORDER BY s.s_acctbal DESC) AS rank
    FROM 
        supplier s
    JOIN 
        nation n ON s.s_nationkey = n.n_nationkey
    WHERE 
        s.s_acctbal IS NOT NULL
), 
CustomerOrders AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        COUNT(o.o_orderkey) AS total_orders,
        SUM(o.o_totalprice) AS total_spent
    FROM 
        customer c
    LEFT JOIN 
        orders o ON c.c_custkey = o.o_custkey
    WHERE 
        c.c_acctbal > (SELECT AVG(c2.c_acctbal) FROM customer c2 WHERE c2.c_nationkey = c.c_nationkey)
    GROUP BY 
        c.c_custkey, c.c_name
), 
LineitemStats AS (
    SELECT 
        l.l_orderkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
        COUNT(l.l_linenumber) AS line_count
    FROM 
        lineitem l
    WHERE 
        l.l_shipdate BETWEEN '1996-01-01' AND '1996-12-31'
    GROUP BY 
        l.l_orderkey
), 
HighValueOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_orderdate,
        COALESCE(ls.total_revenue, 0) AS total_revenue,
        COALESCE(ls.line_count, 0) AS line_count
    FROM 
        orders o
    LEFT JOIN 
        LineitemStats ls ON o.o_orderkey = ls.l_orderkey
    WHERE 
        o.o_totalprice > 1000
    AND 
        o.o_orderstatus IN ('O', 'F')
)

SELECT 
    c.c_name,
    s.s_name AS supplier_name,
    cu.total_orders,
    cu.total_spent,
    hvo.o_orderkey,
    hvo.total_revenue,
    hvo.line_count,
    (SELECT COUNT(DISTINCT ps.ps_partkey) 
     FROM partsupp ps 
     JOIN part p ON ps.ps_partkey = p.p_partkey 
     WHERE ps.ps_supplycost = (SELECT MIN(ps2.ps_supplycost) 
                                FROM partsupp ps2 
                                WHERE ps2.ps_partkey = p.p_partkey)) AS cheapest_part_count
FROM 
    CustomerOrders cu
JOIN 
    RankedSuppliers s ON s.rank = 1
JOIN 
    HighValueOrders hvo ON cu.total_orders > 5
WHERE 
    hvo.total_revenue IS NOT NULL
ORDER BY 
    cu.total_spent DESC, 
    hvo.line_count DESC 
LIMIT 100;
