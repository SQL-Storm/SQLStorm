
WITH RankedParts AS (
    SELECT 
        p.p_partkey,
        p.p_name,
        p.p_brand,
        p.p_retailprice,
        ROW_NUMBER() OVER (PARTITION BY p.p_brand ORDER BY p.p_retailprice DESC) AS rn
    FROM 
        part p
), SupplierAvailability AS (
    SELECT 
        ps.ps_partkey,
        ps.ps_suppkey,
        SUM(ps.ps_availqty) AS total_available
    FROM 
        partsupp ps
    GROUP BY 
        ps.ps_partkey,
        ps.ps_suppkey
), ActiveOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_custkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_order_value
    FROM 
        orders o
    JOIN 
        lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE 
        o.o_orderdate >= DATE '1997-01-01' AND 
        (l.l_returnflag = 'N' OR l.l_returnflag IS NULL)
    GROUP BY 
        o.o_orderkey,
        o.o_custkey
), SuspiciousSuppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        COALESCE(NULLIF(s.s_acctbal, 0), NULL) AS safe_account_balance,
        ROW_NUMBER() OVER (PARTITION BY s.s_nationkey ORDER BY s.s_acctbal DESC) AS supplier_rank
    FROM 
        supplier s
    WHERE 
        s.s_acctbal < 0
)
SELECT 
    r.r_name,
    np.p_name,
    COALESCE(SUM(SA.total_available), 0) AS total_avail,
    AO.total_order_value,
    CASE 
        WHEN AO.total_order_value IS NOT NULL THEN 'Active'
        ELSE 'Inactive'
    END AS order_status
FROM 
    nation n
JOIN 
    region r ON n.n_regionkey = r.r_regionkey
LEFT JOIN 
    RankedParts np ON np.p_partkey IN (
        SELECT ps.ps_partkey 
        FROM SupplierAvailability SA 
        WHERE SA.ps_suppkey IN (
            SELECT s.s_suppkey 
            FROM SuspiciousSuppliers s 
            WHERE s.supplier_rank <= 3
        )
    )
LEFT JOIN 
    ActiveOrders AO ON AO.o_custkey = n.n_nationkey
WHERE 
    n.n_comment LIKE '%successful%'
    AND (np.rn <= 5 OR np.p_retailprice > 1000)
GROUP BY 
    r.r_name, np.p_name, AO.total_order_value
ORDER BY 
    total_avail DESC, 
    r.r_name ASC;
