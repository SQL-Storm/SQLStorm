WITH RankedSuppliers AS (
    SELECT
        s.s_suppkey,
        s.s_name,
        s.s_acctbal,
        RANK() OVER (PARTITION BY n.n_nationkey ORDER BY s.s_acctbal DESC) AS rank
    FROM
        supplier s
    JOIN
        nation n ON s.s_nationkey = n.n_nationkey
    WHERE
        s.s_acctbal IS NOT NULL
),
TotalOrders AS (
    SELECT
        o.o_custkey,
        SUM(o.o_totalprice) AS total_revenue
    FROM
        orders o
    WHERE
        o.o_orderdate >= '1997-01-01'
    GROUP BY
        o.o_custkey
),
PartInfo AS (
    SELECT
        p.p_partkey,
        p.p_mfgr,
        COALESCE(AVG(ps.ps_supplycost), 0) AS avg_supplycost
    FROM
        part p
    LEFT JOIN
        partsupp ps ON p.p_partkey = ps.ps_partkey
    GROUP BY
        p.p_partkey, p.p_mfgr
),
CustomerRank AS (
    SELECT
        c.c_custkey,
        ROW_NUMBER() OVER (ORDER BY c.c_acctbal DESC) AS cust_rank,
        CASE 
            WHEN c.c_mktsegment = 'BUILDING' THEN 'Segment: Building'
            ELSE 'Segment: Other'
        END AS segment_comment
    FROM
        customer c
    WHERE
        c.c_acctbal > 5000
)
SELECT
    pr.p_name,
    COUNT(DISTINCT l.l_orderkey) AS total_orders,
    SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_sales,
    rs.s_name AS highest_supplier,
    tr.total_revenue,
    cr.segment_comment
FROM
    lineitem l
JOIN
    PartInfo pr ON l.l_partkey = pr.p_partkey
LEFT JOIN
    RankedSuppliers rs ON l.l_suppkey = rs.s_suppkey AND rs.rank = 1
JOIN
    TotalOrders tr ON l.l_orderkey IN (SELECT o.o_orderkey FROM orders o WHERE o.o_custkey = tr.o_custkey)
JOIN
    CustomerRank cr ON cr.c_custkey = l.l_orderkey
WHERE
    l.l_shipdate BETWEEN '1997-01-01' AND '1997-12-31' AND
    (l.l_returnflag IS NULL OR l.l_returnflag <> 'R')
GROUP BY
    pr.p_name, rs.s_name, tr.total_revenue, cr.segment_comment
HAVING
    SUM(l.l_extendedprice * (1 - l.l_discount)) > 10000
ORDER BY
    total_sales DESC NULLS LAST;