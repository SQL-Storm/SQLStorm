
WITH RECURSIVE OrderHierarchy AS (
    SELECT o.o_orderkey, o.o_orderdate, c.c_name, c.c_acctbal, 1 AS level
    FROM orders o
    JOIN customer c ON o.o_custkey = c.c_custkey
    WHERE o.o_orderstatus = 'O'
    
    UNION ALL
    
    SELECT oh.o_orderkey, oh.o_orderdate, c.c_name, c.c_acctbal, oh.level + 1
    FROM OrderHierarchy oh
    JOIN orders o ON o.o_custkey = (SELECT c.c_custkey FROM customer c WHERE c.c_name = oh.c_name)
    WHERE o.o_orderdate > (SELECT MAX(o_orderdate) FROM orders WHERE o_custkey = oh.o_orderkey)
)

SELECT 
    p.p_name,
    SUM(l.l_extendedprice * (1 - l.l_discount)) AS revenue,
    AVG(ps.ps_supplycost) AS avg_supply_cost,
    COUNT(DISTINCT oh.o_orderkey) AS order_count,
    RANK() OVER (PARTITION BY p.p_partkey ORDER BY SUM(l.l_extendedprice * (1 - l.l_discount)) DESC) AS revenue_rank
FROM 
    part p
LEFT JOIN 
    lineitem l ON p.p_partkey = l.l_partkey
LEFT JOIN 
    partsupp ps ON p.p_partkey = ps.ps_partkey
LEFT JOIN 
    OrderHierarchy oh ON oh.o_orderkey = l.l_orderkey
WHERE 
    l.l_shipdate BETWEEN DATE '1997-01-01' AND DATE '1997-12-31'
    AND l.l_returnflag = 'R'
GROUP BY 
    p.p_partkey, p.p_name, oh.o_orderkey
HAVING 
    SUM(l.l_extendedprice * (1 - l.l_discount)) > 50000
ORDER BY 
    revenue DESC;
