
WITH SupplierCost AS (
    SELECT ps.partkey, ps.suppkey, SUM(ps.ps_supplycost * ps.ps_availqty) AS total_cost
    FROM partsupp ps
    GROUP BY ps.partkey, ps.suppkey
),
CustomerOrders AS (
    SELECT c.c_custkey, COUNT(o.o_orderkey) AS order_count
    FROM customer c
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    GROUP BY c.c_custkey
),
HighValueSuppliers AS (
    SELECT s.s_suppkey, s.s_name, SUM(sc.total_cost) AS total_supply_cost
    FROM supplier s
    JOIN SupplierCost sc ON s.s_suppkey = sc.suppkey
    GROUP BY s.s_suppkey, s.s_name
    HAVING SUM(sc.total_cost) > 10000
),
PartSupplierInfo AS (
    SELECT p.p_partkey, p.p_name, ps.ps_supplycost, ps.ps_availqty,
           ROW_NUMBER() OVER (PARTITION BY p.p_partkey ORDER BY ps.ps_supplycost) AS rn
    FROM part p
    JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
),
RegionNation AS (
    SELECT r.r_name, n.n_name, COUNT(DISTINCT s.s_suppkey) AS supplier_count
    FROM region r
    JOIN nation n ON r.r_regionkey = n.n_regionkey
    LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
    GROUP BY r.r_name, n.n_name
)
SELECT 
    rni.r_name AS region, 
    rni.n_name AS nation,
    psi.p_name AS part_name, 
    psi.ps_supplycost AS supply_cost,
    psi.ps_availqty AS available_quantity,
    COALESCE(cu.order_count, 0) AS customer_orders,
    hs.total_supply_cost AS high_value_total_cost
FROM PartSupplierInfo psi
LEFT JOIN CustomerOrders cu ON psi.p_partkey = cu.c_custkey
LEFT JOIN RegionNation rni ON rni.supplier_count > 5
LEFT JOIN HighValueSuppliers hs ON hs.s_suppkey = psi.ps_supplycost
WHERE psi.rn = 1 AND (psi.ps_supplycost IS NOT NULL OR psi.ps_availqty > 0)
ORDER BY rni.r_name, rni.n_name, psi.p_name
FETCH FIRST 50 ROWS ONLY;
