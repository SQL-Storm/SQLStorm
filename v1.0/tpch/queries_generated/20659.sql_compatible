
WITH RankedSales AS (
    SELECT 
        p.p_partkey,
        p.p_name,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_sales,
        RANK() OVER (PARTITION BY p.p_partkey ORDER BY SUM(l.l_extendedprice * (1 - l.l_discount)) DESC) AS sales_rank
    FROM 
        part p
    JOIN 
        lineitem l ON p.p_partkey = l.l_partkey
    GROUP BY 
        p.p_partkey, p.p_name
), 
CustomerOrders AS (
    SELECT 
        c.c_custkey,
        COUNT(DISTINCT o.o_orderkey) AS order_count,
        AVG(o.o_totalprice) AS avg_order_value
    FROM 
        customer c
    LEFT JOIN 
        orders o ON c.c_custkey = o.o_custkey
    GROUP BY 
        c.c_custkey
), 
SupplierStats AS (
    SELECT 
        s.s_suppkey,
        SUM(ps.ps_availqty) AS total_available,
        COUNT(DISTINCT ps.ps_partkey) AS unique_parts
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey
)
SELECT 
    r.r_name,
    s.s_name,
    COALESCE(c.order_count, 0) AS customer_order_count,
    COALESCE(c.avg_order_value, 0.00) AS customer_avg_order_value,
    rs.p_name,
    rs.total_sales,
    pt.total_available,
    pt.unique_parts
FROM 
    region r
LEFT JOIN 
    nation n ON r.r_regionkey = n.n_regionkey
LEFT JOIN 
    supplier s ON n.n_nationkey = s.s_nationkey
LEFT JOIN 
    RankedSales rs ON s.s_suppkey IN (SELECT ps.ps_suppkey FROM partsupp ps WHERE ps.ps_partkey = rs.p_partkey)
LEFT JOIN 
    CustomerOrders c ON c.c_custkey = (SELECT c.c_custkey FROM customer c WHERE c.c_name LIKE CONCAT('%', n.n_name, '%') LIMIT 1)
LEFT JOIN 
    SupplierStats pt ON pt.s_suppkey = s.s_suppkey
WHERE 
    (rs.total_sales > 1000 OR pt.unique_parts > 5) AND 
    s.s_acctbal IS NOT NULL
ORDER BY 
    r.r_name, rs.total_sales DESC, pt.total_available DESC;
