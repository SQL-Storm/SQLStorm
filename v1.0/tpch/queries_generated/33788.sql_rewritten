WITH RECURSIVE SupplierHierarchy AS (
    SELECT s_suppkey, s_name, s_nationkey, s_comment, 0 AS Level
    FROM supplier
    WHERE s_suppkey = (SELECT MIN(s_suppkey) FROM supplier)
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_comment, sh.Level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE sh.Level < 5
),
PartPriceSummary AS (
    SELECT p.p_partkey, p.p_name, SUM(ps.ps_supplycost * ps.ps_availqty) AS TotalSupplyCost
    FROM part p
    JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
    GROUP BY p.p_partkey, p.p_name
),
RecentOrderDetails AS (
    SELECT 
        o.o_orderkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS TotalRevenue,
        COUNT(l.l_orderkey) AS LineCount,
        RANK() OVER (PARTITION BY o.o_custkey ORDER BY o.o_orderdate DESC) AS RecentOrderRank
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE o.o_orderdate >= DATEADD(MONTH, -6, cast('1998-10-01' as date))
    GROUP BY o.o_orderkey, o.o_custkey
)
SELECT 
    rh.s_name AS SupplierName,
    rh.s_comment AS SupplierComment,
    p.ps_partkey AS PartKey,
    p.TotalSupplyCost,
    r.od_TotalRevenue,
    r.LineCount
FROM SupplierHierarchy rh
LEFT JOIN PartPriceSummary p ON rh.s_nationkey = (
    SELECT n.n_nationkey FROM nation n WHERE rh.s_nationkey = n.n_nationkey
)
LEFT JOIN RecentOrderDetails r ON r.o_orderkey IN (
    SELECT o.o_orderkey
    FROM orders o
    WHERE o.o_orderstatus = 'O' 
    AND o.o_orderdate >= DATEADD(YEAR, -1, cast('1998-10-01' as date))
)
WHERE rh.Level < 3
ORDER BY TotalSupplyCost DESC, RecentOrderRank 
FETCH FIRST 10 ROWS ONLY;