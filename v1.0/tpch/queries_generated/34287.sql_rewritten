WITH RECURSIVE supplier_hierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, 0 AS level
    FROM supplier s
    WHERE s.s_acctbal > (SELECT AVG(s_acctbal) FROM supplier)
    
    UNION ALL
    
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, sh.level + 1
    FROM supplier_hierarchy sh
    JOIN partsupp ps ON sh.s_suppkey = ps.ps_suppkey
    JOIN part p ON ps.ps_partkey = p.p_partkey
    WHERE p.p_size < 20
),
order_summary AS (
    SELECT o.o_custkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_sales
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE o.o_orderdate BETWEEN '1997-01-01' AND '1997-12-31'
    GROUP BY o.o_custkey
),
nation_supplier AS (
    SELECT n.n_nationkey, n.n_name, SUM(s.s_acctbal) AS total_account_balance
    FROM nation n
    LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
    GROUP BY n.n_nationkey, n.n_name
)
SELECT n.n_name, ns.total_account_balance, os.total_sales, 
       ROW_NUMBER() OVER (PARTITION BY n.n_name ORDER BY os.total_sales DESC) AS sales_rank,
       COUNT(DISTINCT sh.s_suppkey) AS supplier_count,
       CASE 
           WHEN ns.total_account_balance IS NULL THEN 'No Account Balance'
           ELSE 'Has Account Balance' 
       END AS account_description
FROM nation n
LEFT JOIN nation_supplier ns ON n.n_nationkey = ns.n_nationkey
LEFT JOIN order_summary os ON n.n_nationkey = os.o_custkey
LEFT JOIN supplier_hierarchy sh ON sh.s_nationkey = n.n_nationkey
WHERE (ns.total_account_balance IS NOT NULL AND ns.total_account_balance > 10000) OR os.total_sales IS NOT NULL
ORDER BY n.n_name, sales_rank;