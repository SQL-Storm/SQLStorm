
WITH RankedSales AS (
    SELECT
        p.p_partkey,
        p.p_name,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
        RANK() OVER (PARTITION BY p.p_partkey ORDER BY SUM(l.l_extendedprice * (1 - l.l_discount)) DESC) AS revenue_rank
    FROM
        part p
    JOIN
        lineitem l ON p.p_partkey = l.l_partkey
    GROUP BY
        p.p_partkey, p.p_name
),
FilteredSuppliers AS (
    SELECT
        s.s_suppkey,
        s.s_name,
        s.s_acctbal,
        n.n_name,
        ROW_NUMBER() OVER (PARTITION BY n.n_nationkey ORDER BY s.s_acctbal DESC) AS nation_rank
    FROM
        supplier s
    JOIN
        nation n ON s.s_nationkey = n.n_nationkey
    WHERE
        s.s_acctbal > 10000
),
OrderSummary AS (
    SELECT
        o.o_orderkey,
        COUNT(l.l_orderkey) AS lineitem_count,
        SUM(l.l_extendedprice) AS total_lineitem_value,
        AVG(l.l_discount) AS avg_discount
    FROM
        orders o
    LEFT JOIN
        lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE
        o.o_orderstatus = 'O' AND
        (l.l_returnflag IS NULL OR l.l_returnflag <> 'Y')
    GROUP BY
        o.o_orderkey
)
SELECT
    p.p_partkey,
    p.p_name,
    COALESCE(rs.total_revenue, 0) AS total_revenue,
    COALESCE(fs.s_name, 'No Supplier') AS supplier_name,
    COUNT(os.o_orderkey) AS order_count,
    SUM(os.total_lineitem_value) AS total_order_value,
    CASE 
        WHEN COUNT(os.o_orderkey) > 5 THEN 'High Activity'
        ELSE 'Low Activity'
    END AS order_activity_level
FROM
    part p
LEFT JOIN
    RankedSales rs ON p.p_partkey = rs.p_partkey AND rs.revenue_rank = 1
LEFT JOIN
    partsupp ps ON p.p_partkey = ps.ps_partkey
LEFT JOIN
    FilteredSuppliers fs ON ps.ps_suppkey = fs.s_suppkey AND fs.nation_rank = 1
LEFT JOIN
    OrderSummary os ON os.o_orderkey IN (
        SELECT l.l_orderkey
        FROM lineitem l
        WHERE l.l_partkey = p.p_partkey
    )
GROUP BY
    p.p_partkey, p.p_name, fs.s_name, rs.total_revenue
HAVING
    COALESCE(rs.total_revenue, 0) > 0 OR COUNT(os.o_orderkey) > 0
ORDER BY
    total_revenue DESC;
