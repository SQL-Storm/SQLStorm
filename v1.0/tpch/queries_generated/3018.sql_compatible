
WITH RegionalSales AS (
    SELECT 
        r.r_name AS region_name,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_sales,
        COUNT(DISTINCT o.o_orderkey) AS total_orders,
        RANK() OVER (PARTITION BY r.r_name ORDER BY SUM(l.l_extendedprice * (1 - l.l_discount)) DESC) AS sales_rank
    FROM 
        region r
    JOIN 
        nation n ON r.r_regionkey = n.n_regionkey
    JOIN 
        supplier s ON n.n_nationkey = s.s_nationkey  
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    JOIN 
        part p ON ps.ps_partkey = p.p_partkey
    JOIN 
        lineitem l ON p.p_partkey = l.l_partkey
    JOIN 
        orders o ON l.l_orderkey = o.o_orderkey
    WHERE 
        o.o_orderdate BETWEEN '1997-01-01' AND '1997-12-31'
    GROUP BY 
        r.r_name
),
OrderStats AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        COUNT(DISTINCT o.o_orderkey) AS number_of_orders,
        SUM(o.o_totalprice) AS total_spent,
        AVG(o.o_totalprice) AS avg_order_value
    FROM 
        customer c
    LEFT JOIN 
        orders o ON c.c_custkey = o.o_custkey
    GROUP BY 
        c.c_custkey, c.c_name
),
ExtremeCases AS (
    SELECT 
        c.c_name AS customer_name,
        ROW_NUMBER() OVER (ORDER BY total_spent DESC) AS cust_rank,
        total_spent
    FROM 
        OrderStats
)
SELECT 
    rs.region_name,
    ec.customer_name,
    ec.total_spent,
    rs.total_sales,
    CASE 
        WHEN ec.total_spent IS NULL THEN 'No Orders'
        ELSE 'Has Orders'
    END AS order_status
FROM 
    RegionalSales rs
FULL OUTER JOIN 
    ExtremeCases ec ON ec.cust_rank = 1
ORDER BY 
    rs.region_name, ec.total_spent DESC NULLS LAST;
