WITH RankedSuppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        s.s_acctbal,
        ROW_NUMBER() OVER (PARTITION BY n.n_name ORDER BY s.s_acctbal DESC) AS rn
    FROM 
        supplier s
    JOIN 
        nation n ON s.s_nationkey = n.n_nationkey
    WHERE 
        s.s_acctbal IS NOT NULL
),
TotalSales AS (
    SELECT 
        l.l_suppkey, 
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue
    FROM 
        lineitem l
    WHERE 
        l.l_shipdate >= '1997-01-01' 
        AND l.l_shipdate < '1998-01-01'
    GROUP BY 
        l.l_suppkey
),
SupplierSales AS (
    SELECT 
        rs.s_suppkey,
        rs.s_name,
        COALESCE(ts.total_revenue, 0) AS total_revenue
    FROM 
        RankedSuppliers rs
    LEFT JOIN 
        TotalSales ts ON rs.s_suppkey = ts.l_suppkey
    WHERE 
        rs.rn <= 5
)
SELECT 
    ss.s_suppkey,
    ss.s_name,
    ss.total_revenue,
    CASE 
        WHEN ss.total_revenue > 1e4 THEN 'High Revenue'
        WHEN ss.total_revenue BETWEEN 1e3 AND 1e4 THEN 'Medium Revenue'
        ELSE 'Low Revenue'
    END AS revenue_category,
    CONCAT('Supplier ', ss.s_name, ' has a total revenue of ', FORMAT(ss.total_revenue, 2), '.') AS revenue_statement
FROM 
    SupplierSales ss
WHERE 
    ss.total_revenue IS NOT NULL
ORDER BY 
    ss.total_revenue DESC
LIMIT 10
UNION ALL
SELECT 
    -1 AS s_suppkey,
    'Aggregate Total Suppliers Revenue' AS s_name,
    SUM(total_revenue) AS total_revenue,
    CASE 
        WHEN SUM(total_revenue) > 1e4 THEN 'High Revenue'
        WHEN SUM(total_revenue) BETWEEN 1e3 AND 1e4 THEN 'Medium Revenue'
        ELSE 'Low Revenue'
    END AS revenue_category,
    'Total revenue calculation from all suppliers.' AS revenue_statement
FROM 
    SupplierSales
HAVING 
    COUNT(*) > 0;