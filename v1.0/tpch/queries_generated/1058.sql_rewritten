WITH RankedOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_orderdate,
        o.o_totalprice,
        o.o_orderstatus,
        ROW_NUMBER() OVER (PARTITION BY o.o_custkey ORDER BY o.o_orderdate DESC) AS rn
    FROM 
        orders o
),
SupplierSales AS (
    SELECT 
        ps.ps_partkey,
        s.s_name,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_sales
    FROM 
        partsupp ps
    JOIN 
        supplier s ON ps.ps_suppkey = s.s_suppkey
    JOIN 
        lineitem l ON ps.ps_partkey = l.l_partkey
    GROUP BY 
        ps.ps_partkey, s.s_name
),
CustomerStats AS (
    SELECT 
        c.c_custkey,
        COUNT(o.o_orderkey) AS order_count,
        SUM(CASE WHEN o.o_orderstatus = 'F' THEN o.o_totalprice ELSE 0 END) AS total_spent,
        SUM(CASE WHEN o.o_orderstatus = 'P' THEN o.o_totalprice ELSE 0 END) AS pending_spent,
        AVG(o.o_totalprice) AS avg_order_value
    FROM 
        customer c
    LEFT JOIN 
        orders o ON c.c_custkey = o.o_custkey
    GROUP BY 
        c.c_custkey
)
SELECT 
    r.r_name,
    n.n_name,
    c.c_name,
    cs.order_count,
    cs.total_spent,
    cs.pending_spent,
    cs.avg_order_value,
    ss.s_name,
    ss.total_sales
FROM 
    region r
JOIN 
    nation n ON r.r_regionkey = n.n_regionkey
JOIN 
    supplier s ON n.n_nationkey = s.s_nationkey
JOIN 
    CustomerStats cs ON s.s_suppkey = cs.order_count
LEFT JOIN 
    SupplierSales ss ON s.s_suppkey = ss.ps_partkey
WHERE 
    cs.total_spent IS NOT NULL
    AND cs.avg_order_value > (
        SELECT AVG(o_totalprice) FROM orders WHERE o_orderdate >= '1997-01-01'
    )
ORDER BY 
    r.r_name, n.n_name, cs.total_spent DESC;