WITH RECURSIVE supplier_chain AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, 0 AS level
    FROM supplier s
    WHERE s.s_acctbal > (
        SELECT AVG(s_acctbal) FROM supplier WHERE s_name NOT LIKE '%test%'
    )
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, level + 1
    FROM supplier s
    JOIN supplier_chain sc ON s.s_nationkey = sc.s_nationkey
    WHERE s.s_suppkey != sc.s_suppkey
),
order_summary AS (
    SELECT o.o_orderkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE l.l_shipdate > '1995-01-01'
    GROUP BY o.o_orderkey
),
part_cost AS (
    SELECT ps.ps_partkey, SUM(ps.ps_supplycost * ps.ps_availqty) AS total_part_cost
    FROM partsupp ps
    GROUP BY ps.ps_partkey
),
supplier_revenue AS (
    SELECT s.s_suppkey, SUM(ol.total_revenue) AS supplier_revenue
    FROM supplier s
    LEFT JOIN order_summary ol ON EXISTS (
        SELECT 1
        FROM lineitem l
        WHERE l.l_suppkey = s.s_suppkey
          AND l.l_orderkey IN (SELECT o_orderkey FROM orders)
    )
    GROUP BY s.s_suppkey
)
SELECT n.n_name, r.r_name, SUM(sr.supplier_revenue) AS total_supplier_revenue
FROM supplier_revenue sr
JOIN supplier s ON sr.s_suppkey = s.s_suppkey
JOIN nation n ON s.s_nationkey = n.n_nationkey
JOIN region r ON n.n_regionkey = r.r_regionkey
WHERE n.n_name IS NOT NULL
GROUP BY n.n_name, r.r_name
HAVING SUM(sr.supplier_revenue) > (
    SELECT AVG(total_supplier_revenue)
    FROM (
        SELECT SUM(sr.supplier_revenue) AS total_supplier_revenue
        FROM supplier_revenue sr
        JOIN supplier s ON sr.s_suppkey = s.s_suppkey
        JOIN nation n ON s.s_nationkey = n.n_nationkey
        GROUP BY n.n_name
    ) AS avg_revenue
)
ORDER BY total_supplier_revenue DESC
LIMIT 10;