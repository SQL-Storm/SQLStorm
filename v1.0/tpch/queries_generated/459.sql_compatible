
WITH CTE_SupplierInfo AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_cost,
        ROW_NUMBER() OVER (PARTITION BY s.s_nationkey ORDER BY SUM(ps.ps_supplycost * ps.ps_availqty) DESC) AS rank
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY s.s_suppkey, s.s_name, s.s_nationkey
), CTE_CustomerOrders AS (
    SELECT
        c.c_custkey,
        c.c_name,
        COUNT(o.o_orderkey) AS order_count,
        SUM(o.o_totalprice) AS total_spent
    FROM customer c
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    GROUP BY c.c_custkey, c.c_name
),
CTE_SupplierRanked AS (
    SELECT 
        s.s_nationkey,
        s.s_name,
        s.total_supply_cost,
        s.rank
    FROM CTE_SupplierInfo s
    WHERE s.rank <= 5
)
SELECT 
    r.r_name,
    n.n_name,
    c.c_name,
    COALESCE(so.total_supply_cost, 0) AS total_supply_cost,
    COALESCE(so.rank, 0) AS supplier_rank,
    co.order_count,
    co.total_spent
FROM region r
JOIN nation n ON r.r_regionkey = n.n_regionkey
LEFT JOIN CTE_SupplierRanked so ON n.n_nationkey = so.s_nationkey
LEFT JOIN CTE_CustomerOrders co ON n.n_nationkey = co.c_custkey
WHERE (co.total_spent > 5000 OR so.rank IS NOT NULL)
ORDER BY r.r_name, n.n_name, total_supply_cost DESC;
