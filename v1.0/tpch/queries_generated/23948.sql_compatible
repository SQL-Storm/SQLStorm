
WITH RECURSIVE regional_sales AS (
    SELECT
        r.r_regionkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_sales
    FROM
        region r
    JOIN nation n ON r.r_regionkey = n.n_regionkey
    JOIN supplier s ON n.n_nationkey = s.s_nationkey
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    JOIN part p ON ps.ps_partkey = p.p_partkey
    JOIN lineitem l ON p.p_partkey = l.l_partkey
    JOIN orders o ON l.l_orderkey = o.o_orderkey
    WHERE
        o.o_orderdate >= DATE '1995-01-01' AND o.o_orderdate < DATE '1996-01-01'
    GROUP BY
        r.r_regionkey
    UNION ALL
    SELECT
        r.r_regionkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) + rs.total_sales 
    FROM
        regional_sales rs
    JOIN region r ON r.r_regionkey = rs.r_regionkey
    JOIN nation n ON r.r_regionkey = n.n_regionkey
    JOIN supplier s ON n.n_nationkey = s.s_nationkey
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    JOIN part p ON ps.ps_partkey = p.p_partkey
    JOIN lineitem l ON p.p_partkey = l.l_partkey
    JOIN orders o ON l.l_orderkey = o.o_orderkey
    WHERE
        o.o_orderdate >= DATE '1996-01-01'
    GROUP BY
        r.r_regionkey, rs.total_sales
),
sales_summary AS (
    SELECT
        RANK() OVER (ORDER BY total_sales DESC) AS rank,
        r.r_name AS region_name,
        rs.total_sales
    FROM
        regional_sales rs
    JOIN region r ON r.r_regionkey = rs.r_regionkey
)
SELECT 
    ss.rank,
    ss.region_name,
    COALESCE(ss.total_sales, 0) AS total_sales,
    CASE 
        WHEN ss.rank <= 5 THEN 'Top 5 Region'
        WHEN ss.rank <= 10 THEN 'Next 5 Regions'
        ELSE 'Others'
    END AS sales_category
FROM 
    sales_summary ss
FULL OUTER JOIN region r ON ss.region_name = r.r_name
WHERE 
    r.r_name IS NULL OR ss.total_sales > 0
ORDER BY 
    ss.rank;
