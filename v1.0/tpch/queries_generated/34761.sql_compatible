
WITH RECURSIVE supplier_hierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, 1 AS level
    FROM supplier s
    WHERE s.s_acctbal > 1000

    UNION ALL

    SELECT s.s_suppkey, s.s_name, s.s_nationkey, sh.level + 1
    FROM supplier s
    JOIN supplier_hierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE s.s_acctbal > 5000
), 
order_summary AS (
    SELECT o.o_orderkey, o.o_orderdate, 
           SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_sales,
           COUNT(DISTINCT l.l_orderkey) AS total_orders
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE l.l_shipdate > '1997-01-01'
    GROUP BY o.o_orderkey, o.o_orderdate
),
top_customers AS (
    SELECT c.c_custkey, c.c_name, SUM(o.o_totalprice) AS total_spent
    FROM customer c
    JOIN orders o ON c.c_custkey = o.o_custkey
    GROUP BY c.c_custkey, c.c_name
    HAVING SUM(o.o_totalprice) > 20000
)
SELECT p.p_name, 
       p.p_retailprice, 
       COALESCE(s.s_name, 'Unknown Supplier') AS supplier_name,
       ns.n_name AS nation_name,
       os.total_sales, 
       os.total_orders,
       ROW_NUMBER() OVER (PARTITION BY ns.n_nationkey ORDER BY os.total_sales DESC) AS sales_rank
FROM part p
LEFT JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
LEFT JOIN supplier_hierarchy sh ON ps.ps_suppkey = sh.s_suppkey
LEFT JOIN nation ns ON sh.s_nationkey = ns.n_nationkey
LEFT JOIN order_summary os ON os.o_orderkey IN (
    SELECT o.o_orderkey
    FROM orders o
    JOIN top_customers tc ON o.o_custkey = tc.c_custkey
    WHERE o.o_orderstatus = 'O'
)
WHERE p.p_size BETWEEN 10 AND 20
AND (p.p_comment IS NULL OR p.p_comment LIKE '%fragile%')
ORDER BY os.total_sales DESC, p.p_name;
