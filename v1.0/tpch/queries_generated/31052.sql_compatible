
WITH RECURSIVE SupplierHierarchy AS (
    SELECT s_suppkey, s_name, s_nationkey, s_acctbal, 1 AS level
    FROM supplier
    WHERE s_acctbal > 300.00
    
    UNION ALL
    
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal, sh.level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE sh.level < 5
),
RankedOrders AS (
    SELECT o.customer_id, COUNT(o.o_orderkey) AS order_count,
           SUM(o.o_totalprice) AS total_spent,
           RANK() OVER (PARTITION BY o.customer_id ORDER BY SUM(o.o_totalprice) DESC) AS order_rank
    FROM orders o
    GROUP BY o.customer_id
),
SupplierStats AS (
    SELECT ps.ps_partkey, ps.ps_suppkey, SUM(ps.ps_availqty) AS total_avail_qty,
           AVG(ps.ps_supplycost) AS avg_supply_cost,
           MIN(ps.ps_supplycost) AS min_supply_cost,
           MAX(ps.ps_supplycost) AS max_supply_cost
    FROM partsupp ps
    JOIN supplier s ON ps.ps_suppkey = s.s_suppkey
    WHERE s.s_acctbal IS NOT NULL
    GROUP BY ps.ps_partkey, ps.ps_suppkey
)
SELECT DISTINCT p.p_name, 
       r.r_name,
       COALESCE(ss.total_avail_qty, 0) AS available_quantity,
       COALESCE(rl.total_spent, 0) AS total_spent_by_customer,
       CONCAT('Supplier: ', s.s_name, ', Account Balance: ', s.s_acctbal) AS supplier_info,
       CASE 
           WHEN rl.order_rank = 1 THEN 'Top Spender'
           ELSE 'Regular Spender'
       END AS customer_category
FROM part p
LEFT JOIN SupplierStats ss ON p.p_partkey = ss.ps_partkey
JOIN region r ON r.r_regionkey = (
    SELECT n.n_regionkey FROM nation n 
    WHERE n.n_nationkey = (
        SELECT s.s_nationkey FROM supplier s WHERE s.s_suppkey = ss.ps_suppkey
    )
)
LEFT JOIN RankedOrders rl ON rl.customer_id = (
    SELECT o.o_custkey FROM orders o
    WHERE o.o_orderkey = (
        SELECT MIN(o2.o_orderkey) FROM orders o2
        WHERE o2.o_orderstatus = 'O'
    )
)
JOIN supplier s ON ss.ps_suppkey = s.s_suppkey
WHERE p.p_retailprice > (
    SELECT AVG(p2.p_retailprice) FROM part p2
) 
AND s.s_acctbal IS NOT NULL
ORDER BY p.p_name, r.r_name;
