
WITH RECURSIVE supplier_hierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, 1 AS level
    FROM supplier s
    WHERE s.s_acctbal > 3000
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, sh.level + 1
    FROM supplier s 
    JOIN supplier_hierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE sh.level < 5
),
avg_order_value AS (
    SELECT o.o_custkey, AVG(o.o_totalprice) AS avg_price
    FROM orders o
    WHERE o.o_orderstatus = 'O'
    GROUP BY o.o_custkey
),
part_supplier AS (
    SELECT ps.ps_partkey, SUM(ps.ps_availqty) AS total_availability 
    FROM partsupp ps
    JOIN supplier s ON ps.ps_suppkey = s.s_suppkey
    WHERE s.s_acctbal IS NOT NULL
    GROUP BY ps.ps_partkey
)
SELECT 
    p.p_partkey,
    p.p_name,
    p.p_retailprice,
    ps.total_availability,
    COALESCE(a.avg_price, 0) AS avg_order_price,
    CASE 
        WHEN ps.total_availability IS NULL THEN 'Out of stock' 
        ELSE 'In stock' 
    END AS stock_status,
    RANK() OVER (PARTITION BY p.p_type ORDER BY p.p_retailprice DESC) AS price_rank
FROM 
    part p
LEFT JOIN 
    part_supplier ps ON p.p_partkey = ps.ps_partkey
LEFT JOIN 
    avg_order_value a ON p.p_partkey IN (SELECT l.l_partkey FROM lineitem l WHERE l.l_orderkey IN (SELECT o.o_orderkey FROM orders o WHERE o.o_custkey = a.o_custkey))
LEFT JOIN 
    supplier_hierarchy sh ON sh.s_nationkey = (SELECT n.n_nationkey FROM nation n WHERE n.n_name = 'USA')
WHERE 
    p.p_size > 15 AND 
    (p.p_brand LIKE 'Brand%') 
GROUP BY 
    p.p_partkey, 
    p.p_name, 
    p.p_retailprice, 
    ps.total_availability, 
    a.avg_price, 
    p.p_type, 
    stock_status
ORDER BY 
    p.p_retailprice DESC, 
    stock_status;
