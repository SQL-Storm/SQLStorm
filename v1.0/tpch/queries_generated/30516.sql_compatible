
WITH RECURSIVE SupplierRank AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        s.s_acctbal,
        ROW_NUMBER() OVER (PARTITION BY n.n_regionkey ORDER BY s.s_acctbal DESC) AS rnk
    FROM 
        supplier s
    JOIN 
        nation n ON s.s_nationkey = n.n_nationkey
),
CustomerOrders AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        COUNT(o.o_orderkey) AS order_count,
        SUM(o.o_totalprice) AS total_spent
    FROM 
        customer c
    LEFT JOIN 
        orders o ON c.c_custkey = o.o_custkey
    GROUP BY 
        c.c_custkey, c.c_name
),
HighValueCustomers AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        c.order_count,
        c.total_spent,
        CASE 
            WHEN c.total_spent > 10000 THEN 'High Value'
            WHEN c.total_spent BETWEEN 5000 AND 10000 THEN 'Medium Value'
            ELSE 'Low Value'
        END AS customer_value
    FROM 
        CustomerOrders c
    WHERE 
        c.order_count > 5
),
PartSuppliers AS (
    SELECT 
        p.p_partkey,
        p.p_name,
        COUNT(DISTINCT ps.ps_suppkey) AS supplier_count
    FROM 
        part p
    JOIN 
        partsupp ps ON p.p_partkey = ps.ps_partkey
    GROUP BY 
        p.p_partkey, p.p_name
)
SELECT 
    r.r_name AS region,
    s.s_name AS supplier_name,
    COALESCE(hvc.c_name, 'No High Value Customers') AS high_value_customer,
    ps.p_name AS part_name,
    ps.supplier_count,
    SUM(ps.supplier_count) OVER (PARTITION BY r.r_name) AS total_part_suppliers_in_region
FROM 
    region r
LEFT JOIN 
    nation n ON r.r_regionkey = n.n_regionkey
LEFT JOIN 
    SupplierRank s ON n.n_nationkey = s.s_nationkey AND s.rnk <= 3
LEFT JOIN 
    HighValueCustomers hvc ON s.s_name = hvc.c_name
JOIN 
    PartSuppliers ps ON s.s_suppkey = ps.p_partkey
WHERE 
    ps.supplier_count > 1
ORDER BY 
    r.r_name, total_part_suppliers_in_region DESC;
