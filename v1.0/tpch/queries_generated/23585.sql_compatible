
WITH RecursiveSupplier AS (
    SELECT s_suppkey, s_name, s_nationkey, s_acctbal, 1 AS level
    FROM supplier
    WHERE s_acctbal IS NOT NULL AND s_acctbal > (SELECT AVG(s_acctbal) FROM supplier)
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal, rs.level + 1
    FROM supplier s
    JOIN RecursiveSupplier rs ON s.s_nationkey = rs.s_nationkey
    WHERE rs.level < 3
), PartAvg AS (
    SELECT ps.partkey, AVG(ps.ps_supplycost) AS avg_supplycost
    FROM partsupp ps
    JOIN part p ON ps.ps_partkey = p.p_partkey
    GROUP BY ps.partkey
), OrderAnalysis AS (
    SELECT o.o_orderkey, COUNT(l.l_orderkey) AS lineitem_count, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue
    FROM orders o
    LEFT JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    GROUP BY o.o_orderkey
), NationStats AS (
    SELECT n.n_nationkey, n.n_name, COUNT(DISTINCT s.s_suppkey) AS supplier_count, SUM(s.s_acctbal) AS total_acctbal
    FROM nation n
    LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
    GROUP BY n.n_nationkey, n.n_name
)
SELECT 
    r.r_name,
    p.p_name,
    ns.supplier_count,
    CASE 
        WHEN oa.total_revenue IS NULL THEN 'No Revenue'
        ELSE CAST(oa.total_revenue AS VARCHAR(50))
    END AS revenue_info,
    RANK() OVER (PARTITION BY r.r_regionkey ORDER BY ns.total_acctbal DESC) AS rank_per_region,
    COALESCE(pa.avg_supplycost, 0) AS avg_supply_cost,
    CASE 
        WHEN EXISTS (SELECT 1 FROM RecursiveSupplier rs WHERE rs.s_nationkey = n.n_nationkey AND rs.level > 1) 
        THEN 'Multiple Levels Found'
        ELSE 'Single Level or None'
    END AS supplier_level_info
FROM region r
JOIN nation n ON n.n_regionkey = r.r_regionkey
LEFT JOIN NationStats ns ON n.n_nationkey = ns.n_nationkey
LEFT JOIN PartAvg pa ON pa.partkey = (SELECT ps.ps_partkey FROM partsupp ps WHERE ps.ps_availqty > 100 ORDER BY ps.ps_supplycost LIMIT 1)
LEFT JOIN OrderAnalysis oa ON oa.o_orderkey = (SELECT MIN(o.o_orderkey) FROM orders o WHERE o.o_orderstatus = 'O')
JOIN part p ON p.p_partkey = pa.partkey
GROUP BY r.r_name, p.p_name, ns.supplier_count, oa.total_revenue, pa.avg_supplycost, r.r_regionkey
ORDER BY r.r_name, p.p_name;
