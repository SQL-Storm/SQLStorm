WITH RECURSIVE sales_summary AS (
    SELECT 
        c.c_custkey,
        SUM(o.o_totalprice) AS total_sales,
        COUNT(o.o_orderkey) AS order_count,
        RANK() OVER (PARTITION BY c.c_nationkey ORDER BY SUM(o.o_totalprice) DESC) AS sales_rank
    FROM 
        customer c
    LEFT JOIN 
        orders o ON c.c_custkey = o.o_custkey
    WHERE 
        o.o_orderdate >= DATE '1997-01-01'
    GROUP BY 
        c.c_custkey
),
supplier_info AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        p.p_partkey,
        SUM(ps.ps_availqty) AS total_avail_qty,
        AVG(ps.ps_supplycost) AS avg_supply_cost
    FROM 
        supplier s
    INNER JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    INNER JOIN 
        part p ON ps.ps_partkey = p.p_partkey
    GROUP BY 
        s.s_suppkey, s.s_name, p.p_partkey
),
nation_sales AS (
    SELECT 
        n.n_nationkey,
        SUM(ss.total_sales) AS nation_total_sales,
        COUNT(*) AS customer_count
    FROM 
        nation n
    LEFT JOIN 
        sales_summary ss ON ss.c_custkey IN (SELECT c.c_custkey FROM customer c WHERE c.c_nationkey = n.n_nationkey)
    GROUP BY 
        n.n_nationkey
)
SELECT 
    r.r_name,
    ns.nation_total_sales,
    ns.customer_count,
    si.total_avail_qty,
    si.avg_supply_cost
FROM 
    region r
LEFT JOIN 
    nation n ON r.r_regionkey = n.n_regionkey
LEFT JOIN 
    nation_sales ns ON n.n_nationkey = ns.n_nationkey
LEFT JOIN 
    supplier_info si ON si.p_partkey IN (SELECT p.p_partkey FROM part p WHERE p.p_mfgr = 'Manufacturer A')
WHERE 
    ns.nation_total_sales IS NOT NULL
ORDER BY 
    ns.nation_total_sales DESC, ns.customer_count ASC
LIMIT 10;