
WITH RankedOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_orderdate,
        o.o_totalprice,
        ROW_NUMBER() OVER (PARTITION BY o.o_custkey ORDER BY o.o_orderdate DESC) AS rn
    FROM orders o
),
SupplierParts AS (
    SELECT 
        ps.ps_partkey,
        ps.ps_suppkey,
        ps.ps_availqty,
        SUM(ps.ps_supplycost) OVER (PARTITION BY ps.ps_partkey) AS total_supply_cost
    FROM partsupp ps
),
CustomerNation AS (
    SELECT 
        c.c_custkey, 
        c.c_name,
        n.n_name AS nation_name,
        COUNT(o.o_orderkey) AS order_count
    FROM customer c
    JOIN nation n ON c.c_nationkey = n.n_nationkey
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    GROUP BY c.c_custkey, c.c_name, n.n_name
)
SELECT 
    p.p_name,
    p.p_brand,
    SUM(li.l_extendedprice * (1 - li.l_discount)) AS revenue,
    cn.nation_name,
    cn.order_count,
    CASE 
        WHEN SUM(li.l_extendedprice * (1 - li.l_discount)) > 10000 THEN 'High Revenue'
        ELSE 'Low Revenue'
    END AS revenue_category,
    RANK() OVER (PARTITION BY cn.nation_name ORDER BY SUM(li.l_extendedprice * (1 - li.l_discount)) DESC) AS revenue_rank
FROM lineitem li
JOIN RankedOrders ro ON li.l_orderkey = ro.o_orderkey
JOIN SupplierParts sp ON li.l_partkey = sp.ps_partkey
JOIN CustomerNation cn ON ro.o_custkey = cn.c_custkey
JOIN part p ON li.l_partkey = p.p_partkey
WHERE li.l_shipdate < DATE '1997-01-01' 
AND (li.l_returnflag IS NULL OR li.l_returnflag = 'N')
GROUP BY p.p_name, p.p_brand, cn.nation_name, cn.order_count
ORDER BY revenue DESC;
