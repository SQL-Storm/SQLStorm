
WITH RankedSuppliers AS (
    SELECT 
        s.s_suppkey, 
        s.s_name, 
        n.n_name AS nation_name, 
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_cost,
        DENSE_RANK() OVER (PARTITION BY n.n_regionkey ORDER BY SUM(ps.ps_supplycost * ps.ps_availqty) DESC) AS rnk
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    JOIN 
        nation n ON s.s_nationkey = n.n_nationkey
    GROUP BY 
        s.s_suppkey, s.s_name, n.n_name, n.n_regionkey
),
TopSuppliers AS (
    SELECT 
        r.s_suppkey, 
        r.s_name, 
        rg.r_region_name, 
        r.total_supply_cost
    FROM 
        RankedSuppliers r
    JOIN 
        region rg ON rg.r_regionkey = r.n_regionkey
    WHERE 
        r.rnk <= 5
),
CustomerOrders AS (
    SELECT 
        c.c_custkey, 
        c.c_name, 
        SUM(o.o_totalprice) AS total_order_value
    FROM 
        customer c
    JOIN 
        orders o ON c.c_custkey = o.o_custkey
    GROUP BY 
        c.c_custkey, c.c_name
)
SELECT 
    co.c_name AS customer_name, 
    COUNT(DISTINCT o.o_orderkey) AS order_count, 
    SUM(o.o_totalprice) AS total_spent,
    ts.total_supply_cost
FROM 
    CustomerOrders co
JOIN 
    orders o ON co.c_custkey = o.o_custkey
JOIN 
    TopSuppliers ts ON ts.s_suppkey = o.o_orderkey
GROUP BY 
    co.c_name, ts.total_supply_cost
HAVING 
    SUM(o.o_totalprice) > 10000
ORDER BY 
    total_spent DESC;
