WITH RECURSIVE supplier_hierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_acctbal, 1 AS level
    FROM supplier s
    WHERE s.s_acctbal > 10000
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_acctbal, sh.level + 1
    FROM supplier s
    JOIN supplier_hierarchy sh ON s.s_suppkey = sh.s_suppkey  
),
customer_summary AS (
    SELECT c.c_custkey, c.c_name, SUM(o.o_totalprice) AS total_spent
    FROM customer c
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    GROUP BY c.c_custkey, c.c_name
),
avg_part_price AS (
    SELECT AVG(p.p_retailprice) AS avg_price
    FROM part p
),
nation_count AS (
    SELECT n.n_name, COUNT(n.n_nationkey) AS nation_count
    FROM nation n
    GROUP BY n.n_name
)
SELECT 
    ns.n_name, 
    COUNT(DISTINCT ns.n_nationkey) AS total_nations,
    (SELECT AVG(total_spent) FROM customer_summary) AS avg_customer_spent,
    (SELECT SUM(ps.ps_supplycost * ps.ps_availqty) 
     FROM partsupp ps 
     JOIN part p ON ps.ps_partkey = p.p_partkey 
     WHERE p.p_brand = 'Brand#45') AS total_supply_cost,
    ROW_NUMBER() OVER (PARTITION BY ns.n_name ORDER BY ns.n_name) AS rn
FROM nation_count ns
LEFT JOIN supplier_hierarchy sh ON sh.s_suppkey IN (SELECT ps.ps_suppkey FROM partsupp ps)  
WHERE ns.nation_count > (SELECT AVG(nation_count) FROM nation_count) 
    AND sh.level IS NOT NULL
GROUP BY ns.n_name
ORDER BY ns.n_name DESC
LIMIT 10;