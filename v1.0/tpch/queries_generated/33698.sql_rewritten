WITH RECURSIVE OrderHierarchy AS (
    SELECT o.o_orderkey, o.o_orderdate, o.o_totalprice, 0 AS depth
    FROM orders o
    WHERE o.o_orderdate >= '1997-01-01'
    
    UNION ALL
    
    SELECT o.o_orderkey, o.o_orderdate, o.o_totalprice, oh.depth + 1
    FROM orders o
    INNER JOIN OrderHierarchy oh ON o.o_orderkey = oh.o_orderkey
    WHERE o.o_orderdate < '1997-12-31' AND oh.depth < 5
),
SupplierParts AS (
    SELECT ps.ps_partkey, SUM(ps.ps_availqty) AS total_avail_qty, SUM(ps.ps_supplycost) AS total_supply_cost
    FROM partsupp ps
    GROUP BY ps.ps_partkey
),
CustomerOrders AS (
    SELECT c.c_custkey, c.c_name, SUM(o.o_totalprice) AS total_spent
    FROM customer c
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    WHERE o.o_orderstatus = 'O'
    GROUP BY c.c_custkey, c.c_name
),
TopSuppliers AS (
    SELECT s.s_suppkey, s.s_name, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_sales
    FROM supplier s
    JOIN lineitem l ON s.s_suppkey = l.l_suppkey
    WHERE l.l_shipdate BETWEEN '1997-01-01' AND '1997-12-31'
    GROUP BY s.s_suppkey, s.s_name
    ORDER BY total_sales DESC
    LIMIT 5
)
SELECT 
    ph.p_name,
    ph.p_mfgr,
    ph.p_retailprice,
    COALESCE(s.total_avail_qty, 0) AS total_available_quantity,
    COALESCE(c.total_spent, 0) AS customer_spending,
    ts.total_sales AS supplier_sales
FROM part ph
LEFT JOIN SupplierParts s ON ph.p_partkey = s.ps_partkey
LEFT JOIN CustomerOrders c ON c.total_spent > 0
LEFT JOIN TopSuppliers ts ON ts.s_suppkey IN (
    SELECT ps.ps_suppkey
    FROM partsupp ps
    WHERE ps.ps_partkey = ph.p_partkey
)
WHERE ph.p_size > 10
AND ph.p_retailprice > (
    SELECT AVG(p2.p_retailprice) 
    FROM part p2
    WHERE p2.p_type = ph.p_type
)
ORDER BY ph.p_retailprice DESC
LIMIT 100;