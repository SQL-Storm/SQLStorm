
WITH RECURSIVE OrderHierarchy AS (
    SELECT 
        o.o_orderkey,
        o.o_custkey,
        o.o_orderdate,
        o.o_totalprice,
        1 AS level
    FROM 
        orders o
    WHERE 
        o.o_orderstatus = 'O'
      
    UNION ALL

    SELECT 
        o.o_orderkey,
        o.o_custkey,
        o.o_orderdate,
        o.o_totalprice,
        oh.level + 1
    FROM 
        orders o
    INNER JOIN 
        OrderHierarchy oh ON o.o_custkey = oh.o_custkey 
    WHERE 
        o.o_orderdate > oh.o_orderdate
),
RankedCustomers AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        SUM(o.o_totalprice) AS total_spent,
        RANK() OVER (ORDER BY SUM(o.o_totalprice) DESC) AS rank
    FROM 
        customer c
    LEFT JOIN 
        orders o ON c.c_custkey = o.o_custkey
    GROUP BY 
        c.c_custkey, c.c_name
),
PartSupplierStats AS (
    SELECT 
        p.p_partkey,
        p.p_name,
        COUNT(DISTINCT ps.ps_suppkey) AS supplier_count,
        AVG(ps.ps_supplycost) AS avg_supply_cost,
        SUM(ps.ps_availqty) AS total_avail_qty
    FROM 
        part p
    JOIN 
        partsupp ps ON p.p_partkey = ps.ps_partkey
    GROUP BY 
        p.p_partkey, p.p_name
)

SELECT 
    r.c_name,
    r.total_spent,
    p.p_name,
    ps.supplier_count,
    ps.avg_supply_cost,
    ps.total_avail_qty,
    CASE
        WHEN r.total_spent > 10000 THEN 'High spender'
        WHEN r.total_spent BETWEEN 5000 AND 10000 THEN 'Medium spender'
        ELSE 'Low spender'
    END AS spender_category,
    ROW_NUMBER() OVER (PARTITION BY CASE
                                        WHEN r.total_spent > 10000 THEN 'High spender'
                                        WHEN r.total_spent BETWEEN 5000 AND 10000 THEN 'Medium spender'
                                        ELSE 'Low spender'
                                    END ORDER BY r.total_spent DESC) AS spender_rank
FROM 
    RankedCustomers r
LEFT JOIN 
    OrderHierarchy oh ON r.c_custkey = oh.o_custkey
INNER JOIN 
    PartSupplierStats ps ON ps.p_partkey IN 
        (SELECT l.l_partkey
         FROM lineitem l
         WHERE l.l_orderkey IN (SELECT oh.o_orderkey FROM OrderHierarchy)
        )
ORDER BY 
    r.total_spent DESC, 
    ps.avg_supply_cost ASC
FETCH FIRST 100 ROWS ONLY;
