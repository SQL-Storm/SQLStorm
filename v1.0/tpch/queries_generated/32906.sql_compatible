
WITH RECURSIVE nation_hierarchy AS (
    SELECT n_nationkey, n_name, n_regionkey, 1 AS level
    FROM nation
    WHERE n_regionkey IS NOT NULL
    UNION ALL
    SELECT n.n_nationkey, n.n_name, n.n_regionkey, nh.level + 1
    FROM nation n
    JOIN nation_hierarchy nh ON n.n_regionkey = nh.n_nationkey
),
supplier_summary AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_cost,
        COUNT(DISTINCT ps.ps_partkey) AS part_count
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY s.s_suppkey, s.s_name
),
lineitem_totals AS (
    SELECT 
        o.o_orderkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_price,
        COUNT(l.l_linenumber) AS item_count,
        ROW_NUMBER() OVER (PARTITION BY o.o_orderkey ORDER BY SUM(l.l_extendedprice * (1 - l.l_discount)) DESC) AS price_rank
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE o.o_orderstatus = 'O'
    GROUP BY o.o_orderkey
)
SELECT 
    r.r_name AS region_name,
    n.n_name AS nation_name,
    s.s_name AS supplier_name,
    ss.total_supply_cost,
    lt.total_price,
    lt.item_count,
    MAX(lt.total_price) OVER (PARTITION BY r.r_name) AS max_order_price_in_region,
    (CASE 
        WHEN ss.total_supply_cost IS NULL THEN 'No supply cost' 
        ELSE 'Has supply cost' 
    END) AS supply_cost_status
FROM region r
LEFT JOIN nation n ON r.r_regionkey = n.n_regionkey
LEFT JOIN supplier_summary ss ON n.n_nationkey = ss.s_suppkey
LEFT JOIN lineitem_totals lt ON ss.s_suppkey = lt.o_orderkey
WHERE ss.total_supply_cost IS NOT NULL
  AND (lt.total_price > (SELECT AVG(total_price) FROM lineitem_totals) OR lt.item_count > 5)
GROUP BY r.r_name, n.n_name, s.s_name, ss.total_supply_cost, lt.total_price, lt.item_count
ORDER BY region_name, nation_name, supplier_name;
