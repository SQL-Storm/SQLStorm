
WITH RECURSIVE supplier_hierarchy AS (
    SELECT s_suppkey, s_nationkey, s_name, s_acctbal,
           CAST(s_name AS VARCHAR(100)) AS hierarchy_path
    FROM supplier
    WHERE s_acctbal > (SELECT AVG(s_acctbal) FROM supplier)

    UNION ALL

    SELECT sp.s_suppkey, sp.s_nationkey, sp.s_name, sp.s_acctbal,
           CONCAT(sh.hierarchy_path, ' -> ', sp.s_name)
    FROM supplier sp
    JOIN supplier_hierarchy sh ON sp.s_nationkey = sh.s_nationkey
    WHERE sp.s_acctbal < sh.s_acctbal
),
high_value_parts AS (
    SELECT p.p_partkey, p.p_name, p.p_retailprice,
           RANK() OVER (PARTITION BY p.p_type ORDER BY p.p_retailprice DESC) AS price_rank
    FROM part p
    WHERE p.p_retailprice > (
        SELECT AVG(p2.p_retailprice) FROM part p2 WHERE p2.p_size > 10
    )
),
customer_orders AS (
    SELECT c.c_custkey, c.c_name, COUNT(o.o_orderkey) AS order_count
    FROM customer c
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    GROUP BY c.c_custkey, c.c_name
),
order_summary AS (
    SELECT o.o_orderkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE l.l_shipdate >= DATE '1997-01-01' AND l.l_shipdate <= DATE '1997-12-31'
    GROUP BY o.o_orderkey
)
SELECT r.r_name, COUNT(DISTINCT nh.n_nationkey) AS nation_count,
       SUM(CASE WHEN hvp.price_rank <= 5 THEN hvp.p_retailprice END) AS high_value_sum,
       AVG(co.order_count) AS avg_orders,
       COUNT(DISTINCT sv.s_suppkey) AS supplier_count
FROM region r
LEFT JOIN nation nh ON r.r_regionkey = nh.n_regionkey
LEFT JOIN high_value_parts hvp ON r.r_name = hvp.p_name
LEFT JOIN customer_orders co ON co.order_count > 0
LEFT JOIN supplier_hierarchy sv ON nh.n_nationkey = sv.s_nationkey
GROUP BY r.r_name
HAVING SUM(COALESCE(hvp.p_retailprice, 0)) > 1000
ORDER BY nation_count DESC, high_value_sum DESC;
