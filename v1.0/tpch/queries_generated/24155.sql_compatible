
WITH RankedSuppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        RANK() OVER (PARTITION BY s.s_nationkey ORDER BY s.s_acctbal DESC) AS rank_acctbal
    FROM 
        supplier s
),
CustomerOrders AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        COUNT(o.o_orderkey) AS order_count,
        SUM(o.o_totalprice) AS total_spent
    FROM 
        customer c
    LEFT JOIN 
        orders o ON c.c_custkey = o.o_custkey
    GROUP BY 
        c.c_custkey, c.c_name
),
HighValueOrders AS (
    SELECT 
        c.c_name,
        COALESCE(o.o_orderstatus, 'Unknown') AS order_status,
        COUNT(o.o_orderkey) AS high_value_count
    FROM 
        customer c
    LEFT JOIN 
        orders o ON c.c_custkey = o.o_custkey
    WHERE 
        o.o_totalprice > 1000 OR o.o_orderkey IS NULL
    GROUP BY 
        c.c_name, o.o_orderstatus
),
SupplierParts AS (
    SELECT 
        ps.ps_partkey,
        ps.ps_suppkey,
        SUM(ps.ps_availqty * ps.ps_supplycost) AS total_cost
    FROM 
        partsupp ps
    GROUP BY 
        ps.ps_partkey, ps.ps_suppkey
)
SELECT 
    n.n_name AS nation_name,
    COUNT(DISTINCT c.c_custkey) AS total_customers,
    AVG(ho.high_value_count) AS avg_high_value_orders,
    COUNT(DISTINCT ps.ps_partkey) AS total_parts,
    MAX(COALESCE(s.s_acctbal, 0)) AS max_supplier_balance
FROM 
    nation n
LEFT JOIN 
    customer c ON c.c_nationkey = n.n_nationkey
LEFT JOIN 
    HighValueOrders ho ON ho.c_name = c.c_name
LEFT JOIN 
    RankedSuppliers s ON s.rank_acctbal = 1 AND s.s_suppkey IN (SELECT ps.ps_suppkey FROM SupplierParts ps WHERE total_cost > 5000)
LEFT JOIN 
    partsupp ps ON ps.ps_suppkey = s.s_suppkey
GROUP BY 
    n.n_name
HAVING 
    COUNT(DISTINCT c.c_custkey) > 5
ORDER BY 
    total_customers DESC
FETCH FIRST 10 ROWS ONLY;
