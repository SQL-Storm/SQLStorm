WITH RankedLineItems AS (
    SELECT 
        l_orderkey, 
        l_partkey, 
        l_suppkey, 
        l_linenumber, 
        l_quantity, 
        l_extendedprice, 
        l_discount, 
        ROW_NUMBER() OVER (PARTITION BY l_orderkey ORDER BY l_extendedprice DESC) as rn
    FROM 
        lineitem
    WHERE 
        l_shipdate >= DATE '1996-01-01' AND l_shipdate < DATE '1997-01-01'
), 
TopSuppliers AS (
    SELECT 
        ps.s_suppkey,
        SUM(ps.ps_supplycost * ps.ps_availqty) as total_supplycost
    FROM 
        partsupp ps
    JOIN 
        supplier s ON ps.ps_suppkey = s.s_suppkey
    GROUP BY 
        ps.s_suppkey
    HAVING 
        SUM(ps.ps_supplycost * ps.ps_availqty) > (
            SELECT AVG(total_supplycost)
            FROM (
                SELECT 
                    SUM(ps_supplycost * ps_availqty) as total_supplycost
                FROM 
                    partsupp
                GROUP BY 
                    ps_suppkey
            ) AS SupplierCosts
        )
), 
CustomerStatus AS (
    SELECT 
        c.c_custkey,
        COUNT(o.o_orderkey) AS order_count,
        SUM(o.o_totalprice) AS total_spent,
        CASE 
            WHEN SUM(o.o_totalprice) IS NULL THEN 'Inactive'
            WHEN SUM(o.o_totalprice) > 10000 THEN 'VIP'
            ELSE 'Regular'
        END AS customer_type
    FROM 
        customer c
    LEFT JOIN 
        orders o ON c.c_custkey = o.o_custkey
    GROUP BY 
        c.c_custkey
)
SELECT 
    c.c_name,
    n.n_name AS nation,
    r.r_name AS region,
    COALESCE(SUM(l.l_extendedprice * (1 - l.l_discount)), 0) as total_lineitem_value,
    cs.order_count,
    cs.total_spent,
    cs.customer_type,
    RANK() OVER (ORDER BY COALESCE(SUM(l.l_extendedprice * (1 - l.l_discount)), 0) DESC) AS lineitem_rank
FROM 
    customer c
JOIN 
    customerstatus cs ON c.c_custkey = cs.c_custkey
JOIN 
    nation n ON c.c_nationkey = n.n_nationkey
JOIN 
    region r ON n.n_regionkey = r.r_regionkey
LEFT JOIN 
    lineitem l ON l.l_orderkey IN (SELECT o.o_orderkey FROM orders o WHERE o.o_custkey = c.c_custkey)
LEFT JOIN 
    TopSuppliers ts ON l.l_suppkey = ts.s_suppkey
WHERE 
    c.c_acctbal IS NOT NULL 
    AND (c.c_mktsegment = 'BUILDING' OR c.c_mktsegment = 'FURNITURE')
GROUP BY 
    c.c_name, n.n_name, r.r_name, cs.order_count, cs.total_spent, cs.customer_type
HAVING 
    COUNT(DISTINCT l.l_orderkey) > 1
ORDER BY 
    total_lineitem_value DESC, lineitem_rank;