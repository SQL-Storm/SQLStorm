WITH RECURSIVE SupplierHierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, 1 AS level
    FROM supplier s
    WHERE s.s_acctbal > (SELECT AVG(s_acctbal) FROM supplier)
    
    UNION ALL
    
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, sh.level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE sh.level < 5
),
TotalSales AS (
    SELECT 
        l.l_suppkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_sales
    FROM lineitem l
    INNER JOIN orders o ON l.l_orderkey = o.o_orderkey
    WHERE o.o_orderdate BETWEEN '1995-01-01' AND '1995-12-31'
    GROUP BY l.l_suppkey
),
RankedSuppliers AS (
    SELECT 
        sh.s_suppkey,
        sh.s_name,
        sh.level,
        COALESCE(ts.total_sales, 0) AS total_sales,
        RANK() OVER (ORDER BY COALESCE(ts.total_sales, 0) DESC) AS sales_rank
    FROM SupplierHierarchy sh
    LEFT JOIN TotalSales ts ON sh.s_suppkey = ts.l_suppkey
),
CriticalSuppliers AS (
    SELECT 
        r.n_nationkey,
        r.r_name,
        rs.s_suppkey,
        rs.s_name,
        rs.total_sales,
        rs.sales_rank
    FROM rankedSuppliers rs
    JOIN nation r ON rs.s_nationkey = r.n_nationkey
    WHERE rs.total_sales > 10000
    ORDER BY rs.sales_rank
)

SELECT 
    ps.ps_partkey,
    p.p_name,
    p.p_brand,
    ps.ps_availqty,
    cs.r_name AS region_name,
    cs.s_name AS supplier_name,
    cs.total_sales
FROM partsupp ps
JOIN part p ON ps.ps_partkey = p.p_partkey
LEFT JOIN CriticalSuppliers cs ON ps.ps_suppkey = cs.s_suppkey
WHERE (p.p_size > 20 OR p.p_container IS NULL)
  AND (cs.total_sales IS NOT NULL OR p.p_retailprice > 100)
ORDER BY cs.total_sales DESC NULLS LAST
FETCH FIRST 10 ROWS ONLY;