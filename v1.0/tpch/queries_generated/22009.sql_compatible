
WITH RECURSIVE SupplierHierarchy AS (
    SELECT s_suppkey, s_name, s_nationkey, s_acctbal, 0 AS level
    FROM supplier
    WHERE s_acctbal > 5000
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal, sh.level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey AND s.s_acctbal > sh.s_acctbal * 1.1
),
RegionStats AS (
    SELECT r.r_regionkey, r.r_name, COUNT(DISTINCT n.n_nationkey) AS nation_count,
           AVG(s.s_acctbal) AS avg_acctbal, SUM(s.s_acctbal) AS total_acctbal
    FROM region r
    LEFT JOIN nation n ON r.r_regionkey = n.n_regionkey
    LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
    GROUP BY r.r_regionkey, r.r_name
),
OrderSummary AS (
    SELECT c.c_custkey, COUNT(o.o_orderkey) AS order_count,
           SUM(o.o_totalprice) AS total_spent,
           MIN(o.o_orderdate) AS first_order_date,
           MAX(o.o_orderdate) AS last_order_date
    FROM customer c
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    GROUP BY c.c_custkey
),
LineItemAnalytics AS (
    SELECT l.l_returnflag, l.l_linestatus,
           SUM(l.l_quantity) AS total_quantity,
           AVG(l.l_discount) AS avg_discount,
           COUNT(DISTINCT l.l_orderkey) AS unique_orders
    FROM lineitem l
    GROUP BY l.l_returnflag, l.l_linestatus
)
SELECT r.r_name, rs.nation_count, rs.avg_acctbal, rs.total_acctbal,
       ou.order_count, ou.total_spent, ou.first_order_date, ou.last_order_date,
       li.l_returnflag, li.l_linestatus, li.total_quantity, li.avg_discount, li.unique_orders
FROM RegionStats rs
JOIN OrderSummary ou ON rs.nation_count > 0
LEFT JOIN LineItemAnalytics li ON li.total_quantity > 1000
JOIN region r ON r.r_regionkey IN (SELECT n.n_regionkey FROM nation n WHERE n.n_nationkey IN (SELECT sh.s_nationkey FROM SupplierHierarchy sh WHERE sh.level < 3 AND sh.s_acctbal > 1000))
WHERE (rs.avg_acctbal IS NOT NULL OR rs.total_acctbal IS NOT NULL)
ORDER BY r.r_name, ou.total_spent DESC, li.total_quantity ASC
LIMIT 50 OFFSET 10;
