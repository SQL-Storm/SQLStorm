
WITH SupplierCostCTE AS (
    SELECT s.s_suppkey, s.s_name, SUM(ps.ps_supplycost * ps.ps_availqty) AS total_cost
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY s.s_suppkey, s.s_name
),
CustomerOrderCTE AS (
    SELECT c.c_custkey, c.c_name, COUNT(o.o_orderkey) AS total_orders, 
           SUM(o.o_totalprice) AS total_spent
    FROM customer c
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    GROUP BY c.c_custkey, c.c_name
),
LineItemStats AS (
    SELECT l.l_orderkey, l.l_partkey, l.l_quantity, l.l_extendedprice, 
           ROW_NUMBER() OVER (PARTITION BY l.l_orderkey ORDER BY l.l_lineno DESC) AS rn,
           SUM(l.l_extendedprice * (1 - l.l_discount)) OVER (PARTITION BY l.l_orderkey) AS extended_order_total
    FROM lineitem l
    WHERE l.l_shipdate >= DATE '1997-01-01' AND l.l_shipdate < DATE '1998-01-01'
),
FinalReport AS (
    SELECT 
        co.c_name,
        COUNT(DISTINCT lo.l_orderkey) AS order_count,
        SUM(lo.extended_order_total) AS total_spent,
        sc.total_cost AS supplier_cost
    FROM CustomerOrderCTE co
    LEFT JOIN LineItemStats lo ON co.total_orders > 0 AND lo.l_orderkey IN 
        (SELECT o.o_orderkey FROM orders o WHERE o.o_custkey = co.c_custkey)
    LEFT JOIN SupplierCostCTE sc ON lo.l_partkey IN 
        (SELECT ps.ps_partkey FROM partsupp ps WHERE ps.ps_suppkey = sc.s_suppkey)
    GROUP BY co.c_name, sc.total_cost
)
SELECT * FROM FinalReport
WHERE total_spent IS NOT NULL AND supplier_cost IS NOT NULL
ORDER BY total_spent DESC, supplier_cost ASC
LIMIT 10;
