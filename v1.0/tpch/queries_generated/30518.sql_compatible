
WITH RECURSIVE SupplierHierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, 1 AS level
    FROM supplier s
    WHERE s.s_acctbal > (SELECT AVG(s_acctbal) FROM supplier)
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, sh.level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE sh.level < 5
),
TotalSales AS (
    SELECT 
        l.l_partkey, 
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
        DENSE_RANK() OVER (PARTITION BY l.l_partkey ORDER BY SUM(l.l_extendedprice * (1 - l.l_discount)) DESC) AS revenue_rank
    FROM lineitem l
    JOIN orders o ON l.l_orderkey = o.o_orderkey
    WHERE o.o_orderdate >= '1997-01-01' AND o.o_orderdate < '1998-01-01'
    GROUP BY l.l_partkey
    HAVING SUM(l.l_discount) > 0.05
),
ProductInfo AS (
    SELECT 
        p.p_partkey,
        p.p_name,
        p.p_brand,
        MAX(ps.ps_supplycost) AS max_supply_cost,
        MIN(ps.ps_availqty) AS min_avail_qty
    FROM part p
    LEFT JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
    GROUP BY p.p_partkey, p.p_name, p.p_brand
),
SalesPerSupplier AS (
    SELECT 
        s.s_name, 
        SUM(ts.total_revenue) AS supplier_revenue
    FROM TotalSales ts
    JOIN partsupp ps ON ts.l_partkey = ps.ps_partkey
    JOIN supplier s ON ps.ps_suppkey = s.s_suppkey
    GROUP BY s.s_name
)
SELECT 
    r.r_name AS region_name,
    n.n_name AS nation_name,
    s.s_name AS supplier_name,
    pi.p_name AS part_name,
    pi.p_brand AS brand_name,
    spi.supplier_revenue AS total_revenue,
    COALESCE(spi.supplier_revenue, 0) AS net_revenue,
    ROW_NUMBER() OVER (PARTITION BY n.n_name ORDER BY spi.supplier_revenue DESC) AS revenue_rank,
    sh.level AS supplier_level
FROM region r
JOIN nation n ON r.r_regionkey = n.n_regionkey
LEFT JOIN SupplierHierarchy sh ON n.n_nationkey = sh.s_nationkey
JOIN SalesPerSupplier spi ON sh.s_name = spi.supplier_name
JOIN ProductInfo pi ON pi.max_supply_cost > (SELECT AVG(ps_supplycost) FROM partsupp)
WHERE sh.s_suppkey IS NOT NULL
ORDER BY region_name, revenue_rank;
