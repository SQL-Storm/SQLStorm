
WITH RankedSuppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_cost,
        ROW_NUMBER() OVER (PARTITION BY n.n_name ORDER BY SUM(ps.ps_supplycost * ps.ps_availqty) DESC) AS rank
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    JOIN 
        nation n ON s.s_nationkey = n.n_nationkey
    GROUP BY 
        s.s_suppkey, s.s_name, n.n_name
)

SELECT 
    p.p_partkey,
    p.p_name,
    COALESCE(SUM(CASE WHEN l.l_returnflag = 'R' THEN l.l_quantity ELSE 0 END), 0) AS total_returned_quantity,
    AVG(CASE WHEN o.o_orderstatus = 'F' THEN o.o_totalprice END) AS avg_completed_order_price,
    r.r_name AS region_name,
    s.s_name AS top_supplier
FROM 
    part p
LEFT JOIN 
    lineitem l ON p.p_partkey = l.l_partkey
LEFT JOIN 
    orders o ON l.l_orderkey = o.o_orderkey
LEFT JOIN 
    supplier s ON s.s_suppkey IN (SELECT s_suppkey FROM RankedSuppliers WHERE rank = 1)
LEFT JOIN 
    nation n ON s.s_nationkey = n.n_nationkey
LEFT JOIN 
    region r ON n.n_regionkey = r.r_regionkey
WHERE 
    p.p_retailprice > (
        SELECT AVG(p2.p_retailprice) FROM part p2
        WHERE p2.p_size < 20
    )
GROUP BY 
    p.p_partkey, p.p_name, r.r_name, s.s_name
HAVING 
    COALESCE(total_returned_quantity, 0) > 0 AND avg_completed_order_price IS NOT NULL
ORDER BY 
    region_name, total_returned_quantity DESC;
