WITH RankedParts AS (
    SELECT 
        p.p_partkey,
        p.p_name,
        RANK() OVER (PARTITION BY p.p_brand ORDER BY p.p_retailprice DESC) AS rk
    FROM 
        part p
    WHERE 
        p.p_size BETWEEN 1 AND 10 
        AND p.p_retailprice IS NOT NULL
),
RelevantSuppliers AS (
    SELECT 
        ps.ps_partkey, 
        ps.ps_suppkey, 
        SUM(ps.ps_availqty) AS total_avail_qty
    FROM 
        partsupp ps
    JOIN 
        supplier s ON ps.ps_suppkey = s.s_suppkey
    WHERE 
        s.s_acctbal > 500.00
    GROUP BY 
        ps.ps_partkey, ps.ps_suppkey
),
CustomerOrders AS (
    SELECT 
        c.c_custkey, 
        c.c_name, 
        SUM(o.o_totalprice) AS total_spent
    FROM 
        customer c
    JOIN 
        orders o ON c.c_custkey = o.o_custkey
    WHERE 
        o.o_orderdate >= '1997-01-01' 
        AND (c.c_mktsegment = 'BUILDING' OR c.c_mktsegment IS NULL)
    GROUP BY 
        c.c_custkey, c.c_name
),
SupplierPerformance AS (
    SELECT 
        s.s_suppkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
        AVG(l.l_tax) AS avg_tax_rate
    FROM 
        lineitem l
    JOIN 
        supplier s ON l.l_suppkey = s.s_suppkey
    WHERE 
        l.l_returnflag = 'N'
        AND l.l_shipdate >= DATEADD(MONTH, -6, GETDATE())
    GROUP BY 
        s.s_suppkey
)
SELECT 
    rp.p_name, 
    rp.rk,
    rs.total_avail_qty,
    co.total_spent,
    sp.total_revenue,
    CASE 
        WHEN co.total_spent IS NULL THEN 'No Orders'
        ELSE 'Regular Customer'
    END AS customer_status
FROM 
    RankedParts rp
LEFT OUTER JOIN 
    RelevantSuppliers rs ON rp.p_partkey = rs.ps_partkey
FULL OUTER JOIN 
    CustomerOrders co ON co.custkey = (SELECT 
                                            MAX(c.c_custkey) 
                                         FROM 
                                            customer c)
LEFT JOIN 
    SupplierPerformance sp ON sp.s_suppkey = COALESCE((SELECT 
                                                            ps.ps_suppkey
                                                        FROM 
                                                            partsupp ps
                                                        WHERE 
                                                            ps.ps_partkey = rp.p_partkey
                                                        ORDER BY 
                                                            ps.ps_availqty DESC 
                                                        LIMIT 1), 0)
WHERE 
    (rp.rk = 1 OR sp.total_revenue > 10000)
ORDER BY 
    rp.p_name, rs.total_avail_qty DESC;