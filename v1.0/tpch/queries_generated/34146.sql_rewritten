WITH RECURSIVE CustomerOrders AS (
    SELECT 
        c.c_custkey, 
        c.c_name, 
        o.o_orderkey, 
        o.o_orderdate, 
        o.o_totalprice,
        1 AS order_level
    FROM 
        customer c
    LEFT JOIN 
        orders o ON c.c_custkey = o.o_custkey
    WHERE 
        o.o_orderstatus = 'O' 
    UNION ALL
    SELECT 
        co.c_custkey, 
        co.c_name, 
        o.o_orderkey, 
        o.o_orderdate, 
        o.o_totalprice,
        co.order_level + 1
    FROM 
        CustomerOrders co
    JOIN 
        orders o ON co.o_orderkey = o.o_orderkey
    WHERE 
        o.o_orderstatus = 'O'
),
OrderLineItems AS (
    SELECT 
        o.o_orderkey, 
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_price,
        COUNT(l.l_linenumber) AS item_count
    FROM 
        lineitem l
    INNER JOIN 
        orders o ON l.l_orderkey = o.o_orderkey
    WHERE 
        l.l_shipdate BETWEEN '1997-01-01' AND '1997-12-31'
    GROUP BY 
        o.o_orderkey
),
TopOrders AS (
    SELECT 
        o.o_orderkey,
        oi.total_price,
        ROW_NUMBER() OVER (ORDER BY oi.total_price DESC) AS rank
    FROM 
        orders o
    JOIN 
        OrderLineItems oi ON o.o_orderkey = oi.o_orderkey
    WHERE 
        oi.item_count > 10
)
SELECT 
    cn.n_name AS nation_name,
    COUNT(DISTINCT so.o_orderkey) AS total_orders,
    COALESCE(SUM(o.total_price), 0) AS total_revenue,
    STRING_AGG(DISTINCT so.s_name, ', ') AS suppliers_involved
FROM 
    nation cn
LEFT JOIN 
    supplier so ON cn.n_nationkey = so.s_nationkey
LEFT JOIN 
    orders o ON o.o_custkey IN (SELECT c.c_custkey FROM customer c WHERE c.c_nationkey = cn.n_nationkey)
LEFT JOIN 
    TopOrders to ON o.o_orderkey = to.o_orderkey
WHERE 
    o.o_orderdate >= '1997-01-01' AND o.o_orderdate <= '1997-12-31'
GROUP BY 
    cn.n_name
ORDER BY 
    total_revenue DESC
LIMIT 10;