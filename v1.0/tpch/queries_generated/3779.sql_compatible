
WITH RankedSuppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        ROW_NUMBER() OVER (PARTITION BY s.s_nationkey ORDER BY s.s_acctbal DESC) AS supplier_rank
    FROM supplier s
),
MaxPriceParts AS (
    SELECT 
        p.p_partkey,
        MAX(ps.ps_supplycost) AS max_supply_cost
    FROM part p
    JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
    GROUP BY p.p_partkey
),
OrderDetails AS (
    SELECT 
        o.o_orderkey,
        o.o_orderdate,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_line_value
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE o.o_orderstatus = 'O'
    GROUP BY o.o_orderkey, o.o_orderdate
),
CustomerAffinities AS (
    SELECT 
        c.c_custkey,
        COUNT(DISTINCT o.o_orderkey) AS order_count,
        SUM(od.total_line_value) AS total_spent
    FROM customer c
    LEFT JOIN OrderDetails od ON c.c_custkey = od.o_orderkey
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    GROUP BY c.c_custkey
)
SELECT 
    r.r_name,
    COUNT(DISTINCT n.n_nationkey) AS nation_count,
    SUM(COALESCE(cs.order_count, 0)) AS total_orders,
    COUNT(DISTINCT mp.p_partkey) AS unique_parts,
    AVG(COALESCE(s.max_supply_cost, 0)) AS avg_max_supply_cost
FROM region r
JOIN nation n ON r.r_regionkey = n.n_regionkey
LEFT JOIN RankedSuppliers s ON n.n_nationkey = s.s_nationkey AND s.supplier_rank = 1
LEFT JOIN MaxPriceParts mp ON s.s_suppkey = mp.p_partkey
LEFT JOIN CustomerAffinities cs ON n.n_nationkey = cs.c_custkey
WHERE r.r_name LIKE 'N%' OR r.r_name IS NULL
GROUP BY r.r_name
HAVING SUM(COALESCE(cs.total_spent, 0)) > 1000000
ORDER BY nation_count DESC, total_orders DESC;
