
WITH RankedParts AS (
    SELECT 
        p.p_partkey,
        p.p_name,
        p.p_retailprice,
        ROW_NUMBER() OVER (PARTITION BY p.p_brand ORDER BY p.p_retailprice DESC) AS rn
    FROM part p
    WHERE p.p_size > 10
),
SupplierSummary AS (
    SELECT 
        s.s_suppkey,
        COUNT(DISTINCT ps.ps_partkey) AS unique_parts,
        SUM(ps.ps_supplycost) AS total_supply_cost
    FROM supplier s
    INNER JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY s.s_suppkey
    HAVING COUNT(DISTINCT ps.ps_partkey) > 5
),
OrderDetails AS (
    SELECT 
        o.o_orderkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_sales,
        COUNT(l.l_linenumber) AS line_count
    FROM orders o
    LEFT JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    GROUP BY o.o_orderkey
)
SELECT 
    r.r_name AS region_name,
    n.n_name AS nation_name,
    COALESCE(SUM(oss.total_sales), 0) AS total_sales,
    COUNT(DISTINCT rp.p_partkey) AS top_part_count,
    MAX(ss.total_supply_cost) AS max_supply_cost,
    SUM(CASE 
            WHEN oss.line_count > 10 THEN oss.total_sales 
            ELSE 0 
        END) AS heavy_weight_sales
FROM region r
JOIN nation n ON r.r_regionkey = n.n_regionkey
LEFT JOIN RankedParts rp ON rp.rn <= 5
LEFT JOIN OrderDetails oss ON oss.o_orderkey IN (
    SELECT o.o_orderkey 
    FROM orders o 
    WHERE o.o_orderstatus = 'O'
    UNION ALL
    SELECT o.o_orderkey 
    FROM orders o 
    WHERE EXISTS (
        SELECT 1 
        FROM lineitem l 
        WHERE l.l_orderkey = o.o_orderkey AND l.l_returnflag = 'R'
    )
)
LEFT JOIN SupplierSummary ss ON n.n_nationkey = ss.s_nationkey
GROUP BY r.r_name, n.n_name
HAVING COUNT(DISTINCT rp.p_partkey) > 3
   OR MAX(ss.total_supply_cost) IS NULL
ORDER BY region_name DESC, nation_name ASC;
