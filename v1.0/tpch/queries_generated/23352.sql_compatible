
WITH RECURSIVE SupplierHierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, 1 AS level
    FROM supplier s
    WHERE s.s_acctbal IS NOT NULL AND s.s_acctbal > 0
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, sh.level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE sh.level < 3
), AggregateData AS (
    SELECT p.p_partkey, 
           SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
           COUNT(DISTINCT o.o_orderkey) AS order_count,
           AVG(l.l_quantity) AS avg_quantity,
           MIN(l.l_shipdate) AS first_ship_date,
           MAX(l.l_shipdate) AS last_ship_date
    FROM part p
    JOIN lineitem l ON p.p_partkey = l.l_partkey
    JOIN orders o ON l.l_orderkey = o.o_orderkey
    JOIN supplier s ON l.l_suppkey = s.s_suppkey
    WHERE p.p_size BETWEEN 1 AND 20 
      AND l.l_returnflag = 'N'
      AND EXISTS (SELECT 1 FROM nation n WHERE n.n_nationkey = s.s_nationkey AND n.n_name LIKE 'N%')
    GROUP BY p.p_partkey
), EnhancedMetrics AS (
    SELECT ad.*, 
           ROW_NUMBER() OVER (PARTITION BY (CASE WHEN ad.total_revenue > (SELECT AVG(total_revenue) FROM AggregateData) THEN 1 ELSE 0 END) ORDER BY ad.total_revenue DESC) AS revenue_rank,
           COUNT(*) OVER () AS total_items
    FROM AggregateData ad
)
SELECT rh.r_name,
       eh.total_revenue,
       eh.order_count,
       eh.avg_quantity,
       COUNT(DISTINCT eh.p_partkey) OVER (PARTITION BY rh.r_name) AS unique_part_count,
       CASE 
           WHEN eh.total_revenue IS NULL THEN 'No Revenue'
           WHEN eh.total_revenue < 10000 THEN 'Low Revenue'
           ELSE 'High Revenue'
       END AS revenue_classification
FROM EnhancedMetrics eh
JOIN nation n ON n.n_nationkey = (SELECT s.s_nationkey FROM supplier s WHERE s.s_suppkey IN (SELECT s_suppkey FROM SupplierHierarchy)) 
JOIN region rh ON n.n_regionkey = rh.r_regionkey
WHERE rh.r_name IS NOT NULL OR (eh.first_ship_date IS NOT NULL AND eh.last_ship_date IS NOT NULL)
ORDER BY revenue_rank, unique_part_count DESC;
