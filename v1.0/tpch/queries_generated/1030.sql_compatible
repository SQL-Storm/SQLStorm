
WITH SupplierStats AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        s.s_acctbal,
        SUM(ps.ps_availqty) AS total_available,
        AVG(ps.ps_supplycost) AS avg_supply_cost
    FROM 
        supplier s
    LEFT JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey, s.s_name, s.s_acctbal
),
CustomerOrders AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        o.o_orderkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_spent
    FROM 
        customer c
    JOIN 
        orders o ON c.c_custkey = o.o_custkey
    JOIN 
        lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE 
        o.o_orderstatus = 'O' AND l.l_shipdate >= DATE '1997-01-01'
    GROUP BY 
        c.c_custkey, c.c_name, o.o_orderkey
),
NationRegions AS (
    SELECT 
        n.n_nationkey,
        n.n_name,
        r.r_regionkey,
        r.r_name
    FROM 
        nation n
    JOIN 
        region r ON n.n_regionkey = r.r_regionkey
)
SELECT 
    s.s_suppkey,
    s.s_name,
    COALESCE(cs.total_spent, 0) AS last_year_spent,
    ss.avg_supply_cost,
    CASE 
        WHEN ss.total_available > 1000 THEN 'High Availability'
        WHEN ss.total_available BETWEEN 500 AND 1000 THEN 'Medium Availability'
        ELSE 'Low Availability'
    END AS availability_status,
    nr.r_name AS region,
    (SELECT COUNT(*) FROM CustomerOrders WHERE total_spent > 10000) AS high_spender_count
FROM 
    SupplierStats ss
LEFT JOIN 
    CustomerOrders cs ON cs.o_orderkey IN (
        SELECT o_orderkey 
        FROM orders 
        WHERE o_custkey IN (SELECT c.c_custkey FROM customer WHERE c.c_acctbal > 5000)
    )
LEFT JOIN 
    NationRegions nr ON nr.n_nationkey = (SELECT n.n_nationkey FROM supplier WHERE s_suppkey = ss.s_suppkey)
ORDER BY 
    ss.avg_supply_cost DESC, ss.s_name;
