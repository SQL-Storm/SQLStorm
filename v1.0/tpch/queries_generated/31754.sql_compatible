
WITH RECURSIVE SupplierHierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, 1 AS level
    FROM supplier s
    WHERE s.s_suppkey IN (SELECT DISTINCT ps.ps_suppkey FROM partsupp ps WHERE ps.ps_availqty > 0)
    
    UNION ALL
    
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, sh.level + 1
    FROM supplier s
    INNER JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE sh.level < 5
),
OrdersWithDiscount AS (
    SELECT o.o_orderkey, o.o_totalprice,
           SUM(l.l_discount) OVER (PARTITION BY o.o_orderkey) AS total_discount,
           COUNT(l.l_orderkey) OVER (PARTITION BY o.o_orderkey) AS line_item_count
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE o.o_orderdate >= '1997-01-01' AND o.o_orderdate < '1998-01-01'
),
TopParts AS (
    SELECT p.p_partkey, p.p_name, SUM(l.l_quantity) AS total_quantity
    FROM part p
    JOIN lineitem l ON p.p_partkey = l.l_partkey
    GROUP BY p.p_partkey, p.p_name
    ORDER BY total_quantity DESC
    LIMIT 10
)
SELECT 
    r.r_name AS region_name,
    n.n_name AS nation_name,
    s.s_name AS supplier_name,
    t.p_name AS top_part_name,
    o.o_orderkey,
    o.o_totalprice,
    owd.total_discount,
    owd.line_item_count,
    COALESCE(sh.level, 0) AS supplier_level
FROM region r
JOIN nation n ON r.r_regionkey = n.n_regionkey
LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
LEFT JOIN OrdersWithDiscount owd ON s.s_suppkey = owd.o_orderkey
LEFT JOIN TopParts t ON owd.o_orderkey = t.p_partkey
LEFT JOIN SupplierHierarchy sh ON s.s_suppkey = sh.s_suppkey
WHERE r.r_name IS NOT NULL
ORDER BY owd.total_discount DESC
LIMIT 50;
