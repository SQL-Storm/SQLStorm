
WITH RECURSIVE price_changes AS (
    SELECT p_partkey, p_retailprice AS price, 0 AS change_level
    FROM part
    WHERE p_container LIKE 'SMALL%'
    
    UNION ALL
    
    SELECT p.ps_partkey, p.p_retailprice * 1.05, pc.change_level + 1
    FROM partsupp p 
    JOIN price_changes pc ON p.ps_partkey = pc.p_partkey
    WHERE pc.change_level < 3
),
ranked_orders AS (
    SELECT o.o_orderkey, o.o_totalprice,
           RANK() OVER (PARTITION BY o.o_orderstatus ORDER BY o.o_totalprice DESC) AS price_rank
    FROM orders o
    WHERE o.o_orderdate >= '1997-01-01'
),
supplier_data AS (
    SELECT s.s_suppkey, s.s_name, 
           SUM(ps.ps_supplycost) AS total_supply_cost
    FROM supplier s
    LEFT JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY s.s_suppkey, s.s_name
),
nation_stats AS (
    SELECT n.n_name, 
           COUNT(DISTINCT s.s_suppkey) AS supplier_count,
           SUM(s.s_acctbal) AS total_balance
    FROM nation n
    JOIN supplier s ON n.n_nationkey = s.s_nationkey
    WHERE s.s_acctbal IS NOT NULL
    GROUP BY n.n_name
)
SELECT 
    p.p_name,
    SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
    ns.n_name,
    ps.total_supply_cost,
    CASE
        WHEN SUM(l.l_extendedprice * (1 - l.l_discount)) > 10000 THEN 'High'
        WHEN SUM(l.l_extendedprice * (1 - l.l_discount)) BETWEEN 5000 AND 10000 THEN 'Medium'
        ELSE 'Low' 
    END AS revenue_category
FROM lineitem l
JOIN orders o ON l.l_orderkey = o.o_orderkey
JOIN part p ON l.l_partkey = p.p_partkey
JOIN nation_stats ns ON ns.n_name = (
    SELECT n.n_name 
    FROM nation n 
    WHERE n.n_nationkey = (
        SELECT s.s_nationkey 
        FROM supplier s 
        WHERE s.s_suppkey = l.l_suppkey
    )
)
JOIN supplier_data ps ON ps.s_suppkey = l.l_suppkey
WHERE l.l_shipdate BETWEEN '1997-01-01' AND '1997-12-31'
GROUP BY p.p_name, ns.n_name, ps.total_supply_cost
HAVING SUM(l.l_extendedprice) IS NOT NULL
ORDER BY total_revenue DESC
LIMIT 50;
