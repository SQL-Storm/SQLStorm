
WITH RECURSIVE part_hierarchy AS (
    SELECT p_partkey, p_name, p_mfgr, p_brand, p_type, p_size, p_container, p_retailprice, p_comment, 
           1 AS level
    FROM part
    WHERE p_size < 10

    UNION ALL

    SELECT p.p_partkey, p.p_name, p.p_mfgr, p.p_brand, p.p_type, p.p_size, p.p_container, p.p_retailprice, p.p_comment, 
           ph.level + 1
    FROM part p
    JOIN part_hierarchy ph ON p.p_size = ph.p_size + 1
)
SELECT 
    n.n_name AS nation,
    r.r_name AS region,
    COUNT(DISTINCT s.s_suppkey) AS total_suppliers,
    SUM(ps.ps_availqty) AS total_avail_qty,
    AVG(l.l_extendedprice * (1 - l.l_discount)) AS avg_price_after_discount,
    STRING_AGG(DISTINCT p.p_name) AS part_names
FROM 
    supplier s
JOIN 
    nation n ON s.s_nationkey = n.n_nationkey
JOIN 
    region r ON n.n_regionkey = r.r_regionkey
LEFT JOIN 
    partsupp ps ON s.s_suppkey = ps.ps_suppkey
JOIN 
    part_hierarchy p ON ps.ps_partkey = p.p_partkey
INNER JOIN 
    orders o ON s.s_suppkey = o.o_custkey
LEFT JOIN 
    lineitem l ON o.o_orderkey = l.l_orderkey
WHERE 
    (l.l_discount IS NOT NULL AND l.l_discount > 0.1)
    OR (l.l_returnflag = 'R' AND l.l_shipdate < DATE '1998-10-01')
GROUP BY 
    n.n_name, r.r_name
HAVING 
    COUNT(DISTINCT l.l_orderkey) > 5
ORDER BY 
    total_avail_qty DESC, avg_price_after_discount ASC;
