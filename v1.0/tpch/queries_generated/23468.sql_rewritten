WITH RECURSIVE SupplierHierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal,
           s.s_comment, 1 AS level
    FROM supplier s
    WHERE s.s_acctbal IS NOT NULL
    UNION ALL
    SELECT s2.s_suppkey, s2.s_name, s2.s_nationkey, s2.s_acctbal,
           s2.s_comment, sh.level + 1
    FROM supplier s2
    JOIN SupplierHierarchy sh ON s2.s_nationkey = sh.s_nationkey
    WHERE sh.level < 10
),
PrevCust AS (
    SELECT c.c_custkey, c.c_name, c.c_nationkey,
           LEAD(c.c_custkey, 1) OVER (PARTITION BY c.c_nationkey ORDER BY c.c_custkey) AS next_custkey
    FROM customer c
),
AggregatedSales AS (
    SELECT l.l_partkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_sales
    FROM lineitem l
    JOIN orders o ON l.l_orderkey = o.o_orderkey
    WHERE o.o_orderstatus = 'O' AND l.l_shipdate BETWEEN '1995-01-01' AND cast('1998-10-01' as date)
    GROUP BY l.l_partkey
),
RegionDetails AS (
    SELECT r.r_regionkey, r.r_name, COUNT(n.n_nationkey) AS nation_count,
           STRING_AGG(n.n_name, ', ') AS nations
    FROM region r
    LEFT JOIN nation n ON r.r_regionkey = n.n_regionkey
    GROUP BY r.r_regionkey, r.r_name
),
FilteredSales AS (
    SELECT ps.ps_partkey, ps.ps_suppkey, ps.ps_availqty, 
           COALESCE(ps.ps_supplycost * (SELECT AVG(pss.ps_supplycost) FROM partsupp pss WHERE pss.ps_partkey = ps.ps_partkey), 0) AS adjusted_cost
    FROM partsupp ps
    WHERE ps.ps_availqty IS NOT NULL
)
SELECT p.p_name, 
       rs.r_name, 
       SUM(fs.ps_availqty) AS total_available, 
       COUNT(DISTINCT sh.s_suppkey) AS supplier_count, 
       sg.total_sales,
       CASE 
           WHEN SUM(fs.adjusted_cost) > 0 THEN (SUM(fs.adjusted_cost) / COUNT(DISTINCT sh.s_suppkey))
           ELSE NULL
       END AS avg_supplier_cost,
       STRING_AGG(DISTINCT pd.s_name, '; ') AS supplier_names
FROM part p
LEFT JOIN FilteredSales fs ON p.p_partkey = fs.ps_partkey
LEFT JOIN SupplierHierarchy sh ON fs.ps_suppkey = sh.s_suppkey
LEFT JOIN RegionDetails rs ON sh.s_nationkey = rs.nation_count
LEFT JOIN supplier pd ON pd.s_suppkey IN (SELECT ps.ps_suppkey FROM partsupp ps WHERE ps.ps_partkey = p.p_partkey)
LEFT JOIN AggregatedSales sg ON sg.l_partkey = p.p_partkey
GROUP BY p.p_name, rs.r_name
HAVING COUNT(DISTINCT sh.s_suppkey) > 1 OR SUM(fs.ps_availqty) IS NULL
ORDER BY total_available DESC NULLS LAST
FETCH FIRST 100 ROWS ONLY;