
WITH supplier_summary AS (
    SELECT
        s.s_suppkey,
        s.s_name,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_cost,
        COUNT(DISTINCT ps.ps_partkey) AS num_parts
    FROM
        supplier s
    JOIN
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY
        s.s_suppkey, s.s_name
),
customer_orders AS (
    SELECT
        c.c_custkey,
        c.c_name,
        COUNT(o.o_orderkey) AS order_count,
        SUM(o.o_totalprice) AS total_spent,
        AVG(o.o_totalprice) AS avg_order_value
    FROM
        customer c
    LEFT JOIN
        orders o ON c.c_custkey = o.o_custkey
    GROUP BY
        c.c_custkey, c.c_name
),
lineitems_distribution AS (
    SELECT
        l.l_orderkey,
        SUM(l.l_quantity) AS total_quantity,
        SUM(l.l_extendedprice - l.l_discount) AS total_revenue,
        ROW_NUMBER() OVER (PARTITION BY l.l_orderkey ORDER BY SUM(l.l_extendedprice - l.l_discount) DESC) AS order_rank
    FROM
        lineitem l
    GROUP BY
        l.l_orderkey
),
nation_info AS (
    SELECT
        n.n_nationkey,
        n.n_name,
        r.r_name AS region_name
    FROM
        nation n
    JOIN
        region r ON n.n_regionkey = r.r_regionkey
)
SELECT
    co.c_custkey,
    co.c_name,
    ss.s_name,
    ss.total_cost,
    co.order_count,
    co.total_spent,
    co.avg_order_value,
    CASE 
        WHEN co.total_spent IS NULL THEN 'No Orders'
        ELSE 'Has Orders'
    END AS order_status,
    ld.total_quantity,
    ld.total_revenue
FROM
    customer_orders co
JOIN
    supplier_summary ss ON ss.num_parts > 5
LEFT JOIN
    lineitems_distribution ld ON ld.order_rank = (SELECT MAX(order_rank) FROM lineitems_distribution)
JOIN
    nation_info ni ON ni.n_nationkey = (SELECT c.c_nationkey FROM customer c WHERE c.c_custkey = co.c_custkey)
WHERE
    ss.total_cost > 10000.00
    AND (co.order_count > 1 OR co.avg_order_value > 500.00)
ORDER BY
    co.total_spent DESC,
    ss.total_cost ASC
FETCH FIRST 100 ROWS ONLY;
