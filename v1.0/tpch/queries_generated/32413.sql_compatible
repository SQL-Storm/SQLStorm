
WITH RECURSIVE CTE_CustomerOrders AS (
    SELECT c.c_custkey, c.c_name, o.o_orderkey, o.o_orderdate, o.o_totalprice
    FROM customer c
    JOIN orders o ON c.c_custkey = o.o_custkey
    WHERE o.o_orderstatus = 'O'
    UNION ALL
    SELECT c.c_custkey, c.c_name, o.o_orderkey, o.o_orderdate, o.o_totalprice
    FROM customer c
    JOIN orders o ON c.c_custkey = o.o_custkey
    JOIN CTE_CustomerOrders co ON co.o_orderkey < o.o_orderkey
)

SELECT 
    r.r_name AS region_name,
    n.n_name AS nation_name,
    s.s_name AS supplier_name,
    p.p_name AS part_name,
    SUM(ps.ps_availqty) AS total_available_qty,
    AVG(ps.ps_supplycost) AS avg_supply_cost,
    STRING_AGG(DISTINCT c.c_name, ', ') AS customer_names,
    COUNT(DISTINCT o.o_orderkey) AS total_orders,
    ROW_NUMBER() OVER (PARTITION BY r.r_name ORDER BY SUM(ps.ps_availqty) DESC) AS rank
FROM 
    region r
LEFT JOIN 
    nation n ON r.r_regionkey = n.n_regionkey
LEFT JOIN 
    supplier s ON n.n_nationkey = s.s_nationkey
LEFT JOIN 
    partsupp ps ON s.s_suppkey = ps.ps_suppkey
LEFT JOIN 
    part p ON ps.ps_partkey = p.p_partkey
LEFT JOIN 
    CTE_CustomerOrders co ON co.o_orderkey = ps.ps_partkey
LEFT JOIN 
    orders o ON o.o_orderkey = co.o_orderkey
WHERE 
    co.o_orderdate >= DATE '1997-01-01'
    AND co.o_orderdate <= DATE '1998-10-01'         
GROUP BY 
    r.r_name, n.n_name, s.s_name, p.p_name, c.c_name
HAVING 
    SUM(ps.ps_availqty) > 0
ORDER BY 
    region_name, total_available_qty DESC;
