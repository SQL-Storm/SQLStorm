
WITH RankedOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_orderdate,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
        RANK() OVER (PARTITION BY o.o_orderdate ORDER BY SUM(l.l_extendedprice * (1 - l.l_discount)) DESC) AS revenue_rank
    FROM 
        orders o
    JOIN 
        lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE 
        o.o_orderdate >= DATE '1997-01-01' AND o.o_orderdate <= DATE '1997-12-31'
    GROUP BY 
        o.o_orderkey, o.o_orderdate
),
TopRevenueOrders AS (
    SELECT 
        r.o_orderkey,
        r.o_orderdate,
        r.total_revenue
    FROM 
        RankedOrders r
    WHERE 
        r.revenue_rank <= 10
),
SupplierDetails AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        p.p_name,
        ps.ps_availqty,
        ps.ps_supplycost
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    JOIN 
        part p ON ps.ps_partkey = p.p_partkey
)
SELECT 
    t.o_orderkey,
    t.o_orderdate,
    COUNT(DISTINCT sd.s_suppkey) AS distinct_suppliers,
    SUM(sd.ps_availqty) AS total_available_quantity,
    SUM(sd.ps_supplycost) AS total_supply_cost
FROM 
    TopRevenueOrders t
LEFT JOIN 
    SupplierDetails sd ON sd.p_name IN (SELECT p_name FROM part WHERE p_partkey IN (SELECT l.l_partkey FROM lineitem l WHERE l.l_orderkey = t.o_orderkey))
GROUP BY 
    t.o_orderkey, t.o_orderdate
ORDER BY 
    t.o_orderdate DESC, total_available_quantity DESC;
