WITH RankedOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_orderdate,
        o.o_totalprice,
        ROW_NUMBER() OVER (PARTITION BY o.o_orderstatus ORDER BY o.o_orderdate DESC) AS rn
    FROM 
        orders o
),
SupplierStats AS (
    SELECT 
        s.s_suppkey,
        SUM(ps.ps_availqty) AS total_avail_qty,
        AVG(ps.ps_supplycost) AS avg_supply_cost
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey
),
LineItemSummary AS (
    SELECT 
        l.l_orderkey,
        COUNT(*) AS item_count,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
        MAX(l.l_shipdate) AS last_ship_date
    FROM 
        lineitem l
    WHERE 
        l.l_shipdate >= '1997-01-01' AND l.l_shipdate < '1998-01-01'
    GROUP BY 
        l.l_orderkey
),
HighValueOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_orderdate,
        o.o_totalprice,
        RANK() OVER (ORDER BY o.o_totalprice DESC) AS price_rank
    FROM 
        RankedOrders o
    WHERE 
        o.o_totalprice > (SELECT AVG(o_totalprice) FROM orders)
)
SELECT 
    n.n_name,
    COUNT(DISTINCT c.c_custkey) AS customer_count,
    SUM(lis.total_revenue) AS total_revenue,
    AVG(ss.avg_supply_cost) AS average_supply_cost,
    COUNT(DISTINCT CASE WHEN hvo.price_rank <= 10 THEN hvo.o_orderkey END) AS top_order_count
FROM 
    nation n
LEFT JOIN 
    customer c ON n.n_nationkey = c.c_nationkey
LEFT JOIN 
    orders o ON c.c_custkey = o.o_custkey
LEFT JOIN 
    LineItemSummary lis ON o.o_orderkey = lis.l_orderkey
LEFT JOIN 
    SupplierStats ss ON EXISTS (SELECT 1 FROM partsupp ps WHERE ps.ps_partkey IN (SELECT l.l_partkey FROM lineitem l WHERE l.l_orderkey = o.o_orderkey) AND ps.ps_suppkey = ss.s_suppkey)
LEFT JOIN 
    HighValueOrders hvo ON o.o_orderkey = hvo.o_orderkey
WHERE 
    n.n_name IS NOT NULL
GROUP BY 
    n.n_name
ORDER BY 
    total_revenue DESC, customer_count DESC;