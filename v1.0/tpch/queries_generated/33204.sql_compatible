
WITH RECURSIVE SupplierHierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, 0 AS Level
    FROM supplier s
    WHERE s.s_acctbal > (SELECT AVG(s_acctbal) FROM supplier WHERE s_acctbal IS NOT NULL)
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, sh.Level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON sh.s_nationkey = s.s_nationkey
    WHERE sh.Level < 3
),
RankedOrders AS (
    SELECT o.o_orderkey, o.o_totalprice, o.o_orderdate, 
           ROW_NUMBER() OVER (PARTITION BY o.o_orderstatus ORDER BY o.o_totalprice DESC) AS OrderRank
    FROM orders o
    WHERE o.o_orderdate >= DATEADD(month, -12, CAST('1998-10-01' AS DATE))
),
TopLineItems AS (
    SELECT li.l_orderkey, SUM(li.l_extendedprice * (1 - li.l_discount)) AS TotalRevenue
    FROM lineitem li
    WHERE li.l_shipdate BETWEEN '1996-01-01' AND '1996-12-31'
    GROUP BY li.l_orderkey
    HAVING SUM(li.l_extendedprice * (1 - li.l_discount)) > 10000
),
CustomerSuppliers AS (
    SELECT c.c_custkey, c.c_name, s.s_suppkey, s.s_name AS SupplierName
    FROM customer c
    LEFT JOIN supplier s ON c.c_nationkey = s.nationkey
    WHERE s.s_suppkey IS NOT NULL
)
SELECT r.r_name, COUNT(DISTINCT ps.ps_partkey) AS TotalPartsSupplied, 
       COALESCE(SUM(CASE WHEN li.l_returnflag = 'R' THEN 1 ELSE 0 END), 0) AS ReturnedItems,
       COUNT(DISTINCT o.o_orderkey) AS TotalOrders,
       AVG(o.o_totalprice) AS AverageOrderValue
FROM region r
JOIN nation n ON r.r_regionkey = n.n_regionkey
LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
LEFT JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
LEFT JOIN lineitem li ON ps.ps_partkey = li.l_partkey
LEFT JOIN RankedOrders o ON li.l_orderkey = o.o_orderkey
WHERE r.r_name LIKE 'N%'
GROUP BY r.r_name
HAVING COUNT(DISTINCT o.o_orderkey) > 5
ORDER BY TotalPartsSupplied DESC;
