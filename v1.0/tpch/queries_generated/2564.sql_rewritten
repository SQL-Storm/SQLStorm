WITH SupplierSummary AS (
    SELECT 
        s.s_suppkey, 
        s.s_name, 
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_value,
        COUNT(DISTINCT ps.ps_partkey) AS total_parts
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey, 
        s.s_name
),
CustomerOrders AS (
    SELECT 
        c.c_custkey, 
        c.c_name, 
        SUM(o.o_totalprice) AS total_spent,
        COUNT(o.o_orderkey) AS total_orders
    FROM 
        customer c
    LEFT JOIN 
        orders o ON c.c_custkey = o.o_custkey
    GROUP BY 
        c.c_custkey, 
        c.c_name
),
PartDetails AS (
    SELECT 
        p.p_partkey, 
        p.p_name, 
        p.p_retailprice, 
        p.p_size,
        ROW_NUMBER() OVER (PARTITION BY p.p_type ORDER BY p.p_retailprice DESC) AS price_rank
    FROM 
        part p
),
TotalLineItems AS (
    SELECT 
        l.l_orderkey, 
        COUNT(l.l_linenumber) AS lineitem_count,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_line_value
    FROM 
        lineitem l
    WHERE 
        l.l_shipdate >= DATE '1997-01-01' AND l.l_shipdate < DATE '1998-01-01'
    GROUP BY 
        l.l_orderkey
)
SELECT 
    c.c_name, 
    c.total_spent, 
    s.total_supply_value, 
    p.p_name, 
    p.price_rank,
    l.lineitem_count,
    l.total_line_value
FROM 
    CustomerOrders c
LEFT JOIN 
    SupplierSummary s ON c.c_custkey = s.s_suppkey
LEFT JOIN 
    PartDetails p ON s.total_parts > 0 AND p.price_rank <= 5
LEFT JOIN 
    TotalLineItems l ON c.total_orders > 0 AND l.l_orderkey = (SELECT MIN(o.o_orderkey) FROM orders o WHERE o.o_custkey = c.c_custkey)
WHERE 
    c.total_spent IS NOT NULL 
ORDER BY 
    c.total_spent DESC, 
    s.total_supply_value ASC;