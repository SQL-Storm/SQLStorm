WITH RECURSIVE SupplierHierarchy AS (
    SELECT s_suppkey, s_name, s_nationkey, s_acctbal, 1 AS level
    FROM supplier
    WHERE s_acctbal > 1000
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal, sh.level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE s.s_acctbal > sh.s_acctbal
),
OrderSummary AS (
    SELECT o.o_orderkey, o.o_orderdate, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_sales
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE l.l_shipdate <= cast('1998-10-01' as date)
    GROUP BY o.o_orderkey, o.o_orderdate
),
NationSales AS (
    SELECT n.n_name, SUM(os.total_sales) AS total_sales
    FROM nation n
    LEFT JOIN customer c ON n.n_nationkey = c.c_nationkey
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    LEFT JOIN OrderSummary os ON o.o_orderkey = os.o_orderkey
    GROUP BY n.n_name
),
TopNations AS (
    SELECT n_name, total_sales,
           RANK() OVER (ORDER BY total_sales DESC) AS sales_rank
    FROM NationSales
)
SELECT th.n_name AS Top_Nation,
       th.total_sales AS Total_Sales,
       COUNT(DISTINCT sh.s_suppkey) AS Supplier_Count,
       AVG(sh.s_acctbal) AS Avg_Account_Balance,
       STRING_AGG(DISTINCT sh.s_name, ', ') AS Supplier_Names
FROM TopNations th
LEFT JOIN SupplierHierarchy sh ON th.n_name = sh.s_nationkey::VARCHAR
WHERE th.sales_rank <= 5
GROUP BY th.n_name, th.total_sales
ORDER BY th.total_sales DESC;