WITH RECURSIVE TopSuppliers AS (
    SELECT s.s_suppkey, s.s_name, SUM(ps.ps_supplycost * ps.ps_availqty) AS total_cost
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY s.s_suppkey, s.s_name
    HAVING SUM(ps.ps_supplycost * ps.ps_availqty) > 10000
    ORDER BY total_cost DESC
    LIMIT 5
),
OrderDetails AS (
    SELECT o.o_orderkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE l.l_shipdate >= '1997-01-01' AND l.l_shipdate < '1997-12-31'
    GROUP BY o.o_orderkey
),
NationAvgBal AS (
    SELECT n.n_nationkey, AVG(s.s_acctbal) AS avg_acctbal
    FROM nation n
    JOIN supplier s ON n.n_nationkey = s.s_nationkey
    GROUP BY n.n_nationkey
)
SELECT 
    n.n_name AS nation_name,
    COUNT(DISTINCT c.c_custkey) AS total_customers,
    COALESCE(SUM(od.total_revenue), 0) AS total_revenue,
    ROUND(AVG(tab.avg_acctbal), 2) AS average_supplier_account_balance,
    COUNT(DISTINCT ts.s_suppkey) AS top_supplier_count
FROM nation n
LEFT JOIN customer c ON c.c_nationkey = n.n_nationkey
LEFT JOIN OrderDetails od ON od.o_orderkey IN (
    SELECT l.l_orderkey 
    FROM lineitem l 
    WHERE l.l_suppkey IN (
        SELECT s.s_suppkey 
        FROM TopSuppliers ts 
        WHERE ts.s_suppkey IS NOT NULL
    )
)
LEFT JOIN NationAvgBal tab ON tab.n_nationkey = n.n_nationkey
LEFT JOIN TopSuppliers ts ON ts.s_suppkey IN (
    SELECT ps.ps_suppkey 
    FROM partsupp ps 
    WHERE ps.ps_partkey IN (SELECT p.p_partkey FROM part p WHERE p.p_retailprice > 20)
)
GROUP BY n.n_name
ORDER BY total_revenue DESC, nation_name;