
WITH RankedSuppliers AS (
    SELECT 
        s.s_suppkey, 
        s.s_name, 
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_cost,
        ROW_NUMBER() OVER (PARTITION BY n.n_regionkey ORDER BY SUM(ps.ps_supplycost * ps.ps_availqty) DESC) AS rnk
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    JOIN 
        nation n ON s.s_nationkey = n.n_nationkey
    GROUP BY 
        s.s_suppkey, s.s_name, n.n_regionkey
),
HighCostSuppliers AS (
    SELECT 
        * 
    FROM 
        RankedSuppliers 
    WHERE 
        total_supply_cost > (SELECT AVG(total_supply_cost) FROM RankedSuppliers)
),
CustomerOrders AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        COUNT(o.o_orderkey) AS order_count,
        SUM(o.o_totalprice) AS total_spent
    FROM 
        customer c
    LEFT JOIN 
        orders o ON c.c_custkey = o.o_custkey
    GROUP BY 
        c.c_custkey, c.c_name
),
EnhancedOrderDetails AS (
    SELECT 
        o.o_orderkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS net_price,
        o.o_orderdate,
        ROW_NUMBER() OVER (PARTITION BY o.o_orderkey ORDER BY l.l_shipdate DESC) AS line_rank
    FROM 
        orders o
    JOIN 
        lineitem l ON o.o_orderkey = l.l_orderkey
    GROUP BY 
        o.o_orderkey, o.o_orderdate
)
SELECT 
    c.c_name,
    COALESCE(ho.order_count, 0) AS order_count,
    COALESCE(ho.total_spent, 0) AS total_spent,
    ARRAY_AGG(DISTINCT h.s_name) AS high_cost_suppliers,
    AVG(e.net_price) AS avg_net_price,
    MAX(e.o_orderdate) AS last_order_date
FROM 
    CustomerOrders ho
LEFT JOIN 
    EnhancedOrderDetails e ON ho.c_custkey = e.o_orderkey
JOIN 
    HighCostSuppliers h ON h.rnk <= 3
JOIN 
    nation n ON h.s_nationkey = n.n_nationkey
GROUP BY 
    c.c_name, ho.order_count, ho.total_spent
ORDER BY 
    avg_net_price DESC
LIMIT 10;
