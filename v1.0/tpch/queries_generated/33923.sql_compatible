
WITH RECURSIVE SupplierHierarchy AS (
    SELECT s.s_suppkey AS supplier_id, s.s_name AS supplier_name, 0 AS level
    FROM supplier s
    WHERE s.s_acctbal > 1000

    UNION ALL

    SELECT s.s_suppkey, s.s_name, sh.level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.s_suppkey = sh.supplier_id
    WHERE s.s_acctbal IS NOT NULL
),
TotalOrders AS (
    SELECT o.o_custkey, SUM(o.o_totalprice) AS total_spent
    FROM orders o
    WHERE o.o_orderdate >= '1997-01-01'
    GROUP BY o.o_custkey
),
CustomerNation AS (
    SELECT c.c_custkey, n.n_name AS nation_name
    FROM customer c
    JOIN nation n ON c.c_nationkey = n.n_nationkey
),
SupplierStats AS (
    SELECT 
        s.s_nationkey,
        AVG(s.s_acctbal) AS avg_account_balance,
        COUNT(DISTINCT ps.ps_partkey) AS part_count
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY s.s_nationkey
)
SELECT 
    rn.region_name,
    cn.nation_name,
    COALESCE(ts.total_spent, 0) AS total_spent,
    COALESCE(ss.avg_account_balance, 0) AS avg_supplier_balance,
    sh.level AS supplier_hierarchy_level
FROM region rn
LEFT JOIN (
    SELECT DISTINCT n.n_name, n.n_nationkey
    FROM nation n
) cn ON 1=1
LEFT JOIN TotalOrders ts ON ts.o_custkey = cn.c_custkey
LEFT JOIN CustomerNation customer_nation ON cn.c_custkey = customer_nation.c_custkey
LEFT JOIN SupplierStats ss ON customer_nation.nation_name = ss.nation_name
LEFT JOIN SupplierHierarchy sh ON cn.c_custkey = sh.supplier_id
ORDER BY rn.region_name, cn.nation_name;
