
WITH RECURSIVE RegionHierarchy AS (
    SELECT r_regionkey, r_name, 1 AS level
    FROM region
    WHERE r_name LIKE 'Asia%'
    
    UNION ALL

    SELECT r.r_regionkey, r.r_name, h.level + 1
    FROM region r
    JOIN RegionHierarchy h ON r.r_regionkey = h.r_regionkey
    WHERE h.level < 5
), 
SupplierStats AS (
    SELECT 
        s.s_nationkey,
        COUNT(DISTINCT s.suppkey) AS total_suppliers,
        SUM(s.acctbal) AS total_account_balance
    FROM supplier s
    GROUP BY s.s_nationkey
), 
OrderDetails AS (
    SELECT 
        o.o_orderkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS revenue,
        COUNT(DISTINCT l.l_orderkey) AS total_line_items
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    GROUP BY o.o_orderkey
), 
FilteredOrders AS (
    SELECT 
        od.o_orderkey,
        od.revenue,
        od.total_line_items,
        CASE 
            WHEN od.revenue > 10000 THEN 'High Value'
            WHEN od.revenue BETWEEN 5000 AND 10000 THEN 'Medium Value'
            ELSE 'Low Value'
        END AS order_value_category
    FROM OrderDetails od
)
SELECT 
    r.r_name,
    COALESCE(ss.total_suppliers, 0) AS total_suppliers,
    COALESCE(ss.total_account_balance, 0) AS total_account_balance,
    fo.order_value_category,
    SUM(fo.revenue) AS total_revenue
FROM RegionHierarchy r
LEFT JOIN SupplierStats ss ON r.r_regionkey = ss.s_nationkey
FULL OUTER JOIN FilteredOrders fo ON fo.o_orderkey IS NOT NULL
WHERE fo.total_line_items IS NOT NULL
GROUP BY 
    r.r_name, 
    ss.total_suppliers, 
    ss.total_account_balance, 
    fo.order_value_category
HAVING SUM(fo.revenue) > 5000
ORDER BY total_revenue DESC, r.r_name;
