
WITH RankedOrders AS (
    SELECT 
        o.o_orderkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
        RANK() OVER (PARTITION BY o.o_orderstatus ORDER BY SUM(l.l_extendedprice * (1 - l.l_discount)) DESC) AS revenue_rank
    FROM 
        orders AS o
    JOIN 
        lineitem AS l ON o.o_orderkey = l.l_orderkey
    WHERE 
        o.o_orderdate >= DATE '1996-01-01'
        AND o.o_orderdate <= DATE '1996-12-31'
        AND o.o_orderstatus IN ('O', 'F', NULL)
    GROUP BY 
        o.o_orderkey,
        o.o_orderstatus
),
SuppliersWithHighSales AS (
    SELECT 
        ps.ps_suppkey,
        SUM(ps.ps_supplycost) AS total_supply_cost
    FROM 
        partsupp AS ps
    JOIN 
        lineitem AS l ON ps.ps_partkey = l.l_partkey
    WHERE 
        l.l_quantity > 10
        AND l.l_discount BETWEEN 0.05 AND 0.25
    GROUP BY 
        ps.ps_suppkey
    HAVING 
        SUM(l.l_extendedprice) > 1000.00
)
SELECT 
    r.r_name,
    COALESCE(SUM(ro.total_revenue), 0) AS revenue_generated,
    COUNT(DISTINCT s.s_suppkey) AS unique_suppliers_contributing,
    CASE 
        WHEN AVG(s.s_acctbal) IS NULL THEN 'No suppliers'
        ELSE AVG(s.s_acctbal)
    END AS avg_supplier_balance,
    STRING_AGG(DISTINCT p.p_name, ', ') AS supplied_parts
FROM 
    region AS r
LEFT JOIN 
    nation AS n ON r.r_regionkey = n.n_regionkey
LEFT JOIN 
    supplier AS s ON n.n_nationkey = s.s_nationkey
LEFT JOIN 
    RankedOrders AS ro ON ro.o_orderkey IN (SELECT o.o_orderkey FROM orders o WHERE o.o_custkey = s.s_suppkey)
LEFT JOIN 
    SuppliersWithHighSales AS shs ON shs.ps_suppkey = s.s_suppkey
LEFT JOIN 
    partsupp AS ps ON ps.ps_suppkey = s.s_suppkey
LEFT JOIN 
    part AS p ON p.p_partkey = ps.ps_partkey
WHERE 
    r.r_name LIKE 'A%' OR r.r_name IS NULL
GROUP BY 
    r.r_name
HAVING 
    SUM(ro.total_revenue) IS NOT NULL OR COUNT(DISTINCT s.s_suppkey) > 0
ORDER BY 
    revenue_generated DESC NULLS LAST;
