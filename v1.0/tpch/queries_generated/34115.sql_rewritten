WITH RECURSIVE supplier_hierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal, 1 AS level
    FROM supplier s
    WHERE s.s_acctbal > 5000
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal, sh.level + 1
    FROM supplier s
    JOIN supplier_hierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE s.s_acctbal > sh.s_acctbal
),
avg_lineitem AS (
    SELECT l_partkey, AVG(l_quantity) AS avg_quantity
    FROM lineitem
    GROUP BY l_partkey
),
customer_orders AS (
    SELECT c.c_custkey, c.c_mktsegment, COUNT(o.o_orderkey) AS total_orders 
    FROM customer c
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    WHERE o.o_orderstatus = 'O' OR o.o_orderstatus IS NULL
    GROUP BY c.c_custkey, c.c_mktsegment
)
SELECT 
    p.p_partkey,
    p.p_name,
    p.p_retailprice,
    COALESCE(SUM(ps.ps_availqty), 0) AS total_available_qty,
    (SELECT SUM(l.l_extendedprice * (1 - l.l_discount))
     FROM lineitem l 
     WHERE l.l_partkey = p.p_partkey
       AND l.l_shipdate BETWEEN '1997-01-01' AND '1997-12-31') AS total_revenue,
    ROW_NUMBER() OVER (PARTITION BY p.p_brand ORDER BY p.p_retailprice DESC) AS rank_by_price,
    ch.c_mktsegment,
    sh.level
FROM 
    part p
LEFT JOIN 
    partsupp ps ON p.p_partkey = ps.ps_partkey 
LEFT JOIN 
    customer_orders ch ON ch.total_orders > 10
LEFT JOIN 
    supplier_hierarchy sh ON sh.s_nationkey IN (SELECT n.n_nationkey FROM nation n WHERE n.n_name = 'USA')
GROUP BY 
    p.p_partkey, p.p_name, p.p_retailprice, ch.c_mktsegment, sh.level
HAVING 
    total_available_qty > 50
ORDER BY 
    p.p_name,
    rank_by_price DESC;