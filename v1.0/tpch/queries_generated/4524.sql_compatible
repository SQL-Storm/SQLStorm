
WITH SupplierAggregates AS (
    SELECT
        s.n_nationkey,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supplycost,
        COUNT(DISTINCT s.s_suppkey) AS supplier_count
    FROM
        supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY s.n_nationkey
),
NationStats AS (
    SELECT
        n.n_name,
        ra.total_supplycost,
        ra.supplier_count,
        COUNT(DISTINCT c.c_custkey) AS customer_count
    FROM
        nation n
    LEFT JOIN SupplierAggregates ra ON n.n_nationkey = ra.n_nationkey
    LEFT JOIN customer c ON n.n_nationkey = c.c_nationkey
    GROUP BY n.n_name, ra.total_supplycost, ra.supplier_count
),
OrderDetails AS (
    SELECT
        o.o_orderkey,
        o.o_totalprice,
        l.l_discount,
        l.l_extendedprice,
        ROW_NUMBER() OVER (PARTITION BY o.o_orderkey ORDER BY l.l_linenumber) AS line_rank
    FROM
        orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE
        o.o_orderstatus NOT IN ('F', 'O')
)
SELECT
    ns.n_name,
    ns.total_supplycost,
    ns.supplier_count,
    ns.customer_count,
    SUM(od.o_totalprice * (1 - od.l_discount)) AS total_order_value,
    AVG(od.o_totalprice) AS avg_order_value,
    COUNT(DISTINCT od.o_orderkey) AS completed_orders
FROM
    NationStats ns
LEFT JOIN OrderDetails od ON ns.supplier_count > 1 AND od.line_rank <= 5
GROUP BY 
    ns.n_name, ns.total_supplycost, ns.supplier_count, ns.customer_count
HAVING
    SUM(od.o_totalprice * (1 - od.l_discount)) IS NOT NULL
ORDER BY 
    total_order_value DESC, ns.n_name;
