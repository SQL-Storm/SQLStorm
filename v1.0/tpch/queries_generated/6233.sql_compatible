
WITH SupplierParts AS (
    SELECT 
        s.s_suppkey, 
        s.s_name, 
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_cost
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey, s.s_name
),
CustomerOrders AS (
    SELECT 
        c.c_custkey, 
        c.c_name, 
        COUNT(o.o_orderkey) AS order_count,
        SUM(o.o_totalprice) AS total_spent
    FROM 
        customer c
    JOIN 
        orders o ON c.c_custkey = o.o_custkey
    GROUP BY 
        c.c_custkey, c.c_name
),
HighValueSuppliers AS (
    SELECT 
        sp.s_suppkey, 
        sp.s_name 
    FROM 
        SupplierParts sp
    WHERE 
        sp.total_cost > (SELECT AVG(total_cost) FROM SupplierParts)
),
HighValueCustomers AS (
    SELECT 
        co.c_custkey, 
        co.c_name 
    FROM 
        CustomerOrders co
    WHERE 
        co.total_spent > (SELECT AVG(total_spent) FROM CustomerOrders)
)
SELECT 
    hvc.c_name AS customer_name,
    hvs.s_name AS supplier_name,
    hvc.order_count,
    hvc.total_spent,
    sp.total_cost
FROM 
    HighValueCustomers hvc
JOIN 
    HighValueSuppliers hvs ON EXISTS (
        SELECT 1 
        FROM lineitem li 
        JOIN orders o ON li.l_orderkey = o.o_orderkey 
        WHERE o.o_custkey = hvc.c_custkey 
        AND li.l_suppkey = hvs.s_suppkey
    )
JOIN 
    SupplierParts sp ON hvs.s_suppkey = sp.s_suppkey
ORDER BY 
    hvc.total_spent DESC, sp.total_cost DESC
FETCH FIRST 10 ROWS ONLY;
