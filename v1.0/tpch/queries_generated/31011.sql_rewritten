WITH RECURSIVE SupplierHierarchy AS (
    SELECT s_suppkey, s_name, s_nationkey, s_acctbal, 1 AS level
    FROM supplier
    WHERE s_acctbal > 1000
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal, sh.level + 1
    FROM supplier s
    INNER JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE s.s_acctbal > sh.s_acctbal
),
PartSupplierInfo AS (
    SELECT ps.ps_partkey, 
           SUM(ps.ps_availqty) AS total_available_qty, 
           COUNT(DISTINCT ps.ps_suppkey) AS supplier_count
    FROM partsupp ps
    GROUP BY ps.ps_partkey
),
RankedParts AS (
    SELECT p.p_partkey, 
           p.p_name, 
           p.p_retailprice, 
           p.p_comment, 
           ROW_NUMBER() OVER (PARTITION BY p.p_type ORDER BY p.p_retailprice DESC) AS price_rank
    FROM part p 
    WHERE p.p_size BETWEEN 5 AND 15
),
HighestValueOrders AS (
    SELECT o.o_orderkey, 
           o.o_totalprice, 
           o.o_orderdate,
           COALESCE(SUM(l.l_extendedprice * (1 - l.l_discount)), 0) AS net_value
    FROM orders o
    LEFT JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE o.o_orderdate >= '1996-01-01'
    GROUP BY o.o_orderkey, o.o_totalprice, o.o_orderdate
    HAVING net_value > 5000
)
SELECT
    r.r_name AS region_name,
    n.n_name AS nation_name,
    SUM(c.c_acctbal) AS total_customer_balance,
    COUNT(DISTINCT o.o_orderkey) AS order_count,
    AVG(hi.net_value) AS average_order_net_value
FROM region r
JOIN nation n ON r.r_regionkey = n.n_regionkey
JOIN customer c ON n.n_nationkey = c.c_nationkey
LEFT JOIN HighestValueOrders hi ON hi.o_orderkey IN (
    SELECT o.o_orderkey
    FROM orders o
    WHERE o.o_custkey = c.c_custkey
)
LEFT JOIN PartSupplierInfo psi ON psi.ps_partkey IN (
    SELECT ps.ps_partkey
    FROM partsupp ps 
    WHERE ps.ps_supplycost > 20.00
)
GROUP BY r.r_name, n.n_name
HAVING SUM(c.c_acctbal) > 10000 
   AND (COUNT(DISTINCT o.o_orderkey) > 5 OR COUNT(hi.o_orderkey) > 0)
ORDER BY total_customer_balance DESC, order_count DESC;