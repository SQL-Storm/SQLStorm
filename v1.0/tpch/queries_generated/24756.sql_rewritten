WITH RankedOrders AS (
    SELECT 
        o.o_orderkey, 
        o.o_orderstatus,
        o.o_totalprice,
        o.o_orderdate,
        o.o_clerk,
        ROW_NUMBER() OVER (PARTITION BY o.o_orderstatus ORDER BY o.o_totalprice DESC) AS rank
    FROM 
        orders o
    WHERE 
        o.o_orderdate >= '1996-01-01' AND o.o_orderdate < '1997-01-01'
),
SupplierCost AS (
    SELECT 
        ps.ps_partkey,
        SUM(ps.ps_supplycost) AS total_supply_cost
    FROM 
        partsupp ps
    GROUP BY 
        ps.ps_partkey
),
FilteredLineItems AS (
    SELECT 
        l.l_orderkey,
        SUM(CASE WHEN l.l_returnflag = 'R' THEN l.l_extendedprice * (1 - l.l_discount) ELSE 0 END) AS return_value,
        AVG(l.l_quantity) AS avg_quantity
    FROM 
        lineitem l
    WHERE 
        l.l_shipdate >= '1996-06-01' AND l.l_shipdate <= '1996-12-31'
    GROUP BY 
        l.l_orderkey
)
SELECT 
    r.o_orderkey,
    r.o_orderstatus,
    r.o_totalprice AS highest_price,
    COALESCE(f.return_value, 0) AS return_value,
    COALESCE(fc.avg_quantity, 0) AS avg_quantity,
    COALESCE(s.total_supply_cost, 0) AS supplier_cost
FROM 
    RankedOrders r
LEFT JOIN 
    FilteredLineItems f ON r.o_orderkey = f.l_orderkey
LEFT JOIN 
    SupplierCost s ON EXISTS (
        SELECT 1 
        FROM partsupp ps
        WHERE ps.ps_partkey IN (SELECT ps_partkey FROM partsupp WHERE ps_suppkey = r.o_orderkey)
        HAVING COUNT(*) > 0
    )
WHERE 
    r.rank = 1 OR r.o_orderstatus = 'F'
ORDER BY 
    r.o_totalprice DESC, 
    r.o_orderdate ASC
FETCH FIRST 50 ROWS ONLY;