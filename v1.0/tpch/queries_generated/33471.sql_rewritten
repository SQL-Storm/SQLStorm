WITH RECURSIVE SupplierHierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, 1 AS level
    FROM supplier s
    WHERE s.s_acctbal > (SELECT AVG(s2.s_acctbal) FROM supplier s2)
    
    UNION ALL
    
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, sh.level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON sh.s_nationkey = s.s_nationkey
    WHERE sh.level < 5
),
PartStatistics AS (
    SELECT p.p_partkey, 
           p.p_name, 
           SUM(ps.ps_availqty) AS total_availability,
           AVG(l.l_extendedprice) AS avg_price,
           COUNT(DISTINCT l.l_orderkey) AS order_count
    FROM part p
    LEFT JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
    LEFT JOIN lineitem l ON p.p_partkey = l.l_partkey
    GROUP BY p.p_partkey, p.p_name
),
CustomerRanking AS (
    SELECT c.c_custkey, 
           c.c_name, 
           ROW_NUMBER() OVER (PARTITION BY c.c_nationkey ORDER BY c.c_acctbal DESC) AS rank
    FROM customer c
)
SELECT 
    r.r_name, 
    n.n_name, 
    sh.s_name AS top_supplier,
    ps.p_name AS part_name,
    ps.total_availability,
    ps.avg_price,
    cr.c_name AS top_customer,
    cr.rank
FROM region r
JOIN nation n ON r.r_regionkey = n.n_regionkey
LEFT JOIN SupplierHierarchy sh ON n.n_nationkey = sh.s_nationkey
JOIN PartStatistics ps ON ps.order_count > 0
JOIN CustomerRanking cr ON cr.rank = 1 AND cr.c_custkey IN (
    SELECT o.o_custkey
    FROM orders o 
    WHERE o.o_orderdate > cast('1998-10-01' as date) - INTERVAL '1 year'
)
WHERE ps.avg_price IS NOT NULL
ORDER BY r.r_name, n.n_name, ps.avg_price DESC;