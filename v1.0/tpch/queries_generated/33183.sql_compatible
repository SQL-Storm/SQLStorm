
WITH RECURSIVE region_sales AS (
    SELECT 
        r.r_name AS region_name,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_sales,
        ROW_NUMBER() OVER (PARTITION BY r.r_regionkey ORDER BY SUM(l.l_extendedprice * (1 - l.l_discount)) DESC) AS sales_rank
    FROM
        region r
    JOIN
        nation n ON r.r_regionkey = n.n_regionkey
    JOIN
        supplier s ON n.n_nationkey = s.s_nationkey
    JOIN
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    JOIN
        part p ON ps.ps_partkey = p.p_partkey
    JOIN
        lineitem l ON p.p_partkey = l.l_partkey
    GROUP BY 
        r.r_regionkey, r.r_name
),
ranked_sales AS (
    SELECT 
        region_name,
        total_sales,
        sales_rank
    FROM 
        region_sales
    WHERE 
        total_sales > (SELECT AVG(total_sales) FROM region_sales)
),
top_sales AS (
    SELECT 
        region_name,
        total_sales,
        sales_rank
    FROM 
        ranked_sales
    WHERE 
        sales_rank <= 3
),
customer_activity AS (
    SELECT 
        c.c_name,
        COUNT(o.o_orderkey) AS order_count,
        SUM(o.o_totalprice) AS total_spent
    FROM 
        customer c
    LEFT JOIN 
        orders o ON c.c_custkey = o.o_custkey
    GROUP BY 
        c.c_name
)
SELECT 
    a.region_name,
    a.total_sales,
    b.c_name AS top_customer,
    b.order_count,
    b.total_spent
FROM 
    top_sales a
LEFT JOIN 
    customer_activity b ON a.region_name = (
        SELECT n.r_name
        FROM nation n 
        JOIN supplier s ON n.n_nationkey = s.s_nationkey
        JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
        JOIN part p ON ps.ps_partkey = p.p_partkey
        JOIN lineitem l ON p.p_partkey = l.l_partkey
        WHERE l.l_orderkey IN 
            (SELECT o.o_orderkey FROM orders o WHERE o.o_orderstatus = 'O')
        GROUP BY n.r_name
        ORDER BY SUM(l.l_extendedprice * (1 - l.l_discount)) DESC
        LIMIT 1
    )
ORDER BY 
    a.total_sales DESC
LIMIT 10;
