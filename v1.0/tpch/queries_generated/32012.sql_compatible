
WITH RECURSIVE SupplierHierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_address, s.n_nationkey, s.s_acctbal, 1 AS level
    FROM supplier s
    WHERE s.s_acctbal > (
        SELECT AVG(s2.s_acctbal) FROM supplier s2
    )
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_address, s.n_nationkey, s.s_acctbal, sh.level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.n_nationkey = sh.n_nationkey
    WHERE s.s_acctbal > sh.s_acctbal
),
RankedOrders AS (
    SELECT o.o_orderkey, o.o_custkey, o.o_orderdate, o.o_totalprice,
           RANK() OVER (PARTITION BY o.o_orderstatus ORDER BY o.o_orderdate DESC) AS order_rank
    FROM orders o
),
TopProducts AS (
    SELECT p.p_partkey, p.p_name, SUM(l.l_quantity) AS total_quantity,
           ROW_NUMBER() OVER (PARTITION BY p.p_partkey ORDER BY SUM(l.l_quantity) DESC) AS rn
    FROM part p
    JOIN lineitem l ON p.p_partkey = l.l_partkey
    GROUP BY p.p_partkey, p.p_name
),
FilteredNation AS (
    SELECT n.n_nationkey, n.n_name, r.r_name
    FROM nation n
    JOIN region r ON n.n_regionkey = r.r_regionkey
    WHERE r.r_name LIKE '%EU%'
)
SELECT sh.s_name, sh.s_address, fn.n_name AS customer_nation, fo.customer_count, tp.p_name, tp.total_quantity
FROM SupplierHierarchy sh
LEFT JOIN (
    SELECT c.c_nationkey, COUNT(DISTINCT o.o_orderkey) AS customer_count
    FROM customer c
    JOIN orders o ON c.c_custkey = o.o_custkey
    GROUP BY c.c_nationkey
) fo ON sh.n_nationkey = fo.c_nationkey
JOIN TopProducts tp ON tp.rn = 1
JOIN FilteredNation fn ON fn.n_nationkey = sh.n_nationkey
WHERE sh.level <= 2 AND tp.total_quantity > 100
ORDER BY fo.customer_count DESC, sh.s_acctbal DESC, tp.total_quantity DESC;
