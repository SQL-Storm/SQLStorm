WITH RankedSuppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        s.s_acctbal,
        ROW_NUMBER() OVER (PARTITION BY s.s_nationkey ORDER BY s.s_acctbal DESC) AS rnk
    FROM 
        supplier s
    WHERE 
        s.s_acctbal IS NOT NULL
),
CustomerOrders AS (
    SELECT 
        c.c_custkey,
        COUNT(o.o_orderkey) AS order_count,
        SUM(o.o_totalprice) AS total_spent
    FROM 
        customer c
    LEFT JOIN 
        orders o ON c.c_custkey = o.o_custkey
    GROUP BY 
        c.c_custkey
),
SupplierPartAvailability AS (
    SELECT 
        ps.ps_partkey,
        SUM(ps.ps_availqty) AS total_available,
        SUM(ps.ps_supplycost) AS total_cost
    FROM 
        partsupp ps
    JOIN 
        RankedSuppliers rs ON ps.ps_suppkey = rs.s_suppkey
    WHERE 
        rs.rnk <= 5
    GROUP BY 
        ps.ps_partkey
),
LineItemDetails AS (
    SELECT 
        l.l_orderkey,
        AVG(l.l_extendedprice * (1 - l.l_discount)) AS avg_price_after_discount,
        MAX(l.l_tax) AS max_tax,
        MIN(l.l_quantity) AS min_quantity
    FROM 
        lineitem l
    WHERE 
        l.l_shipdate BETWEEN '1997-01-01' AND '1997-12-31'
    GROUP BY 
        l.l_orderkey
)
SELECT 
    p.p_partkey,
    p.p_name,
    COALESCE(s.total_available, 0) AS available_parts,
    COALESCE(c.order_count, 0) AS customer_order_count,
    COALESCE(c.total_spent, 0) AS total_spent_by_customer,
    ld.avg_price_after_discount,
    ld.max_tax,
    ld.min_quantity
FROM 
    part p
LEFT JOIN 
    SupplierPartAvailability s ON s.ps_partkey = p.p_partkey
LEFT JOIN 
    CustomerOrders c ON c.c_custkey IN (SELECT c.c_custkey FROM customer c WHERE c.c_address LIKE '%' || SUBSTR(p.p_name, 1, 2) || '%')
LEFT JOIN 
    LineItemDetails ld ON ld.l_orderkey IN (SELECT l.l_orderkey FROM lineitem l WHERE l.l_partkey = p.p_partkey)
WHERE 
    (p.p_size BETWEEN 1 AND 20 OR p.p_mfgr LIKE 'Manufacturer%')
    AND (s.total_available IS NULL OR s.total_available > 10)
ORDER BY 
    p.p_partkey DESC
LIMIT 100;