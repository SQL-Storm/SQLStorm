
WITH RECURSIVE SupplierHierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, 0 AS level
    FROM supplier s
    WHERE s.s_acctbal > 1000.00
  
    UNION ALL
  
    SELECT s2.s_suppkey, s2.s_name, s2.s_nationkey, sh.level + 1
    FROM supplier s2
    JOIN SupplierHierarchy sh ON s2.s_nationkey = sh.s_nationkey
    WHERE s2.s_acctbal < sh.level * 500.00
    AND sh.level < 5
),
RecentOrders AS (
    SELECT o.o_orderkey, o.o_orderdate, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE o.o_orderdate >= DATE_SUB(CAST('1998-10-01' AS DATE), INTERVAL 1 YEAR)
    GROUP BY o.o_orderkey, o.o_orderdate
),
SupplierStats AS (
    SELECT s.s_suppkey,
           COUNT(DISTINCT ps.ps_partkey) AS part_count,
           SUM(ps.ps_supplycost) AS total_supply_cost
    FROM supplier s
    LEFT JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY s.s_suppkey
)
SELECT 
    r.r_name,
    COALESCE(SH.s_name, 'N/A') AS supplier_name,
    SUM(R.total_revenue) AS total_revenue,
    AVG(SS.total_supply_cost) AS avg_supply_cost,
    COUNT(DISTINCT C.c_custkey) AS customer_count,
    STRING_AGG(DISTINCT P.p_name, ', ') AS part_names
FROM region r
LEFT JOIN nation n ON r.r_regionkey = n.n_regionkey
LEFT JOIN supplier SH ON n.n_nationkey = SH.s_nationkey
LEFT JOIN RecentOrders R ON SH.s_suppkey = R.o_orderkey
LEFT JOIN SupplierStats SS ON SH.s_suppkey = SS.s_suppkey
LEFT JOIN customer C ON C.c_nationkey = n.n_nationkey
LEFT JOIN part P ON P.p_partkey = (SELECT ps.ps_partkey FROM partsupp ps WHERE ps.ps_suppkey = SH.s_suppkey LIMIT 1)
WHERE R.total_revenue IS NOT NULL
GROUP BY r.r_name, SH.s_name
ORDER BY total_revenue DESC
LIMIT 10;
