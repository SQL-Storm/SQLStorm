
WITH RECURSIVE SupplierHierarchy AS (
    SELECT s_suppkey, s_name, s_acctbal, s_nationkey, 1 AS level
    FROM supplier
    WHERE s_acctbal > (SELECT AVG(s_acctbal) FROM supplier)
    
    UNION ALL
    
    SELECT s.s_suppkey, s.s_name, s.s_acctbal, s.s_nationkey, sh.level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE s.s_acctbal > (SELECT AVG(s_acctbal) FROM supplier)
),
PartSupply AS (
    SELECT ps.ps_partkey, ps.ps_suppkey, p.p_name, p.p_retailprice, ps.ps_availqty, s.s_acctbal
    FROM partsupp ps
    JOIN part p ON p.p_partkey = ps.ps_partkey
    JOIN supplier s ON s.s_suppkey = ps.ps_suppkey
    WHERE ps.ps_availqty > 0
),
RankedOrders AS (
    SELECT o.o_orderkey, o.o_totalprice, 
           RANK() OVER (PARTITION BY o.o_orderstatus ORDER BY o.o_totalprice DESC) AS order_rank
    FROM orders o
),
TotalLineItems AS (
    SELECT l.l_orderkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_line_value
    FROM lineitem l
    GROUP BY l.l_orderkey
)
SELECT r.r_name,
       COUNT(DISTINCT sh.s_suppkey) AS supplier_count,
       AVG(ps.p_retailprice) AS average_price,
       SUM(tli.total_line_value) AS total_sales,
       MAX(tli.total_line_value) AS max_line_item_value,
       (SELECT COUNT(*) FROM RankedOrders ro WHERE ro.order_rank <= 5) AS top_order_count
FROM region r
LEFT JOIN nation n ON n.n_regionkey = r.r_regionkey
LEFT JOIN supplier s ON s.s_nationkey = n.n_nationkey
LEFT JOIN SupplierHierarchy sh ON sh.s_suppkey = s.s_suppkey
LEFT JOIN PartSupply ps ON ps.ps_suppkey = s.s_suppkey
LEFT JOIN TotalLineItems tli ON tli.l_orderkey IN (SELECT o.o_orderkey FROM orders o WHERE o.o_custkey = s.s_suppkey)
GROUP BY r.r_name
HAVING COUNT(DISTINCT sh.s_suppkey) > 1
  AND AVG(ps.p_retailprice) IS NOT NULL
  AND SUM(tli.total_line_value) IS NOT NULL
ORDER BY total_sales DESC;
