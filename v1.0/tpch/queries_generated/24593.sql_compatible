
WITH RECURSIVE price_trends AS (
    SELECT 
        p.p_partkey,
        p.p_name,
        ps.ps_supplycost,
        ROW_NUMBER() OVER (PARTITION BY p.p_partkey ORDER BY ps.ps_supplycost DESC) AS rank
    FROM 
        part p
    JOIN 
        partsupp ps ON p.p_partkey = ps.ps_partkey
    WHERE 
        ps.ps_supplycost IS NOT NULL
),
customer_order_summary AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        SUM(o.o_totalprice) AS total_spent,
        COUNT(o.o_orderkey) AS order_count
    FROM 
        customer c
    LEFT JOIN 
        orders o ON c.c_custkey = o.o_custkey
    GROUP BY 
        c.c_custkey, c.c_name
),
nation_supplier AS (
    SELECT 
        n.n_name,
        COUNT(DISTINCT s.s_suppkey) AS supplier_count
    FROM 
        nation n
    LEFT JOIN 
        supplier s ON n.n_nationkey = s.s_nationkey
    GROUP BY 
        n.n_name
)
SELECT 
    p.p_partkey,
    p.p_name,
    COALESCE(pt.ps_supplycost, 0) AS max_supply_cost,
    COALESCE(cus.total_spent, 0) AS customer_spending,
    ns.supplier_count,
    CASE 
        WHEN ns.supplier_count IS NULL THEN 'No Suppliers' 
        ELSE 'Available Suppliers' 
    END AS supplier_availability
FROM 
    part p
LEFT JOIN 
    price_trends pt ON p.p_partkey = pt.p_partkey AND pt.rank = 1
LEFT JOIN 
    customer_order_summary cus ON cus.total_spent > (SELECT AVG(total_spent) FROM customer_order_summary)
LEFT JOIN 
    nation_supplier ns ON ns.supplier_count > 0
WHERE 
    (ps.ps_retailprice IS NULL OR ps.ps_retailprice > 100) 
    AND (SELECT MAX(l.l_shipdate) FROM lineitem l WHERE l.l_partkey = p.p_partkey) IS NULL 
    OR (SELECT MAX(l.l_shipdate) FROM lineitem l WHERE l.l_partkey = p.p_partkey) < DATEADD(YEAR, -1, '1998-10-01')
ORDER BY 
    p.p_partkey DESC
OFFSET 5 ROWS FETCH NEXT 10 ROWS ONLY;
