
WITH RankedSuppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        s.s_acctbal,
        RANK() OVER (PARTITION BY p.p_partkey ORDER BY s.s_acctbal DESC) AS rnk
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    JOIN part p ON ps.ps_partkey = p.p_partkey
    WHERE s.s_acctbal IS NOT NULL
),
TopSuppliers AS (
    SELECT s.s_suppkey, s.s_name, s.s_acctbal
    FROM RankedSuppliers s
    WHERE s.rnk <= 3
),
OrderDetails AS (
    SELECT 
        o.o_orderkey,
        o.o_orderdate,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
        COUNT(DISTINCT l.l_linenumber) AS line_count
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE l.l_shipdate >= DATE '1997-01-01' 
      AND l.l_shipdate < DATE '1997-12-31'
      AND l.l_returnflag = 'N'
    GROUP BY o.o_orderkey, o.o_orderdate
),
FilteredOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_orderdate,
        o.total_revenue,
        o.line_count,
        CASE 
            WHEN o.total_revenue > (SELECT AVG(total_revenue) FROM OrderDetails) THEN 'Above Average'
            WHEN o.total_revenue < (SELECT AVG(total_revenue) FROM OrderDetails) THEN 'Below Average'
            ELSE 'Average'
        END AS revenue_category
    FROM OrderDetails o
    WHERE o.line_count > 1
)
SELECT 
    r.s_suppkey,
    r.s_name,
    r.s_acctbal,
    o.o_orderkey,
    o.o_orderdate,
    o.total_revenue,
    o.revenue_category
FROM TopSuppliers r
FULL OUTER JOIN FilteredOrders o ON r.s_suppkey IN (
    SELECT ps.ps_suppkey 
    FROM partsupp ps 
    WHERE ps.ps_partkey IN (SELECT p.p_partkey FROM part p WHERE p.p_container LIKE '%BOX%')
)
ORDER BY r.s_suppkey, o.o_orderdate DESC;
