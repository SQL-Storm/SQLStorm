WITH RECURSIVE SupplierHierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal, 1 AS level
    FROM supplier s
    WHERE s.s_acctbal > 10000
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal, sh.level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE s.s_acctbal > sh.s_acctbal
), 
PartSuppliers AS (
    SELECT ps.ps_partkey, SUM(ps.ps_supplycost * ps.ps_availqty) AS total_cost
    FROM partsupp ps
    GROUP BY ps.ps_partkey
), 
LineItemStats AS (
    SELECT l.l_orderkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS net_revenue, 
           AVG(l.l_quantity) AS avg_quantity, COUNT(DISTINCT l.l_suppkey) AS supplier_count
    FROM lineitem l
    WHERE l.l_shipdate >= '1996-01-01' AND l.l_shipdate <= '1996-12-31'
    GROUP BY l.l_orderkey
), 
NationDetails AS (
    SELECT n.n_name, COUNT(DISTINCT s.s_suppkey) AS supplier_count, 
           AVG(s.s_acctbal) AS avg_account_balance
    FROM nation n
    LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
    GROUP BY n.n_name
)
SELECT 
    p.p_name, 
    ph.level, 
    ns.n_name, 
    ps.total_cost, 
    li.net_revenue, 
    li.avg_quantity, 
    nd.avg_account_balance,
    CASE WHEN nd.avg_account_balance IS NULL THEN 'No Suppliers' ELSE 'Has Suppliers' END AS supplier_status
FROM part p
LEFT JOIN PartSuppliers ps ON p.p_partkey = ps.ps_partkey
LEFT JOIN SupplierHierarchy ph ON ps.total_cost > 10000
LEFT JOIN LineItemStats li ON li.l_orderkey = (SELECT o.o_orderkey 
                                                FROM orders o 
                                                WHERE o.o_custkey = (SELECT c.c_custkey 
                                                                     FROM customer c 
                                                                     WHERE c.c_nationkey = ph.s_nationkey LIMIT 1) 
                                                LIMIT 1)
LEFT JOIN NationDetails nd ON ph.s_nationkey = nd.n_nationkey
ORDER BY p.p_name, level DESC;