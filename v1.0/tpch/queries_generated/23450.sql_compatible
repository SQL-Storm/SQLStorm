
WITH RankedSuppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supplycost,
        ROW_NUMBER() OVER (PARTITION BY s.s_nationkey ORDER BY SUM(ps.ps_supplycost * ps.ps_availqty) DESC) AS rank_within_nation
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey, s.s_name, s.s_nationkey
), RegionalCost AS (
    SELECT 
        n.n_regionkey,
        SUM(rs.total_supplycost) AS regional_total_cost
    FROM 
        nation n
    LEFT JOIN 
        RankedSuppliers rs ON n.n_nationkey = rs.s_nationkey
    GROUP BY 
        n.n_regionkey
), HighValueCustomers AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        c.c_acctbal,
        SUM(o.o_totalprice) AS total_spent,
        CASE 
            WHEN c.c_acctbal IS NULL THEN 'Unaccounted'
            ELSE 'Accounted'
        END AS balance_status
    FROM 
        customer c
    LEFT JOIN 
        orders o ON c.c_custkey = o.o_custkey
    GROUP BY 
        c.c_custkey, c.c_name, c.c_acctbal
    HAVING 
        SUM(o.o_totalprice) > 10000
), SupplierRatings AS (
    SELECT 
        s.s_name,
        CASE 
            WHEN COUNT(DISTINCT o.o_orderkey) > 5 THEN 'Top Supplier'
            ELSE 'Regular Supplier'
        END AS supplier_rating
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    JOIN 
        lineitem l ON ps.ps_partkey = l.l_partkey
    JOIN 
        orders o ON l.l_orderkey = o.o_orderkey
    GROUP BY 
        s.s_name
)
SELECT 
    r.r_name,
    rc.regional_total_cost,
    hvc.c_name,
    hvc.total_spent,
    sr.supplier_rating
FROM 
    region r
LEFT JOIN 
    RegionalCost rc ON r.r_regionkey = rc.n_regionkey
FULL OUTER JOIN 
    HighValueCustomers hvc ON rc.regional_total_cost IS NOT NULL AND rc.regional_total_cost > 50000
LEFT JOIN 
    SupplierRatings sr ON sr.supplier_rating = 'Top Supplier'
WHERE 
    (rc.regional_total_cost IS NULL OR hvc.total_spent IS NOT NULL)
ORDER BY 
    r.r_name, hvc.total_spent DESC;