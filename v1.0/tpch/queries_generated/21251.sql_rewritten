WITH RECURSIVE SupplierHierarchy AS (
    SELECT s_suppkey, s_name, s_nationkey, s_acctbal, 0 AS hierarchy_level
    FROM supplier
    WHERE s_suppkey IS NOT NULL
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal * 0.9, sh.hierarchy_level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON s_suppkey = sh.s_nationkey
),
EnhancedLineItems AS (
    SELECT l.l_orderkey, 
           l.l_partkey, 
           l.l_suppkey, 
           l.l_linenumber, 
           l.l_quantity, 
           l.l_extendedprice * (1 - l.l_discount) AS adjusted_price,
           RANK() OVER (PARTITION BY l.l_orderkey ORDER BY l.l_extendedprice DESC) AS price_rank
    FROM lineitem l
    WHERE l.l_returnflag = 'N' 
      AND l.l_shipdate BETWEEN '1995-01-01' AND '1997-10-31'
),
FilteredOrders AS (
    SELECT o.o_orderkey, 
           o.o_orderstatus,
           SUM(eli.adjusted_price) AS total_adjusted_value,
           COUNT(eli.l_orderkey) AS total_items
    FROM orders o
    LEFT JOIN EnhancedLineItems eli ON o.o_orderkey = eli.l_orderkey
    GROUP BY o.o_orderkey, o.o_orderstatus
    HAVING SUM(eli.adjusted_price) > 10000
),
CountrySales AS (
    SELECT n.n_name, 
           SUM(fo.total_adjusted_value) AS total_sales,
           MAX(fo.total_items) AS max_items
    FROM nation n
    JOIN customer c ON c.c_nationkey = n.n_nationkey
    JOIN filteredorders fo ON fo.o_orderkey IN (SELECT o.o_orderkey FROM orders o WHERE o.o_custkey = c.c_custkey)
    GROUP BY n.n_name
)
SELECT r.r_name, 
       cs.total_sales / NULLIF(SUM(CASE WHEN cs.max_items IS NOT NULL THEN cs.max_items END), 0) AS avg_sales_per_item,
       MIN(ch.hierarchy_level) AS min_supplier_level
FROM region r
LEFT JOIN CountrySales cs ON r.r_regionkey = (SELECT n.n_regionkey FROM nation n WHERE n.n_name = cs.n_name)
JOIN SupplierHierarchy sh ON sh.s_nationkey = cs.n_nationkey OR sh.suppkey = cs.n_nationkey
GROUP BY r.r_name
ORDER BY avg_sales_per_item DESC
FETCH FIRST 10 ROWS ONLY;