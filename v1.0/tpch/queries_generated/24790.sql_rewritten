WITH RECURSIVE HighValueSuppliers AS (
    SELECT s.s_suppkey, s.s_name, s.s_acctbal, s.n_nationkey
    FROM supplier s
    WHERE s.s_acctbal > (SELECT AVG(s2.s_acctbal) FROM supplier s2)
),
TopNations AS (
    SELECT n.n_name, COUNT(DISTINCT s.s_suppkey) AS total_suppliers
    FROM nation n
    JOIN supplier s ON n.n_nationkey = s.n_nationkey
    GROUP BY n.n_name
    HAVING COUNT(DISTINCT s.s_suppkey) > 5
),
PartAverageCost AS (
    SELECT ps.ps_partkey,
           AVG(ps.ps_supplycost) AS avg_supplycost
    FROM partsupp ps
    GROUP BY ps.ps_partkey
),
CustomerOrders AS (
    SELECT c.c_custkey, c.c_name, SUM(o.o_totalprice) AS total_spent
    FROM customer c
    JOIN orders o ON c.c_custkey = o.o_custkey
    GROUP BY c.c_custkey, c.c_name
    HAVING SUM(o.o_totalprice) IS NOT NULL
),
LineItemsWithDiscounts AS (
    SELECT l.l_orderkey, l.l_partkey, 
           l.l_extendedprice * (1 - l.l_discount) AS final_price,
           DENSE_RANK() OVER (PARTITION BY l.l_orderkey ORDER BY l.l_extendedprice) AS item_rank
    FROM lineitem l
    WHERE l.l_discount IS NOT NULL
),
HistoricalSales AS (
    SELECT l.l_orderkey, 
           SUM(CASE WHEN l.l_shipdate < cast('1998-10-01' as date) - INTERVAL '1 year' THEN l.l_extendedprice ELSE 0 END) AS historic_sales
    FROM lineitem l
    GROUP BY l.l_orderkey
)
SELECT DISTINCT 
    p.p_partkey, 
    p.p_name, 
    p.p_brand,
    hvs.s_name AS supplier_name,
    COUNT(DISTINCT co.c_custkey) AS customer_count,
    SUM(l.final_price) AS total_lineitem_price,
    CASE 
        WHEN total_sales > 10000 THEN 'High Value Part' 
        ELSE 'Standard Part' 
    END AS part_value_category
FROM part p
LEFT JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
LEFT JOIN HighValueSuppliers hvs ON ps.ps_suppkey = hvs.s_suppkey
JOIN CustomerOrders co ON co.total_spent > 0
JOIN LineItemsWithDiscounts l ON l.l_partkey = p.p_partkey
JOIN HistoricalSales hs ON hs.l_orderkey = l.l_orderkey
WHERE p.p_size IS NOT NULL
  AND p.p_retailprice < (SELECT MAX(p2.p_retailprice) FROM part p2 WHERE p2.p_size BETWEEN 5 AND 10)
  AND EXISTS (SELECT 1 FROM nation n WHERE n.n_nationkey = hvs.n_nationkey AND n.n_name LIKE '%land%')
GROUP BY p.p_partkey, p.p_name, p.p_brand, hvs.s_name
HAVING SUM(l.final_price) < 5000
ORDER BY part_value_category, p.p_partkey;