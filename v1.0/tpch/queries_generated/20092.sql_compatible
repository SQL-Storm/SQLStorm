
WITH RECURSIVE supplier_hierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, 0 AS level
    FROM supplier s
    WHERE s.s_acctbal IS NOT NULL AND s.s_acctbal > 1000

    UNION ALL

    SELECT s.s_suppkey, s.s_name, s.s_nationkey, sh.level + 1
    FROM supplier s
    JOIN supplier_hierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE sh.level < 3
),

nation_customer AS (
    SELECT n.n_nationkey, n.n_name, COUNT(DISTINCT c.c_custkey) AS cust_count
    FROM nation n
    LEFT JOIN customer c ON n.n_nationkey = c.c_nationkey
    GROUP BY n.n_nationkey, n.n_name
),

order_summary AS (
    SELECT o.custkey, 
           SUM(CASE WHEN o.o_orderdate >= DATE '1996-01-01' THEN o.o_totalprice ELSE 0 END) AS recent_order_total,
           COUNT(o.o_orderkey) AS order_count
    FROM orders o
    GROUP BY o.custkey
)

SELECT p.p_partkey,
       p.p_name,
       COALESCE(sh.level, -1) AS supplier_level,
       nc.n_name,
       ns.cust_count,
       COUNT(DISTINCT ps.ps_suppkey) AS supplier_count,
       SUM(CASE WHEN l.l_discount > 0.05 THEN l.l_extendedprice - (l.l_extendedprice * l.l_discount) ELSE l.l_extendedprice END) AS total_revenue,
       DENSE_RANK() OVER (PARTITION BY nc.n_nationkey ORDER BY SUM(l.l_extendedprice) DESC) AS revenue_rank
FROM part p
LEFT JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
LEFT JOIN supplier_hierarchy sh ON ps.ps_suppkey = sh.s_suppkey
JOIN nation_customer nc ON sh.s_nationkey = nc.n_nationkey
JOIN lineitem l ON ps.ps_partkey = l.l_partkey
JOIN orders o ON l.l_orderkey = o.o_orderkey
LEFT JOIN (SELECT c.c_nationkey, COUNT(c.c_custkey) AS cust_count
           FROM customer c
           WHERE c.c_acctbal IS NOT NULL AND c.c_acctbal > 2000
           GROUP BY c.c_nationkey) ns ON nc.n_nationkey = ns.c_nationkey
WHERE p.p_size IN (SELECT DISTINCT p_size FROM part WHERE p_retailprice < 50)
  AND l.l_shipdate BETWEEN DATE '1997-01-01' AND DATE '1997-12-31'
  AND (l.l_returnflag = 'R' OR l.l_returnflag IS NULL)
GROUP BY p.p_partkey, p.p_name, sh.level, nc.n_name, ns.cust_count
HAVING COUNT(DISTINCT o.o_orderkey) > 3
  AND SUM(l.l_quantity) > (SELECT AVG(l2.l_quantity) FROM lineitem l2 WHERE l2.l_shipdate IS NOT NULL)
ORDER BY total_revenue DESC NULLS LAST;
