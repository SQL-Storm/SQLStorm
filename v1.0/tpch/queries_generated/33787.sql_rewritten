WITH RECURSIVE order_hierarchy AS (
    SELECT o.o_orderkey, o.o_orderdate, o.o_totalprice, 1 AS level
    FROM orders o
    WHERE o.o_orderstatus = 'O'
    
    UNION ALL
    
    SELECT o.o_orderkey, o.o_orderdate, o.o_totalprice, oh.level + 1
    FROM orders o
    JOIN order_hierarchy oh ON o.o_orderkey = oh.o_orderkey
    WHERE o.o_orderstatus = 'O' AND oh.level < 5
),
supplier_summary AS (
    SELECT ps.ps_partkey, SUM(ps.ps_availqty) AS total_avail_qty, AVG(ps.ps_supplycost) AS avg_supply_cost
    FROM partsupp ps
    GROUP BY ps.ps_partkey
),
lineitem_summary AS (
    SELECT l.l_orderkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue
    FROM lineitem l
    WHERE l.l_shipdate >= DATE '1997-01-01'
    GROUP BY l.l_orderkey
),
customer_orders AS (
    SELECT c.c_custkey, c.c_name, COUNT(DISTINCT o.o_orderkey) AS num_orders
    FROM customer c
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    GROUP BY c.c_custkey, c.c_name
),
combined_data AS (
    SELECT
        co.c_custkey,
        co.c_name,
        oh.o_orderkey,
        oh.o_orderdate,
        oh.o_totalprice,
        ls.total_revenue,
        ss.total_avail_qty,
        ss.avg_supply_cost,
        ROW_NUMBER() OVER (PARTITION BY co.c_custkey ORDER BY oh.o_orderdate DESC) AS rn
    FROM customer_orders co
    LEFT JOIN order_hierarchy oh ON co.num_orders > 0
    LEFT JOIN lineitem_summary ls ON oh.o_orderkey = ls.l_orderkey
    LEFT JOIN supplier_summary ss ON ss.ps_partkey = (
        SELECT ps.ps_partkey
        FROM partsupp ps
        JOIN supplier s ON ps.ps_suppkey = s.s_suppkey
        WHERE s.s_nationkey = co.c_nationkey
        ORDER BY ps.ps_availqty DESC
        LIMIT 1
    )
)
SELECT
    c.c_name,
    COUNT(DISTINCT o.o_orderkey) AS total_orders,
    SUM(l.total_revenue) AS total_revenue,
    AVG(s.avg_supply_cost) AS avg_supply_cost,
    COUNT(DISTINCT s.ps_partkey) AS part_count
FROM combined_data cd
LEFT JOIN customer c ON cd.c_custkey = c.c_custkey
LEFT JOIN orders o ON cd.o_orderkey = o.o_orderkey
LEFT JOIN partsupp s ON cd.ps_partkey = s.ps_partkey
WHERE cd.rn = 1 OR cd.total_avail_qty IS NULL
GROUP BY c.c_name
HAVING SUM(l.total_revenue) > 10000
ORDER BY total_orders DESC, total_revenue DESC
LIMIT 10;