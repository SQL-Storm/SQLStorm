
WITH RankedOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_orderdate,
        o.o_totalprice,
        o.o_orderstatus,
        ROW_NUMBER() OVER (PARTITION BY o.o_custkey ORDER BY o.o_orderdate DESC) AS rn
    FROM 
        orders o
    WHERE 
        o.o_orderstatus IN ('F', 'P')
),
SupplierStats AS (
    SELECT 
        ps.ps_partkey,
        SUM(ps.ps_availqty) AS total_available,
        AVG(ps.ps_supplycost) AS avg_supply_cost
    FROM 
        partsupp ps
    GROUP BY 
        ps.ps_partkey
),
PartDetails AS (
    SELECT 
        p.p_partkey,
        p.p_name,
        p.p_brand,
        p.p_retailprice
    FROM 
        part p
    WHERE 
        p.p_size >= 10
),
CustomerInfo AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        n.n_name AS nation_name,
        ROW_NUMBER() OVER (PARTITION BY n.n_regionkey ORDER BY c.c_acctbal DESC) AS cust_rank
    FROM 
        customer c
    JOIN 
        nation n ON c.c_nationkey = n.n_nationkey
)
SELECT 
    ci.c_name,
    ci.nation_name,
    SUM(lo.l_extendedprice * (1 - lo.l_discount)) AS total_revenue,
    ps.total_available,
    ps.avg_supply_cost,
    CASE 
        WHEN COUNT(DISTINCT o.o_orderkey) > 0 THEN 'Has Orders'
        ELSE 'No Orders' 
    END AS order_status
FROM 
    CustomerInfo ci
LEFT JOIN 
    RankedOrders o ON ci.c_custkey = o.o_custkey
LEFT JOIN 
    lineitem lo ON o.o_orderkey = lo.l_orderkey
LEFT JOIN 
    SupplierStats ps ON lo.l_partkey = ps.ps_partkey
WHERE 
    ci.cust_rank <= 5 
AND 
    (ci.c_name IS NOT NULL AND LENGTH(ci.c_name) > 5)
GROUP BY 
    ci.c_name, ci.nation_name, ps.total_available, ps.avg_supply_cost
HAVING 
    SUM(lo.l_extendedprice * (1 - lo.l_discount)) > 10000.00 OR ps.total_available IS NULL
ORDER BY 
    total_revenue DESC, ci.c_name;
