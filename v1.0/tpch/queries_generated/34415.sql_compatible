
WITH RECURSIVE Sales_CTE AS (
    SELECT 
        o.o_orderkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_sales,
        ROW_NUMBER() OVER (PARTITION BY o.o_orderkey ORDER BY SUM(l.l_extendedprice * (1 - l.l_discount)) DESC) AS rn
    FROM 
        orders o
    JOIN 
        lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE 
        o.o_orderdate >= DATE '1997-01-01' 
        AND o.o_orderdate <= DATE '1997-12-31'
    GROUP BY 
        o.o_orderkey
),
Supplier_Info AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_cost
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey, s.s_name
),
Part_Summary AS (
    SELECT 
        p.p_partkey,
        p.p_name,
        COUNT(DISTINCT ps.ps_suppkey) AS supplier_count,
        AVG(ps.ps_supplycost) AS avg_supply_cost
    FROM 
        part p
    LEFT JOIN 
        partsupp ps ON p.p_partkey = ps.ps_partkey
    GROUP BY 
        p.p_partkey, p.p_name
)
SELECT 
    r.r_name AS region_name,
    COUNT(DISTINCT c.c_custkey) AS customer_count,
    SUM(s.total_sales) AS total_sales_value,
    COALESCE(SUM(si.total_supply_cost), 0) AS total_cost_of_suppliers,
    p.p_name,
    ps.supplier_count,
    ps.avg_supply_cost,
    CASE 
        WHEN AVG(s.total_sales) > 5000 THEN 'High Sales'
        WHEN AVG(s.total_sales) BETWEEN 1000 AND 5000 THEN 'Average Sales'
        ELSE 'Low Sales'
    END AS sales_category
FROM 
    region r
JOIN 
    nation n ON r.r_regionkey = n.n_regionkey
JOIN 
    customer c ON n.n_nationkey = c.c_nationkey
LEFT JOIN 
    Sales_CTE s ON s.o_orderkey IN (SELECT o.o_orderkey FROM orders o WHERE o.o_custkey = c.c_custkey)
LEFT JOIN 
    Supplier_Info si ON si.s_suppkey IN (SELECT ps.ps_suppkey FROM partsupp ps WHERE ps.ps_partkey IN (SELECT p.p_partkey FROM part p))
LEFT JOIN 
    Part_Summary ps ON ps.p_partkey IN (SELECT ps.p_partkey FROM partsupp ps LEFT JOIN part p ON ps.ps_partkey = p.p_partkey)
GROUP BY 
    r.r_name, p.p_name, ps.supplier_count, ps.avg_supply_cost
ORDER BY 
    total_sales_value DESC, customer_count ASC;
