WITH RankedCustomers AS (
    SELECT 
        c.c_custkey, 
        c.c_name, 
        c.c_acctbal, 
        ROW_NUMBER() OVER (PARTITION BY c.c_mktsegment ORDER BY c.c_acctbal DESC) AS rnk
    FROM 
        customer c
    WHERE 
        c.c_acctbal IS NOT NULL
), 
HighValueParts AS (
    SELECT 
        p.p_partkey, 
        p.p_name, 
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_value
    FROM 
        part p
    JOIN 
        partsupp ps ON p.p_partkey = ps.ps_partkey
    GROUP BY 
        p.p_partkey, p.p_name
    HAVING 
        SUM(ps.ps_supplycost * ps.ps_availqty) > 10000
), 
RecentOrders AS (
    SELECT 
        o.o_orderkey, 
        o.o_custkey, 
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_spent
    FROM 
        orders o
    JOIN 
        lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE 
        o.o_orderdate >= cast('1998-10-01' as date) - INTERVAL '1 year'
    GROUP BY 
        o.o_orderkey, o.o_custkey
), 
NationSupplier AS (
    SELECT 
        n.n_nationkey, 
        n.n_name, 
        COUNT(DISTINCT s.s_suppkey) AS supplier_count
    FROM 
        nation n
    LEFT JOIN 
        supplier s ON n.n_nationkey = s.s_nationkey
    GROUP BY 
        n.n_nationkey, n.n_name
    HAVING 
        COUNT(s.s_suppkey) IS NULL OR COUNT(s.s_suppkey) > 3
)
SELECT 
    rc.c_custkey, 
    rc.c_name, 
    COALESCE(rsp.total_spent, 0) AS total_spent,
    hp.p_name AS high_value_part, 
    ns.n_name AS nation_name, 
    ns.supplier_count,
    CASE 
        WHEN rc.rnk = 1 THEN 'Top Customer'
        ELSE 'Regular Customer'
    END AS customer_rank
FROM 
    RankedCustomers rc
LEFT JOIN 
    RecentOrders rsp ON rc.c_custkey = rsp.o_custkey
INNER JOIN 
    HighValueParts hp ON hp.total_value > (SELECT AVG(total_value) FROM HighValueParts)
LEFT JOIN 
    NationSupplier ns ON rc.c_nationkey = ns.n_nationkey
WHERE 
    rc.rnk <= 10 
    AND (rsp.total_spent > 1000 OR rsp.total_spent IS NULL)
ORDER BY 
    rc.c_custkey;