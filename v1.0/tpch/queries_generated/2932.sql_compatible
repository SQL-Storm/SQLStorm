
WITH SupplierCost AS (
    SELECT ps.ps_partkey, SUM(ps.ps_supplycost) AS total_supply_cost
    FROM partsupp ps
    GROUP BY ps.ps_partkey
),
CustomerOrderSummary AS (
    SELECT c.c_custkey, COUNT(o.o_orderkey) AS order_count, SUM(o.o_totalprice) AS total_spent
    FROM customer c
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    GROUP BY c.c_custkey
),
PartInfo AS (
    SELECT p.p_partkey, p.p_name, p.p_brand, p.p_retailprice, 
           ROW_NUMBER() OVER (PARTITION BY p.p_brand ORDER BY p.p_retailprice DESC) AS price_rank
    FROM part p
),
NationSupplier AS (
    SELECT n.n_name, COUNT(s.s_suppkey) AS supplier_count
    FROM nation n
    LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
    GROUP BY n.n_name
)
SELECT pi.p_partkey, pi.p_name, pi.p_brand, pi.p_retailprice, 
       COALESCE(sc.total_supply_cost, 0) AS total_supply_cost,
       COALESCE(c_summary.order_count, 0) AS order_count, 
       COALESCE(c_summary.total_spent, 0) AS total_spent,
       COALESCE(ns.supplier_count, 0) AS supplier_count,
       CASE 
           WHEN pi.price_rank <= 5 THEN 'Top 5'
           ELSE 'Other'
       END AS price_category
FROM PartInfo pi
LEFT JOIN SupplierCost sc ON pi.p_partkey = sc.ps_partkey
LEFT JOIN CustomerOrderSummary c_summary ON c_summary.c_custkey IN 
    (SELECT c.c_custkey FROM customer c
     WHERE c.c_acctbal > 100.00)
LEFT JOIN NationSupplier ns ON ns.n_name IN 
    (SELECT DISTINCT n.n_name FROM nation n 
     WHERE n.n_nationkey IN (SELECT DISTINCT s.s_nationkey FROM supplier s))
WHERE pi.p_retailprice IS NOT NULL
ORDER BY pi.p_partkey, COALESCE(c_summary.total_spent, 0) DESC;
