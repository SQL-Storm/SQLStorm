
WITH RankedSuppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        s.s_acctbal,
        ROW_NUMBER() OVER (PARTITION BY s.s_nationkey ORDER BY s.s_acctbal DESC) AS rn
    FROM supplier s
    WHERE s.s_acctbal IS NOT NULL
),
AvgPartPrice AS (
    SELECT 
        ps.ps_partkey,
        AVG(ps.ps_supplycost) AS avg_supply_cost
    FROM partsupp ps
    GROUP BY ps.ps_partkey
),
FilteredOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_totalprice,
        o.o_orderdate,
        CASE 
            WHEN o.o_orderstatus = 'F' THEN 'Finalized' 
            ELSE 'Pending' 
        END AS order_status
    FROM orders o
    WHERE o.o_totalprice > 1000
),
PartSupplierDetails AS (
    SELECT 
        p.p_partkey,
        p.p_name,
        ps.ps_availqty,
        ps.ps_supplycost,
        p.p_retailprice,
        (p.p_retailprice - ps.ps_supplycost) AS profit_margin,
        ps.ps_suppkey
    FROM part p
    JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
    WHERE ps.ps_availqty IS NOT NULL
),
TotalRevenue AS (
    SELECT 
        l.l_partkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue
    FROM lineitem l
    WHERE l.l_shipdate BETWEEN DATE '1996-01-01' AND DATE '1996-12-31'
    GROUP BY l.l_partkey
)
SELECT 
    p.p_partkey,
    p.p_name,
    COALESCE(SUM(tr.total_revenue), 0) AS total_revenue,
    COALESCE(rn.rn, 0) AS supplier_rank,
    pp.avg_supply_cost,
    pp.profit_margin
FROM part p
LEFT JOIN PartSupplierDetails pp ON p.p_partkey = pp.p_partkey
LEFT JOIN TotalRevenue tr ON p.p_partkey = tr.l_partkey
LEFT JOIN RankedSuppliers rn ON pp.ps_suppkey = rn.s_suppkey
GROUP BY 
    p.p_partkey, 
    p.p_name, 
    pp.avg_supply_cost, 
    pp.profit_margin,
    rn.rn
ORDER BY 
    total_revenue DESC, 
    p.p_partkey;
