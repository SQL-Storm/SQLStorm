
WITH RankedSuppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        s.s_acctbal,
        ROW_NUMBER() OVER (PARTITION BY ps_partkey ORDER BY s.s_acctbal DESC) AS rnk
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
),
HighValueOrders AS (
    SELECT 
        o.o_orderkey,
        c.c_custkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_value,
        ROW_NUMBER() OVER (PARTITION BY o.o_orderkey ORDER BY SUM(l.l_extendedprice * (1 - l.l_discount)) DESC) AS order_rank
    FROM 
        orders o
    JOIN 
        lineitem l ON o.o_orderkey = l.l_orderkey
    JOIN 
        customer c ON o.o_custkey = c.c_custkey
    GROUP BY 
        o.o_orderkey, c.c_custkey
    HAVING 
        SUM(l.l_extendedprice * (1 - l.l_discount)) > 5000
),
TopParts AS (
    SELECT 
        p.p_partkey,
        p.p_name,
        COUNT(ps.ps_suppkey) AS supplier_count,
        AVG(ps.ps_supplycost) AS avg_supplycost
    FROM 
        part p
    LEFT JOIN 
        partsupp ps ON p.p_partkey = ps.ps_partkey
    GROUP BY 
        p.p_partkey, p.p_name
    HAVING 
        AVG(ps.ps_supplycost) < 100 AND COUNT(ps.ps_suppkey) > 5
)
SELECT 
    o.o_orderkey,
    o.o_orderdate,
    o.o_totalprice,
    ts.p_name,
    ts.avg_supplycost,
    COALESCE(rs.s_name, 'No Supplier') AS supplier_name,
    COALESCE(rs.s_acctbal, 0.00) AS supplier_balance
FROM 
    HighValueOrders o
LEFT JOIN 
    TopParts ts ON EXISTS (SELECT 1 FROM lineitem l WHERE l.l_orderkey = o.o_orderkey AND l.l_partkey = ts.p_partkey)
LEFT JOIN 
    RankedSuppliers rs ON ts.p_partkey = rs.s_suppkey AND rs.rnk = 1
WHERE 
    o.total_value > 10000
ORDER BY 
    o.o_orderdate DESC, o.o_orderkey, ts.p_name;
