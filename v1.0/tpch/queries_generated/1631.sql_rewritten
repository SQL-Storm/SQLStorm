WITH RankedSupplier AS (
    SELECT 
        ps.s_suppkey,
        s.s_name,
        s.s_acctbal,
        ROW_NUMBER() OVER (PARTITION BY ps.ps_partkey ORDER BY s.s_acctbal DESC) AS rn
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    WHERE 
        s.s_acctbal > (SELECT AVG(s_acctbal) FROM supplier)
),
CustomerOrderSummary AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        COUNT(o.o_orderkey) AS total_orders,
        SUM(o.o_totalprice) AS total_spent,
        MAX(o.o_orderdate) AS last_order_date
    FROM 
        customer c
    LEFT JOIN 
        orders o ON c.c_custkey = o.o_custkey
    GROUP BY 
        c.c_custkey, c.c_name
),
FilteredLineItems AS (
    SELECT 
        l.l_orderkey,
        l.l_partkey,
        l.l_quantity,
        l.l_discount,
        l.l_extendedprice * (1 - l.l_discount) AS discounted_price
    FROM 
        lineitem l
    WHERE 
        l.l_shipdate < cast('1998-10-01' as date) - INTERVAL '30 days'
)

SELECT 
    ps.ps_partkey,
    p.p_name,
    p.p_brand,
    SUM(fli.discounted_price) AS total_discounted_revenue,
    AVG(cos.total_spent) AS avg_customer_spending,
    COUNT(DISTINCT rs.s_suppkey) AS num_suppliers
FROM 
    part p
LEFT JOIN 
    partsupp ps ON p.p_partkey = ps.ps_partkey
LEFT JOIN 
    RankedSupplier rs ON ps.ps_suppkey = rs.s_suppkey AND rs.rn = 1
LEFT JOIN 
    FilteredLineItems fli ON ps.ps_partkey = fli.l_partkey
LEFT JOIN 
    CustomerOrderSummary cos ON fli.l_orderkey IN (SELECT o.o_orderkey FROM orders o WHERE o.o_custkey = cos.c_custkey)
GROUP BY 
    ps.ps_partkey, p.p_name, p.p_brand
HAVING 
    SUM(fli.discounted_price) > 1000
ORDER BY 
    total_discounted_revenue DESC 
LIMIT 10;