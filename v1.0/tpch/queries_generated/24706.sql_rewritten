WITH RECURSIVE SupplierHierarchy AS (
    SELECT s_suppkey, s_name, s_nationkey, s_acctbal, 0 AS level
    FROM supplier
    WHERE s_acctbal > (SELECT AVG(s_acctbal) FROM supplier)  
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal, sh.level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE sh.level < 3  
),
FilteredParts AS (
    SELECT p_partkey, p_name, 
           CASE
               WHEN p_size IN (SELECT DISTINCT ps_availqty FROM partsupp WHERE ps_supplycost < 100) 
               THEN 'High Availability' 
               ELSE 'Standard' 
           END AS availability,
           p_retailprice, 
           ROW_NUMBER() OVER (PARTITION BY p_type ORDER BY p_retailprice DESC) as rank
    FROM part
    WHERE p_retailprice IS NOT NULL
    AND p_comment NOT LIKE '%old%'  
),
AggregatedData AS (
    SELECT rh.r_name, 
           SUM(ps.ps_supplycost * l.l_quantity) AS total_cost, 
           MAX(p.p_retailprice) AS max_price,
           COUNT(DISTINCT o.o_orderkey) AS order_count
    FROM region rh
    LEFT JOIN nation n ON rh.r_regionkey = n.n_regionkey
    LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
    LEFT JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    LEFT JOIN lineitem l ON ps.ps_partkey = l.l_partkey
    LEFT JOIN orders o ON l.l_orderkey = o.o_orderkey
    WHERE s.s_acctbal > 0  
    GROUP BY rh.r_name
)
SELECT a.r_name, a.total_cost, a.max_price, sh.s_name AS supplier_name
FROM AggregatedData a
JOIN SupplierHierarchy sh ON sh.s_nationkey = (
    SELECT n_regionkey FROM nation WHERE n_nationkey = sh.s_nationkey LIMIT 1)
WHERE a.order_count > (SELECT AVG(order_count) FROM 
                       (SELECT COUNT(DISTINCT o_orderkey) AS order_count FROM orders 
                        GROUP BY o_custkey) AS customer_orders)
UNION ALL 
SELECT 'Other Regions', SUM(l.l_extendedprice) AS total_cost, 
       AVG(p.p_retailprice) AS max_price, 
       'N/A' 
FROM lineitem l
JOIN part p ON l.l_partkey = p.p_partkey
WHERE l.l_returnflag IS NULL  
AND p.p_mfgr LIKE '%Acme%'  
GROUP BY p.p_mfgr
HAVING COUNT(*) > 10
ORDER BY total_cost DESC;