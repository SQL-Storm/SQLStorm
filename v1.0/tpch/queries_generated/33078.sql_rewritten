WITH RECURSIVE SupplierHierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_address, s.s_nationkey, 0 AS level
    FROM supplier s
    WHERE s.s_acctbal > (SELECT AVG(s_acctbal) FROM supplier)

    UNION ALL

    SELECT s.s_suppkey, s.s_name, s.s_address, s.s_nationkey, sh.level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE s.s_acctbal > sh.level * 1000
),
CustomerOrders AS (
    SELECT c.c_custkey, c.c_name, COUNT(o.o_orderkey) AS order_count
    FROM customer c
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    GROUP BY c.c_custkey
),
OrderDetails AS (
    SELECT o.o_orderkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE l.l_shipdate >= '1997-01-01' AND l.l_shipdate < '1998-01-01'
    GROUP BY o.o_orderkey
),
RegionStats AS (
    SELECT r.r_name, SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_cost
    FROM region r
    JOIN nation n ON r.r_regionkey = n.n_regionkey
    JOIN supplier s ON n.n_nationkey = s.s_nationkey
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY r.r_name
)
SELECT 
    c.c_name, 
    coalesce(o.order_count, 0) AS order_count, 
    os.total_revenue, 
    rh.total_supply_cost,
    CASE 
        WHEN rh.total_supply_cost IS NULL THEN 'No supply'
        ELSE 'Has supply'
    END AS supply_status,
    (SELECT COUNT(DISTINCT p.p_partkey) 
     FROM part p 
     JOIN partsupp ps ON p.p_partkey = ps.ps_partkey 
     WHERE ps.ps_availqty > 0) AS available_parts
FROM 
    customer c
LEFT JOIN CustomerOrders o ON c.c_custkey = o.c_custkey
LEFT JOIN OrderDetails os ON os.o_orderkey IN (SELECT o.o_orderkey FROM orders o WHERE o.o_custkey = c.c_custkey)
LEFT JOIN RegionStats rh ON rh.r_name = (SELECT r.r_name FROM region r WHERE r.r_regionkey = (SELECT n.n_regionkey FROM nation n WHERE n.n_nationkey = c.c_nationkey))
WHERE c.c_acctbal IS NOT NULL
ORDER BY c.c_name;