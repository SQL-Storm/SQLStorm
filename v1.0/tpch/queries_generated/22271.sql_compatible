
WITH RecursiveSupplierCTE AS (
    SELECT s.s_suppkey, s.s_name, s.s_acctbal, s.nationkey, 1 AS level
    FROM supplier s
    WHERE s.s_acctbal IS NOT NULL AND s.s_acctbal > 5000

    UNION ALL

    SELECT s.s_suppkey, s.s_name, s.s_acctbal, s.nationkey, r.level + 1
    FROM supplier s
    JOIN RecursiveSupplierCTE r ON s.nationkey = r.nationkey
    WHERE s.s_acctbal IS NOT NULL AND r.level < 5
),
PartSupplierDetails AS (
    SELECT p.p_partkey, p.p_name, ps.ps_supplycost, ps.ps_availqty,
           RANK() OVER (PARTITION BY p.p_partkey ORDER BY ps.ps_supplycost DESC) AS rank
    FROM part p
    JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
    WHERE ps.ps_availqty > 0 AND ps.ps_supplycost > (SELECT AVG(ps_supplycost) FROM partsupp)
),
TotalOrderValue AS (
    SELECT o.o_orderkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_value
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE l.l_shipdate >= '1997-01-01' AND l.l_shipdate < '1998-01-01'
    GROUP BY o.o_orderkey
),
FilteredOrders AS (
    SELECT o.o_orderkey, o.o_orderstatus, tv.total_value
    FROM orders o
    JOIN TotalOrderValue tv ON o.o_orderkey = tv.o_orderkey
    WHERE (o.o_orderstatus = 'F' OR o.o_orderstatus = 'S') AND tv.total_value IS NOT NULL
),
RegionActivity AS (
    SELECT r.r_name, COUNT(DISTINCT o.o_orderkey) AS order_count, AVG(o.o_totalprice) AS avg_price
    FROM region r
    LEFT JOIN nation n ON r.r_regionkey = n.n_regionkey
    LEFT JOIN customer c ON n.n_nationkey = c.c_nationkey
    LEFT JOIN FilteredOrders o ON c.c_custkey = o.o_custkey
    GROUP BY r.r_name
    HAVING COUNT(o.o_orderkey) > (
        SELECT COUNT(*) FROM FilteredOrders fo WHERE fo.o_orderstatus = 'S'
    ) / 2
    ORDER BY avg_price DESC
)
SELECT r.r_name, ra.order_count, ra.avg_price, 
       COALESCE(rs.s_name, 'No Supplier') AS supplier_info
FROM RegionActivity ra
LEFT JOIN RecursiveSupplierCTE rs ON ra.order_count > 10 AND rs.level < 3
WHERE ra.order_count > 5 AND ra.avg_price <= 10000
ORDER BY ra.avg_price DESC, ra.order_count ASC;
