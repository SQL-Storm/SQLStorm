
WITH RankedSuppliers AS (
    SELECT
        s.s_suppkey,
        s.s_name,
        s.s_acctbal,
        RANK() OVER (PARTITION BY s.s_nationkey ORDER BY s.s_acctbal DESC) AS rank_acctbal
    FROM supplier s
),
MaxPartPrice AS (
    SELECT
        MAX(p.p_retailprice) AS max_price,
        COUNT(*) AS part_count
    FROM part p
    WHERE p.p_size BETWEEN 10 AND 20
    GROUP BY p.p_mfgr
),
RecentOrders AS (
    SELECT
        o.o_orderkey,
        o.o_orderdate,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE l.l_shipdate >= DATE '1998-10-01' - INTERVAL '30 days'
    GROUP BY o.o_orderkey, o.o_orderdate
)
SELECT
    r.r_name,
    ps.ps_partkey,
    p.p_name,
    COALESCE(SUM(l.l_quantity), 0) AS total_quantity,
    AVG(l.l_extendedprice) AS avg_price,
    NTILE(3) OVER (ORDER BY COALESCE(SUM(l.l_extendedprice), 0) DESC) AS revenue_bucket,
    CASE 
        WHEN MAX(p.p_retailprice) > (SELECT max_price FROM MaxPartPrice WHERE part_count > 5)
        THEN 'Premium'
        ELSE 'Standard'
    END AS pricing_category
FROM lineitem l
LEFT JOIN partsupp ps ON l.l_partkey = ps.ps_partkey
LEFT JOIN part p ON ps.ps_partkey = p.p_partkey
JOIN supplier s ON ps.ps_suppkey = s.s_suppkey
JOIN nation n ON s.s_nationkey = n.n_nationkey
JOIN region r ON n.n_regionkey = r.r_regionkey
WHERE l.l_returnflag = 'N'
AND EXISTS (
    SELECT 1
    FROM RankedSuppliers rs
    WHERE rs.s_suppkey = s.s_suppkey AND rs.rank_acctbal <= 5
)
AND (p.p_brand NOT LIKE '%Bizarre%' OR p.p_brand IS NULL)
GROUP BY r.r_name, ps.ps_partkey, p.p_name
HAVING COUNT(DISTINCT o.o_orderkey) > 1
ORDER BY r.r_name, total_quantity DESC;
