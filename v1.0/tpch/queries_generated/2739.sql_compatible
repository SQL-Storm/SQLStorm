
WITH RankedOrders AS (
    SELECT o.o_orderkey, o.o_orderdate, o.o_totalprice, o.o_orderstatus,
           ROW_NUMBER() OVER (PARTITION BY o.o_orderstatus ORDER BY o.o_totalprice DESC) AS rn
    FROM orders o
    WHERE o.o_orderdate >= '1997-01-01' AND o.o_orderdate < '1998-01-01'
),
SupplierDetails AS (
    SELECT s.s_suppkey, s.s_name, s.s_address, s.s_nationkey, 
           SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_cost
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY s.s_suppkey, s.s_name, s.s_address, s.s_nationkey
),
CustomerAggregates AS (
    SELECT c.c_custkey, c.c_name, c.c_nationkey, 
           SUM(o.o_totalprice) AS total_spent
    FROM customer c
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    GROUP BY c.c_custkey, c.c_name, c.c_nationkey
)
SELECT COALESCE(n.n_name, 'Unknown') AS nation_name,
       p.p_name, 
       COUNT(DISTINCT lo.l_orderkey) AS orders_count,
       SUM(lo.l_extendedprice * (1 - lo.l_discount)) AS total_revenue,
       AVG(lo.l_tax) AS average_tax,
       MAX(lo.l_shipdate) AS last_ship_date,
       MAX(lo.l_discount) AS max_discount,
       FIRST_VALUE(cd.total_spent) OVER (PARTITION BY n.n_nationkey ORDER BY cd.total_spent DESC) AS highest_spender,
       sd.total_supply_cost
FROM lineitem lo
JOIN part p ON lo.l_partkey = p.p_partkey
LEFT JOIN nation n ON n.n_nationkey = (SELECT s.s_nationkey 
                                        FROM supplier s 
                                        WHERE s.s_suppkey = lo.l_suppkey)
LEFT JOIN CustomerAggregates cd ON cd.c_nationkey = n.n_nationkey
JOIN SupplierDetails sd ON sd.s_nationkey = n.n_nationkey
WHERE lo.l_shipdate >= '1997-01-01' 
GROUP BY n.n_nationkey, n.n_name, p.p_name, sd.total_supply_cost
ORDER BY total_revenue DESC, orders_count DESC;
