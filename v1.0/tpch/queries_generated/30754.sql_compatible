
WITH RECURSIVE part_hierarchy AS (
    SELECT p_partkey, p_name, p_size, p_retailprice, 1 AS level 
    FROM part 
    WHERE p_size < 10
    UNION ALL
    SELECT p.p_partkey, p.p_name, p.p_size, p.p_retailprice, ph.level + 1 
    FROM part_hierarchy ph
    JOIN part p ON p.p_size > ph.p_size AND ph.level < 5
),
supplier_summary AS (
    SELECT s.n_nationkey, COUNT(DISTINCT ps.ps_suppkey) AS total_suppliers,
           SUM(ps.ps_supplycost) AS total_supplycost
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY s.n_nationkey
),
order_summary AS (
    SELECT o.o_orderkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_amount
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE o.o_orderstatus = 'O'
    GROUP BY o.o_orderkey
)
SELECT r.r_name, COALESCE(ss.total_suppliers, 0) AS supplier_count,
       COALESCE(os.total_amount, 0) AS total_order_value,
       SUM(ph.p_retailprice) AS total_part_value,
       AVG(ph.p_retailprice) OVER (PARTITION BY ph.level) AS avg_part_price
FROM region r
LEFT JOIN nation n ON r.r_regionkey = n.n_regionkey
LEFT JOIN supplier_summary ss ON n.n_nationkey = ss.n_nationkey
LEFT JOIN order_summary os ON n.n_nationkey = os.o_orderkey
LEFT JOIN part_hierarchy ph ON ph.p_partkey IN (
    SELECT ps.ps_partkey 
    FROM partsupp ps 
    WHERE ps.ps_availqty > 100
)
WHERE r.r_name IS NOT NULL
GROUP BY r.r_name, ss.total_suppliers, os.total_amount, ph.level
HAVING COUNT(DISTINCT ph.p_partkey) > 0
ORDER BY r.r_name;
