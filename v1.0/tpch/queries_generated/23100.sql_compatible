
WITH RankedParts AS (
    SELECT 
        p.p_partkey, 
        p.p_name, 
        p.p_retailprice, 
        ROW_NUMBER() OVER (PARTITION BY p.p_brand ORDER BY p.p_retailprice DESC) AS rn
    FROM part p
), 
SupplierAvailability AS (
    SELECT 
        ps.ps_partkey, 
        SUM(ps.ps_availqty) AS total_available
    FROM partsupp ps
    GROUP BY ps.ps_partkey
), 
HighValueCustomers AS (
    SELECT 
        c.c_custkey, 
        c.c_name, 
        c.c_acctbal
    FROM customer c
    WHERE c.c_acctbal > (
        SELECT AVG(c2.c_acctbal)
        FROM customer c2
    )
), 
OrderDetails AS (
    SELECT 
        o.o_orderkey,
        o.o_totalprice,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_line_price
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    GROUP BY o.o_orderkey, o.o_totalprice
)
SELECT 
    r.n_name,
    COUNT(DISTINCT p.p_partkey) AS part_count,
    SUM(od.total_line_price) AS total_sales,
    AVG(ps.total_available) AS avg_avail_qty
FROM region r
JOIN nation n ON r.r_regionkey = n.n_regionkey
JOIN supplier s ON n.n_nationkey = s.s_nationkey
LEFT JOIN RankedParts p ON s.s_suppkey = p.p_partkey
LEFT JOIN SupplierAvailability ps ON p.p_partkey = ps.ps_partkey
JOIN HighValueCustomers c ON s.s_nationkey = c.c_nationkey
JOIN OrderDetails od ON c.c_custkey IN (
      SELECT o.o_custkey 
      FROM orders o 
      WHERE o.o_orderstatus = 'O' 
      UNION ALL 
      SELECT o.o_custkey 
      FROM orders o 
      WHERE o.o_orderstatus IS NULL
)
GROUP BY r.n_name
HAVING COUNT(DISTINCT p.p_partkey) > 5 
   AND SUM(od.total_line_price) IS NOT NULL
   AND AVG(ps.total_available) IS NOT NULL
ORDER BY total_sales DESC;
