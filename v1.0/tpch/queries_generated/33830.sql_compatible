
WITH RECURSIVE OrderHierarchy AS (
    SELECT o.o_orderkey, o.o_custkey, o.o_totalprice, o.o_orderdate,
           ROW_NUMBER() OVER (PARTITION BY o.o_orderkey ORDER BY o.o_orderdate) AS order_level
    FROM orders o
    WHERE o.o_totalprice > 500
),
SupplierStats AS (
    SELECT s.s_suppkey, SUM(ps.ps_availqty) AS total_available_qty,
           AVG(ps.ps_supplycost) AS avg_supply_cost
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY s.s_suppkey
),
CustomerSegmentation AS (
    SELECT c.c_custkey, c.c_mktsegment, COUNT(o.o_orderkey) AS order_count
    FROM customer c
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    GROUP BY c.c_custkey, c.c_mktsegment
    HAVING COUNT(o.o_orderkey) > 3
)
SELECT r.r_name, 
       SUM(l.l_extendedprice * (1 - l.l_discount)) AS revenue,
       COUNT(DISTINCT c.c_custkey) AS customer_count,
       COALESCE(s.total_available_qty, 0) AS total_available_qty,
       COALESCE(s.avg_supply_cost, 0) AS avg_supply_cost,
       COUNT(DISTINCT o.o_orderkey) AS unique_orders,
       MAX(o.o_orderdate) AS last_order_date
FROM region r
JOIN nation n ON n.n_regionkey = r.r_regionkey
JOIN supplier s ON s.s_nationkey = n.n_nationkey
JOIN partsupp ps ON ps.ps_suppkey = s.s_suppkey
JOIN part p ON p.p_partkey = ps.ps_partkey
JOIN lineitem l ON l.l_partkey = p.p_partkey
LEFT JOIN CustomerSegmentation c ON c.c_custkey = l.l_orderkey
LEFT JOIN OrderHierarchy o ON o.o_orderkey = l.l_orderkey
WHERE l.l_shipdate BETWEEN '1997-01-01' AND '1997-12-31'
AND p.p_size IN (SELECT DISTINCT p_size FROM part WHERE p.p_retailprice > 10)
GROUP BY r.r_name, s.total_available_qty, s.avg_supply_cost
ORDER BY revenue DESC, customer_count DESC;
