
WITH RecursivePartSales AS (
    SELECT
        p.p_partkey,
        p.p_name,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_sales,
        ROW_NUMBER() OVER (PARTITION BY p.p_partkey ORDER BY SUM(l.l_extendedprice * (1 - l.l_discount)) DESC) AS sales_rank,
        STRING_AGG(DISTINCT s.s_name, ', ') AS suppliers
    FROM
        part p
    LEFT JOIN
        lineitem l ON p.p_partkey = l.l_partkey
    LEFT JOIN
        partsupp ps ON p.p_partkey = ps.ps_partkey
    LEFT JOIN
        supplier s ON ps.ps_suppkey = s.s_suppkey
    WHERE
        l.l_shipdate >= DATE '1997-01-01' AND l.l_shipdate < DATE '1998-01-01'
    GROUP BY
        p.p_partkey, p.p_name
),
TotalSales AS (
    SELECT
        SUM(total_sales) AS grand_total
    FROM
        RecursivePartSales
),
NationAggregates AS (
    SELECT
        n.n_name,
        COUNT(DISTINCT c.c_custkey) AS customer_count,
        AVG(c.c_acctbal) AS average_account_balance
    FROM
        nation n
    INNER JOIN
        supplier s ON n.n_nationkey = s.s_nationkey
    INNER JOIN
        customer c ON s.s_nationkey = c.c_nationkey
    GROUP BY
        n.n_name
)
SELECT
    r.r_name,
    p.p_name,
    COALESCE(s.total_sales, 0) AS part_sales,
    n.customer_count,
    n.average_account_balance,
    (SELECT grand_total FROM TotalSales) AS total_revenue,
    CASE 
        WHEN COALESCE(s.total_sales, 0) > (SELECT AVG(COALESCE(total_sales, 0)) FROM RecursivePartSales) 
        THEN 'Above Average' 
        ELSE 'Below Average' 
    END AS sales_comparison
FROM
    region r
LEFT JOIN
    RecursivePartSales s ON r.r_regionkey = (SELECT n.n_regionkey FROM nation n WHERE n.n_name LIKE 'A%')
    CROSS JOIN part p
LEFT JOIN
    NationAggregates n ON n.n_name IN (SELECT n_name FROM nation WHERE n_regionkey = r.r_regionkey)
WHERE
    r.r_name IS NOT NULL
    AND r.r_regionkey NOT IN (SELECT r_regionkey FROM region WHERE r_comment LIKE '%discount%')
ORDER BY
    part_sales DESC, r.r_name ASC
LIMIT 100
OFFSET 50;
