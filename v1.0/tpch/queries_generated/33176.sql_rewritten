WITH RECURSIVE SupplierHierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_acctbal, 1 AS level
    FROM supplier s
    WHERE s.s_acctbal > 1000
    
    UNION ALL
    
    SELECT s.s_suppkey, s.s_name, s.s_acctbal, sh.level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.s_acctbal < sh.s_acctbal
    WHERE sh.level < 5
),
OrderSummary AS (
    SELECT c.c_custkey, 
           c.c_name, 
           SUM(o.o_totalprice) AS total_order_value,
           COUNT(o.o_orderkey) AS total_orders
    FROM customer c
    JOIN orders o ON c.c_custkey = o.o_custkey
    WHERE o.o_orderdate >= '1997-01-01'
    GROUP BY c.c_custkey, c.c_name
),
PartSupplier AS (
    SELECT p.p_partkey, 
           p.p_name,
           AVG(ps.ps_supplycost) AS avg_supply_cost,
           COUNT(DISTINCT ps.ps_suppkey) AS unique_suppliers
    FROM part p
    LEFT JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
    GROUP BY p.p_partkey, p.p_name
)
SELECT 
    r.r_name,
    ns.n_name,
    COUNT(DISTINCT o.o_orderkey) AS num_orders,
    SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
    SUM(CASE WHEN l.l_returnflag = 'R' THEN l.l_quantity ELSE 0 END) AS total_returned_quantity,
    nt.total_orders,
    ps.avg_supply_cost,
    CASE 
        WHEN ns.n_nationkey IS NOT NULL THEN 'Exists'
        ELSE 'Does not exist'
    END AS nation_existence
FROM region r
JOIN nation ns ON r.r_regionkey = ns.n_regionkey
LEFT JOIN orders o ON ns.n_nationkey = (SELECT cust.c_nationkey FROM customer cust WHERE cust.c_custkey = o.o_custkey)
JOIN lineitem l ON o.o_orderkey = l.l_orderkey
JOIN OrderSummary nt ON nt.c_custkey = o.o_custkey
JOIN PartSupplier ps ON ps.p_partkey = l.l_partkey
WHERE l.l_shipdate BETWEEN '1997-01-01' AND '1997-12-31'
GROUP BY r.r_name, ns.n_name, nt.total_orders, ps.avg_supply_cost
ORDER BY num_orders DESC, total_revenue DESC
LIMIT 10;