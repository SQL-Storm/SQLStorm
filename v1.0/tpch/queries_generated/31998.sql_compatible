
WITH RECURSIVE SupplierHierarchy AS (
    SELECT s_suppkey, s_name, s_nationkey, s_acctbal, 1 AS level
    FROM supplier
    WHERE s_suppkey IN (SELECT ps_suppkey FROM partsupp WHERE ps_availqty > 100)
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal, sh.level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.n_nationkey = sh.s_nationkey
),
RankedOrders AS (
    SELECT o.o_orderkey, o.o_totalprice, o.o_orderdate, 
           ROW_NUMBER() OVER (PARTITION BY o.o_orderstatus ORDER BY o.o_totalprice DESC) AS order_rank
    FROM orders o
    WHERE o.o_orderdate >= DATE '1997-01-01'
    AND o.o_orderstatus IN ('F', 'O')
),
MaxCustomerOrders AS (
    SELECT c.c_custkey, COUNT(o.o_orderkey) AS order_count
    FROM customer c
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    GROUP BY c.c_custkey
    HAVING COUNT(o.o_orderkey) > (
        SELECT AVG(order_count)
        FROM (SELECT COUNT(o.o_orderkey) AS order_count
              FROM customer c
              LEFT JOIN orders o ON c.c_custkey = o.o_custkey
              GROUP BY c.c_custkey) AS customer_orders
    )
)
SELECT p.p_partkey, p.p_name, p.p_brand, MAX(li.l_extendedprice * (1 - li.l_discount)) AS max_price_after_discount,
       SUM(CASE WHEN li.l_returnflag = 'R' THEN li.l_quantity ELSE 0 END) AS total_returned_quantity,
       COUNT(DISTINCT s.s_suppkey) AS unique_suppliers
FROM part p
JOIN lineitem li ON p.p_partkey = li.l_partkey
LEFT JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
INNER JOIN SupplierHierarchy sh ON ps.ps_suppkey = sh.s_suppkey
JOIN MaxCustomerOrders mco ON sh.s_nationkey = mco.c_custkey
WHERE p.p_retailprice > (
    SELECT AVG(p2.p_retailprice)
    FROM part p2
)
AND EXISTS (
    SELECT 1 FROM orders o
    WHERE o.o_orderkey = li.l_orderkey AND o.o_orderdate < li.l_shipdate
)
GROUP BY p.p_partkey, p.p_name, p.p_brand
HAVING COUNT(DISTINCT li.l_orderkey) > 5
ORDER BY max_price_after_discount DESC
LIMIT 10;
