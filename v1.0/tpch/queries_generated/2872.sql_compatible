
WITH RankedSuppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        s.s_acctbal,
        ROW_NUMBER() OVER (PARTITION BY ps_partkey ORDER BY s.s_acctbal DESC) AS rn
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
),
CustomerOrders AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        o.o_orderkey,
        o.o_orderdate,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
        ROW_NUMBER() OVER (PARTITION BY c.c_custkey ORDER BY o.o_orderdate DESC) AS order_rank
    FROM 
        customer c
    JOIN 
        orders o ON c.c_custkey = o.o_custkey
    JOIN 
        lineitem l ON o.o_orderkey = l.l_orderkey
    GROUP BY 
        c.c_custkey, c.c_name, o.o_orderkey, o.o_orderdate
)
SELECT 
    c.c_name,
    COALESCE(SUM(co.total_revenue), 0) AS total_revenue,
    COUNT(co.o_orderkey) AS order_count,
    COALESCE(MAX(rs.s_acctbal), 0) AS highest_supplier_acctbal,
    COUNT(DISTINCT l.l_partkey) AS unique_parts_ordered
FROM 
    customer c
LEFT JOIN 
    CustomerOrders co ON c.c_custkey = co.c_custkey
LEFT JOIN 
    lineitem l ON l.l_orderkey = co.o_orderkey
LEFT JOIN 
    RankedSuppliers rs ON rs.s_suppkey IN (
        SELECT ps.ps_suppkey 
        FROM partsupp ps 
        WHERE ps.ps_partkey IN (
            SELECT l2.l_partkey 
            FROM lineitem l2 
            WHERE l2.l_orderkey = co.o_orderkey
        )
    )
WHERE 
    c.c_acctbal > 5000
GROUP BY 
    c.c_name
HAVING 
    COUNT(co.o_orderkey) > 2
ORDER BY 
    total_revenue DESC;
