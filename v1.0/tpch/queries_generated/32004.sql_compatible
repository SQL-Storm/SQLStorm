
WITH RECURSIVE CustomerHierarchy AS (
    SELECT c_custkey, c_name, c_nationkey, c_acctbal, 1 AS level
    FROM customer
    WHERE c_acctbal > 5000
    UNION ALL
    SELECT c.c_custkey, c.c_name, c.c_nationkey, c.c_acctbal, ch.level + 1
    FROM customer c
    JOIN CustomerHierarchy ch ON c.c_nationkey = ch.c_nationkey
    WHERE c.c_acctbal > 5000 AND ch.level < 5
),
SalesData AS (
    SELECT 
        o.o_orderkey, 
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_sales,
        COUNT(DISTINCT l.l_orderkey) AS order_count,
        ROW_NUMBER() OVER (PARTITION BY o.o_orderkey ORDER BY SUM(l.l_extendedprice * (1 - l.l_discount)) DESC) AS sales_rank
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    GROUP BY o.o_orderkey
),
TopSales AS (
    SELECT * 
    FROM SalesData 
    WHERE sales_rank <= 10
)
SELECT 
    r.r_name,
    COUNT(DISTINCT s.s_suppkey) AS supplier_count,
    SUM(ps.ps_availqty) AS total_quantity_available,
    AVG(c.c_acctbal) AS average_customer_balance,
    CASE 
        WHEN AVG(c.c_acctbal) IS NULL THEN 'No Data'
        ELSE CONCAT('Average Balance: ', CAST(AVG(c.c_acctbal) AS CHAR))
    END AS customer_balance_summary
FROM region r
LEFT JOIN nation n ON r.r_regionkey = n.n_regionkey
LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
LEFT JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
LEFT JOIN CustomerHierarchy ch ON s.s_nationkey = ch.c_nationkey
JOIN TopSales ts ON ts.o_orderkey IN (SELECT o.o_orderkey FROM orders o JOIN lineitem l ON o.o_orderkey = l.l_orderkey WHERE l.l_discount > 0.05)
GROUP BY r.r_name, c.c_acctbal
ORDER BY supplier_count DESC, total_quantity_available DESC;
