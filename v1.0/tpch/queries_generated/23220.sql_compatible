
WITH RankedParts AS (
    SELECT 
        p.p_partkey,
        p.p_name,
        p.p_retailprice,
        ROW_NUMBER() OVER (PARTITION BY p.p_brand ORDER BY p.p_retailprice DESC) AS rn
    FROM part p
    WHERE p.p_retailprice IS NOT NULL
), 
ActiveOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_orderdate,
        o.o_totalprice,
        SUM(CASE WHEN l.l_discount > 0 THEN l.l_extendedprice * (1 - l.l_discount) ELSE l.l_extendedprice END) AS total_sales,
        COUNT(DISTINCT l.l_suppkey) AS unique_suppliers
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE o.o_orderstatus = 'O' AND l.l_returnflag IS NULL
    GROUP BY o.o_orderkey, o.o_orderdate, o.o_totalprice
), 
SupplierInfo AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        COALESCE(SUM(ps.ps_supplycost * ps.ps_availqty), 0) AS total_supplycost
    FROM supplier s
    LEFT JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY s.s_suppkey, s.s_name
)
SELECT 
    r.r_name,
    np.n_name AS nation_name,
    a.o_orderkey,
    a.total_sales,
    p.p_name,
    sp.s_name,
    sp.total_supplycost,
    CASE 
        WHEN a.total_sales > 1000 THEN 'High Sales' 
        WHEN a.total_sales IS NULL THEN 'No Sales' 
        ELSE 'Standard Sales' 
    END AS sales_category
FROM ActiveOrders a
JOIN RankedParts p ON a.o_orderkey = p.p_partkey
JOIN nation np ON np.n_nationkey = (SELECT n.n_nationkey FROM nation n WHERE np.n_regionkey = n.n_regionkey AND n.n_name LIKE 'N%')
LEFT JOIN SupplierInfo sp ON sp.s_suppkey = (SELECT ps.ps_suppkey FROM partsupp ps WHERE ps.ps_partkey = p.p_partkey ORDER BY ps.ps_supplycost DESC LIMIT 1)
JOIN region r ON r.r_regionkey IN (SELECT DISTINCT n.n_regionkey FROM nation n WHERE n.n_nationkey = (SELECT c.c_nationkey FROM customer c WHERE c.c_custkey = a.o_custkey))
WHERE p.rn <= 10
ORDER BY r.r_name, a.total_sales DESC NULLS LAST;
