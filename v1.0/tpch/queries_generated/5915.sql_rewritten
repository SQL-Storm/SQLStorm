WITH RankedOrders AS (
    SELECT 
        o.o_orderkey, 
        o.o_orderdate, 
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
        ROW_NUMBER() OVER (PARTITION BY o.o_orderkey ORDER BY o.o_orderdate DESC) AS rn
    FROM 
        orders o
    JOIN 
        lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE 
        o.o_orderdate >= DATE '1996-01-01' AND o.o_orderdate < DATE '1997-01-01'
    GROUP BY 
        o.o_orderkey, o.o_orderdate
),
HighValueCustomers AS (
    SELECT 
        c.c_custkey, 
        c.c_name, 
        SUM(RO.total_revenue) AS total_customer_revenue
    FROM 
        customer c
    JOIN 
        RankedOrders RO ON c.c_custkey = (SELECT o.o_custkey FROM orders o WHERE o.o_orderkey = RO.o_orderkey)
    GROUP BY 
        c.c_custkey, c.c_name
    HAVING 
        SUM(RO.total_revenue) > 100000
),
SupplierDetails AS (
    SELECT 
        s.s_suppkey, 
        s.s_name, 
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_cost
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey, s.s_name
),
FinalReport AS (
    SELECT 
        HVC.c_name AS customer_name, 
        HVC.total_customer_revenue, 
        SD.s_name AS supplier_name, 
        SD.total_supply_cost
    FROM 
        HighValueCustomers HVC
    JOIN 
        SupplierDetails SD ON HVC.c_custkey = (SELECT DISTINCT c.c_custkey FROM customer c WHERE c.c_nationkey IN (SELECT n.n_nationkey FROM nation n WHERE n.n_regionkey = SD.s_suppkey))
)
SELECT 
    FR.customer_name, 
    FR.total_customer_revenue, 
    FR.supplier_name, 
    FR.total_supply_cost
FROM 
    FinalReport FR
ORDER BY 
    FR.total_customer_revenue DESC, 
    FR.total_supply_cost DESC;