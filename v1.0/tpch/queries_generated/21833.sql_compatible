
WITH RankedItems AS (
    SELECT 
        p.p_partkey,
        p.p_name,
        p.p_brand,
        ps.ps_supplycost,
        ROW_NUMBER() OVER (PARTITION BY p.p_brand ORDER BY ps.ps_supplycost DESC) AS rn
    FROM 
        part p
    JOIN 
        partsupp ps ON p.p_partkey = ps.ps_partkey
    WHERE 
        p.p_retailprice > 50.00
),
CustomerOrderSummary AS (
    SELECT 
        c.c_custkey,
        SUM(o.o_totalprice) AS total_spent,
        COUNT(o.o_orderkey) AS order_count
    FROM 
        customer c
    LEFT JOIN 
        orders o ON c.c_custkey = o.o_custkey
    GROUP BY 
        c.c_custkey
),
SuppliersWithRange AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        MAX(ps.ps_supplycost) AS max_supply_cost,
        MIN(ps.ps_supplycost) AS min_supply_cost
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey, s.s_name
    HAVING 
        MAX(ps.ps_supplycost) > 100
)
SELECT 
    DISTINCT 
    c.c_name,
    r.r_name,
    CASE 
        WHEN SUM(l.l_extendedprice * (1 - l.l_discount)) IS NULL THEN 'No Purchases'
        ELSE 'Total: ' || CAST(COALESCE(SUM(l.l_extendedprice * (1 - l.l_discount)), 0) AS VARCHAR)
    END AS purchase_summary,
    CASE 
        WHEN s.s_name IS NOT NULL THEN 'Associated Supplier: ' || s.s_name
        ELSE 'No Supplier Available'
    END AS supplier_info,
    (SELECT COUNT(*) FROM RankedItems ri WHERE ri.rn = 1) AS num_top_parts
FROM 
    customer c
JOIN 
    CustomerOrderSummary cos ON c.c_custkey = cos.c_custkey
LEFT JOIN 
    lineitem l ON l.l_orderkey IN (SELECT o.o_orderkey FROM orders o WHERE o.o_custkey = c.c_custkey)
LEFT JOIN 
    nation n ON n.n_nationkey = c.c_nationkey
LEFT JOIN 
    region r ON r.r_regionkey = n.n_regionkey
LEFT JOIN 
    SuppliersWithRange s ON s.max_supply_cost = (SELECT MAX(max_supply_cost) FROM SuppliersWithRange)
WHERE 
    r.r_name IS NOT NULL
GROUP BY 
    c.c_name, r.r_name, s.s_name
HAVING 
    COUNT(cos.order_count) > 2 AND
    COALESCE(SUM(l.l_quantity), 0) > 10
ORDER BY 
    purchase_summary DESC, 
    c.c_name ASC;
