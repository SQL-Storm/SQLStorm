WITH RECURSIVE SupplierHierarchy AS (
    SELECT s_suppkey, s_name, s_nationkey, s_acctbal, 1 AS level
    FROM supplier
    WHERE s_acctbal > 1000
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal, sh.level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE s.s_acctbal <= sh.s_acctbal
),
PartSupplierCounts AS (
    SELECT ps_partkey, COUNT(ps_suppkey) AS supplier_count
    FROM partsupp
    GROUP BY ps_partkey
),
HighValueOrders AS (
    SELECT o.o_orderkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_value
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE o.o_orderdate >= '1997-01-01' AND o.o_orderstatus = 'O'
    GROUP BY o.o_orderkey
    HAVING total_value > 5000
),
RankedPartSuppliers AS (
    SELECT p.p_partkey, p.p_name, COUNT(ps.ps_suppkey) AS part_supplier_count,
           ROW_NUMBER() OVER (PARTITION BY p.p_partkey ORDER BY COUNT(ps.ps_suppkey) DESC) AS rank
    FROM part p
    LEFT JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
    GROUP BY p.p_partkey, p.p_name
)
SELECT r.r_name, 
       SUM(COALESCE(sh.level, 0)) AS total_supplier_level,
       COUNT(DISTINCT o.o_orderkey) AS order_count,
       MAX(hvo.total_value) AS max_order_value
FROM region r
LEFT JOIN nation n ON r.r_regionkey = n.n_regionkey
LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
LEFT JOIN SupplierHierarchy sh ON s.s_suppkey = sh.s_suppkey
LEFT JOIN orders o ON o.o_custkey IN (
    SELECT c.c_custkey
    FROM customer c
    WHERE c.c_nationkey = n.n_nationkey
)
LEFT JOIN HighValueOrders hvo ON o.o_orderkey = hvo.o_orderkey
LEFT JOIN RankedPartSuppliers rps ON rps.part_supplier_count > 5
WHERE r.r_name NOT LIKE '%east%'
GROUP BY r.r_name
HAVING COUNT(DISTINCT o.o_orderkey) > 10
ORDER BY total_supplier_level DESC, r.r_name;