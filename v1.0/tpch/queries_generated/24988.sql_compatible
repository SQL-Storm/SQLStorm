
WITH RankedSuppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_cost,
        ROW_NUMBER() OVER (PARTITION BY n.n_nationkey ORDER BY SUM(ps.ps_supplycost * ps.ps_availqty) DESC) AS rnk
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    JOIN 
        nation n ON s.s_nationkey = n.n_nationkey
    GROUP BY 
        s.s_suppkey, s.s_name, n.n_nationkey
),
HighValueOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_totalprice,
        c.c_name,
        RANK() OVER (ORDER BY o.o_totalprice DESC) AS value_rank
    FROM 
        orders o
    JOIN 
        customer c ON o.o_custkey = c.c_custkey
    WHERE 
        o.o_orderstatus = 'O' AND
        o.o_totalprice > (SELECT AVG(o_totalprice) FROM orders)
),
SizeDistribution AS (
    SELECT 
        p.p_size,
        COUNT(DISTINCT ps.ps_partkey) AS parts_count
    FROM 
        part p
    JOIN 
        partsupp ps ON p.p_partkey = ps.ps_partkey
    GROUP BY 
        p.p_size
    HAVING 
        COUNT(DISTINCT ps.ps_partkey) > 5
)
SELECT 
    n.n_name AS nation,
    COUNT(DISTINCT o.o_orderkey) AS total_orders,
    COALESCE(SUM(l.l_extendedprice * (1 - l.l_discount)), 0) AS total_revenue,
    CASE 
        WHEN MAX(r.total_supply_cost) IS NULL THEN 'NULL SUPPLIER'
        ELSE s.s_name 
    END AS top_supplier,
    STRING_AGG(DISTINCT p.p_name, ', ') AS part_names
FROM 
    nation n
LEFT JOIN 
    supplier s ON n.n_nationkey = s.s_nationkey
LEFT JOIN 
    lineitem l ON s.s_suppkey = l.l_suppkey
LEFT JOIN 
    orders o ON l.l_orderkey = o.o_orderkey
LEFT JOIN 
    RankedSuppliers r ON s.s_suppkey = r.s_suppkey
JOIN 
    HighValueOrders hvo ON o.o_orderkey = hvo.o_orderkey
JOIN 
    SizeDistribution sd ON (sd.parts_count > 5 OR sd.p_size IS NOT NULL)
WHERE 
    (r.rnk = 1 OR r.rnk IS NULL) AND
    hvo.value_rank <= 10
GROUP BY 
    n.n_name, s.s_name
ORDER BY 
    total_orders DESC, total_revenue DESC
LIMIT 15;
