
WITH RankedSuppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        s.s_acctbal,
        RANK() OVER (PARTITION BY s.s_nationkey ORDER BY s.s_acctbal DESC) AS rank
    FROM supplier s
),
OrderDetails AS (
    SELECT
        o.o_orderkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
        COUNT(DISTINCT l.l_linenumber) AS lineitem_count
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE o.o_orderdate >= CURRENT_DATE - INTERVAL '1 year'
    GROUP BY o.o_orderkey
),
HighRevenueOrders AS (
    SELECT 
        od.o_orderkey
    FROM OrderDetails od
    WHERE od.total_revenue > (SELECT AVG(total_revenue) FROM OrderDetails)
),
SupplierDetails AS (
    SELECT 
        ps.ps_supkey,
        p.p_container,
        SUM(ps.ps_availqty) AS total_avail_qty
    FROM partsupp ps
    JOIN part p ON ps.ps_partkey = p.p_partkey
    WHERE p.p_size IN (SELECT DISTINCT p_size FROM part WHERE p.p_type LIKE 'unused%')
    GROUP BY ps.ps_supkey, p.p_container
)
SELECT
    r.r_name AS region_name,
    ns.n_name AS nation_name,
    COALESCE(SUM(CASE WHEN l.l_returnflag = 'R' THEN l.l_quantity ELSE NULL END), 0) AS total_returned_quantity,
    COUNT(DISTINCT CASE WHEN o.o_orderkey IN (SELECT o_orderkey FROM HighRevenueOrders) THEN o.o_orderkey END) AS high_revenue_order_count,
    MAX(s.s_acctbal) AS max_supplier_acctbal,
    COUNT(DISTINCT s.s_suppkey) AS total_suppliers,
    STRING_AGG(s.s_name, ', ') AS supplier_names
FROM region r
LEFT JOIN nation ns ON ns.n_regionkey = r.r_regionkey
LEFT JOIN supplier s ON s.s_nationkey = ns.n_nationkey
LEFT JOIN lineitem l ON l.l_suppkey = s.s_suppkey
LEFT JOIN orders o ON o.o_orderkey = l.l_orderkey
WHERE s.s_acctbal IS NOT NULL
AND r.r_comment NOT LIKE '%sample%'
AND (s.s_name IS NOT NULL OR (s.s_acctbal BETWEEN 1000 AND 5000))
GROUP BY r.r_name, ns.n_name
HAVING COUNT(s.s_suppkey) > 5 AND MAX(s.s_acctbal) IS NOT NULL
ORDER BY r.r_name, ns.n_name
