
WITH RankedOrders AS (
    SELECT
        o.o_orderkey,
        o.o_orderdate,
        o.o_totalprice,
        o.o_orderstatus,
        ROW_NUMBER() OVER (PARTITION BY o.o_orderstatus ORDER BY o.o_totalprice DESC) AS rn
    FROM
        orders o
    WHERE
        o.o_orderdate >= DATE '1997-01-01'
),
SupplierStats AS (
    SELECT
        s.s_suppkey,
        s.s_name,
        COALESCE(SUM(ps.ps_supplycost * ps.ps_availqty), 0) AS total_supply_value,
        COUNT(DISTINCT p.p_partkey) AS total_parts
    FROM
        supplier s
    LEFT JOIN
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    LEFT JOIN
        part p ON ps.ps_partkey = p.p_partkey
    WHERE
        s.s_acctbal > 5000
    GROUP BY
        s.s_suppkey, s.s_name
),
CustomerTotalSpent AS (
    SELECT
        c.c_custkey,
        c.c_name,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_spent
    FROM
        customer c
    JOIN
        orders o ON c.c_custkey = o.o_custkey
    JOIN
        lineitem l ON o.o_orderkey = l.l_orderkey
    GROUP BY
        c.c_custkey, c.c_name
)
SELECT
    S.s_name AS supplier_name,
    O.o_orderkey,
    O.o_orderdate,
    O.o_totalprice,
    C.c_name AS customer_name,
    C.total_spent,
    R.r_name AS region_name,
    ROW_NUMBER() OVER (PARTITION BY S.s_suppkey ORDER BY O.o_orderdate DESC) AS order_rank
FROM
    SupplierStats S
LEFT JOIN
    lineitem L ON S.s_suppkey = L.l_suppkey
LEFT JOIN
    orders O ON L.l_orderkey = O.o_orderkey
JOIN
    customer C ON O.o_custkey = C.c_custkey
JOIN
    nation N ON C.c_nationkey = N.n_nationkey
JOIN
    region R ON N.n_regionkey = R.r_regionkey
WHERE
    R.r_name LIKE 'North%'
    AND (C.total_spent IS NOT NULL OR C.total_spent >= 1000)
    AND EXISTS (
        SELECT 1
        FROM RankedOrders RO
        WHERE RO.o_orderkey = O.o_orderkey
        AND RO.rn <= 10
    )
ORDER BY
    S.total_supply_value DESC, O.o_orderdate ASC;
