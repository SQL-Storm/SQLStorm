
WITH RECURSIVE SupplierHierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, CAST(s.s_name AS VARCHAR) AS hierarchy
    FROM supplier s
    WHERE s.s_nationkey = 1  

    UNION ALL

    SELECT s.s_suppkey, s.s_name, s.s_nationkey, CONCAT(sh.hierarchy, ' -> ', s.s_name)
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE s.s_suppkey <> sh.s_suppkey
),
MaxPricePerPart AS (
    SELECT ps.ps_partkey, MAX(ps.ps_supplycost) AS max_supplycost
    FROM partsupp ps
    GROUP BY ps.ps_partkey
),
OrderSummary AS (
    SELECT
        o.o_orderkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
        COUNT(DISTINCT l.l_orderkey) AS total_items
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE l.l_shipdate >= '1997-01-01'
    GROUP BY o.o_orderkey
),
SupplierRevenue AS (
    SELECT
        s.s_name,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_supplier_revenue
    FROM supplier s
    JOIN lineitem l ON s.s_suppkey = l.l_suppkey
    GROUP BY s.s_name
),
HighestRevenueSupplier AS (
    SELECT s.s_name
    FROM SupplierRevenue s
    ORDER BY s.total_supplier_revenue DESC
    LIMIT 5
)
SELECT rh.hierarchy, 
       COALESCE(o.total_revenue, 0) AS total_revenue, 
       COALESCE(m.max_supplycost, 0) AS max_supplycost
FROM SupplierHierarchy rh
LEFT JOIN OrderSummary o ON rh.s_suppkey = o.o_orderkey
LEFT JOIN MaxPricePerPart m ON m.ps_partkey = o.o_orderkey
WHERE rh.s_nationkey IS NOT NULL
ORDER BY total_revenue DESC, max_supplycost DESC
LIMIT 50;
