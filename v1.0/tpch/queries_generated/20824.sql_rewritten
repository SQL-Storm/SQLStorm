WITH RankedOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_orderdate,
        o.o_totalprice,
        RANK() OVER (PARTITION BY o.o_orderstatus ORDER BY o.o_totalprice DESC) AS order_rank
    FROM 
        orders o
    WHERE 
        o.o_orderdate BETWEEN DATE '1995-01-01' AND DATE '1997-01-01'
),
EligibleParts AS (
    SELECT 
        p.p_partkey,
        p.p_name,
        p.p_mfgr,
        p.p_retailprice,
        p.p_size,
        COUNT(DISTINCT ps.ps_suppkey) AS supplier_count
    FROM 
        part p
    LEFT JOIN 
        partsupp ps ON p.p_partkey = ps.ps_partkey
    WHERE 
        p.p_retailprice > (SELECT AVG(p1.p_retailprice) FROM part p1 WHERE p1.p_size BETWEEN 10 AND 20)
    GROUP BY 
        p.p_partkey, p.p_name, p.p_mfgr, p.p_retailprice, p.p_size
    HAVING 
        COUNT(DISTINCT ps.ps_suppkey) > 2
),
HighValueCustomers AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        SUM(o.o_totalprice) AS total_spent
    FROM 
        customer c
    JOIN 
        orders o ON c.c_custkey = o.o_custkey
    WHERE 
        c.c_acctbal > 5000.00
    GROUP BY 
        c.c_custkey, c.c_name
    HAVING 
        SUM(o.o_totalprice) > (SELECT AVG(o1.o_totalprice) FROM orders o1 WHERE o1.o_orderstatus = 'O')
)
SELECT 
    p.p_name,
    COUNT(DISTINCT l.l_orderkey) AS order_count,
    SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
    COALESCE(MAX(c.c_name), 'No Customer') AS top_customer
FROM 
    EligibleParts p
JOIN 
    lineitem l ON p.p_partkey = l.l_partkey
LEFT JOIN 
    HighValueCustomers c ON l.l_orderkey IN (SELECT o.o_orderkey FROM RankedOrders o WHERE o.order_rank = 1)
WHERE 
    l.l_shipdate < l.l_commitdate
GROUP BY 
    p.p_name
ORDER BY 
    total_revenue DESC
FETCH FIRST 10 ROWS ONLY;