
WITH RankedSuppliers AS (
    SELECT 
        s.s_name,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_value,
        RANK() OVER (ORDER BY SUM(ps.ps_supplycost * ps.ps_availqty) DESC) AS supplier_rank
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_name
),
CustomerOrders AS (
    SELECT
        c.c_custkey,
        COUNT(o.o_orderkey) AS order_count,
        SUM(o.o_totalprice) AS total_spent
    FROM 
        customer c
    LEFT JOIN 
        orders o ON c.c_custkey = o.o_custkey
    GROUP BY 
        c.c_custkey
),
HighValueCustomers AS (
    SELECT 
        c.c_custkey
    FROM 
        CustomerOrders
    WHERE 
        total_spent > (SELECT AVG(total_spent) FROM CustomerOrders)
),
SuppliersByRegion AS (
    SELECT 
        n.n_name AS nation_name,
        r.r_name AS region_name,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS regional_supply_value
    FROM 
        supplier s
    JOIN 
        nation n ON s.s_nationkey = n.n_nationkey
    JOIN 
        region r ON n.n_regionkey = r.r_regionkey
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        n.n_name, r.r_name
)
SELECT 
    ss.region_name,
    s.s_name,
    COALESCE(c.total_spent, 0) AS customer_spending,
    ss.total_supply_value,
    ROW_NUMBER() OVER (PARTITION BY ss.region_name ORDER BY ss.total_supply_value DESC) AS supplier_order
FROM 
    SuppliersByRegion ss
JOIN 
    RankedSuppliers s ON ss.regional_supply_value = s.total_supply_value
LEFT JOIN 
    HighValueCustomers hvc ON s.s_name = hvc.c_custkey
LEFT JOIN 
    CustomerOrders c ON hvc.c_custkey = c.c_custkey
WHERE 
    s.supplier_rank <= 10
ORDER BY 
    ss.region_name, supplier_order;
