
WITH RECURSIVE price_ranking AS (
    SELECT 
        p.p_partkey,
        p.p_name,
        p.p_retailprice,
        RANK() OVER (ORDER BY p.p_retailprice DESC) AS price_rank
    FROM 
        part p
),
nation_orders AS (
    SELECT 
        n.n_name AS nation_name,
        COUNT(o.o_orderkey) AS total_orders
    FROM 
        nation n
    JOIN 
        supplier s ON n.n_nationkey = s.s_nationkey
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    JOIN 
        lineitem l ON ps.ps_partkey = l.l_partkey
    JOIN 
        orders o ON l.l_orderkey = o.o_orderkey
    GROUP BY 
        n.n_name
),
agg_results AS (
    SELECT 
        po.p_partkey,
        po.p_name,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
        COALESCE(n.total_orders, 0) AS total_orders
    FROM 
        part po
    LEFT JOIN 
        lineitem l ON po.p_partkey = l.l_partkey
    LEFT JOIN 
        partsupp ps ON po.p_partkey = ps.ps_partkey
    LEFT JOIN 
        supplier s ON ps.ps_suppkey = s.s_suppkey
    LEFT JOIN 
        nation n ON s.s_nationkey = n.n_nationkey
    GROUP BY 
        po.p_partkey, po.p_name
),
final_results AS (
    SELECT
        a.p_partkey,
        a.p_name,
        a.total_revenue,
        a.total_orders,
        pr.price_rank
    FROM 
        agg_results a
    JOIN 
        price_ranking pr ON a.p_partkey = pr.p_partkey
)
SELECT 
    f.p_partkey,
    f.p_name,
    f.total_revenue,
    f.total_orders,
    f.price_rank
FROM 
    final_results f
WHERE 
    f.total_revenue > 0
ORDER BY 
    f.price_rank, f.total_revenue DESC
LIMIT 100;
