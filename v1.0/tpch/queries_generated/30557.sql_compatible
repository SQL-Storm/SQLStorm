
WITH RECURSIVE CustomerHierarchy AS (
    SELECT c.c_custkey, c.c_name, c.c_nationkey, c.c_acctbal, NULL AS parent_custkey
    FROM customer c
    WHERE c.c_acctbal > 5000
    UNION ALL
    SELECT c.c_custkey, c.c_name, c.c_nationkey, c.c_acctbal, ch.c_custkey AS parent_custkey
    FROM customer c
    JOIN CustomerHierarchy ch ON c.c_nationkey = ch.c_nationkey
    WHERE c.c_acctbal > 2000 AND c.c_custkey <> ch.c_custkey
),
NationAggregates AS (
    SELECT n.n_nationkey, n.n_name,
           SUM(s.s_acctbal) AS total_acctbal,
           COUNT(DISTINCT s.s_suppkey) AS total_suppliers
    FROM nation n
    LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
    GROUP BY n.n_nationkey, n.n_name
),
RankedOrders AS (
    SELECT o.o_orderkey, o.o_totalprice,
           RANK() OVER (PARTITION BY o.o_orderstatus ORDER BY o.o_totalprice DESC) AS price_rank
    FROM orders o
),
TopParts AS (
    SELECT p.p_partkey, p.p_name,
           SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue
    FROM part p
    JOIN lineitem l ON p.p_partkey = l.l_partkey
    GROUP BY p.p_partkey, p.p_name
    HAVING SUM(l.l_extendedprice * (1 - l.l_discount)) > 10000
),
OrderCustomerDetails AS (
    SELECT o.o_orderkey, c.c_name, c.c_acctbal
    FROM orders o
    JOIN customer c ON o.o_custkey = c.c_custkey
)
SELECT n.n_name, na.total_acctbal, na.total_suppliers,
       COUNT(DISTINCT ocd.o_orderkey) AS total_orders,
       SUM(tp.total_revenue) AS total_revenue,
       COALESCE(AVG(ch.c_acctbal), 0) AS avg_customer_acctbal,
       ROW_NUMBER() OVER (PARTITION BY n.n_nationkey ORDER BY na.total_acctbal DESC) AS nation_rank
FROM NationAggregates na
JOIN nation n ON na.n_nationkey = n.n_nationkey
LEFT JOIN OrderCustomerDetails ocd ON na.n_nationkey = (SELECT c.c_nationkey FROM customer c WHERE c.c_custkey = ocd.o_custkey)
LEFT JOIN TopParts tp ON tp.p_partkey IN (SELECT ps.ps_partkey FROM partsupp ps WHERE ps.ps_availqty > 0)
LEFT JOIN CustomerHierarchy ch ON na.n_nationkey = ch.c_nationkey
GROUP BY n.n_name, na.total_acctbal, na.total_suppliers
HAVING COUNT(DISTINCT ocd.o_orderkey) > 5
ORDER BY na.total_acctbal DESC, n.n_name;
