
WITH RECURSIVE OrderHierarchy AS (
    SELECT o.o_orderkey, o.o_orderstatus, o.o_totalprice, o.o_orderdate, 1 AS level
    FROM orders o
    WHERE o.o_orderstatus = 'F'

    UNION ALL

    SELECT o.o_orderkey, o.o_orderstatus, o.o_totalprice, o.o_orderdate, oh.level + 1
    FROM orders o
    JOIN OrderHierarchy oh ON o.o_orderkey = (SELECT l.l_orderkey
                                                FROM lineitem l
                                                WHERE l.l_orderkey > oh.o_orderkey
                                                ORDER BY l.l_orderkey
                                                FETCH FIRST 1 ROW ONLY)
)
SELECT 
    n.n_name AS nation_name,
    SUM(COALESCE(ps.ps_supplycost, 0) * l.l_quantity) AS total_supply_cost,
    AVG(COALESCE(c.c_acctbal, 0)) AS avg_customer_balance,
    COUNT(DISTINCT o.o_orderkey) AS total_orders,
    ROW_NUMBER() OVER (PARTITION BY n.n_nationkey ORDER BY SUM(l.l_extendedprice * (1 - l.l_discount)) DESC) AS rank
FROM lineitem l
JOIN partsupp ps ON l.l_partkey = ps.ps_partkey
JOIN supplier s ON s.s_suppkey = ps.ps_suppkey
JOIN nation n ON s.s_nationkey = n.n_nationkey
LEFT JOIN customer c ON c.c_nationkey = n.n_nationkey
LEFT JOIN OrderHierarchy oh ON oh.o_orderkey = l.l_orderkey
WHERE l.l_shipdate >= DATE '1995-01-01' 
  AND l.l_shipdate < DATE '1996-01-01'
  AND (l.l_discount BETWEEN 0.05 AND 0.15 OR l.l_returnflag = 'R')
GROUP BY n.n_nationkey, n.n_name
HAVING SUM(l.l_quantity) > 100
ORDER BY total_supply_cost DESC
FETCH FIRST 10 ROWS ONLY;
