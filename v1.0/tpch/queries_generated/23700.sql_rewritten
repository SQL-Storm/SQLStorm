WITH RECURSIVE SupplierHierarchy AS (
    SELECT s_suppkey, s_name, s_nationkey, 1 AS level
    FROM supplier
    WHERE s_suppkey = (SELECT MIN(s_suppkey) FROM supplier)
    
    UNION ALL
    
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, sh.level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON sh.s_nationkey = s.s_nationkey
    WHERE sh.level < 5
),
PartSupplierDetails AS (
    SELECT p.p_partkey, p.p_name, p.p_mfgr, ps.ps_availqty, ps.ps_supplycost,
           ROW_NUMBER() OVER (PARTITION BY p.p_partkey ORDER BY ps.ps_supplycost DESC) AS pn
    FROM part p
    JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
    WHERE p.p_size BETWEEN 1 AND 20 AND ps.ps_availqty > 10
),
FilteredOrders AS (
    SELECT o.o_orderkey, o.o_totalprice, 
           CASE 
               WHEN o.o_orderstatus = 'O' THEN 'Open'
               WHEN o.o_orderstatus = 'F' THEN 'Filled'
               ELSE 'Unknown'
           END AS order_status,
           SUM(li.l_discount * li.l_extendedprice) AS total_discount
    FROM orders o
    LEFT JOIN lineitem li ON o.o_orderkey = li.l_orderkey
    WHERE li.l_shipdate >= cast('1998-10-01' as date) - INTERVAL '30 days'
    GROUP BY o.o_orderkey, o.o_totalprice, o.o_orderstatus
),
NationOrderSummary AS (
    SELECT n.n_name, COUNT(DISTINCT fo.o_orderkey) AS order_count,
           AVG(fo.total_discount) AS avg_discount
    FROM nation n
    JOIN customer c ON n.n_nationkey = c.c_nationkey
    JOIN orders o ON c.c_custkey = o.o_custkey
    JOIN FilteredOrders fo ON o.o_orderkey = fo.o_orderkey
    GROUP BY n.n_name
)
SELECT p.p_name, 
       sh.level AS supplier_level,
       NS.order_count,
       COALESCE(NS.avg_discount, 0) AS avg_discount_last_month,
       CONCAT('Supplier Level: ', CAST(sh.level AS varchar), ', Order Status: ', 
              CASE 
                  WHEN fo.order_status IS NULL THEN 'Not Available' 
                  ELSE fo.order_status 
              END) AS info
FROM PartSupplierDetails p
FULL OUTER JOIN SupplierHierarchy sh ON p.p_partkey = sh.s_suppkey
LEFT JOIN NationOrderSummary NS ON sh.s_nationkey = NS.order_count
WHERE (p.p_container IS NULL OR p.p_container LIKE '%box%')
  AND p.ps_supplycost IS NOT NULL
  AND p.ps_availqty <> 0
ORDER BY p.p_name, supplier_level DESC;