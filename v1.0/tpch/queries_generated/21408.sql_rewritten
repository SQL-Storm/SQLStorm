WITH ranked_orders AS (
    SELECT o.o_orderkey, o.o_orderdate, o.o_totalprice, 
           ROW_NUMBER() OVER (PARTITION BY o.o_orderstatus ORDER BY o.o_totalprice DESC) AS order_rank
    FROM orders o
    WHERE o.o_orderstatus IN ('O', 'F')
), 
part_supplier_info AS (
    SELECT p.p_partkey, p.p_name, ps.ps_suppkey, 
           COALESCE(SUM(l.l_extendedprice * (1 - l.l_discount)), 0) AS total_sales,
           COUNT(DISTINCT l.l_orderkey) AS order_count
    FROM part p
    LEFT JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
    LEFT JOIN lineitem l ON p.p_partkey = l.l_partkey AND l.l_returnflag = 'N'
    GROUP BY p.p_partkey, p.p_name, ps.ps_suppkey
)
SELECT r.r_name, 
       COUNT(DISTINCT s.s_suppkey) AS supplier_count,
       AVG(p.total_sales) AS avg_sales,
       SUM(CASE WHEN pi.total_sales > 10000 THEN 1 ELSE 0 END) AS high_sales_part_count
FROM region r
LEFT JOIN nation n ON r.r_regionkey = n.n_regionkey
LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
LEFT JOIN part_supplier_info pi ON s.s_suppkey = pi.ps_suppkey
LEFT JOIN ranked_orders o ON o.o_orderkey IN (
    SELECT l_orderkey FROM lineitem 
    WHERE l_shipdate BETWEEN cast('1998-10-01' as date) - INTERVAL '30 days' AND cast('1998-10-01' as date)
)
GROUP BY r.r_name
HAVING COUNT(DISTINCT s.s_suppkey) > 0 
   AND AVG(p.total_sales) IS NOT NULL 
   AND SUM(CASE WHEN pi.total_sales IS NULL THEN 1 ELSE 0 END) < 10
ORDER BY 2 DESC NULLS LAST;