
WITH RankedOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_orderdate,
        o.o_totalprice,
        ROW_NUMBER() OVER (PARTITION BY o.o_orderstatus ORDER BY o.o_totalprice DESC) as rank
    FROM 
        orders o
    WHERE 
        o.o_orderdate >= '1997-01-01' AND 
        o.o_orderdate < '1997-12-31'
),
OrderLineItems AS (
    SELECT 
        l.l_orderkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
        COUNT(*) AS line_item_count,
        AVG(l.l_quantity) AS avg_quantity
    FROM 
        lineitem l
    WHERE 
        l.l_returnflag = 'A'
    GROUP BY 
        l.l_orderkey
)
SELECT 
    n.n_name,
    COALESCE(SUM(p.p_retailprice * ps.ps_availqty), 0) AS total_supplier_avail,
    (SELECT COUNT(DISTINCT c.c_custkey) FROM customer c WHERE c.c_nationkey = n.n_nationkey) AS total_customers,
    (SELECT COUNT(DISTINCT o.o_orderkey) FROM RankedOrders r WHERE r.rank <= 10) AS top_ten_orders,
    (SELECT 
        CASE 
            WHEN COUNT(oli.l_orderkey) > 0 THEN 'Has Line Items'
            ELSE 'No Line Items'
        END 
     FROM 
        OrderLineItems oli WHERE oli.l_orderkey IN 
        (SELECT o.o_orderkey FROM orders o WHERE o.o_custkey = c.c_custkey)
    ) AS line_item_status
FROM 
    nation n
LEFT JOIN 
    supplier s ON n.n_nationkey = s.s_nationkey
LEFT JOIN 
    partsupp ps ON s.s_suppkey = ps.ps_suppkey
LEFT JOIN 
    part p ON ps.ps_partkey = p.p_partkey
WHERE 
    n.n_name NOT LIKE '%land%'
GROUP BY 
    n.n_name
HAVING 
    total_supplier_avail > (SELECT AVG(p2.p_retailprice) FROM part p2) 
    AND MAX(o.o_totalprice) < 10000
ORDER BY 
    total_customers DESC;
