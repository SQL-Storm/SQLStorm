WITH RECURSIVE SalesHierarchy AS (
    SELECT c.c_custkey, c.c_name, c.c_acctbal, c.c_mktsegment, 
           NULL::integer AS parent_custkey
    FROM customer c
    WHERE c.c_acctbal > 10000
    
    UNION ALL
    
    SELECT c.c_custkey, c.c_name, c.c_acctbal, c.c_mktsegment, 
           sh.c_custkey AS parent_custkey
    FROM customer c
    INNER JOIN SalesHierarchy sh ON c.c_acctbal < sh.c_acctbal
)
, RankedOrders AS (
    SELECT o.o_orderkey, o.o_custkey, o.o_orderdate, o.o_totalprice,
           ROW_NUMBER() OVER (PARTITION BY o.o_custkey ORDER BY o.o_orderdate DESC) AS rn
    FROM orders o
    WHERE o.o_orderstatus = 'O' AND o.o_totalprice > 500
)
SELECT 
    r.r_name AS region_name,
    n.n_name AS nation_name,
    s.s_name AS supplier_name,
    p.p_name AS part_name,
    SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
    AVG(p.p_retailprice) AS avg_retail_price,
    COUNT(DISTINCT o.o_orderkey) AS total_orders,
    COUNT(DISTINCT DISTINCTCASE WHEN rhr.parent_custkey IS NULL THEN r.custkey END) AS root_customers
FROM lineitem l
JOIN partsupp ps ON l.l_partkey = ps.ps_partkey
JOIN supplier s ON ps.ps_suppkey = s.s_suppkey
JOIN part p ON ps.ps_partkey = p.p_partkey
JOIN orders o ON l.l_orderkey = o.o_orderkey
JOIN customer c ON o.o_custkey = c.c_custkey
JOIN nation n ON s.s_nationkey = n.n_nationkey
JOIN region r ON n.n_regionkey = r.r_regionkey
LEFT JOIN SalesHierarchy rhr ON c.c_custkey = rhr.c_custkey
WHERE l.l_shipdate BETWEEN '1997-01-01' AND '1997-12-31'
GROUP BY r.r_name, n.n_name, s.s_name, p.p_name
HAVING COUNT(DISTINCT o.o_orderkey) > 10
ORDER BY total_revenue DESC;