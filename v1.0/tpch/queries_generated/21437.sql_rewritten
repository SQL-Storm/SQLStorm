WITH RankedOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_orderdate,
        o.o_totalprice,
        RANK() OVER (PARTITION BY c.c_mktsegment ORDER BY o.o_totalprice DESC) AS order_rank,
        c.c_name
    FROM 
        orders o
    JOIN 
        customer c ON o.o_custkey = c.c_custkey
    WHERE 
        o.o_orderstatus IN ('O', 'P') AND
        o.o_orderdate >= DATE '1995-01-01' AND
        (o.o_totalprice - (SELECT AVG(o2.o_totalprice) FROM orders o2 WHERE o2.o_orderdate < o.o_orderdate)) > 0
),
HighValueSuppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_value
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey, s.s_name
    HAVING 
        SUM(ps.ps_supplycost * ps.ps_availqty) > (SELECT AVG(ps2.ps_supplycost * ps2.ps_availqty) FROM partsupp ps2)
),
ItemsDetails AS (
    SELECT 
        l.l_orderkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_price_after_discount,
        COUNT(l.l_partkey) AS item_count,
        MAX(l.l_tax) AS max_tax
    FROM 
        lineitem l
    GROUP BY 
        l.l_orderkey
    HAVING 
        COUNT(l.l_partkey) > 3
)
SELECT 
    c.c_name,
    r.r_name,
    SUM(i.item_count) FILTER (WHERE i.total_price_after_discount IS NOT NULL) AS total_items,
    AVG(s.total_supply_value) AS average_supplier_value,
    COUNT(o.o_orderkey) AS fulfilled_orders
FROM 
    RankedOrders o
JOIN 
    customer c ON o.o_custkey = c.c_custkey
JOIN 
    nation n ON c.c_nationkey = n.n_nationkey
JOIN 
    region r ON n.n_regionkey = r.r_regionkey
JOIN 
    ItemsDetails i ON o.o_orderkey = i.l_orderkey
LEFT JOIN 
    HighValueSuppliers s ON i.l_orderkey IN (SELECT l.l_orderkey FROM lineitem l WHERE l.l_extendedprice > 1000)
GROUP BY 
    c.c_name, r.r_name
HAVING 
    COUNT(o.o_orderkey) > 5 
    OR SUM(i.item_count) IS NULL
ORDER BY 
    total_items DESC NULLS LAST;