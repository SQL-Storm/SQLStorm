
WITH SupplierStats AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        SUM(ps.ps_availqty) AS total_available_qty,
        AVG(ps.ps_supplycost) AS avg_supply_cost
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey, s.s_name
),
CustomerOrders AS (
    SELECT 
        c.c_custkey,
        COUNT(DISTINCT o.o_orderkey) AS order_count,
        SUM(o.o_totalprice) AS total_spent
    FROM 
        customer c
    LEFT JOIN 
        orders o ON c.c_custkey = o.o_custkey 
    GROUP BY 
        c.c_custkey
),
QualifiedSupply AS (
    SELECT 
        ps.ps_partkey,
        ps.ps_suppkey,
        ps.ps_availqty,
        ps.ps_supplycost
    FROM 
        partsupp ps
    WHERE 
        ps.ps_availqty > (SELECT AVG(ps_availqty) FROM partsupp)
)
SELECT 
    r.r_name AS region,
    n.n_name AS nation,
    COUNT(DISTINCT cu.c_custkey) AS customer_count,
    SUM(ss.total_available_qty) AS total_available_qty,
    AVG(ss.avg_supply_cost) AS avg_supply_cost,
    SUM(co.total_spent) AS total_spent_by_customers,
    COALESCE(MAX(CASE WHEN l.l_returnflag = 'R' THEN l.l_extendedprice ELSE NULL END), 0) AS total_returned_value
FROM 
    region r
JOIN 
    nation n ON r.r_regionkey = n.n_regionkey
LEFT JOIN 
    customer cu ON cu.c_nationkey = n.n_nationkey
LEFT JOIN 
    CustomerOrders co ON cu.c_custkey = co.c_custkey
LEFT JOIN 
    SupplierStats ss ON ss.s_suppkey = (SELECT ps.ps_suppkey FROM QualifiedSupply ps WHERE ps.ps_partkey IN (SELECT p.p_partkey FROM part p WHERE p.p_type LIKE '%BRASS%') LIMIT 1)
LEFT JOIN 
    lineitem l ON l.l_orderkey IN (SELECT o.o_orderkey FROM orders o WHERE o.o_custkey = cu.c_custkey)
WHERE 
    r.r_name IS NOT NULL
GROUP BY 
    r.r_name, n.n_name
HAVING 
    SUM(ss.total_available_qty) > 0 AND COUNT(DISTINCT cu.c_custkey) > 5
ORDER BY 
    r.r_name, n.n_name;
