
WITH RECURSIVE supplier_hierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal, s.s_comment, 0 AS level
    FROM supplier s
    WHERE s.s_acctbal > (
        SELECT AVG(s1.s_acctbal)
        FROM supplier s1
        WHERE s1.s_acctbal IS NOT NULL
    )
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal, s.s_comment, sh.level + 1
    FROM supplier_hierarchy sh
    JOIN supplier s ON s.s_nationkey = sh.s_nationkey
    WHERE sh.level < 5
), 
customer_order AS (
    SELECT c.c_custkey, c.c_name, c.c_acctbal, COUNT(o.o_orderkey) AS order_count, SUM(o.o_totalprice) AS total_spent
    FROM customer c
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    GROUP BY c.c_custkey, c.c_name, c.c_acctbal
), 
part_supplier AS (
    SELECT p.p_partkey, p.p_name, p.p_retailprice, ps.ps_availqty, ps.ps_supplycost, 
           ROW_NUMBER() OVER (PARTITION BY p.p_partkey ORDER BY ps.ps_supplycost DESC) AS rank
    FROM part p
    JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
    WHERE ps.ps_availqty IS NOT NULL
), 
high_value_customers AS (
    SELECT c.c_custkey, c.c_name, c.c_acctbal 
    FROM customer c 
    WHERE c.c_acctbal > (
        SELECT AVG(c1.c_acctbal) 
        FROM customer c1 
        WHERE c1.c_acctbal IS NOT NULL
    )
)
SELECT 
    nh.n_name AS nation_name, 
    AVG(co.total_spent) AS avg_spent, 
    SUM(co.order_count) AS total_orders, 
    COUNT(DISTINCT sh.s_suppkey) AS unique_suppliers, 
    SUM(CASE WHEN ps.rank = 1 THEN ps.ps_availqty ELSE 0 END) AS highest_availability_qty,
    STRING_AGG(DISTINCT p.p_name) AS popular_parts
FROM nation nh
LEFT JOIN high_value_customers co ON nh.n_nationkey = co.c_nationkey
LEFT JOIN supplier_hierarchy sh ON sh.s_nationkey = nh.n_nationkey
LEFT JOIN part_supplier ps ON ps.p_partkey IN (SELECT l.l_partkey FROM lineitem l JOIN orders o ON l.l_orderkey = o.o_orderkey WHERE o.o_orderstatus = 'O')
GROUP BY nh.n_name
ORDER BY avg_spent DESC
LIMIT 10;
