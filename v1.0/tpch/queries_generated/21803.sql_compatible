
WITH RECURSIVE CTE_Supplier AS (
    SELECT s_suppkey, s_name, s_acctbal, s_comment, 
           ROW_NUMBER() OVER (PARTITION BY s_nationkey ORDER BY s_acctbal DESC) AS rn
    FROM supplier
    WHERE s_acctbal > 50000
), CTE_Part AS (
    SELECT p_partkey, p_name, p_retailprice, p_container,
           CASE 
              WHEN p_size IS NULL THEN 'UNKNOWN' 
              ELSE CAST(p_size AS VARCHAR(255)) 
           END AS size_desc
    FROM part
    WHERE p_retailprice > 100 
      AND p_comment LIKE '%special%'
), CTE_Orders AS (
    SELECT o_orderkey, o_custkey, o_orderdate, 
           SUM(l_extendedprice * (1 - l_discount)) AS total_revenue
    FROM orders 
    JOIN lineitem ON o_orderkey = l_orderkey
    GROUP BY o_orderkey, o_custkey, o_orderdate
)
SELECT 
    n.n_name AS nation_name,
    r.r_name AS region_name,
    COUNT(DISTINCT c.c_custkey) AS customer_count,
    SUM(o.total_revenue) AS total_revenue,
    AVG(COALESCE(s.s_acctbal, 0)) AS avg_supplier_acctbal,
    COALESCE(MAX(p.p_retailprice), 0) AS max_part_price,
    TO_CHAR(CAST('1998-10-01' AS DATE), 'Month DD, YYYY') AS report_date
FROM nation n
JOIN region r ON n.n_regionkey = r.r_regionkey
LEFT JOIN customer c ON n.n_nationkey = c.c_nationkey
LEFT JOIN CTE_Supplier s ON s.s_suppkey = c.c_custkey
LEFT JOIN CTE_Part p ON p.p_partkey = (
        SELECT ps.ps_partkey 
        FROM partsupp ps
        WHERE ps.ps_supplycost = (
            SELECT MIN(ps_supplycost) 
            FROM partsupp ps2 
            WHERE ps2.ps_partkey = p.p_partkey
        )
        LIMIT 1
    )
LEFT JOIN CTE_Orders o ON c.c_custkey = o.o_custkey
WHERE 
    (s.s_acctbal IS NULL OR s.s_acctbal >= 100000) 
    AND (o.total_revenue IS NOT NULL AND o.total_revenue > 1000)
GROUP BY 
    n.n_name, r.r_name
HAVING 
    COUNT(DISTINCT c.c_custkey) > 10 
    AND SUM(o.total_revenue) > 50000
ORDER BY 
    total_revenue DESC, customer_count ASC;
