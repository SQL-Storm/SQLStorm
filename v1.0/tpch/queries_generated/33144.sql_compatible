
WITH RECURSIVE supplier_hierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, 1 AS level
    FROM supplier s
    WHERE s.s_acctbal > (SELECT AVG(s_acctbal) FROM supplier)

    UNION ALL

    SELECT s.s_suppkey, s.s_name, s.s_nationkey, sh.level + 1
    FROM supplier s
    JOIN supplier_hierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE sh.level < 5
),
high_value_parts AS (
    SELECT p.p_partkey, p.p_name, SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_cost
    FROM part p
    JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
    GROUP BY p.p_partkey, p.p_name
    HAVING SUM(ps.ps_supplycost * ps.ps_availqty) > 10000
),
nation_stats AS (
    SELECT n.n_nationkey, n.n_name, COUNT(DISTINCT s.s_suppkey) AS supplier_count, SUM(s.s_acctbal) AS total_balance
    FROM nation n
    LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
    GROUP BY n.n_nationkey, n.n_name
),
top_nations AS (
    SELECT n.n_nationkey, n.n_name
    FROM nation_stats n
    WHERE n.supplier_count > 5
    ORDER BY total_balance DESC
    LIMIT 5
)
SELECT 
    p.p_partkey,
    p.p_name,
    t.n_name AS nation_name,
    sh.s_name AS supplier_name,
    l.l_quantity,
    l.l_extendedprice * (1 - l.l_discount) AS net_price,
    ROW_NUMBER() OVER (PARTITION BY t.n_nationkey ORDER BY l.l_shipdate DESC) AS rn
FROM lineitem l
JOIN high_value_parts p ON l.l_partkey = p.p_partkey
JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
JOIN supplier s ON ps.ps_suppkey = s.s_suppkey
JOIN top_nations t ON s.s_nationkey = t.n_nationkey
LEFT JOIN supplier_hierarchy sh ON s.s_suppkey = sh.s_suppkey
WHERE l.l_shipdate >= DATE '1998-10-01' - INTERVAL '1 year'
AND l.l_returnflag = 'N'
ORDER BY t.n_name, rn;
