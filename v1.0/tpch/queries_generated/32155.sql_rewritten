WITH RECURSIVE supplier_hierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, 0 AS level
    FROM supplier s
    WHERE s.s_acctbal > (SELECT AVG(s_acctbal) FROM supplier)
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, sh.level + 1
    FROM supplier s
    JOIN supplier_hierarchy sh ON s.s_nationkey = sh.s_nationkey
),
order_summary AS (
    SELECT o.o_orderkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    GROUP BY o.o_orderkey
),
nation_summary AS (
    SELECT n.n_nationkey, n.n_name, COUNT(DISTINCT c.c_custkey) AS customer_count, SUM(s.s_acctbal) AS total_acctbal
    FROM nation n
    LEFT JOIN customer c ON n.n_nationkey = c.c_nationkey
    LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
    GROUP BY n.n_nationkey, n.n_name
),
recent_orders AS (
    SELECT o.o_orderkey, o.o_orderdate, c.c_name, su.s_name AS supp_name
    FROM orders o
    JOIN customer c ON o.o_custkey = c.c_custkey
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    JOIN partsupp ps ON l.l_partkey = ps.ps_partkey
    JOIN supplier su ON ps.ps_suppkey = su.s_suppkey
    WHERE o.o_orderdate >= cast('1998-10-01' as date) - INTERVAL '1 year'
)
SELECT 
    ns.n_name,
    ns.customer_count,
    ns.total_acctbal,
    COALESCE(SUM(os.total_revenue), 0) AS total_order_revenue,
    COUNT(DISTINCT r.o_orderkey) AS recent_order_count,
    MAX(CASE WHEN su.level > 0 THEN su.s_name END) AS high_level_supplier
FROM nation_summary ns
LEFT JOIN order_summary os ON ns.n_nationkey = os.o_orderkey
LEFT JOIN recent_orders r ON ns.n_nationkey = (SELECT n.n_nationkey FROM nation n WHERE r.supp_name = su.s_name)
LEFT JOIN supplier_hierarchy su ON ns.n_nationkey = su.s_nationkey
GROUP BY ns.n_nationkey, ns.n_name, ns.customer_count, ns.total_acctbal
HAVING ns.customer_count > 10
ORDER BY total_order_revenue DESC
LIMIT 10;