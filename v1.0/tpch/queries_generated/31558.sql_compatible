
WITH RECURSIVE SupplierRanking AS (
    SELECT s.s_suppkey, s.s_name, SUM(ps.ps_supplycost * ps.ps_availqty) AS total_cost
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY s.s_suppkey, s.s_name
    UNION ALL
    SELECT s.s_suppkey, s.s_name, sr.total_cost + SUM(ps.ps_supplycost * ps.ps_availqty)
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    JOIN SupplierRanking sr ON sr.s_suppkey = s.s_suppkey
    GROUP BY s.s_suppkey, s.s_name, sr.total_cost
)
SELECT 
    p.p_name,
    p.p_brand,
    p.p_type,
    COUNT(DISTINCT ps.ps_suppkey) AS num_suppliers,
    AVG(l.l_discount) AS avg_discount,
    SUM(CASE WHEN l.l_returnflag = 'R' THEN l.l_quantity ELSE 0 END) AS total_returned_qty,
    SUM(CASE WHEN l.l_linestatus = 'O' THEN l.l_extendedprice - l.l_extendedprice * l.l_discount END) AS total_revenue,
    MAX(sr.total_cost) AS max_supplier_cost,
    COALESCE(r.r_name, 'Unknown') AS region_name
FROM part p
LEFT JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
LEFT JOIN supplier s ON ps.ps_suppkey = s.s_suppkey
LEFT JOIN lineitem l ON l.l_partkey = p.p_partkey
LEFT JOIN nation n ON s.s_nationkey = n.n_nationkey
LEFT JOIN region r ON n.n_regionkey = r.r_regionkey
WHERE p.p_size IN (SELECT DISTINCT p_size FROM part WHERE p_retailprice > 100.00)
AND EXISTS (SELECT 1 FROM customer c WHERE c.c_custkey = (SELECT o.o_custkey FROM orders o WHERE o.o_orderkey = l.l_orderkey) AND c.c_mktsegment = 'BUILDING')
GROUP BY p.p_partkey, p.p_name, p.p_brand, p.p_type, r.r_name
ORDER BY total_revenue DESC
LIMIT 10;
