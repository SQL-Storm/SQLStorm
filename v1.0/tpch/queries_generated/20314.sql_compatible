
WITH RankedSuppliers AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, 
           RANK() OVER (PARTITION BY s.s_nationkey ORDER BY s.s_acctbal DESC) AS rank_acctbal
    FROM supplier s
), TotalParts AS (
    SELECT ps.ps_partkey, SUM(ps.ps_availqty) AS total_availqty
    FROM partsupp ps
    GROUP BY ps.ps_partkey
), OrdersWithShipping AS (
    SELECT o.o_orderkey, o.o_custkey, o.o_orderdate,
           ROW_NUMBER() OVER (PARTITION BY o.o_orderkey ORDER BY o.o_orderdate DESC) AS row_num
    FROM orders o
    WHERE o.o_orderstatus = 'O'
), LineItemsWithComments AS (
    SELECT l.l_orderkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_price,
           STRING_AGG(l.l_comment, '; ') AS comments_concatenated
    FROM lineitem l
    WHERE l.l_returnflag = 'N'
    GROUP BY l.l_orderkey
), SupplierParts AS (
    SELECT ps.ps_partkey, ps.ps_suppkey,
           COALESCE(ps.ps_supplycost, 0) AS supply_cost_adjusted
    FROM partsupp ps
), DistinctRegions AS (
    SELECT DISTINCT r.r_name
    FROM region r
    WHERE r.r_comment IS NOT NULL
), FilteredNations AS (
    SELECT n.n_nationkey, n.n_name
    FROM nation n
    WHERE n.n_regionkey IN (SELECT r.r_regionkey FROM region r WHERE r.r_name LIKE 'A%')
)

SELECT 
    p.p_partkey, 
    p.p_name, 
    COALESCE(ts.total_availqty, 0) AS available_quantity, 
    a.n_name AS supplier_nation, 
    s.s_name AS supplier_name,
    l.comments_concatenated,
    SUM(CASE WHEN rs.rank_acctbal <= 3 THEN 1 ELSE 0 END) AS top_supplier_count
FROM part p
LEFT JOIN TotalParts ts ON ts.ps_partkey = p.p_partkey
LEFT JOIN SupplierParts sp ON sp.ps_partkey = p.p_partkey
LEFT JOIN RankedSuppliers rs ON rs.s_suppkey = sp.ps_suppkey
LEFT JOIN FilteredNations a ON a.n_nationkey = rs.s_nationkey
LEFT JOIN LineItemsWithComments l ON l.l_orderkey IN (SELECT o.o_orderkey FROM OrdersWithShipping o WHERE o.row_num = 1)
JOIN customer c ON c.c_custkey = (SELECT o.o_custkey FROM orders o WHERE o.o_orderkey = l.l_orderkey LIMIT 1)
WHERE p.p_size BETWEEN 5 AND 15
  AND (p.p_retailprice > (SELECT AVG(p2.p_retailprice) FROM part p2 WHERE p2.p_brand = p.p_brand) 
       OR p.p_comment IS NOT NULL)
GROUP BY p.p_partkey, p.p_name, a.n_name, s.s_name, l.comments_concatenated
HAVING COUNT(DISTINCT c.c_custkey) > 10
ORDER BY available_quantity DESC, top_supplier_count DESC;
