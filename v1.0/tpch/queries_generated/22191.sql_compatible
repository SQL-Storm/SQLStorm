
WITH RankedSuppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        s.s_nationkey,
        RANK() OVER (PARTITION BY s.s_nationkey ORDER BY s.s_acctbal DESC) AS supp_rank
    FROM 
        supplier s
),
PartDetails AS (
    SELECT 
        p.p_partkey,
        p.p_name,
        p.p_mfgr,
        p.p_brand,
        AVG(ps.ps_supplycost) AS avg_supplycost,
        COUNT(DISTINCT ps.ps_suppkey) AS supplier_count
    FROM 
        part p
    JOIN 
        partsupp ps ON p.p_partkey = ps.ps_partkey
    GROUP BY 
        p.p_partkey, p.p_name, p.p_mfgr, p.p_brand
),
HighValueCustomers AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        c.c_acctbal,
        ROW_NUMBER() OVER (ORDER BY c.c_acctbal DESC) AS cust_rank
    FROM 
        customer c
    WHERE 
        c.c_acctbal > (SELECT AVG(c2.c_acctbal) FROM customer c2)
),
NationRegion AS (
    SELECT 
        n.n_nationkey,
        n.n_name,
        r.r_name AS region_name,
        SUM(ps.ps_supplycost) AS total_supplycost
    FROM 
        nation n
    JOIN 
        region r ON n.n_regionkey = r.r_regionkey
    JOIN 
        supplier s ON n.n_nationkey = s.s_nationkey
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        n.n_nationkey, n.n_name, r.r_name
)
SELECT 
    p.p_partkey,
    p.p_name,
    pd.avg_supplycost,
    n.region_name,
    nc.c_custkey,
    nc.c_name,
    nc.c_acctbal,
    CASE 
        WHEN pd.supplier_count > 5 THEN 'High Supply'
        WHEN pd.supplier_count BETWEEN 3 AND 5 THEN 'Moderate Supply'
        ELSE 'Low Supply'
    END AS supply_status,
    COUNT(l.o_orderkey) AS order_count,
    SUM(CASE 
            WHEN l.l_returnflag = 'R' THEN l.l_extendedprice * (1 - l.l_discount) 
            ELSE 0 
        END) AS total_returned_amount
FROM 
    PartDetails pd
LEFT JOIN 
    lineitem l ON pd.p_partkey = l.l_partkey
LEFT JOIN 
    HighValueCustomers nc ON l.l_orderkey IN (SELECT o.o_orderkey FROM orders o WHERE o.o_custkey = nc.c_custkey)
JOIN 
    NationRegion n ON n.n_nationkey = (
        SELECT 
            n2.n_nationkey 
        FROM 
            nation n2 
        JOIN 
            supplier s ON n2.n_nationkey = s.s_nationkey
        JOIN 
            partsupp ps ON s.s_suppkey = ps.ps_suppkey
        WHERE 
            ps.ps_partkey = pd.p_partkey
        GROUP BY 
            n2.n_nationkey
        HAVING 
            SUM(ps.ps_supplycost) = n.total_supplycost
    )
WHERE 
    p.p_size IS NOT NULL
    AND pd.avg_supplycost < (SELECT MAX(avg_supplycost) FROM PartDetails)
GROUP BY 
    p.p_partkey, p.p_name, pd.avg_supplycost, n.region_name, nc.c_custkey, nc.c_name, nc.c_acctbal
HAVING 
    COUNT(l.o_orderkey) > 10
ORDER BY 
    pd.avg_supplycost DESC, p.p_name ASC;
