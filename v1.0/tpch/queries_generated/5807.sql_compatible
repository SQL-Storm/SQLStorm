
WITH RankedOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_orderdate,
        o.o_totalprice,
        c.c_name,
        ROW_NUMBER() OVER (PARTITION BY DATE_TRUNC('month', o.o_orderdate) ORDER BY o.o_totalprice DESC) AS rnk
    FROM 
        orders o
    JOIN 
        customer c ON o.o_custkey = c.c_custkey
    WHERE 
        o.o_orderstatus = 'O'
),
HighValueLineItems AS (
    SELECT 
        l.l_orderkey,
        l.l_partkey,
        l.l_quantity,
        l.l_extendedprice,
        p.p_name,
        p.p_brand,
        p.p_container,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue
    FROM 
        lineitem l
    JOIN 
        partsupp ps ON l.l_partkey = ps.ps_partkey
    JOIN 
        part p ON l.l_partkey = p.p_partkey
    JOIN 
        RankedOrders ro ON l.l_orderkey = ro.o_orderkey
    GROUP BY 
        l.l_orderkey, l.l_partkey, l.l_quantity, p.p_name, p.p_brand, p.p_container
    HAVING 
        SUM(l.l_extendedprice * (1 - l.l_discount)) > 5000
),
TopSuppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_cost
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey, s.s_name
    ORDER BY 
        total_supply_cost DESC
    LIMIT 10
)
SELECT 
    ro.o_orderkey,
    ro.o_orderdate,
    ro.o_totalprice,
    hvl.l_partkey,
    hvl.p_name,
    hvl.total_revenue,
    ts.s_name,
    ts.total_supply_cost
FROM 
    RankedOrders ro
JOIN 
    HighValueLineItems hvl ON ro.o_orderkey = hvl.l_orderkey
JOIN 
    TopSuppliers ts ON hvl.l_partkey = ts.s_suppkey
ORDER BY 
    ro.o_orderdate DESC, hvl.total_revenue DESC;
