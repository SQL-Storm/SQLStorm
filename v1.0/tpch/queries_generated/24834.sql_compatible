
WITH RankedOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_orderdate,
        o.o_totalprice,
        RANK() OVER (PARTITION BY o.o_orderstatus ORDER BY o.o_orderdate DESC) AS order_rank
    FROM orders o
),
SupplierCost AS (
    SELECT 
        ps.ps_partkey,
        SUM(ps.ps_supplycost) AS total_supply_cost
    FROM partsupp ps
    GROUP BY ps.ps_partkey
),
ExpensiveParts AS (
    SELECT 
        p.p_partkey,
        p.p_name,
        p.p_retailprice
    FROM part p
    WHERE p.p_retailprice > (
        SELECT AVG(p2.p_retailprice) * 1.5
        FROM part p2
    )
),
FilteredCustomer AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        c.c_acctbal
    FROM customer c
    WHERE c.c_acctbal IS NOT NULL AND c.c_acctbal > (
        SELECT AVG(c2.c_acctbal) * 0.75
        FROM customer c2
    )
),
RegionCount AS (
    SELECT 
        n.n_regionkey,
        COUNT(s.s_suppkey) AS supplier_count
    FROM nation n
    JOIN supplier s ON n.n_nationkey = s.s_nationkey
    GROUP BY n.n_regionkey
    HAVING COUNT(s.s_suppkey) > 2
)
SELECT 
    o.o_orderkey,
    o.o_orderdate,
    c.c_name,
    COALESCE(sp.total_supply_cost, 0) AS supply_cost,
    p.p_name,
    p.p_retailprice,
    rc.supplier_count
FROM RankedOrders o
LEFT JOIN FilteredCustomer c ON (o.o_orderkey % 2 = 0 AND o.o_orderkey = c.c_custkey)
JOIN ExpensiveParts p ON p.p_partkey IN (
    SELECT DISTINCT l.l_partkey 
    FROM lineitem l 
    WHERE l.l_orderkey = o.o_orderkey
)
LEFT JOIN SupplierCost sp ON p.p_partkey = sp.ps_partkey
JOIN RegionCount rc ON rc.n_regionkey = (
    SELECT n.n_regionkey 
    FROM nation n 
    JOIN supplier s ON n.n_nationkey = s.s_nationkey 
    WHERE s.s_suppkey IN (SELECT DISTINCT l.l_suppkey FROM lineitem l WHERE l.l_orderkey = o.o_orderkey)
)
WHERE o.order_rank = 1
AND o.o_orderstatus IN ('O', 'F')
ORDER BY o.o_orderdate DESC, c.c_name;
