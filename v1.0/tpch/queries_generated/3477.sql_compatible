
WITH RankedSuppliers AS (
    SELECT
        s.s_suppkey,
        s.s_name,
        s.s_acctbal,
        ROW_NUMBER() OVER (PARTITION BY s.s_nationkey ORDER BY s.s_acctbal DESC) AS rank
    FROM
        supplier s
),
PopularParts AS (
    SELECT
        ps.ps_partkey,
        SUM(ps.ps_availqty) AS total_available
    FROM
        partsupp ps
    GROUP BY
        ps.ps_partkey
    HAVING
        SUM(ps.ps_availqty) > 1000
),
CustomerOrders AS (
    SELECT
        c.c_custkey,
        c.c_name,
        o.o_totalprice,
        o.o_orderstatus,
        RANK() OVER (PARTITION BY c.c_custkey ORDER BY o.o_totalprice DESC) AS order_rank
    FROM
        customer c
    JOIN
        orders o ON c.c_custkey = o.o_custkey
    WHERE
        o.o_orderstatus = 'F'
)
SELECT
    p.p_partkey,
    p.p_name,
    rp.s_name AS supplier_name,
    co.c_name AS customer_name,
    co.o_totalprice,
    CASE
        WHEN co.o_totalprice IS NULL THEN 'No Orders'
        ELSE 'Orders Present'
    END AS order_status,
    ROW_NUMBER() OVER (ORDER BY p.p_partkey) AS part_rank
FROM
    part p
LEFT JOIN
    RankedSuppliers rp ON p.p_partkey IN (SELECT ps.ps_partkey FROM PopularParts ps WHERE ps.total_available > 500)
LEFT JOIN
    CustomerOrders co ON co.c_custkey IN (SELECT o.o_custkey FROM orders o WHERE o.o_orderkey IN (SELECT l.l_orderkey FROM lineitem l WHERE l.l_discount > 0.1))
WHERE
    p.p_retailprice > (SELECT AVG(p2.p_retailprice) FROM part p2 WHERE p2.p_container = 'SM BOX')
GROUP BY
    p.p_partkey,
    p.p_name,
    rp.s_name,
    co.c_name,
    co.o_totalprice,
    part_rank
ORDER BY
    part_rank, co.o_totalprice DESC NULLS LAST;
