
WITH RankedSuppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_cost,
        RANK() OVER (PARTITION BY p.p_partkey ORDER BY SUM(ps.ps_supplycost * ps.ps_availqty) DESC) AS rank
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    JOIN 
        part p ON ps.ps_partkey = p.p_partkey
    GROUP BY 
        s.s_suppkey, s.s_name, p.p_partkey
),
HighValueCustomers AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        c.c_acctbal
    FROM 
        customer c
    WHERE 
        c.c_acctbal > (SELECT AVG(c2.c_acctbal) FROM customer c2)
),
OrderDetails AS (
    SELECT 
        o.o_orderkey,
        o.o_totalprice,
        COUNT(l.l_orderkey) AS total_lines,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS net_revenue
    FROM 
        orders o
    JOIN 
        lineitem l ON o.o_orderkey = l.l_orderkey
    GROUP BY 
        o.o_orderkey, o.o_totalprice
)
SELECT 
    r.n_name,
    COALESCE(SUM(d.net_revenue), 0) AS total_revenue,
    COUNT(DISTINCT c.c_custkey) AS num_customers,
    COUNT(DISTINCT s.s_suppkey) AS num_suppliers,
    AVG(CASE WHEN rs.rank = 1 THEN rs.total_supply_cost ELSE NULL END) AS avg_top_supplier_cost
FROM 
    nation r
LEFT JOIN 
    supplier s ON r.n_nationkey = s.s_nationkey
LEFT JOIN 
    RankedSuppliers rs ON s.s_suppkey = rs.s_suppkey
LEFT JOIN 
    HighValueCustomers c ON c.c_custkey = (SELECT o.o_custkey FROM orders o WHERE o.o_orderkey IN (SELECT l.l_orderkey FROM lineitem l WHERE l.l_suppkey = s.s_suppkey) LIMIT 1)
LEFT JOIN 
    OrderDetails d ON s.s_suppkey = (SELECT p.ps_suppkey FROM partsupp p WHERE p.ps_partkey IN (SELECT p2.p_partkey FROM part p2 WHERE p2.p_brand IN ('BrandX', 'BrandY')))
GROUP BY 
    r.n_name
HAVING 
    SUM(d.net_revenue) > 100000
ORDER BY 
    total_revenue DESC;
