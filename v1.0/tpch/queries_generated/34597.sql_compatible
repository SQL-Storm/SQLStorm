
WITH RECURSIVE SupplierHierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, 1 AS hierarchy_level
    FROM supplier s
    WHERE s.s_acctbal > 1000
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, sh.hierarchy_level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE sh.hierarchy_level < 3
), 
RecentOrders AS (
    SELECT o.o_orderkey, o.o_orderdate, o.o_totalprice, 
           ROW_NUMBER() OVER (PARTITION BY c.c_nationkey ORDER BY o.o_orderdate DESC) AS rn
    FROM orders o
    JOIN customer c ON o.o_custkey = c.c_custkey
    WHERE o.o_orderstatus IN ('F', 'P')
      AND o.o_orderdate >= DATEADD(year, -1, '1998-10-01')
), 
SupplierStats AS (
    SELECT ps.ps_partkey, SUM(ps.ps_availqty) AS total_avail_qty, 
           AVG(ps.ps_supplycost) AS avg_supply_cost
    FROM partsupp ps
    GROUP BY ps.ps_partkey
)
SELECT n.n_name, 
       CONCAT('Total Orders: ', COUNT(DISTINCT ro.o_orderkey)) AS order_summary,
       SUM(CASE WHEN ro.o_totalprice > 5000 THEN ro.o_totalprice ELSE 0 END) AS high_value_orders,
       p.p_name, 
       COALESCE(SUM(s.s_acctbal), 0) AS total_acctbal,
       COUNT(DISTINCT ss.s_suppkey) AS supplier_count
FROM nation n
LEFT JOIN RecentOrders ro ON n.n_nationkey = 
    (SELECT c.c_nationkey FROM customer c WHERE c.c_custkey = ro.o_orderkey)
LEFT JOIN SupplierStats ss ON ss.ps_partkey IN 
    (SELECT l.l_partkey FROM lineitem l WHERE l.l_orderkey = ro.o_orderkey)
LEFT JOIN SupplierHierarchy s ON n.n_nationkey = s.s_nationkey
INNER JOIN part p ON p.p_partkey = ss.ps_partkey
WHERE n.n_name LIKE 'A%'
GROUP BY n.n_name, p.p_name
HAVING SUM(ss.total_avail_qty) > 100
ORDER BY n.n_name, high_value_orders DESC;
