
WITH RankedSuppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        s.s_acctbal,
        DENSE_RANK() OVER (PARTITION BY s.s_nationkey ORDER BY s.s_acctbal DESC) AS rank
    FROM 
        supplier s
),
CustomerOrders AS (
    SELECT 
        c.c_custkey,
        COUNT(DISTINCT o.o_orderkey) AS total_orders,
        SUM(o.o_totalprice) AS total_spent
    FROM 
        customer c
    LEFT JOIN 
        orders o ON c.c_custkey = o.o_custkey
    GROUP BY 
        c.c_custkey
),
PartSupplierDetails AS (
    SELECT 
        ps.ps_partkey,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_cost
    FROM 
        partsupp ps
    GROUP BY 
        ps.ps_partkey
),
OrderLineSummary AS (
    SELECT 
        l.l_orderkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS net_revenue,
        COUNT(CASE WHEN l.l_returnflag = 'R' THEN 1 END) AS returns_count,
        MAX(COALESCE(l.l_tax, 0)) AS max_tax
    FROM 
        lineitem l
    GROUP BY 
        l.l_orderkey
)
SELECT 
    n.n_name,
    COUNT(DISTINCT c.c_custkey) AS unique_customers,
    AVG(o.total_spent) AS average_spent,
    STRING_AGG(DISTINCT CONCAT(s.s_name, ' (', s.s_acctbal, ')') ORDER BY s.s_acctbal DESC) AS top_suppliers,
    SUM(COALESCE(ps.total_supply_cost, 0)) AS total_supply_costs,
    SUM(COALESCE(ols.net_revenue, 0)) AS total_net_revenue,
    COUNT(CASE WHEN ols.returns_count > 0 THEN 1 END) AS return_orders,
    SUM(CASE WHEN ols.max_tax > 0 THEN 1 ELSE 0 END) AS taxable_orders
FROM 
    nation n
LEFT JOIN 
    customer c ON c.c_nationkey = n.n_nationkey
LEFT JOIN 
    CustomerOrders o ON o.c_custkey = c.c_custkey
LEFT JOIN 
    RankedSuppliers s ON s.s_nationkey = n.n_nationkey AND s.rank <= 5
LEFT JOIN 
    PartSupplierDetails ps ON ps.ps_partkey IN (SELECT p.p_partkey FROM part p WHERE p.p_size >= 10)
LEFT JOIN 
    OrderLineSummary ols ON ols.l_orderkey IN (SELECT o.o_orderkey FROM orders o WHERE o.o_orderstatus = 'O')
GROUP BY 
    n.n_name
HAVING 
    COUNT(DISTINCT c.c_custkey) > 10 AND AVG(o.total_spent) > 500
ORDER BY 
    total_net_revenue DESC, unique_customers DESC;
