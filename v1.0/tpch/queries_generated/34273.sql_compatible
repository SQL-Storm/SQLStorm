
WITH RECURSIVE SupplierHierarchy AS (
    SELECT s_suppkey, s_name, s_nationkey, 0 AS level
    FROM supplier
    WHERE s_suppkey IN (SELECT DISTINCT ps_suppkey FROM partsupp)
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, sh.level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey AND s.s_suppkey <> sh.s_suppkey
),
NationDetails AS (
    SELECT n.n_name, COUNT(DISTINCT s.s_suppkey) AS suppliers_count,
           SUM(ps.ps_supplycost) AS total_supplycost
    FROM nation n
    LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
    LEFT JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY n.n_name
),
TopCustomers AS (
    SELECT c.c_custkey, c.c_name, SUM(o.o_totalprice) AS total_spent
    FROM customer c
    JOIN orders o ON c.c_custkey = o.o_custkey
    GROUP BY c.c_custkey, c.c_name
    ORDER BY total_spent DESC
    LIMIT 10
),
SupplierPerformance AS (
    SELECT sh.s_suppkey, sh.s_name, SUM(li.l_extendedprice * (1 - li.l_discount)) AS total_sales,
           COUNT(DISTINCT o.o_orderkey) AS order_count
    FROM SupplierHierarchy sh
    JOIN partsupp ps ON sh.s_suppkey = ps.ps_suppkey
    JOIN lineitem li ON ps.ps_partkey = li.l_partkey
    JOIN orders o ON li.l_orderkey = o.o_orderkey
    WHERE li.l_returnflag = 'N' AND li.l_shipdate >= DATE '1996-01-01'
    GROUP BY sh.s_suppkey, sh.s_name
    HAVING SUM(li.l_extendedprice * (1 - li.l_discount)) > 10000
)
SELECT n.n_name, nd.suppliers_count, nd.total_supplycost, tc.c_name,
       COALESCE(s.total_sales, 0) AS total_sales, COALESCE(s.order_count, 0) AS order_count
FROM NationDetails nd
JOIN nation n ON n.n_name = nd.n_name
LEFT JOIN TopCustomers tc ON tc.total_spent > nd.total_supplycost
LEFT JOIN SupplierPerformance s ON nd.suppliers_count = (SELECT COUNT(DISTINCT ps.ps_suppkey) 
                                                          FROM partsupp ps 
                                                          WHERE ps.ps_partkey IN (SELECT p.p_partkey 
                                                                                  FROM part p 
                                                                                  WHERE p.p_brand = 'Brand#55'))
ORDER BY nd.total_supplycost DESC, COALESCE(s.total_sales, 0) DESC;
