
WITH RECURSIVE SupplierHierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_acctbal, 1 AS level
    FROM supplier s
    WHERE s.s_acctbal > 1000
    UNION ALL
    SELECT s.s_suppkey, CONCAT(parent.s_name, ' -> ', s.s_name), s.s_acctbal, level + 1
    FROM supplier s
    INNER JOIN SupplierHierarchy parent ON s.s_nationkey = parent.s_suppkey
    WHERE s.s_acctbal > 1000
),
TotalLineItems AS (
    SELECT l.l_orderkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue
    FROM lineitem l
    WHERE l.l_shipdate >= '1997-01-01' AND l.l_shipdate < '1998-01-01'
    GROUP BY l.l_orderkey
),
QualifiedSuppliers AS (
    SELECT ps.ps_partkey, ps.ps_suppkey, SUM(ps.ps_availqty * ps.ps_supplycost) AS total_supply_cost
    FROM partsupp ps
    GROUP BY ps.ps_partkey, ps.ps_suppkey
    HAVING SUM(ps.ps_availqty) > 100
),
RankedSuppliers AS (
    SELECT s.s_suppkey, s.s_name, ROW_NUMBER() OVER (ORDER BY SUM(ps.ps_supplycost) DESC) AS supplier_rank
    FROM supplier s
    JOIN QualifiedSuppliers ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY s.s_suppkey, s.s_name
)
SELECT COALESCE(n.n_name, 'Unknown Region') AS nation_name,
       SUM(COALESCE(t.total_revenue, 0)) AS total_revenue,
       COUNT(DISTINCT r.supplier_rank) AS unique_suppliers,
       AVG(c.c_acctbal) AS avg_customer_balance
FROM nation n
LEFT JOIN customer c ON n.n_nationkey = c.c_nationkey
LEFT JOIN orders o ON c.c_custkey = o.o_custkey
LEFT JOIN TotalLineItems t ON o.o_orderkey = t.l_orderkey
LEFT JOIN RankedSuppliers r ON r.s_suppkey IN (
    SELECT ps.ps_suppkey
    FROM partsupp ps
    WHERE ps.ps_partkey IN (
        SELECT p.p_partkey
        FROM part p
        WHERE p.p_size > 10
    )
)
GROUP BY n.n_name
HAVING SUM(COALESCE(t.total_revenue, 0)) > 50000
ORDER BY total_revenue DESC;
