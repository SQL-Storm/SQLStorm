WITH RECURSIVE SupplierHierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, 1 AS level
    FROM supplier s
    WHERE s.s_acctbal > 1000
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, sh.level + 1
    FROM supplier s
    INNER JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE s.s_acctbal > 500
),
CustomerOrders AS (
    SELECT c.c_custkey, c.c_name, COUNT(o.o_orderkey) AS total_orders, SUM(o.o_totalprice) AS total_spending
    FROM customer c
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    GROUP BY c.c_custkey, c.c_name
),
PartSupplier AS (
    SELECT p.p_partkey, p.p_name, ps.ps_availqty, ps.ps_supplycost,
           ROW_NUMBER() OVER (PARTITION BY p.p_partkey ORDER BY ps.ps_supplycost ASC) AS rn
    FROM part p
    JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
)
SELECT 
    s.s_name AS supplier_name,
    c.c_name AS customer_name,
    SUM(i.l_extendedprice * (1 - i.l_discount)) AS total_revenue,
    COUNT(DISTINCT o.o_orderkey) AS unique_orders,
    rh.level AS supplier_level,
    AVG(o.o_totalprice) AS average_order_value
FROM lineitem i
JOIN orders o ON i.l_orderkey = o.o_orderkey
JOIN CustomerOrders c ON o.o_custkey = c.c_custkey
LEFT JOIN PartSupplier ps ON ps.p_partkey = i.l_partkey AND ps.rn = 1
LEFT JOIN supplier s ON ps.ps_suppkey = s.s_suppkey
JOIN SupplierHierarchy rh ON s.s_nationkey = rh.s_nationkey
WHERE o.o_orderdate >= '1997-01-01' AND o.o_orderdate < '1997-12-31'
  AND (i.l_returnflag = 'R' OR i.l_returnflag IS NULL)
GROUP BY s.s_name, c.c_name, rh.level
HAVING SUM(i.l_extendedprice * (1 - i.l_discount)) > 10000
ORDER BY total_revenue DESC
LIMIT 10;