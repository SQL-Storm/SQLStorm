
WITH RECURSIVE top_suppliers AS (
    SELECT s.s_suppkey, s.s_name, s.s_acctbal, 
           ROW_NUMBER() OVER (ORDER BY s.s_acctbal DESC) AS rn
    FROM supplier s
    WHERE s.s_acctbal IS NOT NULL
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_acctbal,
           ROW_NUMBER() OVER (ORDER BY s.s_acctbal DESC) AS rn
    FROM supplier s
    JOIN top_suppliers ts ON s.s_suppkey <> ts.s_suppkey
    WHERE ts.rn < 10
),
nation_supplier AS (
    SELECT n.n_name, COUNT(DISTINCT s.s_suppkey) AS supplier_count
    FROM nation n
    LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
    GROUP BY n.n_name
),
order_summary AS (
    SELECT o.o_orderkey, o.o_orderdate, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_sales
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE l.l_shipdate >= DATE '1997-01-01' AND l.l_shipdate < DATE '1998-01-01'
    GROUP BY o.o_orderkey, o.o_orderdate
),
max_sales AS (
    SELECT MAX(total_sales) AS max_total_sales
    FROM order_summary
),
final_report AS (
    SELECT ns.n_name, ns.supplier_count, os.total_sales
    FROM nation_supplier ns
    JOIN order_summary os ON ns.n_name = (
        SELECT n.n_name 
        FROM nation n 
        WHERE ns.supplier_count = (
            SELECT COUNT(DISTINCT s.s_suppkey) 
            FROM supplier s 
            WHERE s.s_nationkey = n.n_nationkey
        )
    )
    WHERE os.total_sales = (SELECT max_total_sales FROM max_sales)
)
SELECT f.n_name, f.supplier_count, COALESCE(f.total_sales, 0) AS sales_value
FROM final_report f
FULL OUTER JOIN top_suppliers ts ON f.supplier_count > ts.rn
ORDER BY f.n_name ASC NULLS LAST, f.supplier_count DESC;
