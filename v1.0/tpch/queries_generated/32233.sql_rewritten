WITH RECURSIVE SupplierHierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, 0 AS level
    FROM supplier s
    WHERE s.s_acctbal > (SELECT AVG(s_acctbal) FROM supplier)
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, sh.level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE sh.level < 5
),
NationRegions AS (
    SELECT n.n_nationkey, n.n_name, r.r_name, COUNT(DISTINCT s.s_suppkey) AS supplier_count
    FROM nation n
    JOIN region r ON n.n_regionkey = r.r_regionkey
    LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
    GROUP BY n.n_nationkey, n.n_name, r.r_name
),
OrderStats AS (
    SELECT o.o_custkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
           COUNT(DISTINCT o.o_orderkey) AS order_count,
           RANK() OVER (PARTITION BY o.o_orderkey ORDER BY SUM(l.l_extendedprice * (1 - l.l_discount)) DESC) AS revenue_rank
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE o.o_orderdate >= '1997-01-01' AND o.o_orderdate < '1998-01-01'
    GROUP BY o.o_custkey
)
SELECT nr.r_name, nh.n_name, SUM(os.total_revenue) AS total_revenue,
       AVG(os.order_count) AS avg_orders_per_customer, 
       CASE WHEN MAX(osh.level) IS NOT NULL THEN 'Yes' ELSE 'No' END AS high_balance_suppliers
FROM NationRegions nr
JOIN OrderStats os ON nr.n_nationkey = os.o_custkey
LEFT JOIN SupplierHierarchy osh ON nr.n_nationkey = osh.s_nationkey
GROUP BY nr.r_name, nh.n_name
HAVING SUM(os.total_revenue) > 100000
ORDER BY total_revenue DESC, avg_orders_per_customer DESC;