
WITH RankedParts AS (
    SELECT 
        p.p_partkey,
        p.p_name,
        p.p_mfgr,
        p.p_retailprice,
        ROW_NUMBER() OVER (PARTITION BY p.p_mfgr ORDER BY p.p_retailprice DESC) AS rn
    FROM 
        part p
    WHERE 
        p.p_retailprice IS NOT NULL
),
HighValueSuppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        s.s_acctbal,
        RANK() OVER (ORDER BY s.s_acctbal DESC) AS rank_acctbal
    FROM 
        supplier s
    WHERE 
        s.s_acctbal > (SELECT AVG(s_acctbal) FROM supplier)
),
OrderDetails AS (
    SELECT 
        o.o_orderkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_order_value,
        COUNT(DISTINCT l.l_partkey) AS unique_parts_count,
        o.o_orderstatus,
        o.o_orderdate
    FROM 
        orders o
    JOIN 
        lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE 
        o.o_orderdate >= DATE '1997-01-01' 
    GROUP BY 
        o.o_orderkey, o.o_orderstatus, o.o_orderdate
),
SupplierPartCounts AS (
    SELECT 
        ps.ps_supkey,
        COUNT(DISTINCT ps.ps_partkey) AS part_count,
        AVG(ps.ps_supplycost) AS avg_supply_cost
    FROM 
        partsupp ps
    GROUP BY 
        ps.ps_supkey
)
SELECT 
    r.r_name,
    SUM(COALESCE(od.total_order_value, 0)) AS aggregated_order_value,
    COUNT(DISTINCT od.o_orderkey) AS total_orders,
    COUNT(DISTINCT s.s_suppkey) AS high_value_suppliers_count,
    STRING_AGG(DISTINCT CONCAT(pp.p_name, ': ', pp.p_retailprice), ', ') AS part_details
FROM 
    region r
LEFT JOIN 
    nation n ON n.n_regionkey = r.r_regionkey
LEFT JOIN 
    supplier s ON s.s_nationkey = n.n_nationkey
LEFT JOIN 
    lineitem l ON s.s_suppkey = l.l_suppkey
LEFT JOIN 
    OrderDetails od ON l.l_orderkey = od.o_orderkey
LEFT JOIN 
    RankedParts pp ON pp.p_partkey = l.l_partkey
LEFT JOIN 
    HighValueSuppliers hv ON hv.s_suppkey = s.s_suppkey
WHERE 
    (od.unique_parts_count IS NULL OR od.unique_parts_count > 2)
    AND (s.s_acctbal > (SELECT MIN(avg_acctbal) FROM (SELECT AVG(s.s_acctbal) AS avg_acctbal FROM supplier) AS subquery)
    OR s.s_suppkey IS NULL)
GROUP BY 
    r.r_name
HAVING 
    SUM(COALESCE(od.total_order_value, 0)) > 1000000
ORDER BY 
    r.r_name DESC;
