WITH RECURSIVE Supp_CTE AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal, 0 AS level
    FROM supplier s
    WHERE s.s_acctbal > (SELECT AVG(s_acctbal) FROM supplier)
    
    UNION ALL
    
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal, c.level + 1
    FROM supplier s
    JOIN Supp_CTE c ON s.s_nationkey = c.s_nationkey
    WHERE c.level < 5
),
Part_Supplier AS (
    SELECT p.p_partkey, p.p_name, ps.ps_supplycost, ps.ps_availqty, 
           ROW_NUMBER() OVER (PARTITION BY p.p_partkey ORDER BY ps.ps_supplycost) AS rn
    FROM part p
    JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
    WHERE p.p_size > 30 AND ps.ps_availqty > 0
),
Order_Avg AS (
    SELECT o.o_custkey, AVG(o.o_totalprice) AS avg_order_price
    FROM orders o
    WHERE o.o_orderdate >= '1996-01-01'
    GROUP BY o.o_custkey
)
SELECT r.r_name, 
       SUM(l.l_extendedprice * (1 - l.l_discount)) AS revenue, 
       COUNT(DISTINCT o.o_orderkey) AS order_count, 
       COALESCE(SUM(ps.ps_availqty), 0) AS total_available_qty
FROM region r
LEFT JOIN nation n ON r.r_regionkey = n.n_regionkey
LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
LEFT JOIN Supp_CTE sc ON s.s_suppkey = sc.s_suppkey
LEFT JOIN partsupp ps ON sc.s_suppkey = ps.ps_suppkey
LEFT JOIN lineitem l ON ps.ps_partkey = l.l_partkey
LEFT JOIN orders o ON l.l_orderkey = o.o_orderkey
WHERE l.l_shipdate BETWEEN '1996-01-01' AND '1996-12-31'
  AND (s.s_acctbal IS NOT NULL OR s.s_name IS NOT NULL)
GROUP BY r.r_name
HAVING COUNT(DISTINCT o.o_orderkey) > 10
   AND SUM(l.l_extendedprice * (1 - l.l_discount)) > 10000
ORDER BY revenue DESC;