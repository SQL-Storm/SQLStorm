
WITH RECURSIVE SupplierHierarchy AS (
    SELECT s_suppkey, s_name, s_acctbal, s_nationkey, 1 AS level
    FROM supplier
    WHERE s_acctbal IS NOT NULL AND s_acctbal > (SELECT AVG(s_acctbal) FROM supplier)
    
    UNION ALL
    
    SELECT s.s_suppkey, s.s_name, s.s_acctbal, s.n_nationkey, sh.level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE sh.level < 5 AND s.s_acctbal < sh.s_acctbal
),
MarketSegmentSales AS (
    SELECT c.c_mktsegment, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_sales
    FROM customer c
    JOIN orders o ON c.c_custkey = o.o_custkey
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE o.o_orderdate BETWEEN DATE '1997-01-01' AND DATE '1998-10-01'
    GROUP BY c.c_mktsegment
),
RegionalSales AS (
    SELECT n.n_name, SUM(MS.total_sales) AS regional_sales
    FROM nation n
    LEFT JOIN customer c ON n.n_nationkey = c.c_nationkey
    LEFT JOIN MarketSegmentSales MS ON c.c_mktsegment = MS.c_mktsegment
    GROUP BY n.n_name
),
TopParts AS (
    SELECT p.p_partkey, p.p_name, SUM(l.l_extendedprice) AS total_revenue
    FROM part p
    JOIN lineitem l ON p.p_partkey = l.l_partkey
    WHERE l.l_shipdate > DATE '1998-10-01' - INTERVAL '1 year'
    GROUP BY p.p_partkey, p.p_name
    HAVING SUM(l.l_extendedprice) > 100000
),
RankedParts AS (
    SELECT p.p_partkey, p.p_name, p.total_revenue, RANK() OVER (ORDER BY p.total_revenue DESC) AS part_rank
    FROM TopParts p
)
SELECT 
    COALESCE(r.r_name, 'Unknown') AS region_name,
    c.c_mktsegment,
    SUM(CASE WHEN l.l_returnflag = 'R' THEN l.l_quantity ELSE 0 END) AS returns_quantity,
    SUM(CASE WHEN l.l_linestatus = 'F' THEN l.l_extendedprice * (1 - l.l_discount) ELSE 0 END) AS finalized_sales,
    COUNT(DISTINCT s.s_suppkey) AS distinct_suppliers,
    MAX(s.s_acctbal) AS max_supplier_balance,
    SUM(CASE WHEN rp.part_rank <= 10 THEN rp.total_revenue ELSE 0 END) AS top_parts_revenue
FROM supplier s
LEFT JOIN SupplierHierarchy sh ON s.s_suppkey = sh.s_suppkey
LEFT JOIN customer c ON s.s_nationkey = c.c_nationkey
LEFT JOIN lineitem l ON s.s_suppkey = l.l_suppkey
LEFT JOIN region r ON c.c_nationkey = r.r_regionkey
LEFT JOIN RankedParts rp ON l.l_partkey = rp.p_partkey
GROUP BY ROLLUP (r.r_name, c.c_mktsegment)
HAVING SUM(l.l_quantity) IS NOT NULL AND COUNT(DISTINCT s.s_suppkey) > 0
ORDER BY region_name, c.c_mktsegment NULLS LAST;
