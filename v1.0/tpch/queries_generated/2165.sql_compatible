
WITH RankedSuppliers AS (
    SELECT 
        s.s_suppkey, 
        s.s_name, 
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_cost,
        RANK() OVER (PARTITION BY ps.ps_partkey ORDER BY SUM(ps.ps_supplycost * ps.ps_availqty) DESC) AS rank
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey, s.s_name
),
RecentOrders AS (
    SELECT 
        o.o_orderkey, 
        o.o_totalprice, 
        DATE_TRUNC('month', o.o_orderdate) AS order_month,
        c.c_name AS customer_name
    FROM 
        orders o
    JOIN 
        customer c ON o.o_custkey = c.c_custkey
    WHERE 
        o.o_orderdate >= DATE '1998-10-01' - INTERVAL '6 months'
),
PartDetails AS (
    SELECT 
        p.p_partkey, 
        p.p_name, 
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS revenue
    FROM 
        part p
    JOIN 
        lineitem l ON p.p_partkey = l.l_partkey
    GROUP BY 
        p.p_partkey, p.p_name
),
SupplierStats AS (
    SELECT 
        ps.ps_partkey, 
        COUNT(DISTINCT ps.ps_suppkey) AS supplier_count,
        AVG(s.s_acctbal) AS avg_account_balance
    FROM 
        partsupp ps
    JOIN 
        supplier s ON ps.ps_suppkey = s.s_suppkey
    GROUP BY 
        ps.ps_partkey
)
SELECT 
    pd.p_partkey,
    pd.p_name,
    COALESCE(rs.total_cost, 0) AS supplier_total_cost,
    s.avg_account_balance,
    CASE 
        WHEN rs.rank = 1 THEN 'Top Supplier'
        ELSE 'Other'
    END AS supplier_status,
    rd.order_month,
    SUM(rd.o_totalprice) AS total_order_value,
    COUNT(DISTINCT rd.o_orderkey) AS order_count,
    SUM(pd.revenue) AS total_revenue
FROM 
    PartDetails pd
LEFT JOIN 
    RankedSuppliers rs ON pd.p_partkey = rs.s_suppkey
LEFT JOIN 
    SupplierStats s ON pd.p_partkey = s.ps_partkey
LEFT JOIN 
    RecentOrders rd ON pd.p_partkey = rd.o_orderkey
GROUP BY 
    pd.p_partkey, 
    pd.p_name, 
    rs.total_cost, 
    s.avg_account_balance, 
    rs.rank, 
    rd.order_month
ORDER BY 
    pd.p_partkey, 
    total_order_value DESC NULLS LAST;
