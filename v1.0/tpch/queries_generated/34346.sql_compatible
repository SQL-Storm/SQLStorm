
WITH RECURSIVE supplier_hierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_address, s.nationkey, 1 AS level
    FROM supplier s
    WHERE s.s_acctbal > (SELECT AVG(s_acctbal) FROM supplier)
    
    UNION ALL
    
    SELECT s.s_suppkey, s.s_name, s.s_address, s.nationkey, sh.level + 1
    FROM supplier_hierarchy sh
    JOIN partsupp ps ON ps.ps_suppkey = sh.s_suppkey
    JOIN supplier s ON s.s_suppkey = ps.ps_suppkey
    WHERE sh.level < 5
),
part_order_summary AS (
    SELECT p.p_partkey, p.p_name, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue
    FROM part p
    JOIN lineitem l ON l.l_partkey = p.p_partkey
    JOIN orders o ON o.o_orderkey = l.l_orderkey
    WHERE o.o_orderdate >= DATE '1997-01-01'
    GROUP BY p.p_partkey, p.p_name
),
nation_supplier_summary AS (
    SELECT n.n_name, COUNT(DISTINCT s.s_suppkey) AS supplier_count
    FROM nation n
    LEFT JOIN supplier s ON s.n_nationkey = n.n_nationkey
    GROUP BY n.n_name
),
customer_order_summary AS (
    SELECT c.c_custkey, c.c_name, COUNT(DISTINCT o.o_orderkey) AS order_count, SUM(o.o_totalprice) AS total_spent
    FROM customer c
    LEFT JOIN orders o ON o.o_custkey = c.c_custkey
    GROUP BY c.c_custkey, c.c_name
)
SELECT 
    p.p_partkey AS part_key,
    p.p_name AS part_name, 
    cos.c_name AS cust_name,
    cos.order_count,
    ns.supplier_count,
    SUM(pos.total_revenue) AS total_revenue,
    ROW_NUMBER() OVER (PARTITION BY ns.n_name ORDER BY SUM(pos.total_revenue) DESC) AS revenue_rank
FROM part_order_summary pos
JOIN part p ON pos.p_partkey = p.p_partkey
JOIN customer_order_summary cos ON cos.c_custkey = p.p_partkey
JOIN nation_supplier_summary ns ON ns.supplier_count = (SELECT COUNT(*) FROM supplier s WHERE s.n_nationkey = ns.n_nationkey)
LEFT JOIN supplier_hierarchy sh ON sh.nationkey = ns.n_nationkey
GROUP BY p.p_partkey, p.p_name, cos.c_name, cos.order_count, ns.supplier_count
HAVING COUNT(DISTINCT sh.s_suppkey) > 0
ORDER BY revenue_rank;
