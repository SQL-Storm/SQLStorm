
WITH SupplierParts AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        SUM(ps.ps_availqty * ps.ps_supplycost) AS total_supply_cost
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey, s.s_name
),
TopSuppliers AS (
    SELECT 
        sp.s_suppkey,
        sp.s_name,
        sp.total_supply_cost,
        ROW_NUMBER() OVER (ORDER BY sp.total_supply_cost DESC) AS rank
    FROM 
        SupplierParts sp
),
CustomerOrders AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        o.o_orderkey,
        o.o_totalprice,
        o.o_orderdate,
        o.o_orderstatus
    FROM 
        customer c
    JOIN 
        orders o ON c.c_custkey = o.o_custkey
    WHERE 
        o.o_orderdate >= DATE '1997-01-01' AND o.o_orderdate < DATE '1998-01-01'
),
LineItemDetails AS (
    SELECT 
        lo.o_orderkey,
        SUM(l.l_extendedprice - l.l_discount) AS revenue
    FROM 
        lineitem l
    JOIN 
        CustomerOrders lo ON l.l_orderkey = lo.o_orderkey
    GROUP BY 
        lo.o_orderkey
)
SELECT 
    ts.s_suppkey,
    ts.s_name,
    ts.total_supply_cost,
    co.c_custkey,
    co.c_name,
    SUM(l.revenue) AS total_revenue
FROM 
    TopSuppliers ts
JOIN 
    CustomerOrders co ON ts.s_suppkey = (SELECT ps.ps_suppkey FROM partsupp ps WHERE ps.ps_partkey IN 
        (SELECT p.p_partkey FROM part p WHERE p.p_brand = 'Brand#13') 
        LIMIT 1)
JOIN 
    LineItemDetails l ON co.o_orderkey = l.o_orderkey
GROUP BY 
    ts.s_suppkey, ts.s_name, co.c_custkey, co.c_name
HAVING 
    SUM(l.revenue) > 10000
ORDER BY 
    total_revenue DESC;
