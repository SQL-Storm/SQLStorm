
WITH RankedParts AS (
    SELECT 
        p.p_partkey,
        p.p_name,
        p.p_mfgr,
        p.p_brand,
        p.p_type,
        p.p_size,
        p.p_container,
        p.p_retailprice,
        p.p_comment,
        ROW_NUMBER() OVER (PARTITION BY p.p_brand ORDER BY p.p_retailprice DESC) AS rank
    FROM 
        part p
    WHERE 
        p.p_retailprice > 100.00
),
SupplierInsights AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        s.s_address,
        s.s_phone,
        s.s_acctbal,
        COUNT(DISTINCT ps.ps_partkey) AS part_supply_count,
        SUM(ps.ps_supplycost) AS total_supply_cost,
        SUM(ps.ps_availqty) AS total_available_qty
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey, s.s_name, s.s_address, s.s_phone, s.s_acctbal
),
CustomerOrderSummary AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        COUNT(o.o_orderkey) AS order_count,
        SUM(o.o_totalprice) AS total_spent,
        MAX(o.o_orderdate) AS last_order_date,
        STRING_AGG(CAST(o.o_orderkey AS VARCHAR) || '-' || o.o_orderstatus, ', ') AS order_details
    FROM 
        customer c
    JOIN 
        orders o ON c.c_custkey = o.o_custkey
    GROUP BY 
        c.c_custkey, c.c_name
)
SELECT 
    rp.p_name,
    rp.p_brand,
    rp.p_retailprice,
    si.s_name AS supplier_name,
    si.part_supply_count,
    si.total_supply_cost,
    cus.c_name AS customer_name,
    cus.order_count,
    cus.total_spent,
    cus.last_order_date,
    cus.order_details
FROM 
    RankedParts rp
JOIN 
    SupplierInsights si ON rp.p_partkey IN (SELECT ps.ps_partkey FROM partsupp ps WHERE ps.ps_suppkey IN (SELECT s.s_suppkey FROM supplier s))
JOIN 
    CustomerOrderSummary cus ON rp.p_partkey IN (SELECT l.l_partkey FROM lineitem l JOIN orders o ON l.l_orderkey = o.o_orderkey WHERE o.o_orderkey IN (SELECT o.o_orderkey FROM orders o))
WHERE 
    rp.rank <= 5
ORDER BY 
    rp.p_retailprice DESC, cus.total_spent DESC;
