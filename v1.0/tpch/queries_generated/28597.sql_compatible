
WITH PartSummary AS (
    SELECT 
        p.p_partkey,
        p.p_name,
        SUM(ps.ps_availqty) AS total_available_qty,
        AVG(ps.ps_supplycost) AS avg_supply_cost,
        MAX(p.p_retailprice) AS max_retail_price,
        MIN(p.p_retailprice) AS min_retail_price,
        CONCAT(p.p_name, ' - ', p.p_comment) AS detailed_comment
    FROM 
        part p
    JOIN 
        partsupp ps ON p.p_partkey = ps.ps_partkey
    GROUP BY 
        p.p_partkey, p.p_name, p.p_comment
),
CustomerOrderSummary AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        o.o_orderkey,
        o.o_orderdate,
        COUNT(l.l_orderkey) AS total_line_items,
        SUM(l.l_extendedprice) AS total_order_value,
        STRING_AGG(DISTINCT l.l_shipmode, ', ' ORDER BY l.l_shipmode) AS shipping_modes
    FROM 
        customer c
    JOIN 
        orders o ON c.c_custkey = o.o_custkey
    JOIN 
        lineitem l ON o.o_orderkey = l.l_orderkey
    GROUP BY 
        c.c_custkey, c.c_name, o.o_orderkey, o.o_orderdate
)
SELECT 
    ps.p_partkey,
    ps.p_name,
    ps.total_available_qty,
    ps.avg_supply_cost,
    ps.max_retail_price,
    ps.min_retail_price,
    ps.detailed_comment,
    cos.c_custkey,
    cos.c_name,
    cos.o_orderkey,
    cos.o_orderdate,
    cos.total_line_items,
    cos.total_order_value,
    cos.shipping_modes
FROM 
    PartSummary ps
LEFT JOIN 
    CustomerOrderSummary cos ON ps.total_available_qty > 0
WHERE 
    ps.avg_supply_cost < (SELECT AVG(ps2.ps_supplycost) FROM partsupp ps2);
