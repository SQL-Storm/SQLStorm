
WITH RECURSIVE OrderHierarchy AS (
    SELECT o.o_orderkey, o.o_orderdate, 1 AS depth
    FROM orders o
    WHERE o.o_orderstatus = 'O'
    UNION ALL
    SELECT o.o_orderkey, o.o_orderdate, oh.depth + 1
    FROM orders o
    JOIN OrderHierarchy oh ON o.o_orderkey = oh.o_orderkey
    WHERE o.o_orderdate > oh.o_orderdate
),
SupplierStats AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        SUM(ps.ps_availqty) AS total_available,
        AVG(ps.ps_supplycost) AS avg_supply_cost
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY s.s_suppkey, s.s_name
),
HighValueCustomers AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        CASE 
            WHEN c.c_acctbal IS NULL THEN 'No Balance'
            WHEN c.c_acctbal > 1000 THEN 'High Balance'
            ELSE 'Low Balance'
        END AS balance_category
    FROM customer c
    WHERE c.c_mktsegment IN ('AUTOMOBILE', 'FURNITURE')
),
LineItemDetails AS (
    SELECT 
        l.l_orderkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS net_revenue,
        ROW_NUMBER() OVER (PARTITION BY l.l_partkey ORDER BY SUM(l.l_extendedprice * (1 - l.l_discount)) DESC) AS revenue_rank
    FROM lineitem l
    GROUP BY l.l_orderkey, l.l_partkey
)
SELECT 
    n.n_name,
    COUNT(DISTINCT o.o_orderkey) AS total_orders,
    AVG(s.total_available) AS avg_supplier_avail_qty,
    (SELECT COUNT(*) FROM HighValueCustomers) AS high_value_count,
    SUM(ld.net_revenue) AS total_net_revenue
FROM nation n
LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
LEFT JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
LEFT JOIN lineitem l ON l.l_partkey = ps.ps_partkey
LEFT JOIN orders o ON o.o_orderkey = l.l_orderkey
LEFT JOIN LineItemDetails ld ON ld.l_orderkey = o.o_orderkey
WHERE n.n_name LIKE 'A%'
GROUP BY n.n_name
HAVING AVG(s.avg_supply_cost) < (
    SELECT AVG(s2.ps_supplycost)
    FROM partsupp s2
    WHERE s2.ps_availqty > 0
)
ORDER BY total_net_revenue DESC
LIMIT 10;
