WITH RECURSIVE OrderHierarchy AS (
    SELECT o.o_orderkey, o.o_orderdate, o.o_totalprice, 0 AS Level
    FROM orders o
    WHERE o.o_orderstatus = 'O' AND o.o_orderdate >= '1997-01-01'

    UNION ALL

    SELECT oh.o_orderkey, o.o_orderdate, o.o_totalprice, oh.Level + 1
    FROM orders o
    JOIN OrderHierarchy oh ON o.o_orderkey = oh.o_orderkey
    WHERE o.o_orderstatus = 'O'
),
SupplierPerformance AS (
    SELECT s.s_suppkey, s.s_name, 
           SUM(ps.ps_supplycost * ps.ps_availqty) AS TotalSupplyCost,
           COUNT(DISTINCT ps.ps_partkey) AS PartCount
    FROM supplier s
    INNER JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY s.s_suppkey, s.s_name
),
OrderCounts AS (
    SELECT c.c_nationkey, COUNT(DISTINCT o.o_orderkey) AS OrderCount
    FROM customer c
    JOIN orders o ON c.c_custkey = o.o_custkey
    GROUP BY c.c_nationkey
),
LineItemSummary AS (
    SELECT l.l_partkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS NetRevenue,
           SUM(l.l_quantity) AS TotalQuantity
    FROM lineitem l
    WHERE l.l_shipdate >= '1997-01-01' 
      AND l.l_returnflag = 'N'
    GROUP BY l.l_partkey
)
SELECT p.p_name, 
       COALESCE(lp.NetRevenue, 0) AS NetRevenue,
       COALESCE(lp.TotalQuantity, 0) AS TotalQuantity,
       sp.TotalSupplyCost, 
       oc.OrderCount,
       ROW_NUMBER() OVER (PARTITION BY p.p_partkey ORDER BY lp.NetRevenue DESC) AS RevenueRank
FROM part p
LEFT JOIN LineItemSummary lp ON p.p_partkey = lp.l_partkey
LEFT JOIN SupplierPerformance sp ON sp.PartCount > 0
LEFT JOIN OrderCounts oc ON oc.c_nationkey = (SELECT n.n_nationkey FROM nation n WHERE n.n_name = 'USA')
WHERE p.p_size BETWEEN 5 AND 10
  AND (sp.TotalSupplyCost IS NULL OR sp.TotalSupplyCost > 1000)
ORDER BY p.p_name ASC, NetRevenue DESC;