
WITH RECURSIVE TotalRevenue AS (
    SELECT 
        o.o_orderkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS revenue
    FROM 
        orders o
    JOIN 
        lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE 
        l.l_shipdate >= '1997-01-01'
    GROUP BY 
        o.o_orderkey
    UNION ALL
    SELECT 
        tr.o_orderkey,
        tr.revenue + COALESCE(SUM(l.l_extendedprice * (1 - l.l_discount)), 0)
    FROM 
        TotalRevenue tr
    JOIN 
        lineitem l ON tr.o_orderkey = l.l_orderkey
    WHERE 
        l.l_shipdate >= '1997-01-01' AND tr.revenue < 100000
    GROUP BY 
        tr.o_orderkey, tr.revenue
),
SupplierStats AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        COUNT(DISTINCT ps.ps_partkey) AS part_count,
        AVG(ps.ps_supplycost) AS avg_supply_cost
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey, s.s_name
),
HighRevenueOrders AS (
    SELECT 
        o.o_orderkey,
        COALESCE(SUM(l.l_extendedprice * (1 - l.l_discount)), 0) AS total_revenue
    FROM 
        orders o
    LEFT JOIN 
        lineitem l ON o.o_orderkey = l.l_orderkey
    GROUP BY 
        o.o_orderkey
    HAVING 
        total_revenue > (SELECT AVG(total_revenue) FROM (
            SELECT 
                SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue
            FROM 
                orders o
            JOIN 
                lineitem l ON o.o_orderkey = l.l_orderkey
            GROUP BY 
                o.o_orderkey
        ) AS avg_revenue)
)
SELECT 
    r.r_name,
    COALESCE(SUM(tr.revenue), 0) AS total_revenue,
    COUNT(DISTINCT h.o_orderkey) AS high_revenue_order_count,
    AVG(ss.avg_supply_cost) AS average_supply_cost
FROM 
    region r
LEFT JOIN 
    nation n ON r.r_regionkey = n.n_regionkey
LEFT JOIN 
    supplier s ON n.n_nationkey = s.s_nationkey
LEFT JOIN 
    partsupp ps ON s.s_suppkey = ps.ps_suppkey
LEFT JOIN 
    TotalRevenue tr ON s.s_suppkey = tr.o_orderkey
LEFT JOIN 
    HighRevenueOrders h ON h.o_orderkey = tr.o_orderkey
LEFT JOIN 
    SupplierStats ss ON s.s_suppkey = ss.s_suppkey
WHERE 
    ss.part_count IS NOT NULL OR h.o_orderkey IS NOT NULL
GROUP BY 
    r.r_name
ORDER BY 
    total_revenue DESC
LIMIT 10;
