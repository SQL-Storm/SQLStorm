
WITH RECURSIVE region_sales AS (
    SELECT 
        r.r_name AS region_name,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_sales,
        RANK() OVER (PARTITION BY r.r_regionkey ORDER BY SUM(l.l_extendedprice * (1 - l.l_discount)) DESC) AS sales_rank
    FROM 
        region r
    JOIN 
        nation n ON r.r_regionkey = n.n_regionkey
    JOIN 
        supplier s ON n.n_nationkey = s.s_nationkey
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    JOIN 
        part p ON ps.ps_partkey = p.p_partkey
    JOIN 
        lineitem l ON p.p_partkey = l.l_partkey
    GROUP BY 
        r.r_regionkey, r.r_name
),
top_regions AS (
    SELECT 
        region_name
    FROM 
        region_sales
    WHERE 
        sales_rank <= 3
)
SELECT 
    c.c_name AS customer_name,
    SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_spent,
    MAX(o.o_orderdate) AS last_order_date,
    STRING_AGG(DISTINCT p.p_name, ', ') AS purchased_parts
FROM 
    customer c
JOIN 
    orders o ON c.c_custkey = o.o_custkey
JOIN 
    lineitem l ON o.o_orderkey = l.l_orderkey
JOIN 
    part p ON l.l_partkey = p.p_partkey
WHERE 
    EXISTS (
        SELECT 1 
        FROM top_regions tr
        WHERE TRIM(tr.region_name) IN (
            SELECT n.r_name 
            FROM nation n 
            JOIN supplier s ON n.n_nationkey = s.n_nationkey
            WHERE s.s_suppkey IN (
                SELECT ps.ps_suppkey 
                FROM partsupp ps 
                JOIN part p2 ON ps.ps_partkey = p2.p_partkey
                WHERE p2.p_name LIKE '%gadget%'
            )
        )
    )
GROUP BY 
    c.c_name
HAVING 
    SUM(l.l_extendedprice * (1 - l.l_discount)) > 5000
ORDER BY 
    total_spent DESC
FETCH FIRST 10 ROWS ONLY;
