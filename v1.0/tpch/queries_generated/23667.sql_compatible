
WITH RECURSIVE supplier_hierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, 0 AS depth
    FROM supplier s
    WHERE s.s_acctbal IS NOT NULL
    
    UNION ALL
    
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, sh.depth + 1
    FROM supplier_hierarchy sh
    JOIN supplier s ON sh.s_suppkey = s.s_suppkey
    WHERE s.s_nationkey = sh.s_nationkey
      AND sh.depth < 10
),
region_average AS (
    SELECT r.r_regionkey, AVG(s.s_acctbal) AS average_balance
    FROM region r
    LEFT JOIN nation n ON r.r_regionkey = n.n_regionkey
    LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
    GROUP BY r.r_regionkey
),
order_summary AS (
    SELECT o.o_orderkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue, COUNT(DISTINCT l.l_linenumber) AS total_items
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE l.l_shipdate BETWEEN '1997-01-01' AND '1997-12-31'
    GROUP BY o.o_orderkey
),
high_value_orders AS (
    SELECT o.o_orderkey, os.total_revenue, os.total_items
    FROM order_summary os
    JOIN orders o ON os.o_orderkey = o.o_orderkey
    WHERE os.total_revenue > (SELECT AVG(total_revenue) FROM order_summary)
),
customer_info AS (
    SELECT c.c_custkey, c.c_name, c.c_acctbal, 
           CASE WHEN c.c_acctbal IS NULL THEN 'Debt' ELSE 'Credit' END AS account_status
    FROM customer c
    WHERE c.c_mktsegment IN ('BUILDING', 'AUTOMOBILE')
)
SELECT DISTINCT 
    c.c_name,
    r.r_name,
    sh.depth,
    COALESCE(ra.average_balance, 0) AS average_balance,
    ho.o_orderkey,
    ho.total_revenue,
    ho.total_items,
    STRING_AGG(l.l_comment, ', ') AS aggregate_comments
FROM customer_info c
LEFT JOIN region r ON c.c_nationkey = r.r_regionkey
LEFT JOIN supplier_hierarchy sh ON c.c_nationkey = sh.s_nationkey
LEFT JOIN region_average ra ON r.r_regionkey = ra.r_regionkey
LEFT JOIN high_value_orders ho ON ho.o_orderkey IN (SELECT o.o_orderkey FROM orders WHERE o.o_custkey = c.c_custkey)
LEFT JOIN lineitem l ON l.l_orderkey = ho.o_orderkey
WHERE r.r_name LIKE 'N%'
  AND (sh.depth IS NULL OR sh.depth > 5)
GROUP BY c.c_name, r.r_name, sh.depth, ra.average_balance, ho.o_orderkey, ho.total_revenue, ho.total_items
ORDER BY r.r_name, c.c_name;
