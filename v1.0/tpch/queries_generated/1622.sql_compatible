
WITH RankedOrders AS (
    SELECT 
        o.o_orderkey, 
        o.o_orderdate, 
        o.o_totalprice, 
        c.c_name, 
        RANK() OVER (PARTITION BY c.c_nationkey ORDER BY o.o_totalprice DESC) AS price_rank
    FROM 
        orders o
    JOIN 
        customer c ON o.o_custkey = c.c_custkey
    WHERE 
        o.o_orderdate >= DATE '1997-01-01' AND o.o_orderdate < DATE '1998-01-01'
),
SupplierStats AS (
    SELECT 
        ps.ps_partkey, 
        s.s_name, 
        SUM(ps.ps_availqty) AS total_available, 
        AVG(ps.ps_supplycost) AS avg_cost
    FROM 
        partsupp ps
    JOIN 
        supplier s ON ps.ps_suppkey = s.s_suppkey
    GROUP BY 
        ps.ps_partkey, s.s_name
),
HighValueLines AS (
    SELECT 
        l.l_orderkey,
        l.l_partkey,
        l.l_extendedprice, 
        l.l_discount, 
        p.p_name, 
        p.p_brand, 
        p.p_retailprice,
        (l.l_extendedprice * (1 - l.l_discount)) AS discounted_price
    FROM 
        lineitem l
    JOIN 
        part p ON l.l_partkey = p.p_partkey
    WHERE 
        l.l_shipdate >= DATE '1997-01-01' AND l.l_shipdate < DATE '1998-01-01'
        AND l.l_discount BETWEEN 0.1 AND 0.5
)
SELECT 
    r.o_orderkey, 
    r.o_orderdate, 
    r.c_name, 
    hs.s_name AS supplier_name, 
    hs.p_name AS part_name,
    hs.discounted_price,
    ss.total_available, 
    ss.avg_cost,
    CASE 
        WHEN ss.avg_cost IS NULL THEN 'No Supply'
        ELSE 'Available'
    END AS supply_status
FROM 
    RankedOrders r
LEFT JOIN 
    HighValueLines hs ON r.o_orderkey = hs.l_orderkey
LEFT JOIN 
    SupplierStats ss ON hs.l_partkey = ss.ps_partkey
WHERE 
    r.price_rank <= 5
ORDER BY 
    r.o_orderdate, hs.discounted_price DESC;
