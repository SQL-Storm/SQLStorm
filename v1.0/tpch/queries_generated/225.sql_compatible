
WITH SupplierSummary AS (
    SELECT 
        s.s_suppkey, 
        s.s_name, 
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supplycost,
        COUNT(DISTINCT ps.ps_partkey) AS part_count
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey, s.s_name
),
OrderDetails AS (
    SELECT 
        o.o_orderkey, 
        o.o_custkey, 
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_order_value,
        COUNT(l.l_orderkey) AS line_item_count
    FROM 
        orders o
    JOIN 
        lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE 
        o.o_orderdate >= DATE '1997-01-01' 
        AND o.o_orderstatus = 'O'
    GROUP BY 
        o.o_orderkey, o.o_custkey
),
CustomerStats AS (
    SELECT 
        c.c_custkey, 
        c.c_name,
        SUM(o.o_totalprice) AS total_spent,
        COUNT(o.o_orderkey) AS order_count,
        MAX(o.o_orderdate) AS last_order_date
    FROM 
        customer c
    LEFT JOIN 
        orders o ON c.c_custkey = o.o_custkey
    GROUP BY 
        c.c_custkey, c.c_name
)
SELECT 
    cs.c_name,
    cs.total_spent,
    cs.order_count,
    ss.s_name,
    ss.total_supplycost,
    ss.part_count,
    ROW_NUMBER() OVER (PARTITION BY cs.c_custkey ORDER BY cs.total_spent DESC) AS rank,
    COALESCE(SUM(CASE WHEN cs.last_order_date < (CAST('1998-10-01 12:34:56' AS TIMESTAMP) - INTERVAL '1 year') THEN 1 END), 0) AS inactive_customers
FROM 
    CustomerStats cs
JOIN 
    SupplierSummary ss ON ss.part_count > 5
LEFT JOIN 
    lineitem l ON l.l_orderkey IN (SELECT o.o_orderkey FROM orders o WHERE o.o_custkey = cs.c_custkey)
WHERE 
    cs.order_count > 10 OR cs.total_spent IS NULL
GROUP BY 
    cs.c_name, cs.total_spent, cs.order_count, ss.s_name, ss.total_supplycost, ss.part_count, cs.c_custkey
ORDER BY 
    cs.total_spent DESC, ss.total_supplycost ASC
LIMIT 100;
