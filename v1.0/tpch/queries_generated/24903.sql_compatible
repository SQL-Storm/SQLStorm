
WITH RankedSuppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        s.s_acctbal,
        ROW_NUMBER() OVER (PARTITION BY s.s_nationkey ORDER BY s.s_acctbal DESC) AS rank
    FROM 
        supplier s
    WHERE 
        s.s_acctbal IS NOT NULL
),
FilteredOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_custkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_sales
    FROM 
        orders o
    JOIN 
        lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE 
        l.l_returnflag = 'N' AND 
        l.l_shipdate BETWEEN '1997-01-01' AND '1997-12-31'
    GROUP BY 
        o.o_orderkey, o.o_custkey
),
CustomerDetails AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        COALESCE(SUM(fo.total_sales), 0) AS total_purchases
    FROM 
        customer c
    LEFT JOIN 
        FilteredOrders fo ON c.c_custkey = fo.o_custkey
    GROUP BY 
        c.c_custkey, c.c_name
),
HighSpenders AS (
    SELECT 
        cd.c_custkey,
        cd.c_name,
        cd.total_purchases
    FROM 
        CustomerDetails cd
    WHERE 
        cd.total_purchases > (SELECT AVG(total_purchases) FROM CustomerDetails) 
)
SELECT 
    hs.c_name,
    hs.total_purchases,
    COUNT(DISTINCT ps.ps_suppkey) AS supplier_count,
    STRING_AGG(DISTINCT CONCAT_WS(' - ', p.p_name, CAST(p.p_retailprice AS VARCHAR))) AS purchased_items
FROM 
    HighSpenders hs
LEFT JOIN 
    orders o ON hs.c_custkey = o.o_custkey
LEFT JOIN 
    lineitem l ON o.o_orderkey = l.l_orderkey
LEFT JOIN 
    partsupp ps ON l.l_partkey = ps.ps_partkey
LEFT JOIN 
    part p ON ps.ps_partkey = p.p_partkey
WHERE 
    ps.ps_availqty IS NOT NULL
GROUP BY 
    hs.c_custkey, hs.c_name
HAVING 
    SUM(CASE WHEN l.l_discount > 0 THEN l.l_extendedprice * l.l_discount ELSE 0 END) < 1000
ORDER BY 
    hs.total_purchases DESC 
LIMIT 10;
