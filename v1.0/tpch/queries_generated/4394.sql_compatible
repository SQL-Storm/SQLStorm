
WITH RankedParts AS (
    SELECT 
        p.p_partkey,
        p.p_name,
        p.p_retailprice,
        p.p_size,
        ROW_NUMBER() OVER (PARTITION BY p.p_type ORDER BY p.p_retailprice DESC) AS rank
    FROM 
        part p
),
TopSuppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_cost
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey, s.s_name
    HAVING 
        SUM(ps.ps_supplycost * ps.ps_availqty) > 1000
),
CustomerOrderCounts AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        COUNT(o.o_orderkey) AS order_count
    FROM 
        customer c
    LEFT JOIN 
        orders o ON c.c_custkey = o.o_custkey
    GROUP BY 
        c.c_custkey, c.c_name
    HAVING 
        COUNT(o.o_orderkey) > 0
)
SELECT 
    c.c_name,
    p.p_name,
    p.p_retailprice,
    COALESCE(s.total_supply_cost, 0) AS supplier_cost,
    CASE 
        WHEN co.order_count > 10 THEN 'Frequent'
        ELSE 'Occasional'
    END AS customer_type,
    RANK() OVER (ORDER BY p.p_retailprice) AS price_rank
FROM 
    RankedParts p
LEFT JOIN 
    TopSuppliers s ON p.p_partkey = s.s_suppkey
JOIN 
    CustomerOrderCounts co ON p.p_partkey = co.c_custkey
WHERE 
    p.rank <= 5 AND 
    p.p_size BETWEEN 10 AND 20
GROUP BY 
    c.c_name, p.p_name, p.p_retailprice, s.total_supply_cost, co.order_count, p.rank
ORDER BY 
    price_rank DESC;
