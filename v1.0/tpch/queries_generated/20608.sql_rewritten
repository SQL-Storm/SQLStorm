WITH RECURSIVE NationHierarchy AS (
    SELECT n_nationkey, n_name, n_regionkey, 0 AS level
    FROM nation
    UNION ALL
    SELECT nh.n_nationkey, nh.n_name, nh.n_regionkey, nh.level + 1
    FROM nation nh
    JOIN NationHierarchy nhh ON nh.n_regionkey = nhh.n_nationkey
),
SupplierDetails AS (
    SELECT s.s_suppkey, s.s_name, COUNT(DISTINCT ps.ps_partkey) AS part_count
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY s.s_suppkey, s.s_name
    HAVING COUNT(DISTINCT ps.ps_partkey) > 5
),
OrderDetails AS (
    SELECT o.o_orderkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE l.l_shipdate BETWEEN DATE '1997-01-01' AND DATE '1997-12-31'
    GROUP BY o.o_orderkey
),
AggregatedRevenue AS (
    SELECT od.o_orderkey, od.total_revenue,
           DENSE_RANK() OVER (ORDER BY od.total_revenue DESC) AS revenue_rank
    FROM OrderDetails od
)
SELECT n.n_name AS nation_name, 
       COALESCE(SUM(ad.total_revenue), 0) AS total_revenue,
       NVL(MIN(sd.part_count), 0) AS min_part_count,
       MAX(sd.part_count) AS max_part_count,
       STRING_AGG(DISTINCT sd.s_name ORDER BY sd.s_name) AS supplier_names,
       nt.level AS nation_level
FROM NationHierarchy nt
LEFT JOIN customer c ON nt.n_nationkey = c.c_nationkey
LEFT JOIN orders o ON c.c_custkey = o.o_custkey
LEFT JOIN AggregatedRevenue ad ON o.o_orderkey = ad.o_orderkey
LEFT JOIN SupplierDetails sd ON sd.s_suppkey IN (
    SELECT ps.ps_suppkey
    FROM partsupp ps
    JOIN part p ON ps.ps_partkey = p.p_partkey
    WHERE p.p_brand IS NOT NULL AND p.p_container IS NOT NULL
)
WHERE nt.level <= 3
GROUP BY nt.n_name, nt.level
HAVING COUNT(DISTINCT o.o_orderkey) > 0 OR MIN(sd.part_count) IS NULL
ORDER BY nation_name;