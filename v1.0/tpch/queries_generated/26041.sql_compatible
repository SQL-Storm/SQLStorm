
WITH RankedParts AS (
    SELECT 
        p.p_partkey,
        p.p_name,
        p.p_mfgr,
        p.p_brand,
        p.p_type,
        p.p_size,
        p.p_container,
        p.p_retailprice,
        p.p_comment,
        RANK() OVER (PARTITION BY p.p_brand ORDER BY p.p_retailprice DESC) AS price_rank
    FROM part p
), AggregatedSuppliers AS (
    SELECT 
        s.s_nationkey, 
        COUNT(s.s_suppkey) AS supplier_count,
        AVG(s.s_acctbal) AS avg_account_balance
    FROM supplier s
    GROUP BY s.s_nationkey
), ImportantNations AS (
    SELECT 
        n.n_nationkey,
        n.n_name,
        n.n_comment,
        a.supplier_count,
        a.avg_account_balance
    FROM nation n
    JOIN AggregatedSuppliers a ON n.n_nationkey = a.s_nationkey
    WHERE a.supplier_count > 10
), FilteredOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_orderdate,
        o.o_totalprice,
        c.c_name,
        c.c_nationkey
    FROM orders o
    JOIN customer c ON o.o_custkey = c.c_custkey
    WHERE o.o_orderdate >= DATE '1997-01-01'
    AND o.o_totalprice > (SELECT AVG(o2.o_totalprice) FROM orders o2)
), DetailedLineItems AS (
    SELECT 
        l.l_orderkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_price_after_discount,
        SUM(l.l_quantity) AS total_quantity,
        l.l_shipmode,
        p.p_name,
        rp.price_rank
    FROM lineitem l
    JOIN RankedParts rp ON l.l_partkey = rp.p_partkey
    JOIN FilteredOrders fo ON l.l_orderkey = fo.o_orderkey
    GROUP BY l.l_orderkey, l.l_shipmode, rp.p_name, rp.price_rank
)
SELECT 
    n.n_name AS nation_name,
    SUM(d.total_price_after_discount) AS total_revenue,
    AVG(d.total_quantity) AS average_quantity_sold,
    COUNT(DISTINCT fo.o_orderkey) AS total_orders
FROM DetailedLineItems d
JOIN FilteredOrders fo ON d.l_orderkey = fo.o_orderkey
JOIN ImportantNations n ON fo.c_nationkey = n.n_nationkey
GROUP BY n.n_name
ORDER BY total_revenue DESC;
