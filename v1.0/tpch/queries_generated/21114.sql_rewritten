WITH RECURSIVE supplier_hierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal, 
           CAST(s.s_name AS varchar(70)) AS full_name,
           ROW_NUMBER() OVER (PARTITION BY s.s_nationkey ORDER BY s.s_acctbal DESC) AS rank
    FROM supplier s
    WHERE s.s_acctbal IS NOT NULL

    UNION ALL

    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal, 
           CAST(sh.full_name || ' > ' || s.s_name AS varchar(70)),
           ROW_NUMBER() OVER (PARTITION BY s.s_nationkey ORDER BY s.s_acctbal DESC)
    FROM supplier_hierarchy sh
    JOIN supplier s ON sh.s_nationkey = s.s_nationkey
    WHERE sh.s_suppkey <> s.s_suppkey
)

SELECT p.p_partkey, p.p_name, p.p_retailprice, s.s_name, 
       COALESCE(sum(l.l_extendedprice * (1 - l.l_discount)), 0) AS total_sales,
       MAX(CASE WHEN l.l_comment LIKE '%urgent%' THEN l.l_shipdate END) AS last_urgent_ship_date,
       STRING_AGG(s.full_name, ' -> ' ORDER BY s.rank) AS supplier_path,
       RANK() OVER (PARTITION BY p.p_type ORDER BY total_sales DESC) AS sales_rank
FROM part p
LEFT JOIN lineitem l ON p.p_partkey = l.l_partkey
LEFT JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
LEFT JOIN supplier_hierarchy s ON ps.ps_suppkey = s.s_suppkey
WHERE p.p_retailprice > 50 
  AND (l.l_shipdate BETWEEN '1997-01-01' AND '1997-12-31' OR l.l_shipdate IS NULL)
  AND (s.s_acctbal IS NULL OR s.s_acctbal > (SELECT AVG(s2.s_acctbal) 
                                              FROM supplier s2 
                                              WHERE s2.s_nationkey = s.s_nationkey))
GROUP BY p.p_partkey, p.p_name, p.p_retailprice, s.s_name
HAVING COUNT(l.l_orderkey) > 5
ORDER BY total_sales DESC NULLS LAST;