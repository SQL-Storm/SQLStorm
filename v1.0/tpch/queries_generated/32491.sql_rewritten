WITH RECURSIVE CustomerOrders AS (
    SELECT c.c_custkey, c.c_name, o.o_orderkey, o.o_orderdate, o.o_totalprice
    FROM customer c
    JOIN orders o ON c.c_custkey = o.o_custkey
    WHERE o.o_orderstatus = 'O'
    
    UNION ALL
    
    SELECT co.c_custkey, co.c_name, o.o_orderkey, o.o_orderdate, o.o_totalprice
    FROM CustomerOrders co
    JOIN orders o ON co.c_custkey = o.o_custkey
    WHERE o.o_orderdate > (SELECT MAX(o2.o_orderdate) FROM orders o2 WHERE o2.o_custkey = co.c_custkey) - INTERVAL '30 days'
)
SELECT 
    n.n_name AS nation_name,
    SUM(o.o_totalprice) AS total_revenue,
    COUNT(DISTINCT c.c_custkey) AS customer_count,
    AVG(o.o_totalprice) OVER (PARTITION BY n.n_name) AS avg_order_value,
    (SELECT COUNT(DISTINCT l.l_orderkey) 
     FROM lineitem l 
     WHERE l.l_shipdate BETWEEN '1997-01-01' AND '1997-12-31' 
     AND l.l_returnflag = 'R') AS returned_items
FROM customer c
JOIN nation n ON c.c_nationkey = n.n_nationkey
LEFT JOIN CustomerOrders o ON c.c_custkey = o.c_custkey
GROUP BY n.n_name
HAVING SUM(o.o_totalprice) IS NOT NULL
ORDER BY total_revenue DESC
LIMIT 10;