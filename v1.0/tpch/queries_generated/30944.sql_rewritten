WITH RECURSIVE CustomerCTE AS (
    SELECT c_custkey, c_name, c_acctbal, c_nationkey
    FROM customer
    WHERE c_acctbal > 10000
    
    UNION ALL
    
    SELECT c.c_custkey, c.c_name, c.c_acctbal, c.c_nationkey
    FROM customer c
    JOIN CustomerCTE cc ON c.c_nationkey = cc.c_nationkey 
    WHERE c.c_acctbal > cc.c_acctbal
),
RankedOrders AS (
    SELECT o.o_orderkey, o.o_custkey, o.o_orderdate, o.o_totalprice,
           RANK() OVER (PARTITION BY o.o_orderstatus ORDER BY o.o_totalprice DESC) as order_rank
    FROM orders o
    WHERE o.o_orderdate BETWEEN '1997-01-01' AND '1997-12-31'
),
HighValueSupplier AS (
    SELECT ps.ps_partkey, ps.ps_suppkey, SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_cost
    FROM partsupp ps
    GROUP BY ps.ps_partkey, ps.ps_suppkey
    HAVING SUM(ps.ps_supplycost * ps.ps_availqty) > 50000
)
SELECT c.c_name, o.o_orderkey, o.o_totalprice, 
       (SELECT COUNT(*) FROM lineitem l 
        WHERE l.l_orderkey = o.o_orderkey AND l.l_discount > 0.1) AS discounted_items,
       p.p_name,
       COALESCE(s.s_name, 'Unknown Supplier') AS supplier_name
FROM CustomerCTE c
JOIN RankedOrders o ON c.c_custkey = o.o_custkey
LEFT JOIN lineitem l ON o.o_orderkey = l.l_orderkey
LEFT JOIN HighValueSupplier hv ON l.l_partkey = hv.ps_partkey AND l.l_suppkey = hv.ps_suppkey
LEFT JOIN supplier s ON hv.ps_suppkey = s.s_suppkey
JOIN part p ON l.l_partkey = p.p_partkey
WHERE (YEAR(o.o_orderdate) = 1997 AND o.o_totalprice > 1000)
  AND (p.p_retailprice BETWEEN 50 AND 500)
ORDER BY o.o_totalprice DESC, c.c_name;