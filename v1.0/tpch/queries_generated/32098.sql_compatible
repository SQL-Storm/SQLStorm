
WITH RECURSIVE CustomerHierarchy AS (
    SELECT c.c_custkey, c.c_name, c.c_acctbal, 1 AS level
    FROM customer c
    WHERE c.c_acctbal > (
        SELECT AVG(c2.c_acctbal)
        FROM customer c2
    )
    UNION ALL
    SELECT c.c_custkey, c.c_name, c.c_acctbal, ch.level + 1
    FROM customer c
    JOIN CustomerHierarchy ch ON ch.c_custkey = c.c_custkey
    WHERE c.c_acctbal < ch.c_acctbal
)
SELECT DISTINCT
    o.o_orderkey,
    SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
    MAX(l.l_shipdate) AS last_ship_date,
    COUNT(DISTINCT c.c_custkey) OVER(PARTITION BY o.o_orderkey) AS unique_customers
FROM orders o
JOIN lineitem l ON o.o_orderkey = l.l_orderkey
LEFT JOIN partsupp ps ON l.l_partkey = ps.ps_partkey
LEFT JOIN supplier s ON ps.ps_suppkey = s.s_suppkey
JOIN nation n ON s.s_nationkey = n.n_nationkey
JOIN region r ON n.n_regionkey = r.r_regionkey
JOIN CustomerHierarchy ch ON ch.c_custkey = o.o_custkey
WHERE o.o_orderstatus = 'O'
AND l.l_returnflag IS NULL
AND r.r_name NOT IN ('ASIA', 'EUROPE')
GROUP BY 
    o.o_orderkey,
    last_ship_date
HAVING SUM(l.l_extendedprice * (1 - l.l_discount)) > (
    SELECT AVG(total_revenue)
    FROM (
        SELECT SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue
        FROM lineitem l
        JOIN orders o ON l.l_orderkey = o.o_orderkey
        WHERE o.o_orderstatus = 'O'
        GROUP BY o.o_orderkey
    ) AS avg_revenue
)
ORDER BY last_ship_date DESC;
