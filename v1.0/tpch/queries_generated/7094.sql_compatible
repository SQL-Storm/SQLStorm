
WITH RankedOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_orderstatus,
        o.o_totalprice,
        o.o_orderdate,
        o.o_orderpriority,
        ROW_NUMBER() OVER (PARTITION BY o.o_orderstatus ORDER BY o.o_orderdate DESC) AS order_rank
    FROM 
        orders o
    WHERE 
        o.o_orderdate >= DATE '1997-01-01' 
        AND o.o_orderdate < DATE '1997-12-31'
),
SupplierPartSummary AS (
    SELECT 
        ps.ps_partkey, 
        s.s_name AS supplier_name, 
        SUM(ps.ps_availqty) AS total_available,
        AVG(ps.ps_supplycost) AS average_supply_cost
    FROM 
        partsupp ps
    JOIN 
        supplier s ON ps.ps_suppkey = s.s_suppkey
    GROUP BY 
        ps.ps_partkey, s.s_name
),
CustomerOrderSummary AS (
    SELECT 
        c.c_custkey, 
        COUNT(o.o_orderkey) AS total_orders, 
        SUM(o.o_totalprice) AS total_spent
    FROM 
        customer c
    JOIN 
        orders o ON c.c_custkey = o.o_custkey
    GROUP BY 
        c.c_custkey
)
SELECT 
    o.o_orderkey,
    o.o_orderstatus,
    o.o_totalprice,
    sps.supplier_name,
    sps.total_available,
    cost.average_supply_cost,
    cos.total_orders,
    cos.total_spent
FROM 
    RankedOrders o
LEFT JOIN 
    SupplierPartSummary sps ON sps.ps_partkey IN (SELECT l.l_partkey FROM lineitem l WHERE l.l_orderkey = o.o_orderkey)
LEFT JOIN 
    CustomerOrderSummary cos ON cos.c_custkey = (SELECT c.c_custkey FROM customer c WHERE c.c_accountbal > 0 LIMIT 1)
WHERE 
    o.order_rank <= 10
ORDER BY 
    o.o_orderdate DESC, o.o_orderkey;
