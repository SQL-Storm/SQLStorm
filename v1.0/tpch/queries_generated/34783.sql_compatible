
WITH RECURSIVE SupplierHierarchy AS (
    SELECT s.s_suppkey, s.s_name, NULL AS parent_suppkey, s.s_acctbal
    FROM supplier s
    WHERE s.s_acctbal > 1000

    UNION ALL
    
    SELECT s.s_suppkey, s.s_name, sh.s_suppkey AS parent_suppkey, s.s_acctbal
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.s_suppkey = sh.parent_suppkey
),
PartAverage AS (
    SELECT ps.ps_partkey, AVG(ps.ps_supplycost) AS avg_supplycost
    FROM partsupp ps
    GROUP BY ps.ps_partkey
),
HighValueOrders AS (
    SELECT o.o_orderkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_order_value
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE o.o_orderstatus = 'O'
    GROUP BY o.o_orderkey
    HAVING SUM(l.l_extendedprice * (1 - l.l_discount)) > 5000
)
SELECT
    p.p_name,
    p.p_brand,
    p.p_mfgr,
    COALESCE(AVG(pa.avg_supplycost), 0) AS avg_supplycost,
    COALESCE((
        SELECT COUNT(DISTINCT o.o_orderkey)
        FROM orders o
        JOIN lineitem l ON o.o_orderkey = l.l_orderkey
        WHERE l.l_partkey = p.p_partkey
    ), 0) AS order_count,
    COALESCE(COUNT(DISTINCT sh.s_suppkey), 0) AS suppliers_count,
    COALESCE(MAX(hv.total_order_value), 0) AS max_high_value_order
FROM part p
LEFT JOIN PartAverage pa ON p.p_partkey = pa.ps_partkey
LEFT JOIN SupplierHierarchy sh ON p.p_partkey IN (
    SELECT ps.ps_partkey
    FROM partsupp ps
    WHERE ps.ps_suppkey = sh.s_suppkey
)
LEFT JOIN HighValueOrders hv ON EXISTS (
    SELECT 1
    FROM lineitem l
    WHERE l.l_partkey = p.p_partkey 
    AND l.l_orderkey = hv.o_orderkey
)
GROUP BY p.p_partkey, p.p_name, p.p_brand, p.p_mfgr
ORDER BY avg_supplycost DESC, order_count DESC, suppliers_count ASC;
