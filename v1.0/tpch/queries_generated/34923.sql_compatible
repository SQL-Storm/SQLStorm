
WITH RECURSIVE SupplierChain AS (
    SELECT s.s_suppkey, s.s_name, s.s_acctbal, 0 AS level
    FROM supplier s
    WHERE s.s_acctbal > (SELECT AVG(s_acctbal) FROM supplier)
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_acctbal, sc.level + 1
    FROM supplier s
    JOIN SupplierChain sc ON s.s_suppkey = sc.s_suppkey
    WHERE sc.level < 5
),
AverageProductPrice AS (
    SELECT p.p_partkey, AVG(ps.ps_supplycost) AS avg_supplycost
    FROM part p
    JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
    GROUP BY p.p_partkey
),
HighValueOrders AS (
    SELECT o.o_orderkey, SUM(li.l_extendedprice * (1 - li.l_discount)) AS total_order_value
    FROM orders o
    JOIN lineitem li ON o.o_orderkey = li.l_orderkey
    WHERE o.o_orderstatus = 'O'
    GROUP BY o.o_orderkey
    HAVING SUM(li.l_extendedprice * (1 - li.l_discount)) > 10000
),
TopRegions AS (
    SELECT r.r_name, COUNT(n.n_nationkey) AS nation_count
    FROM region r
    LEFT JOIN nation n ON r.r_regionkey = n.n_regionkey
    GROUP BY r.r_name
    ORDER BY nation_count DESC
    LIMIT 5
)
SELECT DISTINCT
    c.c_name,
    sp.s_name,
    op.total_order_value,
    p.p_name,
    ap.avg_supplycost,
    rg.r_name
FROM customer c
JOIN orders o ON c.c_custkey = o.o_custkey
JOIN HighValueOrders op ON o.o_orderkey = op.o_orderkey
JOIN lineitem li ON li.l_orderkey = o.o_orderkey
JOIN part p ON li.l_partkey = p.p_partkey
JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
JOIN SupplierChain sc ON ps.ps_suppkey = sc.s_suppkey
JOIN region rg ON c.c_nationkey = rg.r_regionkey
JOIN AverageProductPrice ap ON p.p_partkey = ap.p_partkey
WHERE rg.r_name IN (SELECT r.r_name FROM TopRegions r)
AND c.c_acctbal IS NOT NULL
AND (sc.s_acctbal >= 5000 OR sc.s_acctbal IS NULL)
ORDER BY op.total_order_value DESC, c.c_name;
