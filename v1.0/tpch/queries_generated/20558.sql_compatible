
WITH RankedProducts AS (
    SELECT 
        p.p_partkey,
        p.p_name,
        p.p_brand,
        p.p_retailprice,
        ROW_NUMBER() OVER (PARTITION BY p.p_brand ORDER BY p.p_retailprice DESC) as rn
    FROM part p
    WHERE p.p_size IN (SELECT DISTINCT ps.ps_availqty FROM partsupp ps WHERE ps.ps_supplycost < 100)
),
FilteredSuppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        s.s_acctbal,
        s.n_nationkey,
        CASE WHEN s.s_acctbal IS NULL THEN 'No Balance' ELSE 'Positive Balance' END as balance_status
    FROM supplier s
    WHERE s.s_suppkey NOT IN (SELECT DISTINCT ps.ps_suppkey FROM partsupp ps WHERE ps.ps_availqty < 10)
),
HighValueCustomers AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        SUM(o.o_totalprice) OVER (PARTITION BY c.c_custkey) as total_spent
    FROM customer c
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    WHERE o.o_orderstatus = 'F' OR o.o_orderdate > '1997-01-01'
)
SELECT 
    rp.p_partkey,
    rp.p_name,
    rp.p_brand,
    fps.s_suppkey,
    fps.s_name,
    hvc.c_custkey,
    hvc.c_name,
    hvc.total_spent,
    COALESCE(MAX(rp.p_retailprice), 0) AS max_price,
    STRING_AGG(DISTINCT fps.balance_status, ', ') AS supplier_balances
FROM RankedProducts rp
FULL OUTER JOIN FilteredSuppliers fps ON rp.p_partkey = fps.n_nationkey
LEFT JOIN HighValueCustomers hvc ON hvc.total_spent > 5000
WHERE 
    (rp.p_name LIKE '%rubber%' OR fps.s_name IS NULL)
    AND rp.rn <= 5
GROUP BY 
    rp.p_partkey, rp.p_name, rp.p_brand, fps.s_suppkey, fps.s_name, hvc.c_custkey, hvc.c_name, hvc.total_spent
HAVING 
    COUNT(hvc.c_custkey) > 0 OR fps.s_suppkey IS NULL
ORDER BY 
    max_price DESC, hvc.total_spent DESC;
