
WITH RankedSuppliers AS (
    SELECT 
        s.s_suppkey, 
        s.s_name, 
        s.s_nationkey, 
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_cost,
        ROW_NUMBER() OVER (PARTITION BY n.n_name ORDER BY SUM(ps.ps_supplycost * ps.ps_availqty) DESC) AS rank
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    JOIN 
        nation n ON s.s_nationkey = n.n_nationkey
    GROUP BY 
        s.s_suppkey, s.s_name, s.s_nationkey, n.n_name
),
TopSuppliers AS (
    SELECT 
        rs.s_suppkey, 
        rs.s_name, 
        rs.total_supply_cost, 
        n.n_name
    FROM 
        RankedSuppliers rs
    JOIN 
        nation n ON rs.s_nationkey = n.n_nationkey
    WHERE 
        rs.rank <= 5
),
CustomerOrderSummary AS (
    SELECT 
        c.c_custkey, 
        c.c_name, 
        SUM(o.o_totalprice) AS total_orders
    FROM 
        customer c
    JOIN 
        orders o ON c.c_custkey = o.o_custkey
    GROUP BY 
        c.c_custkey, c.c_name
)
SELECT 
    cus.c_name AS customer_name,
    cus.total_orders AS total_order_value,
    ts.s_name AS supplier_name,
    ts.total_supply_cost AS supplier_total_cost,
    n.n_name AS nation_name
FROM 
    CustomerOrderSummary cus
JOIN 
    TopSuppliers ts ON ts.n_name IN (SELECT n_name FROM nation WHERE n.n_nationkey = ts.n_nationkey)
JOIN 
    nation n ON ts.n_nationkey = n.n_nationkey
WHERE 
    cus.total_orders > (SELECT AVG(total_orders) FROM CustomerOrderSummary)
ORDER BY 
    cus.total_orders DESC, ts.total_supply_cost DESC;
