
WITH RECURSIVE nation_hierarchy AS (
    SELECT n_nationkey, n_name, n_regionkey, 0 AS level
    FROM nation
    WHERE n_nationkey = 1
    UNION ALL
    SELECT n.n_nationkey, n.n_name, n.n_regionkey, nh.level + 1
    FROM nation n
    JOIN nation_hierarchy nh ON n.n_regionkey = nh.n_regionkey
),
customer_order_summary AS (
    SELECT c.c_custkey, c.c_name, COUNT(o.o_orderkey) AS total_orders,
           SUM(o.o_totalprice) AS total_spent
    FROM customer c
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    GROUP BY c.c_custkey, c.c_name
),
part_supplier_summary AS (
    SELECT p.p_partkey, SUM(ps.ps_supplycost * ps.ps_availqty) AS total_cost,
           COUNT(s.s_suppkey) AS supplier_count
    FROM part p
    JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
    JOIN supplier s ON ps.ps_suppkey = s.s_suppkey
    GROUP BY p.p_partkey
),
ranked_lineitems AS (
    SELECT l.l_orderkey, l.l_partkey, l.l_suppkey,
           RANK() OVER (PARTITION BY l.l_orderkey ORDER BY l.l_extendedprice DESC) AS price_rank
    FROM lineitem l
),
filtered_orders AS (
    SELECT o.o_orderkey, o.o_totalprice, o.o_orderdate, 
           CASE WHEN o.o_orderstatus = 'O' THEN 'Open' ELSE 'Closed' END AS order_status
    FROM orders o
    WHERE o.o_orderdate BETWEEN DATE '1997-01-01' AND DATE '1997-12-31'
)
SELECT nh.n_name AS nation_name, 
       ols.c_name AS customer_name, 
       SUM(COALESCE(ols.total_orders, 0)) AS orders_count,
       SUM(COALESCE(ols.total_spent, 0)) AS total_spent,
       SUM(COALESCE(pss.total_cost, 0)) AS supplier_cost,
       AVG(pss.supplier_count) AS avg_suppliers,
       MAX(rli.price_rank) AS highest_priced_item_rank
FROM nation_hierarchy nh
JOIN customer_order_summary ols ON nh.n_nationkey = ols.c_custkey
LEFT JOIN part_supplier_summary pss ON ols.c_custkey = pss.p_partkey
LEFT JOIN ranked_lineitems rli ON ols.total_orders = rli.l_orderkey
JOIN filtered_orders fo ON ols.total_orders = fo.o_orderkey
GROUP BY nh.n_name, ols.c_name
HAVING SUM(COALESCE(ols.total_orders, 0)) > 10
ORDER BY SUM(ols.total_spent) DESC;
