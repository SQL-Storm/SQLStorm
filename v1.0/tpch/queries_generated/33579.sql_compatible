
WITH RECURSIVE PartHierarchy AS (
    SELECT p_partkey, p_name, 0 AS level
    FROM part
    WHERE p_size >= 10
    UNION ALL
    SELECT p.p_partkey, p.p_name, ph.level + 1
    FROM part p
    INNER JOIN PartHierarchy ph ON p.p_partkey = ph.p_partkey
    WHERE p.p_size < 10
),
SupplierStats AS (
    SELECT s.nationkey,
           SUM(ps.ps_availqty) AS total_availqty,
           AVG(s.s_acctbal) AS avg_acctbal
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY s.nationkey
),
OrderSummary AS (
    SELECT o.o_orderkey,
           SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
           COUNT(DISTINCT l.l_orderkey) AS item_count
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    GROUP BY o.o_orderkey
)
SELECT n.n_name,
       COALESCE(SUM(ss.total_availqty), 0) AS supplier_availability,
       COALESCE(MIN(os.total_revenue), 0) AS min_revenue,
       COUNT(DISTINCT ph.p_partkey) AS part_count
FROM nation n
LEFT JOIN SupplierStats ss ON n.n_nationkey = ss.nationkey
LEFT JOIN OrderSummary os ON os.o_orderkey IN (
    SELECT o.o_orderkey 
    FROM orders o 
    WHERE o.o_orderstatus = 'O'
)
LEFT JOIN PartHierarchy ph ON ph.p_partkey IN (
    SELECT ps.ps_partkey
    FROM partsupp ps 
    WHERE ps.ps_availqty > 0
)
GROUP BY n.n_name
ORDER BY supplier_availability DESC, min_revenue ASC;
