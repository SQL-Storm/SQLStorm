WITH RankedSuppliers AS (
    SELECT 
        s.s_suppkey, 
        s.s_name, 
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_cost,
        RANK() OVER (PARTITION BY p.p_partkey ORDER BY SUM(ps.ps_supplycost * ps.ps_availqty) DESC) AS rank
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    JOIN 
        part p ON ps.ps_partkey = p.p_partkey
    GROUP BY 
        s.s_suppkey, s.s_name, p.p_partkey
),
TotalOrders AS (
    SELECT 
        o.o_custkey, 
        SUM(o.o_totalprice) AS total_order_value
    FROM 
        orders o
    WHERE 
        o.o_orderdate >= DATE '1995-01-01' AND o.o_orderdate < DATE '1997-01-01'
    GROUP BY 
        o.o_custkey
),
TopCustomers AS (
    SELECT 
        c.c_custkey, 
        c.c_name, 
        COALESCE(to.total_order_value, 0) AS total_order_value
    FROM 
        customer c
    LEFT JOIN 
        TotalOrders to ON c.c_custkey = to.o_custkey
    WHERE 
        c.c_acctbal > (SELECT AVG(c2.c_acctbal) FROM customer c2)
),
OrderDetails AS (
    SELECT 
        lo.l_orderkey, 
        lo.l_partkey, 
        lo.l_quantity, 
        lo.l_extendedprice,
        ROW_NUMBER() OVER (PARTITION BY lo.l_orderkey ORDER BY lo.l_linenumber) AS line_number
    FROM 
        lineitem lo
    JOIN 
        orders o ON lo.l_orderkey = o.o_orderkey
    WHERE 
        o.o_orderstatus = 'O'
)
SELECT 
    tc.c_name, 
    tc.total_order_value, 
    COUNT(DISTINCT od.l_orderkey) AS order_count,
    MAX(od.l_extendedprice) AS max_lineitem_price,
    s.s_name AS best_supplier
FROM 
    TopCustomers tc
LEFT JOIN 
    OrderDetails od ON tc.c_custkey = od.l_orderkey
LEFT JOIN 
    RankedSuppliers s ON od.l_partkey = s.s_partkey AND s.rank = 1
WHERE 
    tc.total_order_value > 1000
GROUP BY 
    tc.c_custkey, tc.c_name, tc.total_order_value, s.s_name
HAVING 
    COUNT(DISTINCT od.line_number) > 5
ORDER BY 
    tc.total_order_value DESC, order_count ASC;