WITH RECURSIVE CustomerOrderHierarchy AS (
    SELECT c.c_custkey, c.c_name, o.o_orderkey, o.o_orderdate, 1 AS level
    FROM customer c
    JOIN orders o ON c.c_custkey = o.o_custkey
    WHERE o.o_orderstatus = 'O'
    
    UNION ALL
    
    SELECT co.c_custkey, co.c_name, o.o_orderkey, o.o_orderdate, co.level + 1
    FROM CustomerOrderHierarchy co
    JOIN orders o ON co.o_orderkey = o.o_custkey
    WHERE o.o_orderstatus = 'O'
),
SupplierPartDetails AS (
    SELECT s.s_suppkey, s.s_name, p.p_partkey, p.p_name, ps.ps_supplycost, ps.ps_availqty,
           ROW_NUMBER() OVER (PARTITION BY s.s_suppkey ORDER BY ps.ps_supplycost DESC) AS rn
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    JOIN part p ON ps.ps_partkey = p.p_partkey
    WHERE p.p_retailprice IS NOT NULL AND ps.ps_availqty > 0
),
OrderLineDetails AS (
    SELECT l.l_orderkey, l.l_partkey, l.l_quantity, l.l_extendedprice, 
           l.l_discount, l.l_tax, 
           CASE WHEN l.l_returnflag = 'Y' THEN 'Returned' ELSE 'Not Returned' END AS ReturnStatus
    FROM lineitem l
    WHERE l.l_shipdate > '1997-01-01'
),
AggregatedSales AS (
    SELECT o.c_custkey, SUM(ol.l_extendedprice * (1 - ol.l_discount)) AS total_sales
    FROM CustomerOrderHierarchy o
    JOIN OrderLineDetails ol ON o.o_orderkey = ol.l_orderkey
    GROUP BY o.c_custkey
)
SELECT 
    n.n_name AS Nation,
    MAX(psd.ps_supplycost) AS MaxSupplyCost,
    AVG(as.total_sales) AS AvgTotalSales,
    COUNT(DISTINCT co.c_custkey) AS NumCustomers
FROM region r
LEFT JOIN nation n ON r.r_regionkey = n.n_regionkey
LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
LEFT JOIN SupplierPartDetails psd ON s.s_suppkey = psd.s_suppkey
LEFT JOIN AggregatedSales as ON s.s_suppkey = as.c_custkey
WHERE psd.rn = 1
  AND (s.s_acctbal IS NOT NULL OR as.total_sales > 1000)
GROUP BY n.n_name
ORDER BY MaxSupplyCost DESC, AvgTotalSales ASC
LIMIT 10;