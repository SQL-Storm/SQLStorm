WITH RankedSuppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        s.s_acctbal,
        RANK() OVER (PARTITION BY n.n_nationkey ORDER BY s.s_acctbal DESC) as rank
    FROM 
        supplier s
    JOIN 
        nation n ON s.s_nationkey = n.n_nationkey
    WHERE 
        s.s_acctbal > 5000
),
HighValueOrders AS (
    SELECT 
        o.o_orderkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_value
    FROM 
        orders o
    JOIN 
        lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE 
        o.o_orderdate BETWEEN '1997-01-01' AND '1997-12-31'
    GROUP BY 
        o.o_orderkey
    HAVING 
        total_value > 10000
),
PartSupplierDetails AS (
    SELECT 
        p.p_partkey,
        p.p_name,
        ps.ps_supplycost,
        ps.ps_availqty,
        (ps.ps_supplycost * ps.ps_availqty) AS supplier_value
    FROM 
        partsupp ps
    JOIN 
        part p ON ps.ps_partkey = p.p_partkey
    WHERE 
        ps.ps_availqty > 100
),
FinalResults AS (
    SELECT 
        r.r_name,
        COUNT(DISTINCT c.c_custkey) AS num_customers,
        SUM(p.p_retailprice) AS total_retail_value,
        AVG(p.p_retailprice) AS avg_retail_price
    FROM 
        region r
    LEFT JOIN 
        nation n ON r.r_regionkey = n.n_regionkey
    LEFT JOIN 
        customer c ON n.n_nationkey = c.c_nationkey
    LEFT JOIN 
        FinalPartDetails p ON c.c_custkey = p.c_custkey
    WHERE 
        r.r_name IS NOT NULL OR r.r_name LIKE '%east%'
    GROUP BY 
        r.r_name
)
SELECT 
    r_name,
    num_customers,
    total_retail_value,
    avg_retail_price,
    CASE 
        WHEN num_customers > 10 THEN 'High'
        WHEN num_customers BETWEEN 5 AND 10 THEN 'Medium'
        ELSE 'Low'
    END AS customer_segment
FROM 
    FinalResults
WHERE 
    total_retail_value IS NOT NULL
ORDER BY 
    total_retail_value DESC
LIMIT 50;