
WITH RankedSuppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        s.s_acctbal,
        ROW_NUMBER() OVER (PARTITION BY s.s_nationkey ORDER BY s.s_acctbal DESC) AS rnk
    FROM 
        supplier s
    WHERE 
        s.s_acctbal IS NOT NULL
),
HighValueParts AS (
    SELECT 
        p.p_partkey,
        p.p_name,
        p.p_retailprice,
        CASE 
            WHEN p.p_retailprice > (SELECT AVG(p2.p_retailprice) FROM part p2) THEN 'High'
            ELSE 'Low'
        END AS price_category
    FROM 
        part p
),
LineitemAnalysis AS (
    SELECT 
        l.l_orderkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue
    FROM 
        lineitem l
    WHERE 
        l.l_returnflag = 'N'
    GROUP BY 
        l.l_orderkey
)
SELECT 
    r.r_name AS region_name,
    COUNT(DISTINCT c.c_custkey) AS unique_customers,
    SUM(COALESCE(l.total_revenue, 0)) AS total_revenue,
    STRING_AGG(DISTINCT p.p_name, ', ') AS part_names,
    MAX(s.s_acctbal) AS max_supplier_account_balance
FROM 
    region r
LEFT JOIN 
    nation n ON r.r_regionkey = n.n_regionkey
LEFT JOIN 
    customer c ON n.n_nationkey = c.c_nationkey
LEFT JOIN 
    orders o ON c.c_custkey = o.o_custkey
LEFT JOIN 
    LineitemAnalysis l ON o.o_orderkey = l.l_orderkey
LEFT JOIN 
    partsupp ps ON ps.ps_partkey IN (SELECT p.p_partkey FROM HighValueParts p WHERE p.price_category = 'High')
LEFT JOIN 
    RankedSuppliers s ON s.s_nationkey = n.n_nationkey AND s.rnk <= 5
WHERE 
    o.o_orderstatus IN ('F', 'O') 
GROUP BY 
    r.r_name
HAVING 
    SUM(COALESCE(l.total_revenue, 0)) > 1000000 
    AND COUNT(DISTINCT c.c_custkey) < 100
ORDER BY 
    region_name DESC;
