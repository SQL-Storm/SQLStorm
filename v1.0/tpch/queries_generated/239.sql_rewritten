WITH RankedSuppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        s.s_acctbal,
        ROW_NUMBER() OVER (PARTITION BY s.n_nationkey ORDER BY s.s_acctbal DESC) AS rank
    FROM 
        supplier s
    JOIN 
        nation n ON s.s_nationkey = n.n_nationkey
    WHERE 
        n.n_comment IS NOT NULL
), TotalSales AS (
    SELECT 
        l.l_suppkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_sales
    FROM 
        lineitem l
    WHERE 
        l.l_shipdate >= '1997-01-01' AND l.l_shipdate < '1997-12-31'
    GROUP BY 
        l.l_suppkey
), SupplierSales AS (
    SELECT 
        rs.s_suppkey,
        rs.s_name,
        COALESCE(ts.total_sales, 0) AS total_sales,
        rs.s_acctbal,
        CASE 
            WHEN COALESCE(ts.total_sales, 0) > rs.s_acctbal THEN 'Overdrawn'
            ELSE 'In Good Standing'
        END AS status
    FROM 
        RankedSuppliers rs
    LEFT JOIN 
        TotalSales ts ON rs.s_suppkey = ts.l_suppkey
    WHERE 
        rs.rank <= 5
), FilteredSuppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        COALESCE(SUM(l.l_extendedprice * (1 - l.l_discount)), 0) AS sales
    FROM 
        supplier s
    LEFT JOIN 
        lineitem l ON s.s_suppkey = l.l_suppkey
    GROUP BY 
        s.s_suppkey, s.s_name
    HAVING 
        sales > 100000
)
SELECT 
    fs.s_suppkey,
    fs.s_name,
    fs.sales,
    ss.total_sales,
    ss.s_acctbal,
    ss.status
FROM 
    FilteredSuppliers fs
JOIN 
    SupplierSales ss ON fs.s_suppkey = ss.s_suppkey
ORDER BY 
    fs.sales DESC, ss.total_sales DESC;