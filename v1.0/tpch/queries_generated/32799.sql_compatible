
WITH RECURSIVE CustomerOrderSummary AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        COUNT(o.o_orderkey) AS total_orders,
        SUM(o.o_totalprice) AS total_revenue
    FROM 
        customer c
    LEFT JOIN 
        orders o ON c.c_custkey = o.o_custkey
    GROUP BY 
        c.c_custkey, c.c_name
), 
SupplierPartSummary AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        SUM(ps.ps_availqty) AS total_available,
        AVG(ps.ps_supplycost) AS avg_supply_cost
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey, s.s_name
)
SELECT 
    r.r_name AS region_name,
    cs.c_name,
    cs.total_orders,
    cs.total_revenue,
    sp.s_name AS supplier_name,
    sp.total_available,
    sp.avg_supply_cost,
    CASE 
        WHEN cs.total_revenue IS NULL THEN 'No Revenue'
        ELSE FORMAT(cs.total_revenue, 'C')
    END AS formatted_revenue,
    CASE 
        WHEN sp.avg_supply_cost > 200 THEN 'Expensive Supplier'
        ELSE 'Affordable Supplier'
    END AS supplier_cost_category
FROM 
    region r
LEFT JOIN 
    nation n ON r.r_regionkey = n.n_regionkey
LEFT JOIN 
    customer c ON n.n_nationkey = c.c_nationkey
LEFT JOIN 
    CustomerOrderSummary cs ON c.c_custkey = cs.c_custkey
LEFT JOIN 
    partsupp ps ON cs.total_orders > 5   
LEFT JOIN 
    SupplierPartSummary sp ON ps.ps_partkey = sp.s_suppkey
WHERE 
    (cs.total_orders IS NULL OR cs.total_orders > 0) 
    AND (sp.total_available IS NOT NULL AND sp.total_available > 0)
ORDER BY 
    r.r_name, cs.total_revenue DESC;