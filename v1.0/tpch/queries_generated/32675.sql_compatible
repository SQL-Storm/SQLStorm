
WITH RECURSIVE OrderHierarchy AS (
    SELECT o.o_orderkey, o.o_orderdate, o.o_totalprice, 1 AS level
    FROM orders o
    WHERE o.o_orderstatus = 'F'
    
    UNION ALL
    
    SELECT o.o_orderkey, o.o_orderdate, o.o_totalprice, oh.level + 1
    FROM orders o
    JOIN OrderHierarchy oh ON oh.o_orderkey = o.o_orderkey
    WHERE o.o_orderstatus = 'P'
),
SupplierStats AS (
    SELECT s.s_suppkey, s.s_name, SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supplycost,
           COUNT(DISTINCT ps.ps_partkey) AS part_count
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY s.s_suppkey, s.s_name
),
LineItemStats AS (
    SELECT l.l_orderkey,
           SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
           MAX(l.l_shipdate) AS last_ship_date,
           COUNT(*) AS line_count
    FROM lineitem l
    GROUP BY l.l_orderkey
),
CustomerRanked AS (
    SELECT c.c_custkey, c.c_name, c.c_acctbal,
           DENSE_RANK() OVER (ORDER BY c.c_acctbal DESC) AS cust_rank
    FROM customer c
    WHERE c.c_acctbal IS NOT NULL
),
NationRegion AS (
    SELECT n.n_nationkey, n.n_name, r.r_name
    FROM nation n
    JOIN region r ON n.n_regionkey = r.r_regionkey
)
SELECT ps.ps_partkey, p.p_name, p.p_brand, 
       COALESCE(ss.total_supplycost, 0) AS total_supplier_cost,
       l.total_revenue AS order_revenue,
       cr.c_name AS customer_name,
       nr.r_name AS region_name,
       oh.level AS order_level
FROM part p
LEFT JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
LEFT JOIN SupplierStats ss ON ps.ps_suppkey = ss.s_suppkey
LEFT JOIN LineItemStats l ON l.l_orderkey = (
    SELECT o.o_orderkey 
    FROM orders o 
    WHERE o.o_orderstatus = 'O' 
    ORDER BY o.o_orderdate DESC 
    LIMIT 1)
LEFT JOIN CustomerRanked cr ON cr.c_custkey = (
    SELECT o.o_custkey 
    FROM orders o 
    WHERE o.o_orderkey = l.l_orderkey)
LEFT JOIN NationRegion nr ON cr.c_nationkey = nr.n_nationkey
LEFT JOIN OrderHierarchy oh ON oh.o_orderkey = l.l_orderkey
WHERE p.p_retailprice > (SELECT AVG(p2.p_retailprice) FROM part p2)
ORDER BY ps.ps_availqty DESC, l.total_revenue DESC
LIMIT 100;
