
WITH SupplierStats AS (
    SELECT 
        ps.s_suppkey,
        SUM(ps.ps_availqty) AS total_avail_qty,
        AVG(ps.ps_supplycost) AS avg_supply_cost
    FROM 
        partsupp ps
    JOIN 
        supplier s ON ps.ps_suppkey = s.s_suppkey
    GROUP BY 
        ps.s_suppkey
),
OrderDetails AS (
    SELECT 
        o.o_orderkey,
        o.o_orderdate,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_price,
        COUNT(l.l_orderkey) AS number_of_items,
        ROW_NUMBER() OVER (PARTITION BY o.o_orderkey ORDER BY o.o_orderdate DESC) AS rn
    FROM 
        orders o
    JOIN 
        lineitem l ON o.o_orderkey = l.l_orderkey
    GROUP BY 
        o.o_orderkey, o.o_orderdate
    HAVING 
        SUM(l.l_extendedprice * (1 - l.l_discount)) > 1000
),
NationStats AS (
    SELECT 
        n.n_nationkey,
        n.n_name,
        COUNT(DISTINCT s.s_suppkey) AS supplier_count
    FROM 
        nation n
    LEFT JOIN 
        supplier s ON n.n_nationkey = s.s_nationkey
    GROUP BY 
        n.n_nationkey, n.n_name
)
SELECT 
    r.r_name,
    COALESCE(ns.supplier_count, 0) AS total_suppliers,
    COALESCE(MAX(ds.total_price), 0) AS highest_order_value,
    SUM(cs.c_acctbal) AS total_customer_balance
FROM 
    region r
LEFT JOIN 
    NationStats ns ON r.r_regionkey = ns.n_nationkey
LEFT JOIN 
    customer cs ON cs.c_nationkey = ns.n_nationkey
LEFT JOIN 
    OrderDetails ds ON ds.o_orderkey IN (
        SELECT o_orderkey
        FROM orders 
        WHERE o_orderdate BETWEEN '1997-01-01' AND '1997-12-31'
    )
GROUP BY 
    r.r_regionkey, r.r_name
HAVING 
    COALESCE(ns.supplier_count, 0) > 5
ORDER BY 
    total_suppliers DESC, highest_order_value DESC;
