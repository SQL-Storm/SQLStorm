
WITH RECURSIVE OrderHierarchy AS (
    SELECT o.o_orderkey, o.o_orderdate, o.o_totalprice,
           ROW_NUMBER() OVER (PARTITION BY o.o_orderkey ORDER BY o.o_orderdate) AS rn,
           0 AS depth
    FROM orders o
    WHERE o.o_orderstatus = 'O'
    UNION ALL
    SELECT oh.o_orderkey, oh.o_orderdate, oh.o_totalprice,
           ROW_NUMBER() OVER (PARTITION BY oh.o_orderkey ORDER BY oh.o_orderdate) AS rn,
           oh.depth + 1
    FROM orders oh
    JOIN OrderHierarchy o ON oh.o_custkey = (SELECT c.c_custkey
                                              FROM customer c
                                              WHERE c.c_custkey = o.o_orderkey)
    WHERE oh.o_orderdate > o.o_orderdate
)
SELECT r.r_name AS region, n.n_name AS nation, c.c_name AS customer_name,
       SUM(l.l_extendedprice * (1 - l.l_discount)) AS revenue,
       COUNT(DISTINCT o.o_orderkey) AS order_count,
       MAX(o.o_orderdate) AS last_order_date,
       CASE
           WHEN SUM(l.l_discount) IS NULL THEN 'No discount applied'
           ELSE 'Discounts applied'
       END AS discount_info,
       CONCAT('Total Revenue: ', FORMAT(SUM(l.l_extendedprice * (1 - l.l_discount)), 2)) AS revenue_summary
FROM region r
JOIN nation n ON n.n_regionkey = r.r_regionkey
JOIN customer c ON c.c_nationkey = n.n_nationkey
JOIN orders o ON o.o_custkey = c.c_custkey
JOIN lineitem l ON l.l_orderkey = o.o_orderkey
LEFT JOIN partsupp ps ON ps.ps_partkey = l.l_partkey AND ps.ps_suppkey = l.l_suppkey
WHERE o.o_orderdate BETWEEN '1997-01-01' AND '1997-12-31'
  AND (l.l_returnflag IS NULL OR l.l_returnflag = 'N')
GROUP BY r.r_name, n.n_name, c.c_name
HAVING SUM(l.l_discount) > 0 
    OR MAX(o.o_orderdate) IS NOT NULL
ORDER BY revenue DESC
LIMIT 10;
