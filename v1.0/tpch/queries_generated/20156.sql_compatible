
WITH RankedParts AS (
    SELECT 
        p.p_partkey,
        p.p_name,
        p.p_retailprice,
        ROW_NUMBER() OVER (PARTITION BY p.p_brand ORDER BY p.p_retailprice DESC) AS rnk
    FROM 
        part p
),
SupplierStats AS (
    SELECT 
        s.s_nationkey,
        COUNT(DISTINCT s.s_suppkey) AS total_suppliers,
        AVG(s.s_acctbal) AS avg_acctbal,
        SUM(CASE WHEN s.s_acctbal IS NULL THEN 1 ELSE 0 END) AS null_acctbal_count
    FROM 
        supplier s
    GROUP BY 
        s.s_nationkey
),
CustomerOrders AS (
    SELECT 
        c.c_custkey,
        SUM(o.o_totalprice) AS total_spent,
        COUNT(o.o_orderkey) AS order_count
    FROM 
        customer c
    LEFT JOIN 
        orders o ON c.c_custkey = o.o_custkey
    WHERE 
        o.o_orderstatus IS NOT NULL
    GROUP BY 
        c.c_custkey
),
OrderLineDetails AS (
    SELECT 
        o.o_orderkey,
        SUM(li.l_extendedprice * (1 - li.l_discount)) AS net_revenue,
        COUNT(DISTINCT li.l_partkey) AS distinct_parts,
        SUM(li.l_quantity) AS total_quantity
    FROM 
        orders o
    JOIN 
        lineitem li ON o.o_orderkey = li.l_orderkey
    WHERE 
        li.l_discount > 0.1
    GROUP BY 
        o.o_orderkey
)
SELECT 
    np.n_name,
    COALESCE(ps.total_suppliers, 0) AS supplier_count,
    COALESCE(cu.total_spent, 0) AS customer_spending,
    (SELECT 
         COUNT(*)
     FROM 
         RankedParts rp 
     WHERE 
         rp.rnk <= 3) AS top_parts_count,
    MAX(ols.net_revenue) AS max_order_revenue,
    MIN(ols.total_quantity) AS min_order_quantity
FROM 
    nation np
LEFT JOIN 
    SupplierStats ps ON np.n_nationkey = ps.s_nationkey
LEFT JOIN 
    CustomerOrders cu ON np.n_nationkey = (SELECT c.c_nationkey FROM customer c WHERE c.c_custkey = cu.c_custkey)
LEFT JOIN 
    OrderLineDetails ols ON ols.o_orderkey IN (
        SELECT o.o_orderkey
        FROM orders o
        WHERE o.o_orderstatus IN ('F', 'O') 
        AND EXTRACT(YEAR FROM o.o_orderdate) = 1997
    )
GROUP BY 
    np.n_name
HAVING 
    MAX(ols.net_revenue) IS NOT NULL OR COUNT(DISTINCT ps.total_suppliers) > 2
ORDER BY 
    np.n_name ASC;
