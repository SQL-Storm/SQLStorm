WITH RECURSIVE supplier_hierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_address, s.s_nationkey, s.s_phone, s.s_acctbal,
           1 AS level, CAST(s.s_name AS VARCHAR(255)) AS path
    FROM supplier s
    WHERE s.s_acctbal > (SELECT AVG(s2.s_acctbal) FROM supplier s2)
    
    UNION ALL
    
    SELECT s.s_suppkey, s.s_name, s.s_address, s.s_nationkey, s.s_phone, s.s_acctbal,
           sh.level + 1,
           CAST(sh.path || ' > ' || s.s_name AS VARCHAR(255))
    FROM supplier s
    JOIN supplier_hierarchy sh ON s.s_nationkey = sh.s_nationkey 
    WHERE sh.level < 3
),
lineitem_summary AS (
    SELECT l.l_orderkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
           AVG(l.l_quantity) AS avg_quantity
    FROM lineitem l
    WHERE l.l_shipdate >= '1997-01-01'
    GROUP BY l.l_orderkey
),
nation_supplier_counts AS (
    SELECT n.n_nationkey, n.n_name, COUNT(DISTINCT s.s_suppkey) AS supplier_count
    FROM nation n
    LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
    GROUP BY n.n_nationkey, n.n_name
)
SELECT r.r_name, nsc.supplier_count, lh.total_revenue,
       ROW_NUMBER() OVER (PARTITION BY r.r_name ORDER BY total_revenue DESC) AS rank_revenue,
       COALESCE(sh.path, 'No Hierarchy') AS supplier_hierarchy_path
FROM region r
LEFT JOIN nation_supplier_counts nsc ON r.r_regionkey = nsc.n_nationkey
LEFT JOIN lineitem_summary lh ON nsc.n_nationkey = lh.l_orderkey
LEFT JOIN supplier_hierarchy sh ON nsc.n_nationkey = sh.s_nationkey
WHERE nsc.supplier_count > 0
  AND (lh.total_revenue IS NULL OR lh.total_revenue > 1000)
ORDER BY r.r_name, rank_revenue;