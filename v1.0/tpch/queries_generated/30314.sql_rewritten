WITH RECURSIVE SupplierHierarchy AS (
    SELECT 
        s.s_suppkey, 
        s.s_name, 
        s.s_acctbal, 
        s.s_nationkey, 
        0 AS depth
    FROM 
        supplier s
    WHERE 
        s.s_acctbal > (SELECT AVG(s_acctbal) FROM supplier)
    
    UNION ALL
    
    SELECT 
        s.s_suppkey, 
        s.s_name, 
        s.s_acctbal, 
        s.s_nationkey, 
        sh.depth + 1
    FROM 
        supplier s
    JOIN 
        SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE 
        sh.depth < 3
),
RankedOrders AS (
    SELECT 
        o.o_orderkey, 
        o.o_orderdate,
        o.o_totalprice,
        ROW_NUMBER() OVER (PARTITION BY o.o_orderstatus ORDER BY o.o_orderdate DESC) AS order_rank
    FROM 
        orders o
    WHERE 
        o.o_orderstatus IN ('O', 'F')
),
PartSupplierStats AS (
    SELECT 
        p.p_partkey, 
        SUM(ps.ps_availqty) AS total_availability,
        AVG(ps.ps_supplycost) AS avg_supply_cost
    FROM 
        part p 
    JOIN 
        partsupp ps ON p.p_partkey = ps.ps_partkey
    GROUP BY 
        p.p_partkey
),
TopParts AS (
    SELECT 
        p.p_partkey, 
        p.p_name, 
        ps.total_availability, 
        ps.avg_supply_cost
    FROM 
        part p
    JOIN 
        PartSupplierStats ps ON p.p_partkey = ps.p_partkey
    WHERE 
        ps.total_availability > 1000 
        AND ps.avg_supply_cost < (
            SELECT AVG(avg_supply_cost) FROM PartSupplierStats
        )
)
SELECT 
    r.r_name AS region_name,
    COUNT(DISTINCT sh.s_suppkey) AS supplier_count,
    SUM(o.o_totalprice) AS total_order_value,
    MAX(o.o_orderdate) AS latest_order_date,
    STRING_AGG(DISTINCT tp.p_name) AS popular_parts
FROM 
    region r
LEFT JOIN 
    nation n ON r.r_regionkey = n.n_regionkey
LEFT JOIN 
    supplier sh ON n.n_nationkey = sh.s_nationkey
LEFT JOIN 
    RankedOrders o ON sh.s_suppkey = o.o_custkey
LEFT JOIN 
    TopParts tp ON tp.avg_supply_cost < sh.s_acctbal
WHERE 
    (r.r_name IS NOT NULL OR sh.s_name IS NOT NULL)
    AND (o.o_orderdate BETWEEN '1996-01-01' AND cast('1998-10-01' as date)())
GROUP BY 
    r.r_name
HAVING 
    COUNT(DISTINCT sh.s_suppkey) > 5
ORDER BY 
    total_order_value DESC;