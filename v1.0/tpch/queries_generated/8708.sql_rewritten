WITH SupplierParts AS (
    SELECT 
        s.s_name AS supplier_name,
        p.p_name AS part_name,
        ps.ps_supplycost AS supply_cost,
        ps.ps_availqty AS available_quantity,
        p.p_retailprice AS retail_price,
        (ps.ps_supplycost * ps.ps_availqty) AS total_supply_value
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    JOIN 
        part p ON ps.ps_partkey = p.p_partkey
    WHERE 
        s.s_acctbal > (SELECT AVG(s_acctbal) FROM supplier)
), HighValueSupplies AS (
    SELECT 
        supplier_name,
        part_name,
        supply_cost,
        available_quantity,
        retail_price,
        total_supply_value
    FROM 
        SupplierParts
    WHERE 
        total_supply_value > (SELECT AVG(total_supply_value) FROM SupplierParts)
), OrderLineItems AS (
    SELECT 
        o.o_orderkey,
        l.l_partkey,
        l.l_quantity,
        l.l_extendedprice,
        l.l_discount,
        l.l_tax,
        l.l_returnflag,
        l.l_linestatus
    FROM 
        orders o
    JOIN 
        lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE 
        o.o_orderdate >= DATE '1997-01-01' AND o.o_orderdate < DATE '1997-10-01'
)
SELECT 
    hvs.supplier_name,
    hvs.part_name,
    SUM(oli.l_quantity) AS total_order_quantity,
    SUM(oli.l_extendedprice * (1 - oli.l_discount)) AS total_revenue,
    AVG(oli.l_tax) AS average_tax,
    COUNT(DISTINCT oli.o_orderkey) AS number_of_orders
FROM 
    HighValueSupplies hvs
JOIN 
    OrderLineItems oli ON hvs.part_name = oli.l_partkey
GROUP BY 
    hvs.supplier_name, hvs.part_name
ORDER BY 
    total_revenue DESC
LIMIT 10;