
WITH RECURSIVE SupplierHierarchy AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        s.s_nationkey,
        1 AS level
    FROM 
        supplier s
    WHERE 
        s.s_acctbal > 1000 
    UNION ALL
    SELECT 
        sp.s_suppkey,
        sp.s_name,
        sp.s_nationkey,
        sh.level + 1
    FROM 
        supplier sp 
    JOIN 
        SupplierHierarchy sh ON sp.s_nationkey = sh.s_nationkey 
    WHERE 
        sp.s_acctbal > sh.level * 500 
),
PartStatistics AS (
    SELECT
        p.p_partkey,
        COUNT(DISTINCT ps.ps_suppkey) AS supply_count,
        SUM(ps.ps_supplycost) AS total_supply_cost,
        AVG(ps.ps_availqty) AS average_avail_qty
    FROM 
        part p
    LEFT JOIN 
        partsupp ps ON p.p_partkey = ps.ps_partkey
    GROUP BY 
        p.p_partkey
),
NationalInfo AS (
    SELECT 
        n.n_name,
        SUM(c.c_acctbal) AS total_cust_bal,
        COUNT(DISTINCT c.c_custkey) AS customer_count
    FROM 
        nation n
    JOIN 
        customer c ON n.n_nationkey = c.c_nationkey
    GROUP BY 
        n.n_name
    HAVING 
        SUM(c.c_acctbal) > 10000 
)
SELECT 
    r.r_name,
    COALESCE(sh.level, 0) AS supplier_level,
    pi.p_name,
    pi.supply_count,
    pi.total_supply_cost,
    pi.average_avail_qty,
    ni.total_cust_bal,
    ni.customer_count
FROM 
    region r
LEFT JOIN 
    NationalInfo ni ON ni.total_cust_bal IS NOT NULL
FULL OUTER JOIN 
    SupplierHierarchy sh ON r.r_regionkey = sh.s_nationkey 
LEFT JOIN 
    PartStatistics pi ON pi.p_partkey IN (
        SELECT ps.ps_partkey
        FROM partsupp ps
        WHERE ps.ps_supplycost BETWEEN 50 AND 150
    )
WHERE 
    ni.customer_count IS NOT NULL OR COALESCE(sh.level, 0) > 0
ORDER BY 
    r.r_name, supplier_level DESC, ni.total_cust_bal DESC
FETCH FIRST 50 ROWS ONLY;