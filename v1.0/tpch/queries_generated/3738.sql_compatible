
WITH RankedSuppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        COUNT(ps.ps_partkey) AS total_parts,
        SUM(ps.ps_supplycost) AS total_supplycost,
        ROW_NUMBER() OVER (PARTITION BY s.s_nationkey ORDER BY SUM(ps.ps_supplycost) DESC) AS rn
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey, s.s_name, s.s_nationkey
), HighValueSuppliers AS (
    SELECT 
        r.r_name,
        n.n_name,
        ss.s_suppkey,
        ss.s_name,
        ss.total_parts,
        ss.total_supplycost
    FROM 
        RankedSuppliers ss
    JOIN 
        nation n ON ss.s_nationkey = n.n_nationkey
    JOIN 
        region r ON n.n_regionkey = r.r_regionkey
    WHERE 
        ss.total_supplycost > (SELECT AVG(total_supplycost) FROM RankedSuppliers)
)
SELECT
    hvs.r_name AS region_name,
    hvs.n_name AS nation_name,
    hvs.s_suppkey,
    hvs.s_name,
    hvs.total_parts,
    hvs.total_supplycost,
    CASE 
        WHEN hvs.total_parts > 5 THEN 'High Supplier' 
        ELSE 'Low Supplier' 
    END AS supplier_category
FROM 
    HighValueSuppliers hvs
LEFT JOIN 
    (SELECT 
        o.o_orderkey, 
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS revenue 
     FROM 
        orders o 
     JOIN 
        lineitem l ON o.o_orderkey = l.l_orderkey 
     WHERE 
        l.l_shipdate >= DATE '1997-01-01' 
        AND l.l_shipdate < DATE '1997-12-31'
     GROUP BY 
        o.o_orderkey) o_revenue ON hvs.total_supplycost = o_revenue.revenue
ORDER BY 
    hvs.total_supplycost DESC;
