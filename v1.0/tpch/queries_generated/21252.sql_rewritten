WITH RECURSIVE SuppliersHierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, 0 AS level
    FROM supplier s
    WHERE s.s_acctbal > (SELECT AVG(s_acctbal) FROM supplier)
    
    UNION ALL
    
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, sh.level + 1
    FROM supplier s
    JOIN SuppliersHierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE sh.level < 3   
),
AggregateParts AS (
    SELECT ps.ps_partkey, SUM(ps.ps_supplycost) AS total_supply_cost
    FROM partsupp ps
    JOIN part p ON ps.ps_partkey = p.p_partkey
    WHERE p.p_size % 2 = 0 
    GROUP BY ps.ps_partkey
),
CustomerOrders AS (
    SELECT c.c_custkey, COUNT(DISTINCT o.o_orderkey) AS orders_count
    FROM customer c
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    GROUP BY c.c_custkey
    HAVING COUNT(DISTINCT o.o_orderkey) > 5
)
SELECT 
    r.r_name AS region_name,
    COUNT(DISTINCT n.n_nationkey) AS nation_count,
    SUM(ap.total_supply_cost) AS total_supply_cost_for_region,
    COALESCE(CAST(COALESCE(ch.orders_count, 0) AS VARCHAR), 'No Orders') AS order_summary
FROM region r
JOIN nation n ON r.r_regionkey = n.n_regionkey
LEFT JOIN SuppliersHierarchy sh ON n.n_nationkey = sh.s_nationkey
LEFT JOIN AggregateParts ap ON n.n_nationkey = (SELECT s_nationkey FROM supplier WHERE s_suppkey = ap.ps_partkey LIMIT 1)
LEFT JOIN CustomerOrders ch ON n.n_nationkey = ch.c_custkey
WHERE r.r_name LIKE '%East%' OR r.r_comment IS NULL
GROUP BY r.r_name
ORDER BY region_name DESC, total_supply_cost_for_region ASC;