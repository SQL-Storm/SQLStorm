WITH RECURSIVE supplier_hierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, 0 AS level
    FROM supplier s
    WHERE s.s_acctbal > (SELECT AVG(s_acctbal) FROM supplier)
    
    UNION ALL
    
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, sh.level + 1
    FROM supplier_hierarchy sh
    JOIN partsupp ps ON sh.s_suppkey = ps.ps_suppkey
    JOIN supplier s ON ps.ps_partkey = s.s_suppkey
    WHERE sh.level < 5
),
order_stats AS (
    SELECT o.o_orderkey, 
           SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
           COUNT(DISTINCT o.o_custkey) AS customer_count
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE o.o_orderstatus = 'O'
    GROUP BY o.o_orderkey
),
detailed_parts AS (
    SELECT p.p_partkey, 
           p.p_name, 
           p.p_retailprice, 
           COALESCE(SUM(ps.ps_availqty), 0) AS total_available_qty,
           CASE 
               WHEN p.p_retailprice > 100 THEN 'Expensive'
               WHEN p.p_retailprice BETWEEN 50 AND 100 THEN 'Moderate'
               ELSE 'Cheap' 
           END AS price_category
    FROM part p
    LEFT JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
    GROUP BY p.p_partkey, p.p_name, p.p_retailprice
),
region_stats AS (
    SELECT n.n_regionkey,
           r.r_name,
           COUNT(DISTINCT n.n_nationkey) AS nation_count,
           SUM(COALESCE(s.s_acctbal, 0)) AS total_supplier_acctbal
    FROM nation n
    JOIN region r ON r.r_regionkey = n.n_regionkey
    LEFT JOIN supplier s ON s.s_nationkey = n.n_nationkey
    GROUP BY n.n_regionkey, r.r_name
)
SELECT r.r_name, 
       COUNT(DISTINCT d.p_partkey) AS part_count, 
       SUM(o.total_revenue) AS total_revenue,
       AVG(d.total_available_qty) AS avg_available_qty,
       SUM(s.s_acctbal) AS total_supplier_balance
FROM detailed_parts d
LEFT JOIN order_stats o ON d.p_partkey IN (SELECT DISTINCT l.l_partkey FROM lineitem l WHERE l.l_shipdate >= '1997-01-01')
JOIN regions_stats r ON d.price_category = 'Expensive'
LEFT JOIN supplier s ON d.p_partkey = s.s_suppkey
GROUP BY r.r_name
ORDER BY total_revenue DESC
LIMIT 10;