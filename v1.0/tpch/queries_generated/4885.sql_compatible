
WITH RankedSuppliers AS (
    SELECT 
        s.s_suppkey, 
        s.s_name, 
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_cost,
        ROW_NUMBER() OVER (PARTITION BY s.s_nationkey ORDER BY SUM(ps.ps_supplycost * ps.ps_availqty) DESC) AS rnk
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey, s.s_name, s.s_nationkey
),
TopSuppliers AS (
    SELECT 
        r.r_name AS region_name, 
        ns.n_name AS nation_name, 
        rs.s_name AS supplier_name, 
        rs.total_cost
    FROM 
        RankedSuppliers rs
    JOIN 
        nation ns ON rs.s_nationkey = ns.n_nationkey
    JOIN 
        region r ON ns.n_regionkey = r.r_regionkey
    WHERE 
        rs.rnk <= 3
),
CustomerOrders AS (
    SELECT 
        c.c_custkey, 
        c.c_name, 
        o.o_orderkey, 
        o.o_orderdate, 
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_order_value
    FROM 
        customer c
    JOIN 
        orders o ON c.c_custkey = o.o_custkey
    JOIN 
        lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE 
        o.o_orderdate BETWEEN DATE '1997-01-01' AND DATE '1997-12-31'
    GROUP BY 
        c.c_custkey, c.c_name, o.o_orderkey, o.o_orderdate
),
CustomerRankedOrders AS (
    SELECT 
        co.c_custkey, 
        co.c_name, 
        co.o_orderkey,
        co.o_orderdate,
        co.total_order_value,
        RANK() OVER (PARTITION BY co.c_custkey ORDER BY co.total_order_value DESC) AS order_rank
    FROM 
        CustomerOrders co
)
SELECT 
    cr.c_name AS customer_name,
    COALESCE(ts.region_name, 'Unknown') AS region_name,
    COUNT(cr.o_orderkey) AS total_orders,
    AVG(cr.total_order_value) AS avg_order_value,
    SUM(cr.total_order_value) AS total_spent
FROM 
    CustomerRankedOrders cr
LEFT JOIN 
    TopSuppliers ts ON cr.o_orderkey = (SELECT o.o_orderkey FROM orders o WHERE o.o_custkey = cr.c_custkey ORDER BY o.o_orderdate DESC LIMIT 1)
WHERE 
    cr.order_rank = 1
GROUP BY 
    cr.c_name, ts.region_name
HAVING 
    SUM(cr.total_order_value) > (SELECT AVG(total_order_value) FROM CustomerOrders)
ORDER BY 
    total_spent DESC;
