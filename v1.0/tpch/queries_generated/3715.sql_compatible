
WITH ranked_orders AS (
    SELECT 
        o.o_orderkey, 
        o.o_totalprice, 
        o.o_orderdate, 
        DENSE_RANK() OVER (PARTITION BY o.o_orderstatus ORDER BY o.o_totalprice DESC) AS order_rank
    FROM 
        orders o
    WHERE 
        o.o_orderdate >= DATE '1996-01-01' 
        AND o.o_orderdate < DATE '1997-01-01'
),
supplier_summary AS (
    SELECT 
        s.s_suppkey, 
        s.s_name, 
        COUNT(DISTINCT ps.ps_partkey) AS total_parts, 
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_value
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey, 
        s.s_name
),
customer_orders AS (
    SELECT 
        c.c_custkey, 
        c.c_name, 
        SUM(o.o_totalprice) AS total_order_value
    FROM 
        customer c
    LEFT JOIN 
        orders o ON c.c_custkey = o.o_custkey
    GROUP BY 
        c.c_custkey, 
        c.c_name
)
SELECT 
    c.c_name, 
    c.total_order_value, 
    COALESCE(ss.total_parts, 0) AS total_parts_supplied, 
    COALESCE(ss.total_supply_value, 0) AS total_supply_value, 
    ro.order_rank
FROM 
    customer_orders c
LEFT JOIN 
    supplier_summary ss ON ss.total_parts > 0
LEFT JOIN 
    ranked_orders ro ON ro.o_orderkey IN (SELECT o.o_orderkey 
                                            FROM orders o 
                                            WHERE o.o_totalprice = c.total_order_value)
WHERE 
    c.total_order_value > 1000
ORDER BY 
    c.total_order_value DESC, 
    c.c_name ASC;
