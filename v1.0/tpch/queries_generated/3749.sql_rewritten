WITH RankedSuppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        s.s_acctbal,
        RANK() OVER (PARTITION BY p.p_partkey ORDER BY s.s_acctbal DESC) AS rank
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    JOIN 
        part p ON ps.ps_partkey = p.p_partkey
),
TopSuppliers AS (
    SELECT 
        r.s_suppkey,
        r.s_name,
        r.s_acctbal,
        ps.ps_partkey
    FROM 
        RankedSuppliers r
    JOIN 
        partsupp ps ON r.s_suppkey = ps.ps_suppkey
    WHERE 
        r.rank <= 3
),
CustomerOrders AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        o.o_orderkey,
        o.o_totalprice,
        o.o_orderdate,
        COUNT(l.l_orderkey) AS lineitem_count
    FROM 
        customer c
    JOIN 
        orders o ON c.c_custkey = o.o_custkey
    LEFT JOIN 
        lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE 
        o.o_orderdate >= '1997-01-01' AND 
        o.o_orderstatus IN ('O', 'P')
    GROUP BY 
        c.c_custkey, c.c_name, o.o_orderkey, o.o_totalprice, o.o_orderdate
)
SELECT 
    cu.c_name,
    cu.o_orderkey,
    cu.lineitem_count,
    SUM(ps.ps_supplycost) AS total_supply_cost,
    AVG(ps.ps_availqty) AS avg_avail_qty,
    MAX(CASE WHEN ts.s_acctbal IS NOT NULL THEN ts.s_acctbal ELSE 0 END) AS max_supplier_balance
FROM 
    CustomerOrders cu
LEFT JOIN 
    TopSuppliers ts ON ts.ps_partkey IN (SELECT ps_partkey FROM partsupp WHERE ps_supplycost < 100.00)
JOIN 
    partsupp ps ON ps.ps_partkey IN (SELECT p.p_partkey FROM part p WHERE p.p_size > 10)
GROUP BY 
    cu.c_name, cu.o_orderkey, cu.lineitem_count
HAVING 
    COUNT(ts.s_suppkey) > 0
ORDER BY 
    cu.o_orderkey DESC, total_supply_cost DESC;