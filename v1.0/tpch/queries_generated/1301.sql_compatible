
WITH RankedOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_orderdate,
        o.o_totalprice,
        o.o_orderpriority,
        RANK() OVER (PARTITION BY o.o_orderpriority ORDER BY o.o_totalprice DESC) AS order_rank
    FROM 
        orders o
    WHERE 
        o.o_orderdate >= DATE '1997-01-01' AND o.o_orderdate < DATE '1998-01-01'
),
SupplierStats AS (
    SELECT 
        s.s_suppkey, 
        s.s_name, 
        COUNT(DISTINCT ps.ps_partkey) AS part_count,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_cost
    FROM 
        supplier s
    LEFT JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey, s.s_name
),
ProductSales AS (
    SELECT 
        p.p_partkey,
        p.p_name,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_sales,
        COUNT(DISTINCT l.l_orderkey) AS order_count
    FROM 
        part p
    JOIN 
        lineitem l ON p.p_partkey = l.l_partkey
    GROUP BY 
        p.p_partkey, p.p_name
)
SELECT 
    r.r_name,
    ps.p_name,
    ps.total_sales,
    ss.part_count,
    ss.total_supply_cost,
    oo.o_orderdate,
    oo.o_orderpriority
FROM 
    region r
LEFT JOIN 
    nation n ON r.r_regionkey = n.n_regionkey
LEFT JOIN 
    supplier s ON n.n_nationkey = s.s_nationkey
LEFT JOIN 
    SupplierStats ss ON s.s_suppkey = ss.s_suppkey
LEFT JOIN 
    ProductSales ps ON ps.p_partkey IN (
        SELECT 
            ps_partkey 
        FROM 
            partsupp 
        WHERE 
            ps_suppkey = s.s_suppkey
    )
LEFT JOIN 
    RankedOrders oo ON oo.o_orderkey IN (
        SELECT 
            o_orderkey 
        FROM 
            orders 
        WHERE 
            o_custkey = (
                SELECT 
                    c_custkey 
                FROM 
                    customer 
                WHERE 
                    c_nationkey = n.n_nationkey AND 
                    c_acctbal IS NOT NULL
                ORDER BY 
                    c_acctbal DESC LIMIT 1
            )
    )
WHERE 
    ps.total_sales IS NOT NULL
    AND ss.total_supply_cost > (
        SELECT 
            AVG(ps_supplycost) 
        FROM 
            partsupp 
        WHERE 
            ps_availqty IS NOT NULL
    )
ORDER BY 
    r.r_name, ps.total_sales DESC;
