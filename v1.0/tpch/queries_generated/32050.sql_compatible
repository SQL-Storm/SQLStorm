
WITH RECURSIVE o_summary AS (
    SELECT 
        o.o_orderkey,
        o.o_custkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
        COUNT(l.l_orderkey) AS total_lineitems
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    GROUP BY o.o_orderkey, o.o_custkey
), 
cust_ranking AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        SUM(os.total_revenue) AS total_spent,
        RANK() OVER (ORDER BY SUM(os.total_revenue) DESC) AS revenue_rank
    FROM customer c
    LEFT JOIN o_summary os ON c.c_custkey = os.o_custkey
    GROUP BY c.c_custkey, c.c_name
),
supplier_summary AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        COUNT(ps.ps_partkey) AS parts_supplied,
        AVG(ps.ps_supplycost) AS avg_supply_cost
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY s.s_suppkey, s.s_name
),
top_nation AS (
    SELECT 
        n.n_nationkey,
        n.n_name,
        SUM(s.s_acctbal) AS total_balance
    FROM nation n
    JOIN supplier s ON n.n_nationkey = s.s_nationkey
    GROUP BY n.n_nationkey, n.n_name
    ORDER BY total_balance DESC
    LIMIT 5
)
SELECT 
    cr.c_name AS customer_name,
    cr.total_spent AS total_spent,
    ss.s_name AS supplier_name,
    ss.parts_supplied,
    ss.avg_supply_cost,
    tn.n_name AS top_nation_name,
    tn.total_balance
FROM cust_ranking cr
JOIN supplier_summary ss ON cr.revenue_rank <= 10 AND ss.parts_supplied > 5
LEFT JOIN top_nation tn ON tn.n_nationkey = (
    SELECT n.n_nationkey 
    FROM customer c
    JOIN supplier s ON c.c_nationkey = s.s_nationkey 
    WHERE c.c_custkey = cr.c_custkey
    LIMIT 1
)
WHERE cr.total_spent IS NOT NULL
ORDER BY cr.total_spent DESC, ss.avg_supply_cost;
