WITH SupplierSummary AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_value,
        COUNT(DISTINCT ps.ps_partkey) AS part_count
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey, s.s_name
),
CustomerOrderSummary AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        COUNT(o.o_orderkey) AS order_count,
        SUM(o.o_totalprice) AS total_spent
    FROM 
        customer c
    LEFT JOIN 
        orders o ON c.c_custkey = o.o_custkey
    GROUP BY 
        c.c_custkey, c.c_name
),
FilteredLineItems AS (
    SELECT 
        l.l_orderkey,
        l.l_partkey,
        l.l_quantity,
        l.l_extendedprice,
        l.l_discount,
        ROW_NUMBER() OVER (PARTITION BY l.l_orderkey ORDER BY l.l_linenumber) AS rn
    FROM 
        lineitem l
    WHERE 
        l.l_shipdate >= '1997-01-01' AND 
        l.l_shipdate < '1997-12-31' AND 
        l.l_returnflag = 'N'
)
SELECT 
    n.n_name,
    COALESCE(ss.s_name, 'No Supplier') AS supplier_name,
    cs.c_name AS customer_name,
    cs.total_spent,
    SUM(fli.l_extendedprice * (1 - fli.l_discount)) AS revenue,
    COUNT(DISTINCT fli.l_orderkey) AS orders_served
FROM 
    nation n
LEFT JOIN 
    supplier s ON n.n_nationkey = s.s_nationkey
LEFT JOIN 
    SupplierSummary ss ON s.s_suppkey = ss.s_suppkey
LEFT JOIN 
    CustomerOrderSummary cs ON cs.order_count > 0
LEFT JOIN 
    FilteredLineItems fli ON fli.l_partkey IN (SELECT p.p_partkey FROM part p WHERE p.p_size >= 10)
GROUP BY 
    n.n_name, ss.s_name, cs.c_name, cs.total_spent
HAVING 
    SUM(fli.l_extendedprice * (1 - fli.l_discount)) IS NOT NULL
ORDER BY 
    revenue DESC;