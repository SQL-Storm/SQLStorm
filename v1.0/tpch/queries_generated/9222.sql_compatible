
WITH RankedOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_orderdate,
        o.o_totalprice,
        o.o_orderstatus,
        c.c_name,
        c.c_nationkey,
        ROW_NUMBER() OVER (PARTITION BY o.o_custkey ORDER BY o.o_orderdate DESC) AS order_rank
    FROM 
        orders o
    JOIN 
        customer c ON o.o_custkey = c.c_custkey
    WHERE 
        o.o_orderdate >= DATE '1997-01-01'
),
TopOrders AS (
    SELECT 
        ro.o_orderkey,
        ro.o_orderdate,
        ro.o_totalprice,
        ro.o_orderstatus,
        ro.c_name,
        n.n_name AS nation_name
    FROM 
        RankedOrders ro
    JOIN 
        nation n ON ro.c_nationkey = n.n_nationkey
    WHERE 
        ro.order_rank = 1
),
HighValueItems AS (
    SELECT 
        l.l_orderkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_value
    FROM 
        lineitem l
    JOIN 
        TopOrders to ON l.l_orderkey = to.o_orderkey
    GROUP BY 
        l.l_orderkey
)
SELECT 
    to.o_orderkey,
    to.o_orderdate,
    to.o_totalprice,
    to.o_orderstatus,
    to.c_name,
    to.nation_name,
    COALESCE(hvi.total_value, 0) AS total_value,
    CASE 
        WHEN COALESCE(hvi.total_value, 0) = 0 THEN 'No Items'
        WHEN COALESCE(hvi.total_value, 0) > 10000 THEN 'High Value'
        ELSE 'Standard Value'
    END AS order_value_category
FROM 
    TopOrders to
LEFT JOIN 
    HighValueItems hvi ON to.o_orderkey = hvi.l_orderkey
ORDER BY 
    to.o_orderdate DESC, 
    to.o_orderkey;
