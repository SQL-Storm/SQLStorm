WITH RECURSIVE SupplierDetails AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal, s.s_comment, 0 AS depth
    FROM supplier s
    UNION ALL
    SELECT ps.ps_partkey AS s_suppkey, CONCAT(sd.s_name, ' - ', p.p_name) AS s_name, s.s_nationkey, s.s_acctbal, CONCAT(sd.s_comment, ' | ', p.p_comment) AS s_comment, depth + 1
    FROM partsupp ps
    JOIN part p ON ps.ps_partkey = p.p_partkey
    JOIN SupplierDetails sd ON ps.ps_suppkey = sd.s_suppkey
    WHERE depth < 5
),
OrdersSummary AS (
    SELECT o.o_orderkey, o.o_custkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE o.o_orderdate BETWEEN '1997-01-01' AND '1997-12-31'
    GROUP BY o.o_orderkey, o.o_custkey
),
CustomerRevenue AS (
    SELECT c.c_custkey, c.c_name, SUM(os.total_revenue) AS total_spent
    FROM customer c
    JOIN OrdersSummary os ON c.c_custkey = os.o_custkey
    GROUP BY c.c_custkey, c.c_name
),
MaxRevenue AS (
    SELECT MAX(total_spent) AS max_rev
    FROM CustomerRevenue
)
SELECT cr.c_name, cr.total_spent, CASE 
         WHEN cr.total_spent = mr.max_rev THEN 'Top Customer'
         ELSE 'Regular Customer' 
       END AS customer_type
FROM CustomerRevenue cr, MaxRevenue mr
WHERE cr.total_spent >= 10000
ORDER BY cr.total_spent DESC;