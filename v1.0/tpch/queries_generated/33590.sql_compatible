
WITH RECURSIVE SupplyChain AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        s.s_nationkey,
        p.p_partkey,
        p.p_name,
        ps.ps_availqty,
        ps.ps_supplycost
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    JOIN 
        part p ON ps.ps_partkey = p.p_partkey
    WHERE 
        ps.ps_availqty > 0

    UNION ALL

    SELECT 
        s.s_suppkey,
        s.s_name,
        s.s_nationkey,
        p.p_partkey,
        p.p_name,
        ps.ps_availqty,
        ps.ps_supplycost
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    JOIN 
        part p ON ps.ps_partkey = p.p_partkey
    JOIN 
        SupplyChain sc ON sc.s_suppkey = s.s_suppkey
    WHERE 
        ps.ps_availqty > sc.ps_availqty
),

OrderDetails AS (
    SELECT 
        o.o_orderkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS revenue,
        COUNT(l.l_orderkey) AS item_count
    FROM 
        orders o
    JOIN 
        lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE 
        l.l_shipdate >= DATE '1997-01-01' AND l.l_shipdate < DATE '1997-10-01'
    GROUP BY 
        o.o_orderkey
),

NationRevenue AS (
    SELECT 
        n.n_name AS nation,
        SUM(od.revenue) AS total_revenue
    FROM 
        nation n
    LEFT JOIN 
        customer c ON n.n_nationkey = c.c_nationkey
    LEFT JOIN 
        orders o ON c.c_custkey = o.o_custkey
    LEFT JOIN 
        OrderDetails od ON o.o_orderkey = od.o_orderkey
    GROUP BY 
        n.n_name
)

SELECT 
    r.r_name AS region,
    nr.nation,
    COALESCE(nr.total_revenue, 0) AS total_revenue,
    COUNT(DISTINCT sc.s_suppkey) AS supplier_count,
    AVG(sc.ps_supplycost) AS avg_supply_cost
FROM 
    region r
LEFT JOIN 
    nation n ON r.r_regionkey = n.n_regionkey
LEFT JOIN 
    NationRevenue nr ON nr.nation = n.n_name
LEFT JOIN 
    SupplyChain sc ON n.n_nationkey = sc.s_nationkey
GROUP BY 
    r.r_name, nr.nation
HAVING 
    COALESCE(nr.total_revenue, 0) > 100000
ORDER BY 
    total_revenue DESC, r.r_name;
