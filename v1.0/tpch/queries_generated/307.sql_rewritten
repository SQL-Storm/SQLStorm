WITH RankedOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_orderdate,
        c.c_mktsegment,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
        DENSE_RANK() OVER (PARTITION BY c.c_mktsegment ORDER BY SUM(l.l_extendedprice * (1 - l.l_discount)) DESC) AS revenue_rank
    FROM 
        orders o
    JOIN 
        customer c ON o.o_custkey = c.c_custkey
    JOIN 
        lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE 
        o.o_orderdate BETWEEN '1997-01-01' AND '1997-12-31'
    GROUP BY 
        o.o_orderkey, o.o_orderdate, c.c_mktsegment
),
TopSegments AS (
    SELECT 
        mktsegment,
        COUNT(o_orderkey) AS order_count,
        AVG(total_revenue) AS avg_revenue
    FROM 
        (SELECT c.c_mktsegment, o.o_orderkey, total_revenue FROM RankedOrders
         WHERE revenue_rank <= 5) AS TopOrders
    GROUP BY 
        mktsegment
)
SELECT 
    r.r_name AS region_name,
    n.n_name AS nation_name,
    ts.mktsegment,
    ts.order_count,
    ts.avg_revenue,
    COALESCE(p.p_retailprice, 0) AS avg_part_price
FROM 
    region r
JOIN 
    nation n ON r.r_regionkey = n.n_regionkey
LEFT JOIN 
    TopSegments ts ON n.n_nationkey = ts.mktsegment
LEFT JOIN 
    partsupp ps ON ps.ps_partkey = (SELECT p.p_partkey 
                                      FROM part p 
                                      WHERE p.p_container LIKE '%BOX%' 
                                      ORDER BY p.p_retailprice DESC LIMIT 1)
WHERE 
    ts.order_count IS NOT NULL
ORDER BY 
    r.r_name, n.n_name, ts.mktsegment;