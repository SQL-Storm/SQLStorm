WITH RECURSIVE OrderHierarchy AS (
    SELECT o_orderkey, o_custkey, o_totalprice, o_orderdate, 1 AS level
    FROM orders
    WHERE o_orderdate >= '1997-01-01'
    
    UNION ALL
    
    SELECT o.o_orderkey, o.o_custkey, o.o_totalprice, o.o_orderdate, oh.level + 1
    FROM orders o
    INNER JOIN OrderHierarchy oh ON o.o_custkey = oh.o_custkey
    WHERE o.o_orderdate > oh.o_orderdate
),
SupplierStats AS (
    SELECT ps.s_suppkey, SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_cost
    FROM partsupp ps
    GROUP BY ps.s_suppkey
),
CustomerTotal AS (
    SELECT c.c_custkey, c.c_name, SUM(o.o_totalprice) AS total_spent
    FROM customer c
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    GROUP BY c.c_custkey, c.c_name
),
PartWithComments AS (
    SELECT p.p_partkey, p.p_name, 
           CASE WHEN p.p_comment IS NULL THEN 'No Comment' ELSE p.p_comment END AS p_comment
    FROM part p
)
SELECT ch.o_orderkey, ct.c_name, ch.o_totalprice, 
       ROW_NUMBER() OVER (PARTITION BY ch.o_custkey ORDER BY ch.o_orderdate DESC) AS order_rank,
       COALESCE(ss.total_supply_cost, 0) AS supplier_cost,
       pwc.p_name, pwc.p_comment
FROM OrderHierarchy ch
JOIN CustomerTotal ct ON ch.o_custkey = ct.c_custkey
LEFT JOIN lineitem li ON li.l_orderkey = ch.o_orderkey
LEFT JOIN partsupp ps ON li.l_partkey = ps.ps_partkey
LEFT JOIN SupplierStats ss ON ps.ps_suppkey = ss.s_suppkey
LEFT JOIN PartWithComments pwc ON li.l_partkey = pwc.p_partkey
WHERE ch.o_totalprice > (SELECT AVG(o_totalprice) FROM orders)
AND ct.total_spent IS NOT NULL
ORDER BY ch.o_orderdate DESC, ct.total_spent DESC;