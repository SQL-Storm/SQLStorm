WITH RECURSIVE supplier_hierarchy AS (
    SELECT s_suppkey, s_name, s_nationkey, s_acctbal, 1 AS level
    FROM supplier
    WHERE s_acctbal > (SELECT AVG(s_acctbal) FROM supplier) 
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal, sh.level + 1
    FROM supplier s
    JOIN supplier_hierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE s.s_acctbal > sh.s_acctbal AND sh.level < 5
),
top_suppliers AS (
    SELECT s.s_suppkey, s.s_name, SUM(ps.ps_supplycost * ps.ps_availqty) AS total_cost
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY s.s_suppkey, s.s_name
    HAVING SUM(ps.ps_supplycost * ps.ps_availqty) > 10000
),
aggregated_data AS (
    SELECT p.p_partkey, p.p_name, SUM(l.l_extendedprice * (1 - l.l_discount)) AS revenue
    FROM lineitem l
    JOIN partsupp ps ON l.l_partkey = ps.ps_partkey
    JOIN part p ON ps.ps_partkey = p.p_partkey
    WHERE l.l_shipdate BETWEEN '1997-01-01' AND '1997-12-31'
    GROUP BY p.p_partkey, p.p_name
),
joined_data AS (
    SELECT a.p_partkey, a.p_name, a.revenue, ts.total_cost,
           ROW_NUMBER() OVER (PARTITION BY a.p_partkey ORDER BY a.revenue DESC) AS rn
    FROM aggregated_data a
    LEFT JOIN top_suppliers ts ON a.revenue > ts.total_cost
),
final_selection AS (
    SELECT j.p_partkey, j.p_name, j.revenue, j.total_cost
    FROM joined_data j
    WHERE j.rn = 1 OR j.total_cost IS NULL
)
SELECT r.r_regionkey, r.r_name, COUNT(DISTINCT fs.p_partkey) AS part_count,
       SUM(COALESCE(fs.revenue, 0)) AS total_revenue,
       CASE WHEN COUNT(DISTINCT fs.p_partkey) > 0 THEN AVG(fs.total_cost) ELSE NULL END AS avg_total_cost
FROM region r
LEFT JOIN final_selection fs ON r.r_regionkey = (SELECT n.n_regionkey FROM nation n WHERE n.n_nationkey = (SELECT s.s_nationkey FROM supplier s WHERE s.s_suppkey IN (SELECT DISTINCT ts.s_suppkey FROM top_suppliers ts)))
GROUP BY r.r_regionkey, r.r_name
ORDER BY total_revenue DESC
HAVING total_revenue > (SELECT AVG(total_revenue) FROM final_selection) OR total_revenue IS NULL