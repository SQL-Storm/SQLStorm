WITH RankedOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_orderdate,
        o.o_totalprice,
        o.o_orderstatus,
        RANK() OVER (PARTITION BY o.o_orderstatus ORDER BY o.o_totalprice DESC) AS rnk
    FROM 
        orders o
    WHERE 
        o.o_orderdate >= DATE '1997-01-01'
        AND o.o_orderdate <= DATE '1997-12-31'
),
CustomerSummary AS (
    SELECT 
        c.c_custkey,
        COUNT(DISTINCT o.o_orderkey) AS total_orders,
        SUM(o.o_totalprice) AS total_spent
    FROM 
        customer c
    LEFT JOIN 
        orders o ON c.c_custkey = o.o_custkey
    GROUP BY 
        c.c_custkey
),
TopCustomers AS (
    SELECT 
        cs.c_custkey,
        cs.total_orders,
        cs.total_spent,
        ROW_NUMBER() OVER (ORDER BY cs.total_spent DESC) AS customer_rank
    FROM 
        CustomerSummary cs
),
SupplierPartInfo AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        p.p_name,
        pp.ps_supplycost
    FROM 
        supplier s 
    JOIN 
        partsupp pp ON s.s_suppkey = pp.ps_suppkey
    JOIN 
        part p ON pp.ps_partkey = p.p_partkey
    WHERE 
        pp.ps_availqty > 0
)
SELECT 
    tc.customer_rank,
    tc.total_orders,
    tc.total_spent,
    sp.s_name,
    sp.p_name,
    COALESCE(SUM(l.l_extendedprice * (1 - l.l_discount)), 0) AS total_sales,
    AVG(l.l_tax) AS avg_tax
FROM 
    TopCustomers tc
LEFT JOIN 
    lineitem l ON l.l_orderkey IN (SELECT o.o_orderkey FROM RankedOrders ro WHERE ro.rnk <= 10 AND ro.o_orderstatus = 'O')
LEFT JOIN 
    SupplierPartInfo sp ON l.l_partkey = sp.p_partkey AND l.l_suppkey = sp.s_suppkey
WHERE 
    tc.customer_rank <= 10
GROUP BY 
    tc.customer_rank, tc.total_orders, tc.total_spent, sp.s_name, sp.p_name
ORDER BY 
    tc.customer_rank;