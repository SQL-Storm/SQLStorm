
WITH RankedSuppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        s.s_acctbal,
        RANK() OVER (PARTITION BY p.p_type ORDER BY s.s_acctbal DESC) AS acct_rank
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    JOIN 
        part p ON ps.ps_partkey = p.p_partkey
),
CustomerAggregates AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        SUM(o.o_totalprice) AS total_spent,
        COUNT(o.o_orderkey) AS order_count
    FROM 
        customer c
    LEFT JOIN 
        orders o ON c.c_custkey = o.o_custkey
    GROUP BY 
        c.c_custkey, c.c_name
),
HighValueCustomers AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        c.total_spent,
        c.order_count
    FROM 
        CustomerAggregates c
    WHERE 
        c.total_spent > (SELECT AVG(total_spent) FROM CustomerAggregates)
),
SupplierTopPart AS (
    SELECT 
        p.p_type,
        ps.ps_suppkey,
        SUM(ps.ps_availqty * ps.ps_supplycost) AS total_supply_value
    FROM 
        partsupp ps
    JOIN 
        part p ON ps.ps_partkey = p.p_partkey
    GROUP BY 
        p.p_type, ps.ps_suppkey
)
SELECT 
    ns.n_name,
    r.r_name,
    COUNT(DISTINCT s.s_suppkey) AS supplier_count,
    AVG(l.l_quantity * l.l_extendedprice * (1 - l.l_discount)) AS avg_order_value,
    MAX(NULLIF(c.total_spent, 0)) AS max_spent_customer,
    CASE WHEN EXISTS (SELECT 1 FROM HighValueCustomers h WHERE h.c_custkey = c.c_custkey) THEN TRUE ELSE FALSE END AS high_value_status,
    STRING_AGG(DISTINCT p.p_name, ', ') AS part_names
FROM 
    nation ns
JOIN 
    region r ON ns.n_regionkey = r.r_regionkey
LEFT JOIN 
    supplier s ON ns.n_nationkey = s.s_nationkey
LEFT JOIN 
    partsupp ps ON s.s_suppkey = ps.ps_suppkey
LEFT JOIN 
    lineitem l ON ps.ps_partkey = l.l_partkey
LEFT JOIN 
    customer c ON l.l_orderkey IN (SELECT o.o_orderkey FROM orders o WHERE o.o_custkey = c.c_custkey)
WHERE 
    r.r_name LIKE 'Asia%'
    AND (s.s_acctbal IS NOT NULL OR l.l_returnflag = 'R')
    -- Fixed incorrect alias "e" in the WHERE clause
    AND (l.l_shipmode IS NULL OR l.l_shipmode = 'AIR')
GROUP BY 
    ns.n_name, r.r_name
HAVING 
    COUNT(DISTINCT s.s_suppkey) > 2
ORDER BY 
    ns.n_name, r.r_name;
