WITH TotalSales AS (
    SELECT 
        l_orderkey, 
        SUM(l_extendedprice * (1 - l_discount)) AS total_sales
    FROM 
        lineitem
    WHERE 
        l_shipdate >= DATE '1996-01-01' 
        AND l_shipdate < DATE '1997-01-01'
    GROUP BY 
        l_orderkey
),
SupplierStats AS (
    SELECT 
        s.s_suppkey, 
        s.s_name, 
        COUNT(DISTINCT ps.ps_partkey) AS supplied_parts,
        SUM(ps.ps_availqty) AS total_available_quantity,
        AVG(ps.ps_supplycost) AS avg_supply_cost
    FROM 
        supplier s
    LEFT JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey, s.s_name
),
HighValueCustomers AS (
    SELECT 
        c.c_custkey, 
        c.c_name, 
        c.c_acctbal
    FROM 
        customer c
    WHERE 
        c.c_acctbal > (SELECT AVG(c2.c_acctbal) FROM customer c2)
),
OrderSummary AS (
    SELECT 
        o.o_orderkey, 
        o.o_orderstatus, 
        o.o_totalprice, 
        SUM(l.l_quantity) AS total_quantity,
        ROW_NUMBER() OVER (PARTITION BY o.o_orderkey ORDER BY o.o_orderdate) AS order_rank
    FROM 
        orders o
    JOIN 
        lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE 
        o.o_orderstatus IN ('O', 'F') 
    GROUP BY 
        o.o_orderkey, o.o_orderstatus, o.o_totalprice
)
SELECT 
    ns.n_name, 
    COUNT(DISTINCT c.c_custkey) AS unique_customers,
    AVG(ss.total_available_quantity) AS average_available_quantity
FROM 
    nation ns
LEFT JOIN 
    supplier s ON ns.n_nationkey = s.s_nationkey
LEFT JOIN 
    SupplierStats ss ON s.s_suppkey = ss.s_suppkey
RIGHT JOIN 
    HighValueCustomers c ON c.c_nationkey = ns.n_nationkey
JOIN 
    OrderSummary os ON os.o_orderkey IN (SELECT o.o_orderkey FROM orders o WHERE o.o_custkey = c.c_custkey)
WHERE 
    ss.supplied_parts > 5 
    AND ss.avg_supply_cost IS NOT NULL
GROUP BY 
    ns.n_name
ORDER BY 
    unique_customers DESC
LIMIT 10;