WITH RECURSIVE SupplyChain AS (
    SELECT s.s_suppkey, s.s_name, s.s_acctbal, ps.ps_availqty, ps.ps_supplycost, 
           p.p_name, p.p_brand, p.p_size
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    JOIN part p ON ps.ps_partkey = p.p_partkey
    WHERE s.s_acctbal > 1000

    UNION ALL

    SELECT s.s_suppkey, s.s_name, s.s_acctbal, ps.ps_availqty, ps.ps_supplycost, 
           p.p_name, p.p_brand, p.p_size
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    JOIN part p ON ps.ps_partkey = p.p_partkey
    JOIN SupplyChain sc ON s.s_suppkey = sc.s_suppkey
    WHERE s.s_acctbal > 2000
)

SELECT 
    r.r_name AS region,
    COUNT(DISTINCT c.c_custkey) AS customer_count,
    SUM(o.o_totalprice) AS total_order_value,
    AVG(sc.ps_supplycost) AS average_supply_cost,
    STRING_AGG(DISTINCT sc.p_name, ', ') AS part_names
FROM region r
LEFT JOIN nation n ON n.n_regionkey = r.r_regionkey
LEFT JOIN customer c ON c.c_nationkey = n.n_nationkey
LEFT JOIN orders o ON o.o_custkey = c.c_custkey
LEFT JOIN SupplyChain sc ON sc.s_suppkey = o.o_custkey
WHERE o.o_orderdate >= DATE '1997-01-01'
AND o.o_orderstatus IN ('O', 'P')
AND sc.ps_availqty IS NOT NULL 
GROUP BY r.r_name
HAVING AVG(sc.ps_supplycost) > 50.00
ORDER BY region, customer_count DESC;