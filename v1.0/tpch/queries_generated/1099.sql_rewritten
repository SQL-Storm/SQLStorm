WITH RankedOrders AS (
    SELECT o.o_orderkey,
           o.o_orderdate,
           o.o_totalprice,
           ROW_NUMBER() OVER (PARTITION BY o.o_orderdate ORDER BY o.o_totalprice DESC) AS rnk
    FROM orders o
    WHERE o.o_orderstatus = 'O' AND o.o_orderdate >= '1997-01-01'
),
SupplierStats AS (
    SELECT s.s_suppkey,
           SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_value,
           AVG(s.s_acctbal) AS avg_account_balance,
           COUNT(DISTINCT ps.ps_partkey) AS total_parts_supplied
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY s.s_suppkey
),
CustomerOrderCount AS (
    SELECT c.c_custkey,
           COUNT(o.o_orderkey) AS num_orders
    FROM customer c
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    GROUP BY c.c_custkey
),
NationRegionSummary AS (
    SELECT n.n_name AS nation_name,
           r.r_name AS region_name,
           COUNT(DISTINCT s.s_suppkey) AS supplier_count
    FROM nation n
    JOIN region r ON n.n_regionkey = r.r_regionkey
    LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
    GROUP BY n.n_name, r.r_name
)

SELECT coalesce(ns.nation_name, 'Unknown') AS nation,
       coalesce(ns.region_name, 'Unknown Region') AS region,
       coalesce(ss.total_supply_value, 0) AS total_supply_value,
       c.num_orders AS customer_orders,
       ro.o_orderkey,
       ro.o_totalprice,
       ss.avg_account_balance,
       (SELECT SUM(l.l_extendedprice * (1 - l.l_discount)) 
        FROM lineitem l 
        WHERE l.l_orderkey = ro.o_orderkey) AS order_revenue,
       CASE 
           WHEN ro.o_totalprice > 1000 THEN 'High Value' 
           ELSE 'Standard' 
       END AS order_value_category
FROM RankedOrders ro
LEFT JOIN SupplierStats ss ON ss.s_suppkey = (
    SELECT ps.ps_suppkey 
    FROM partsupp ps 
    WHERE ps.ps_partkey IN (
        SELECT DISTINCT ps_partkey 
        FROM lineitem l 
        WHERE l.l_orderkey = ro.o_orderkey)
    LIMIT 1)
LEFT JOIN CustomerOrderCount c ON c.c_custkey = (
    SELECT o.o_custkey 
    FROM orders o 
    WHERE o.o_orderkey = ro.o_orderkey)
LEFT JOIN NationRegionSummary ns ON ns.supplier_count > 0
ORDER BY ro.o_orderdate DESC, ro.o_totalprice DESC;