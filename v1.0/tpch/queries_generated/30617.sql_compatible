
WITH RECURSIVE SupplyChain AS (
    SELECT s.s_suppkey, s.s_name, s.s_acctbal, 0 AS lvl
    FROM supplier s
    WHERE s.s_acctbal >= 10000
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_acctbal, sc.lvl + 1
    FROM supplier s
    JOIN SupplyChain sc ON sc.s_suppkey = s.s_suppkey
    WHERE sc.lvl < 3
), OrderSummary AS (
    SELECT o.o_orderkey, o.o_orderdate, SUM(li.l_extendedprice * (1 - li.l_discount)) AS total_sales
    FROM orders o
    JOIN lineitem li ON o.o_orderkey = li.l_orderkey
    GROUP BY o.o_orderkey, o.o_orderdate
), HighValueOrders AS (
    SELECT os.o_orderkey, os.o_orderdate, os.total_sales,
           ROW_NUMBER() OVER (PARTITION BY EXTRACT(YEAR FROM os.o_orderdate) ORDER BY os.total_sales DESC) AS sales_rank
    FROM OrderSummary os
    WHERE os.total_sales > 1000
), SupplierParts AS (
    SELECT ps.ps_partkey, SUM(ps.ps_availqty) AS total_available
    FROM partsupp ps
    GROUP BY ps.ps_partkey
), SupplierInfo AS (
    SELECT s.s_suppkey, s.s_name, np.n_name, sp.total_available
    FROM supplier s
    JOIN nation np ON s.s_nationkey = np.n_nationkey
    JOIN SupplierParts sp ON sp.ps_partkey IN (SELECT ps.ps_partkey FROM partsupp ps WHERE ps.ps_suppkey = s.s_suppkey)
)
SELECT r.r_name, s.s_name, COUNT(DISTINCT so.o_orderkey) AS order_count,
       SUM(so.total_sales) AS total_revenue,
       AVG(s.s_acctbal) AS avg_acctbal,
       MAX(sp.total_available) AS max_available
FROM region r
LEFT JOIN nation n ON n.n_regionkey = r.r_regionkey
LEFT JOIN supplier s ON s.s_nationkey = n.n_nationkey
LEFT JOIN HighValueOrders so ON so.o_orderkey = (SELECT o.o_orderkey FROM orders o WHERE o.o_orderstatus = 'O' LIMIT 1)
LEFT JOIN SupplierParts sp ON sp.ps_partkey IN (SELECT ps.ps_partkey FROM partsupp ps WHERE ps.ps_suppkey = s.s_suppkey)
GROUP BY r.r_name, s.s_name
HAVING COUNT(DISTINCT so.o_orderkey) > 5
   OR MAX(sp.total_available) IS NULL
ORDER BY total_revenue DESC
LIMIT 10;
