
WITH RECURSIVE SupplierHierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal, 0 AS level
    FROM supplier s
    WHERE s.s_acctbal > (SELECT AVG(s_acctbal) FROM supplier)
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal, sh.level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE sh.level < 3
), BestSellingPart AS (
    SELECT ps.ps_partkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue
    FROM partsupp ps
    JOIN lineitem l ON ps.ps_partkey = l.l_partkey
    GROUP BY ps.ps_partkey
    ORDER BY total_revenue DESC
    LIMIT 1
), CustomerOrders AS (
    SELECT c.c_custkey, c.c_name, COUNT(o.o_orderkey) AS order_count, SUM(o.o_totalprice) AS total_spent
    FROM customer c
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    WHERE c.c_mktsegment = 'BUILDING'
    GROUP BY c.c_custkey, c.c_name
), CombinedResults AS (
    SELECT ch.s_name, ch.level, co.c_name, co.order_count, co.total_spent, bp.total_revenue
    FROM SupplierHierarchy ch
    LEFT JOIN CustomerOrders co ON ch.s_nationkey = (SELECT n.n_nationkey FROM nation n WHERE n.n_name = 'USA')
    CROSS JOIN BestSellingPart bp
)
SELECT
    cr.s_name AS supplier_name,
    cr.level AS supplier_hierarchy_level,
    cr.c_name AS customer_name,
    COALESCE(cr.order_count, 0) AS number_of_orders,
    COALESCE(cr.total_spent, 0.00) AS total_spent_by_customer,
    cr.total_revenue AS best_selling_part_revenue
FROM CombinedResults cr
WHERE (cr.total_spent > 1000 OR cr.order_count IS NULL)
ORDER BY cr.total_spent DESC, cr.s_name;
