
WITH CTE_SupplierStats AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        SUM(ps.ps_availqty) AS total_available,
        AVG(ps.ps_supplycost) AS average_supply_cost,
        COUNT(DISTINCT p.p_partkey) AS parts_supplied
    FROM 
        supplier s
    LEFT JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    LEFT JOIN 
        part p ON ps.ps_partkey = p.p_partkey
    GROUP BY 
        s.s_suppkey, s.s_name
),
CTE_OrderStats AS (
    SELECT 
        o.o_orderkey,
        o.o_orderdate,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_order_value,
        ROW_NUMBER() OVER (PARTITION BY o.o_orderkey ORDER BY o.o_orderdate DESC) AS rn
    FROM 
        orders o
    JOIN 
        lineitem l ON o.o_orderkey = l.l_orderkey
    GROUP BY 
        o.o_orderkey, o.o_orderdate
),
CTE_HighValueOrders AS (
    SELECT 
        o.o_orderkey,
        o.total_order_value,
        s.s_name AS supp_name
    FROM 
        CTE_OrderStats o
    JOIN 
        CTE_SupplierStats s ON o.o_orderkey = s.s_suppkey
    WHERE 
        o.total_order_value > (SELECT AVG(total_order_value) FROM CTE_OrderStats)
)
SELECT 
    r.r_name AS region,
    COUNT(DISTINCT s.s_suppkey) AS supplier_count,
    SUM(COALESCE(o.total_order_value, 0)) AS total_order_value,
    AVG(s.average_supply_cost) AS avg_supply_cost_per_supplier
FROM 
    region r
LEFT JOIN 
    nation n ON n.n_regionkey = r.r_regionkey
LEFT JOIN 
    supplier s ON s.s_nationkey = n.n_nationkey
LEFT JOIN 
    CTE_HighValueOrders o ON s.s_suppkey = o.supp_name
GROUP BY 
    r.r_name
HAVING 
    COUNT(DISTINCT s.s_suppkey) > 5
ORDER BY 
    total_order_value DESC;
