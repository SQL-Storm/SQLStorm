
WITH RECURSIVE SupplierHierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_acctbal, s.s_nationkey, 1 AS level
    FROM supplier s
    WHERE s.s_acctbal > 5000
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_acctbal, s.s_nationkey, sh.level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE sh.level < 3
),
RegionSummary AS (
    SELECT r.r_name, COUNT(n.n_nationkey) AS nation_count
    FROM region r
    LEFT JOIN nation n ON r.r_regionkey = n.n_regionkey
    GROUP BY r.r_name
),
PartSupplier AS (
    SELECT p.p_partkey, p.p_name, SUM(ps.ps_availqty) AS total_available
    FROM part p
    JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
    GROUP BY p.p_partkey, p.p_name
),
OrderStats AS (
    SELECT o.o_orderkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_price
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE l.l_returnflag = 'N'
    GROUP BY o.o_orderkey
)
SELECT 
    ps.p_name, 
    r.r_name, 
    SUM(os.total_price) AS total_order_value,
    AVG(s.s_acctbal) AS average_supplier_balance
FROM PartSupplier ps
JOIN RegionSummary r ON r.nation_count > 0
LEFT JOIN orders o ON o.o_orderkey IN (
    SELECT os.o_orderkey
    FROM OrderStats os
    WHERE os.total_price > 1000
)
LEFT JOIN SupplierHierarchy s ON o.o_custkey = s.s_suppkey
GROUP BY ps.p_name, r.r_name
HAVING AVG(s.s_acctbal) < (
    SELECT AVG(s2.s_acctbal) 
    FROM supplier s2 
    WHERE s2.s_nationkey IS NOT NULL
)
ORDER BY total_order_value DESC, r.r_name ASC
LIMIT 10;
