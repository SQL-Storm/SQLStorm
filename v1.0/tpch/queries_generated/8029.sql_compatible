
WITH RankedSuppliers AS (
    SELECT 
        s.s_suppkey, 
        s.s_name, 
        s.s_acctbal, 
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_cost,
        ROW_NUMBER() OVER (ORDER BY SUM(ps.ps_supplycost * ps.ps_availqty) DESC) AS rn
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey, s.s_name, s.s_acctbal
),
HighValueCustomers AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        SUM(o.o_totalprice) AS total_spent
    FROM 
        customer c
    JOIN 
        orders o ON c.c_custkey = o.o_custkey
    GROUP BY 
        c.c_custkey, c.c_name
    HAVING 
        SUM(o.o_totalprice) > 10000
),
RecentOrders AS (
    SELECT 
        o.o_orderkey, 
        o.o_orderdate, 
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_order_value
    FROM 
        orders o
    JOIN 
        lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE 
        o.o_orderdate >= DATEADD(MONTH, -6, '1998-10-01')
    GROUP BY 
        o.o_orderkey, o.o_orderdate
)
SELECT 
    r.s_name AS supplier_name, 
    r.total_cost AS supplier_total_cost, 
    c.c_name AS high_value_customer, 
    c.total_spent AS customer_total_spent,
    o.o_orderkey AS recent_order, 
    o.total_order_value AS order_value
FROM 
    RankedSuppliers r
CROSS JOIN 
    HighValueCustomers c
JOIN 
    RecentOrders o ON o.total_order_value > 50000
WHERE 
    r.rn <= 10;
