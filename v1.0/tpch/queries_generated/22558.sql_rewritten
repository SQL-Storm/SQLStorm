WITH RankedSuppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        s.s_acctbal,
        ROW_NUMBER() OVER (PARTITION BY s.s_nationkey ORDER BY s.s_acctbal DESC) AS rnk
    FROM 
        supplier s
),
AvailableParts AS (
    SELECT 
        p.p_partkey,
        p.p_mfgr,
        SUM(ps.ps_availqty) AS total_available
    FROM 
        part p
    JOIN 
        partsupp ps ON p.p_partkey = ps.ps_partkey
    GROUP BY 
        p.p_partkey, p.p_mfgr
),
OrderDetails AS (
    SELECT 
        o.o_orderkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS order_value,
        COUNT(DISTINCT l.l_partkey) AS part_count
    FROM 
        orders o
    JOIN 
        lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE 
        l.l_shipdate >= '1997-01-01' AND l.l_shipdate < '1998-01-01'
    GROUP BY 
        o.o_orderkey
),
FilteredOrders AS (
    SELECT 
        od.o_orderkey,
        od.order_value,
        od.part_count,
        CASE 
            WHEN od.order_value > 1000 THEN 'High'
            WHEN od.order_value BETWEEN 500 AND 1000 THEN 'Medium'
            ELSE 'Low'
        END AS order_category
    FROM 
        OrderDetails od
    WHERE 
        od.part_count >= 5
)
SELECT 
    r.r_name AS region_name,
    COUNT(DISTINCT fo.o_orderkey) AS num_orders,
    AVG(fo.order_value) AS avg_order_value,
    SUM(COALESCE(sp.s_acctbal, 0)) AS total_supplier_acctbal
FROM 
    nation n
LEFT JOIN 
    region r ON n.n_regionkey = r.r_regionkey
LEFT JOIN 
    RankedSuppliers sp ON n.n_nationkey = sp.s_nationkey AND sp.rnk = 1
LEFT JOIN 
    FilteredOrders fo ON n.n_nationkey = (SELECT s_nationkey FROM supplier WHERE s_suppkey = fo.o_orderkey % (SELECT COUNT(*) FROM supplier) LIMIT 1)
GROUP BY 
    r.r_name
HAVING 
    num_orders > 0 AND AVG(fo.order_value) IS NOT NULL
ORDER BY 
    region_name;