WITH RECURSIVE SupplyChain AS (
    SELECT ps.ps_partkey, ps.ps_suppkey, ps.ps_availqty, ps.ps_supplycost, 
           ROW_NUMBER() OVER (PARTITION BY ps.ps_partkey ORDER BY ps.ps_supplycost ASC) AS rn
    FROM partsupp ps
    WHERE ps.ps_availqty > 0
),
CustomerOrderStats AS (
    SELECT c.c_custkey, c.c_name, 
           SUM(CASE WHEN o.o_orderstatus = 'F' THEN o.o_totalprice ELSE 0 END) AS total_filled_orders,
           COUNT(CASE WHEN o.o_orderstatus = 'F' THEN 1 END) AS count_filled_orders,
           AVG(o.o_totalprice) AS avg_order_value
    FROM customer c
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    GROUP BY c.c_custkey, c.c_name
),
NationWithRegion AS (
    SELECT n.n_nationkey, n.n_name, r.r_name AS region_name
    FROM nation n
    JOIN region r ON n.n_regionkey = r.r_regionkey
)
SELECT ns.r_name AS region, c.c_name AS customer_name,
       COUNT(DISTINCT o.o_orderkey) AS order_count,
       SUM(li.l_extendedprice * (1 - li.l_discount)) AS total_revenue,
       AVG(CASE WHEN li.l_discount > 0 THEN li.l_extendedprice ELSE NULL END) AS avg_discounted_price,
       MAX(sc.ps_supplycost) AS max_supply_cost,
       COUNT(DISTINCT ps.ps_suppkey) AS unique_suppliers
FROM CustomerOrderStats c
JOIN orders o ON c.c_custkey = o.o_custkey
JOIN lineitem li ON o.o_orderkey = li.l_orderkey
LEFT JOIN SupplyChain sc ON li.l_partkey = sc.ps_partkey AND sc.rn = 1
JOIN NationWithRegion ns ON c.c_nationkey = ns.n_nationkey
WHERE o.o_orderdate BETWEEN '1997-01-01' AND '1997-12-31'
GROUP BY ns.r_name, c.c_name
HAVING SUM(li.l_extendedprice * (1 - li.l_discount)) > 10000
ORDER BY total_revenue DESC;