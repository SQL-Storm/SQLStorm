WITH RECURSIVE CTE_RecursiveOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_orderdate,
        o.o_totalprice,
        ROW_NUMBER() OVER (PARTITION BY o.o_orderkey ORDER BY o.o_orderdate) as rn
    FROM 
        orders o
    WHERE 
        o.o_orderstatus IN ('O', 'P') 
), CTE_AggregatedSuppliers AS (
    SELECT 
        s.s_suppkey,
        SUM(ps.ps_supplycost) AS total_supplycost,
        COUNT(DISTINCT ps.ps_partkey) AS unique_parts
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey
), CTE_AdvancedLineItems AS (
    SELECT 
        l.l_orderkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS revenue,
        COUNT(DISTINCT l.l_partkey) AS parts_count
    FROM 
        lineitem l
    WHERE 
        l.l_shipdate >= '1996-01-01'
    GROUP BY 
        l.l_orderkey
)
SELECT 
    o.o_orderkey,
    o.o_orderdate,
    coalesce(a.unique_parts, 0) AS unique_parts_supplied,
    r.revenue AS total_revenue,
    CASE 
        WHEN o.o_totalprice IS NULL THEN 'No Price'
        WHEN o.o_totalprice > 1000 THEN 'High Value'
        ELSE 'Standard Value'
    END AS price_category,
    r.revenue * 0.1 AS projected_margin
FROM 
    CTE_RecursiveOrders o
LEFT JOIN 
    CTE_AggregatedSuppliers a ON o.o_orderkey = a.s_suppkey
LEFT JOIN 
    CTE_AdvancedLineItems r ON o.o_orderkey = r.l_orderkey
WHERE 
    EXISTS (
        SELECT 1 
        FROM customer c 
        WHERE c.c_custkey = o.o_custkey 
        AND c.c_acctbal IS NOT NULL
    )
AND 
    o.o_orderdate BETWEEN '1996-01-01' AND '1997-01-01'
ORDER BY 
    o.o_orderdate DESC, 
    projected_margin DESC
FETCH FIRST 100 ROWS ONLY;