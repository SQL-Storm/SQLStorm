
WITH RECURSIVE CustomerHierarchy AS (
    SELECT c.c_custkey, c.c_name, c.c_acctbal, 0 AS level
    FROM customer c
    WHERE c.c_acctbal > (SELECT AVG(c_acctbal) FROM customer)
    
    UNION ALL
    
    SELECT c.c_custkey, c.c_name, c.c_acctbal, ch.level + 1
    FROM customer c
    JOIN CustomerHierarchy ch ON c.c_custkey = ch.c_custkey
    WHERE c.c_acctbal > ch.c_acctbal
),
RegionCounts AS (
    SELECT r.r_name, COUNT(n.n_nationkey) AS nation_count
    FROM region r
    LEFT JOIN nation n ON r.r_regionkey = n.n_regionkey
    GROUP BY r.r_name
),
TopSuppliers AS (
    SELECT s.s_name, SUM(ps.ps_supplycost * ps.ps_availqty) AS total_cost
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY s.s_name
    HAVING SUM(ps.ps_supplycost * ps.ps_availqty) > (SELECT AVG(total_cost) FROM (
        SELECT SUM(ps_supplycost * ps_availqty) AS total_cost
        FROM supplier s
        JOIN partsupp ps ON s.s_suppkey = ps.s_suppkey
        GROUP BY s.s_name
    ) AS avg_cost)
),
ComplexLineItems AS (
    SELECT l_orderkey,
           l_partkey,
           COUNT(l_linenumber) OVER (PARTITION BY l_orderkey) AS line_count,
           SUM(l_extendedprice * (1 - l_discount)) AS total_price
    FROM lineitem
    WHERE l_returnflag = 'N' AND l_shipdate > DATE '1998-10-01' - INTERVAL '30 days'
)
SELECT r.r_name,
       COUNT(DISTINCT nh.c_custkey) AS high_value_customers,
       tp.s_name AS top_supplier,
       cl.line_count,
       SUM(cl.total_price) AS total_revenue
FROM RegionCounts r
LEFT JOIN (SELECT DISTINCT ch.c_custkey FROM CustomerHierarchy ch WHERE ch.level > 0) nh ON r.nation_count = nh.custkey
LEFT JOIN TopSuppliers tp ON r.r_name = SUBSTR(tp.s_name, 1, 25)
CROSS JOIN ComplexLineItems cl
GROUP BY r.r_name, tp.s_name, cl.line_count
ORDER BY r.r_name, total_revenue DESC
LIMIT 10 OFFSET 5;
