
WITH SupplierStats AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        COUNT(DISTINCT ps.ps_partkey) AS part_count,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_cost
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey, s.s_name
),
CustomerOrders AS (
    SELECT 
        c.c_custkey,
        COUNT(o.o_orderkey) AS order_count,
        SUM(o.o_totalprice) AS total_spent
    FROM 
        customer c
    LEFT JOIN 
        orders o ON c.c_custkey = o.o_custkey
    GROUP BY 
        c.c_custkey
),
SalesData AS (
    SELECT 
        l.l_orderkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS revenue,
        ROW_NUMBER() OVER (PARTITION BY l.l_orderkey ORDER BY l.l_extendedprice DESC) AS rn
    FROM 
        lineitem l
    GROUP BY 
        l.l_orderkey
)
SELECT 
    n.n_name,
    SUM(SupplierStats.part_count) AS total_parts_by_nation,
    AVG(CustomerOrders.total_spent) AS avg_customer_spend,
    MAX(SalesData.revenue) AS max_order_revenue,
    CASE 
        WHEN SUM(SupplierStats.part_count) IS NULL THEN 'No Parts'
        ELSE CAST(SUM(SupplierStats.part_count) AS VARCHAR(255))
    END AS parts_info
FROM 
    nation n
LEFT JOIN 
    supplier s ON n.n_nationkey = s.s_nationkey
LEFT JOIN 
    SupplierStats ON s.s_suppkey = SupplierStats.s_suppkey
LEFT JOIN 
    CustomerOrders ON s.s_nationkey = CustomerOrders.c_custkey
LEFT JOIN 
    SalesData ON SalesData.l_orderkey IN (SELECT o.o_orderkey FROM orders o WHERE o.o_custkey = CustomerOrders.c_custkey)
GROUP BY 
    n.n_name
HAVING 
    COUNT(DISTINCT s.s_suppkey) > 0
ORDER BY 
    total_parts_by_nation DESC;
