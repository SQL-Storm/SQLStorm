WITH RECURSIVE OrderHierarchy AS (
    SELECT o.o_orderkey, o.o_orderdate, o.o_totalprice, 1 AS level
    FROM orders o
    WHERE o.o_orderstatus = 'O'
    
    UNION ALL
    
    SELECT o.o_orderkey, o.o_orderdate, o.o_totalprice, oh.level + 1
    FROM orders o
    JOIN OrderHierarchy oh ON o.o_custkey = (SELECT c.c_custkey FROM customer c WHERE c.c_name = 'CustomerX') 
    WHERE o.o_orderdate < cast('1998-10-01' as date) - INTERVAL '30 days' AND oh.level < 5
),
SupplierParts AS (
    SELECT ps.ps_partkey, ps.ps_suppkey, SUM(ps.ps_availqty) AS total_available
    FROM partsupp ps
    GROUP BY ps.ps_partkey, ps.ps_suppkey
),
TopNations AS (
    SELECT n.n_nationkey, n.n_name, COUNT(s.s_suppkey) AS supplier_count
    FROM nation n
    LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
    GROUP BY n.n_nationkey, n.n_name
    HAVING COUNT(s.s_suppkey) > 5
),
LineitemStats AS (
    SELECT l.l_orderkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS revenue,
           ROW_NUMBER() OVER (PARTITION BY l.l_returnflag ORDER BY SUM(l.l_extendedprice * (1 - l.l_discount)) DESC) AS rn
    FROM lineitem l
    WHERE l.l_shipdate >= '1997-01-01'
    GROUP BY l.l_orderkey, l.l_returnflag
)
SELECT DISTINCT p.p_name, p.p_brand, oh.o_orderdate, ls.revenue,
       COALESCE(tp.supplier_count, 0) AS supplier_count,
       sp.total_available
FROM part p
JOIN SupplierParts sp ON p.p_partkey = sp.ps_partkey
LEFT JOIN OrderHierarchy oh ON sp.ps_suppkey = (SELECT s.s_suppkey FROM supplier s WHERE s.s_nationkey IN (SELECT n.n_nationkey FROM TopNations n))
LEFT JOIN LineitemStats ls ON ls.l_orderkey = oh.o_orderkey
LEFT JOIN TopNations tp ON tp.n_nationkey = (SELECT c.c_nationkey FROM customer c WHERE c.c_custkey = oh.o_orderkey)
WHERE ls.rn = 1
  AND (p.p_retailprice > 100 OR p.p_comment IS NULL)
ORDER BY oh.o_orderdate DESC, revenue DESC;