WITH RankedOrders AS (
    SELECT o.o_orderkey, o.o_orderdate, o.o_totalprice,
           ROW_NUMBER() OVER (PARTITION BY o.o_orderkey ORDER BY o.o_totalprice DESC) AS OrderRank
    FROM orders o
    WHERE o.o_orderstatus IN ('O', 'P')
), SupplierStats AS (
    SELECT s.s_suppkey, s.s_name, SUM(ps.ps_supplycost * ps.ps_availqty) AS TotalCost,
           AVG(ps.ps_supplycost) AS AvgCost, MIN(ps.ps_availqty) AS MinQty, MAX(ps.ps_availqty) AS MaxQty
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY s.s_suppkey, s.s_name
    HAVING COUNT(DISTINCT ps.ps_partkey) > 10
), LineItemAggregates AS (
    SELECT l.l_orderkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS TotalRevenue,
           COUNT(*) AS LineCount, AVG(l.l_quantity) AS AvgLineQuantity
    FROM lineitem l
    WHERE l.l_shipdate BETWEEN DATE '1997-01-01' AND DATE '1997-12-31'
    GROUP BY l.l_orderkey
), CustomerRanking AS (
    SELECT c.c_custkey, c.c_name, DENSE_RANK() OVER (ORDER BY SUM(o.o_totalprice) DESC) AS CustomerRank
    FROM customer c
    JOIN orders o ON c.c_custkey = o.o_custkey
    GROUP BY c.c_custkey, c.c_name
), SelectedNations AS (
    SELECT n.n_nationkey, n.n_name, COUNT(s.s_suppkey) AS SupplierCount
    FROM nation n
    LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
    GROUP BY n.n_nationkey, n.n_name
    HAVING COUNT(s.s_suppkey) IS NOT NULL OR n.n_name NOT LIKE '%land'
)
SELECT r.o_orderkey, r.o_orderdate, l.TotalRevenue, 
       CASE 
           WHEN cs.CustomerRank <= 5 THEN 'Top Customer'
           WHEN cs.CustomerRank IS NULL THEN 'Rank Not Assigned'
           ELSE 'Regular Customer'
       END AS CustomerCategory,
       ss.TotalCost, ss.AvgCost, ss.MinQty, ss.MaxQty,
       COALESCE(n.SupplierCount, 0) AS EffectiveSupplierCount
FROM RankedOrders r
JOIN LineItemAggregates l ON r.o_orderkey = l.l_orderkey
LEFT JOIN CustomerRanking cs ON r.o_orderkey = cs.c_custkey
JOIN SupplierStats ss ON ss.s_suppkey = (SELECT ps.ps_suppkey FROM partsupp ps WHERE ps.ps_partkey = (SELECT MIN(ps2.ps_partkey) FROM partsupp ps2)) 
WHERE EXISTS (SELECT 1 FROM SelectedNations n WHERE n.SupplierCount > 0)
ORDER BY r.o_orderdate DESC, l.TotalRevenue DESC;