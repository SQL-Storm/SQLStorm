
WITH RECURSIVE supplier_hierarchy AS (
    SELECT s_suppkey, s_name, s_acctbal, 0 AS level
    FROM supplier
    WHERE s_acctbal > (SELECT AVG(s_acctbal) FROM supplier)
    
    UNION ALL
    
    SELECT s.s_suppkey, s.s_name, s.s_acctbal, sh.level + 1
    FROM supplier s
    JOIN supplier_hierarchy sh ON s.s_suppkey = sh.s_suppkey 
    WHERE sh.level < 5
),
customer_summary AS (
    SELECT c.c_custkey, c.c_name, SUM(o.o_totalprice) AS total_spent,
           COUNT(o.o_orderkey) AS orders_count
    FROM customer c
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    GROUP BY c.c_custkey, c.c_name
),
part_supplier AS (
    SELECT p.p_partkey, p.p_name, SUM(ps.ps_availqty) AS total_available
    FROM part p
    JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
    GROUP BY p.p_partkey, p.p_name
),
ranked_customers AS (
    SELECT c.c_custkey, c.c_name, c.total_spent, ROW_NUMBER() OVER (ORDER BY c.total_spent DESC) AS rank
    FROM customer_summary c
    WHERE c.total_spent IS NOT NULL
),
sales_summary AS (
    SELECT l.l_orderkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_sales,
           SUM(CASE WHEN l.l_returnflag = 'R' THEN 1 ELSE 0 END) AS return_count
    FROM lineitem l
    GROUP BY l.l_orderkey
)
SELECT r.n_name AS nation_name, COUNT(DISTINCT c.c_custkey) AS customer_count,
       SUM(ps.total_available) AS total_parts_available,
       AVG(ss.total_sales) AS average_order_value,
       MAX(sc.total_spent) AS max_spent_customer,
       MIN(sc.total_spent) AS min_spent_customer
FROM region r
LEFT JOIN nation n ON r.r_regionkey = n.n_regionkey
LEFT JOIN customer c ON n.n_nationkey = c.c_nationkey
LEFT JOIN ranked_customers sc ON c.c_custkey = sc.c_custkey
LEFT JOIN part_supplier ps ON ps.p_partkey IN (
    SELECT ps.ps_partkey FROM partsupp ps
    WHERE ps.ps_availqty > 0
)
LEFT JOIN sales_summary ss ON ss.l_orderkey IN (
    SELECT o.o_orderkey FROM orders o WHERE o.o_orderstatus = 'O'
)
GROUP BY r.n_name
HAVING COUNT(DISTINCT c.c_custkey) > 0
ORDER BY nation_name;
