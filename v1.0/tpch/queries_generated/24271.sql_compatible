
WITH RECURSIVE SupplierHierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_addr, s.s_nationkey, 
           s.s_acctbal, s.s_comment, 
           1 AS level
    FROM supplier s
    WHERE s.s_acctbal IS NOT NULL AND s.s_acctbal > 0.00
    
    UNION ALL
    
    SELECT s2.s_suppkey, s2.s_name, s2.s_addr, s2.s_nationkey,
           s2.s_acctbal, s2.s_comment,
           sh.level + 1
    FROM supplier s2
    JOIN SupplierHierarchy sh ON s2.s_nationkey = sh.s_nationkey
    WHERE s2.s_acctbal IS NOT NULL
),
HighBalanceCustomers AS (
    SELECT c.c_custkey, c.c_name, c.c_acctbal,
           NTILE(4) OVER (ORDER BY c.c_acctbal DESC) AS wealth_quartile
    FROM customer c
    WHERE c.c_acctbal IS NOT NULL AND c.c_acctbal > (SELECT AVG(c2.c_acctbal) FROM customer c2)
),
OrderDetails AS (
    SELECT o.o_orderkey, o.o_custkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_line_sales,
           COUNT(DISTINCT l.l_partkey) AS item_count, 
           ROW_NUMBER() OVER (PARTITION BY o.o_custkey ORDER BY o.o_orderdate DESC) AS recent_order
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    GROUP BY o.o_orderkey, o.o_custkey
),
SupplierStats AS (
    SELECT p.p_partkey, COUNT(DISTINCT ps.ps_suppkey) AS supplier_count, 
           SUM(ps.ps_supplycost) AS total_supplycost,
           MAX(p.p_size) AS max_size
    FROM part p
    JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
    GROUP BY p.p_partkey
    HAVING SUM(ps.ps_availqty) > 100
),
FinalReport AS (
    SELECT DISTINCT c.c_name, c.c_acctbal, o.total_line_sales,
           sh.level AS supplier_level, ss.max_size, ss.supplier_count
    FROM HighBalanceCustomers c
    JOIN OrderDetails o ON c.c_custkey = o.o_custkey
    JOIN SupplierHierarchy sh ON c.c_nationkey = sh.s_nationkey
    LEFT JOIN SupplierStats ss ON ss.p_partkey = (
        SELECT p.p_partkey
        FROM part p
        WHERE p.p_retailprice > (SELECT AVG(p2.p_retailprice) FROM part p2)
        ORDER BY p.p_size DESC
        LIMIT 1
    )
    WHERE o.recent_order = 1
    AND c.c_acctbal IS NOT NULL
    AND (o.total_line_sales IS NULL OR o.total_line_sales >= 1000)
    ORDER BY c.c_name, supplier_level DESC
)

SELECT * FROM FinalReport
WHERE supplier_level IS NOT NULL
OR (supplier_level IS NULL AND max_size IS NOT NULL)
ORDER BY c_acctbal DESC, total_line_sales ASC;
