
WITH RankedOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_totalprice,
        o.o_orderdate,
        o.o_orderstatus,
        ROW_NUMBER() OVER (PARTITION BY o.o_orderstatus ORDER BY o.o_totalprice DESC) AS order_rank
    FROM 
        orders o
    WHERE 
        o.o_orderdate >= DATE_SUB('1998-10-01', INTERVAL 1 YEAR)
), SupplierParts AS (
    SELECT 
        ps.ps_partkey,
        ps.ps_suppkey,
        SUM(ps.ps_availqty) AS total_avail_qty,
        SUM(ps.ps_supplycost) AS total_supply_cost
    FROM 
        partsupp ps
    GROUP BY 
        ps.ps_partkey, ps.ps_suppkey
), RegionStats AS (
    SELECT 
        r.r_name,
        COUNT(DISTINCT n.n_nationkey) AS nation_count,
        STRING_AGG(DISTINCT n.n_name, ', ') AS nations
    FROM 
        region r
    LEFT JOIN 
        nation n ON r.r_regionkey = n.n_regionkey
    GROUP BY 
        r.r_name
), OrderSummary AS (
    SELECT 
        l.l_orderkey,
        RANK() OVER (ORDER BY SUM(l.l_extendedprice * (1 - l.l_discount)) DESC) AS total_revenue_rank,
        COUNT(DISTINCT l.l_suppkey) AS supplier_count
    FROM 
        lineitem l
    JOIN 
        RankedOrders ro ON l.l_orderkey = ro.o_orderkey
    GROUP BY 
        l.l_orderkey
)
SELECT 
    p.p_partkey,
    p.p_name,
    p.p_brand,
    p.p_type,
    COALESCE(NULLIF(p.p_size, 0)::VARCHAR, 'N/A') AS part_size,
    ROUND(AVG(rp.total_supply_cost) * 1.1, 2) AS adjusted_average_supply_cost,
    CASE 
        WHEN MAX(os.total_revenue_rank) > 5 THEN 'High Revenue Order'
        ELSE 'Low Revenue Order'
    END AS order_type,
    r.nation_count,
    r.nations,
    CASE 
        WHEN EXISTS (SELECT 1 FROM lineitem l WHERE l.l_partkey = p.p_partkey AND l.l_returnflag = 'R') 
        THEN 'Returned' 
        ELSE 'Not Returned' 
    END AS return_status
FROM 
    part p
LEFT JOIN 
    SupplierParts rp ON p.p_partkey = rp.ps_partkey
LEFT JOIN 
    OrderSummary os ON os.l_orderkey = (SELECT o.o_orderkey 
                                         FROM RankedOrders ro 
                                         WHERE ro.order_rank = 1 
                                         LIMIT 1)
LEFT JOIN 
    RegionStats r ON r.r_name = (
        SELECT r_name FROM region 
        WHERE r_regionkey = (
            SELECT DISTINCT n.n_regionkey 
            FROM nation n 
            JOIN supplier s ON n.n_nationkey = s.s_nationkey 
            WHERE s.s_suppkey IN (SELECT ps.ps_suppkey FROM partsupp ps WHERE ps.ps_partkey = p.p_partkey)
            LIMIT 1
        )
        LIMIT 1
    )
WHERE 
    p.p_retailprice > 100.00
GROUP BY 
    p.p_partkey, p.p_name, p.p_brand, p.p_type, r.nation_count, r.nations
HAVING 
    COUNT(rp.ps_suppkey) > 1 AND adjusted_average_supply_cost IS NOT NULL
ORDER BY 
    p.p_partkey;
