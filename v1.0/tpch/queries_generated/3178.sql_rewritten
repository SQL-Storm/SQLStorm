WITH CustomerOrders AS (
    SELECT
        c.c_custkey,
        c.c_name,
        SUM(o.o_totalprice) AS total_spent,
        COUNT(DISTINCT o.o_orderkey) AS order_count
    FROM
        customer c
    LEFT JOIN
        orders o ON c.c_custkey = o.o_custkey
    GROUP BY
        c.c_custkey, c.c_name
),
PartSuppliers AS (
    SELECT
        ps.ps_partkey,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_cost
    FROM
        partsupp ps
    GROUP BY
        ps.ps_partkey
),
OrderDetails AS (
    SELECT
        o.o_orderkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS net_revenue,
        COUNT(l.l_linenumber) AS item_count
    FROM
        orders o
    JOIN
        lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE
        l.l_shipdate >= '1997-01-01' AND l.l_shipdate < '1998-01-01'
    GROUP BY
        o.o_orderkey
)
SELECT
    co.c_name,
    co.total_spent,
    co.order_count,
    od.net_revenue,
    od.item_count,
    ps.total_supply_cost,
    CASE 
        WHEN co.total_spent IS NULL THEN 'No orders'
        WHEN od.net_revenue IS NULL THEN 'No revenue'
        ELSE 'Active customer'
    END AS customer_status
FROM
    CustomerOrders co
FULL OUTER JOIN
    OrderDetails od ON co.c_custkey = od.o_orderkey
LEFT JOIN
    PartSuppliers ps ON ps.ps_partkey IN (
        SELECT l.l_partkey 
        FROM lineitem l 
        WHERE l.l_orderkey = od.o_orderkey
    )
WHERE
    co.total_spent > 1000 OR od.net_revenue > 5000
ORDER BY
    co.total_spent DESC NULLS LAST,
    od.net_revenue DESC NULLS LAST;