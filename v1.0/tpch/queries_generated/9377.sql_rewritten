WITH RankedSuppliers AS (
    SELECT
        s.s_suppkey,
        s.s_name,
        n.n_name AS supplier_nation,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_cost,
        RANK() OVER (PARTITION BY n.n_nationkey ORDER BY SUM(ps.ps_supplycost * ps.ps_availqty) DESC) AS rank
    FROM
        supplier s
    JOIN
        nation n ON s.s_nationkey = n.n_nationkey
    JOIN
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY
        s.s_suppkey,
        s.s_name,
        n.n_name
),
TopSuppliers AS (
    SELECT
        supplier_nation,
        s.s_suppkey,
        s.s_name,
        total_supply_cost
    FROM
        RankedSuppliers rs
    JOIN
        supplier s ON rs.s_suppkey = s.s_suppkey
    WHERE
        rs.rank <= 5
)
SELECT
    c.c_custkey,
    c.c_name,
    c.c_acctbal,
    t.s_supplier_nation,
    t.s_name,
    SUM(l.l_extendedprice * (1 - l.l_discount)) AS revenue
FROM
    customer c
JOIN
    orders o ON c.c_custkey = o.o_custkey
JOIN
    lineitem l ON o.o_orderkey = l.l_orderkey
JOIN
    TopSuppliers t ON l.l_suppkey = t.s_suppkey
WHERE
    o.o_orderdate >= DATE '1996-01-01'
    AND o.o_orderdate < DATE '1997-01-01'
GROUP BY
    c.c_custkey,
    c.c_name,
    c.c_acctbal,
    t.s_supplier_nation,
    t.s_name
HAVING
    SUM(l.l_extendedprice * (1 - l.l_discount)) > 10000
ORDER BY
    revenue DESC;