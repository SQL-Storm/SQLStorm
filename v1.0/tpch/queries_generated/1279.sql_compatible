
WITH RankedOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_orderdate,
        o.o_totalprice,
        o.o_orderstatus,
        RANK() OVER (PARTITION BY o.o_orderstatus ORDER BY o.o_totalprice DESC) AS order_rank
    FROM 
        orders o
    WHERE 
        o.o_orderdate >= DATE '1996-01-01'
),
SupplierParts AS (
    SELECT 
        ps.ps_partkey,
        ps.ps_suppkey,
        SUM(ps.ps_availqty) AS total_availqty,
        SUM(ps.ps_supplycost) AS total_supplycost
    FROM 
        partsupp ps
    GROUP BY 
        ps.ps_partkey, ps.ps_suppkey
),
HighValueSuppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        s.s_acctbal 
    FROM 
        supplier s 
    WHERE 
        s.s_acctbal > (
            SELECT AVG(s2.s_acctbal) FROM supplier s2
        )
)
SELECT 
    p.p_name,
    r.r_name,
    n.n_name,
    SUM(li.l_extendedprice * (1 - li.l_discount)) AS revenue,
    AVG(NULLIF(so.total_supplycost, 0) / NULLIF(sp.total_availqty, 0)) AS avg_supply_cost_per_qty,
    COUNT(DISTINCT lo.o_orderkey) AS order_count
FROM 
    part p
JOIN 
    lineitem li ON p.p_partkey = li.l_partkey
LEFT JOIN 
    orders lo ON li.l_orderkey = lo.o_orderkey
LEFT JOIN 
    supplier s ON li.l_suppkey = s.s_suppkey
JOIN 
    partsupp ps ON p.p_partkey = ps.ps_partkey
JOIN 
    HighValueSuppliers hvs ON s.s_suppkey = hvs.s_suppkey
JOIN 
    nation n ON s.s_nationkey = n.n_nationkey
JOIN 
    region r ON n.n_regionkey = r.r_regionkey
WHERE 
    lo.o_orderstatus IN ('F', 'O')
    AND li.l_shipdate > lo.o_orderdate
    AND lo.o_totalprice > 1000
GROUP BY 
    p.p_name, r.r_name, n.n_name
HAVING 
    SUM(li.l_extendedprice) > 50000
ORDER BY 
    revenue DESC;
