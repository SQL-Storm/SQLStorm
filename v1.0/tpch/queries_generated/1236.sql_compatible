
WITH RankedSuppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_cost,
        ROW_NUMBER() OVER (ORDER BY SUM(ps.ps_supplycost * ps.ps_availqty) DESC) AS rank
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey, s.s_name
),
FilteredOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_totalprice,
        o.o_orderdate,
        ROW_NUMBER() OVER (PARTITION BY o.o_orderstatus ORDER BY o.o_totalprice DESC) AS order_rank
    FROM 
        orders o
    WHERE 
        o.o_orderdate >= '1997-01-01'
        AND o.o_totalprice > (SELECT AVG(o2.o_totalprice) FROM orders o2)
),
CustomerOrderInfo AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        COUNT(DISTINCT fo.o_orderkey) AS order_count,
        AVG(fo.o_totalprice) AS avg_order_value
    FROM 
        customer c
    LEFT JOIN 
        FilteredOrders fo ON c.c_custkey = fo.o_custkey
    GROUP BY 
        c.c_custkey, c.c_name
)
SELECT 
    n.n_name,
    COUNT(DISTINCT c.c_custkey) AS customer_count,
    COALESCE(SUM(coi.order_count), 0) AS total_orders,
    COALESCE(SUM(coi.avg_order_value), 0) AS total_avg_order_value,
    COALESCE(MAX(rs.total_cost), 0) AS highest_supplier_cost
FROM 
    nation n
LEFT JOIN 
    customer c ON n.n_nationkey = c.c_nationkey
LEFT JOIN 
    CustomerOrderInfo coi ON c.c_custkey = coi.c_custkey
LEFT JOIN 
    RankedSuppliers rs ON rs.rank <= 5
GROUP BY 
    n.n_name
ORDER BY 
    total_orders DESC, n.n_name;
