WITH RECURSIVE OrderHierarchy AS (
    SELECT o.o_orderkey, o.o_orderdate, o.o_totalprice, o.o_custkey, 1 AS level
    FROM orders o
    WHERE o.o_orderstatus = 'O'
    
    UNION ALL
    
    SELECT o.o_orderkey, o.o_orderdate, o.o_totalprice, o.o_custkey, oh.level + 1
    FROM orders o
    JOIN OrderHierarchy oh ON o.o_orderkey = oh.o_orderkey
    WHERE o.o_totalprice > (SELECT AVG(o_totalprice) FROM orders) 
)

SELECT 
    c.c_name,
    r.r_name AS region,
    SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_sales,
    COUNT(DISTINCT o.o_orderkey) AS num_orders,
    AVG(l.l_extendedprice * (1 - l.l_discount)) OVER (PARTITION BY r.r_name) AS avg_order_value,
    ROW_NUMBER() OVER (PARTITION BY r.r_name ORDER BY SUM(l.l_extendedprice * (1 - l.l_discount)) DESC) AS rank
FROM customer c
JOIN orders o ON c.c_custkey = o.o_custkey
JOIN lineitem l ON o.o_orderkey = l.l_orderkey
JOIN supplier s ON l.l_suppkey = s.s_suppkey
JOIN partsupp ps ON l.l_partkey = ps.ps_partkey AND ps.ps_supplycost < 100
JOIN part p ON ps.ps_partkey = p.p_partkey
JOIN nation n ON s.s_nationkey = n.n_nationkey
JOIN region r ON n.n_regionkey = r.r_regionkey
WHERE c.c_acctbal IS NOT NULL
AND l.l_shipdate BETWEEN '1997-01-01' AND '1997-12-31'
AND (l.l_returnflag IS NULL OR l.l_returnflag != 'R')
GROUP BY c.c_name, r.r_name
HAVING SUM(l.l_extendedprice * (1 - l.l_discount)) > (SELECT AVG(SUM(l.l_extendedprice * (1 - l.l_discount))) 
                                                       FROM lineitem l 
                                                       JOIN orders o ON o.o_orderkey = l.l_orderkey 
                                                       WHERE o.o_orderdate >= '1997-01-01' 
                                                         AND o.o_orderdate <= '1997-12-31')
ORDER BY region, total_sales DESC;