
WITH RankedOrders AS (
    SELECT 
        o.o_orderkey,
        c.c_name,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
        ROW_NUMBER() OVER (PARTITION BY c.c_nationkey ORDER BY SUM(l.l_extendedprice * (1 - l.l_discount)) DESC) AS revenue_rank
    FROM 
        orders o
    JOIN 
        customer c ON o.o_custkey = c.c_custkey
    JOIN 
        lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE 
        o.o_orderstatus = 'O'
    GROUP BY 
        o.o_orderkey, c.c_name, c.c_nationkey
),
TopCustomers AS (
    SELECT 
        c.c_nationkey,
        c.c_name,
        o.total_revenue
    FROM 
        RankedOrders o
    JOIN 
        customer c ON o.o_orderkey = c.c_custkey
    WHERE 
        o.revenue_rank <= 5
),
TotalRevenuePerNation AS (
    SELECT 
        n.n_nationkey,
        SUM(tc.total_revenue) AS nation_revenue
    FROM 
        nation n
    LEFT JOIN 
        TopCustomers tc ON n.n_nationkey = tc.n_nationkey
    GROUP BY 
        n.n_nationkey
)
SELECT 
    n.n_name,
    COALESCE(tr.nation_revenue, 0) AS total_revenue,
    CASE 
        WHEN COALESCE(tr.nation_revenue, 0) > 10000 THEN 'High Performer'
        WHEN COALESCE(tr.nation_revenue, 0) BETWEEN 5000 AND 10000 THEN 'Medium Performer'
        ELSE 'Low Performer'
    END AS performance_category
FROM 
    region r
JOIN 
    nation n ON r.r_regionkey = n.n_regionkey
LEFT JOIN 
    TotalRevenuePerNation tr ON n.n_nationkey = tr.n_nationkey
WHERE 
    r.r_name LIKE '%east%'
ORDER BY 
    total_revenue DESC;
