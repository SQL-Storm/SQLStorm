WITH RECURSIVE CustomerOrders AS (
    SELECT c.c_custkey, c.c_name, o.o_orderkey, o.o_orderdate, o.o_totalprice
    FROM customer c
    JOIN orders o ON c.c_custkey = o.o_custkey
    WHERE o.o_orderstatus = 'O'

    UNION ALL

    SELECT c.c_custkey, c.c_name, o.o_orderkey, o.o_orderdate, o.o_totalprice
    FROM customer c
    JOIN orders o ON c.c_custkey = o.o_custkey
    JOIN CustomerOrders co ON co.o_orderkey = o.o_orderkey
)

, SupplierParts AS (
    SELECT s.s_suppkey, s.s_name, ps.ps_partkey, SUM(ps.ps_availqty) AS total_avail
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY s.s_suppkey, s.s_name, ps.ps_partkey
)

SELECT co.c_custkey,
       co.c_name,
       COUNT(DISTINCT co.o_orderkey) AS total_orders,
       SUM(co.o_totalprice) AS total_spent,
       sp.s_name AS supplier_name,
       SUM(sp.total_avail) AS total_available_parts
FROM CustomerOrders co
LEFT JOIN SupplierParts sp ON co.o_orderkey = sp.ps_partkey
WHERE co.o_orderdate >= DATE '1996-01-01'
GROUP BY co.c_custkey, co.c_name, sp.s_name
HAVING SUM(co.o_totalprice) > 10000
ORDER BY total_spent DESC, total_orders DESC
LIMIT 10;