WITH RECURSIVE SupplierHierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_acctbal, s.s_nationkey, 1 AS level
    FROM supplier s
    WHERE s.s_acctbal > 10000
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_acctbal, s.s_nationkey, sh.level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE s.s_acctbal > sh.s_acctbal
),
OrderSummary AS (
    SELECT o.o_orderkey, o.o_orderdate, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE l.l_shipdate >= '1996-01-01' AND l.l_shipdate <= '1996-12-31'
    GROUP BY o.o_orderkey, o.o_orderdate
),
CustomerOrderStats AS (
    SELECT c.c_custkey, c.c_name, COUNT(o.o_orderkey) AS order_count,
           AVG(COALESCE(os.total_revenue, 0)) AS avg_revenue
    FROM customer c
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    LEFT JOIN OrderSummary os ON o.o_orderkey = os.o_orderkey
    GROUP BY c.c_custkey, c.c_name
),
NationRevenue AS (
    SELECT n.n_regionkey, SUM(os.total_revenue) AS region_revenue
    FROM nation n
    JOIN customer c ON n.n_nationkey = c.c_nationkey
    JOIN orders o ON c.c_custkey = o.o_custkey
    JOIN OrderSummary os ON o.o_orderkey = os.o_orderkey
    GROUP BY n.n_regionkey
)
SELECT r.r_name, SUM(nr.region_revenue) AS total_revenue,
       COUNT(DISTINCT sh.s_suppkey) AS supplier_count,
       MAX(cs.order_count) AS max_order_count,
       ROUND(AVG(cs.avg_revenue), 2) AS avg_customer_revenue
FROM region r
LEFT JOIN NationRevenue nr ON r.r_regionkey = nr.n_regionkey
LEFT JOIN supplier s ON s.s_nationkey IN (SELECT n.n_nationkey FROM nation n WHERE n.n_regionkey = r.r_regionkey)
LEFT JOIN SupplierHierarchy sh ON s.s_suppkey = sh.s_suppkey
LEFT JOIN CustomerOrderStats cs ON s.s_nationkey = cs.c_custkey
GROUP BY r.r_name
HAVING SUM(nr.region_revenue) IS NOT NULL
ORDER BY total_revenue DESC;