
WITH CustomerOrders AS (
    SELECT 
        c.c_custkey, 
        c.c_name, 
        COUNT(o.o_orderkey) AS total_orders, 
        SUM(o.o_totalprice) AS total_spent
    FROM 
        customer c
    LEFT JOIN 
        orders o ON c.c_custkey = o.o_custkey
    GROUP BY 
        c.c_custkey, c.c_name
), SupplierData AS (
    SELECT 
        s.s_suppkey,
        s.s_name, 
        SUM(ps.ps_availqty) AS total_available,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_value
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey, s.s_name
), MostPopularPart AS (
    SELECT 
        p.p_partkey,
        p.p_name,
        COUNT(l.l_orderkey) AS order_count
    FROM 
        part p
    JOIN 
        lineitem l ON p.p_partkey = l.l_partkey
    GROUP BY 
        p.p_partkey, p.p_name
    ORDER BY 
        order_count DESC
    LIMIT 1
)
SELECT 
    co.c_name,
    co.total_orders,
    co.total_spent,
    sd.s_name AS supplier_name,
    sd.total_available,
    sd.total_supply_value,
    p.p_name AS most_popular_part,
    ROW_NUMBER() OVER (PARTITION BY co.c_custkey ORDER BY co.total_spent DESC) AS rank_within_customer,
    COALESCE(NULLIF(CAST(co.total_spent AS DECIMAL), 0), 'N/A') AS total_spent_formatted
FROM 
    CustomerOrders co
LEFT JOIN 
    SupplierData sd ON sd.total_available > 0
CROSS JOIN 
    MostPopularPart p
WHERE 
    co.total_orders > 0
    AND EXISTS (SELECT 1 FROM orders o WHERE o.o_custkey = co.c_custkey AND o.o_orderdate < DATEADD('YEAR', -1, DATE '1998-10-01'))
ORDER BY 
    co.total_spent DESC, co.c_name ASC;
