
WITH RECURSIVE SupplierHierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, 1 AS level
    FROM supplier s
    WHERE s.s_acctbal IS NOT NULL
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, sh.level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE sh.level < 5
),
TotalOrderValue AS (
    SELECT o.o_orderkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_value
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    GROUP BY o.o_orderkey
),
RankedOrders AS (
    SELECT o.o_orderkey, o.o_orderdate, total.total_value,
           RANK() OVER (PARTITION BY EXTRACT(YEAR FROM o.o_orderdate) ORDER BY total.total_value DESC) AS order_rank
    FROM TotalOrderValue total
    JOIN orders o ON total.o_orderkey = o.o_orderkey
),
NationInfo AS (
    SELECT n.n_nationkey, n.n_name, r.r_name,
           COUNT(DISTINCT s.s_suppkey) AS supplier_count,
           SUM(s.s_acctbal) AS total_bal
    FROM nation n
    JOIN region r ON n.n_regionkey = r.r_regionkey
    LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
    GROUP BY n.n_nationkey, n.n_name, r.r_name
),
FinalOutput AS (
    SELECT n.n_name, r.r_name, ni.supplier_count, ni.total_bal,
           CASE WHEN ni.total_bal IS NULL THEN 'No Balance' ELSE 'Has Balance' END AS balance_status,
           (SELECT AVG(total_value) FROM RankedOrders rr WHERE rr.order_rank = 1) AS avg_top_order_value
    FROM NationInfo ni
    JOIN nation n ON ni.n_nationkey = n.n_nationkey
    JOIN region r ON n.n_regionkey = r.r_regionkey
    WHERE ni.total_bal > (SELECT AVG(total_bal) FROM NationInfo)
)
SELECT fh.n_name, fh.r_name, fh.supplier_count, fh.total_bal, fh.balance_status, fh.avg_top_order_value
FROM FinalOutput fh
WHERE EXISTS (
    SELECT 1
    FROM SupplierHierarchy sh
    WHERE sh.s_nationkey = fh.n_nationkey
) OR fh.supplier_count > 5
ORDER BY fh.r_name, fh.n_name;
