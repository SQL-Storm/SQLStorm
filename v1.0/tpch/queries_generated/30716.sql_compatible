
WITH RECURSIVE SupplierHierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_address, s.n_nationkey, s.s_acctbal, 1 AS level
    FROM supplier s
    JOIN nation n ON s.n_nationkey = n.n_nationkey
    WHERE n.n_name = 'USA'
    
    UNION ALL
    
    SELECT s.s_suppkey, s.s_name, s.s_address, s.n_nationkey, s.s_acctbal + sh.s_acctbal, level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.n_nationkey = sh.n_nationkey
)

SELECT 
    p.p_partkey,
    p.p_name,
    p.p_container,
    SUM(CASE WHEN l.l_discount > 0.05 THEN l.l_extendedprice * (1 - l.l_discount) ELSE l.l_extendedprice END) AS total_revenue,
    ROUND(AVG(l.l_quantity), 2) AS avg_quantity,
    COUNT(DISTINCT o.o_orderkey) AS order_count,
    STRING_AGG(DISTINCT c.c_name, ', ') AS customer_names,
    RANK() OVER (PARTITION BY p.p_type ORDER BY SUM(l.l_extendedprice) DESC) AS price_rank
FROM part p
LEFT JOIN lineitem l ON p.p_partkey = l.l_partkey
LEFT JOIN orders o ON l.l_orderkey = o.o_orderkey
LEFT JOIN customer c ON o.o_custkey = c.c_custkey
LEFT JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
LEFT JOIN supplier s ON ps.ps_suppkey = s.s_suppkey
WHERE l.l_shipdate BETWEEN '1997-01-01' AND '1997-12-31'
AND (s.s_acctbal IS NOT NULL OR s.s_suppkey IN (SELECT ps.ps_suppkey FROM partsupp ps WHERE ps.ps_availqty > 100))
GROUP BY 
    p.p_partkey, 
    p.p_name, 
    p.p_container, 
    p.p_type
HAVING SUM(l.l_extendedprice) > 10000
ORDER BY total_revenue DESC
LIMIT 50;
