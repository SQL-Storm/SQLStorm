WITH SupplierSummary AS (
    SELECT s.s_suppkey, s.s_name, SUM(ps.ps_supplycost * ps.ps_availqty) AS total_cost
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY s.s_suppkey, s.s_name
),
RecentOrders AS (
    SELECT 
        o.o_orderkey, 
        o.o_orderdate, 
        o.o_totalprice, 
        c.c_nationkey,
        ROW_NUMBER() OVER (PARTITION BY c.c_nationkey ORDER BY o.o_orderdate DESC) AS rn
    FROM orders o
    JOIN customer c ON o.o_custkey = c.c_custkey
    WHERE o.o_orderdate >= DATEADD(year, -1, cast('1998-10-01' as date))
),
LineItemAggregates AS (
    SELECT 
        l.l_orderkey, 
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS revenue,
        SUM(l.l_quantity) AS total_quantity,
        COUNT(DISTINCT l.l_partkey) AS unique_parts
    FROM lineitem l
    GROUP BY l.l_orderkey
)
SELECT 
    r.r_name AS region_name,
    SUM(l.revenue) AS total_revenue,
    SUM(s.total_cost) AS supplier_cost,
    AVG(l.total_quantity) AS avg_quantity_per_order,
    COUNT(DISTINCT o.o_orderkey) AS order_count
FROM region r
LEFT JOIN nation n ON r.r_regionkey = n.n_regionkey
LEFT JOIN RecentOrders o ON n.n_nationkey = o.c_nationkey
LEFT JOIN LineItemAggregates l ON o.o_orderkey = l.l_orderkey
LEFT JOIN SupplierSummary s ON l.l_orderkey IN (
    SELECT l_orderkey FROM lineitem WHERE l_orderkey = o.o_orderkey
)
WHERE r.r_name IS NOT NULL
AND (l.revenue IS NOT NULL OR l.total_quantity > 0)
GROUP BY r.r_name
ORDER BY total_revenue DESC
OFFSET 0 ROWS FETCH NEXT 10 ROWS ONLY;