
WITH RankedParts AS (
    SELECT 
        p.p_partkey, 
        p.p_name, 
        p.p_retailprice,
        ROW_NUMBER() OVER (PARTITION BY p.p_brand ORDER BY p.p_retailprice DESC) AS rn
    FROM part p
    WHERE p.p_size IN (SELECT DISTINCT ps.ps_availqty FROM partsupp ps WHERE ps.ps_supplycost > (SELECT AVG(ps2.ps_supplycost) FROM partsupp ps2 WHERE ps2.ps_availqty <= 300))
),
CustomerSummary AS (
    SELECT 
        c.c_custkey, 
        c.c_name, 
        COALESCE(SUM(o.o_totalprice), 0) AS total_spent,
        COUNT(o.o_orderkey) AS order_count
    FROM customer c
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    GROUP BY c.c_custkey, c.c_name
),
SupplierInfo AS (
    SELECT 
        n.n_name AS nation, 
        s.s_name AS supplier_name, 
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_cost
    FROM supplier s
    JOIN nation n ON s.s_nationkey = n.n_nationkey
    LEFT JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY n.n_name, s.s_name
),
FilteredOrders AS (
    SELECT 
        o.o_orderkey, 
        o.o_orderstatus, 
        o.o_orderdate,
        DATEDIFF(o.o_orderdate, DATEADD(YEAR, -2, DATE('1998-10-01'))) AS days_since_order
    FROM orders o
    WHERE o.o_orderstatus IN ('O', 'F') AND 
          o.o_totalprice > (SELECT AVG(o2.o_totalprice) FROM orders o2 WHERE o2.o_orderstatus = 'P')
)
SELECT 
    r.p_partkey, 
    r.p_name, 
    r.p_retailprice,
    cs.c_name, 
    cs.total_spent,
    s.nation, 
    s.supplier_name,
    os.days_since_order
FROM RankedParts r
JOIN CustomerSummary cs ON cs.order_count > (SELECT AVG(order_count) FROM CustomerSummary) 
LEFT JOIN SupplierInfo s ON s.total_supply_cost IS NOT NULL
FULL OUTER JOIN FilteredOrders os ON os.o_orderkey IS NULL 
WHERE (r.rn <= 5 OR r.p_retailprice IS NULL) 
  AND (r.p_retailprice > 1000 OR EXISTS (SELECT 1 FROM FilteredOrders fo WHERE fo.days_since_order < 30))
ORDER BY r.p_partkey, cs.total_spent DESC;
