WITH RankedSuppliers AS (
    SELECT s.s_suppkey, s.s_name, s.s_acctbal,
           ROW_NUMBER() OVER (PARTITION BY s.n_nationkey ORDER BY s.s_acctbal DESC) AS rnk
    FROM supplier s
    JOIN nation n ON s.s_nationkey = n.n_nationkey
    WHERE s.s_acctbal IS NOT NULL
),
OrdersSummary AS (
    SELECT o.o_orderkey, o.o_orderstatus, SUM(li.l_extendedprice * (1 - li.l_discount)) AS total_revenue,
           COUNT(DISTINCT li.l_partkey) AS distinct_parts
    FROM orders o
    JOIN lineitem li ON o.o_orderkey = li.l_orderkey
    GROUP BY o.o_orderkey, o.o_orderstatus
),
SuppliersWithCharges AS (
    SELECT ps.ps_partkey, ps.ps_suppkey, ps.ps_supplycost,
           (ps.ps_supplycost * AVG(li.l_discount) OVER (PARTITION BY ps.ps_partkey)) AS average_cost
    FROM partsupp ps
    LEFT JOIN lineitem li ON ps.ps_partkey = li.l_partkey
)
SELECT r.r_name, 
       COALESCE(s.s_name, 'Unknown Supplier') AS supplier_name, 
       COUNT(DISTINCT os.o_orderkey) AS total_orders,
       SUM(os.total_revenue) AS total_revenue,
       AVG(sc.average_cost) AS avg_cost,
       COUNT(DISTINCT CASE WHEN os.o_orderstatus = 'F' THEN os.o_orderkey END) AS fulfilled_orders
FROM region r
LEFT JOIN nation n ON r.r_regionkey = n.n_regionkey
LEFT JOIN RankedSuppliers s ON n.n_nationkey = s.s_nationkey AND s.rnk = 1
LEFT JOIN OrdersSummary os ON n.n_nationkey = os.o_custkey % 10  
LEFT JOIN SuppliersWithCharges sc ON sc.ps_suppkey = s.s_suppkey
WHERE r.r_name LIKE 'Asia%' AND os.distinct_parts > 5
GROUP BY r.r_name, s.s_name
HAVING total_revenue > 10000
ORDER BY total_revenue DESC
LIMIT 10;