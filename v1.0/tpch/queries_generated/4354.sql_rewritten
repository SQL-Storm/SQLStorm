WITH RankedOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_orderdate,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
        RANK() OVER (PARTITION BY o.o_orderdate ORDER BY SUM(l.l_extendedprice * (1 - l.l_discount)) DESC) AS revenue_rank
    FROM 
        orders o
    JOIN 
        lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE 
        o.o_orderstatus = 'F' 
        AND l.l_shipdate BETWEEN '1997-01-01' AND '1997-12-31'
    GROUP BY 
        o.o_orderkey, o.o_orderdate
),
TopOrders AS (
    SELECT 
        ro.o_orderkey,
        ro.o_orderdate,
        ro.total_revenue
    FROM 
        RankedOrders ro
    WHERE 
        ro.revenue_rank <= 5
),
SupplierDetails AS (
    SELECT
        s.s_suppkey,
        s.s_name,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_cost
    FROM
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    WHERE 
        s.s_acctbal > 50000
    GROUP BY 
        s.s_suppkey, s.s_name
),
OrderSupplier AS (
    SELECT 
        to.o_orderkey,
        sd.s_suppkey,
        sd.s_name,
        SUM(l.l_quantity) AS total_quantity_supplied
    FROM 
        TopOrders to
    JOIN 
        lineitem l ON to.o_orderkey = l.l_orderkey
    JOIN 
        partsupp ps ON l.l_partkey = ps.ps_partkey
    JOIN 
        supplier sd ON ps.ps_suppkey = sd.s_suppkey
    GROUP BY 
        to.o_orderkey, sd.s_suppkey, sd.s_name
)
SELECT 
    os.o_orderkey,
    os.s_suppkey,
    os.s_name,
    os.total_quantity_supplied,
    COALESCE(sd.total_supply_cost, 0) AS total_supply_cost,
    os.total_quantity_supplied * COALESCE(sd.total_supply_cost, 0) AS total_value
FROM 
    OrderSupplier os
LEFT JOIN 
    SupplierDetails sd ON os.s_suppkey = sd.s_suppkey
ORDER BY 
    total_value DESC;