
WITH RankedSuppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_cost,
        ROW_NUMBER() OVER (PARTITION BY s.s_nationkey ORDER BY SUM(ps.ps_supplycost * ps.ps_availqty) DESC) AS rank
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey, s.s_name, s.s_nationkey
),
CustomerOrders AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        SUM(o.o_totalprice) AS total_spent,
        COUNT(o.o_orderkey) AS order_count
    FROM 
        customer c
    LEFT JOIN 
        orders o ON c.c_custkey = o.o_custkey
    GROUP BY 
        c.c_custkey, c.c_name
),
HighValueCustomers AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        c.total_spent,
        c.order_count
    FROM 
        CustomerOrders c
    WHERE 
        c.total_spent > (SELECT AVG(total_spent) FROM CustomerOrders)
),
SupplierMetrics AS (
    SELECT 
        r.r_name,
        SUM(rs.total_supply_cost) AS supply_cost_by_region,
        COUNT(rs.s_suppkey) AS supplier_count
    FROM 
        RankedSuppliers rs
    JOIN 
        nation n ON rs.s_nationkey = n.n_nationkey
    JOIN 
        region r ON n.n_regionkey = r.r_regionkey
    GROUP BY 
        r.r_name
)
SELECT 
    c.c_name,
    COALESCE(sm.supply_cost_by_region, 0) AS supplier_cost,
    COALESCE(sm.supplier_count, 0) AS suppliers_available,
    RANK() OVER (ORDER BY c.total_spent DESC) AS customer_rank
FROM 
    HighValueCustomers c
LEFT JOIN 
    SupplierMetrics sm ON c.c_custkey BETWEEN sm.supplier_count AND sm.supplier_count + 10
WHERE 
    c.order_count > 5
ORDER BY 
    c.total_spent DESC
LIMIT 20;
