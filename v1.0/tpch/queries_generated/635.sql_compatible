
WITH supplier_details AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal, n.n_name AS nation_name
    FROM supplier s
    JOIN nation n ON s.s_nationkey = n.n_nationkey
), enriched_parts AS (
    SELECT p.p_partkey, p.p_name, p.p_brand, p.p_retailprice, 
           COALESCE(ps.ps_availqty, 0) AS ps_availqty, 
           ROUND((p.p_retailprice - COALESCE(ps.ps_supplycost, 0)) * 100.0 / NULLIF(p.p_retailprice, 0), 2) AS price_margin
    FROM part p
    LEFT JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
), order_summary AS (
    SELECT o.o_orderkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
           COUNT(DISTINCT l.l_partkey) AS part_count
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE l.l_shipdate >= DATE '1997-01-01'
    GROUP BY o.o_orderkey
), ranked_orders AS (
    SELECT os.o_orderkey, os.total_revenue, os.part_count,
           RANK() OVER (ORDER BY os.total_revenue DESC) AS revenue_rank
    FROM order_summary os
)

SELECT sd.nation_name, COUNT(DISTINCT ro.o_orderkey) AS order_count,
       SUM(ep.p_retailprice) AS total_retail_value,
       AVG(ep.price_margin) AS avg_price_margin
FROM supplier_details sd
JOIN enriched_parts ep ON ep.p_partkey IN (SELECT ps.ps_partkey 
                                            FROM partsupp ps 
                                            WHERE ps.ps_suppkey = sd.s_suppkey)
LEFT JOIN ranked_orders ro ON ro.o_orderkey IN (
    SELECT l.l_orderkey 
    FROM lineitem l 
    WHERE l.l_suppkey = sd.s_suppkey
)
WHERE sd.s_acctbal > 5000 AND ep.p_retailprice IS NOT NULL
GROUP BY sd.nation_name
HAVING COUNT(DISTINCT ro.o_orderkey) > 10
ORDER BY order_count DESC, avg_price_margin ASC;
