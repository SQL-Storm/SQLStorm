
WITH RECURSIVE SupplierHierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, 0 AS level
    FROM supplier s
    WHERE s.s_acctbal > (SELECT AVG(s_acctbal) FROM supplier)

    UNION ALL

    SELECT s.s_suppkey, s.s_name, s.s_nationkey, sh.level + 1
    FROM supplier s
    INNER JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE s.s_acctbal > (SELECT AVG(s_acctbal) FROM supplier) * (sh.level + 1)
),
PartOrderData AS (
    SELECT p.p_partkey, p.p_name, SUM(l.l_quantity) AS total_quantity,
           AVG(l.l_extendedprice * (1 - l.l_discount)) AS avg_extended_price
    FROM part p
    JOIN lineitem l ON p.p_partkey = l.l_partkey
    WHERE l.l_shipdate >= DATEADD(month, -6, CAST('1998-10-01' AS DATE))
    GROUP BY p.p_partkey, p.p_name
),
HighVolumeOrders AS (
    SELECT o.o_orderkey, SUM(l.l_quantity) AS total_items
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    GROUP BY o.o_orderkey
    HAVING SUM(l.l_quantity) > 100
),
RankedParts AS (
    SELECT p.p_partkey, p.p_name, p.p_type, RANK() OVER (PARTITION BY p.p_type ORDER BY SUM(l.l_quantity) DESC) AS rank
    FROM part p
    JOIN lineitem l ON p.p_partkey = l.l_partkey
    GROUP BY p.p_partkey, p.p_name, p.p_type
)
SELECT DISTINCT
    n.n_name AS nation,
    p.p_name AS part_name,
    pp.total_quantity,
    pp.avg_extended_price,
    COUNT(ho.o_orderkey) AS high_volume_orders,
    COUNT(DISTINCT sh.s_suppkey) AS supplier_count,
    CASE 
        WHEN pp.avg_extended_price IS NULL THEN 'No Sales'
        ELSE 'Sales Available'
    END AS sales_status
FROM nation n
LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
LEFT JOIN SupplierHierarchy sh ON s.s_suppkey = sh.s_suppkey
LEFT JOIN PartOrderData pp ON pp.p_partkey = sh.s_nationkey
LEFT JOIN HighVolumeOrders ho ON ho.o_orderkey IN (
    SELECT o.o_orderkey
    FROM orders o
    WHERE o.o_orderstatus = 'O'
)
JOIN RankedParts rp ON rp.p_partkey = pp.p_partkey
WHERE rp.rank <= 5
GROUP BY n.n_name, p.p_name, pp.total_quantity, pp.avg_extended_price
ORDER BY nation, part_name;
