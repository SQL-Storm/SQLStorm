
WITH RECURSIVE SupplierHierarchy AS (
    SELECT s_suppkey, s_name, s_nationkey, s_acctbal, 1 AS level
    FROM supplier
    WHERE s_acctbal > (SELECT AVG(s_acctbal) FROM supplier)  

    UNION ALL

    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal, sh.level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE s.s_acctbal > sh.s_acctbal  
),

NationStats AS (
    SELECT n.n_nationkey, n.n_name, COUNT(DISTINCT s.s_suppkey) AS supplier_count,
           SUM(s.s_acctbal) AS total_acctbal, AVG(s.s_acctbal) AS avg_acctbal
    FROM nation n
    LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
    GROUP BY n.n_nationkey, n.n_name
),

OrderSummary AS (
    SELECT o.o_orderkey, o.o_orderstatus, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE l.l_shipdate BETWEEN DATE '1997-01-01' AND DATE '1997-12-31'
    GROUP BY o.o_orderkey, o.o_orderstatus
),

ProductSales AS (
    SELECT p.p_partkey, p.p_name, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_sales
    FROM part p
    JOIN lineitem l ON p.p_partkey = l.l_partkey
    WHERE l.l_returnflag = 'N'  
    GROUP BY p.p_partkey, p.p_name
)

SELECT ns.n_name, ns.supplier_count, ns.total_acctbal, ps.total_sales,
       RANK() OVER (PARTITION BY ns.n_name ORDER BY ps.total_sales DESC) AS sales_rank,
       (CASE WHEN ps.total_sales IS NULL THEN 'No Sales' 
             ELSE ROUND(ps.total_sales / NULLIF(ns.supplier_count, 0), 2) END) AS avg_sales_per_supplier
FROM NationStats ns
LEFT JOIN ProductSales ps ON ns.n_nationkey = (SELECT s_nationkey FROM supplier s WHERE s.s_suppkey = ps.p_partkey)
WHERE ns.supplier_count > 5
ORDER BY ns.n_name, sales_rank;
