
WITH RECURSIVE CustomerHierarchy AS (
    SELECT c.c_custkey, c.c_name, c.c_nationkey, 1 AS Level
    FROM customer c
    WHERE c.c_acctbal > (SELECT AVG(c1.c_acctbal) FROM customer c1)
  
    UNION ALL
  
    SELECT c.c_custkey, c.c_name, c.c_nationkey, ch.Level + 1
    FROM customer c
    JOIN CustomerHierarchy ch ON c.c_nationkey = ch.c_nationkey
    WHERE ch.Level < 5
),
SupplierSales AS (
    SELECT ps.s_suppkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS TotalSales
    FROM partsupp ps
    JOIN lineitem l ON ps.ps_partkey = l.l_partkey
    GROUP BY ps.s_suppkey
),
RegionSummary AS (
    SELECT r.r_name, COUNT(DISTINCT n.n_nationkey) AS NationCount
    FROM region r
    LEFT JOIN nation n ON r.r_regionkey = n.n_regionkey
    GROUP BY r.r_name
),
OrderDetails AS (
    SELECT o.o_orderkey, c.c_name, SUM(l.l_extendedprice * (1 - l.l_discount)) AS OrderTotal
    FROM orders o
    JOIN customer c ON o.o_custkey = c.c_custkey
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    GROUP BY o.o_orderkey, c.c_name
),
StatisticalAnalysis AS (
    SELECT 
        o.c_name,
        AVG(o.OrderTotal) AS AvgOrderValue,
        MAX(o.OrderTotal) AS MaxOrderValue,
        MIN(o.OrderTotal) AS MinOrderValue
    FROM OrderDetails o
    GROUP BY o.c_name
)
SELECT rh.Level AS HierarchyLevel, 
       rs.r_name,
       rs.NationCount, 
       sa.TotalSales, 
       st.AvgOrderValue, 
       st.MaxOrderValue, 
       st.MinOrderValue
FROM CustomerHierarchy rh
JOIN RegionSummary rs ON rs.NationCount > 1
LEFT JOIN SupplierSales sa ON rh.c_nationkey = sa.s_suppkey
LEFT JOIN StatisticalAnalysis st ON rh.c_name = st.c_name
WHERE (st.MaxOrderValue IS NOT NULL OR sa.TotalSales IS NOT NULL)
AND rs.r_name LIKE '%North%'
ORDER BY rh.Level, rs.r_name;
