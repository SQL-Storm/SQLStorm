WITH RECURSIVE SupplierHierarchy AS (
    SELECT s_suppkey, s_name, s_nationkey, s_acctbal, 1 AS level
    FROM supplier 
    WHERE s_acctbal > 1000
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal, sh.level + 1
    FROM supplier s
    INNER JOIN SupplierHierarchy sh ON sh.s_suppkey = s.s_suppkey
    WHERE s.s_acctbal > 0
),
NationSupplierCount AS (
    SELECT n.n_regionkey, n.n_name, COUNT(DISTINCT s.s_suppkey) AS num_suppliers
    FROM nation n
    LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
    GROUP BY n.n_regionkey, n.n_name
),
LineItemSummary AS (
    SELECT l.l_orderkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_sales
    FROM lineitem l
    GROUP BY l.l_orderkey
),
OrderSummary AS (
    SELECT o.o_orderkey, o.o_totalprice, l.total_sales
    FROM orders o
    LEFT JOIN LineItemSummary l ON o.o_orderkey = l.l_orderkey
    WHERE o.o_orderdate > '1997-01-01' AND o.o_orderstatus = 'O'
),
SupplierPerformance AS (
    SELECT s.s_suppkey, s.s_name, SUM(ps.ps_supplycost) AS total_supply_cost
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY s.s_suppkey, s.s_name
)
SELECT 
    nsc.n_name AS nation_name, 
    nsc.num_suppliers, 
    sp.s_name AS supplier_name, 
    sp.total_supply_cost, 
    COALESCE(o.o_totalprice, 0) AS order_total_price,
    COALESCE(os.total_sales, 0) AS order_sales,
    ROW_NUMBER() OVER (PARTITION BY nsc.n_name ORDER BY sp.total_supply_cost DESC) AS supplier_rank
FROM NationSupplierCount nsc 
LEFT JOIN SupplierPerformance sp ON nsc.n_regionkey = sp.s_suppkey 
LEFT JOIN OrderSummary os ON os.o_orderkey = sp.s_suppkey
WHERE nsc.num_suppliers > 5 
ORDER BY nsc.n_name, supplier_rank;