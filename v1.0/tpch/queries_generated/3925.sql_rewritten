WITH RankedParts AS (
    SELECT 
        p.p_partkey,
        p.p_name,
        p.p_retailprice,
        ROW_NUMBER() OVER (PARTITION BY p.p_brand ORDER BY p.p_retailprice DESC) AS rank_price
    FROM 
        part p
    WHERE 
        p.p_retailprice > 0
),
HighValueSupp AS (
    SELECT 
        ps.ps_partkey,
        SUM(ps.ps_availqty) AS total_quantity,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_cost
    FROM 
        partsupp ps
    GROUP BY 
        ps.ps_partkey
    HAVING 
        SUM(ps.ps_supplycost * ps.ps_availqty) > 10000
),
CustomerSales AS (
    SELECT 
        c.c_custkey,
        SUM(o.o_totalprice) AS total_spent,
        COUNT(DISTINCT o.o_orderkey) AS order_count
    FROM 
        customer c
    JOIN 
        orders o ON c.c_custkey = o.o_custkey
    GROUP BY 
        c.custkey
)
SELECT 
    rp.p_partkey,
    rp.p_name,
    rp.p_retailprice,
    COALESCE(hv.total_quantity, 0) AS available_quantity,
    COALESCE(hv.total_supply_cost, 0) AS total_supply_cost,
    cs.total_spent,
    cs.order_count
FROM 
    RankedParts rp
LEFT JOIN 
    HighValueSupp hv ON rp.p_partkey = hv.ps_partkey
LEFT JOIN 
    CustomerSales cs ON cs.total_spent IS NOT NULL AND rp.p_partkey IN (
        SELECT 
            l.l_partkey 
        FROM 
            lineitem l 
        JOIN 
            orders o ON l.l_orderkey = o.o_orderkey
        WHERE 
            o.o_orderdate >= DATE '1997-01-01' 
            AND o.o_orderdate < DATE '1997-10-01'
    )
WHERE 
    rp.rank_price <= 5
ORDER BY 
    rp.p_retailprice DESC, cs.total_spent DESC;