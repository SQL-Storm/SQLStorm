WITH RankedOrders AS (
    SELECT 
        o.o_orderkey, 
        o.o_orderdate, 
        o.o_totalprice, 
        o.o_orderstatus,
        ROW_NUMBER() OVER (PARTITION BY o.o_orderstatus ORDER BY o.o_totalprice DESC) as rank,
        c.c_nationkey
    FROM 
        orders o
    JOIN 
        customer c ON o.o_custkey = c.c_custkey
    WHERE 
        o.o_orderdate BETWEEN DATE '1997-01-01' AND DATE '1997-12-31'
),
SuppliersWithHighCost AS (
    SELECT 
        ps.ps_partkey, 
        ps.ps_suppkey, 
        SUM(ps.ps_supplycost) AS total_supply_cost
    FROM 
        partsupp ps
    GROUP BY 
        ps.ps_partkey, ps.ps_suppkey
    HAVING 
        SUM(ps.ps_supplycost) > 5000
),
FilteredLineItems AS (
    SELECT 
        li.l_orderkey, 
        SUM(li.l_extendedprice * (1 - li.l_discount)) AS revenue
    FROM 
        lineitem li
    WHERE 
        li.l_shipdate >= '1997-01-01' AND li.l_shipdate <= '1997-12-31'
    GROUP BY 
        li.l_orderkey
)
SELECT 
    r.r_name AS region_name,
    COUNT(DISTINCT o.o_orderkey) AS total_orders,
    COALESCE(SUM(f.revenue), 0) AS total_revenue,
    COUNT(DISTINCT s.s_suppkey) FILTER (WHERE s.s_acctbal IS NOT NULL) AS total_suppliers,
    COUNT(DISTINCT c.c_custkey) AS total_customers,
    MAX(o.o_totalprice) AS max_order_value
FROM 
    RankedOrders o
LEFT JOIN 
    nation n ON o.c_nationkey = n.n_nationkey
LEFT JOIN 
    region r ON n.n_regionkey = r.r_regionkey
LEFT JOIN 
    FilteredLineItems f ON f.l_orderkey = o.o_orderkey
LEFT JOIN 
    SuppliersWithHighCost s ON s.ps_partkey = o.o_orderkey
WHERE 
    o.rank = 1
GROUP BY 
    r.r_name
ORDER BY 
    total_orders DESC, total_revenue DESC;