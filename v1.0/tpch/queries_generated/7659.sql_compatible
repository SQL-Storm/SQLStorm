
WITH RankedSuppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        s.s_nationkey,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_cost,
        ROW_NUMBER() OVER (PARTITION BY n.n_name ORDER BY SUM(ps.ps_supplycost * ps.ps_availqty) DESC) AS rank
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    JOIN 
        nation n ON s.s_nationkey = n.n_nationkey
    GROUP BY 
        s.s_suppkey, s.s_name, s.s_nationkey, n.n_name
),
FilteredSuppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        n.n_name,
        s.s_acctbal
    FROM 
        RankedSuppliers s
    JOIN 
        nation n ON s.s_nationkey = n.n_nationkey
    WHERE 
        s.rank <= 3
),
PartSupplierSummary AS (
    SELECT 
        p.p_partkey,
        p.p_name,
        COUNT(DISTINCT ps.ps_suppkey) AS supplier_count,
        AVG(ps.ps_supplycost) AS avg_supplycost,
        MAX(ps.ps_availqty) AS max_availqty
    FROM 
        part p
    JOIN 
        partsupp ps ON p.p_partkey = ps.ps_partkey
    GROUP BY 
        p.p_partkey, p.p_name
)
SELECT 
    f.s_suppkey,
    f.s_name,
    n.n_name AS supplier_nation,
    p.p_partkey,
    p.p_name,
    p.supplier_count,
    p.avg_supplycost,
    p.max_availqty,
    f.s_acctbal
FROM 
    FilteredSuppliers f
JOIN 
    PartSupplierSummary p ON f.s_suppkey = p.p_partkey
JOIN 
    nation n ON f.s_nationkey = n.n_nationkey
ORDER BY 
    n.n_name, f.s_name, p.p_partkey;
