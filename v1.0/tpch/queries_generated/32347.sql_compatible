
WITH RECURSIVE SupplierHierarchy AS (
    SELECT s_suppkey, s_name, s_nationkey, 0 AS level
    FROM supplier
    WHERE s_acctbal > (SELECT AVG(s_acctbal) FROM supplier)
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, sh.level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE sh.level < 3
),
AvailableParts AS (
    SELECT p.p_partkey, p.p_name, SUM(ps.ps_availqty) AS total_availqty
    FROM part p
    JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
    GROUP BY p.p_partkey, p.p_name
),
HighlyAvailableParts AS (
    SELECT ap.p_partkey, ap.p_name
    FROM AvailableParts ap
    WHERE ap.total_availqty > (SELECT AVG(total_availqty) FROM AvailableParts)
),
RecentOrders AS (
    SELECT o.o_orderkey, o.o_orderdate, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE o.o_orderdate >= DATE '1998-10-01' - INTERVAL '30 days'
    GROUP BY o.o_orderkey, o.o_orderdate
)
SELECT n.n_name, COUNT(DISTINCT s.s_suppkey) AS supplier_count,
       COUNT(DISTINCT hr.p_partkey) AS highly_available_count,
       SUM(ro.total_revenue) AS total_recent_revenue
FROM nation n
LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
LEFT JOIN SupplierHierarchy sh ON s.s_suppkey = sh.s_suppkey
LEFT JOIN HighlyAvailableParts hr ON sh.s_nationkey IN (SELECT n_nationkey FROM nation)
LEFT JOIN RecentOrders ro ON s.s_suppkey IN (SELECT ps.ps_suppkey FROM partsupp ps WHERE ps.ps_partkey IN (SELECT p.p_partkey FROM part p))
WHERE s.s_acctbal IS NOT NULL
GROUP BY n.n_name
ORDER BY total_recent_revenue DESC
LIMIT 10;
