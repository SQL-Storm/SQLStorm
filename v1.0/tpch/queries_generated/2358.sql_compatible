
WITH RankedOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_orderdate,
        o.o_totalprice,
        ROW_NUMBER() OVER (PARTITION BY o.o_orderdate ORDER BY o.o_totalprice DESC) AS OrderRank
    FROM 
        orders o
    WHERE 
        o.o_orderdate BETWEEN '1997-01-01' AND '1997-12-31'
),
CustomerSpending AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        SUM(o.o_totalprice) AS TotalSpent
    FROM 
        customer c
    JOIN 
        orders o ON c.c_custkey = o.o_custkey
    GROUP BY 
        c.c_custkey, c.c_name
    HAVING 
        SUM(o.o_totalprice) > 1000
),
SupplierPartInfo AS (
    SELECT 
        ps.ps_partkey,
        s.s_name,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS TotalSupplyCost
    FROM 
        partsupp ps
    JOIN 
        supplier s ON ps.ps_suppkey = s.s_suppkey
    GROUP BY 
        ps.ps_partkey, s.s_name
),
TopParts AS (
    SELECT 
        p.p_partkey,
        p.p_name,
        SUM(l.l_quantity) AS TotalQuantitySold
    FROM 
        lineitem l
    JOIN 
        part p ON l.l_partkey = p.p_partkey
    GROUP BY 
        p.p_partkey, p.p_name
    ORDER BY 
        TotalQuantitySold DESC
    LIMIT 10
)
SELECT 
    r.o_orderkey,
    r.o_orderdate,
    c.c_name AS CustomerName,
    c.TotalSpent AS CustomerTotalSpent,
    s.s_name AS SupplierName,
    p.p_name AS PartName,
    tp.TotalQuantitySold,
    COALESCE(sp.TotalSupplyCost, 0) AS SupplierTotalCost
FROM 
    RankedOrders r
LEFT JOIN 
    CustomerSpending c ON r.o_orderkey IN (SELECT o.o_orderkey FROM orders o WHERE o.o_custkey = c.c_custkey)
LEFT JOIN 
    TopParts tp ON r.o_orderkey IN (SELECT l.l_orderkey FROM lineitem l JOIN part p ON l.l_partkey = p.p_partkey WHERE p.p_partkey = tp.p_partkey)
LEFT JOIN 
    SupplierPartInfo sp ON tp.p_partkey = sp.ps_partkey
LEFT JOIN 
    supplier s ON s.s_suppkey = sp.ps_suppkey
WHERE 
    r.OrderRank <= 5
ORDER BY 
    r.o_orderdate, c.TotalSpent DESC;
