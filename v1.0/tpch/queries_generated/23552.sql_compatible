
WITH RegionalSummary AS (
    SELECT
        r.r_regionkey,
        r.r_name,
        SUM(s.s_acctbal) AS total_supplier_acctbal,
        COUNT(DISTINCT s.s_suppkey) AS unique_suppliers,
        ROW_NUMBER() OVER (PARTITION BY r.r_regionkey ORDER BY SUM(s.s_acctbal) DESC) AS region_rank
    FROM
        region r
    JOIN
        nation n ON r.r_regionkey = n.n_regionkey
    JOIN
        supplier s ON n.n_nationkey = s.s_nationkey
    GROUP BY
        r.r_regionkey, r.r_name
),
HighValueCustomers AS (
    SELECT
        c.c_custkey,
        c.c_name,
        c.c_acctbal,
        CASE
            WHEN c.c_acctbal > (SELECT AVG(c_acctbal) FROM customer) THEN 'Above Average'
            ELSE 'Below Average'
        END AS acctbal_category
    FROM
        customer c
    WHERE
        c.c_acctbal IS NOT NULL AND c.c_acctbal > 0
),
PartSupplierDetails AS (
    SELECT
        p.p_partkey,
        p.p_name,
        SUM(ps.ps_availqty) AS total_available,
        MAX(ps.ps_supplycost) AS max_supply_cost,
        p.p_retailprice
    FROM
        part p
    JOIN
        partsupp ps ON p.p_partkey = ps.ps_partkey
    GROUP BY
        p.p_partkey, p.p_name, p.p_retailprice
),
LineitemAnalysis AS (
    SELECT
        l.l_orderkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
        COUNT(DISTINCT l.l_returnflag) AS return_flags_count,
        COUNT(*) OVER (PARTITION BY l.l_orderkey) AS lineitem_count
    FROM
        lineitem l
    WHERE
        l.l_shipdate > (DATE '1998-10-01' - INTERVAL '2 years')
    GROUP BY
        l.l_orderkey
)
SELECT
    r.r_name AS region_name,
    r.total_supplier_acctbal,
    r.unique_suppliers,
    c.c_name AS customer_name,
    c.acctbal_category,
    p.p_name AS part_name,
    COALESCE(pd.total_available, 0) AS total_available_parts,
    la.total_revenue AS order_total_revenue,
    la.lineitem_count,
    CASE WHEN la.total_revenue IS NULL THEN 'No Revenue' ELSE 'Revenue Available' END AS revenue_status
FROM
    RegionalSummary r
LEFT JOIN
    HighValueCustomers c ON r.unique_suppliers > 5
LEFT JOIN
    PartSupplierDetails pd ON r.unique_suppliers > 3
LEFT JOIN
    LineitemAnalysis la ON la.total_revenue > 1000
WHERE
    r.region_rank <= 3
ORDER BY
    r.total_supplier_acctbal DESC, c.c_acctbal DESC;
