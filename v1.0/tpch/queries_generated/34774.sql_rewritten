WITH RECURSIVE SupplierHierarchy AS (
    SELECT s_suppkey, s_name, s_acctbal, s_nationkey, 0 AS level
    FROM supplier
    WHERE s_acctbal > (SELECT AVG(s_acctbal) FROM supplier)
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_acctbal, s.s_nationkey, sh.level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE s.s_acctbal > (SELECT AVG(s_acctbal) FROM supplier)
),
OrderSummary AS (
    SELECT o.o_orderkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
           RANK() OVER (PARTITION BY o.o_orderkey ORDER BY SUM(l.l_extendedprice * (1 - l.l_discount)) DESC) AS order_rank
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE o.o_orderdate BETWEEN '1997-01-01' AND '1997-12-31'
    GROUP BY o.o_orderkey
),
TopOrders AS (
    SELECT os.o_orderkey, os.total_revenue
    FROM OrderSummary os
    WHERE os.order_rank <= 10
),
PartSupplier AS (
    SELECT p.p_partkey, COUNT(*) AS supplier_count, MAX(ps.ps_supplycost) AS max_supply_cost
    FROM part p
    LEFT JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
    GROUP BY p.p_partkey
)
SELECT
    r.r_name AS region,
    n.n_name AS nation,
    SUM(COALESCE(ts.total_revenue, 0)) AS total_order_revenue,
    SUM(ps.supplier_count) AS total_suppliers,
    COUNT(DISTINCT sh.s_suppkey) AS high_balance_suppliers
FROM region r
JOIN nation n ON r.r_regionkey = n.n_regionkey
LEFT JOIN TopOrders ts ON ts.o_orderkey IN (
    SELECT o.o_orderkey
    FROM orders o
    WHERE o.o_custkey IN (SELECT c.c_custkey FROM customer c WHERE c.c_nationkey = n.n_nationkey)
)
LEFT JOIN PartSupplier ps ON ps.p_partkey IN (
    SELECT l.l_partkey
    FROM lineitem l
    WHERE l.l_shipdate > '1997-01-01'
) 
LEFT JOIN SupplierHierarchy sh ON sh.s_nationkey = n.n_nationkey
GROUP BY r.r_name, n.n_name
HAVING COUNT(DISTINCT sh.s_suppkey) > 0
ORDER BY total_order_revenue DESC, total_suppliers DESC;