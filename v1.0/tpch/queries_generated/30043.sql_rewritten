WITH RECURSIVE SupplierHierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, 1 AS level
    FROM supplier s
    WHERE s.s_acctbal > 0
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, sh.level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE sh.level < 5
),
OrderSummary AS (
    SELECT o.o_orderkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE o.o_orderstatus = 'O' AND l.l_shipdate < cast('1998-10-01' as date) - INTERVAL '3 months'
    GROUP BY o.o_orderkey
),
TopSuppliers AS (
    SELECT ps.ps_partkey, SUM(ps.ps_supplycost) AS total_supplycost
    FROM partsupp ps
    WHERE ps.ps_availqty > (
        SELECT AVG(ps1.ps_availqty) 
        FROM partsupp ps1
        WHERE ps1.ps_partkey = ps.ps_partkey
    ) 
    GROUP BY ps.ps_partkey
    HAVING total_supplycost > 1000
),
CustomerPurchase AS (
    SELECT c.c_custkey, COUNT(DISTINCT o.o_orderkey) AS order_count
    FROM customer c
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    WHERE c.c_acctbal IS NOT NULL AND c.c_mktsegment = 'BUILDING'
    GROUP BY c.c_custkey
)
SELECT p.p_name, 
       s.s_name AS supplier_name, 
       r.r_name AS region_name, 
       c.c_name AS customer_name, 
       os.total_revenue, 
       COALESCE(cp.order_count, 0) AS customer_orders
FROM part p
JOIN TopSuppliers ts ON p.p_partkey = ts.ps_partkey
LEFT JOIN supplier s ON s.s_suppkey = ts.ps_suppkey
JOIN nation n ON s.s_nationkey = n.n_nationkey
JOIN region r ON n.n_regionkey = r.r_regionkey
LEFT JOIN CustomerPurchase cp ON cp.c_custkey = o.o_custkey
JOIN OrderSummary os ON os.o_orderkey IN (SELECT o.o_orderkey FROM orders o WHERE o.o_custkey = cp.c_custkey)
WHERE r.r_name LIKE 'N%' 
  AND s.s_acctbal > (
    SELECT AVG(s1.s_acctbal) 
    FROM supplier s1
    WHERE s1.s_nationkey = s.s_nationkey
)
ORDER BY total_revenue DESC, customer_orders DESC;