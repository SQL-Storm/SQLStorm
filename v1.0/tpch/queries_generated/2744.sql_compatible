
WITH RankedSuppliers AS (
    SELECT 
        ps.ps_partkey,
        s.s_suppkey,
        s.s_name,
        s.s_acctbal,
        ROW_NUMBER() OVER (PARTITION BY ps.ps_partkey ORDER BY s.s_acctbal DESC) AS rank
    FROM 
        partsupp ps
    JOIN 
        supplier s ON ps.ps_suppkey = s.s_suppkey
),
CustomerOrders AS (
    SELECT 
        c.c_custkey,
        SUM(o.o_totalprice) AS total_spent,
        COUNT(o.o_orderkey) AS order_count
    FROM 
        customer c
    JOIN 
        orders o ON c.c_custkey = o.o_custkey
    WHERE 
        o.o_orderstatus = 'O'
    GROUP BY 
        c.c_custkey
),
HighValueCustomers AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        c.c_acctbal
    FROM 
        customer c
    WHERE 
        c.c_acctbal IS NOT NULL AND c.c_acctbal > (SELECT AVG(c_acctbal) FROM customer)
)
SELECT 
    p.p_name,
    p.p_retailprice,
    COALESCE(s.s_name, 'No Supplier') AS supplier_name,
    COALESCE(c.c_name, 'No Customer') AS customer_name,
    COALESCE(cvc.total_spent, 0) AS customer_total_spent,
    COUNT(DISTINCT li.l_orderkey) AS order_count,
    SUM(li.l_extendedprice * (1 - li.l_discount)) AS total_revenue
FROM 
    part p
LEFT JOIN 
    lineitem li ON p.p_partkey = li.l_partkey
LEFT JOIN 
    RankedSuppliers s ON p.p_partkey = s.ps_partkey AND s.rank = 1
LEFT JOIN 
    CustomerOrders co ON co.c_custkey = li.l_suppkey
LEFT JOIN 
    HighValueCustomers cvc ON li.l_suppkey = cvc.c_custkey
LEFT JOIN 
    customer c ON c.c_custkey = li.l_orderkey
WHERE 
    p.p_retailprice BETWEEN 10 AND 100
GROUP BY 
    p.p_name, p.p_retailprice, s.s_name, c.c_name, cvc.total_spent
HAVING 
    SUM(li.l_extendedprice * (1 - li.l_discount)) > 1000
ORDER BY 
    total_revenue DESC;
