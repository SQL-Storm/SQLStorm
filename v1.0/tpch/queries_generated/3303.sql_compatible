
WITH SupplierAggregate AS (
    SELECT s.s_suppkey,
           s.s_name,
           SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_cost,
           COUNT(DISTINCT ps.ps_partkey) AS part_count
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY s.s_suppkey, s.s_name
),
CustomerOrderDetails AS (
    SELECT c.c_custkey,
           c.c_name,
           SUM(o.o_totalprice) AS total_spent,
           COUNT(o.o_orderkey) AS order_count
    FROM customer c
    JOIN orders o ON c.c_custkey = o.o_custkey
    WHERE o.o_orderstatus = 'O' 
    GROUP BY c.c_custkey, c.c_name
)
SELECT 
    r.r_name AS region_name,
    COALESCE(s.s_name, 'No Supplier') AS supplier_name,
    COALESCE(c.c_name, 'No Customer') AS customer_name,
    sa.total_supply_cost,
    ca.total_spent,
    (CASE 
         WHEN sa.total_supply_cost IS NULL THEN 'No Supply'
         WHEN ca.total_spent IS NULL THEN 'No Orders'
         ELSE 'Active' 
     END) AS status,
    CONCAT('Total Supply Cost: $', COALESCE(CAST(sa.total_supply_cost AS VARCHAR), '0'), 
           ', Total Spent: $', COALESCE(CAST(ca.total_spent AS VARCHAR), '0')) AS transaction_summary
FROM region r
LEFT JOIN nation n ON n.n_regionkey = r.r_regionkey
LEFT JOIN supplier s ON s.s_nationkey = n.n_nationkey
FULL OUTER JOIN CustomerOrderDetails ca ON ca.c_custkey = s.s_suppkey
LEFT JOIN SupplierAggregate sa ON sa.s_suppkey = s.s_suppkey
WHERE (sa.part_count > 1 OR sa.total_supply_cost IS NOT NULL)
   OR (ca.order_count > 0)
ORDER BY region_name, supplier_name, customer_name;
