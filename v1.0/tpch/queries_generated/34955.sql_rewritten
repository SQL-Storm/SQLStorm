WITH RECURSIVE nation_hierarchy AS (
    SELECT n_nationkey, n_name, n_regionkey, 0 AS depth
    FROM nation
    WHERE n_regionkey = (SELECT r_regionkey FROM region WHERE r_name = 'ASIA')
    UNION ALL
    SELECT n.n_nationkey, n.n_name, n.n_regionkey, nh.depth + 1
    FROM nation n
    JOIN nation_hierarchy nh ON n.n_regionkey = nh.n_nationkey
),
supplier_summary AS (
    SELECT s.s_suppkey, s.s_name, SUM(ps.ps_availqty) AS total_avail_qty, SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_cost
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY s.s_suppkey, s.s_name
),
customer_order AS (
    SELECT c.c_custkey, c.c_name, COUNT(o.o_orderkey) AS order_count, SUM(o.o_totalprice) AS total_spent
    FROM customer c
    JOIN orders o ON c.c_custkey = o.o_custkey
    WHERE o.o_orderdate >= '1997-01-01' AND o.o_orderstatus IN ('O', 'F')
    GROUP BY c.c_custkey, c.c_name
)
SELECT n.n_name AS nation_name, 
       ss.s_name AS supplier_name,
       co.c_name AS customer_name,
       SUM(li.l_extendedprice * (1 - li.l_discount)) AS revenue,
       ROW_NUMBER() OVER (PARTITION BY n.n_name ORDER BY SUM(li.l_extendedprice * (1 - li.l_discount)) DESC) AS revenue_rank
FROM lineitem li
JOIN orders o ON li.l_orderkey = o.o_orderkey
JOIN customer_order co ON co.c_custkey = o.o_custkey
JOIN supplier_summary ss ON ss.s_suppkey = li.l_suppkey
JOIN nation_hierarchy n ON n.n_nationkey = ss.s_suppkey
WHERE li.l_shipdate BETWEEN '1997-01-01' AND '1997-12-31' 
  AND li.l_returnflag IS NULL
GROUP BY n.n_name, ss.s_name, co.c_name
HAVING revenue > (
    SELECT AVG(total_spent) FROM customer_order
) 
ORDER BY n.n_name, revenue DESC
LIMIT 10;