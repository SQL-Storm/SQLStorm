WITH RECURSIVE SupplierHierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, 0 AS level
    FROM supplier s
    WHERE s.s_comment IS NOT NULL
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, sh.level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE sh.level < 2
), PartPricing AS (
    SELECT p.p_partkey, p.p_name, SUM(ps.ps_supplycost * ps.ps_availqty) AS total_cost
    FROM part p
    JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
    GROUP BY p.p_partkey, p.p_name
), HighValueOrders AS (
    SELECT o.o_orderkey, o.o_orderdate, o.o_totalprice, o.o_orderstatus
    FROM orders o
    WHERE o.o_totalprice > (SELECT AVG(o2.o_totalprice) FROM orders o2)
), OrderDetails AS (
    SELECT l.l_orderkey, l.l_partkey, l.l_quantity, l.l_discount, l.l_extendedprice,
           ROW_NUMBER() OVER (PARTITION BY l.l_orderkey ORDER BY l.l_linenumber) AS line_position
    FROM lineitem l
    WHERE l.l_shipdate >= '1997-01-01' AND l.l_shipdate <= '1997-12-31'
)
SELECT
    oh.o_orderkey,
    oh.o_orderdate,
    hvc.total_cost,
    RANK() OVER (PARTITION BY oh.o_orderkey ORDER BY hvc.total_cost DESC) AS price_rank,
    SUM(od.l_extendedprice * (1 - od.l_discount)) AS total_lineitem_value,
    COUNT(od.l_partkey) AS total_items
FROM HighValueOrders oh
LEFT JOIN PartPricing hvc ON oh.o_orderkey = (SELECT l.l_orderkey FROM lineitem l WHERE l.l_orderkey = oh.o_orderkey LIMIT 1)
LEFT JOIN OrderDetails od ON oh.o_orderkey = od.l_orderkey
JOIN SupplierHierarchy sh ON sh.s_nationkey = (SELECT c.c_nationkey FROM customer c WHERE c.c_custkey = oh.o_custkey)
WHERE (oh.o_orderstatus IS NOT NULL OR oh.o_orderstatus = 'F')
GROUP BY oh.o_orderkey, oh.o_orderdate, hvc.total_cost
HAVING SUM(od.l_quantity) > 100 AND COUNT(DISTINCT sh.s_suppkey) > 1
ORDER BY total_lineitem_value DESC, price_rank ASC
LIMIT 50;