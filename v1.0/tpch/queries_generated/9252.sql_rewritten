WITH ranked_orders AS (
    SELECT 
        o.o_orderkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
        RANK() OVER (PARTITION BY c.c_mktsegment ORDER BY SUM(l.l_extendedprice * (1 - l.l_discount)) DESC) AS revenue_rank
    FROM 
        orders o
    JOIN 
        customer c ON o.o_custkey = c.c_custkey
    JOIN 
        lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE 
        o.o_orderdate BETWEEN '1997-01-01' AND '1997-12-31'
    GROUP BY 
        o.o_orderkey, c.c_mktsegment
),
top_segments AS (
    SELECT 
        c.c_mktsegment,
        COUNT(*) AS order_count
    FROM 
        ranked_orders r
    JOIN 
        customer c ON r.o_orderkey = o.o_orderkey
    WHERE 
        r.revenue_rank <= 10
    GROUP BY 
        c.c_mktsegment
)
SELECT 
    s.s_name,
    SUM(ps.ps_supplycost * ps.ps_availqty) AS total_cost,
    COUNT(DISTINCT o.o_orderkey) AS order_count
FROM 
    supplier s
JOIN 
    partsupp ps ON s.s_suppkey = ps.ps_suppkey
JOIN 
    lineitem l ON ps.ps_partkey = l.l_partkey
JOIN 
    orders o ON l.l_orderkey = o.o_orderkey
JOIN 
    top_segments ts ON o.o_custkey = ts.c_custkey
WHERE 
    s.s_acctbal > 1000
GROUP BY 
    s.s_name
HAVING 
    COUNT(DISTINCT o.o_orderkey) > 5
ORDER BY 
    total_cost DESC, order_count DESC;