
WITH RECURSIVE SupplierHierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, 1 AS level
    FROM supplier s
    WHERE s.s_acctbal > (SELECT AVG(s_acctbal) FROM supplier)
    
    UNION ALL
    
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, sh.level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE s.s_acctbal > (SELECT AVG(s_acctbal) FROM supplier)
),
NationAggregate AS (
    SELECT n.n_nationkey, n.n_name, COUNT(DISTINCT s.s_suppkey) AS supplier_count
    FROM nation n
    LEFT JOIN supplier s ON n.n_nationkey = s.s_nationkey
    GROUP BY n.n_nationkey, n.n_name
),
HighValueOrders AS (
    SELECT o.o_orderkey, SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_value
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE o.o_orderstatus = 'O'
    GROUP BY o.o_orderkey
    HAVING SUM(l.l_extendedprice * (1 - l.l_discount)) > 10000
)
SELECT 
    n.n_name AS Nation,
    COALESCE(sa.supplier_count, 0) AS Total_Suppliers,
    COUNT(DISTINCT o.o_orderkey) AS Total_Orders,
    SUM(CASE 
        WHEN o.o_orderdate > DATE '1998-10-01' - INTERVAL '30 days' 
        THEN ho.total_value 
        ELSE 0 
    END) AS Recent_High_Value_Orders
FROM NationAggregate sa
LEFT JOIN HighValueOrders ho ON ho.o_orderkey IN (SELECT o.o_orderkey FROM orders o)
JOIN nation n ON n.n_nationkey = sa.n_nationkey
LEFT JOIN orders o ON o.o_custkey IN (SELECT c.c_custkey FROM customer c WHERE c.c_nationkey = n.n_nationkey)
GROUP BY n.n_nationkey, n.n_name, sa.supplier_count
ORDER BY Total_Suppliers DESC, Recent_High_Value_Orders DESC
LIMIT 10;
