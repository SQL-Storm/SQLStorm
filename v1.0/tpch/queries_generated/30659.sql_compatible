
WITH RECURSIVE SupplierHierarchy AS (
    SELECT s_suppkey, s_name, s_nationkey, s_acctbal, 1 AS level
    FROM supplier
    WHERE s_acctbal >= 1000
    
    UNION ALL
    
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal, sh.level + 1
    FROM supplier s
    INNER JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE s.s_acctbal < sh.s_acctbal
),
CustomerOrderSummary AS (
    SELECT c.c_custkey, c.c_name, COUNT(o.o_orderkey) AS total_orders,
           SUM(o.o_totalprice) AS total_spent, ROW_NUMBER() OVER (PARTITION BY c.c_custkey ORDER BY SUM(o.o_totalprice) DESC) AS order_rank
    FROM customer c
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    GROUP BY c.c_custkey, c.c_name
),
AvgSupplierActivity AS (
    SELECT ps.ps_partkey, AVG(ps.ps_supplycost) AS avg_supply_cost
    FROM partsupp ps
    GROUP BY ps.ps_partkey
)
SELECT p.p_name, 
       p.p_retailprice, 
       COALESCE(AVG(sh.s_acctbal), 0) AS avg_supplier_balance,
       COALESCE(cos.total_orders, 0) AS total_orders,
       cos.total_spent,
       CASE WHEN cos.total_spent > 10000 THEN 'High Value Customer'
            WHEN cos.total_spent BETWEEN 5000 AND 10000 THEN 'Medium Value Customer'
            ELSE 'Low Value Customer' END AS customer_segment,
       ROW_NUMBER() OVER (PARTITION BY CASE WHEN cos.total_spent > 10000 THEN 'High Value Customer'
                                            WHEN cos.total_spent BETWEEN 5000 AND 10000 THEN 'Medium Value Customer'
                                            ELSE 'Low Value Customer' END ORDER BY cos.total_spent DESC) AS customer_rank
FROM part p
LEFT JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
LEFT JOIN SupplierHierarchy sh ON ps.ps_suppkey = sh.s_suppkey
LEFT JOIN AvgSupplierActivity asa ON p.p_partkey = asa.ps_partkey
LEFT JOIN CustomerOrderSummary cos ON cos.c_custkey IN (
    SELECT o.o_custkey FROM orders o
    WHERE o.o_orderkey IN (
        SELECT l.l_orderkey FROM lineitem l
        WHERE l.l_partkey = p.p_partkey AND l.l_shipdate > '1997-01-01'
    )
)
WHERE p.p_retailprice > (SELECT AVG(p2.p_retailprice) FROM part p2)
  AND (sh.s_acctbal IS NOT NULL OR cos.total_orders > 0)
GROUP BY p.p_name, p.p_retailprice, cos.total_orders, cos.total_spent, 
         CASE WHEN cos.total_spent > 10000 THEN 'High Value Customer'
              WHEN cos.total_spent BETWEEN 5000 AND 10000 THEN 'Medium Value Customer'
              ELSE 'Low Value Customer' END
ORDER BY customer_segment DESC, total_spent DESC
FETCH FIRST 10 ROWS ONLY;
