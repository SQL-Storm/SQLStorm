
WITH RECURSIVE SupplierHierarchy AS (
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, 0 AS level
    FROM supplier s
    WHERE s.s_acctbal > 10000

    UNION ALL

    SELECT s.s_suppkey, CONCAT(sh.s_name, ' -> ', s.s_name), s.s_nationkey, sh.level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey
    WHERE s.s_acctbal <= 10000 AND sh.level < 5
), 
OrderQuantities AS (
    SELECT o.o_custkey, SUM(l.l_quantity) AS total_quantity
    FROM orders o
    JOIN lineitem l ON o.o_orderkey = l.l_orderkey
    GROUP BY o.o_custkey
),
NationsWithOrderCounts AS (
    SELECT n.n_nationkey, n.n_name, COUNT(DISTINCT o.o_orderkey) AS order_count
    FROM nation n
    LEFT JOIN customer c ON n.n_nationkey = c.c_nationkey
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    GROUP BY n.n_nationkey, n.n_name
),
RankedNations AS (
    SELECT n.n_name, n.order_count, 
           RANK() OVER (ORDER BY n.order_count DESC) AS nation_rank
    FROM NationsWithOrderCounts n
)
SELECT s.s_name, sr.level, 
       COALESCE(oq.total_quantity, 0) AS total_order_quantity,
       CASE 
           WHEN rn.nation_rank IS NOT NULL THEN 'Ranked'
           ELSE 'Unranked'
       END AS rank_status
FROM SupplierHierarchy sr
LEFT JOIN OrderQuantities oq ON sr.s_suppkey = oq.o_custkey
LEFT JOIN RankedNations rn ON sr.s_nationkey = rn.n_nationkey
WHERE sr.level > 0 
  AND (rn.order_count IS NULL OR rn.order_count > 2)
GROUP BY s.s_name, sr.level, oq.total_quantity, rn.nation_rank, rn.order_count
ORDER BY sr.level, total_order_quantity DESC;
