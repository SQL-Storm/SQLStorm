WITH RankedOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_orderdate,
        o.o_totalprice,
        c.c_nationkey,
        ROW_NUMBER() OVER (PARTITION BY c.c_nationkey ORDER BY o.o_totalprice DESC) AS order_rank
    FROM 
        orders o
    JOIN 
        customer c ON o.o_custkey = c.c_custkey
    WHERE 
        o.o_orderdate BETWEEN DATE '1997-01-01' AND DATE '1997-12-31'
), TopOrders AS (
    SELECT 
        ro.o_orderkey,
        ro.o_orderdate,
        ro.o_totalprice,
        n.n_name AS nation_name
    FROM 
        RankedOrders ro
    JOIN 
        nation n ON ro.c_nationkey = n.n_nationkey
    WHERE 
        ro.order_rank <= 10
), OrderDetails AS (
    SELECT 
        lo.l_orderkey,
        lo.l_partkey,
        lo.l_suppkey,
        SUM(lo.l_extendedprice * (1 - lo.l_discount)) AS revenue
    FROM 
        lineitem lo
    JOIN 
        TopOrders to ON lo.l_orderkey = to.o_orderkey
    GROUP BY 
        lo.l_orderkey, lo.l_partkey, lo.l_suppkey
), SupplierParts AS (
    SELECT 
        ps.ps_partkey,
        ps.ps_suppkey,
        p.p_name,
        p.p_brand,
        p.p_retailprice,
        sp.revenue
    FROM 
        partsupp ps
    JOIN 
        part p ON ps.ps_partkey = p.p_partkey
    JOIN 
        OrderDetails sp ON ps.ps_partkey = sp.l_partkey AND ps.ps_suppkey = sp.l_suppkey
)
SELECT 
    sp.p_name,
    sp.p_brand,
    SUM(sp.revenue) AS total_revenue,
    COUNT(DISTINCT sp.ps_suppkey) AS total_suppliers,
    AVG(p.p_retailprice) AS avg_retail_price
FROM 
    SupplierParts sp
GROUP BY 
    sp.p_name, sp.p_brand
ORDER BY 
    total_revenue DESC
LIMIT 20;