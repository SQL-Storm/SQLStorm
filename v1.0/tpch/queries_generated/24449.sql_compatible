
WITH RECURSIVE supplier_aggregate AS (
    SELECT s.s_suppkey, SUM(ps.ps_supplycost) AS total_supplycost
    FROM supplier s
    JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY s.s_suppkey
    HAVING SUM(ps.ps_supplycost) > (SELECT AVG(ps.ps_supplycost) FROM partsupp)
),
national_summary AS (
    SELECT n.n_nationkey, n.n_name, COUNT(DISTINCT c.c_custkey) AS customer_count,
           AVG(c.c_acctbal) AS avg_acctbal
    FROM nation n
    LEFT JOIN customer c ON n.n_nationkey = c.c_nationkey
    GROUP BY n.n_nationkey, n.n_name
    HAVING COUNT(DISTINCT c.c_custkey) > 0
),
lineitem_summary AS (
    SELECT l.l_suppkey, 
           SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
           COUNT(*) AS order_count
    FROM lineitem l
    WHERE l.l_shipdate >= '1996-01-01' AND l.l_shipdate < '1997-01-01'
    GROUP BY l.l_suppkey
),
combined_results AS (
    SELECT n.n_nationkey, n.n_name, 
           ss.total_supplycost, ls.total_revenue, ls.order_count
    FROM national_summary n
    JOIN supplier_aggregate ss ON n.n_nationkey = (
        SELECT s.s_nationkey 
        FROM supplier s
        WHERE s.s_suppkey IN (SELECT s_suppkey FROM supplier_aggregate)
        LIMIT 1
    )
    LEFT JOIN lineitem_summary ls ON ls.l_suppkey = ss.s_suppkey
),
final_output AS (
    SELECT cr.*, 
           CASE WHEN cr.total_supplycost > 1000000 THEN 'High' 
                WHEN cr.total_supplycost IS NULL THEN 'No Data' 
                ELSE 'Low' END AS supplycost_category,
           ROW_NUMBER() OVER (PARTITION BY cr.n_nationkey ORDER BY cr.total_revenue DESC) AS rn
    FROM combined_results cr
)
SELECT n.n_name, 
       COALESCE(f.total_revenue, 0) AS total_revenue, 
       COALESCE(f.order_count, 0) AS orders,
       f.supplycost_category
FROM final_output f
JOIN nation n ON f.n_nationkey = n.n_nationkey
WHERE f.rn = 1
ORDER BY f.total_revenue DESC NULLS LAST
LIMIT 25;
