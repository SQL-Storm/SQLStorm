WITH RankedSuppliers AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        s.s_nationkey,
        s.s_acctbal,
        ROW_NUMBER() OVER (PARTITION BY s.s_nationkey ORDER BY s.s_acctbal DESC) AS rank
    FROM supplier s
),
UniqueParts AS (
    SELECT 
        p.p_partkey,
        p.p_name,
        p.p_retailprice,
        LEAD(p.p_retailprice) OVER (ORDER BY p.p_retailprice) AS next_price
    FROM part p
    WHERE p.p_retailprice IS NOT NULL
),
CustomerOrderSummary AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        COUNT(o.o_orderkey) AS total_orders,
        SUM(o.o_totalprice) AS total_spent
    FROM customer c
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    GROUP BY c.c_custkey, c.c_name
),
FilteredLineItems AS (
    SELECT 
        l.l_orderkey,
        SUM(CASE WHEN l.l_discount > 0.2 THEN l.l_extendedprice * (1 - l.l_discount) ELSE l.l_extendedprice END) AS adjusted_price
    FROM lineitem l
    WHERE l.l_shipdate > '1996-01-01' OR l.l_returnflag = 'R'
    GROUP BY l.l_orderkey
)
SELECT 
    r.r_name AS region_name,
    COUNT(DISTINCT cs.c_custkey) AS total_customers,
    SUM(uls.adjusted_price) AS total_revenue,
    ROUND(AVG(ups.p_retailprice), 2) AS average_part_price,
    MAX(rs.s_acctbal) AS max_supplier_balance
FROM region r
LEFT JOIN nation n ON r.r_regionkey = n.n_regionkey
LEFT JOIN customer cs ON cs.c_nationkey = n.n_nationkey
LEFT JOIN CustomerOrderSummary co ON cs.c_custkey = co.c_custkey
LEFT JOIN FilteredLineItems uls ON uls.l_orderkey IN (
    SELECT o.o_orderkey
    FROM orders o
    WHERE o.o_orderstatus IN ('O', 'F')
)
LEFT JOIN UniqueParts ups ON ups.p_partkey IN (
    SELECT ps.ps_partkey
    FROM partsupp ps
    JOIN supplier s ON ps.ps_suppkey = s.s_suppkey
    WHERE ps.ps_availqty > 0
)
LEFT JOIN RankedSuppliers rs ON cs.c_nationkey = rs.s_nationkey AND rs.rank = 1
WHERE r.r_name IS NOT NULL 
GROUP BY r.r_name
ORDER BY total_revenue DESC, region_name;