
WITH RankedOrders AS (
    SELECT 
        o.o_orderkey,
        o.o_orderdate,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
        ROW_NUMBER() OVER (PARTITION BY l.l_returnflag ORDER BY o.o_orderdate DESC) AS rn
    FROM 
        orders o
    JOIN 
        lineitem l ON o.o_orderkey = l.l_orderkey
    WHERE 
        l.l_shipdate >= DATE '1995-01-01' AND 
        l.l_shipdate < DATE '1995-12-31'
    GROUP BY 
        o.o_orderkey, o.o_orderdate, l.l_returnflag
),
SupplierStats AS (
    SELECT 
        s.s_suppkey,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supplycost,
        COUNT(DISTINCT ps.ps_partkey) AS part_count,
        MAX(s.s_acctbal) AS max_balance
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey
),
FinalResults AS (
    SELECT 
        ro.o_orderkey,
        ro.total_revenue,
        ss.total_supplycost,
        ss.part_count,
        CASE 
            WHEN ss.max_balance IS NULL THEN 'No Balance'
            WHEN ss.max_balance <= 1000 THEN 'Low Balance'
            ELSE 'High Balance'
        END AS balance_status
    FROM 
        RankedOrders ro
    LEFT JOIN 
        SupplierStats ss ON ro.o_orderkey = ss.s_suppkey
    WHERE 
        ro.total_revenue IS NOT NULL
)
SELECT 
    DISTINCT r.o_orderkey,
    r.total_revenue,
    ss.total_supplycost,
    ss.part_count,
    r.balance_status,
    CASE 
        WHEN r.total_revenue > 50000 THEN 'High Revenue'
        WHEN r.total_revenue BETWEEN 10000 AND 50000 THEN 'Medium Revenue'
        ELSE 'Low Revenue'
    END AS revenue_category
FROM 
    FinalResults r
    JOIN SupplierStats ss ON r.o_orderkey = ss.s_suppkey
WHERE 
    EXISTS (SELECT 1 FROM SupplierStats ss WHERE ss.part_count > 5 AND ss.total_supplycost IS NOT NULL)
    AND r.balance_status != 'No Balance'
ORDER BY 
    r.total_revenue DESC
LIMIT 10
UNION ALL
SELECT 
    NULL AS o_orderkey, 
    NULL AS total_revenue, 
    NULL AS total_supplycost, 
    NULL AS part_count, 
    'Completely Missing' AS balance_status,
    'Completely Missing' AS revenue_category
WHERE 
    NOT EXISTS (SELECT 1 FROM RankedOrders);
