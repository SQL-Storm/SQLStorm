
WITH RankedSuppliers AS (
    SELECT 
        s.s_suppkey, 
        s.s_name, 
        SUM(ps.ps_supplycost) AS total_supply_cost,
        RANK() OVER (PARTITION BY p.p_partkey ORDER BY SUM(ps.ps_supplycost) DESC) AS supply_rank
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    JOIN 
        part p ON ps.ps_partkey = p.p_partkey
    GROUP BY 
        s.s_suppkey, s.s_name, p.p_partkey
), 
HighValueCustomers AS (
    SELECT 
        c.c_custkey, 
        c.c_name, 
        SUM(o.o_totalprice) AS total_spent
    FROM 
        customer c
    JOIN 
        orders o ON c.c_custkey = o.o_custkey
    WHERE 
        o.o_orderstatus = 'O'
    GROUP BY 
        c.c_custkey, c.c_name
    HAVING 
        SUM(o.o_totalprice) > (SELECT AVG(o_totalprice) FROM orders)
), 
FilteredLineItems AS (
    SELECT 
        l.l_orderkey,
        l.l_partkey,
        l.l_quantity,
        CASE 
            WHEN l.l_discount > 0.05 THEN l.l_extendedprice * (1 - l.l_discount)
            ELSE l.l_extendedprice 
        END AS effective_price
    FROM 
        lineitem l
    WHERE 
        l.l_returnflag IS NULL OR l.l_returnflag = 'N'
)

SELECT 
    p.p_name, 
    r.r_name AS region_name,
    SUM(f.effective_price) AS total_revenue,
    COUNT(DISTINCT h.c_custkey) AS unique_high_value_customers,
    ARRAY_AGG(DISTINCT s.s_name) AS top_suppliers,
    COUNT(f.l_orderkey) AS total_line_items 
FROM 
    part p
LEFT JOIN 
    RankedSuppliers s ON s.s_suppkey IN (
        SELECT s_suppkey 
        FROM RankedSuppliers 
        WHERE supply_rank <= 3
    )
LEFT JOIN 
    FilteredLineItems f ON f.l_partkey = p.p_partkey
JOIN 
    nation n ON n.n_nationkey IN (
        SELECT c.c_nationkey 
        FROM HighValueCustomers c 
        WHERE c.total_spent > 10000
    )
JOIN 
    region r ON n.n_regionkey = r.r_regionkey
WHERE 
    p.p_retailprice IS NOT NULL
GROUP BY 
    p.p_name, r.r_name
HAVING 
    SUM(f.effective_price) > 1000 
ORDER BY 
    total_revenue DESC 
LIMIT 10;
