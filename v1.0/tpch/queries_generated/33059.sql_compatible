
WITH RECURSIVE NationHierarchy AS (
    SELECT n_nationkey, n_name, n_regionkey, 1 AS level
    FROM nation
    WHERE n_nationkey = 1
    UNION ALL
    SELECT n.n_nationkey, n.n_name, n.n_regionkey, nh.level + 1
    FROM nation n
    JOIN NationHierarchy nh ON n.n_regionkey = nh.n_regionkey
), 

CustomerOrderStats AS (
    SELECT 
        c.c_custkey, 
        c.c_name, 
        COUNT(DISTINCT o.o_orderkey) AS total_orders, 
        SUM(o.o_totalprice) AS total_spent, 
        AVG(o.o_totalprice) AS avg_order_value
    FROM customer c
    LEFT JOIN orders o ON c.c_custkey = o.o_custkey
    GROUP BY c.c_custkey, c.c_name
), 

SupplierPartDetails AS (
    SELECT 
        s.s_suppkey, 
        COUNT(ps.ps_partkey) AS supplied_parts, 
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_cost
    FROM supplier s
    LEFT JOIN partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY s.s_suppkey
)

SELECT 
    c.c_custkey AS customer_id,
    c.c_name AS customer_name,
    ns.n_name AS nation_name,
    co.total_orders,
    co.total_spent,
    co.avg_order_value,
    sp.supplied_parts,
    sp.total_supply_cost,
    ROW_NUMBER() OVER (PARTITION BY c.c_nationkey ORDER BY co.total_spent DESC) AS rank_within_nation,
    (CASE 
        WHEN co.total_spent IS NULL THEN 'No orders'
        ELSE CASE 
            WHEN co.total_spent > 1000 THEN 'High spender'
            WHEN co.total_spent BETWEEN 500 AND 1000 THEN 'Medium spender'
            ELSE 'Low spender'
        END 
    END) AS spending_category
FROM customer c
JOIN NationHierarchy nh ON c.c_nationkey = nh.n_nationkey
JOIN region r ON nh.n_regionkey = r.r_regionkey
LEFT JOIN CustomerOrderStats co ON c.c_custkey = co.c_custkey
LEFT JOIN SupplierPartDetails sp ON c.c_custkey = sp.s_suppkey 
LEFT JOIN nation ns ON c.c_nationkey = ns.n_nationkey
WHERE r.r_name IS NOT NULL
ORDER BY co.total_spent DESC
FETCH FIRST 100 ROWS ONLY;
