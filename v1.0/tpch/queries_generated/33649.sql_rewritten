WITH RECURSIVE SupplierHierarchy AS (
    SELECT s_suppkey, s_name, s_nationkey, 1 AS level
    FROM supplier
    WHERE s_nationkey = (SELECT n_nationkey FROM nation WHERE n_name = 'USA')
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, sh.level + 1
    FROM supplier s
    JOIN SupplierHierarchy sh ON s.s_nationkey = sh.s_nationkey
), RankedParts as (
    SELECT 
        p.p_partkey,
        p.p_name,
        ROW_NUMBER() OVER (PARTITION BY p.p_brand ORDER BY p.p_retailprice DESC) as brand_rank
    FROM part p
    WHERE p.p_size > 10
), TotalSales as (
    SELECT 
        l.l_partkey,
        SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_sales
    FROM lineitem l
    JOIN orders o ON l.l_orderkey = o.o_orderkey
    WHERE o.o_orderdate BETWEEN DATE '1997-01-01' AND DATE '1997-12-31'
    GROUP BY l.l_partkey
)
SELECT 
    n.n_name AS nation_name,
    COUNT(DISTINCT c.c_custkey) AS customer_count,
    SUM(ps.ps_availqty) AS total_available_quantity,
    AVG(ts.total_sales) AS avg_sales_per_part,
    MAX(RP.p_name) AS most_expensive_part_name,
    COUNT(DISTINCT sh.s_suppkey) AS supplier_count
FROM nation n
LEFT JOIN customer c ON c.c_nationkey = n.n_nationkey
LEFT JOIN partsupp ps ON ps.ps_partkey IN (SELECT p_partkey FROM RankedParts WHERE brand_rank = 1)
LEFT JOIN TotalSales ts ON ts.l_partkey = ps.ps_partkey
LEFT JOIN SupplierHierarchy sh ON sh.s_nationkey = n.n_nationkey
WHERE n.n_comment IS NOT NULL
GROUP BY n.n_name
HAVING AVG(c.c_acctbal) > 1000
ORDER BY customer_count DESC, avg_sales_per_part DESC;