WITH RECURSIVE OrderHierarchy AS (
    SELECT o.o_orderkey, o.o_orderdate, o.o_totalprice,
           ROW_NUMBER() OVER (PARTITION BY o.o_orderkey ORDER BY o.o_orderdate) AS order_rank
    FROM orders o
    WHERE o.o_orderstatus = 'O'
    UNION ALL
    SELECT o.o_orderkey, o.o_orderdate, o.o_totalprice
    FROM orders o
    INNER JOIN OrderHierarchy oh ON o.o_orderkey > oh.o_orderkey
)

SELECT n.n_name, r.r_name,
       SUM(l.l_extendedprice * (1 - l.l_discount)) AS total_revenue,
       COUNT(DISTINCT o.o_orderkey) AS order_count,
       AVG(SUBSTRING(s.s_name, 1, 3)) AS avg_s_name_prefix_length,
       COUNT(DISTINCT ps.ps_suppkey) AS distinct_supplier_count
FROM lineitem l
INNER JOIN orders o ON l.l_orderkey = o.o_orderkey
INNER JOIN partsupp ps ON l.l_partkey = ps.ps_partkey
INNER JOIN supplier s ON ps.ps_suppkey = s.s_suppkey
INNER JOIN nation n ON s.s_nationkey = n.n_nationkey
LEFT JOIN region r ON n.n_regionkey = r.r_regionkey
WHERE l.l_shipdate BETWEEN DATE '1996-01-01' AND DATE '1997-01-01'
  AND l.l_returnflag = 'R'
  AND EXISTS (
      SELECT 1
      FROM customer c
      WHERE c.c_custkey = o.o_custkey
        AND c.c_acctbal > 1000
  )
GROUP BY n.n_name, r.r_name
HAVING SUM(l.l_extendedprice * (1 - l.l_discount)) > 10000
  AND COUNT(DISTINCT oh.o_orderkey) > 5
ORDER BY total_revenue DESC;