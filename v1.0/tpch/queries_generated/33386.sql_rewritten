WITH RECURSIVE RecursiveSupplier AS (
    SELECT s_suppkey, s_name, s_nationkey, s_acctbal, 1 AS level
    FROM supplier
    WHERE s_acctbal > 5000
    UNION ALL
    SELECT s.s_suppkey, s.s_name, s.s_nationkey, s.s_acctbal, r.level + 1
    FROM supplier s
    INNER JOIN RecursiveSupplier r ON s.s_nationkey = r.s_nationkey
    WHERE s.s_acctbal > r.s_acctbal
),
RankedLineItems AS (
    SELECT l.l_orderkey, 
           l.l_partkey, 
           l.l_suppkey, 
           l.l_quantity, 
           l.l_extendedprice, 
           l.l_discount, 
           ROW_NUMBER() OVER (PARTITION BY l.l_orderkey ORDER BY l.l_extendedprice DESC) AS rn
    FROM lineitem l
    WHERE l.l_shipdate >= '1997-01-01'
      AND l.l_returnflag = 'N'
),
TotalOrders AS (
    SELECT o.o_orderkey, 
           SUM(li.l_extendedprice * (1 - li.l_discount)) AS total_revenue,
           COUNT(DISTINCT li.l_partkey) AS part_count
    FROM orders o 
    JOIN rankedLineItems li ON o.o_orderkey = li.l_orderkey
    GROUP BY o.o_orderkey
)
SELECT p.p_name, 
       r.r_name AS region,
       SUM(to.total_revenue) AS total_revenue_by_part,
       COUNT(DISTINCT to.o_orderkey) AS order_count,
       COALESCE(MIN(to.part_count), 0) AS min_parts,
       COALESCE(MAX(to.part_count), 0) AS max_parts
FROM part p
LEFT JOIN partsupp ps ON p.p_partkey = ps.ps_partkey
LEFT JOIN supplier s ON ps.ps_suppkey = s.s_suppkey
LEFT JOIN nation n ON s.s_nationkey = n.n_nationkey
LEFT JOIN region r ON n.n_regionkey = r.r_regionkey
LEFT JOIN totalorders to ON p.p_partkey = to.o_orderkey
GROUP BY p.p_name, r.r_name
HAVING SUM(to.total_revenue) IS NOT NULL 
   OR COUNT(to.o_orderkey) > 5
ORDER BY total_revenue_by_part DESC
FETCH FIRST 10 ROWS ONLY;