
WITH SupplierStats AS (
    SELECT 
        s.s_suppkey,
        s.s_name,
        SUM(ps.ps_availqty) AS total_available_quantity,
        SUM(ps.ps_supplycost * ps.ps_availqty) AS total_supply_value,
        ROW_NUMBER() OVER (PARTITION BY s.s_nationkey ORDER BY SUM(ps.ps_supplycost * ps.ps_availqty) DESC) AS rn
    FROM 
        supplier s
    JOIN 
        partsupp ps ON s.s_suppkey = ps.ps_suppkey
    GROUP BY 
        s.s_suppkey, s.s_name, s.s_nationkey
),
HighValueSuppliers AS (
    SELECT 
        s.s_nationkey,
        COUNT(*) AS supplier_count,
        SUM(total_supply_value) AS total_high_value
    FROM 
        SupplierStats s
    WHERE 
        s.total_available_quantity > (SELECT AVG(total_available_quantity) FROM SupplierStats)
    GROUP BY 
        s.s_nationkey
),
CustomerOrderDetails AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        SUM(o.o_totalprice) AS total_spent
    FROM 
        customer c
    JOIN 
        orders o ON c.c_custkey = o.o_custkey
    GROUP BY 
        c.c_custkey, c.c_name
),
TopCustomers AS (
    SELECT 
        c.c_custkey,
        c.c_name,
        c.total_spent,
        ROW_NUMBER() OVER (ORDER BY c.total_spent DESC) AS rn
    FROM 
        CustomerOrderDetails c
    WHERE 
        c.total_spent > 1000 
)
SELECT 
    r.r_name,
    COALESCE(hvs.supplier_count, 0) AS high_value_supplier_count,
    COALESCE(tc.rn, 0) AS top_customer_rank
FROM 
    region r
LEFT JOIN 
    HighValueSuppliers hvs ON r.r_regionkey = hvs.s_nationkey
LEFT JOIN 
    TopCustomers tc ON r.r_regionkey = tc.c_custkey
WHERE 
    r.r_name IS NOT NULL
ORDER BY 
    r.r_name;
