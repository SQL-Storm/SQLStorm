
WITH RankedSales AS (
    SELECT 
        ws_sold_date_sk, 
        ws_item_sk, 
        ws_sales_price, 
        ws_quantity,
        ROW_NUMBER() OVER (PARTITION BY ws_item_sk ORDER BY ws_sales_price DESC) as rank
    FROM 
        web_sales
),
CustomerReturns AS (
    SELECT 
        cr_returning_customer_sk,
        SUM(cr_return_amount) AS total_return_amount
    FROM 
        catalog_returns
    WHERE 
        cr_return_quantity > 0 AND cr_return_amount IS NOT NULL
    GROUP BY 
        cr_returning_customer_sk
),
SalesSummary AS (
    SELECT 
        cs_bill_customer_sk,
        SUM(cs_ext_sales_price) AS total_sales,
        SUM(cs_ext_discount_amt) AS total_discount
    FROM 
        catalog_sales
    WHERE 
        cs_sold_date_sk >= (SELECT MIN(d_date_sk) FROM date_dim WHERE d_year = 2023)
    GROUP BY 
        cs_bill_customer_sk
),
HighValueCustomers AS (
    SELECT 
        c.c_customer_sk, 
        c.c_first_name, 
        c.c_last_name,
        SUM(ss.total_sales) AS total_spent,
        cd.cd_gender
    FROM 
        customer c
    JOIN 
        SalesSummary ss ON c.c_customer_sk = ss.cs_bill_customer_sk
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    GROUP BY 
        c.c_customer_sk, c.c_first_name, c.c_last_name, cd.cd_gender
    HAVING 
        SUM(ss.total_sales) > 1000
)
SELECT 
    hvc.c_customer_sk,
    hvc.c_first_name,
    hvc.c_last_name,
    hvc.total_spent,
    hvc.cd_gender,
    COALESCE(cr.total_return_amount, 0) AS total_return_amount,
    MAX(rws.ws_sales_price) AS highest_sale_price
FROM 
    HighValueCustomers hvc
LEFT JOIN 
    CustomerReturns cr ON hvc.c_customer_sk = cr.cr_returning_customer_sk
LEFT JOIN 
    RankedSales rws ON hvc.c_customer_sk = rws.ws_item_sk
WHERE 
    rws.rank = 1
GROUP BY 
    hvc.c_customer_sk, hvc.c_first_name, hvc.c_last_name, hvc.cd_gender, cr.total_return_amount
ORDER BY 
    hvc.total_spent DESC;
