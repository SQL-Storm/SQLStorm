
WITH RankedSales AS (
    SELECT 
        ws_order_number,
        ws_item_sk,
        ws_sales_price,
        ws_net_profit,
        ROW_NUMBER() OVER (PARTITION BY ws_item_sk ORDER BY ws_net_profit DESC) AS ProfitRank
    FROM web_sales
    WHERE ws_sales_price > (SELECT AVG(ws_sales_price) FROM web_sales) 
      AND ws_net_profit < 0
),
CustomerReturns AS (
    SELECT 
        wr_returning_customer_sk,
        SUM(wr_return_quantity) AS total_returned,
        COUNT(DISTINCT wr_order_number) AS return_count
    FROM web_returns
    GROUP BY wr_returning_customer_sk
    HAVING SUM(wr_return_quantity) > 5
)
SELECT 
    c.c_customer_id,
    ca.ca_address_id,
    COALESCE(rs.ProfitRank, 0) AS profit_rank,
    COALESCE(cr.total_returned, 0) AS total_returned,
    CASE 
        WHEN cr.return_count IS NULL THEN 'No Returns'
        WHEN cr.return_count > 3 THEN 'Frequent Returns'
        ELSE 'Occasional Returns'
    END AS return_category,
    SUM(ws.ws_net_profit) OVER (PARTITION BY c.c_customer_id ORDER BY ws.ws_sold_date_sk DESC ROWS BETWEEN 30 PRECEDING AND CURRENT ROW) AS total_profit_last_30_days
FROM customer c
JOIN customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
LEFT JOIN RankedSales rs ON c.c_customer_sk = rs.ws_order_number
LEFT JOIN CustomerReturns cr ON c.c_customer_sk = cr.wr_returning_customer_sk
LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
WHERE ca.ca_country = 'USA'
  AND (cr.total_returned IS NULL OR cr.total_returned > 0)
GROUP BY c.c_customer_id, ca.ca_address_id, rs.ProfitRank, cr.total_returned, cr.return_count
ORDER BY total_profit_last_30_days DESC, c.c_customer_id
FETCH FIRST 100 ROWS ONLY;
