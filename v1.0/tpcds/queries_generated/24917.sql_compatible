
WITH RankedSales AS (
    SELECT
        ws.ws_item_sk,
        ws.ws_order_number,
        ws.ws_sales_price,
        ROW_NUMBER() OVER (PARTITION BY ws.ws_item_sk ORDER BY ws.ws_sales_price DESC) AS rank
    FROM web_sales ws
    WHERE ws.ws_sales_price > (SELECT AVG(ws2.ws_sales_price) FROM web_sales ws2 WHERE ws2.ws_item_sk = ws.ws_item_sk)
),
CustomerUnions AS (
    SELECT c.c_customer_sk, c.c_first_name, c.c_last_name, 'Online' AS source
    FROM customer c
    JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    UNION ALL
    SELECT c.c_customer_sk, c.c_first_name, c.c_last_name, 'In-Store' AS source
    FROM customer c
    JOIN store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
),
AddressCounts AS (
    SELECT ca.ca_address_sk, COUNT(c.c_customer_sk) AS customer_count
    FROM customer_address ca
    LEFT JOIN customer c ON c.c_current_addr_sk = ca.ca_address_sk
    GROUP BY ca.ca_address_sk
)
SELECT 
    cu.source,
    cu.c_first_name,
    cu.c_last_name,
    ac.customer_count,
    rs.ws_sales_price,
    CASE 
        WHEN ac.customer_count IS NULL THEN 'No Customers'
        ELSE 'Customers Present'
    END AS customer_status
FROM CustomerUnions cu
JOIN AddressCounts ac ON cu.c_customer_sk = (SELECT c2.c_customer_sk FROM customer c2 WHERE c2.c_current_addr_sk = ac.ca_address_sk LIMIT 1)
LEFT JOIN RankedSales rs ON cu.ws_order_number = rs.ws_order_number
WHERE (rs.rank IS NOT NULL OR ac.customer_count IS NULL)
  AND ((cu.source = 'Online' AND rs.ws_sales_price > 50) OR (cu.source = 'In-Store'))
ORDER BY cu.source, ac.customer_count DESC, rs.ws_sales_price DESC;
