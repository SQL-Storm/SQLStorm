WITH RECURSIVE sales_data AS (
    SELECT ws_item_sk, 
           SUM(ws_quantity) AS total_quantity, 
           SUM(ws_net_paid) AS total_sales, 
           ROW_NUMBER() OVER (PARTITION BY ws_item_sk ORDER BY SUM(ws_quantity) DESC) AS rank
    FROM web_sales
    GROUP BY ws_item_sk
), 
customer_summary AS (
    SELECT c.c_customer_sk,
           cd.cd_gender,
           cd.cd_marital_status,
           CASE 
               WHEN cd.cd_purchase_estimate IS NULL THEN 'Unknown'
               WHEN cd.cd_purchase_estimate >= 1000 THEN 'High Value'
               WHEN cd.cd_purchase_estimate BETWEEN 500 AND 999 THEN 'Medium Value'
               ELSE 'Low Value'
           END AS value_segment
    FROM customer c
    LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
), 
date_summary AS (
    SELECT d_year, 
           d_month_seq,
           COUNT(DISTINCT ws_order_number) AS total_orders,
           SUM(ws_net_paid) AS total_revenue
    FROM web_sales ws
    JOIN date_dim d ON ws.ws_sold_date_sk = d.d_date_sk
    GROUP BY d_year, d_month_seq
)
SELECT cs.c_customer_sk, 
       cs.cd_gender, 
       cs.cd_marital_status, 
       cs.value_segment, 
       ds.total_orders, 
       ds.total_revenue,
       sd.total_quantity,
       sd.total_sales
FROM customer_summary cs
LEFT JOIN date_summary ds ON YEAR(cast('2002-10-01' as date)) = ds.d_year
LEFT JOIN sales_data sd ON sd.ws_item_sk IN (SELECT DISTINCT ws_item_sk FROM web_sales WHERE ws_ship_date_sk IS NOT NULL)
WHERE cs.cd_gender IS NOT NULL 
  AND ds.total_revenue > 10000
ORDER BY cs.c_customer_sk, sd.total_sales DESC;