
WITH CustomerAddress AS (
    SELECT
        ca.ca_address_sk,
        CONCAT(ca.ca_street_number, ' ', ca.ca_street_name, ' ', ca.ca_street_type) AS full_address,
        ca.ca_city,
        ca.ca_state
    FROM
        customer_address ca
),
CustomerDemographics AS (
    SELECT
        cd.cd_demo_sk,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_education_status,
        CASE
            WHEN cd.cd_purchase_estimate > 1000 THEN 'High'
            WHEN cd.cd_purchase_estimate BETWEEN 500 AND 1000 THEN 'Medium'
            ELSE 'Low'
        END AS purchase_category
    FROM
        customer_demographics cd
),
Sales AS (
    SELECT
        ws.ws_bill_customer_sk,
        SUM(ws.ws_ext_sales_price) AS total_sales,
        COUNT(DISTINCT ws.ws_order_number) AS order_count
    FROM
        web_sales ws
    GROUP BY
        ws.ws_bill_customer_sk
),
DemographicSales AS (
    SELECT
        cd.cd_demo_sk,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_education_status,
        C.full_address,
        C.ca_city,
        C.ca_state,
        COALESCE(S.total_sales, 0) AS total_sales,
        COALESCE(S.order_count, 0) AS order_count
    FROM
        CustomerDemographics cd
    LEFT JOIN
        CustomerAddress C ON cd.cd_demo_sk = (SELECT c_current_cdemo_sk FROM customer WHERE c_customer_sk = cd.cd_demo_sk)
    LEFT JOIN
        Sales S ON cd.cd_demo_sk = S.ws_bill_customer_sk
)
SELECT 
    ds.cd_gender,
    ds.cd_marital_status,
    ds.cd_education_status,
    COUNT(*) AS customer_count,
    SUM(ds.total_sales) AS aggregated_sales,
    AVG(ds.total_sales) AS avg_sales,
    MAX(ds.total_sales) AS max_sales,
    MIN(ds.total_sales) AS min_sales
FROM 
    DemographicSales ds
GROUP BY 
    ds.cd_gender, 
    ds.cd_marital_status,
    ds.cd_education_status
ORDER BY 
    aggregated_sales DESC;
