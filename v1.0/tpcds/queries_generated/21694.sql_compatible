
WITH customer_stats AS (
    SELECT 
        c.c_customer_sk,
        COUNT(DISTINCT cs.cs_order_number) AS total_orders,
        SUM(COALESCE(ss.ss_net_profit, 0) + COALESCE(cs.cs_net_profit, 0) + COALESCE(ws.ws_net_profit, 0)) AS total_profit
    FROM customer c
    LEFT JOIN store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    LEFT JOIN catalog_sales cs ON c.c_customer_sk = cs.cs_bill_customer_sk
    LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY c.c_customer_sk
),
ranked_customers AS (
    SELECT 
        cs.c_customer_sk,
        cs.total_orders,
        cs.total_profit,
        RANK() OVER (PARTITION BY cs.total_orders ORDER BY cs.total_profit DESC) AS profit_rank
    FROM customer_stats cs
),
active_customers AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        COALESCE(d.d_year, 0) AS year_active,
        (SELECT MAX(d.d_year) 
         FROM date_dim d 
         WHERE d.d_date_sk IN (
            SELECT DISTINCT ss.ss_sold_date_sk 
            FROM store_sales ss 
            WHERE ss.ss_customer_sk = c.c_customer_sk
         ) AND d.d_year IS NOT NULL) AS last_active_year
    FROM customer c
    LEFT JOIN store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    LEFT JOIN date_dim d ON ss.ss_sold_date_sk = d.d_date_sk
    WHERE c.c_birth_month IS NOT NULL
),
customer_report AS (
    SELECT 
        ac.c_customer_sk,
        ac.c_first_name,
        ac.c_last_name,
        ac.year_active,
        ac.last_active_year,
        rc.total_orders,
        rc.total_profit,
        CASE 
            WHEN rc.total_orders > 10 THEN 'High Engagement'
            WHEN rc.total_orders BETWEEN 5 AND 10 THEN 'Moderate Engagement'
            ELSE 'Low Engagement' 
        END AS engagement_level
    FROM active_customers ac
    LEFT JOIN ranked_customers rc ON ac.c_customer_sk = rc.c_customer_sk
)
SELECT 
    cr.c_customer_sk,
    cr.c_first_name,
    cr.c_last_name,
    cr.engagement_level,
    cr.year_active,
    cr.last_active_year,
    CASE 
        WHEN cr.last_active_year IS NULL THEN 'Inactive'
        ELSE 'Active'
    END AS customer_status,
    STRING_AGG(DISTINCT dk.d_day_name, ', ') AS active_days_of_week
FROM customer_report cr
LEFT JOIN date_dim dk ON dk.d_year = cr.year_active
WHERE cr.total_profit IS NOT NULL 
  AND (cr.year_active - cr.last_active_year) <= 2
GROUP BY 
    cr.c_customer_sk, 
    cr.c_first_name, 
    cr.c_last_name, 
    cr.engagement_level, 
    cr.year_active, 
    cr.last_active_year
HAVING 
    COUNT(DISTINCT dk.d_day_name) > 0
ORDER BY 
    cr.total_profit DESC NULLS LAST;
