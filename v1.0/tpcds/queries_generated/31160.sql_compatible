
WITH RECURSIVE RevenueCTE AS (
    SELECT 
        d_year,
        SUM(ws_net_profit) AS total_profit
    FROM 
        web_sales 
    JOIN 
        date_dim ON ws_sold_date_sk = d_date_sk
    GROUP BY 
        d_year
    UNION ALL
    SELECT 
        d_year,
        SUM(cs_net_profit) AS total_profit
    FROM 
        catalog_sales 
    JOIN 
        date_dim ON cs_sold_date_sk = d_date_sk
    GROUP BY 
        d_year
),
CustomerReturns AS (
    SELECT 
        sr_customer_sk,
        SUM(sr_return_amt) AS total_return_amount,
        COUNT(sr_ticket_number) AS return_count
    FROM 
        store_returns
    GROUP BY 
        sr_customer_sk
),
CustomerSummary AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        COALESCE(cr.total_return_amount, 0) AS total_return_amount,
        COALESCE(cr.return_count, 0) AS return_count,
        ROUND(AVG(CASE WHEN rc.total_profit IS NOT NULL THEN rc.total_profit ELSE 0 END), 2) AS average_profit, 
        COUNT(DISTINCT cd.cd_demo_sk) AS demographic_count
    FROM 
        customer c
    LEFT JOIN 
        CustomerReturns cr ON c.c_customer_sk = cr.sr_customer_sk
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN 
        RevenueCTE rc ON rc.total_profit IS NOT NULL
    GROUP BY 
        c.c_customer_sk, c.c_first_name, c.c_last_name
)
SELECT 
    cs.c_customer_sk,
    cs.c_first_name,
    cs.c_last_name,
    cs.total_return_amount,
    cs.return_count,
    cs.average_profit,
    cs.demographic_count,
    CASE 
        WHEN cs.total_return_amount > 100 THEN 'High Return'
        WHEN cs.total_return_amount BETWEEN 50 AND 100 THEN 'Medium Return'
        ELSE 'Low Return'
    END AS return_category
FROM 
    CustomerSummary cs
WHERE 
    cs.demographic_count > 1
ORDER BY 
    cs.total_return_amount DESC
FETCH FIRST 100 ROWS ONLY;
