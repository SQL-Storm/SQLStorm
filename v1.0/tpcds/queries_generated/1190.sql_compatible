
WITH sales_summary AS (
    SELECT
        c.c_customer_id,
        c.c_first_name,
        c.c_last_name,
        SUM(ss.ss_net_paid) AS total_spent,
        COUNT(ss.ss_ticket_number) AS total_transactions,
        DENSE_RANK() OVER (PARTITION BY c.c_customer_sk ORDER BY SUM(ss.ss_net_paid) DESC) AS spending_rank
    FROM
        customer c
    JOIN
        store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    WHERE
        c.c_birth_year < 1980
    GROUP BY
        c.c_customer_id, c.c_first_name, c.c_last_name, c.c_customer_sk
),
top_customers AS (
    SELECT
        s.c_customer_id,
        s.total_spent,
        s.total_transactions,
        ROW_NUMBER() OVER (ORDER BY s.total_spent DESC) AS rank
    FROM
        sales_summary s
    WHERE
        s.total_spent > (
            SELECT
                AVG(total_spent)
            FROM
                sales_summary
        )
)
SELECT
    tc.c_customer_id,
    tc.total_spent,
    tc.total_transactions,
    COALESCE(sm.sm_type, 'Standard Shipping') AS shipping_method,
    COUNT(sr.sr_ticket_number) AS total_returns,
    MAX(sr.sr_return_amt) AS max_return_value
FROM
    top_customers tc
LEFT JOIN
    store_returns sr ON tc.c_customer_id = sr.sr_customer_sk
LEFT JOIN
    ship_mode sm ON sr.sr_ship_mode_sk = sm.sm_ship_mode_sk
GROUP BY
    tc.c_customer_id, tc.total_spent, tc.total_transactions, sm.sm_type
HAVING
    COUNT(sr.sr_ticket_number) < 5 OR SUM(sr.sr_return_amt) < 100
ORDER BY
    tc.total_spent DESC;
