
WITH SalesData AS (
    SELECT 
        ws.ws_sold_date_sk,
        ws.ws_item_sk,
        SUM(ws.ws_quantity) AS total_quantity,
        AVG(ws.ws_net_paid) AS avg_net_paid,
        SUM(ws.ws_net_profit) AS total_net_profit,
        ROW_NUMBER() OVER (PARTITION BY ws.ws_item_sk ORDER BY SUM(ws.ws_quantity) DESC) AS rn
    FROM 
        web_sales ws
    JOIN 
        item i ON ws.ws_item_sk = i.i_item_sk
    WHERE 
        ws.ws_sold_date_sk >= (SELECT MAX(d.d_date_sk) - 30 FROM date_dim d)
    GROUP BY 
        ws.ws_sold_date_sk, ws.ws_item_sk
),
TopSellingItems AS (
    SELECT 
        ws.ws_item_sk,
        s.s_store_id,
        SUM(ws.ws_quantity) AS total_sold
    FROM 
        web_sales ws
    JOIN 
        store s ON ws.ws_store_sk = s.s_store_sk
    GROUP BY 
        ws.ws_item_sk, s.s_store_id
    HAVING 
        SUM(ws.ws_quantity) > 100
),
PopularItems AS (
    SELECT 
        item.i_item_id,
        item.i_item_desc,
        sales.total_quantity,
        sales.avg_net_paid,
        sales.total_net_profit
    FROM 
        SalesData sales
    JOIN 
        item ON sales.ws_item_sk = item.i_item_sk
    WHERE 
        sales.total_quantity > 50
)
SELECT 
    pi.i_item_id,
    pi.i_item_desc,
    pi.total_quantity,
    pi.avg_net_paid,
    pi.total_net_profit,
    tsi.s_store_id,
    tsi.total_sold
FROM 
    PopularItems pi
LEFT JOIN 
    TopSellingItems tsi ON pi.ws_item_sk = tsi.ws_item_sk
WHERE 
    pi.total_net_profit IS NOT NULL AND
    (pi.avg_net_paid > 20 OR pi.total_quantity > 100)
ORDER BY 
    pi.total_net_profit DESC
LIMIT 100;
