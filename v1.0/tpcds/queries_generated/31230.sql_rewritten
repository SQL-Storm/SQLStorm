WITH RECURSIVE customer_sales AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        SUM(ws.ws_sales_price) AS total_sales
    FROM 
        customer c
    LEFT JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY 
        c.c_customer_sk, c.c_first_name, c.c_last_name
    HAVING 
        total_sales > 1000
    UNION ALL
    SELECT 
        cs.c_customer_sk,
        cs.c_first_name,
        cs.c_last_name,
        SUM(cs.total_sales * 1.1) AS total_sales
    FROM 
        customer_sales cs
    JOIN 
        customer c ON cs.c_customer_sk = c.c_customer_sk
    WHERE 
        cs.total_sales IS NOT NULL
    GROUP BY 
        cs.c_customer_sk, cs.c_first_name, cs.c_last_name
),
customer_demographics AS (
    SELECT 
        cd.cd_demo_sk,
        cd.cd_gender,
        COUNT(DISTINCT cs.c_customer_sk) AS customer_count,
        AVG(cs.total_sales) AS avg_sales
    FROM 
        customer_sales cs
    JOIN 
        customer c ON cs.c_customer_sk = c.c_customer_sk
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    GROUP BY 
        cd.cd_demo_sk, cd.cd_gender
)
SELECT 
    cd.cd_demo_sk,
    cd.cd_gender,
    cd.customer_count,
    cd.avg_sales,
    CASE 
        WHEN cd.avg_sales IS NULL THEN 'No Sales'
        WHEN cd.avg_sales > 5000 THEN 'High Spender'
        ELSE 'Regular Spender'
    END AS customer_type
FROM 
    customer_demographics cd
WHERE 
    cd.customer_count > 10
ORDER BY 
    cd.avg_sales DESC
FETCH FIRST 10 ROWS ONLY;