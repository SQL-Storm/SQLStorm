
WITH RECURSIVE customer_hierarchy AS (
    SELECT 
        c_customer_sk, 
        c_first_name, 
        c_last_name, 
        c_current_cdemo_sk, 
        0 AS level
    FROM 
        customer
    WHERE 
        c_current_cdemo_sk IS NOT NULL
    UNION ALL
    SELECT 
        c.c_customer_sk, 
        c.c_first_name, 
        c.c_last_name, 
        c.c_current_cdemo_sk, 
        ch.level + 1
    FROM 
        customer c
    JOIN 
        customer_hierarchy ch ON c.c_current_cdemo_sk = ch.c_customer_sk
),
total_sales AS (
    SELECT
        w.w_warehouse_sk,
        SUM(ws.ws_net_profit) AS total_net_profit,
        SUM(ws.ws_ext_sales_price) AS total_net_sales
    FROM 
        web_sales ws
    JOIN 
        warehouse w ON ws.ws_warehouse_sk = w.w_warehouse_sk
    GROUP BY 
        w.w_warehouse_sk
),
average_sales AS (
    SELECT 
        warehouse_sk,
        AVG(total_net_sales) AS avg_net_sales,
        AVG(total_net_profit) AS avg_net_profit
    FROM 
        total_sales
    GROUP BY 
        warehouse_sk
)
SELECT 
    ch.c_customer_sk,
    ch.c_first_name,
    ch.c_last_name,
    COALESCE(ws_total.total_net_sales, 0) AS total_net_sales,
    CASE 
        WHEN COALESCE(ws_total.total_net_sales, 0) > avg_sales.avg_net_sales THEN 'Above Average'
        ELSE 'Below Average' 
    END AS sales_performance,
    COUNT(DISTINCT ws.ws_order_number) AS total_orders,
    MAX(ws.ws_sold_date_sk) AS last_order_date
FROM 
    customer_hierarchy ch
LEFT JOIN 
    web_sales ws ON ch.c_customer_sk = ws.ws_bill_customer_sk
LEFT JOIN 
    average_sales avg_sales ON (1=1)
LEFT JOIN 
    (
        SELECT 
            ws_bill_customer_sk, 
            SUM(ws_net_paid) AS total_net_sales 
        FROM 
            web_sales
        GROUP BY 
            ws_bill_customer_sk
    ) AS ws_total ON ch.c_customer_sk = ws_total.ws_bill_customer_sk
GROUP BY 
    ch.c_customer_sk, ch.c_first_name, ch.c_last_name, ws_total.total_net_sales, avg_sales.avg_net_sales
ORDER BY 
    total_net_sales DESC;
