
WITH CustomerReturns AS (
    SELECT sr_customer_sk, COUNT(DISTINCT sr_ticket_number) AS return_count
    FROM store_returns
    GROUP BY sr_customer_sk
),
HighReturnCustomers AS (
    SELECT c.c_customer_sk, c.c_first_name, c.c_last_name, cr.return_count
    FROM customer c
    JOIN CustomerReturns cr ON c.c_customer_sk = cr.sr_customer_sk
    WHERE cr.return_count > (SELECT AVG(return_count) FROM CustomerReturns)
),
PromotionalItems AS (
    SELECT p.p_item_sk, p.p_promo_name, p.p_discount_active
    FROM promotion p
    WHERE p.p_discount_active = 'Y'
),
FrequentBuyers AS (
    SELECT ws_bill_customer_sk, SUM(ws_quantity) AS total_quantity
    FROM web_sales
    GROUP BY ws_bill_customer_sk
    HAVING SUM(ws_quantity) > 100
),
ReturnAnalysis AS (
    SELECT c.c_customer_sk, COALESCE(hc.total_quantity, 0) AS total_quantity,
           COALESCE(cr.return_count, 0) AS return_count, 
           (COALESCE(cr.return_count, 0) * 1.0 / NULLIF(CASE WHEN COALESCE(hc.total_quantity, 0) = 0 THEN 1 ELSE hc.total_quantity END, 0)) * 100) AS return_rate
    FROM HighReturnCustomers c
    LEFT JOIN FrequentBuyers hc ON c.c_customer_sk = hc.ws_bill_customer_sk
    LEFT JOIN CustomerReturns cr ON c.c_customer_sk = cr.sr_customer_sk
),
ReturnStats AS (
    SELECT return_rate, PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY return_rate) OVER () AS median_return_rate
    FROM ReturnAnalysis
)
SELECT r.return_rate, 
       CASE 
           WHEN r.return_rate > rs.median_return_rate THEN 'Above Median'
           WHEN r.return_rate < rs.median_return_rate THEN 'Below Median'
           ELSE 'Equal to Median'
       END AS return_rate_analysis
FROM ReturnStats rs
JOIN ReturnAnalysis r ON r.return_rate IS NOT NULL
WHERE r.return_rate IS NOT NULL
ORDER BY r.return_rate DESC;
