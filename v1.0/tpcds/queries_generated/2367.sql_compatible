
WITH customer_info AS (
    SELECT 
        c.c_customer_sk, 
        c.c_first_name, 
        c.c_last_name, 
        cd.cd_gender, 
        cd.cd_marital_status, 
        cd.cd_purchase_estimate,
        cd.cd_credit_rating,
        ROW_NUMBER() OVER(PARTITION BY cd.cd_gender ORDER BY cd.cd_purchase_estimate DESC) AS purchase_rank
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
),
top_customers AS (
    SELECT 
        ci.c_customer_sk, 
        ci.c_first_name, 
        ci.c_last_name, 
        ci.cd_gender,
        ci.cd_marital_status,
        ci.cd_purchase_estimate
    FROM 
        customer_info ci
    WHERE 
        ci.purchase_rank <= 10
),
aggregate_sales AS (
    SELECT 
        ws_bill_customer_sk,
        SUM(ws_ext_sales_price) AS total_sales
    FROM 
        web_sales
    GROUP BY 
        ws_bill_customer_sk
),
sales_analysis AS (
    SELECT 
        tc.c_customer_sk,
        tc.c_first_name,
        tc.c_last_name,
        tc.cd_gender,
        tc.cd_marital_status,
        COALESCE(as.total_sales, 0) AS total_sales
    FROM 
        top_customers tc
    LEFT JOIN 
        aggregate_sales as ON tc.c_customer_sk = as.ws_bill_customer_sk
)
SELECT 
    sa.c_customer_sk,
    sa.c_first_name,
    sa.c_last_name,
    sa.cd_gender,
    sa.cd_marital_status,
    sa.total_sales,
    CASE 
        WHEN sa.total_sales > 1000 THEN 'High Value'
        WHEN sa.total_sales BETWEEN 500 AND 1000 THEN 'Medium Value'
        ELSE 'Low Value'
    END AS customer_value,
    (SELECT COUNT(DISTINCT ws_order_number) 
     FROM web_sales 
     WHERE ws_bill_customer_sk = sa.c_customer_sk) AS total_orders,
    (SELECT COUNT(DISTINCT wr_order_number) 
     FROM web_returns 
     WHERE wr_returning_customer_sk = sa.c_customer_sk) AS total_returns
FROM 
    sales_analysis sa
WHERE 
    sa.cd_gender IS NOT NULL
ORDER BY 
    sa.total_sales DESC;
