
WITH RankedSales AS (
    SELECT 
        ws.web_site_sk,
        ws.ws_order_number,
        SUM(ws.ws_ext_sales_price) AS total_sales,
        ROW_NUMBER() OVER (PARTITION BY ws.web_site_sk ORDER BY SUM(ws.ws_ext_sales_price) DESC) AS sales_rank
    FROM 
        web_sales AS ws
    JOIN 
        web_site AS w ON ws.ws_web_site_sk = w.web_site_sk
    WHERE 
        w.web_open_date_sk <= (
            SELECT MAX(d.d_date_sk) 
            FROM date_dim AS d 
            WHERE d.d_date = DATE '2002-10-01'
        )
    GROUP BY 
        ws.web_site_sk, ws.ws_order_number
),
HighValueCustomers AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        SUM(ss.ss_ext_sales_price) AS total_customer_spending
    FROM 
        customer AS c
    JOIN 
        customer_demographics AS cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    JOIN 
        store_sales AS ss ON c.c_customer_sk = ss.ss_customer_sk
    GROUP BY 
        c.c_customer_sk, c.c_first_name, c.c_last_name, cd.cd_gender
    HAVING 
        SUM(ss.ss_ext_sales_price) > 10000
),
SalesWithReturns AS (
    SELECT 
        ws.ws_order_number,
        SUM(ws.ws_net_paid) AS net_sales,
        COALESCE(SUM(sr.sr_return_amt), 0) AS total_returns,
        SUM(ws.ws_net_paid) - COALESCE(SUM(sr.sr_return_amt), 0) AS net_profit
    FROM 
        web_sales AS ws
    LEFT JOIN 
        store_returns AS sr ON ws.ws_order_number = sr.sr_ticket_number
    GROUP BY 
        ws.ws_order_number
)
SELECT 
    hvc.c_first_name,
    hvc.c_last_name,
    hvc.cd_gender,
    r.total_sales AS best_sales_site,
    COALESCE(s.total_returns, 0) AS return_amount,
    s.net_profit
FROM 
    HighValueCustomers AS hvc
LEFT JOIN 
    (SELECT 
        web_site_sk,
        total_sales 
     FROM 
        RankedSales 
     WHERE 
        sales_rank = 1) AS r ON hvc.c_customer_sk = r.web_site_sk
LEFT JOIN 
    SalesWithReturns AS s ON s.ws_order_number IN (
        SELECT ws_order_number 
        FROM web_sales WHERE ws_bill_customer_sk = hvc.c_customer_sk
    )
WHERE 
    hvc.cd_gender IS NOT NULL
ORDER BY 
    hvc.total_customer_spending DESC;
