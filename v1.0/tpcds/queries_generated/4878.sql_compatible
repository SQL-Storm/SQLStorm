
WITH RankedReturns AS (
    SELECT 
        sr_returned_date_sk,
        sr_return_time_sk,
        sr_item_sk,
        sr_customer_sk,
        sr_return_quantity,
        sr_return_amt,
        RANK() OVER (PARTITION BY sr_item_sk ORDER BY sr_returned_date_sk DESC) AS return_rank
    FROM 
        store_returns
    WHERE 
        sr_return_quantity > 0
),
CustomerDetails AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_credit_rating,
        wd.from_cust AS web_customer,
        COALESCE(hd.hd_buy_potential, 'Unknown') AS buying_potential
    FROM 
        customer AS c
    LEFT JOIN 
        customer_demographics AS cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN 
        household_demographics AS hd ON c.c_customer_sk = hd.hd_demo_sk
    LEFT JOIN 
        (SELECT DISTINCT c_customer_sk AS from_cust 
         FROM web_sales 
         WHERE ws_sold_date_sk > 1000) AS wd ON c.c_customer_sk = wd.from_cust
),
ProductReturns AS (
    SELECT 
        rr.sr_item_sk,
        SUM(rr.sr_return_quantity) AS total_returned,
        SUM(rr.sr_return_amt) AS total_return_amount
    FROM 
        RankedReturns AS rr
    GROUP BY 
        rr.sr_item_sk
)
SELECT 
    p.i_item_id,
    p.i_product_name,
    COALESCE(pr.total_returned, 0) AS total_returns,
    pr.total_return_amount,
    cd.c_customer_sk,
    cd.c_first_name,
    cd.c_last_name,
    cd.cd_gender,
    CASE 
        WHEN cd.cd_marital_status = 'M' THEN 'Married'
        WHEN cd.cd_marital_status = 'S' THEN 'Single'
        ELSE 'Unknown'
    END AS marital_status,
    cd.buying_potential
FROM 
    item AS p 
LEFT JOIN 
    ProductReturns AS pr ON p.i_item_sk = pr.sr_item_sk
LEFT JOIN 
    CustomerDetails AS cd ON cd.c_customer_sk IN (
        SELECT DISTINCT sr_customer_sk FROM store_returns WHERE sr_item_sk = p.i_item_sk
    )
WHERE 
    pr.total_return_amount > 100
ORDER BY 
    total_returns DESC
FETCH FIRST 100 ROWS ONLY;
