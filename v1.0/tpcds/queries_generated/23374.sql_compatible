
WITH RankedReturns AS (
    SELECT
        sr_customer_sk,
        SUM(sr_return_amount) AS total_returned,
        DENSE_RANK() OVER (PARTITION BY sr_customer_sk ORDER BY SUM(sr_return_amount) DESC) AS rank
    FROM
        store_returns
    GROUP BY
        sr_customer_sk
),
TopCustomers AS (
    SELECT
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        DATEDIFF(CURRENT_DATE, CONCAT(c.c_birth_year, '-', c.c_birth_month, '-', c.c_birth_day)) AS age,
        cd.cd_gender,
        cd.cd_marital_status
    FROM
        customer c
    JOIN
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    WHERE
        EXISTS (
            SELECT 1
            FROM RankedReturns rr
            WHERE rr.sr_customer_sk = c.c_customer_sk AND rr.rank = 1
        )
),
ReturnDetails AS (
    SELECT
        c.c_customer_id,
        COALESCE(SUM(sr_return_quantity), 0) AS total_returned_quantity,
        COALESCE(SUM(sr_return_amt_inc_tax), 0) AS total_returned_amount,
        c.c_birth_country,
        CASE
            WHEN cd.cd_marital_status = 'M' THEN 'Married'
            ELSE 'Not Married'
        END AS marital_status,
        ROW_NUMBER() OVER (PARTITION BY c.c_birth_country ORDER BY COALESCE(SUM(sr_return_amt_inc_tax), 0) DESC) AS country_rank
    FROM
        customer c
    LEFT JOIN store_returns sr ON c.c_customer_sk = sr.sr_customer_sk
    JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    GROUP BY
        c.c_customer_id, c.c_birth_country, cd.cd_marital_status
)
SELECT
    tc.c_customer_sk,
    tc.c_first_name,
    tc.c_last_name,
    rd.total_returned_quantity,
    rd.total_returned_amount,
    rd.marital_status,
    rd.country_rank
FROM
    TopCustomers tc
JOIN
    ReturnDetails rd ON tc.c_customer_sk = rd.c_customer_id
WHERE
    rd.total_returned_quantity > 0
    AND rd.country_rank <= 5
ORDER BY
    rd.total_returned_amount DESC
LIMIT 10;
