
WITH RankedSales AS (
    SELECT 
        ws.ws_order_number,
        ws.ws_sold_date_sk,
        ws.ws_ship_date_sk,
        ws.ws_quantity,
        ws.ws_sales_price,
        ws.ws_ext_sales_price,
        ws.ws_net_paid,
        ROW_NUMBER() OVER (PARTITION BY ws.ws_order_number ORDER BY ws.ws_sold_date_sk DESC) AS rnk
    FROM 
        web_sales ws
    JOIN 
        customer c ON ws.ws_bill_customer_sk = c.c_customer_sk
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    WHERE 
        cd.cd_marital_status = 'M' 
        AND cd.cd_gender = 'F'
        AND ws.ws_sold_date_sk BETWEEN 1000 AND 2000
),
AggregatedSales AS (
    SELECT 
        rs.ws_order_number,
        SUM(rs.ws_quantity) AS total_quantity,
        SUM(rs.ws_sales_price) AS total_sales,
        SUM(rs.ws_net_paid) AS total_net_paid
    FROM 
        RankedSales rs
    WHERE 
        rs.rnk = 1
    GROUP BY 
        rs.ws_order_number
)
SELECT 
    as.ws_order_number AS sales_order_id,
    DATEDIFF(CAST(MIN(d.d_date) AS DATE), CAST(MAX(d.d_date) AS DATE)) AS sales_period_days,
    as.total_quantity,
    as.total_sales,
    as.total_net_paid
FROM 
    AggregatedSales as
JOIN 
    date_dim d ON d.d_date_sk = as.ws_order_number -- Corrected join condition (not ws_sold_date_sk)
GROUP BY 
    as.ws_order_number, sales_period_days, as.total_quantity, as.total_sales, as.total_net_paid
ORDER BY 
    total_net_paid DESC
LIMIT 100;
