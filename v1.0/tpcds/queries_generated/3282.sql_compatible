
WITH CustomerSales AS (
    SELECT 
        c.c_customer_sk, 
        c.c_first_name, 
        c.c_last_name, 
        SUM(ws.ws_sales_price) AS total_web_sales,
        COUNT(DISTINCT ws.ws_order_number) AS order_count,
        AVG(ws.ws_net_profit) AS avg_net_profit,
        DENSE_RANK() OVER (PARTITION BY c.c_customer_sk ORDER BY SUM(ws.ws_sales_price) DESC) AS sales_rank
    FROM 
        customer c
    LEFT JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    WHERE 
        c.c_current_cdemo_sk IS NOT NULL
        AND ws.ws_sold_date_sk >= 1000 
    GROUP BY 
        c.c_customer_sk, c.c_first_name, c.c_last_name
),
HighValueCustomers AS (
    SELECT 
        cs.c_customer_sk,
        cs.c_first_name,
        cs.c_last_name,
        cs.total_web_sales,
        cs.order_count,
        cs.avg_net_profit
    FROM 
        CustomerSales cs
    WHERE 
        cs.sales_rank <= 10
)
SELECT 
    hvc.c_customer_sk,
    hvc.c_first_name,
    hvc.c_last_name,
    COALESCE(hvc.total_web_sales, 0) AS total_web_sales,
    COALESCE(hvc.order_count, 0) AS order_count,
    COALESCE(hvc.avg_net_profit, 0) AS avg_net_profit,
    d.d_year,
    SUM(ss.ss_sales_price) AS total_store_sales,
    SUM(ss.ss_net_profit) AS total_store_net_profit
FROM 
    HighValueCustomers hvc
LEFT JOIN 
    store_sales ss ON hvc.c_customer_sk = ss.ss_customer_sk
JOIN 
    date_dim d ON ss.ss_sold_date_sk = d.d_date_sk
GROUP BY 
    hvc.c_customer_sk, 
    hvc.c_first_name, 
    hvc.c_last_name, 
    d.d_year
HAVING 
    SUM(ss.ss_sales_price) > 1000
ORDER BY 
    total_web_sales DESC, 
    total_store_sales ASC;
