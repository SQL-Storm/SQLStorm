
WITH RankedSales AS (
    SELECT 
        ws_item_sk,
        ws_order_number,
        ws_sales_price,
        ws_net_profit,
        RANK() OVER (PARTITION BY ws_item_sk ORDER BY ws_net_profit DESC) AS profit_rank,
        ROW_NUMBER() OVER (PARTITION BY ws_item_sk ORDER BY ws_sales_price ASC) AS price_rank
    FROM 
        web_sales
    WHERE 
        ws_sales_price IS NOT NULL
        AND ws_net_profit > 0
),
InventoryStats AS (
    SELECT 
        inv_item_sk,
        SUM(inv_quantity_on_hand) AS total_quantity_on_hand,
        COUNT(DISTINCT inv_warehouse_sk) AS warehouse_count
    FROM 
        inventory
    WHERE 
        inv_date_sk = (SELECT MAX(inv_date_sk) FROM inventory)
    GROUP BY 
        inv_item_sk
),
SalesData AS (
    SELECT 
        cs_item_sk,
        SUM(cs_net_profit) AS total_net_profit,
        SUM(cs_quantity) AS total_quantity_sold
    FROM 
        catalog_sales
    GROUP BY 
        cs_item_sk
),
AddressDetails AS (
    SELECT 
        ca_address_sk,
        ca_city,
        ca_state,
        ca_country,
        COALESCE(NULLIF(ca_zip, ''), 'Unknown Zip') AS resolved_zip
    FROM 
        customer_address
),
CustomerDemographics AS (
    SELECT 
        cd_demo_sk,
        cd_gender,
        cd_marital_status
    FROM 
        customer_demographics
    WHERE 
        cd_credit_rating IS NOT NULL
)
SELECT 
    a.ca_city,
    a.ca_state,
    a.resolved_zip,
    COUNT(DISTINCT cs.cs_order_number) AS total_orders,
    SUM(cs.total_net_profit) AS aggregate_net_profit,
    AVG(i.total_quantity_on_hand) AS average_inventory,
    MAX(r.ws_net_profit) AS highest_web_profit,
    STRING_AGG(DISTINCT CASE WHEN c.cd_gender = 'M' THEN 'Male' ELSE 'Female' END) AS gender_distribution
FROM 
    AddressDetails a
LEFT JOIN 
    InventoryStats i ON a.ca_address_sk = i.inv_item_sk
JOIN 
    SalesData cs ON i.inv_item_sk = cs.cs_item_sk
JOIN 
    CustomerDemographics c ON c.cd_demo_sk = (
        SELECT c_customer_sk 
        FROM customer 
        WHERE c_current_cdemo_sk = c.cd_demo_sk 
        LIMIT 1
    )
FULL OUTER JOIN 
    RankedSales r ON r.ws_item_sk = i.inv_item_sk AND r.price_rank = 1
WHERE 
    a.ca_state = 'TX' AND 
    r.profit_rank <= 5
GROUP BY 
    a.ca_city, a.ca_state, a.resolved_zip
HAVING 
    COUNT(DISTINCT cs.cs_order_number) > 10
ORDER BY 
    aggregate_net_profit DESC, total_orders ASC;
