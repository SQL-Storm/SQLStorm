
WITH Customer_Info AS (
    SELECT c.c_customer_id, c.c_first_name, c.c_last_name, cd.cd_gender, cd.cd_marital_status, cd.cd_purchase_estimate,
           ROW_NUMBER() OVER (PARTITION BY cd.cd_gender ORDER BY cd.cd_purchase_estimate DESC) AS PurchaseRank
    FROM customer c
    JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
),
Top_Customers AS (
    SELECT ci.c_customer_id, ci.c_first_name, ci.c_last_name, ci.cd_gender, ci.cd_marital_status,
           SUM(ws.ws_ext_sales_price) AS Total_Sales
    FROM Customer_Info ci
    JOIN web_sales ws ON ci.c_customer_id = ws.ws_bill_customer_sk
    JOIN customer_demographics cd ON ci.c_customer_id = cd.cd_demo_sk
    WHERE ci.PurchaseRank <= 10
    GROUP BY ci.c_customer_id, ci.c_first_name, ci.c_last_name, ci.cd_gender, ci.cd_marital_status
),
Sales_Summary AS (
    SELECT ci.cd_gender,
           COUNT(DISTINCT ci.c_customer_id) AS Customer_Count,
           SUM(tc.Total_Sales) AS Total_Sales,
           AVG(tc.Total_Sales) AS Average_Sales
    FROM Top_Customers tc
    JOIN customer_demographics ci ON tc.cd_gender = ci.cd_gender
    GROUP BY ci.cd_gender
)
SELECT ss.cd_gender, ss.Customer_Count, ss.Total_Sales, ss.Average_Sales,
       CASE WHEN ss.Total_Sales > 100000 THEN 'High' 
            WHEN ss.Total_Sales BETWEEN 50000 AND 100000 THEN 'Medium'
            ELSE 'Low' END AS Sales_Category
FROM Sales_Summary ss
ORDER BY ss.Total_Sales DESC;
