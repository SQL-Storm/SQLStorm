
WITH RankedReturns AS (
    SELECT 
        sr_store_sk,
        sr_item_sk,
        SUM(sr_return_quantity) AS total_return_quantity,
        SUM(sr_return_amt) AS total_return_amt,
        ROW_NUMBER() OVER (PARTITION BY sr_store_sk ORDER BY SUM(sr_return_quantity) DESC) AS rnk
    FROM store_returns
    GROUP BY sr_store_sk, sr_item_sk
),
TotalSales AS (
    SELECT 
        ss_store_sk,
        ss_item_sk,
        SUM(ss_quantity) AS total_quantity_sold,
        SUM(ss_net_paid) AS total_sales_amt
    FROM store_sales
    GROUP BY ss_store_sk, ss_item_sk
),
CustomerDemographics AS (
    SELECT 
        c.c_customer_sk,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_purchase_estimate,
        hd.hd_income_band_sk
    FROM customer c
    JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN household_demographics hd ON c.c_current_hdemo_sk = hd.hd_demo_sk
)
SELECT 
    w.w_warehouse_id,
    s.s_store_name,
    COALESCE(cd.cd_marital_status, 'N/A') AS marital_status,
    SUM(tt.total_quantity_sold) AS total_quantity_sold,
    SUM(rr.total_return_quantity) AS total_return_quantity,
    COUNT(DISTINCT cd.c_customer_sk) AS unique_customers,
    SUM(CASE WHEN rr.total_return_amt IS NULL THEN 0 ELSE rr.total_return_amt END) AS total_return_amount
FROM warehouse w
JOIN store s ON w.w_warehouse_sk = s.s_warehouse_sk
LEFT JOIN TotalSales tt ON s.s_store_sk = tt.ss_store_sk
LEFT JOIN RankedReturns rr ON s.s_store_sk = rr.sr_store_sk
LEFT JOIN CustomerDemographics cd ON cd.c_customer_sk = s.s_store_sk 
GROUP BY w.w_warehouse_id, s.s_store_name, cd.cd_marital_status
HAVING SUM(rr.total_return_quantity) > 0
   OR MAX(rr.total_return_quantity) IS NOT NULL
ORDER BY w.w_warehouse_id, total_quantity_sold DESC, unique_customers DESC
WITH ROLLUP;
