
WITH SalesData AS (
    SELECT 
        ws.ws_item_sk,
        ws.ws_order_number,
        ws.ws_ship_date_sk,
        ws.ws_sales_price,
        ws.ws_quantity,
        ws.ws_ext_sales_price,
        d.d_date AS sale_date,
        ROW_NUMBER() OVER (PARTITION BY ws.ws_item_sk ORDER BY ws.ws_sold_date_sk DESC) AS rn
    FROM 
        web_sales ws
    JOIN 
        date_dim d ON ws.ws_sold_date_sk = d.d_date_sk
    WHERE 
        d.d_year = 2023
),
CustomerInfo AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_purchase_estimate,
        ROW_NUMBER() OVER (PARTITION BY c.c_customer_sk ORDER BY c.c_birth_year DESC) AS rn
    FROM 
        customer c
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
),
InventoryStatus AS (
    SELECT 
        inv.inv_item_sk,
        SUM(inv.inv_quantity_on_hand) AS total_quantity
    FROM 
        inventory inv
    GROUP BY 
        inv.inv_item_sk
)
SELECT 
    ci.c_first_name,
    ci.c_last_name,
    COUNT(sd.ws_order_number) AS total_orders,
    SUM(sd.ws_ext_sales_price) AS total_spent,
    AVG(sd.ws_sales_price) AS avg_sales_price,
    COALESCE(is.total_quantity, 0) AS available_inventory,
    SUM(sd.ws_quantity) AS total_quantity_ordered,
    CASE 
        WHEN AVG(sd.ws_sales_price) > 100 THEN 'High Value Customer'
        ELSE 'Regular Customer'
    END AS customer_category
FROM 
    SalesData sd
JOIN 
    CustomerInfo ci ON sd.ws_bill_customer_sk = ci.c_customer_sk
LEFT JOIN 
    InventoryStatus is ON sd.ws_item_sk = is.inv_item_sk
WHERE 
    ci.rn = 1 AND sd.rn = 1 
GROUP BY 
    ci.c_first_name, ci.c_last_name, is.total_quantity
ORDER BY 
    total_spent DESC
FETCH FIRST 10 ROWS ONLY
