
WITH ranked_sales AS (
    SELECT 
        ws.bill_customer_sk,
        SUM(ws.net_paid_inc_tax) AS total_sales,
        DENSE_RANK() OVER (PARTITION BY ws.bill_customer_sk ORDER BY SUM(ws.net_paid_inc_tax) DESC) AS sales_rank
    FROM 
        web_sales ws
    JOIN 
        customer c ON ws.bill_customer_sk = c.c_customer_sk
    WHERE 
        ws.sold_date_sk IN (SELECT d_date_sk FROM date_dim WHERE d_year = 2023)
    GROUP BY 
        ws.bill_customer_sk
),
customer_data AS (
    SELECT 
        c.c_customer_id, 
        c.c_first_name, 
        c.c_last_name,
        cd.cd_marital_status,
        cd.cd_gender,
        cd.cd_credit_rating,
        cd.cd_purchase_estimate
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
)
SELECT 
    cd.c_customer_id,
    CONCAT(cd.c_first_name, ' ', cd.c_last_name) AS full_name,
    cd.cd_marital_status,
    cd.cd_gender,
    COALESCE(r.total_sales, 0) AS total_sales,
    CASE 
        WHEN r.sales_rank = 1 THEN 'Top Customer'
        ELSE 'Regular Customer'
    END AS customer_type
FROM 
    customer_data cd
LEFT JOIN 
    ranked_sales r ON cd.c_customer_id = r.bill_customer_sk
WHERE 
    (cd.cd_credit_rating IS NOT NULL AND cd.cd_credit_rating <> 'Unknown')
    AND cd.cd_purchase_estimate > 1000
ORDER BY 
    total_sales DESC
FETCH FIRST 100 ROWS ONLY;
