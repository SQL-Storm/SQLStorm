
WITH ranked_sales AS (
    SELECT 
        ws.bill_customer_sk,
        cs.cs_bill_cdemo_sk,
        COUNT(DISTINCT ws.ws_order_number) AS total_orders,
        SUM(ws.ws_sales_price) AS total_sales,
        RANK() OVER (PARTITION BY ws.bill_customer_sk ORDER BY SUM(ws.ws_sales_price) DESC) AS rank
    FROM 
        web_sales ws
    LEFT JOIN 
        catalog_sales cs ON ws.ws_item_sk = cs.cs_item_sk
    WHERE 
        ws.ws_sold_date_sk BETWEEN (SELECT d_date_sk FROM date_dim WHERE d_date = '2023-01-01')
        AND (SELECT d_date_sk FROM date_dim WHERE d_date = '2023-12-31')
    GROUP BY 
        ws.bill_customer_sk, cs.cs_bill_cdemo_sk
),
customer_info AS (
    SELECT 
        c.c_customer_id,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_income_band_sk,
        CASE 
            WHEN cd.cd_purchase_estimate IS NULL THEN 'Low'
            WHEN cd.cd_purchase_estimate < 1000 THEN 'Medium'
            ELSE 'High'
        END AS purchase_estimate_category
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
)
SELECT 
    ci.c_customer_id,
    ci.cd_gender,
    ci.cd_marital_status,
    COUNT(rs.total_orders) AS order_count,
    SUM(rs.total_sales) AS total_sales,
    ci.purchase_estimate_category
FROM 
    customer_info ci
LEFT JOIN 
    ranked_sales rs ON ci.c_customer_id = rs.bill_customer_sk
GROUP BY 
    ci.c_customer_id, ci.cd_gender, ci.cd_marital_status, ci.purchase_estimate_category
HAVING 
    (SUM(rs.total_sales) > 10000 OR COUNT(rs.total_orders) > 5)
ORDER BY 
    total_sales DESC;
