
WITH RankedSales AS (
    SELECT
        ws.ws_sold_date_sk,
        ws.ws_item_sk,
        ws.ws_quantity,
        ws.ws_sales_price,
        ws.ws_net_profit,
        ROW_NUMBER() OVER (PARTITION BY ws.ws_item_sk ORDER BY ws.ws_net_profit DESC) AS rank
    FROM
        web_sales ws
    WHERE
        ws.ws_sales_price > (SELECT AVG(ws2.ws_sales_price) FROM web_sales ws2 WHERE ws2.ws_item_sk = ws.ws_item_sk)
),
CustomerDemographic AS (
    SELECT
        cd.cd_demo_sk,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_purchase_estimate,
        COALESCE(cd.cd_dep_count, 0) AS total_dependents,
        CASE 
            WHEN cd.cd_gender = 'M' THEN 'Male'
            WHEN cd.cd_gender = 'F' THEN 'Female'
            ELSE 'Other'
        END AS gender_desc
    FROM
        customer_demographics cd
    WHERE
        cd.cd_purchase_estimate IS NOT NULL
)
SELECT
    ca.ca_city,
    COUNT(DISTINCT cs.cs_order_number) AS total_orders,
    SUM(CASE WHEN cs.cs_sales_price IS NULL THEN 0 ELSE cs.cs_sales_price END) AS total_sales,
    AVG(RS.ws_net_profit) AS average_web_profit,
    STRING_AGG(DISTINCT CD.gender_desc || ' (' || CD.total_dependents || ')', ', ') AS demographic_summary
FROM
    customer_address ca
LEFT JOIN
    customer c ON c.c_current_addr_sk = ca.ca_address_sk
LEFT JOIN
    store_sales cs ON cs.ss_customer_sk = c.c_customer_sk
JOIN
    RankedSales RS ON RS.ws_item_sk = cs.ss_item_sk AND RS.rank <= 5
JOIN
    CustomerDemographic CD ON CD.cd_demo_sk = c.c_current_cdemo_sk
WHERE
    ca.ca_state = 'CA'
    AND (cs.cs_net_profit > 1000 OR cs.cs_net_profit IS NULL)
GROUP BY
    ca.ca_city
HAVING
    COUNT(DISTINCT cs.cs_order_number) >= (SELECT MAX(total_orders) FROM (SELECT COUNT(cs_order_number) AS total_orders FROM store_sales GROUP BY ss_customer_sk) AS temp)
ORDER BY
    average_web_profit DESC
LIMIT 10;
