
WITH RECURSIVE customer_tree AS (
    SELECT c_customer_sk, c_first_name, c_last_name, c_current_addr_sk, 1 AS level
    FROM customer
    WHERE c_current_addr_sk IS NOT NULL
    UNION ALL
    SELECT c.c_customer_sk, c.c_first_name, c.c_last_name, c.c_current_addr_sk, ct.level + 1
    FROM customer c
    JOIN customer_tree ct ON c.c_current_addr_sk = ct.c_current_addr_sk
    WHERE ct.level < 5
),
profitable_web_sales AS (
    SELECT ws.web_page_sk, SUM(ws.ws_net_profit) AS total_profit
    FROM web_sales ws
    JOIN item i ON ws.ws_item_sk = i.i_item_sk
    GROUP BY ws.web_page_sk
    HAVING SUM(ws.ws_net_profit) > 1000
),
high_income_customers AS (
    SELECT cd.cd_demo_sk, cd.cd_gender, cd.cd_marital_status, COUNT(c.c_customer_sk) AS customer_count
    FROM customer_demographics cd
    JOIN customer c ON c.c_current_cdemo_sk = cd.cd_demo_sk
    JOIN household_demographics hd ON cd.cd_demo_sk = hd.hd_demo_sk
    WHERE hd.hd_income_band_sk IS NOT NULL
    GROUP BY cd.cd_demo_sk, cd.cd_gender, cd.cd_marital_status
    HAVING COUNT(c.c_customer_sk) > 20
),
store_summary AS (
    SELECT s.s_store_sk, SUM(ss.ss_net_paid) AS total_sales
    FROM store s
    JOIN store_sales ss ON s.s_store_sk = ss.ss_store_sk
    GROUP BY s.s_store_sk
),
address_info AS (
    SELECT ca.ca_address_sk, ca.ca_city, COUNT(DISTINCT c.c_customer_sk) AS customer_count
    FROM customer_address ca
    LEFT JOIN customer c ON ca.ca_address_sk = c.c_current_addr_sk
    GROUP BY ca.ca_address_sk, ca.ca_city
)
SELECT
    ct.level,
    CONCAT(ct.c_first_name, ' ', ct.c_last_name) AS customer_name,
    ai.ca_city,
    COALESCE(hic.customer_count, 0) AS high_income_count,
    pw.total_profit,
    ss.total_sales
FROM customer_tree ct
JOIN address_info ai ON ct.c_current_addr_sk = ai.ca_address_sk
LEFT JOIN high_income_customers hic ON ct.c_customer_sk = hic.cd_demo_sk
LEFT JOIN profitable_web_sales pw ON ai.ca_address_sk = pw.web_page_sk
LEFT JOIN store_summary ss ON ct.c_current_addr_sk = ss.s_store_sk
WHERE ai.customer_count > 10 AND (pw.total_profit IS NOT NULL OR ss.total_sales > 5000)
ORDER BY ct.level, high_income_count DESC;
