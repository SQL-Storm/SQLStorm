
WITH RECURSIVE sales_hierarchy AS (
    SELECT c_customer_sk, c_first_name, c_last_name, 0 AS level
    FROM customer
    WHERE c_customer_sk IS NOT NULL
    
    UNION ALL
    
    SELECT sr_returning_customer_sk, c_first_name, c_last_name, level + 1
    FROM store_returns
    JOIN customer ON store_returns.sr_returning_customer_sk = customer.c_customer_sk
    JOIN sales_hierarchy ON sales_hierarchy.c_customer_sk = store_returns.sr_returned_customer_sk
),
filtered_inventory AS (
    SELECT inv_item_sk, SUM(inv_quantity_on_hand) AS total_quantity
    FROM inventory
    WHERE inv_date_sk = (SELECT MAX(inv_date_sk) FROM inventory)
    GROUP BY inv_item_sk
),
best_selling_items AS (
    SELECT ws_item_sk, SUM(ws_quantity) AS total_quantity_sold
    FROM web_sales
    WHERE ws_sold_date_sk >= (SELECT d_date_sk FROM date_dim WHERE d_date = '2023-10-01')
    GROUP BY ws_item_sk
),
item_info AS (
    SELECT i_item_sk, i_product_name, i_current_price
    FROM item
    WHERE i_rec_end_date IS NULL
),
ranked_items AS (
    SELECT 
        ii.i_item_sk,
        ii.i_product_name,
        ii.i_current_price,
        COALESCE(bsi.total_quantity_sold, 0) AS total_quantity_sold,
        COALESCE(fi.total_quantity, 0) AS total_quantity_on_hand,
        RANK() OVER (ORDER BY COALESCE(bsi.total_quantity_sold, 0) DESC) AS rank
    FROM item_info ii
    LEFT JOIN best_selling_items bsi ON ii.i_item_sk = bsi.ws_item_sk
    LEFT JOIN filtered_inventory fi ON ii.i_item_sk = fi.inv_item_sk
)
SELECT 
    sh.c_first_name,
    sh.c_last_name,
    ri.i_product_name,
    ri.i_current_price,
    ri.total_quantity_sold,
    ri.total_quantity_on_hand,
    (ri.i_current_price * ri.total_quantity_on_hand) AS total_value
FROM sales_hierarchy sh
JOIN ranked_items ri ON sh.c_customer_sk = (SELECT sr_returning_customer_sk FROM store_returns LIMIT 1)
WHERE ri.rank <= 10 
ORDER BY total_value DESC;
