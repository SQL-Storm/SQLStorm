
WITH RECURSIVE subset_customers AS (
    SELECT c_customer_sk, c_current_cdemo_sk, c_first_name, c_last_name, c_birth_month, c_birth_year
    FROM customer
    WHERE c_birth_month IS NOT NULL
    UNION ALL
    SELECT c.c_customer_sk, c.c_current_cdemo_sk, c.c_first_name, c.c_last_name, c.c_birth_month, c.c_birth_year
    FROM customer c
    JOIN subset_customers s ON c.c_current_cdemo_sk = s.c_current_cdemo_sk
    WHERE c.c_birth_month != s.c_birth_month
),
latest_returns AS (
    SELECT 
        COALESCE(sr_item_sk, cr_item_sk) AS item_sk,
        COUNT(DISTINCT sr_ticket_number) OVER (PARTITION BY COALESCE(sr_item_sk, cr_item_sk)) AS store_return_count,
        SUM(COALESCE(sr_return_amt, cr_return_amount)) AS total_returned_amt
    FROM store_returns sr
    FULL OUTER JOIN catalog_returns cr ON sr_item_sk = cr_item_sk
    WHERE cr_return_quantity > 0 OR sr_return_quantity > 0
),
high_value_customers AS (
    SELECT 
        cd.cd_demo_sk,
        cd.cd_gender,
        cd.cd_marital_status,
        SUM(ws.ws_net_profit) AS total_profit,
        RANK() OVER (PARTITION BY cd.cd_gender ORDER BY SUM(ws.ws_net_profit) DESC) AS profit_rank
    FROM customer_demographics cd
    JOIN web_sales ws ON cd.cd_demo_sk = ws.ws_bill_cdemo_sk
    GROUP BY cd.cd_demo_sk, cd.cd_gender, cd.cd_marital_status
    HAVING SUM(ws.ws_net_profit) > 1000
)
SELECT 
    c.c_first_name, 
    c.c_last_name,
    c.c_birth_month,
    c.c_birth_year,
    SUBSTRING(COALESCE(p.p_promo_name, 'No Promotion') FROM 1 FOR 20) AS promo_name,
    SUM(COALESCE(sr_return_quantity, 0) + COALESCE(cr_return_quantity, 0)) AS total_returns,
    COUNT(DISTINCT h.cd_demo_sk) AS demographic_count,
    COUNT(DISTINCT ls.item_sk) AS unique_items_returned
FROM customer c
JOIN subset_customers s ON c.c_customer_sk = s.c_customer_sk
LEFT JOIN high_value_customers h ON s.c_current_cdemo_sk = h.cd_demo_sk
LEFT JOIN latest_returns ls ON ls.item_sk IN (
    SELECT i_item_sk FROM item WHERE i_item_desc LIKE '%Special%' 
)
LEFT JOIN promotion p ON p.p_promo_sk = 
    (SELECT p2.p_promo_sk FROM promotion p2 WHERE p2.p_start_date_sk >= '2022-01-01' LIMIT 1)
WHERE s.c_birth_year IS NOT NULL
GROUP BY c.c_first_name, c.c_last_name, s.c_birth_month, s.c_birth_year, promo_name
HAVING COUNT(DISTINCT h.cd_demo_sk) > 0 OR promo_name IS NOT NULL
ORDER BY total_returns DESC
LIMIT 50;
