WITH RECURSIVE sales_data AS (
    SELECT 
        ws.web_site_id,
        ws_sold_date_sk,
        SUM(ws_sales_price) AS total_sales,
        RANK() OVER (PARTITION BY ws.web_site_id ORDER BY SUM(ws_sales_price) DESC) AS sales_rank
    FROM 
        web_sales ws
    GROUP BY 
        ws.web_site_id, ws_sold_date_sk
),
customer_info AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_purchase_estimate,
        ROW_NUMBER() OVER (PARTITION BY cd.cd_gender ORDER BY cd.cd_purchase_estimate DESC) AS gender_rank
    FROM 
        customer c
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    WHERE 
        cd.cd_purchase_estimate IS NOT NULL
),
top_customers AS (
    SELECT 
        ci.c_customer_sk, 
        ci.c_first_name, 
        ci.c_last_name,
        SUM(sd.total_sales) AS customer_total_sales
    FROM 
        customer_info ci
    JOIN 
        sales_data sd ON ci.c_customer_sk = sd.web_site_id
    GROUP BY 
        ci.c_customer_sk, ci.c_first_name, ci.c_last_name
    HAVING 
        SUM(sd.total_sales) > (SELECT AVG(total_sales) FROM sales_data)
),
recent_dates AS (
    SELECT 
        d.d_date_sk
    FROM 
        date_dim d
    WHERE 
        d.d_date >= cast('2002-10-01' as date) - INTERVAL '30 days'
)
SELECT 
    tc.c_first_name,
    tc.c_last_name,
    tc.customer_total_sales,
    rd.d_date_sk
FROM 
    top_customers tc
CROSS JOIN 
    recent_dates rd
ORDER BY 
    customer_total_sales DESC
LIMIT 10;