
WITH RankedSales AS (
    SELECT 
        ws.web_site_sk,
        COUNT(ws.ws_order_number) AS total_orders,
        SUM(ws.ws_net_profit) AS total_net_profit,
        RANK() OVER (PARTITION BY ws.web_site_sk ORDER BY SUM(ws.ws_net_profit) DESC) AS profit_rank
    FROM 
        web_sales ws
    INNER JOIN 
        date_dim dd ON ws.ws_sold_date_sk = dd.d_date_sk
    WHERE 
        dd.d_year = 2023
    GROUP BY 
        ws.web_site_sk
),
CustomerDemographics AS (
    SELECT 
        cd.cd_demo_sk,
        cd.cd_gender,
        CASE 
            WHEN cd.cd_marital_status = 'M' THEN 'Married'
            WHEN cd.cd_marital_status = 'S' THEN 'Single'
            ELSE 'Other'
        END AS marital_status,
        cd.cd_purchase_estimate,
        cd.cd_credit_rating
    FROM 
        customer_demographics cd
    WHERE 
        cd.cd_purchase_estimate > 1000
),
RecentReturns AS (
    SELECT 
        sr.sr_customer_sk,
        SUM(sr.sr_return_amt_inc_tax) AS total_returned_amt
    FROM 
        store_returns sr
    WHERE 
        sr.sr_returned_date_sk >= (
            SELECT MAX(d_date_sk) 
            FROM date_dim 
            WHERE d_date >= '2023-01-01'
        )
    GROUP BY 
        sr.sr_customer_sk
)
SELECT 
    c.c_customer_id,
    c.c_first_name,
    c.c_last_name,
    cd.marital_status,
    COALESCE(cr.total_returned_amt, 0) AS total_returned_amt,
    rs.total_orders,
    rs.total_net_profit
FROM 
    customer c
LEFT JOIN 
    CustomerDemographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
LEFT JOIN 
    RecentReturns cr ON c.c_customer_sk = cr.sr_customer_sk
LEFT JOIN 
    RankedSales rs ON c.c_current_addr_sk = rs.web_site_sk
WHERE 
    (cd.cd_gender = 'F' AND cd.cd_purchase_estimate > 500) OR 
    (cd.cd_gender = 'M' AND cd.cd_purchase_estimate <= 500)
ORDER BY 
    rs.total_net_profit DESC, rs.total_orders DESC;
