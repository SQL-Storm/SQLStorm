
WITH RankedSales AS (
    SELECT 
        ws.ws_sold_date_sk,
        ws.ws_item_sk,
        ws.ws_order_number,
        ws.ws_sales_price,
        ROW_NUMBER() OVER (PARTITION BY ws.ws_item_sk ORDER BY ws.ws_net_paid DESC) AS rn
    FROM 
        web_sales ws
    WHERE 
        ws.ws_sales_price > 0
),
ItemSales AS (
    SELECT 
        i.i_item_id,
        SUM(COALESCE(ws.ws_sales_price, 0)) AS total_sales,
        COUNT(DISTINCT ws.ws_order_number) AS order_count
    FROM 
        item i
    LEFT JOIN 
        web_sales ws ON i.i_item_sk = ws.ws_item_sk
    GROUP BY 
        i.i_item_id
),
CustomerReturns AS (
    SELECT 
        cr_returning_customer_sk,
        COUNT(DISTINCT cr_order_number) AS returns_count,
        SUM(COALESCE(cr_return_amount, 0)) AS total_return_amount
    FROM 
        catalog_returns
    GROUP BY 
        cr_returning_customer_sk
)
SELECT 
    ci.c_first_name || ' ' || ci.c_last_name AS customer_name,
    SUM(is.total_sales) AS overall_sales,
    SUM(COALESCE(cr.total_return_amount, 0)) AS overall_returns,
    SUM(cr.returns_count) AS total_returns,
    DENSE_RANK() OVER (ORDER BY SUM(is.total_sales) DESC) AS sales_rank
FROM 
    customer ci
LEFT JOIN 
    ItemSales is ON ci.c_customer_sk = is.i_item_id
LEFT JOIN 
    CustomerReturns cr ON ci.c_customer_sk = cr.cr_returning_customer_sk
WHERE 
    ci.c_birth_year < 1980 
    AND ci.c_current_cdemo_sk IS NOT NULL
GROUP BY 
    ci.c_customer_sk, ci.c_first_name, ci.c_last_name
HAVING 
    SUM(is.total_sales) > 1000
ORDER BY 
    sales_rank
LIMIT 10;
