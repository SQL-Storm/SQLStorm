
WITH RankedSales AS (
    SELECT 
        ws_bill_customer_sk, 
        SUM(ws_sales_price) AS total_sales, 
        COUNT(ws_order_number) AS total_orders,
        DENSE_RANK() OVER (PARTITION BY ws_bill_customer_sk ORDER BY SUM(ws_sales_price) DESC) AS sales_rank
    FROM 
        web_sales 
    GROUP BY 
        ws_bill_customer_sk
),
CustomerAddresses AS (
    SELECT 
        ca.ca_address_sk,
        ca.ca_city,
        ca.ca_state,
        ca.ca_country,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_purchase_estimate
    FROM 
        customer_address ca
    JOIN 
        customer c ON ca.ca_address_sk = c.c_current_addr_sk
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
),
HighSpenders AS (
    SELECT 
        r.ws_bill_customer_sk,
        c.ca_city,
        c.ca_state,
        c.ca_country,
        r.total_sales,
        r.total_orders
    FROM 
        RankedSales r
    JOIN 
        CustomerAddresses c ON r.ws_bill_customer_sk = c.ca_address_sk
    WHERE 
        r.sales_rank <= 10
),
ItemStats AS (
    SELECT 
        i.i_item_sk,
        AVG(i.i_current_price) AS avg_price,
        COUNT(DISTINCT ws.ws_item_sk) AS sales_count
    FROM 
        item i
    LEFT JOIN 
        web_sales ws ON i.i_item_sk = ws.ws_item_sk
    GROUP BY 
        i.i_item_sk
)
SELECT 
    hs.ws_bill_customer_sk,
    hs.ca_city,
    hs.ca_state,
    hs.ca_country,
    hs.total_sales,
    hs.total_orders,
    ARRAY_AGG(DISTINCT CONCAT('Item: ', CAST(i.i_item_id AS CHAR), ' Price: ', CAST(is.avg_price AS DECIMAL(10, 2)))) AS item_details
FROM 
    HighSpenders hs
LEFT JOIN 
    ItemStats is ON hs.ws_bill_customer_sk = is.i_item_sk
JOIN 
    item i ON i.i_item_sk = is.i_item_sk
GROUP BY 
    hs.ws_bill_customer_sk, hs.ca_city, hs.ca_state, hs.ca_country, hs.total_sales, hs.total_orders
ORDER BY 
    hs.total_sales DESC;
