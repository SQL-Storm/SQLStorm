
WITH CustomerMetrics AS (
    SELECT
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        SUM(ws.ws_net_paid_inc_tax) AS total_spent,
        COUNT(DISTINCT ws.ws_order_number) AS total_orders,
        COUNT(DISTINCT sr.ticket_number) AS total_returns,
        CASE 
            WHEN SUM(ws.ws_net_paid_inc_tax) > 1000 THEN 'High Value'
            WHEN SUM(ws.ws_net_paid_inc_tax) BETWEEN 500 AND 1000 THEN 'Medium Value'
            ELSE 'Low Value'
        END AS customer_value_segment
    FROM
        customer c
    JOIN
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    LEFT JOIN
        store_returns sr ON c.c_customer_sk = sr.sr_customer_sk
    GROUP BY
        c.c_customer_sk, c.c_first_name, c.c_last_name, cd.cd_gender, cd.cd_marital_status
),
DateRange AS (
    SELECT 
        MIN(d.d_date) AS start_date,
        MAX(d.d_date) AS end_date
    FROM 
        date_dim d
    WHERE 
        d.d_year = 2023
)
SELECT 
    cm.c_first_name,
    cm.c_last_name,
    cm.cd_gender,
    cm.cd_marital_status,
    cm.total_spent,
    cm.total_orders,
    cm.total_returns,
    cm.customer_value_segment,
    dr.start_date,
    dr.end_date
FROM 
    CustomerMetrics cm
CROSS JOIN DateRange dr
WHERE 
    cm.total_spent > 500
ORDER BY 
    cm.total_spent DESC
LIMIT 50;
