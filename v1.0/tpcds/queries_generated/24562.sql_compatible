
WITH RankedStores AS (
    SELECT 
        s_store_sk,
        s_store_name,
        s_state,
        RANK() OVER (PARTITION BY s_state ORDER BY s_number_employees DESC) AS rnk
    FROM 
        store
    WHERE 
        s_number_employees IS NOT NULL
),
CustomerSales AS (
    SELECT 
        c.c_customer_sk,
        COALESCE(SUM(ws.ws_net_profit), 0) AS total_web_profit,
        COUNT(DISTINCT ws.ws_order_number) AS total_web_orders
    FROM 
        customer c
    LEFT JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY 
        c.c_customer_sk
),
StoreReturns AS (
    SELECT 
        sr.store_sk,
        SUM(sr.return_quantity) AS total_returns,
        COUNT(sr.return_ticket_number) AS return_count
    FROM 
        store_returns sr
    GROUP BY 
        sr.store_sk
),
HighestReturns AS (
    SELECT 
        sr.store_sk,
        sr.total_returns,
        sr.return_count,
        RANK() OVER (ORDER BY sr.total_returns DESC) AS rn
    FROM 
        StoreReturns sr
)
SELECT 
    cs.c_customer_sk,
    COALESCE(cs.total_web_profit, 0) AS total_web_profit,
    COALESCE(cs.total_web_orders, 0) AS total_web_orders,
    s.s_store_name,
    s.s_state,
    s.rnk AS store_rank,
    COALESCE(h.total_returns, 0) AS store_returns,
    COALESCE(h.return_count, 0) AS return_count
FROM 
    CustomerSales cs
JOIN 
    RankedStores s ON s.s_store_sk IN (SELECT DISTINCT sr.store_sk FROM store_returns sr WHERE sr.return_quantity >= 1)
LEFT JOIN 
    HighestReturns h ON h.store_sk = s.s_store_sk
WHERE 
    s.rnk = 1
    AND (cs.total_web_profit IS NULL OR cs.total_web_profit >= 100.00)
ORDER BY 
    cs.total_web_profit DESC, 
    s.s_store_name ASC
FETCH FIRST 50 ROWS ONLY;
