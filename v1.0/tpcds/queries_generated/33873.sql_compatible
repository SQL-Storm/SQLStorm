
WITH RECURSIVE sales_summary AS (
    SELECT 
        cs_item_sk,
        SUM(cs_quantity) AS total_quantity,
        SUM(cs_net_profit) AS total_profit,
        cs_ship_mode_sk,
        1 AS level
    FROM 
        catalog_sales
    GROUP BY 
        cs_item_sk, cs_ship_mode_sk

    UNION ALL

    SELECT 
        ws_item_sk,
        SUM(ws_quantity) AS total_quantity,
        SUM(ws_net_profit) AS total_profit,
        ws_ship_mode_sk,
        level + 1
    FROM 
        web_sales
    JOIN sales_summary ON sales_summary.cs_item_sk = web_sales.ws_item_sk
    GROUP BY 
        ws_item_sk, ws_ship_mode_sk, level
),
best_selling_items AS (
    SELECT 
        cs.cs_item_sk,
        i.i_item_desc,
        SUM(cs.cs_quantity) AS total_sales,
        SUM(cs.cs_net_profit) AS total_profit,
        ROW_NUMBER() OVER (ORDER BY SUM(cs.cs_net_profit) DESC) AS sales_rank
    FROM 
        catalog_sales cs
    JOIN 
        item i ON cs.cs_item_sk = i.i_item_sk
    GROUP BY 
        cs.cs_item_sk, i.i_item_desc
),
high_value_customers AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        SUM(ws.ws_net_paid) AS total_spent
    FROM 
        customer c
    JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    WHERE 
        c.c_birth_year < 1980 
    GROUP BY 
        c.c_customer_sk, c.c_first_name, c.c_last_name
    HAVING 
        SUM(ws.ws_net_paid) > 1000 
)
SELECT 
    bsi.total_sales,
    bsi.total_profit,
    hvc.c_first_name,
    hvc.c_last_name,
    sss.total_quantity,
    sss.total_profit,
    sm.sm_type,
    COALESCE(bsi.sales_rank, 0) AS sales_rank
FROM 
    best_selling_items bsi
FULL OUTER JOIN 
    high_value_customers hvc ON bsi.cs_item_sk = hvc.c_customer_sk
LEFT JOIN 
    sales_summary sss ON bsi.cs_item_sk = sss.cs_item_sk
LEFT JOIN 
    ship_mode sm ON sss.cs_ship_mode_sk = sm.sm_ship_mode_sk
WHERE 
    (bsi.total_sales IS NOT NULL OR hvc.c_customer_sk IS NOT NULL)
    AND (sss.total_quantity IS NULL OR sss.total_profit > 0)
ORDER BY 
    bsi.total_sales DESC, hvc.total_spent DESC;
