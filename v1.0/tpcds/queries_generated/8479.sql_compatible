
WITH sales_summary AS (
    SELECT 
        s.s_store_name,
        SUM(ss.ss_sales_price) AS total_sales,
        COUNT(DISTINCT ss.ss_ticket_number) AS transaction_count,
        AVG(ss.ss_sales_price) AS avg_sales_price,
        COUNT(DISTINCT ss.ss_customer_sk) AS unique_customers
    FROM 
        store_sales ss
    JOIN 
        store s ON ss.ss_store_sk = s.s_store_sk
    WHERE 
        ss.ss_sold_date_sk BETWEEN (SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = 2022) - 30 AND 
                                   (SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = 2022)
    GROUP BY 
        s.s_store_name
),
customer_demographics AS (
    SELECT 
        cd.cd_gender,
        cd.cd_marital_status,
        COUNT(DISTINCT c.c_customer_sk) AS customer_count
    FROM 
        customer c 
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    GROUP BY 
        cd.cd_gender, cd.cd_marital_status
),
return_analysis AS (
    SELECT 
        sr_store_sk,
        SUM(sr_return_amt) AS total_return_amt,
        COUNT(sr_ticket_number) AS return_count
    FROM 
        store_returns
    GROUP BY 
        sr_store_sk
)
SELECT 
    s.s_store_name,
    ss.total_sales,
    ss.transaction_count,
    ss.avg_sales_price,
    COALESCE(cd.customer_count, 0) AS customer_count,
    COALESCE(ra.total_return_amt, 0) AS total_return_amt,
    COALESCE(ra.return_count, 0) AS return_count
FROM 
    sales_summary ss
JOIN 
    store s ON ss.s_store_name = s.s_store_name
LEFT JOIN 
    return_analysis ra ON s.s_store_sk = ra.sr_store_sk
LEFT JOIN 
    customer_demographics cd ON cd.customer_count IS NOT NULL
ORDER BY 
    ss.total_sales DESC
LIMIT 10;
