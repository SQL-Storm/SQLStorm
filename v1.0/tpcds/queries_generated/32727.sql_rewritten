WITH RECURSIVE sales_data AS (
  SELECT 
    c.c_customer_sk,
    c.c_first_name,
    c.c_last_name,
    ws.ws_sold_date_sk,
    ws.ws_item_sk,
    SUM(ws.ws_sales_price) AS total_sales,
    ROW_NUMBER() OVER (PARTITION BY c.c_customer_sk ORDER BY SUM(ws.ws_sales_price) DESC) AS sales_rank
  FROM 
    customer c
  JOIN 
    web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
  WHERE 
    ws.ws_sold_date_sk >= (SELECT MAX(d.d_date_sk) - 30 FROM date_dim d) 
  GROUP BY 
    c.c_customer_sk, c.c_first_name, c.c_last_name, ws.ws_sold_date_sk
),
top_customers AS (
  SELECT 
    c_customer_sk,
    c_first_name,
    c_last_name,
    total_sales
  FROM 
    sales_data
  WHERE 
    sales_rank <= 10
),
item_sales AS (
  SELECT 
    i.i_item_sk,
    i.i_item_id,
    COUNT(ws.ws_order_number) AS order_count,
    SUM(ws.ws_sales_price) AS item_total_sales
  FROM 
    item i
  JOIN 
    web_sales ws ON i.i_item_sk = ws.ws_item_sk
  GROUP BY 
    i.i_item_sk, i.i_item_id
),
customer_item_sales AS (
  SELECT 
    tc.c_customer_sk,
    tc.c_first_name,
    tc.c_last_name,
    ii.i_item_id,
    ii.item_total_sales
  FROM 
    top_customers tc
  LEFT JOIN 
    item_sales ii ON ii.order_count > 0
)
SELECT 
  ci.c_first_name,
  ci.c_last_name,
  ci.i_item_id,
  ci.item_total_sales,
  CASE 
    WHEN ci.item_total_sales IS NULL THEN 'No Sales'
    ELSE 'Sold'
  END AS sales_status,
  COALESCE((SELECT SUM(ws.ws_net_profit) 
            FROM web_sales ws 
            WHERE ws.ws_item_sk = ii.i_item_sk 
            AND ws.ws_bill_customer_sk = ci.c_customer_sk), 0) AS customer_net_profit
FROM 
  customer_item_sales ci
ORDER BY 
  ci.c_last_name, ci.c_first_name, ci.i_item_id;