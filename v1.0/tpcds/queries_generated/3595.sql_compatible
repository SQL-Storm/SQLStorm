
WITH CustomerReturns AS (
    SELECT 
        sr_customer_sk,
        SUM(sr_return_quantity) AS total_returned_quantity,
        SUM(sr_return_amt) AS total_return_amount,
        COUNT(DISTINCT sr_ticket_number) AS return_count
    FROM 
        store_returns
    GROUP BY 
        sr_customer_sk
),
ItemSales AS (
    SELECT 
        ws_item_sk,
        SUM(ws_quantity) AS total_sold_quantity,
        SUM(ws_sales_price * ws_quantity) AS total_sales_amount
    FROM 
        web_sales
    GROUP BY 
        ws_item_sk
),
HighReturningCustomers AS (
    SELECT 
        c.c_customer_id,
        cr.total_returned_quantity,
        cr.total_return_amount
    FROM 
        customer c
    JOIN 
        CustomerReturns cr ON c.c_customer_sk = cr.sr_customer_sk
    WHERE 
        cr.total_returned_quantity > (SELECT AVG(total_returned_quantity) FROM CustomerReturns)
),
SalesDetails AS (
    SELECT 
        ih.ws_item_sk,
        COALESCE(SUM(CASE WHEN cr.total_returned_quantity IS NOT NULL THEN 1 ELSE 0 END), 0) AS return_count,
        ih.total_sold_quantity,
        ih.total_sales_amount,
        CASE 
            WHEN ih.total_sold_quantity > 0 THEN (COALESCE(SUM(cr.total_returned_quantity), 0) / ih.total_sold_quantity) * 100 
            ELSE 0 END AS return_percentage
    FROM 
        ItemSales ih
    LEFT JOIN 
        CustomerReturns cr ON ih.ws_item_sk IN (SELECT sr_item_sk FROM store_returns)
    GROUP BY 
        ih.ws_item_sk, ih.total_sold_quantity, ih.total_sales_amount
)
SELECT 
    s.s_store_name,
    SUM(sd.total_sold_quantity) AS total_sold_quantity,
    SUM(sd.total_sales_amount) AS total_sales_amount,
    COUNT(DISTINCT hrc.c_customer_id) AS high_returning_customers_count,
    AVG(sd.return_percentage) AS average_return_percentage
FROM 
    store s
JOIN 
    SalesDetails sd ON sd.ws_item_sk IN (SELECT ws_item_sk FROM web_sales WHERE ws_ship_mode_sk IN (SELECT sm_ship_mode_sk FROM ship_mode))
JOIN 
    HighReturningCustomers hrc ON hrc.total_return_amount > 100
GROUP BY 
    s.s_store_name
HAVING 
    SUM(sd.total_sold_quantity) > 1000 
ORDER BY 
    average_return_percentage DESC;
