
WITH RankedSales AS (
    SELECT 
        ws.web_site_sk,
        ws.ws_order_number,
        SUM(ws.ws_sales_price) AS total_sales,
        RANK() OVER (PARTITION BY ws.web_site_sk ORDER BY SUM(ws.ws_sales_price) DESC) AS sales_rank
    FROM 
        web_sales ws
    WHERE 
        ws.ws_sold_date_sk BETWEEN 1 AND 31
    GROUP BY 
        ws.web_site_sk, ws.ws_order_number
),
CustomerAddress AS (
    SELECT 
        c.c_customer_sk,
        ca.ca_city,
        ca.ca_state
    FROM 
        customer c
    LEFT JOIN 
        customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
    WHERE 
        ca.ca_city IS NOT NULL
),
ReturnsData AS (
    SELECT 
        cr.cr_item_sk,
        SUM(cr.cr_return_quantity) AS total_returns
    FROM 
        catalog_returns cr
    GROUP BY 
        cr.cr_item_sk
)
SELECT 
    c.c_customer_id,
    c.c_first_name,
    c.c_last_name,
    ca.ca_city,
    ca.ca_state,
    R.total_sales AS website_sales,
    COALESCE(rt.total_returns, 0) AS item_returns,
    R.sales_rank
FROM 
    customer c
JOIN 
    CustomerAddress ca ON c.c_customer_sk = (SELECT MAX(ca2.c_current_addr_sk) FROM customer_address ca2 WHERE ca2.ca_address_sk IS NOT NULL)
LEFT JOIN 
    RankedSales R ON R.web_site_sk = (SELECT MIN(ws.ws_web_site_sk) FROM web_sales ws WHERE ws.ws_ship_customer_sk = c.c_customer_sk AND ws.ws_sold_date_sk IS NOT NULL)
LEFT JOIN 
    ReturnsData rt ON R.ws_order_number = rt.cr_item_sk
WHERE 
    EXISTS (
        SELECT 1 
        FROM web_sales ws 
        WHERE ws.ws_bill_customer_sk = c.c_customer_sk 
        AND ws.ws_net_paid > (SELECT AVG(ws_net_paid) FROM web_sales WHERE ws.ws_bill_customer_sk = c.c_customer_sk)
    )
ORDER BY 
    R.total_sales DESC, 
    c.c_last_name ASC;
