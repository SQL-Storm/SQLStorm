
WITH RECURSIVE CustomerHierarchy AS (
    SELECT 
        c.c_customer_sk, 
        c.c_first_name, 
        c.c_last_name, 
        cd.cd_marital_status,
        1 AS level
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    WHERE 
        cd.cd_marital_status = 'M'

    UNION ALL

    SELECT 
        c.c_customer_sk, 
        c.c_first_name, 
        c.c_last_name, 
        cd.cd_marital_status,
        ch.level + 1
    FROM 
        CustomerHierarchy ch
    JOIN 
        customer c ON c.c_current_cdemo_sk = ch.c_customer_sk
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    WHERE 
        cd.cd_marital_status = 'S'
),

SalesData AS (
    SELECT 
        ws.ws_item_sk,
        SUM(ws.ws_quantity) AS total_quantity,
        SUM(ws.ws_net_profit) AS total_profit,
        DENSE_RANK() OVER (PARTITION BY ws.ws_item_sk ORDER BY SUM(ws.ws_net_profit) DESC) AS profit_rank
    FROM 
        web_sales ws
    GROUP BY 
        ws.ws_item_sk
)

SELECT 
    ca.ca_city,
    ca.ca_state,
    SUM(sd.total_quantity) AS total_sold,
    COUNT(DISTINCT ch.c_customer_sk) AS customer_count,
    AVG(sd.total_profit) AS avg_profit_per_item,
    MAX(sd.total_profit) AS max_profit,
    CASE 
        WHEN MAX(sd.total_profit) IS NULL THEN 'No Sales'
        ELSE 'Sales Present'
    END AS sales_status
FROM 
    CustomerHierarchy ch
LEFT JOIN 
    SalesData sd ON ch.c_customer_sk = sd.ws_bill_customer_sk
LEFT JOIN 
    customer_address ca ON ch.c_current_addr_sk = ca.ca_address_sk
GROUP BY 
    ca.ca_city, 
    ca.ca_state,
    MAX(ch.level)
HAVING 
    SUM(sd.total_quantity) > 1000 AND
    MAX(ch.level) = 2
ORDER BY 
    total_sold DESC;
