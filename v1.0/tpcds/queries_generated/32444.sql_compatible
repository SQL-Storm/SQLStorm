
WITH RECURSIVE SalesHierarchy AS (
    SELECT 
        w.warehouse_id,
        SUM(ss_ext_sales_price) AS total_sales,
        1 AS level
    FROM 
        warehouse w
    JOIN 
        store s ON w.w_warehouse_sk = s.s_warehouse_sk
    LEFT JOIN 
        store_sales ss ON s.s_store_sk = ss.ss_store_sk
    WHERE 
        w.w_country = 'USA'
    GROUP BY 
        w.warehouse_id
    
    UNION ALL
    
    SELECT 
        w.warehouse_id,
        SUM(ss_ext_sales_price) AS total_sales,
        h.level + 1
    FROM 
        SalesHierarchy h
    JOIN 
        store s ON h.warehouse_id = s.s_warehouse_id
    JOIN 
        store_sales ss ON s.s_store_sk = ss.ss_store_sk
    JOIN 
        warehouse w ON s.s_warehouse_sk = w.w_warehouse_sk
    WHERE 
        w.w_country = 'USA'
    GROUP BY 
        w.warehouse_id, h.level
),
CalculatedReturns AS (
    SELECT 
        wr_returning_customer_sk,
        SUM(wr_return_amt_inc_tax) AS total_return_amount,
        COUNT(DISTINCT wr_order_number) AS total_return_count
    FROM 
        web_returns
    GROUP BY 
        wr_returning_customer_sk
),
CustomerData AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        ROW_NUMBER() OVER (PARTITION BY cd.cd_gender ORDER BY c.c_customer_sk) AS rn
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
)
SELECT 
    ch.warehouse_id,
    SUM(ch.total_sales) AS total_sales,
    COALESCE(SUM(cr.total_return_amount), 0) AS total_returns,
    COUNT(DISTINCT cd.c_customer_sk) AS unique_customers,
    MAX(CASE WHEN cd.rn <= 10 THEN cd.c_first_name ELSE NULL END) AS top_customers
FROM 
    SalesHierarchy ch
LEFT JOIN 
    CalculatedReturns cr ON cr.wr_returning_customer_sk IN (SELECT ws_bill_customer_sk FROM web_sales WHERE ws_sold_date_sk >= 20220101)
LEFT JOIN 
    CustomerData cd ON TRUE
GROUP BY 
    ch.warehouse_id
ORDER BY 
    total_sales DESC, total_returns ASC;
