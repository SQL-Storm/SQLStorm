
WITH CustomerReturns AS (
    SELECT 
        sr_customer_sk,
        SUM(sr_return_quantity) AS total_returns,
        COUNT(DISTINCT sr_ticket_number) AS num_returns
    FROM 
        store_returns
    GROUP BY 
        sr_customer_sk
),
HighReturnCustomers AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cr.total_returns,
        cr.num_returns,
        COALESCE(cd.cd_gender, 'Unknown') AS gender,
        CASE 
            WHEN cd.cd_marital_status = 'M' THEN 'Married'
            WHEN cd.cd_marital_status = 'S' THEN 'Single'
            ELSE 'Other'
        END AS marital_status
    FROM 
        customer c
    LEFT JOIN 
        CustomerReturns cr ON c.c_customer_sk = cr.sr_customer_sk
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    WHERE 
        cr.total_returns > (SELECT AVG(total_returns) FROM CustomerReturns)
        OR cr.total_returns IS NULL
),
SalesComparison AS (
    SELECT 
        ws_bill_customer_sk,
        SUM(ws_net_profit) AS total_profit,
        COUNT(DISTINCT ws_order_number) AS order_count
    FROM 
        web_sales
    GROUP BY 
        ws_bill_customer_sk
)
SELECT 
    hrc.c_customer_sk,
    hrc.c_first_name,
    hrc.c_last_name,
    hrc.gender,
    hrc.marital_status,
    COALESCE(sc.total_profit, 0) AS total_profit,
    COALESCE(sc.order_count, 0) AS order_count,
    CASE 
        WHEN hrc.total_returns > 10 AND COALESCE(sc.order_count, 0) = 0 THEN 'Potential Fraud'
        WHEN hrc.total_returns > 20 THEN 'High Returns'
        ELSE 'Regular Customer'
    END AS customer_type,
    COUNT(DISTINCT ws.ws_item_sk) OVER (PARTITION BY hrc.c_customer_sk) AS distinct_items_ordered
FROM 
    HighReturnCustomers hrc
LEFT JOIN 
    SalesComparison sc ON hrc.c_customer_sk = sc.ws_bill_customer_sk
LEFT JOIN 
    web_sales ws ON hrc.c_customer_sk = ws.ws_bill_customer_sk
WHERE 
    hrc.marital_status IN ('Married', 'Single')
ORDER BY 
    hrc.total_returns DESC, total_profit DESC
LIMIT 100;
