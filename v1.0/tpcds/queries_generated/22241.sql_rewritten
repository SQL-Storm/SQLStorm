WITH CustomerSales AS (
    SELECT 
        c.c_customer_id,
        SUM(ws.ws_ext_sales_price) AS total_sales,
        COUNT(DISTINCT ws.ws_order_number) AS total_orders,
        MAX(ws.ws_ship_date_sk) AS last_purchase_date
    FROM 
        customer c
    LEFT JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY 
        c.c_customer_id
),
SalesDetails AS (
    SELECT 
        cs.c_customer_id,
        cs.total_sales,
        cs.total_orders,
        cs.last_purchase_date,
        ROW_NUMBER() OVER (ORDER BY cs.total_sales DESC) AS rank,
        DENSE_RANK() OVER (PARTITION BY NULL ORDER BY cs.total_sales DESC) AS sales_density
    FROM 
        CustomerSales cs
),
HighValueCustomers AS (
    SELECT 
        sd.c_customer_id,
        sd.total_sales,
        sd.total_orders,
        CASE 
            WHEN sd.total_sales IS NULL THEN 'Unknown' 
            ELSE CASE 
                WHEN sd.total_sales > 1000 THEN 'Gold' 
                WHEN sd.total_sales BETWEEN 501 AND 1000 THEN 'Silver' 
                ELSE 'Bronze' 
            END 
        END AS customer_tier,
        COALESCE(sd.last_purchase_date, (SELECT MAX(d.d_date) FROM date_dim d)) AS effective_last_purchase_date
    FROM 
        SalesDetails sd
    WHERE 
        sd.total_orders > 5
)
SELECT 
    c.c_customer_id,
    c.c_first_name,
    c.c_last_name,
    hc.total_sales,
    hc.customer_tier,
    hc.effective_last_purchase_date,
    d.d_date AS sample_date
FROM 
    customer c
JOIN 
    HighValueCustomers hc ON c.c_customer_id = hc.c_customer_id
RIGHT JOIN 
    date_dim d ON d.d_date = COALESCE(hc.effective_last_purchase_date, cast('2002-10-01' as date))
WHERE 
    (d.d_weekend = 'Y' OR hc.total_sales IS NULL)
    AND NOT EXISTS (
        SELECT 1 
        FROM store_sales ss 
        WHERE ss.ss_sold_date_sk = d.d_date_sk 
        AND ss.ss_customer_sk = c.c_customer_sk
    )
ORDER BY 
    hc.total_sales DESC, 
    hc.customer_tier,
    d.d_date
FETCH FIRST 50 ROWS ONLY;