
WITH RECURSIVE SalesHierarchy AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        COALESCE(SUM(ss.ss_net_paid), 0) AS total_sales,
        0 AS level
    FROM 
        customer c
    LEFT JOIN 
        store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    GROUP BY 
        c.c_customer_sk, c.c_first_name, c.c_last_name

    UNION ALL

    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        COALESCE(SUM(ss.ss_net_paid), 0) AS total_sales,
        sh.level + 1
    FROM 
        SalesHierarchy sh
    LEFT JOIN 
        store_sales ss ON sh.c_customer_sk = ss.ss_customer_sk
    JOIN 
        customer c ON ss.ss_customer_sk = c.c_customer_sk
    WHERE 
        sh.total_sales > 1000
    GROUP BY 
        c.c_customer_sk, c.c_first_name, c.c_last_name, sh.level
)

SELECT 
    ch.c_first_name,
    ch.c_last_name,
    ch.total_sales,
    DENSE_RANK() OVER (ORDER BY ch.total_sales DESC) AS sales_rank,
    CASE 
        WHEN ch.total_sales IS NULL THEN 'No Sales'
        WHEN ch.total_sales BETWEEN 0 AND 1000 THEN 'Low Sales'
        WHEN ch.total_sales BETWEEN 1001 AND 5000 THEN 'Medium Sales'
        ELSE 'High Sales'
    END AS sales_category
FROM 
    SalesHierarchy ch
WHERE 
    ch.level = 0
ORDER BY 
    ch.total_sales DESC;
