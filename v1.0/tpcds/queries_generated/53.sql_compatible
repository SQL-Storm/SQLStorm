
WITH CustomerReturns AS (
    SELECT
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        COUNT(DISTINCT sr.sr_ticket_number) AS total_store_returns,
        SUM(sr.sr_return_amt) AS total_return_amount,
        SUM(sr.sr_return_quantity) AS total_return_quantity
    FROM
        customer c
        LEFT JOIN store_returns sr ON c.c_customer_sk = sr.sr_customer_sk
    GROUP BY
        c.c_customer_sk, c.c_first_name, c.c_last_name
),
WebReturns AS (
    SELECT
        wr_returning_customer_sk,
        COUNT(DISTINCT wr_order_number) AS total_web_returns,
        SUM(wr_return_amt) AS total_web_return_amount
    FROM
        web_returns
    GROUP BY
        wr_returning_customer_sk
),
CustomerDemographics AS (
    SELECT
        cd.cd_demo_sk,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_purchase_estimate,
        cd.cd_credit_rating,
        hd.hd_income_band_sk
    FROM
        customer_demographics cd
        LEFT JOIN household_demographics hd ON cd.cd_demo_sk = hd.hd_demo_sk
),
RevenueAnalysis AS (
    SELECT
        CAST(d.d_date AS DATE) AS sale_date,
        SUM(ws.ws_net_paid) AS total_web_sales,
        SUM(cs.cs_net_paid) AS total_catalog_sales,
        SUM(ss.ss_net_paid) AS total_store_sales,
        SUM(ws.ws_net_paid) + SUM(cs.cs_net_paid) + SUM(ss.ss_net_paid) AS total_sales
    FROM
        date_dim d
        LEFT JOIN web_sales ws ON d.d_date_sk = ws.ws_sold_date_sk
        LEFT JOIN catalog_sales cs ON d.d_date_sk = cs.cs_sold_date_sk
        LEFT JOIN store_sales ss ON d.d_date_sk = ss.ss_sold_date_sk
    GROUP BY
        CAST(d.d_date AS DATE)
    HAVING
        SUM(ws.ws_net_paid) + SUM(cs.cs_net_paid) + SUM(ss.ss_net_paid) > (
            SELECT AVG(total_sales) FROM 
            (
                SELECT 
                    SUM(ws.ws_net_paid) + SUM(cs.cs_net_paid) + SUM(ss.ss_net_paid) AS total_sales
                FROM
                    date_dim d
                    LEFT JOIN web_sales ws ON d.d_date_sk = ws.ws_sold_date_sk
                    LEFT JOIN catalog_sales cs ON d.d_date_sk = cs.cs_sold_date_sk
                    LEFT JOIN store_sales ss ON d.d_date_sk = ss.ss_sold_date_sk
                GROUP BY
                    CAST(d.d_date AS DATE)
            ) AS avg_sales
        )
)
SELECT
    cr.c_customer_sk,
    cr.c_first_name,
    cr.c_last_name,
    COALESCE(cr.total_store_returns, 0) AS total_store_returns,
    COALESCE(wr.total_web_returns, 0) AS total_web_returns,
    cd.cd_gender,
    cd.cd_marital_status,
    ca.ca_state,
    ra.sale_date,
    ra.total_web_sales,
    ra.total_catalog_sales,
    ra.total_store_sales
FROM
    CustomerReturns cr
    FULL OUTER JOIN WebReturns wr ON cr.c_customer_sk = wr.wr_returning_customer_sk
    JOIN CustomerDemographics cd ON cr.c_customer_sk = cd.cd_demo_sk
    JOIN customer_address ca ON cr.c_customer_sk = ca.ca_address_sk
    JOIN RevenueAnalysis ra ON CAST(ra.sale_date AS DATE) > '2023-01-01'
WHERE
    cd.cd_purchase_estimate IS NOT NULL
    AND (cd.cd_gender = 'F' OR cd.cd_marital_status = 'M')
ORDER BY
    cr.total_store_returns DESC, 
    ra.total_store_sales DESC;
