
WITH RECURSIVE CTE_Customer_Sales AS (
    SELECT c.c_customer_sk, c.c_customer_id, 
           COALESCE(SUM(ws.ws_sales_price), 0) AS total_sales
    FROM customer c
    LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_ship_customer_sk
    GROUP BY c.c_customer_sk, c.c_customer_id
    UNION ALL
    SELECT c.c_customer_sk,
           c.c_customer_id,
           COALESCE(SUM(cs.cs_sales_price), 0) + cte.total_sales
    FROM customer c
    JOIN catalog_sales cs ON c.c_customer_sk = cs.cs_ship_customer_sk
    JOIN CTE_Customer_Sales cte ON c.c_customer_sk = cte.c_customer_sk
    GROUP BY c.c_customer_sk, c.c_customer_id, cte.total_sales
)
SELECT 
    cc.cc_call_center_sk, 
    cc.cc_name, 
    SUM(cte.total_sales) AS total_sales,
    COUNT(c.c_customer_sk) AS num_customers,
    AVG(cte.total_sales) OVER (PARTITION BY cc.cc_call_center_sk) AS avg_sales_per_customer,
    CASE 
        WHEN AVG(cte.total_sales) OVER (PARTITION BY cc.cc_call_center_sk) > 1000 THEN 'High Value'
        WHEN AVG(cte.total_sales) OVER (PARTITION BY cc.cc_call_center_sk) BETWEEN 500 AND 1000 THEN 'Medium Value'
        ELSE 'Low Value'
    END AS customer_value_band
FROM call_center cc
LEFT JOIN customer c ON c.c_current_cdemo_sk = cc.cc_call_center_sk
LEFT JOIN CTE_Customer_Sales cte ON cte.c_customer_sk = c.c_customer_sk
LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
WHERE cc.cc_closed_date_sk IS NULL
AND (cc.cc_employees > 0 OR cc.cc_sq_ft > 1000)
GROUP BY cc.cc_call_center_sk, cc.cc_name
ORDER BY total_sales DESC
LIMIT 20;
