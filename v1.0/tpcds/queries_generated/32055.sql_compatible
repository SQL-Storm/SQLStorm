
WITH RECURSIVE CustomerHierarchy AS (
    SELECT c_customer_sk, c_first_name, c_last_name, c_current_cdemo_sk, 1 AS depth
    FROM customer
    WHERE c_current_cdemo_sk IS NOT NULL
    UNION ALL
    SELECT c.c_customer_sk, c.c_first_name, c.c_last_name, c.c_current_cdemo_sk, ch.depth + 1
    FROM customer c
    JOIN CustomerHierarchy ch ON c.c_current_cdemo_sk = ch.c_current_cdemo_sk
),
RecentReturns AS (
    SELECT 
        sr_customer_sk,
        SUM(sr_return_quantity) AS total_return_quantity,
        COUNT(sr_ticket_number) AS total_returns,
        SUM(sr_return_amt_inc_tax) AS total_return_amt
    FROM store_returns
    WHERE sr_returned_date_sk >= (SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = 2023)
    GROUP BY sr_customer_sk
),
CustomerRanking AS (
    SELECT 
        ch.c_customer_sk,
        CONCAT(ch.c_first_name, ' ', ch.c_last_name) AS full_name,
        r.total_return_quantity,
        r.total_returns,
        r.total_return_amt,
        RANK() OVER (ORDER BY r.total_return_amt DESC) AS return_rank
    FROM CustomerHierarchy ch
    LEFT JOIN RecentReturns r ON ch.c_customer_sk = r.sr_customer_sk
)
SELECT 
    c.full_name,
    c.total_return_quantity,
    c.total_returns,
    c.total_return_amt,
    COALESCE(CAST(c.return_rank AS CHAR), 'Not Ranked') AS ranking
FROM CustomerRanking c
WHERE c.total_return_quantity > 0
  AND c.total_returns > 5
ORDER BY c.return_rank
LIMIT 10
