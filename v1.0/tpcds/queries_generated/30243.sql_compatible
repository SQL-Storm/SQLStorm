
WITH RECURSIVE sales_data AS (
    SELECT 
        ws_sold_date_sk,
        ws_item_sk,
        ws_quantity,
        ws_sales_price,
        ws_ext_sales_price,
        1 AS level
    FROM 
        web_sales
    WHERE 
        ws_sold_date_sk >= (SELECT MAX(d_date_sk) - 30 FROM date_dim)  

    UNION ALL

    SELECT 
        sd.ws_sold_date_sk,
        sd.ws_item_sk,
        sd.ws_quantity,
        sd.ws_sales_price,
        sd.ws_ext_sales_price,
        sd.level + 1
    FROM 
        web_sales sd
    JOIN 
        sales_data s ON sd.ws_sold_date_sk < s.ws_sold_date_sk 
    WHERE 
        s.level < 5  
),
customer_sales AS (
    SELECT 
        c.c_customer_sk,
        SUM(ws_ext_sales_price) AS total_sales,
        COUNT(DISTINCT ws_item_sk) AS unique_items
    FROM 
        sales_data
    JOIN 
        web_sales ws ON sales_data.ws_item_sk = ws.ws_item_sk
    JOIN 
        customer c ON ws.ws_bill_customer_sk = c.c_customer_sk
    GROUP BY 
        c.c_customer_sk
),
ranked_sales AS (
    SELECT 
        cs.c_customer_sk,
        cs.total_sales,
        cs.unique_items,
        RANK() OVER (ORDER BY cs.total_sales DESC) AS sales_rank
    FROM 
        customer_sales cs
),
customer_info AS (
    SELECT 
        cd.cd_demo_sk,
        cd.cd_gender,
        cd.cd_marital_status,
        r.r_reason_desc
    FROM 
        customer_demographics cd
    LEFT JOIN 
        reason r ON cd.cd_demo_sk % 5 = r.r_reason_sk  
)
SELECT 
    r.cd_gender AS gender,
    SUM(rs.total_sales) AS summed_sales,
    AVG(rs.unique_items) AS avg_unique_items,
    COUNT(rs.c_customer_sk) AS customer_count
FROM 
    ranked_sales rs
JOIN 
    customer_info r ON rs.c_customer_sk = r.cd_demo_sk
WHERE 
    rs.sales_rank <= 100  
GROUP BY 
    r.cd_gender
ORDER BY 
    summed_sales DESC;
