
WITH RECURSIVE AddressCTE AS (
    SELECT
        ca_address_sk,
        ca_city,
        ca_state,
        NULL AS parent_address
    FROM
        customer_address
    WHERE
        ca_city IS NOT NULL

    UNION ALL

    SELECT
        a.ca_address_sk,
        a.ca_city,
        a.ca_state,
        cte.ca_address_sk AS parent_address
    FROM
        customer_address a
    JOIN
        AddressCTE cte ON a.ca_state = cte.ca_state AND a.ca_city <> cte.ca_city
)
SELECT
    c.c_customer_id,
    c.c_first_name,
    c.c_last_name,
    ca.ca_city,
    ca.ca_state,
    SUM(COALESCE(ss.ss_net_profit, 0)) AS total_store_sales_profit,
    COUNT(DISTINCT ws.ws_order_number) AS total_web_orders,
    AVG(ws.ws_net_paid_inc_tax) FILTER (WHERE ws.ws_sold_date_sk > (SELECT MAX(d.d_date_sk) FROM date_dim d WHERE d.d_dow = 0)) AS avg_web_sale_weekend,
    STRING_AGG(DISTINCT wp.wp_url) FILTER (WHERE wp.wp_autogen_flag = 'Y') AS autogenerated_web_pages,
    ROW_NUMBER() OVER (PARTITION BY ca.ca_city ORDER BY SUM(ss.ss_net_profit) DESC) AS profit_rank,
    CASE
        WHEN COUNT(DISTINCT sr.sr_ticket_number) > 5 THEN 'High'
        ELSE 'Low'
    END AS return_volume_category
FROM
    customer c
LEFT JOIN
    store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
LEFT JOIN
    web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
LEFT JOIN
    customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
LEFT JOIN
    web_page wp ON ws.ws_web_page_sk = wp.wp_web_page_sk
LEFT JOIN
    store_returns sr ON c.c_customer_sk = sr.sr_customer_sk
JOIN
    AddressCTE ac ON ca.ca_address_sk = ac.ca_address_sk
WHERE
    c.c_birth_year IS NOT NULL
    AND ca.ca_state IN ('CA', 'TX', 'NY')
GROUP BY
    c.c_customer_id,
    c.c_first_name,
    c.c_last_name,
    ca.ca_city,
    ca.ca_state
ORDER BY
    total_store_sales_profit DESC,
    c.c_last_name ASC
LIMIT 100;
