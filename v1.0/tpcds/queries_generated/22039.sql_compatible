
WITH RECURSIVE CustomerHierarchy AS (
    SELECT c_customer_sk, c_first_name, c_last_name, c_current_cdemo_sk, 
           c_birth_month, c_birth_year, c_birth_day, 
           1 AS level
    FROM customer
    WHERE c_birth_month IS NOT NULL AND c_birth_year IS NOT NULL
    UNION ALL
    SELECT ch.c_customer_sk, ch.c_first_name, ch.c_last_name, 
           ch.c_current_cdemo_sk, 
           CASE WHEN ch.c_birth_month = 12 THEN 1 ELSE ch.c_birth_month + 1 END AS c_birth_month,
           CASE WHEN ch.c_birth_month = 12 THEN ch.c_birth_year + 1 ELSE ch.c_birth_year END AS c_birth_year,
           ch.c_birth_day,
           ch.level + 1
    FROM CustomerHierarchy ch
    WHERE ch.level < 12
),
SalesData AS (
    SELECT ws_bill_customer_sk AS customer_sk,
           SUM(ws_net_profit) AS total_profit,
           COUNT(DISTINCT ws_order_number) AS order_count
    FROM web_sales
    WHERE ws_sold_date_sk >= (SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = 2023) - 30
    GROUP BY ws_bill_customer_sk
),
PoorDemographics AS (
    SELECT cd_demo_sk, cd_gender,
           CASE 
               WHEN cd_purchase_estimate < 100 THEN 'Low'
               WHEN cd_purchase_estimate BETWEEN 100 AND 500 THEN 'Medium'
               ELSE 'High'
           END AS income_bracket
    FROM customer_demographics
    WHERE cd_marital_status = 'M'
),
CustomerWithSales AS (
    SELECT ch.c_customer_sk, ch.c_first_name, ch.c_last_name,
           sd.total_profit, sd.order_count,
           pd.income_bracket
    FROM CustomerHierarchy ch
    LEFT JOIN SalesData sd ON ch.c_customer_sk = sd.customer_sk
    LEFT JOIN PoorDemographics pd ON ch.c_current_cdemo_sk = pd.cd_demo_sk
),
FinalReport AS (
    SELECT c.first_name,
           c.last_name,
           COALESCE(c.total_profit, 0) AS total_profit,
           COALESCE(c.order_count, 0) AS order_count,
           c.income_bracket,
           CASE 
               WHEN c.total_profit IS NULL THEN 'No Sales'
               WHEN c.order_count = 0 THEN 'No Orders'
               ELSE 'Active'
           END AS sales_status
    FROM CustomerWithSales c
    WHERE c.income_bracket IS NOT NULL
)
SELECT * 
FROM FinalReport
WHERE (total_profit > 1000 AND income_bracket = 'High')
   OR (total_profit < 100 AND income_bracket = 'Low')
   OR (sales_status = 'No Sales' AND c_month = 12)
ORDER BY total_profit DESC, last_name ASC
LIMIT 100;
