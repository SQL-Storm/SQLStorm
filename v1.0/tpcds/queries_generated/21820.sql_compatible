
WITH RankedSales AS (
    SELECT 
        ws.web_site_sk,
        SUM(ws_ext_sales_price) AS total_sales,
        AVG(ws_net_profit) AS avg_profit,
        COUNT(DISTINCT ws_order_number) AS unique_orders,
        ROW_NUMBER() OVER (PARTITION BY ws.web_site_sk ORDER BY SUM(ws_ext_sales_price) DESC) AS sales_rank
    FROM 
        web_sales ws
    JOIN 
        customer c ON ws.ws_bill_customer_sk = c.c_customer_sk 
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    WHERE 
        cd.cd_gender = 'F' AND 
        c.c_birth_year < 1980 AND 
        c.c_preferred_cust_flag = 'Y'
    GROUP BY 
        ws.web_site_sk
), 
RecentReturns AS (
    SELECT 
        wr_returning_customer_sk,
        SUM(wr_return_quantity) AS total_returns,
        COUNT(wr_order_number) AS return_count
    FROM 
        web_returns
    WHERE 
        wr_returned_date_sk > (SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = 2001)
    GROUP BY 
        wr_returning_customer_sk
),
SalesWithReturnImpact AS (
    SELECT 
        rs.web_site_sk,
        rs.total_sales,
        rs.avg_profit,
        COALESCE(rr.total_returns, 0) AS total_returns,
        CASE 
            WHEN rr.total_returns IS NULL THEN 'No Returns'
            ELSE 'Has Returns'
        END AS return_status
    FROM 
        RankedSales rs
    LEFT JOIN 
        RecentReturns rr ON rs.web_site_sk = rr.wr_returning_customer_sk
)
SELECT 
    swr.web_site_sk,
    swr.total_sales,
    swr.avg_profit,
    swr.return_status,
    CASE 
        WHEN swr.total_sales > 50000 THEN 'High Value'
        WHEN swr.total_sales BETWEEN 20000 AND 50000 THEN 'Medium Value'
        ELSE 'Low Value'
    END AS sales_category
FROM 
    SalesWithReturnImpact swr
WHERE 
    swr.sales_rank <= 5 
ORDER BY 
    swr.total_sales DESC
UNION ALL 
SELECT 
    -1,  
    0 AS total_sales,
    NULL AS avg_profit,
    'No Returns' AS return_status,
    'Unknown' AS sales_category
FROM 
    (SELECT 1) AS dual
WHERE 
    NOT EXISTS (SELECT 1 FROM SalesWithReturnImpact);
