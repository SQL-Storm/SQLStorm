
WITH RECURSIVE address_hierarchy AS (
    SELECT
        ca_address_sk,
        ca_street_name,
        ca_city,
        ca_state,
        ca_country,
        1 AS level
    FROM customer_address
    WHERE ca_city IS NOT NULL

    UNION ALL

    SELECT
        a.ca_address_sk,
        a.ca_street_name,
        a.ca_city,
        a.ca_state,
        a.ca_country,
        ah.level + 1
    FROM customer_address a
    JOIN address_hierarchy ah ON a.ca_city = ah.ca_city AND a.ca_state = ah.ca_state
    WHERE ah.level < 5
)

SELECT
    w.warehouse_id,
    w.warehouse_name,
    COUNT(DISTINCT s.s_store_id) AS store_count,
    SUM(CASE WHEN s.s_floor_space > 1000 THEN 1 ELSE 0 END) AS large_stores,
    MAX(w.w_warehouse_sq_ft) AS max_sq_ft,
    MIN(cd.cd_purchase_estimate) AS min_purchase_estimate,
    AVG(COALESCE(cd.cd_dep_count, 0)) AS avg_dependents,
    STRING_AGG(DISTINCT CONCAT(c.c_first_name, ' ', c.c_last_name), ', ') AS customer_names,
    SUM(ws.ws_net_profit) AS total_profit,
    (SELECT COUNT(*) FROM store_returns sr WHERE sr.sr_return_quantity > 0) AS total_returns,
    COUNT(DISTINCT CASE WHEN ca.ca_country IS NULL THEN ca.ca_city END) AS null_country_count,
    COUNT(*) FILTER (WHERE cd.cd_marital_status = 'M') AS married_count,
    COUNT(DISTINCT CASE WHEN ca.ca_state IN ('CA', 'NY') THEN ca.ca_address_sk END) AS state_specific_address_count,
    ROW_NUMBER() OVER (PARTITION BY w.warehouse_id ORDER BY SUM(ws.ws_net_profit) DESC) AS warehouse_rank
FROM warehouse w
LEFT JOIN store s ON w.w_warehouse_sk = s.s_market_id
LEFT JOIN web_sales ws ON s.s_store_sk = ws.ws_ship_customer_sk
LEFT JOIN customer c ON ws.ws_bill_customer_sk = c.c_customer_sk
LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
LEFT JOIN address_hierarchy ca ON ca.ca_address_sk = c.c_current_addr_sk
GROUP BY w.warehouse_id, w.warehouse_name, w.w_warehouse_sq_ft, cd.cd_purchase_estimate, cd.cd_dep_count
HAVING SUM(ws.ws_net_profit) > 5000 AND COUNT(*) > 10
ORDER BY total_profit DESC
LIMIT 50 OFFSET 5;
