
WITH RECURSIVE SalesCTE AS (
    SELECT
        ws.web_site_sk,
        SUM(ws.ws_ext_sales_price) AS total_sales,
        COUNT(ws.ws_order_number) AS order_count,
        ROW_NUMBER() OVER (PARTITION BY ws.web_site_sk ORDER BY SUM(ws.ws_ext_sales_price) DESC) AS rank
    FROM web_sales ws
    WHERE ws.ws_sold_date_sk >= (SELECT MAX(d.d_date_sk) - 30 FROM date_dim d)
    GROUP BY ws.web_site_sk
),
CustomerStats AS (
    SELECT
        c.c_customer_sk,
        c.c_birth_year,
        cd.cd_gender,
        cd.cd_marital_status,
        COUNT(ws.ws_order_number) AS total_orders,
        SUM(ws.ws_ext_sales_price) AS total_spent,
        DENSE_RANK() OVER (PARTITION BY cd.cd_gender ORDER BY SUM(ws.ws_ext_sales_price) DESC) AS gender_rank
    FROM customer c
    JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY c.c_customer_sk, c.c_birth_year, cd.cd_gender, cd.cd_marital_status
),
TopCustomers AS (
    SELECT
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cs.total_orders,
        cs.total_spent,
        RANK() OVER (ORDER BY cs.total_spent DESC) AS customer_rank
    FROM CustomerStats cs
    JOIN customer c ON cs.c_customer_sk = c.c_customer_sk
)
SELECT 
    scte.web_site_sk,
    scte.total_sales,
    scte.order_count,
    COALESCE(tc.total_orders, 0) AS total_orders_by_top_customer,
    COALESCE(tc.total_spent, 0) AS total_spent_by_top_customer,
    CASE 
        WHEN scte.total_sales > 10000 THEN 'High Sales'
        WHEN scte.total_sales BETWEEN 5000 AND 10000 THEN 'Medium Sales'
        ELSE 'Low Sales'
    END AS sales_category
FROM SalesCTE scte
LEFT JOIN TopCustomers tc ON scte.web_site_sk = tc.c_customer_sk
WHERE scte.rank = 1
ORDER BY scte.total_sales DESC
FETCH FIRST 10 ROWS ONLY;
