
WITH RECURSIVE sales_trend AS (
    SELECT 
        ws_sold_date_sk, 
        ws_item_sk, 
        SUM(ws_quantity) AS total_sales,
        RANK() OVER (PARTITION BY ws_item_sk ORDER BY SUM(ws_quantity) DESC) AS sales_rank
    FROM 
        web_sales
    GROUP BY 
        ws_sold_date_sk, ws_item_sk
),
customer_data AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_credit_rating,
        ROW_NUMBER() OVER (PARTITION BY cd.cd_gender ORDER BY c.c_birth_year DESC) AS gender_rank
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
),
address_data AS (
    SELECT 
        ca.ca_address_sk, 
        ca.ca_city, 
        ca.ca_state,
        (SELECT COUNT(*) FROM customer WHERE c_current_addr_sk = ca.ca_address_sk) AS customer_count
    FROM 
        customer_address ca
    WHERE 
        ca.ca_state IS NOT NULL
),
sales_summary AS (
    SELECT 
        a.ca_city,
        a.ca_state,
        COUNT(c.c_customer_sk) AS num_customers,
        SUM(st.total_sales) AS total_sales
    FROM 
        address_data a
    LEFT JOIN 
        customer_data c ON a.customer_count > 0
    LEFT JOIN 
        sales_trend st ON st.ws_item_sk = c.c_customer_sk
    GROUP BY 
        a.ca_city, a.ca_state
)
SELECT 
    ca_city AS city, 
    ca_state AS state, 
    num_customers, 
    total_sales,
    CASE 
        WHEN num_customers = 0 THEN 'No Customers' 
        ELSE CAST(total_sales AS TEXT) 
    END AS sales_output
FROM 
    sales_summary
WHERE 
    total_sales IS NOT NULL
ORDER BY 
    total_sales DESC
FETCH FIRST 10 ROWS ONLY;
