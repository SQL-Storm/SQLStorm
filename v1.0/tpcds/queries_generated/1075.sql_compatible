
WITH RankedSales AS (
    SELECT 
        ws.web_site_sk,
        ws_sold_date_sk,
        ws_item_sk,
        ws_quantity,
        ws_sales_price,
        ws_net_profit,
        ROW_NUMBER() OVER (PARTITION BY ws.web_site_sk ORDER BY ws_net_profit DESC) AS sales_rank
    FROM 
        web_sales AS ws
    WHERE 
        ws_sold_date_sk BETWEEN 20220101 AND 20221231
),
CustomerReturns AS (
    SELECT 
        wr.returning_customer_sk,
        SUM(wr.return_quantity) AS total_returned_quantity,
        COUNT(DISTINCT wr.return_number) AS number_of_returns
    FROM 
        web_returns AS wr
    GROUP BY 
        wr.returning_customer_sk
),
TotalSales AS (
    SELECT 
        SUM(ss.net_paid) AS total_net_sales,
        COUNT(DISTINCT ss.ticket_number) AS total_sales_count
    FROM 
        store_sales AS ss
    WHERE 
        ss.sold_date_sk BETWEEN 20220101 AND 20221231
)
SELECT 
    c.c_customer_id,
    c.c_first_name,
    c.c_last_name,
    ca.ca_city,
    ca.ca_state,
    SUM(rs.ws_quantity) AS total_quantity_sold,
    COALESCE(cr.total_returned_quantity, 0) AS total_returned_quantity,
    COALESCE(cr.number_of_returns, 0) AS number_of_returns,
    ts.total_net_sales,
    ts.total_sales_count,
    AVG(rs.ws_sales_price) AS avg_sales_price
FROM 
    customer AS c
JOIN 
    customer_address AS ca ON c.c_current_addr_sk = ca.ca_address_sk
LEFT JOIN 
    RankedSales AS rs ON c.c_customer_sk = rs.web_site_sk
LEFT JOIN 
    CustomerReturns AS cr ON c.c_customer_sk = cr.returning_customer_sk
CROSS JOIN 
    TotalSales AS ts
WHERE 
    c.c_birth_year > 1980 
    AND (ca.ca_state IS NOT NULL OR ca.ca_country = 'USA')
GROUP BY 
    c.c_customer_id, c.c_first_name, c.c_last_name, ca.ca_city, ca.ca_state, ts.total_net_sales, ts.total_sales_count
HAVING 
    COUNT(rs.ws_quantity) > 1 
    AND SUM(rs.ws_quantity) > 100 
ORDER BY 
    total_quantity_sold DESC
FETCH FIRST 100 ROWS ONLY;
