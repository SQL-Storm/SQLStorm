
WITH ranked_sales AS (
    SELECT 
        ws.web_site_sk,
        ws.order_number,
        ws.ws_ext_sales_price,
        RANK() OVER (PARTITION BY ws.web_site_sk ORDER BY ws.ws_ext_sales_price DESC) AS rank_sales,
        COALESCE(cd.cd_gender, 'Unknown') AS gender,
        COUNT(*) OVER (PARTITION BY ws.bill_customer_sk) AS total_orders
    FROM 
        web_sales ws
    LEFT JOIN 
        customer c ON ws.bill_customer_sk = c.c_customer_sk
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
),
item_return_stats AS (
    SELECT 
        cr.cr_item_sk,
        SUM(cr.cr_return_quantity) AS total_returns,
        AVG(cr.cr_return_amount) AS avg_return_amount
    FROM 
        catalog_returns cr
    GROUP BY 
        cr.cr_item_sk
),
significant_items AS (
    SELECT 
        i.i_item_sk,
        i.i_item_id,
        i.i_current_price,
        COALESCE(rs.rank_sales, 0) AS sales_rank,
        COALESCE(irs.total_returns, 0) AS total_returns,
        CASE 
            WHEN COALESCE(irs.total_returns, 0) > 0 AND i.i_current_price > 100 THEN 'High Price with Returns'
            WHEN COALESCE(irs.total_returns, 0) = 0 THEN 'No Returns'
            ELSE 'Other'
        END AS return_category
    FROM 
        item i
    LEFT JOIN 
        ranked_sales rs ON i.i_item_sk = rs.order_number
    LEFT JOIN 
        item_return_stats irs ON i.i_item_sk = irs.cr_item_sk
)
SELECT 
    si.i_item_id,
    si.i_current_price,
    si.return_category,
    COUNT(DISTINCT s.s_store_sk) AS store_count
FROM 
    significant_items si
LEFT JOIN 
    store_sales ss ON si.i_item_sk = ss.ss_item_sk
LEFT JOIN 
    store s ON ss.ss_store_sk = s.s_store_sk
WHERE 
    si.sales_rank <= 10 
    AND (si.total_returns > 5 OR si.return_category = 'No Returns')
GROUP BY 
    si.i_item_id, si.i_current_price, si.return_category
ORDER BY 
    store_count DESC, si.i_current_price ASC
LIMIT 50;
