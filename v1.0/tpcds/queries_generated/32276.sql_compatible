
WITH RECURSIVE sales_data AS (
    SELECT 
        ws.web_site_sk,
        SUM(ws_ext_sales_price) AS total_sales,
        COUNT(ws_order_number) AS total_orders
    FROM web_sales ws
    WHERE ws_sold_date_sk IN (
        SELECT d_date_sk 
        FROM date_dim 
        WHERE d_year = 2023
    )
    GROUP BY ws.web_site_sk

    UNION ALL

    SELECT 
        s.web_site_sk,
        SUM(s.cs_ext_sales_price) AS total_sales,
        COUNT(s.cs_order_number) AS total_orders
    FROM catalog_sales s
    WHERE s.cs_sold_date_sk IN (
        SELECT d_date_sk 
        FROM date_dim 
        WHERE d_year = 2023
    )
    GROUP BY s.web_site_sk
), 
sales_summary AS (
    SELECT 
        ws.web_site_sk,
        COALESCE(s.total_sales, 0) AS web_sales,
        COALESCE(c.total_sales, 0) AS catalog_sales,
        (COALESCE(s.total_sales, 0) + COALESCE(c.total_sales, 0)) AS total_sales
    FROM web_site ws
    LEFT JOIN (
        SELECT web_site_sk, SUM(total_sales) AS total_sales 
        FROM sales_data 
        GROUP BY web_site_sk
    ) s ON ws.web_site_sk = s.web_site_sk
    LEFT JOIN (
        SELECT web_site_sk, SUM(total_sales) AS total_sales 
        FROM sales_data 
        GROUP BY web_site_sk
    ) c ON ws.web_site_sk = c.web_site_sk
)
SELECT 
    ss.web_site_sk,
    ss.web_sales,
    ss.catalog_sales,
    ss.total_sales,
    CASE 
        WHEN ss.total_sales > 10000 THEN 'High Sales'
        WHEN ss.total_sales BETWEEN 5000 AND 10000 THEN 'Moderate Sales'
        ELSE 'Low Sales'
    END AS sales_category,
    DENSE_RANK() OVER (ORDER BY ss.total_sales DESC) AS sales_rank
FROM sales_summary ss
WHERE ss.total_sales > 0
ORDER BY ss.total_sales DESC;
