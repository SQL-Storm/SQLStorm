WITH RECURSIVE SalesHierarchy AS (
    SELECT 
        s_store_sk,
        s_store_name,
        s_sales_total,
        1 AS level
    FROM (
        SELECT 
            ss_store_sk, 
            s_store_name,
            SUM(ss_net_paid) AS s_sales_total
        FROM store_sales 
        JOIN store ON store_sales.ss_store_sk = store.s_store_sk
        GROUP BY ss_store_sk, s_store_name
    ) AS StoreSales
    WHERE s_sales_total > 100000  
    UNION ALL
    SELECT 
        sh.s_store_sk,
        sh.s_store_name,
        sh.s_sales_total,
        sh.level + 1
    FROM SalesHierarchy sh
    JOIN store s ON sh.s_store_sk = s.s_store_sk 
    WHERE sh.s_sales_total < s.s_sales_total  
),
CustomerReturnStats AS (
    SELECT 
        c.c_customer_sk,
        COUNT(cr.cr_item_sk) AS return_count,
        AVG(cr.cr_return_amount) AS avg_return_amount,
        SUM(cr.cr_return_quantity) AS total_return_quantity,
        SUM(COALESCE(cr.cr_net_loss, 0)) AS total_net_loss
    FROM customer c
    LEFT JOIN catalog_returns cr ON c.c_customer_sk = cr.cr_returning_customer_sk
    GROUP BY c.c_customer_sk
),
MaxReturnStats AS (
    SELECT 
        cr.c_customer_sk,
        MAX(cr.total_return_quantity) AS max_return_quantity
    FROM CustomerReturnStats cr
    GROUP BY cr.c_customer_sk
)
SELECT 
    sh.s_store_name,
    SUM(ws.ws_net_profit) AS total_net_profit,
    AVG(cr.return_count) AS average_returns_per_customer,
    MAX(mrs.max_return_quantity) AS max_returned_items
FROM SalesHierarchy sh
JOIN web_sales ws ON sh.s_store_sk = ws.ws_warehouse_sk
LEFT JOIN CustomerReturnStats cr ON ws.ws_bill_customer_sk = cr.c_customer_sk
LEFT JOIN MaxReturnStats mrs ON cr.c_customer_sk = mrs.c_customer_sk
WHERE ws.ws_sold_date_sk IN (
    SELECT d_date_sk 
    FROM date_dim 
    WHERE d_year = 2001 AND d_month_seq BETWEEN 1 AND 3  
)
GROUP BY sh.s_store_name
HAVING total_net_profit > 500000  
ORDER BY total_net_profit DESC;