
WITH CustomerSales AS (
    SELECT
        c.c_customer_id,
        c.c_first_name,
        c.c_last_name,
        SUM(ss.ss_net_paid) AS total_store_sales,
        COUNT(ss.ss_ticket_number) AS total_transactions
    FROM customer c
    LEFT JOIN store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    GROUP BY c.c_customer_id, c.c_first_name, c.c_last_name
),
WebSalesSummary AS (
    SELECT
        ws.ws_bill_customer_sk,
        SUM(ws.ws_net_paid) AS total_web_sales
    FROM web_sales ws
    GROUP BY ws.ws_bill_customer_sk
),
TotalSales AS (
    SELECT
        cs.c_customer_id,
        cs.c_first_name,
        cs.c_last_name,
        COALESCE(cs.total_store_sales, 0) AS total_store_sales,
        COALESCE(ws.total_web_sales, 0) AS total_web_sales,
        (COALESCE(cs.total_store_sales, 0) + COALESCE(ws.total_web_sales, 0)) AS overall_sales
    FROM CustomerSales cs
    LEFT JOIN WebSalesSummary ws ON cs.c_customer_id = ws.ws_bill_customer_sk
),
RankedSales AS (
    SELECT
        cs.c_customer_id,
        cs.c_first_name,
        cs.c_last_name,
        cs.total_store_sales,
        ws.total_web_sales,
        cs.overall_sales,
        RANK() OVER (ORDER BY cs.overall_sales DESC) AS sales_rank
    FROM TotalSales cs
)

SELECT
    t.c_customer_id,
    t.c_first_name,
    t.c_last_name,
    t.total_store_sales,
    t.total_web_sales,
    t.overall_sales,
    t.sales_rank,
    CASE 
        WHEN t.overall_sales > 1000 THEN 'High Value Customer'
        WHEN t.overall_sales BETWEEN 500 AND 1000 THEN 'Medium Value Customer'
        ELSE 'Low Value Customer'
    END AS customer_value_category
FROM RankedSales t
WHERE t.sales_rank <= 10
ORDER BY t.overall_sales DESC
