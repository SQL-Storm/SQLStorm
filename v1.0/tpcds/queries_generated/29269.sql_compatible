
WITH processed_strings AS (
    SELECT 
        c.c_customer_sk,
        CONCAT(TRIM(c.c_first_name), ' ', TRIM(c.c_last_name)) AS full_name,
        UPPER(TRIM(c.c_email_address)) AS email_upper,
        CONCAT(TRIM(c.c_birth_country), '-', TRIM(c.c_state)) AS location_code,
        LENGTH(TRIM(c.c_first_name)) + LENGTH(TRIM(c.c_last_name)) AS name_length,
        CASE 
            WHEN c.c_birth_month IS NOT NULL AND c.c_birth_day IS NOT NULL 
            THEN CONCAT('Born on ', LPAD(CAST(c.c_birth_month AS VARCHAR), 2, '0'), '/', LPAD(CAST(c.c_birth_day AS VARCHAR), 2, '0')) 
            ELSE 'Birth date unknown'
        END AS birth_info
    FROM 
        customer c
    WHERE 
        c.c_customer_id IS NOT NULL
),
aggregated_data AS (
    SELECT 
        SUBSTR(full_name, 1, 15) AS name_preview, 
        COUNT(*) AS customer_count,
        AVG(name_length) AS avg_name_length
    FROM 
        processed_strings
    GROUP BY 
        name_preview
)

SELECT 
    ad.name_preview,
    ad.customer_count,
    ad.avg_name_length,
    STRING_AGG(ps.email_upper, '; ') AS emails,
    MAX(ps.location_code) AS example_location,
    STRING_AGG(ps.birth_info, ', ') AS birth_details
FROM 
    aggregated_data ad
JOIN 
    processed_strings ps ON ad.name_preview = SUBSTR(ps.full_name, 1, 15)
GROUP BY 
    ad.name_preview, ad.customer_count, ad.avg_name_length
ORDER BY 
    ad.customer_count DESC
LIMIT 10;
