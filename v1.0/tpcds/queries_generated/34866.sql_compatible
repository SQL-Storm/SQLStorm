
WITH RECURSIVE DateRange AS (
    SELECT MIN(d_date_sk) AS start_date, MAX(d_date_sk) AS end_date
    FROM date_dim
),
SalesData AS (
    SELECT 
        ws.ws_item_sk,
        SUM(ws.ws_quantity) AS total_sales_quantity,
        SUM(ws.ws_net_paid_inc_tax) AS total_sales_value,
        COUNT(DISTINCT ws.ws_order_number) AS order_count,
        ROW_NUMBER() OVER (PARTITION BY ws.ws_site_sk ORDER BY SUM(ws.ws_net_paid_inc_tax) DESC) AS rank
    FROM web_sales ws
    JOIN DateRange dr ON ws.ws_sold_date_sk BETWEEN dr.start_date AND dr.end_date
    GROUP BY ws.ws_item_sk, ws.ws_site_sk
),
CustomerStats AS (
    SELECT 
        c.c_customer_sk,
        cd.cd_gender,
        COUNT(DISTINCT ws.ws_order_number) AS total_orders,
        SUM(ws.ws_net_paid_inc_tax) AS total_spent
    FROM customer c
    JOIN web_sales ws ON c.c_customer_sk = ws.ws_ship_customer_sk
    JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    GROUP BY c.c_customer_sk, cd.cd_gender
),
Promotions AS (
    SELECT 
        p.p_promo_sk,
        SUM(ws.ws_ext_discount_amt) AS total_discount
    FROM promotion p
    JOIN web_sales ws ON p.p_promo_sk = ws.ws_promo_sk
    GROUP BY p.p_promo_sk
),
TopItems AS (
    SELECT
        item.i_item_sk,
        item.i_item_desc,
        sd.total_sales_quantity,
        sd.total_sales_value
    FROM item item
    JOIN SalesData sd ON item.i_item_sk = sd.ws_item_sk
    WHERE sd.rank <= 10
)
SELECT 
    ci.c_customer_sk,
    ci.cd_gender,
    ti.i_item_desc,
    ti.total_sales_quantity,
    ti.total_sales_value,
    ps.total_discount
FROM CustomerStats ci
JOIN TopItems ti ON ci.total_orders > 0
LEFT JOIN Promotions ps ON ti.i_item_sk = ps.p_promo_sk
WHERE ci.total_spent IS NOT NULL
AND (ci.cd_gender = 'F' OR ci.cd_gender IS NULL)
ORDER BY ci.total_spent DESC, ti.total_sales_value DESC
FETCH FIRST 100 ROWS ONLY;
