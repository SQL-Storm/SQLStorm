
WITH RankedReturns AS (
    SELECT 
        sr_returning_customer_sk,
        SUM(sr_return_quantity) AS total_returned,
        ROW_NUMBER() OVER (PARTITION BY sr_returning_customer_sk ORDER BY SUM(sr_return_quantity) DESC) AS rank
    FROM 
        store_returns
    GROUP BY 
        sr_returning_customer_sk
),
CustomerScores AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        COALESCE(hd.hd_buy_potential, 'UNKNOWN') AS buy_potential,
        SUM(CASE WHEN w.web_site_sk IS NOT NULL THEN 1 ELSE 0 END) AS active_web_sites,
        RANK() OVER (ORDER BY SUM(ws.ws_net_profit) DESC) AS profitability_rank
    FROM 
        customer c
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN 
        household_demographics hd ON c.c_current_hdemo_sk = hd.hd_demo_sk
    LEFT JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    LEFT JOIN 
        web_site w ON ws.ws_web_site_sk = w.web_site_sk
    GROUP BY 
        c.c_customer_sk, c.c_first_name, c.c_last_name, cd.cd_gender, hd.hd_buy_potential
),
PromotionalEffects AS (
    SELECT 
        p.p_promo_id,
        COUNT(DISTINCT ws.ws_order_number) AS promo_uses,
        SUM(ws.ws_net_profit) AS total_profit
    FROM 
        promotion p
    JOIN 
        web_sales ws ON p.p_promo_sk = ws.ws_promo_sk
    GROUP BY 
        p.p_promo_id
),
FinalReport AS (
    SELECT 
        cs.c_first_name,
        cs.c_last_name,
        cs.cd_gender,
        cs.buy_potential,
        COALESCE(rr.total_returned, 0) AS total_returns,
        pe.promo_uses,
        pe.total_profit,
        DENSE_RANK() OVER (ORDER BY COALESCE(pe.total_profit, 0) DESC) AS promo_rank
    FROM 
        CustomerScores cs
    LEFT JOIN 
        RankedReturns rr ON cs.c_customer_sk = rr.sr_returning_customer_sk
    LEFT JOIN 
        PromotionalEffects pe ON pe.promo_uses > 5 OR pe.total_profit IS NULL
)
SELECT 
    f.c_first_name,
    f.c_last_name,
    COALESCE(f.total_returns, 0) AS sum_of_returns,
    f.promo_uses AS promotion_count,
    f.total_profit AS gain_from_promotions,
    (CASE WHEN f.promo_rank IS NULL THEN 'Unranked' ELSE CAST(f.promo_rank AS VARCHAR) END) AS promo_ranking_state,
    STRING_AGG(f.c_first_name || ' ' || f.c_last_name, ', ') WITHIN GROUP (ORDER BY f.promo_ranking_state) AS cohort_summary
FROM 
    FinalReport f
GROUP BY 
    f.c_first_name, f.c_last_name, f.cd_gender, f.buy_potential, f.total_returns, f.promo_uses, f.total_profit, f.promo_rank
HAVING 
    COALESCE(SUM(f.total_profit), 0) > 0 
    AND SUM(f.total_returns) IS NOT NULL
ORDER BY 
    f.total_profit DESC, f.c_last_name ASC;
