
WITH RankedReturns AS (
    SELECT
        wr_returning_customer_sk,
        wr_item_sk,
        wr_order_number,
        ROW_NUMBER() OVER (PARTITION BY wr_returning_customer_sk ORDER BY wr_returned_date_sk DESC) AS ReturnRank
    FROM
        web_returns
    WHERE
        wr_return_quantity IS NOT NULL AND wr_return_amt > 0
),
AggregateSales AS (
    SELECT
        ws_bill_customer_sk,
        SUM(ws_quantity) AS TotalQuantity,
        SUM(ws_net_paid_inc_tax) AS TotalRevenue
    FROM
        web_sales
    WHERE
        ws_sold_date_sk IN (
            SELECT d_date_sk
            FROM date_dim
            WHERE d_year = 2023 AND d_weekend = 'Y'
        )
    GROUP BY
        ws_bill_customer_sk
),
CustomerDemographics AS (
    SELECT
        cd.gender,
        cd.marital_status,
        COUNT(DISTINCT c.c_customer_sk) AS CustomerCount
    FROM
        customer_demographics cd
    JOIN
        customer c ON c.c_current_cdemo_sk = cd.cd_demo_sk
    WHERE
        cd_income_band_sk IS NOT NULL
    GROUP BY
        cd.gender,
        cd.marital_status
)
SELECT
    ca.ca_address_id,
    ca.ca_city,
    COUNT(DISTINCT rwr.wr_returning_customer_sk) AS ReturningCustomers,
    SUM(ws.TotalRevenue) AS WeekendRevenue,
    COALESCE(cd.CustomerCount, 0) AS TotalCustomers,
    CASE 
        WHEN SUM(ws.TotalRevenue) IS NULL THEN 'No Revenue' 
        ELSE FORMAT(SUM(ws.TotalRevenue), 'C', 'en-US')
    END AS FormattedRevenue
FROM
    customer_address ca
LEFT JOIN
    RankedReturns rwr ON rwr.wr_returning_customer_sk = ca.ca_address_sk
LEFT JOIN
    AggregateSales ws ON ws.ws_bill_customer_sk = ca.ca_address_sk
FULL OUTER JOIN
    CustomerDemographics cd ON cd.CustomerCount IS NOT NULL
WHERE 
    (ca.ca_state IS NULL OR ca.ca_state = 'CA')
    AND (COALESCE(ws.TotalQuantity, 0) > 10 OR COALESCE(ws.TotalRevenue, 0) > 500)
GROUP BY
    ca.ca_address_id,
    ca.ca_city,
    cd.CustomerCount
ORDER BY
    ReturningCustomers DESC,
    WeekendRevenue DESC
LIMIT 100 OFFSET 10;
