
WITH RECURSIVE SalesData AS (
    SELECT 
        ws.sold_date_sk,
        ws.item_sk,
        SUM(ws.ext_sales_price) AS total_sales,
        RANK() OVER (PARTITION BY ws.sold_date_sk ORDER BY SUM(ws.ext_sales_price) DESC) AS sales_rank
    FROM 
        web_sales AS ws
    JOIN 
        date_dim AS dd ON ws.sold_date_sk = dd.d_date_sk
    WHERE 
        dd.d_year = 2023
    GROUP BY 
        ws.sold_date_sk, ws.item_sk
),
CustomerSales AS (
    SELECT 
        c.c_customer_sk,
        COUNT(DISTINCT ws.ws_order_number) AS total_orders,
        SUM(ws.ws_net_profit) AS total_net_profit,
        AVG(cd.cd_purchase_estimate) AS avg_purchase_estimate
    FROM 
        customer AS c
    LEFT JOIN 
        web_sales AS ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    LEFT JOIN 
        customer_demographics AS cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    GROUP BY 
        c.c_customer_sk
)
SELECT 
    ca.ca_city,
    ca.ca_state,
    SUM(cs.total_orders) AS city_total_orders,
    SUM(cs.total_net_profit) AS city_total_net_profit,
    COALESCE(SUM(sd.total_sales), 0) AS total_web_sales
FROM 
    customer_address AS ca
LEFT JOIN 
    CustomerSales AS cs ON cs.c_customer_sk = ca.ca_address_sk
LEFT JOIN 
    SalesData AS sd ON sd.item_sk IN (SELECT i.i_item_sk FROM item i WHERE i.i_current_price IS NOT NULL AND i.i_current_price > 50)
WHERE 
    ca.ca_city IS NOT NULL
GROUP BY 
    ca.ca_city, ca.ca_state
HAVING 
    SUM(cs.total_orders) > 5
ORDER BY 
    city_total_net_profit DESC, city_total_orders DESC
LIMIT 10;
