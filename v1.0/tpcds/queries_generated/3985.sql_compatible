
WITH SalesSummary AS (
    SELECT 
        cs_item_sk,
        SUM(cs_quantity) AS total_quantity,
        SUM(cs_sales_price) AS total_sales,
        SUM(cs_net_profit) AS total_profit
    FROM 
        catalog_sales 
    WHERE 
        cs_sold_date_sk BETWEEN (SELECT d_date_sk FROM date_dim WHERE d_date = '2023-01-01')
        AND (SELECT d_date_sk FROM date_dim WHERE d_date = '2023-12-31')
    GROUP BY 
        cs_item_sk
),
CustomerDemographics AS (
    SELECT 
        cd_demo_sk,
        cd_gender,
        cd_marital_status,
        cd_income_band_sk,
        COUNT(c_customer_sk) AS customer_count
    FROM 
        customer
    JOIN 
        customer_demographics ON c_current_cdemo_sk = cd_demo_sk
    GROUP BY 
        cd_demo_sk, cd_gender, cd_marital_status, cd_income_band_sk
),
ItemPromotions AS (
    SELECT 
        p.p_item_sk,
        p.p_promo_name,
        COUNT(DISTINCT ws_order_number) AS promo_sales_count
    FROM 
        promotion AS p
    JOIN 
        web_sales AS ws ON p.p_item_sk = ws.ws_item_sk
    WHERE 
        p.p_discount_active = 'Y'
    GROUP BY 
        p.p_item_sk, p.p_promo_name
)
SELECT 
    c.cd_gender AS gender,
    c.cd_marital_status AS marital_status,
    i.p_promo_name AS promo_name,
    s.total_quantity,
    s.total_sales,
    s.total_profit,
    CASE 
        WHEN c.customer_count IS NULL THEN 'No customers'
        ELSE CAST(c.customer_count AS VARCHAR)
    END AS customer_count 
FROM 
    SalesSummary s
JOIN 
    ItemPromotions i ON s.cs_item_sk = i.p_item_sk
LEFT JOIN 
    CustomerDemographics c ON i.p_item_sk = c.cd_demo_sk 
ORDER BY 
    s.total_profit DESC
LIMIT 100;
