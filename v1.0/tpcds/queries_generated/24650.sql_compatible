
WITH RECURSIVE AddressCTE AS (
    SELECT 
        ca_address_sk, 
        ca_address_id, 
        ca_city,
        ca_state,
        ca_street_name,
        ca_zip,
        ca_country,
        1 AS level
    FROM customer_address
    WHERE ca_state = 'CA'
    
    UNION ALL

    SELECT 
        ca_address_sk, 
        ca_address_id, 
        ca_city,
        ca_state,
        CONCAT(ca_street_name, ' (Level ', level + 1, ')') AS ca_street_name,
        CONCAT(SUBSTRING(ca_zip, 1, 5), '-', level) AS ca_zip,
        ca_country,
        level + 1
    FROM customer_address
    JOIN AddressCTE ON AddressCTE.ca_address_sk = customer_address.ca_address_sk
    WHERE level < 3
)
SELECT 
    cd.cd_gender,
    COUNT(DISTINCT c.c_customer_id) AS customer_count,
    AVG(cd.cd_purchase_estimate) AS avg_purchase_estimate,
    SUM(CASE 
            WHEN cd.cd_marital_status = 'M' THEN 1 
            ELSE 0 
        END) AS married_count,
    STRING_AGG(DISTINCT CONCAT(c.c_first_name, ' ', c.c_last_name), ', ') AS customer_names,
    COALESCE(MAX(cd.cd_credit_rating), 'Unrated') AS max_credit_rating,
    ROW_NUMBER() OVER (PARTITION BY cd.cd_gender ORDER BY COUNT(DISTINCT c.c_customer_id) DESC) AS gender_rank
FROM customer c
JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
LEFT JOIN AddressCTE a ON c.c_current_addr_sk = a.ca_address_sk
WHERE a.ca_city IS NOT NULL 
AND EXISTS (
    SELECT 1
    FROM store_sales ss
    WHERE ss.ss_customer_sk = c.c_customer_sk
    AND ss.ss_sold_date_sk IN (
        SELECT d.d_date_sk
        FROM date_dim d
        WHERE d.d_year = 2023
        AND MOD(d.d_week_seq, 2) = 0
    )
)
GROUP BY cd.cd_gender
ORDER BY customer_count DESC
LIMIT 10;
