
WITH CustomerSales AS (
    SELECT
        c.c_customer_id,
        SUM(ws.net_paid_inc_tax) AS total_web_sales,
        SUM(cs.net_paid_inc_tax) AS total_catalog_sales,
        COUNT(DISTINCT s.ss_ticket_number) AS total_store_transactions,
        COUNT(DISTINCT wr.wr_order_number) AS total_web_returns,
        COUNT(DISTINCT cr.cr_order_number) AS total_catalog_returns
    FROM
        customer c
    LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_ship_customer_sk
    LEFT JOIN catalog_sales cs ON c.c_customer_sk = cs.cs_ship_customer_sk
    LEFT JOIN store_sales s ON c.c_customer_sk = s.ss_customer_sk
    LEFT JOIN web_returns wr ON c.c_customer_sk = wr.wr_returning_customer_sk
    LEFT JOIN catalog_returns cr ON c.c_customer_sk = cr.cr_returning_customer_sk
    GROUP BY c.c_customer_id
),
AggregatedData AS (
    SELECT
        CASE
            WHEN total_web_sales > 1000 THEN 'High Roller'
            WHEN total_web_sales > 500 THEN 'Medium Spender'
            ELSE 'Casual Buyer'
        END AS customer_category,
        COUNT(c_customer_id) AS customer_count,
        SUM(total_web_sales) AS total_web_sales_amount,
        SUM(total_catalog_sales) AS total_catalog_sales_amount,
        SUM(total_store_transactions) AS total_store_transactions_count,
        SUM(total_web_returns) AS total_web_returns_count,
        SUM(total_catalog_returns) AS total_catalog_returns_count
    FROM CustomerSales
    GROUP BY customer_category
)
SELECT
    customer_category,
    customer_count,
    total_web_sales_amount,
    total_catalog_sales_amount,
    total_store_transactions_count,
    total_web_returns_count,
    total_catalog_returns_count,
    (total_web_sales_amount + total_catalog_sales_amount) - (total_web_returns_count * COALESCE(total_web_sales_amount / NULLIF(customer_count, 0), 0)) AS net_sales
FROM AggregatedData;
