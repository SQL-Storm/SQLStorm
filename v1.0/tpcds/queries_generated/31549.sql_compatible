
WITH RECURSIVE income_bracket AS (
    SELECT 
        ib_income_band_sk,
        ib_lower_bound,
        ib_upper_bound,
        1 AS level
    FROM income_band
    WHERE ib_lower_bound BETWEEN 0 AND 24999
    UNION ALL
    SELECT 
        ib.ib_income_band_sk,
        ib.ib_lower_bound,
        ib.ib_upper_bound,
        ibr.level + 1
    FROM income_band ib
    JOIN income_bracket ibr ON ibr.ib_income_band_sk = ib.ib_income_band_sk
    WHERE ibr.level < 5
), 
customer_analysis AS (
    SELECT 
        c.c_customer_id,
        c.c_current_cdemo_sk,
        cd.cd_gender,
        cd.cd_marital_status,
        SUM(COALESCE(cs.cs_quantity, 0)) AS total_catalog_sales,
        SUM(COALESCE(ws.ws_quantity, 0)) AS total_web_sales,
        SUM(COALESCE(ss.ss_quantity, 0)) AS total_store_sales,
        COUNT(DISTINCT wr.wr_order_number) AS total_web_returns,
        NULLIF((SUM(COALESCE(ws.ws_sales_price, 0)) - SUM(COALESCE(ws.ws_ext_discount_amt, 0))), 0) AS net_web_revenue,
        SUM(COALESCE(sr.sr_return_amt, 0)) AS total_store_returns
    FROM customer c
    LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN catalog_sales cs ON cs.cs_bill_customer_sk = c.c_customer_sk
    LEFT JOIN web_sales ws ON ws.ws_bill_customer_sk = c.c_customer_sk
    LEFT JOIN store_sales ss ON ss.ss_customer_sk = c.c_customer_sk
    LEFT JOIN web_returns wr ON wr.wr_returning_customer_sk = c.c_customer_sk
    LEFT JOIN store_returns sr ON sr.sr_customer_sk = c.c_customer_sk
    GROUP BY c.c_customer_id, c.c_current_cdemo_sk, cd.cd_gender, cd.cd_marital_status
),
date_summary AS (
    SELECT 
        d.d_year,
        d.d_month_seq,
        COUNT(DISTINCT ca.ca_address_sk) AS total_addresses,
        AVG(COALESCE(ws.ws_sales_price, 0)) AS avg_web_sales_price,
        AVG(COALESCE(ss.ss_sales_price, 0)) AS avg_store_sales_price
    FROM date_dim d
    LEFT JOIN web_sales ws ON d.d_date_sk = ws.ws_sold_date_sk
    LEFT JOIN store_sales ss ON d.d_date_sk = ss.ss_sold_date_sk
    JOIN customer_address ca ON ca.ca_address_sk = ca.ca_address_sk
    GROUP BY d.d_year, d.d_month_seq
)
SELECT 
    ca.c_customer_id,
    ca.cd_gender,
    ca.cd_marital_status,
    SUM(ca.total_catalog_sales) AS total_catalog_sales,
    SUM(ca.total_web_sales) AS total_web_sales,
    SUM(ca.total_store_sales) AS total_store_sales,
    COALESCE(ROUND(SUM(ca.net_web_revenue) / NULLIF(COUNT(ca.c_customer_id), 0), 2), 0) AS avg_net_web_revenue,
    ds.total_addresses,
    ds.avg_web_sales_price,
    ds.avg_store_sales_price,
    ib.ib_income_band_sk
FROM customer_analysis ca
JOIN date_summary ds ON ca.c_current_cdemo_sk = ds.d_month_seq
LEFT JOIN income_bracket ib ON ca.c_current_cdemo_sk = ib.ib_income_band_sk
WHERE ca.total_web_sales > 100
GROUP BY ca.c_customer_id, ca.cd_gender, ca.cd_marital_status, ds.total_addresses, ds.avg_web_sales_price, ds.avg_store_sales_price, ib.ib_income_band_sk
ORDER BY total_web_sales DESC
FETCH FIRST 100 ROWS ONLY;
