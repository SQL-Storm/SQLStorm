WITH RECURSIVE Income_CTE AS (
    SELECT hd_demo_sk, hd_income_band_sk, 1 AS income_level
    FROM household_demographics
    WHERE hd_income_band_sk IS NOT NULL
    
    UNION ALL
    
    SELECT h.hd_demo_sk, h.hd_income_band_sk, ic.income_level + 1
    FROM household_demographics h
    JOIN Income_CTE ic ON h.hd_income_band_sk = ic.hd_income_band_sk
    WHERE ic.income_level < 4
),
Customer_Sales AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        SUM(COALESCE(ws.ws_net_paid_inc_tax, 0)) AS total_sales,
        COUNT(DISTINCT ws.ws_order_number) AS order_count
    FROM customer c
    LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_ship_customer_sk
    GROUP BY c.c_customer_sk, c.c_first_name, c.c_last_name
),
High_Income_Customers AS (
    SELECT 
        c.c_customer_sk, 
        c.c_first_name, 
        c.c_last_name, 
        cs.total_sales,
        cs.order_count,
        d.d_year
    FROM customer c
    JOIN Income_CTE ic ON ic.hd_demo_sk = c.c_current_hdemo_sk
    JOIN Customer_Sales cs ON cs.c_customer_sk = c.c_customer_sk
    JOIN date_dim d ON d.d_date_sk = (SELECT MAX(d2.d_date_sk) 
                                       FROM date_dim d2 
                                       WHERE d2.d_year = (SELECT MAX(d3.d_year) FROM date_dim d3))
    WHERE ic.income_level = 3
),
Sales_Details AS (
    SELECT 
        h.c_customer_sk,
        h.c_first_name,
        h.c_last_name,
        h.total_sales,
        h.order_count,
        RANK() OVER (ORDER BY h.total_sales DESC) AS sales_rank,
        CASE
            WHEN h.total_sales > 10000 THEN 'High Value'
            ELSE 'Regular Value'
        END AS customer_value_segment
    FROM High_Income_Customers h
)
SELECT 
    sd.c_customer_sk,
    sd.c_first_name,
    sd.c_last_name,
    sd.total_sales,
    sd.order_count,
    sd.sales_rank,
    sd.customer_value_segment,
    d.d_year,
    COUNT(wa.w_warehouse_sk) AS total_warehouses,
    STRING_AGG(DISTINCT w.w_warehouse_name, ', ') AS warehouse_names
FROM Sales_Details sd
LEFT JOIN warehouse w ON w.w_warehouse_sk IN (SELECT inv.inv_warehouse_sk
                                               FROM inventory inv
                                               JOIN web_sales ws ON inv.inv_item_sk = ws.ws_item_sk)
JOIN date_dim d ON d.d_date_sk = cast('2002-10-01' as date)
JOIN warehouse wa ON wa.w_warehouse_sk = (SELECT MIN(w2.w_warehouse_sk) FROM warehouse w2)
GROUP BY sd.c_customer_sk, sd.c_first_name, sd.c_last_name, sd.total_sales, sd.order_count, sd.sales_rank, sd.customer_value_segment, d.d_year
HAVING SUM(sd.total_sales) > 5000
ORDER BY sd.sales_rank, sd.total_sales DESC;