
WITH RECURSIVE sales_data AS (
    SELECT 
        ws_sold_date_sk,
        SUM(ws_ext_sales_price) AS total_sales,
        COUNT(DISTINCT ws_order_number) AS total_orders,
        ROW_NUMBER() OVER (PARTITION BY ws_ship_mode_sk ORDER BY SUM(ws_ext_sales_price) DESC) AS sales_rank
    FROM web_sales
    GROUP BY ws_sold_date_sk, ws_ship_mode_sk
),
customer_returns AS (
    SELECT 
        wr_returned_date_sk,
        SUM(wr_return_amt) AS total_return_amt,
        COUNT(DISTINCT wr_order_number) AS total_returns,
        wr_returned_customer_sk
    FROM web_returns
    GROUP BY wr_returned_date_sk, wr_returned_customer_sk
),
date_analysis AS (
    SELECT 
        d_year,
        d_month_seq,
        d_week_seq,
        SUM(COALESCE(total_sales, 0)) AS aggregate_sales,
        SUM(COALESCE(total_return_amt, 0)) AS aggregate_returns
    FROM date_dim
    LEFT JOIN sales_data ON date_dim.d_date_sk = sales_data.ws_sold_date_sk
    LEFT JOIN customer_returns ON date_dim.d_date_sk = customer_returns.wr_returned_date_sk
    GROUP BY d_year, d_month_seq, d_week_seq
),
income_analysis AS (
    SELECT 
        CASE 
            WHEN hd_income_band_sk IS NULL THEN 'Unknown'
            WHEN hd_income_band_sk BETWEEN 1 AND 5 THEN 'Low Income'
            WHEN hd_income_band_sk BETWEEN 6 AND 10 THEN 'Middle Income'
            ELSE 'High Income' 
        END AS income_band,
        SUM(aggregate_sales) AS total_sales,
        SUM(aggregate_returns) AS total_returns
    FROM date_analysis
    LEFT JOIN household_demographics ON household_demographics.hd_demo_sk = (SELECT cd_demo_sk FROM customer WHERE customer.c_birth_year = d_year)
    GROUP BY income_band
)
SELECT 
    ia.income_band,
    ia.total_sales,
    ia.total_returns,
    ia.total_sales - ia.total_returns AS net_sales,
    ROUND((ia.total_returns / NULLIF(ia.total_sales, 0)::FLOAT) * 100, 2) AS return_rate_percentage
FROM income_analysis ia
WHERE ia.total_sales > 10000
ORDER BY net_sales DESC;
