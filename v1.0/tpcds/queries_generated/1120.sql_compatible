
WITH ranked_sales AS (
    SELECT 
        ws_bill_customer_sk,
        SUM(ws_net_paid_inc_tax) AS total_sales,
        COUNT(ws_order_number) AS order_count,
        RANK() OVER (PARTITION BY ws_bill_customer_sk ORDER BY SUM(ws_net_paid_inc_tax) DESC) AS sales_rank
    FROM 
        web_sales
    GROUP BY 
        ws_bill_customer_sk
),
high_value_customers AS (
    SELECT 
        cds.cd_demo_sk,
        cds.cd_gender,
        ca.ca_state,
        rc.income_band,
        r.r_reason_desc,
        MAX(rs.total_sales) AS max_sales
    FROM 
        ranked_sales rs
    JOIN 
        customer c ON c.c_customer_sk = rs.ws_bill_customer_sk
    JOIN 
        customer_demographics cds ON c.c_current_cdemo_sk = cds.cd_demo_sk
    JOIN 
        customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
    LEFT JOIN 
        store_returns sr ON sr.sr_customer_sk = c.c_customer_sk
    LEFT JOIN 
        reason r ON sr.sr_reason_sk = r.r_reason_sk
    LEFT JOIN 
        household_demographics rc ON cds.cd_demo_sk = rc.hd_demo_sk
    WHERE 
        rs.sales_rank = 1
        AND cds.cd_gender = 'M'
        AND ca.ca_state IS NOT NULL
        AND rc.hd_income_band IS NOT NULL
    GROUP BY 
        cds.cd_demo_sk, cds.cd_gender, ca.ca_state, rc.income_band, r.r_reason_desc
)
SELECT 
    hvc.cd_demo_sk,
    hvc.cd_gender,
    hvc.ca_state,
    hvc.income_band,
    hvc.max_sales,
    COALESCE(hvc.r_reason_desc, 'No returns') AS return_reason
FROM 
    high_value_customers hvc
WHERE 
    hvc.max_sales > (
        SELECT 
            AVG(total_sales) 
        FROM 
            ranked_sales
    )
ORDER BY 
    hvc.max_sales DESC;
