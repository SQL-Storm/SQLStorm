
WITH RECURSIVE sales_data AS (
    SELECT 
        ws.ws_item_sk, 
        SUM(ws.ws_quantity) AS total_quantity, 
        SUM(ws.ws_net_paid) AS total_net_paid,
        ROW_NUMBER() OVER (PARTITION BY ws.ws_item_sk ORDER BY SUM(ws.ws_net_paid) DESC) AS rank
    FROM 
        web_sales ws
    LEFT JOIN 
        item i ON ws.ws_item_sk = i.i_item_sk
    WHERE 
        i.i_current_price > 20
    GROUP BY 
        ws.ws_item_sk
),
high_sales AS (
    SELECT 
        sd.ws_item_sk, 
        sd.total_quantity, 
        sd.total_net_paid 
    FROM 
        sales_data sd
    WHERE 
        sd.rank <= 5
),
customer_return_data AS (
    SELECT 
        sr_customer_sk, 
        SUM(sr_return_amt) AS total_return_amt, 
        COUNT(DISTINCT sr_ticket_number) AS return_count
    FROM 
        store_returns
    WHERE 
        sr_return_quantity > 0
    GROUP BY 
        sr_customer_sk
),
aggregate_data AS (
    SELECT 
        c.c_customer_sk, 
        COALESCE(crd.total_return_amt, 0) AS total_return_amt, 
        COALESCE(crd.return_count, 0) AS return_count,
        i.i_item_desc,
        hs.total_quantity,
        hs.total_net_paid
    FROM 
        customer c
    LEFT JOIN 
        customer_return_data crd ON c.c_customer_sk = crd.sr_customer_sk
    LEFT JOIN 
        high_sales hs ON hs.ws_item_sk = c.c_current_hdemo_sk
    LEFT JOIN 
        item i ON i.i_item_sk = hs.ws_item_sk
)

SELECT 
    ad.c_customer_sk, 
    COUNT(DISTINCT ad.total_return_amt) AS distinct_return_count, 
    AVG(ad.total_net_paid) AS avg_net_paid,
    STRING_AGG(DISTINCT i.i_item_desc, ', ') AS item_descriptions
FROM 
    aggregate_data ad
LEFT JOIN 
    item i ON ad.total_net_paid > 100
WHERE 
    ad.return_count > 0
GROUP BY 
    ad.c_customer_sk 
HAVING 
    (AVG(ad.total_net_paid) IS NOT NULL AND AVG(ad.total_net_paid) > 50) 
    OR (ad.total_return_amt IS NULL)
ORDER BY 
    distinct_return_count DESC, 
    avg_net_paid ASC
LIMIT 10;
