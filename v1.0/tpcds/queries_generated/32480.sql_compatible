
WITH RECURSIVE revenue_cte AS (
    SELECT 
        ws_item_sk,
        SUM(ws_ext_sales_price) AS total_revenue,
        ROW_NUMBER() OVER (PARTITION BY ws_item_sk ORDER BY SUM(ws_ext_sales_price) DESC) as rank
    FROM 
        web_sales
    GROUP BY 
        ws_item_sk
), 
customer_ranked AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        COUNT(w.ws_order_number) AS order_count,
        DENSE_RANK() OVER (PARTITION BY c.c_customer_sk ORDER BY COUNT(w.ws_order_number) DESC) AS order_rank
    FROM 
        customer c
    LEFT JOIN 
        web_sales w ON c.c_customer_sk = w.ws_bill_customer_sk
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    GROUP BY 
        c.c_customer_sk, c.c_first_name, c.c_last_name, cd.cd_gender, cd.cd_marital_status
), 
top_customers AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cr.total_revenue,
        cr.rank
    FROM 
        customer_ranked c
    JOIN 
        revenue_cte cr ON c.c_customer_sk = cr.ws_item_sk
    WHERE 
        cr.rank <= 5
)
SELECT 
    CONCAT(c.c_first_name, ' ', c.c_last_name) AS customer_name,
    c.total_revenue,
    COALESCE(c.order_count, 0) AS order_count,
    cd.cd_gender,
    cd.cd_marital_status
FROM 
    top_customers c
LEFT JOIN 
    customer_demographics cd ON c.c_customer_sk = cd.cd_demo_sk
ORDER BY 
    c.total_revenue DESC
LIMIT 10;
