
WITH RankedSales AS (
    SELECT 
        ws.web_site_sk,
        ws.ws_order_number,
        ws.ws_sales_price,
        ROW_NUMBER() OVER (PARTITION BY ws.web_site_sk ORDER BY ws.ws_order_number) AS rn
    FROM 
        web_sales ws
    WHERE 
        ws.ws_sold_date_sk BETWEEN (SELECT MIN(d_date_sk) FROM date_dim WHERE d_year = 2023)
        AND (SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = 2023)
),
CustomerWithReturns AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        COUNT(DISTINCT sr.ticket_number) AS total_returns,
        SUM(sr.return_amt) AS total_return_amount
    FROM 
        customer c
    LEFT JOIN 
        store_returns sr ON c.c_customer_sk = sr.sr_customer_sk
    GROUP BY 
        c.c_customer_sk, c.c_first_name, c.c_last_name
),
TopCustomers AS (
    SELECT 
        cwr.c_customer_sk,
        cwr.c_first_name,
        cwr.c_last_name,
        cwr.total_returns,
        cwr.total_return_amount,
        DENSE_RANK() OVER (ORDER BY cwr.total_return_amount DESC) AS rank
    FROM 
        CustomerWithReturns cwr
    WHERE 
        cwr.total_return_amount > 0
)
SELECT 
    T.ws_order_number,
    T.ws_sales_price,
    C.c_first_name,
    C.c_last_name,
    COALESCE(return_data.total_returns, 0) AS total_returns,
    COALESCE(return_data.total_return_amount, 0) AS total_return_amount,
    CASE 
        WHEN C.c_customer_sk IS NOT NULL THEN 'Customer Exists'
        ELSE 'No Customer Found'
    END AS customer_status
FROM 
    RankedSales T
LEFT JOIN 
    TopCustomers C ON T.web_site_sk = C.c_customer_sk
LEFT JOIN 
    (SELECT c_customer_sk, SUM(return_amt) AS total_return_amount, COUNT(*) AS total_returns 
     FROM store_returns 
     GROUP BY c_customer_sk) return_data ON return_data.c_customer_sk = C.c_customer_sk
WHERE 
    T.rn <= 5
ORDER BY 
    T.ws_sales_price DESC;
