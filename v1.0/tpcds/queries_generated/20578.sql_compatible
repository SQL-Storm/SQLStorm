
WITH sales_data AS (
    SELECT 
        ws.ws_item_sk,
        COALESCE(ws.ws_net_profit, 0) AS net_profit,
        ws.ws_sold_date_sk,
        DENSE_RANK() OVER (PARTITION BY ws.ws_item_sk ORDER BY ws.ws_sold_date_sk DESC) AS sales_rank
    FROM 
        web_sales ws
    WHERE 
        ws.ws_ship_date_sk IS NOT NULL AND
        EXISTS (
            SELECT 1
            FROM customer c
            WHERE c.c_customer_sk = ws.ws_bill_customer_sk
            AND (c.c_birth_month BETWEEN 1 AND 6 OR c.c_birth_month IS NULL)
        )
), item_summary AS (
    SELECT 
        i.i_item_sk,
        i.i_item_id,
        i.i_current_price,
        SUM(sd.net_profit) AS total_profit,
        COUNT(sd.ws_item_sk) AS total_sales,
        AVG(sd.net_profit) OVER (PARTITION BY i.i_item_sk) AS avg_profit
    FROM 
        item i
    LEFT JOIN sales_data sd ON i.i_item_sk = sd.ws_item_sk
    GROUP BY 
        i.i_item_sk, i.i_item_id, i.i_current_price
), ranked_items AS (
    SELECT 
        *,
        ROW_NUMBER() OVER (ORDER BY total_profit DESC, total_sales ASC) AS rank
    FROM 
        item_summary
)
SELECT 
    ri.i_item_id,
    ri.total_profit,
    ri.total_sales,
    ri.avg_profit,
    CASE 
        WHEN ri.total_profit > 10000 THEN 'High'
        WHEN ri.total_profit BETWEEN 5000 AND 10000 THEN 'Medium'
        ELSE 'Low'
    END AS profit_category,
    COALESCE((SELECT MAX(ws.ws_net_paid) 
              FROM web_sales ws 
              WHERE ws.ws_item_sk = ri.i_item_sk 
              AND ws.ws_sold_date_sk IN (
                  SELECT d.d_date_sk 
                  FROM date_dim d 
                  WHERE d.d_year = (SELECT MAX(d_year) FROM date_dim) 
                  AND d.d_dow = 5 
              )
              AND ws.ws_net_paid IS NOT NULL), -1) AS max_net_paid_last_year
FROM 
    ranked_items ri
WHERE 
    ri.rank <= 10
ORDER BY 
    ri.total_profit DESC, 
    profit_category ASC;
