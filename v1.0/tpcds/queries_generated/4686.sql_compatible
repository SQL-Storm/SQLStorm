
WITH RankedSales AS (
    SELECT 
        ws.web_site_sk,
        ws.web_site_id,
        SUM(ws.ws_net_profit) AS total_net_profit,
        RANK() OVER (PARTITION BY ws.web_site_sk ORDER BY SUM(ws.ws_net_profit) DESC) AS profit_rank
    FROM web_sales ws
    JOIN date_dim dd ON ws.ws_sold_date_sk = dd.d_date_sk
    WHERE dd.d_year = 2022
    GROUP BY ws.web_site_sk, ws.web_site_id
),
HighProfitSites AS (
    SELECT 
        web_site_id,
        total_net_profit
    FROM RankedSales
    WHERE profit_rank = 1
),
CustomerReturns AS (
    SELECT 
        sr_customer_sk,
        COUNT(DISTINCT sr_ticket_number) AS return_count,
        SUM(sr_return_amt) AS total_return_amount
    FROM store_returns
    GROUP BY sr_customer_sk
),
FinalReport AS (
    SELECT 
        c.c_customer_id,
        COALESCE(cr.return_count, 0) AS return_count,
        COALESCE(cr.total_return_amount, 0) AS total_return_amount,
        hps.total_net_profit AS high_profit_net_profit 
    FROM customer c
    LEFT JOIN CustomerReturns cr ON c.c_customer_sk = cr.sr_customer_sk
    LEFT JOIN HighProfitSites hps ON c.c_current_addr_sk = hps.web_site_id
    WHERE c.c_current_cdemo_sk IS NOT NULL
)

SELECT 
    fr.c_customer_id,
    fr.return_count,
    fr.total_return_amount,
    fr.high_profit_net_profit,
    CASE 
        WHEN fr.return_count > 10 THEN 'High Return Customer'
        WHEN fr.total_return_amount >= 1000 THEN 'High Value Returns'
        ELSE 'Regular Customer'
    END AS customer_segment
FROM FinalReport fr
ORDER BY fr.total_return_amount DESC, fr.return_count DESC
FETCH FIRST 50 ROWS ONLY;
