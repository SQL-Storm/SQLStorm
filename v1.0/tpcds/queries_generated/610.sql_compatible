
WITH RankedSales AS (
    SELECT 
        ws_item_sk,
        SUM(ws_quantity) AS total_quantity,
        SUM(ws_net_profit) AS total_net_profit,
        ROW_NUMBER() OVER (PARTITION BY ws_item_sk ORDER BY SUM(ws_net_profit) DESC) AS rn
    FROM 
        web_sales
    WHERE 
        ws_sold_date_sk BETWEEN (
            SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = 2022
        ) - 30 AND (
            SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = 2022
        )
    GROUP BY 
        ws_item_sk
),
TopSales AS (
    SELECT 
        r.ws_item_sk,
        i.i_item_desc,
        r.total_quantity,
        r.total_net_profit,
        CASE 
            WHEN EXISTS (
                SELECT 1 
                FROM promotion p 
                WHERE p.p_item_sk = r.ws_item_sk AND p.p_discount_active = 'Y'
            ) THEN 'Active Promotion'
            ELSE 'No Promotion'
        END AS promotion_status
    FROM 
        RankedSales r
    JOIN
        item i ON r.ws_item_sk = i.i_item_sk
    WHERE 
        r.rn = 1
),
AddressStats AS (
    SELECT
        ca_state,
        COUNT(DISTINCT c_customer_sk) AS num_customers,
        AVG(cd_purchase_estimate) AS avg_purchase_estimate
    FROM 
        customer_address ca
    JOIN 
        customer c ON ca.ca_address_sk = c.c_current_addr_sk
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    GROUP BY 
        ca_state
),
FinalStats AS (
    SELECT 
        ts.i_item_desc,
        ts.total_quantity,
        ts.total_net_profit,
        as.num_customers,
        as.avg_purchase_estimate
    FROM 
        TopSales ts
    LEFT JOIN 
        AddressStats as ON 1=1
    WHERE 
        ts.total_net_profit > 5000
)
SELECT 
    fs.i_item_desc,
    fs.total_quantity,
    fs.total_net_profit,
    COALESCE(fs.num_customers, 0) AS num_customers,
    COALESCE(fs.avg_purchase_estimate, 0) AS avg_purchase_estimate,
    CASE 
        WHEN fs.num_customers IS NULL THEN 'No Customers'
        ELSE 'Customers Exist'
    END AS customer_status
FROM 
    FinalStats fs
ORDER BY 
    fs.total_net_profit DESC
LIMIT 10;
