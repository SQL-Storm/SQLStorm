
WITH RECURSIVE SalesCTE AS (
    SELECT ws_order_number, 
           ws_item_sk, 
           ws_quantity, 
           ws_net_paid, 
           ROW_NUMBER() OVER (PARTITION BY ws_item_sk ORDER BY ws_order_number) AS rn
    FROM web_sales
    WHERE ws_sold_date_sk = (
        SELECT MAX(ws_sold_date_sk)
        FROM web_sales
    )
),
CustomerReturns AS (
    SELECT sr_item_sk,
           SUM(sr_return_quantity) AS total_returns,
           SUM(sr_return_amt_inc_tax) AS total_return_amount
    FROM store_returns
    GROUP BY sr_item_sk
),
DailySales AS (
    SELECT d.d_date,
           SUM(ws_net_paid) AS total_sales,
           SUM(ws_quantity) AS total_units_sold,
           ws.ws_item_sk
    FROM web_sales ws
    JOIN date_dim d ON ws.ws_sold_date_sk = d.d_date_sk
    GROUP BY d.d_date, ws.ws_item_sk
)
SELECT d.d_date, 
       COALESCE(ds.total_sales, 0) AS total_sales,
       COALESCE(ds.total_units_sold, 0) AS total_units_sold,
       COALESCE(cr.total_returns, 0) AS total_returns,
       COALESCE(cr.total_return_amount, 0) AS total_return_amount,
       CASE 
           WHEN COALESCE(ds.total_sales, 0) = 0 THEN NULL
           ELSE (COALESCE(cr.total_return_amount, 0) / COALESCE(ds.total_sales, 0)) * 100 
       END AS return_percentage
FROM DailySales ds
FULL OUTER JOIN CustomerReturns cr ON ds.ws_item_sk = cr.sr_item_sk
JOIN date_dim d ON d.d_date_sk = ds.ws_sold_date_sk
WHERE d.d_date BETWEEN '2023-01-01' AND '2023-12-31'
GROUP BY d.d_date, ds.total_sales, ds.total_units_sold, cr.total_returns, cr.total_return_amount
ORDER BY d.d_date;
