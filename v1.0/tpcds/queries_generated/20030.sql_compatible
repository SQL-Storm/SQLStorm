
WITH RECURSIVE income_ranges AS (
    SELECT ib_income_band_sk, ib_lower_bound, ib_upper_bound
    FROM income_band
    UNION ALL
    SELECT ir.ib_income_band_sk, ir.ib_lower_bound - 10, ir.ib_upper_bound + 10
    FROM income_ranges ir
    WHERE ir.ib_lower_bound > 0
),
customer_promotion_activity AS (
    SELECT c.c_customer_sk, c.c_first_name, c.c_last_name,
           SUM(CASE WHEN ws.ws_quantity > 0 THEN ws.ws_net_paid ELSE 0 END) AS total_spent,
           COUNT(DISTINCT ws.ws_order_number) AS total_orders,
           MAX(CASE WHEN p.p_promo_id IS NOT NULL THEN p.p_promo_name ELSE 'No Promotion' END) AS promo_used
    FROM customer c
    LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    LEFT JOIN promotion p ON ws.ws_promo_sk = p.p_promo_sk
    GROUP BY c.c_customer_sk, c.c_first_name, c.c_last_name
),
high_value_customers AS (
    SELECT cpa.*, ib.ib_income_band_sk
    FROM customer_promotion_activity cpa
    JOIN household_demographics hd ON cpa.c_customer_sk = hd.hd_demo_sk
    JOIN income_ranges ib ON hd.hd_income_band_sk = ib.ib_income_band_sk
    WHERE cpa.total_spent > (SELECT AVG(total_spent) FROM customer_promotion_activity) * 2
)
SELECT hvc.c_first_name, hvc.c_last_name, hvc.total_spent, hvc.total_orders, hvc.promo_used,
       COALESCE(SUM(sr.sr_return_quantity), 0) AS total_returns,
       (SELECT COUNT(DISTINCT wr_returning_customer_sk) FROM web_returns wr WHERE wr.wr_returning_customer_sk = hvc.c_customer_sk) AS web_returns_count,
       COUNT(DISTINCT ss.net_profit) FILTER (WHERE ss.net_profit IS NOT NULL) OVER (PARTITION BY hvc.c_customer_sk) AS unique_net_profits
FROM high_value_customers hvc
LEFT JOIN store_returns sr ON hvc.c_customer_sk = sr.sr_customer_sk
LEFT JOIN store_sales ss ON hvc.c_customer_sk = ss.ss_customer_sk
GROUP BY hvc.c_first_name, hvc.c_last_name, hvc.total_spent, hvc.total_orders, hvc.promo_used
ORDER BY hvc.total_spent DESC
LIMIT 10;
