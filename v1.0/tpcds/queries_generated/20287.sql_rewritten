WITH CustomerReturns AS (
    SELECT 
        cr.returning_customer_sk,
        SUM(cr.return_quantity) AS total_returned,
        COUNT(DISTINCT cr.order_number) AS return_order_count,
        SUM(cr.return_amt_inc_tax) AS total_return_value,
        MAX(cr.returned_date_sk) AS last_return_date
    FROM 
        catalog_returns cr
    GROUP BY 
        cr.returning_customer_sk
),
WebReturns AS (
    SELECT 
        wr.returning_customer_sk,
        SUM(wr.return_quantity) AS total_web_returned,
        COUNT(DISTINCT wr.order_number) AS web_return_order_count,
        SUM(wr.return_amt_inc_tax) AS total_web_return_value
    FROM 
        web_returns wr
    GROUP BY 
        wr.returning_customer_sk
),
CustomerGrowth AS (
    SELECT 
        c.c_customer_sk,
        CONCAT(c.c_first_name, ' ', c.c_last_name) AS customer_name,
        COALESCE(cr.total_returned, 0) AS total_returned,
        COALESCE(wr.total_web_returned, 0) AS total_web_returned,
        (COALESCE(cr.total_returned, 0) + COALESCE(wr.total_web_returned, 0))::decimal / 
        NULLIF(COALESCE(cr.return_order_count, 0) + COALESCE(wr.web_return_order_count, 0), 0) AS avg_return_per_order,
        (EXTRACT(YEAR FROM cast('2002-10-01' as date)) - c.c_birth_year) AS customer_age,
        CASE 
            WHEN c.c_preferred_cust_flag = 'Y' THEN 'Preferred'
            ELSE 'Regular'
        END AS customer_status,
        DENSE_RANK() OVER (ORDER BY EXTRACT(YEAR FROM cast('2002-10-01' as date)) - c.c_birth_year DESC) AS age_rank
    FROM 
        customer c
    LEFT JOIN 
        CustomerReturns cr ON c.c_customer_sk = cr.returning_customer_sk
    LEFT JOIN 
        WebReturns wr ON c.c_customer_sk = wr.returning_customer_sk
)
SELECT 
    cg.customer_name,
    cg.total_returned,
    cg.total_web_returned,
    cg.avg_return_per_order,
    cg.customer_age,
    cg.customer_status,
    cg.age_rank,
    CASE 
        WHEN cg.age_rank <= 50 THEN 'High Potential'
        WHEN cg.age_rank <= 100 THEN 'Medium Potential'
        ELSE 'Low Potential'
    END AS potential_category
FROM 
    CustomerGrowth cg
WHERE 
    cg.avg_return_per_order > (SELECT AVG(avg_return_per_order) FROM CustomerGrowth)
    OR (cg.total_returned + cg.total_web_returned) > 100
ORDER BY 
    cg.customer_age DESC, cg.total_returned DESC
LIMIT 10
OFFSET (SELECT COUNT(*) FROM customer) / 2
UNION ALL
SELECT 
    'Total Customers' AS customer_name,
    SUM(total_returned) AS total_returned,
    SUM(total_web_returned) AS total_web_returned,
    AVG(avg_return_per_order) AS avg_return_per_order,
    NULL AS customer_age,
    NULL AS customer_status,
    NULL AS age_rank,
    NULL AS potential_category
FROM 
    CustomerGrowth;