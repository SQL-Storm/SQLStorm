WITH RankedSales AS (
    SELECT 
        ws.ws_item_sk,
        ws.ws_order_number,
        ws.ws_sales_price,
        DENSE_RANK() OVER (PARTITION BY ws.ws_item_sk ORDER BY ws.ws_sales_price DESC) AS price_rank
    FROM web_sales ws
    WHERE ws.ws_sold_date_sk BETWEEN 1 AND 365 
),
HighValueSales AS (
    SELECT 
        r.ws_item_sk,
        r.ws_order_number,
        r.ws_sales_price
    FROM RankedSales r
    WHERE r.price_rank = 1
),
CustomerStats AS (
    SELECT 
        c.c_customer_sk,
        SUM(CASE WHEN cd.cd_gender = 'M' THEN 1 ELSE 0 END) AS male_count,
        SUM(CASE WHEN cd.cd_gender = 'F' THEN 1 ELSE 0 END) AS female_count,
        COUNT(DISTINCT ws.ws_order_number) AS total_orders
    FROM customer c
    LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY c.c_customer_sk
),
CustomerIncome AS (
    SELECT 
        hd.hd_demo_sk,
        SUM(CASE WHEN ib.ib_income_band_sk IS NOT NULL THEN 1 ELSE 0 END) AS income_band_count
    FROM household_demographics hd
    LEFT JOIN income_band ib ON hd.hd_income_band_sk = ib.ib_income_band_sk
    GROUP BY hd.hd_demo_sk
)
SELECT 
    ca.ca_city,
    COUNT(DISTINCT c.c_customer_sk) AS total_customers,
    SUM(COALESCE(cs.total_orders, 0)) AS total_orders,
    AVG(CASE WHEN c.c_birth_year IS NOT NULL THEN 2001 - c.c_birth_year ELSE NULL END) AS average_age,
    (SELECT COUNT(*) FROM HighValueSales hvs WHERE hvs.ws_item_sk IN (SELECT DISTINCT ws_item_sk FROM RankedSales WHERE price_rank = 1)) as high_value_sales,
    STRING_AGG(DISTINCT cd.cd_marital_status) AS marital_statuses
FROM customer_address ca
LEFT JOIN customer c ON ca.ca_address_sk = c.c_current_addr_sk
LEFT JOIN CustomerStats cs ON c.c_customer_sk = cs.c_customer_sk
LEFT JOIN CustomerIncome ci ON ci.hd_demo_sk = c.c_current_hdemo_sk
LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
GROUP BY ca.ca_city
HAVING COUNT(DISTINCT c.c_customer_sk) > 10
ORDER BY total_orders DESC NULLS LAST;