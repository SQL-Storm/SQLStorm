
WITH RankedReturns AS (
    SELECT 
        sr_customer_sk,
        COUNT(*) AS total_returns,
        SUM(sr_return_amt) AS total_return_amount,
        ROW_NUMBER() OVER (PARTITION BY sr_customer_sk ORDER BY SUM(sr_return_amt) DESC) AS rn
    FROM store_returns
    GROUP BY sr_customer_sk
),
TopCustomers AS (
    SELECT 
        c.c_customer_id,
        c.c_first_name,
        c.c_last_name,
        rr.total_returns,
        rr.total_return_amount
    FROM customer c
    JOIN RankedReturns rr ON c.c_customer_sk = rr.sr_customer_sk
    WHERE rr.rn = 1
),
AverageSales AS (
    SELECT 
        ws_bill_customer_sk,
        AVG(ws_net_paid) AS avg_sales
    FROM web_sales
    GROUP BY ws_bill_customer_sk
),
CustomersWithHighReturns AS (
    SELECT 
        tc.c_customer_id,
        tc.c_first_name,
        tc.c_last_name,
        tc.total_returns,
        tc.total_return_amount,
        COALESCE(as.avg_sales, 0) AS avg_sales
    FROM TopCustomers tc
    LEFT JOIN AverageSales as ON tc.c_customer_id = as.ws_bill_customer_sk
    WHERE tc.total_return_amount > 1000 AND tc.total_returns > 5
)
SELECT 
    c.c_customer_id AS customer_id,
    c.c_first_name AS first_name,
    c.c_last_name AS last_name,
    c.total_returns,
    c.total_return_amount,
    c.avg_sales,
    CASE 
        WHEN c.avg_sales > 200 THEN 'High Value'
        WHEN c.avg_sales BETWEEN 100 AND 200 THEN 'Medium Value'
        ELSE 'Low Value'
    END AS customer_value_category
FROM CustomersWithHighReturns c
ORDER BY c.total_return_amount DESC;
