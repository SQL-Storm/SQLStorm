
WITH RECURSIVE cte_item_sales AS (
    SELECT 
        i.i_item_sk,
        i.i_item_id,
        st.ss_sold_date_sk,
        SUM(st.ss_quantity) AS total_quantity,
        SUM(st.ss_net_paid) AS total_net_paid
    FROM 
        item AS i
    JOIN 
        store_sales AS st ON i.i_item_sk = st.ss_item_sk
    GROUP BY 
        i.i_item_sk, 
        i.i_item_id, 
        st.ss_sold_date_sk
), 
cte_customer_summary AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        SUM(ss.ss_net_paid_inc_tax) AS total_spent,
        COUNT(DISTINCT ss.ss_ticket_number) AS total_purchases,
        DENSE_RANK() OVER (PARTITION BY cd.cd_gender ORDER BY SUM(ss.ss_net_paid_inc_tax) DESC) AS gender_rank
    FROM 
        customer AS c
    LEFT JOIN 
        customer_demographics AS cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN 
        store_sales AS ss ON c.c_customer_sk = ss.ss_customer_sk
    GROUP BY 
        c.c_customer_sk, 
        c.c_first_name, 
        c.c_last_name, 
        cd.cd_gender
) 
SELECT 
    it.i_item_id,
    it.total_quantity,
    it.total_net_paid,
    cs.c_first_name,
    cs.c_last_name,
    cs.total_spent,
    cs.total_purchases,
    cs.gender_rank
FROM 
    cte_item_sales AS it
JOIN 
    cte_customer_summary AS cs ON it.i_item_sk IN (
        SELECT 
            st.ss_item_sk
        FROM 
            store_sales AS st
        WHERE 
            st.ss_net_paid_inc_tax > (SELECT AVG(ss.ss_net_paid_inc_tax) FROM store_sales)
    )
WHERE 
    it.total_quantity > 100
ORDER BY 
    it.total_net_paid DESC
LIMIT 50
OFFSET 10;
