WITH RECURSIVE Customer_Ranks AS (
    SELECT c.c_customer_sk, 
           c.c_first_name, 
           c.c_last_name, 
           cd.cd_gender, 
           cd.cd_marital_status, 
           cd.cd_purchase_estimate,
           ROW_NUMBER() OVER (PARTITION BY cd.cd_gender ORDER BY cd.cd_purchase_estimate DESC) AS rank
    FROM customer c
    JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
),
Recent_Sales AS (
    SELECT ws.ws_ship_date_sk, 
           ws.ws_item_sk, 
           ws.ws_quantity, 
           ws.ws_net_profit,
           d.d_date AS sale_date
    FROM web_sales ws
    JOIN date_dim d ON ws.ws_sold_date_sk = d.d_date_sk
    WHERE d.d_date >= cast('2002-10-01' as date) - INTERVAL '30 days'
),
Sales_Aggregates AS (
    SELECT csr.c_customer_sk,
           SUM(rs.ws_quantity) AS total_quantity,
           SUM(rs.ws_net_profit) AS total_net_profit
    FROM Customer_Ranks csr
    JOIN Recent_Sales rs ON csr.c_customer_sk = rs.ws_ship_customer_sk
    GROUP BY csr.c_customer_sk
)
SELECT 
    cr.c_first_name, 
    cr.c_last_name, 
    cr.cd_gender,
    CASE 
        WHEN sa.total_net_profit IS NULL THEN 'No Sales'
        ELSE 'Sales Made'
    END AS sales_status,
    COALESCE(sa.total_quantity, 0) AS total_quantity_sold,
    COALESCE(sa.total_net_profit, 0) AS total_net_profit,
    CASE 
        WHEN cr.rank <= 10 THEN 'Top Buyer'
        ELSE 'Regular Buyer'
    END AS buyer_category
FROM Customer_Ranks cr
LEFT JOIN Sales_Aggregates sa ON cr.c_customer_sk = sa.c_customer_sk
WHERE cr.cd_marital_status = 'M' AND 
      (cr.cd_purchase_estimate > (SELECT AVG(cd_purchase_estimate) FROM customer_demographics WHERE cd_gender = cr.cd_gender) OR 
      cr.rank <= 5)
ORDER BY cr.rank, total_net_profit DESC
LIMIT 100;