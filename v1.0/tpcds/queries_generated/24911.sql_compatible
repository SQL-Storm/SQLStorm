
WITH RankedReturns AS (
    SELECT 
        sr_item_sk,
        COUNT(sr_returned_date_sk) AS total_returns,
        ROW_NUMBER() OVER (PARTITION BY sr_item_sk ORDER BY SUM(sr_return_amt_inc_tax) DESC) AS rn
    FROM store_returns
    GROUP BY sr_item_sk
),
CustomerDemographicsWithIncome AS (
    SELECT 
        cd_demo_sk,
        cd_gender,
        cd_marital_status,
        cd_credit_rating,
        hd_income_band_sk,
        hd_buy_potential,
        (CASE 
            WHEN ib_lower_bound IS NOT NULL AND ib_upper_bound IS NOT NULL 
            THEN CONCAT('Income Band: ', ib_lower_bound, ' - ', ib_upper_bound)
            ELSE 'Income Band: Unknown' 
        END) AS income_band_desc
    FROM customer_demographics cd
    LEFT JOIN household_demographics hd ON cd.cd_demo_sk = hd.hd_demo_sk
    LEFT JOIN income_band ib ON hd.hd_income_band_sk = ib.ib_income_band_sk
),
WebSalesAnalysis AS (
    SELECT 
        ws_sold_date_sk,
        ws_item_sk,
        SUM(ws_net_paid_inc_tax) AS total_sales
    FROM web_sales
    WHERE ws_net_paid_inc_tax IS NOT NULL
    GROUP BY ws_sold_date_sk, ws_item_sk
),
AggregateSales AS (
    SELECT 
        ws_item_sk,
        SUM(total_sales) AS total_web_sales,
        RANK() OVER (ORDER BY SUM(total_sales) DESC) AS web_rank
    FROM WebSalesAnalysis
    GROUP BY ws_item_sk
)
SELECT 
    c.c_first_name,
    c.c_last_name,
    t.total_web_sales,
    r.total_returns,
    d.cd_gender,
    d.cd_marital_status,
    d.income_band_desc,
    (SELECT COUNT(*) FROM web_returns wr WHERE wr.returning_customer_sk = c.c_customer_sk) AS total_web_returns,
    (SELECT AVG(s.ws_ext_discount_amt) 
     FROM web_sales s 
     WHERE s.ws_item_sk = t.ws_item_sk 
     AND s.ws_net_paid_inc_tax IS NOT NULL) AS avg_discount
FROM customer c
JOIN RankedReturns r ON c.c_customer_sk = r.sr_item_sk
JOIN AggregateSales t ON r.sr_item_sk = t.ws_item_sk
JOIN CustomerDemographicsWithIncome d ON c.c_current_cdemo_sk = d.cd_demo_sk
WHERE t.web_rank <= 10 
AND (c.c_birth_year BETWEEN 1970 AND 1990 OR c.c_birth_country IS NULL)
ORDER BY t.total_web_sales DESC, r.total_returns ASC;
