
WITH RECURSIVE Sales_CTE AS (
    SELECT 
        cs_order_number,
        COUNT(*) AS total_sales,
        SUM(cs_sales_price) AS total_revenue
    FROM 
        catalog_sales
    GROUP BY 
        cs_order_number
    UNION ALL
    SELECT 
        ws_order_number,
        COUNT(*) AS total_sales,
        SUM(ws_sales_price) AS total_revenue
    FROM 
        web_sales
    GROUP BY 
        ws_order_number
),
Customer_Stats AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        COUNT(DISTINCT ss.ss_ticket_number) AS store_purchase_count,
        COALESCE(SUM(ss.ss_net_paid), 0) AS total_store_spent,
        COUNT(DISTINCT cs.cs_order_number) AS catalog_purchase_count,
        COALESCE(SUM(cs.cs_net_paid), 0) AS total_catalog_spent,
        COUNT(DISTINCT ws.ws_order_number) AS web_purchase_count,
        COALESCE(SUM(ws.ws_net_paid), 0) AS total_web_spent
    FROM 
        customer c 
        LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
        LEFT JOIN store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
        LEFT JOIN catalog_sales cs ON c.c_customer_sk = cs.cs_bill_customer_sk
        LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY 
        c.c_customer_sk, c.c_first_name, c.c_last_name, cd.cd_gender, cd.cd_marital_status
),
Sales_Analysis AS (
    SELECT 
        cs_order_number,
        SUM(total_revenue) AS grand_total_revenue,
        SUM(total_sales) AS grand_total_sales
    FROM 
        Sales_CTE
    GROUP BY 
        cs_order_number
)
SELECT 
    st.c_customer_sk,
    st.c_first_name,
    st.c_last_name,
    st.cd_gender,
    st.cd_marital_status,
    COALESCE(st.store_purchase_count, 0) AS store_purchases,
    COALESCE(st.catalog_purchase_count, 0) AS catalog_purchases,
    COALESCE(st.web_purchase_count, 0) AS web_purchases,
    st.total_store_spent + st.total_catalog_spent + st.total_web_spent AS total_spent,
    CASE 
        WHEN st.total_store_spent > 1000 THEN 'High spender'
        WHEN st.total_store_spent > 500 THEN 'Medium spender'
        ELSE 'Low spender'
    END AS spending_category,
    COUNT(sa.grand_total_revenue) AS associated_orders
FROM 
    Customer_Stats st
    LEFT JOIN Sales_Analysis sa ON st.store_purchase_count > 0 OR st.catalog_purchase_count > 0 OR st.web_purchase_count > 0
GROUP BY 
    st.c_customer_sk, st.c_first_name, st.c_last_name, st.cd_gender, st.cd_marital_status,
    st.store_purchase_count, st.catalog_purchase_count, st.web_purchase_count,
    st.total_store_spent, st.total_catalog_spent, st.total_web_spent
HAVING 
    total_spent IS NOT NULL AND total_spent > 0
ORDER BY 
    total_spent DESC
LIMIT 100;
