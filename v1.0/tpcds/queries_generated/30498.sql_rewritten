WITH RECURSIVE sales_cte AS (
    SELECT 
        ws.web_site_sk,
        ws.web_name,
        SUM(ws.net_profit) AS total_profit,
        1 AS level
    FROM 
        web_sales ws
    JOIN 
        date_dim dd ON ws.ws_sold_date_sk = dd.d_date_sk
    WHERE 
        dd.d_year = 2001
    GROUP BY 
        ws.web_site_sk, ws.web_name

    UNION ALL

    SELECT 
        ws.web_site_sk,
        ws.web_name,
        SUM(ws.net_profit) + c.total_profit AS total_profit,
        c.level + 1
    FROM 
        web_sales ws
    JOIN 
        sales_cte c ON ws.web_site_sk = c.web_site_sk
    WHERE 
        c.level < 5
    GROUP BY 
        ws.web_site_sk, ws.web_name, c.total_profit
),
customer_data AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        COUNT(cs.cs_order_number) AS total_orders,
        SUM(cs.cs_sales_price) AS total_spent
    FROM 
        customer c
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN 
        catalog_sales cs ON c.c_customer_sk = cs.cs_bill_customer_sk
    GROUP BY 
        c.c_customer_sk, c.c_first_name, c.c_last_name, cd.cd_gender
),
high_value_customers AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        c.total_orders,
        c.total_spent,
        CASE 
            WHEN c.total_spent IS NULL THEN 'Unknown'
            WHEN c.total_spent >= 1000 THEN 'High Value'
            ELSE 'Low Value'
        END AS value_category
    FROM 
        customer_data c
    WHERE 
        c.total_spent IS NOT NULL
)
SELECT 
    hv.value_category,
    COUNT(hv.c_customer_sk) AS customer_count,
    AVG(hv.total_spent) AS average_spent,
    SUM(s.total_profit) AS total_profit
FROM 
    high_value_customers hv
LEFT JOIN 
    sales_cte s ON hv.c_customer_sk = s.web_site_sk
GROUP BY 
    hv.value_category
ORDER BY 
    total_profit DESC;