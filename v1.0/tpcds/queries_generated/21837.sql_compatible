
WITH RankedReturns AS (
    SELECT 
        wr_item_sk,
        wr_order_number,
        wr_return_quantity,
        wr_return_amt,
        wr_return_tax,
        ROW_NUMBER() OVER (PARTITION BY wr_item_sk ORDER BY wr_return_quantity DESC) AS rn
    FROM web_returns
    WHERE wr_return_amt IS NOT NULL
),
PromotionsWithValidSales AS (
    SELECT 
        p.p_promo_id,
        p.p_discount_active,
        SUM(ws.ws_sales_price) AS total_sales_price
    FROM promotion p
    JOIN web_sales ws ON p.p_promo_sk = ws.ws_promo_sk
    WHERE p.p_discount_active = 'Y'
    GROUP BY p.p_promo_id, p.p_discount_active
),
CustomerIncome AS (
    SELECT 
        cd.cd_gender,
        SUM(hd.hd_vehicle_count) AS total_vehicles,
        COUNT(DISTINCT c.c_customer_sk) AS customer_count,
        MAX(COALESCE(cd.cd_purchase_estimate, 0)) AS max_purchase_estimate
    FROM customer c
    LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN household_demographics hd ON c.c_current_hdemo_sk = hd.hd_demo_sk
    GROUP BY cd.cd_gender
)
SELECT 
    ca.ca_city,
    COUNT(DISTINCT cr.cr_returning_customer_sk) AS total_returning_customers,
    AVG(cr.cr_return_amount) AS avg_return_amt,
    COALESCE(MAX(r.total_sales_price), 0) AS max_promotion_sales,
    SUM(COALESCE(cu.customer_count, 0)) AS total_income_customers
FROM customer_address ca
LEFT JOIN catalog_returns cr ON ca.ca_address_sk = cr.cr_returning_addr_sk
LEFT JOIN PromotionsWithValidSales r ON cr.cr_item_sk = r.p_promo_id
LEFT JOIN CustomerIncome cu ON cu.cd_gender = 
    (CASE 
        WHEN ca.ca_state = 'CA' THEN 'M'
        WHEN ca.ca_state = 'NY' THEN 'F'
        ELSE 'O' 
    END)
GROUP BY ca.ca_city
HAVING COUNT(DISTINCT cr.cr_returning_customer_sk) > 10
AND COALESCE(MAX(r.total_sales_price), 0) > 100
ORDER BY total_returning_customers DESC
LIMIT 50;
