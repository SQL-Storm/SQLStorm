
WITH RankedReturns AS (
    SELECT 
        sr_item_sk, 
        sr_return_quantity, 
        sr_return_amt_inc_tax, 
        sr_customer_sk,
        ROW_NUMBER() OVER (PARTITION BY sr_item_sk ORDER BY sr_return_quantity DESC) AS rn
    FROM store_returns 
    WHERE sr_return_quantity > 0
),
RankedSales AS (
    SELECT 
        ws_item_sk, 
        ws_quantity, 
        ws_net_paid_inc_tax, 
        ws_bill_customer_sk,
        ROW_NUMBER() OVER (PARTITION BY ws_item_sk ORDER BY ws_quantity DESC) AS rn
    FROM web_sales 
    WHERE ws_quantity > 0
),
AggregateReturns AS (
    SELECT 
        rr.sr_item_sk,
        SUM(rr.sr_return_quantity) AS total_return_quantity,
        SUM(rr.sr_return_amt_inc_tax) AS total_return_amt
    FROM RankedReturns rr 
    WHERE rr.rn <= 5
    GROUP BY rr.sr_item_sk
),
AggregateSales AS (
    SELECT 
        rs.ws_item_sk,
        SUM(rs.ws_quantity) AS total_sold_quantity,
        SUM(rs.ws_net_paid_inc_tax) AS total_sales_amt
    FROM RankedSales rs 
    WHERE rs.rn <= 5
    GROUP BY rs.ws_item_sk
),
CustomerDetails AS (
    SELECT 
        c.c_customer_sk, 
        cd.cd_gender,
        cd.cd_marital_status, 
        cd.cd_purchase_estimate,
        COALESCE(c.c_birth_year, NULL) AS birth_year
    FROM customer c
    LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
),
CombinedAnalysis AS (
    SELECT 
        ar.sr_item_sk,
        as.ws_item_sk,
        ar.total_return_quantity,
        ar.total_return_amt,
        as.total_sold_quantity,
        as.total_sales_amt,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.birth_year,
        CASE 
            WHEN ar.total_return_quantity IS NULL THEN 'No Returns'
            WHEN ar.total_return_amt > as.total_sales_amt THEN 'High Returns'
            ELSE 'Normal'
        END AS return_status
    FROM AggregateReturns ar
    FULL OUTER JOIN AggregateSales as ON ar.sr_item_sk = as.ws_item_sk
    LEFT JOIN CustomerDetails cd ON cd.c_customer_sk = (
        SELECT DISTINCT ws_bill_customer_sk 
        FROM web_sales 
        WHERE ws_item_sk = as.ws_item_sk LIMIT 1
    )
)
SELECT 
    COALESCE(ar.sr_item_sk, as.ws_item_sk) AS item_sk,
    COALESCE(total_return_quantity, 0) AS total_return_quantity,
    COALESCE(total_sold_quantity, 0) AS total_sold_quantity,
    total_return_amt,
    total_sales_amt,
    return_status,
    cd_gender,
    cd_marital_status,
    birth_year,
    CASE 
        WHEN return_status = 'High Returns' AND cd_gender = 'F' THEN 'Female High Returns'
        WHEN return_status = 'High Returns' AND cd_gender = 'M' THEN 'Male High Returns'
        ELSE 'Standard'
    END AS demographic_return_category
FROM CombinedAnalysis
WHERE (total_return_quantity IS NOT NULL OR total_sold_quantity IS NOT NULL) 
AND (return_status IS NOT NULL OR cd_gender IS NOT NULL)
ORDER BY item_sk, return_status DESC;
