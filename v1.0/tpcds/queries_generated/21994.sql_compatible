
WITH RankedReturns AS (
    SELECT 
        CASE 
            WHEN wr_returned_date_sk IS NOT NULL THEN 'Web'
            ELSE 'Store'
        END AS return_type,
        COALESCE(wr_returning_customer_sk, sr_customer_sk) AS customer_sk,
        COALESCE(wr_returned_date_sk, sr_returned_date_sk) AS return_date_sk,
        COALESCE(wr_return_amt, sr_return_amt) AS return_amount,
        ROW_NUMBER() OVER (PARTITION BY COALESCE(wr_returning_customer_sk, sr_customer_sk) ORDER BY COALESCE(wr_returned_date_sk, sr_returned_date_sk) DESC) AS rn
    FROM 
        web_returns wr 
    FULL OUTER JOIN 
        store_returns sr 
    ON 
        wr_returning_customer_sk = sr_returning_customer_sk 
    WHERE 
        COALESCE(wr_return_amt, 0) > 0 OR COALESCE(sr_return_amt, 0) > 0
),
CustomerInfo AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        SUM(rr.return_amount) AS total_returns
    FROM 
        customer c 
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN 
        RankedReturns rr ON c.c_customer_sk = rr.customer_sk AND rr.rn = 1
    GROUP BY 
        c.c_customer_sk, c.c_first_name, c.c_last_name, cd.cd_gender, cd.cd_marital_status
)
SELECT 
    ci.c_customer_sk,
    ci.c_first_name,
    ci.c_last_name,
    ci.cd_gender,
    ci.cd_marital_status,
    CASE 
        WHEN ci.total_returns IS NULL THEN 'No Returns'
        WHEN ci.total_returns > 1000 THEN 'High Return Customer'
        ELSE 'Regular Customer'
    END AS return_category,
    CASE 
        WHEN ci.cd_gender = 'M' THEN 'Mr. ' || ci.c_last_name
        WHEN ci.cd_gender = 'F' THEN 'Ms. ' || ci.c_last_name
        ELSE 'Customer ' || ci.c_last_name
    END AS display_name,
    COALESCE(ci.total_returns, 0) AS returns_total,
    (SELECT COUNT(*) FROM customer c1 WHERE c1.c_current_cdemo_sk = ci.c_customer_sk) AS purchases_count,
    (SELECT SUM(ws.ws_ext_sales_price) FROM web_sales ws WHERE ws.ws_bill_customer_sk = ci.c_customer_sk) AS total_web_sales,
    (SELECT SUM(cs.cs_ext_sales_price) FROM catalog_sales cs WHERE cs.cs_bill_customer_sk = ci.c_customer_sk) AS total_catalog_sales
FROM 
    CustomerInfo ci
WHERE 
    (ci.total_returns > 500 OR ci.cd_marital_status = 'M') 
    AND ci.c_first_name IS NOT NULL 
ORDER BY 
    returns_total DESC, ci.c_last_name ASC
FETCH FIRST 100 ROWS ONLY;
