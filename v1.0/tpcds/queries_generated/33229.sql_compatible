
WITH RECURSIVE SalesHierarchy AS (
    SELECT 
        cs_item_sk,
        cs_order_number,
        cs_sales_price,
        1 AS level
    FROM 
        catalog_sales
    WHERE 
        cs_sold_date_sk = (SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = 2023)

    UNION ALL

    SELECT 
        sr_item_sk,
        sr_order_number,
        sr_return_amt AS cs_sales_price,
        level + 1
    FROM 
        store_returns sr
    JOIN 
        SalesHierarchy sh ON sr_item_sk = sh.cs_item_sk
    WHERE 
        sr_returned_date_sk = (SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = 2023)
)
SELECT 
    ch.cs_item_sk,
    COUNT(ch.cs_order_number) AS total_orders,
    SUM(ch.cs_sales_price) AS total_sales,
    SUM(CASE WHEN ch.cs_sales_price IS NULL THEN 0 ELSE ch.cs_sales_price END) AS valid_sales,
    SUM(COALESCE(ch.cs_sales_price, 0)) AS coalesced_sales,
    MAX(ch.level) AS sales_level
FROM 
    SalesHierarchy ch
LEFT JOIN 
    web_sales ws ON ch.cs_item_sk = ws.ws_item_sk
LEFT JOIN 
    customer_demographics cd ON ws.ws_bill_cdemo_sk = cd.cd_demo_sk
WHERE 
    (cd.cd_marital_status = 'M' OR cd.cd_marital_status IS NULL)
    AND (cd.cd_gender = 'F' OR cd.cd_gender IS NULL)
GROUP BY 
    ch.cs_item_sk
HAVING 
    SUM(ch.cs_sales_price) > 1000 
ORDER BY 
    total_sales DESC
LIMIT 10;
