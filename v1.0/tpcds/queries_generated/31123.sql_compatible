
WITH RECURSIVE SalesData AS (
    SELECT 
        ws_item_sk,
        SUM(ws_quantity) AS total_quantity,
        SUM(ws_sales_price) AS total_sales,
        SUM(ws_net_profit) AS total_profit,
        d_date
    FROM 
        web_sales
    JOIN 
        date_dim ON ws_sold_date_sk = d_date_sk
    WHERE 
        d_year BETWEEN 2022 AND 2023
    GROUP BY 
        ws_item_sk, d_date
),
RankedSales AS (
    SELECT 
        sd.ws_item_sk,
        sd.total_quantity,
        sd.total_sales,
        sd.total_profit,
        RANK() OVER (PARTITION BY sd.ws_item_sk ORDER BY sd.total_profit DESC) AS profit_rank
    FROM 
        SalesData sd
)
SELECT 
    ws.ws_item_sk,
    it.i_item_desc,
    ss.ss_sold_date_sk,
    ss.ss_order_number,
    COALESCE(ss.net_profit, 0) AS store_net_profit,
    COALESCE(ws.total_profit, 0) AS web_net_profit,
    (COALESCE(ss.net_profit, 0) + COALESCE(ws.total_profit, 0)) AS combined_net_profit
FROM 
    RankedSales ws
LEFT JOIN 
    store_sales ss ON ws.ws_item_sk = ss.ss_item_sk
LEFT JOIN 
    item it ON ws.ws_item_sk = it.i_item_sk
INNER JOIN 
    (SELECT ws_item_sk, MAX(profit_rank) AS max_rank FROM RankedSales GROUP BY ws_item_sk) ranked ON ws.ws_item_sk = ranked.ws_item_sk
WHERE 
    ws.profit_rank = 1 AND 
    ss.ss_sold_date_sk IS NOT NULL
ORDER BY 
    combined_net_profit DESC
LIMIT 50;
