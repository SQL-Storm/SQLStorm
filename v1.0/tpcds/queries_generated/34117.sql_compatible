
WITH RECURSIVE Sales_CTE AS (
    SELECT 
        ws_item_sk,
        SUM(ws_sales_price) AS total_sales,
        COUNT(ws_order_number) AS order_count,
        ROW_NUMBER() OVER (PARTITION BY ws_item_sk ORDER BY SUM(ws_sales_price) DESC) AS sales_rank
    FROM 
        web_sales
    GROUP BY 
        ws_item_sk
),
Customer_Demo AS (
    SELECT 
        c_customer_sk,
        cd_gender AS gender,
        cd_marital_status,
        cd_education_status,
        COALESCE(cd_credit_rating, 'Unknown') AS credit_rating,
        COALESCE(hd_income_band_sk, -1) AS income_band
    FROM 
        customer 
    LEFT JOIN 
        customer_demographics ON c_current_cdemo_sk = cd_demo_sk
    LEFT JOIN 
        household_demographics ON hd_demo_sk = c_current_hdemo_sk
),
Top_Selling_Items AS (
    SELECT 
        item.i_item_sk,
        item.i_item_id,
        item.i_product_name,
        sc.total_sales,
        cd.gender,
        cd.income_band
    FROM 
        Sales_CTE sc
    JOIN 
        item ON sc.ws_item_sk = item.i_item_sk
    JOIN 
        Customer_Demo cd ON cd.c_customer_sk = (SELECT c_customer_sk FROM web_sales WHERE ws_item_sk = item.i_item_sk LIMIT 1)
    WHERE 
        sc.sales_rank <= 10
)
SELECT 
    tsi.i_product_name,
    tsi.total_sales,
    COUNT(DISTINCT cd.c_customer_sk) AS unique_customers,
    SUM(CASE WHEN cd.income_band = -1 THEN 0 ELSE 1 END) AS known_income_count,
    sm.sm_type AS shipping_mode
FROM 
    Top_Selling_Items tsi
LEFT OUTER JOIN 
    ship_mode sm ON tsi.ws_ship_mode_sk = sm.sm_ship_mode_sk
JOIN 
    store_sales ss ON ss.ss_item_sk = tsi.i_item_sk
WHERE 
    tsi.total_sales > 1000
GROUP BY 
    tsi.i_product_name, tsi.total_sales, sm.sm_type
HAVING 
    SUM(ss.ss_quantity) > 10
ORDER BY 
    tsi.total_sales DESC;
