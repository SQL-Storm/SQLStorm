
WITH RECURSIVE SalesCTE AS (
    SELECT 
        ws.web_site_sk,
        SUM(ws.ws_ext_sales_price) AS total_sales,
        COUNT(ws.ws_order_number) AS order_count,
        ROW_NUMBER() OVER (PARTITION BY ws.web_site_sk ORDER BY SUM(ws.ws_ext_sales_price) DESC) AS sales_rank
    FROM 
        web_sales ws
    INNER JOIN 
        web_site we ON ws.ws_web_site_sk = we.web_site_sk
    GROUP BY 
        ws.web_site_sk
    HAVING 
        SUM(ws.ws_ext_sales_price) > 1000
),
AddressCTE AS (
    SELECT 
        ca.ca_address_sk,
        ca.ca_city,
        ca.ca_state,
        COUNT(c.c_customer_sk) AS customer_count
    FROM 
        customer_address ca
    LEFT JOIN 
        customer c ON ca.ca_address_sk = c.c_current_addr_sk
    GROUP BY 
        ca.ca_address_sk, ca.ca_city, ca.ca_state
    HAVING 
        COUNT(c.c_customer_sk) > 5
),
FullSalesReport AS (
    SELECT 
        s.web_site_sk AS ws_web_site_sk,
        s.total_sales,
        s.order_count,
        a.ca_city,
        a.ca_state,
        ROW_NUMBER() OVER (PARTITION BY a.ca_state ORDER BY s.total_sales DESC) AS state_rank
    FROM 
        SalesCTE s
    JOIN 
        customer c ON c.c_current_cdemo_sk = s.web_site_sk
    JOIN 
        AddressCTE a ON c.c_current_addr_sk = a.ca_address_sk
)
SELECT 
    fs.ws_web_site_sk,
    fs.total_sales,
    fs.order_count,
    fs.ca_city,
    fs.ca_state
FROM 
    FullSalesReport fs
WHERE 
    fs.state_rank <= 3
ORDER BY 
    fs.total_sales DESC
LIMIT 10
UNION ALL
SELECT 
    NULL AS ws_web_site_sk,
    NULL AS total_sales,
    NULL AS order_count,
    'Total' AS ca_city,
    'Aggregate' AS ca_state
FROM 
    (SELECT SUM(total_sales) AS total_sales FROM FullSalesReport) totals
