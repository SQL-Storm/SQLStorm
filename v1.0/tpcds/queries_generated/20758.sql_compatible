
WITH RankedSales AS (
    SELECT
        ws.web_site_sk,
        ws.net_profit,
        DENSE_RANK() OVER (PARTITION BY ws.web_site_sk ORDER BY ws.net_profit DESC) AS rank
    FROM web_sales ws
    WHERE ws.net_profit IS NOT NULL AND ws.net_profit > 0
),
CustomerInfo AS (
    SELECT
        c.c_customer_id,
        CONCAT(c.c_first_name, ' ', c.c_last_name) AS full_name,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_credit_rating,
        CA.ca_city,
        CASE
            WHEN hd.hd_income_band_sk IS NULL THEN 'Unknown'
            WHEN hd.hd_income_band_sk = 1 THEN 'Low'
            WHEN hd.hd_income_band_sk = 2 THEN 'Medium'
            WHEN hd.hd_income_band_sk = 3 THEN 'High'
            ELSE 'Other'
        END AS income_band
    FROM customer c
    LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    JOIN household_demographics hd ON c.c_customer_sk = hd.hd_demo_sk
    LEFT JOIN customer_address CA ON c.c_current_addr_sk = CA.ca_address_sk
)
SELECT
    ci.full_name,
    ci.cd_gender,
    ci.income_band,
    rs.web_site_sk,
    SUM(rs.net_profit) AS total_net_profit,
    COUNT(*) AS sales_count,
    MAX(rs.net_profit) AS highest_net_profit
FROM CustomerInfo ci
JOIN RankedSales rs ON ci.c_customer_id = CAST(rs.web_site_sk AS VARCHAR(16))
WHERE ci.cd_gender IS NOT NULL
GROUP BY
    ci.full_name,
    ci.cd_gender,
    ci.income_band,
    rs.web_site_sk
HAVING
    SUM(rs.net_profit) > (SELECT AVG(net_profit) FROM RankedSales)
ORDER BY total_net_profit DESC
LIMIT 10
UNION ALL
SELECT
    'Total' AS full_name,
    NULL AS cd_gender,
    NULL AS income_band,
    NULL AS web_site_sk,
    SUM(total_net_profit) AS total_net_profit,
    NULL AS sales_count,
    NULL AS highest_net_profit
FROM (
    SELECT
        SUM(rs.net_profit) AS total_net_profit
    FROM RankedSales rs
) AS total_sales
ORDER BY total_net_profit DESC;
