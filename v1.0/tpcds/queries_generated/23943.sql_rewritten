WITH RankedSales AS (
    SELECT 
        ws_item_sk,
        ws_quantity,
        ws_sales_price,
        ROW_NUMBER() OVER (PARTITION BY ws_item_sk ORDER BY ws_sales_price DESC) AS SalesRank
    FROM 
        web_sales
    WHERE 
        ws_sold_date_sk BETWEEN 1 AND 1000
),
CustomerData AS (
    SELECT 
        c.c_customer_id,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_purchase_estimate,
        COALESCE(hd.hd_buy_potential, 'N/A') AS purchase_potential
    FROM 
        customer c
    LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN household_demographics hd ON c.c_current_hdemo_sk = hd.hd_demo_sk
),
SalesSummary AS (
    SELECT 
        r.ws_item_sk,
        SUM(r.ws_quantity) AS total_quantity,
        SUM(r.ws_sales_price) AS total_sales,
        COUNT(DISTINCT r.ws_ship_customer_sk) AS distinct_customers
    FROM 
        web_sales r
    JOIN RankedSales rs ON r.ws_item_sk = rs.ws_item_sk 
    WHERE 
        rs.SalesRank <= 10
    GROUP BY 
        r.ws_item_sk
),
FinalMetrics AS (
    SELECT 
        ss.ws_item_sk,
        cs.total_quantity,
        cs.total_sales,
        COALESCE(cd.purchase_potential, 'N/A') AS purchase_potential,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_purchase_estimate
    FROM 
        SalesSummary ss
    JOIN CustomerData cd ON cd.c_customer_id = (
        SELECT TOP 1 c.c_customer_id 
        FROM customer c 
        WHERE c.c_current_addr_sk = (
            SELECT COALESCE(MIN(s.s_address), MAX(s.s_address))
            FROM store s
            WHERE s.s_state IN ('CA', 'TX')
        )
        ORDER BY NEWID() 
    )
    LEFT JOIN item i ON ss.ws_item_sk = i.i_item_sk
)
SELECT 
    fm.ws_item_sk,
    fm.total_quantity,
    fm.total_sales,
    fm.purchase_potential,
    fm.cd_gender,
    fm.cd_marital_status,
    (CASE 
        WHEN fm.cd_purchase_estimate IS NULL THEN 'Estimate Missing'
        WHEN fm.cd_purchase_estimate > 5000 THEN 'High Value'
        ELSE 'Low Value' 
    END) AS value_category
FROM 
    FinalMetrics fm
WHERE 
    fm.total_sales > 1000
ORDER BY 
    fm.total_sales DESC 
FETCH FIRST 100 ROWS ONLY;