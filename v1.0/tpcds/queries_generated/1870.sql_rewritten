WITH RankedWebSales AS (
    SELECT 
        ws.web_site_sk,
        SUM(ws.ws_sales_price) AS total_sales,
        DENSE_RANK() OVER (PARTITION BY ws.web_site_sk ORDER BY SUM(ws.ws_sales_price) DESC) AS rank
    FROM 
        web_sales ws
    GROUP BY 
        ws.web_site_sk
),
CustomerReturns AS (
    SELECT 
        cr.refunded_customer_sk,
        COUNT(cr.cr_order_number) AS total_returns,
        SUM(cr.cr_return_amount) AS total_return_amount
    FROM 
        catalog_returns cr
    GROUP BY 
        cr.refunded_customer_sk
),
HighReturnCustomers AS (
    SELECT
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        COALESCE(cr.total_returns, 0) AS total_returns,
        COALESCE(cr.total_return_amount, 0) AS total_return_amount
    FROM 
        customer c
    LEFT JOIN 
        CustomerReturns cr ON c.c_customer_sk = cr.refunded_customer_sk
    WHERE 
        COALESCE(cr.total_returns, 0) > 3 
)
SELECT 
    w.w_warehouse_id,
    w.w_warehouse_name,
    sales.total_sales,
    returns.total_returns,
    (sales.total_sales - COALESCE(returns.total_return_amount, 0)) AS net_revenue
FROM 
    warehouse w
LEFT JOIN 
    (SELECT 
         ws.web_site_sk,
         SUM(ws.ws_sales_price) AS total_sales
     FROM 
         web_sales ws
     GROUP BY 
         ws.web_site_sk) AS sales ON w.w_warehouse_sk = sales.web_site_sk
LEFT JOIN 
    (SELECT 
         ws.web_site_sk,
         SUM(cr.cr_return_amount) AS total_return_amount
     FROM 
         web_sales ws
     JOIN 
         catalog_returns cr ON ws.ws_order_number = cr.cr_order_number
     GROUP BY 
         ws.web_site_sk) AS returns ON w.w_warehouse_sk = returns.web_site_sk
WHERE 
    w.w_warehouse_sq_ft > 5000 
ORDER BY 
    net_revenue DESC
LIMIT 10;