
WITH RECURSIVE item_hierarchy AS (
    SELECT 
        i.i_item_sk,
        i.i_item_desc,
        i.i_current_price,
        1 AS level
    FROM item i
    WHERE i.i_rec_start_date <= DATE '2002-10-01' AND (i.i_rec_end_date IS NULL OR i.i_rec_end_date >= DATE '2002-10-01')

    UNION ALL

    SELECT 
        i.i_item_sk,
        CONCAT(ih.i_item_desc, ' -> ', i.i_item_desc) AS i_item_desc,
        i.i_current_price,
        ih.level + 1
    FROM item i
    JOIN item_hierarchy ih ON i.i_manufact_id = ih.i_item_sk
)
SELECT 
    c.c_first_name,
    c.c_last_name,
    SUM(ws.ws_net_profit) AS total_profit,
    COUNT(DISTINCT ws.ws_order_number) AS total_orders,
    MAX(ws.ws_sold_date_sk) AS last_order_date,
    ROW_NUMBER() OVER (PARTITION BY c.c_customer_sk ORDER BY SUM(ws.ws_net_profit) DESC) AS rank,
    MIN(i.i_current_price) AS lowest_price,
    MAX(i.i_current_price) AS highest_price,
    COALESCE(SUM(NULLIF(ws.ws_net_paid_inc_ship_tax, 0)), 0) AS total_net_paid_with_tax,
    COUNT(DISTINCT d.d_date) AS unique_order_days
FROM 
    web_sales ws
JOIN 
    customer c ON ws.ws_ship_customer_sk = c.c_customer_sk
JOIN 
    item i ON ws.ws_item_sk = i.i_item_sk
JOIN 
    date_dim d ON ws.ws_sold_date_sk = d.d_date_sk
LEFT JOIN 
    customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
LEFT JOIN 
    item_hierarchy ih ON i.i_item_sk = ih.i_item_sk
WHERE 
    d.d_year = EXTRACT(YEAR FROM DATE '2002-10-01') 
    AND (cd.cd_marital_status = 'M' OR cd.cd_gender = 'F')
GROUP BY 
    c.c_customer_sk, c.c_first_name, c.c_last_name
HAVING 
    SUM(ws.ws_net_profit) > 0
ORDER BY 
    total_profit DESC
LIMIT 10;
