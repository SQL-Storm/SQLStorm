
WITH ranked_sales AS (
    SELECT 
        ws.web_site_sk,
        ws.ws_order_number,
        ws.ws_sales_price,
        ws.ws_quantity,
        ROW_NUMBER() OVER (PARTITION BY ws.web_site_sk ORDER BY ws.ws_ext_sales_price DESC) AS rn
    FROM 
        web_sales ws
    JOIN 
        web_site w ON ws.ws_web_site_sk = w.web_site_sk
    WHERE 
        w.web_country = 'USA'
        AND ws.ws_sold_date_sk BETWEEN 2458569 AND 2458700 
),
customer_returns AS (
    SELECT 
        sr_item_sk,
        SUM(sr_return_quantity) AS total_returns
    FROM 
        store_returns
    WHERE 
        sr_returned_date_sk BETWEEN 2458569 AND 2458700
    GROUP BY 
        sr_item_sk
),
sales_summary AS (
    SELECT 
        i.i_item_id,
        COALESCE(rs.total_sales, 0) AS total_sales,
        COALESCE(cr.total_returns, 0) AS total_returns,
        (COALESCE(rs.total_sales, 0) - COALESCE(cr.total_returns, 0)) AS net_sales
    FROM 
        item i
    LEFT JOIN (
        SELECT 
            ws_item_sk,
            SUM(ws_sales_price * ws_quantity) AS total_sales
        FROM 
            web_sales
        GROUP BY 
            ws_item_sk
    ) rs ON i.i_item_sk = rs.ws_item_sk
    LEFT JOIN customer_returns cr ON i.i_item_sk = cr.sr_item_sk
)
SELECT 
    s.i_item_id,
    s.total_sales,
    s.total_returns,
    s.net_sales,
    CASE 
        WHEN s.net_sales < 0 THEN 'Negative'
        WHEN s.net_sales = 0 THEN 'Zero'
        ELSE 'Positive'
    END AS sales_status
FROM 
    sales_summary s
JOIN 
    customer_demographics cd ON cd.cd_demo_sk = (
        SELECT 
            c.c_current_cdemo_sk 
        FROM 
            customer c 
        WHERE 
            c.c_customer_sk IN (
                SELECT DISTINCT 
                    ws_bill_customer_sk 
                FROM 
                    web_sales 
                WHERE 
                    ws_sold_date_sk BETWEEN 2458569 AND 2458700
            ) 
        FETCH FIRST 1 ROWS ONLY
    )
WHERE 
    s.net_sales > 1000
ORDER BY 
    s.net_sales DESC
FETCH FIRST 10 ROWS ONLY;
