
WITH CustomerData AS (
    SELECT 
        c.c_customer_sk,
        CONCAT(c.c_salutation, ' ', c.c_first_name, ' ', c.c_last_name) AS full_name,
        cd.c_demo_sk,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_education_status,
        ca.ca_city,
        ca.ca_state,
        ca.ca_country,
        COUNT(DISTINCT ws.ws_order_number) AS total_orders,
        SUM(ws.ws_ext_sales_price) AS total_spent,
        MIN(ws.ws_sold_date_sk) AS first_order_date,
        MAX(ws.ws_sold_date_sk) AS last_order_date
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    JOIN 
        customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
    LEFT JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY 
        c.c_customer_sk, 
        CONCAT(c.c_salutation, ' ', c.c_first_name, ' ', c.c_last_name), 
        cd.c_demo_sk, 
        cd.cd_gender, 
        cd.cd_marital_status, 
        cd.cd_education_status, 
        ca.ca_city, 
        ca.ca_state, 
        ca.ca_country
),
DateRange AS (
    SELECT 
        MIN(d_date) AS min_date,
        MAX(d_date) AS max_date
    FROM 
        date_dim
    WHERE 
        d_current_year = 'Y'
)
SELECT 
    cd.full_name,
    cd.cd_gender,
    cd.cd_marital_status,
    cd.cd_education_status,
    cd.ca_city,
    cd.ca_state,
    cd.ca_country,
    cd.total_orders,
    cd.total_spent,
    CURRENT_DATE - INTERVAL '1 YEAR' AS benchmark_date,
    CASE 
        WHEN cd.last_order_date < CURRENT_DATE - INTERVAL '1 YEAR' THEN 'Inactive'
        ELSE 'Active'
    END AS customer_status
FROM 
    CustomerData cd
JOIN 
    DateRange dr ON dr.min_date <= cd.first_order_date AND cd.last_order_date <= dr.max_date
WHERE 
    cd.total_spent > (SELECT AVG(total_spent) FROM CustomerData)
ORDER BY 
    cd.total_spent DESC;
