
WITH RankedSales AS (
    SELECT 
        ws.web_site_sk, 
        ws.ws_sales_price, 
        ROW_NUMBER() OVER (PARTITION BY ws.web_site_sk ORDER BY ws.ws_sales_price DESC) AS sales_rank
    FROM 
        web_sales ws
    WHERE 
        ws.ws_sales_price IS NOT NULL
),
TopWebsites AS (
    SELECT 
        r.web_site_sk, 
        SUM(r.ws_sales_price) AS total_sales
    FROM 
        RankedSales r 
    WHERE 
        r.sales_rank <= 5
    GROUP BY 
        r.web_site_sk
),
CustomerStats AS (
    SELECT 
        c.c_customer_id,
        cd.cd_gender,
        COALESCE(SUM(ws.ws_quantity), 0) AS total_purchases,
        AVG(CASE WHEN cd.cd_marital_status = 'M' THEN 1 ELSE 0 END) AS married_ratio
    FROM 
        customer c 
        LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
        LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY 
        c.c_customer_id, cd.cd_gender
),
OrderAnalytics AS (
    SELECT 
        cs.cs_item_sk,
        COUNT(DISTINCT cs.cs_order_number) AS total_orders,
        SUM(cs.cs_ext_sales_price) AS total_order_value,
        COUNT(DISTINCT cs.cs_bill_customer_sk) AS unique_customers
    FROM 
        catalog_sales cs
    WHERE 
        cs.cs_sales_price > (
            SELECT AVG(cs2.cs_sales_price) FROM catalog_sales cs2
        )
    GROUP BY 
        cs.cs_item_sk
)
SELECT 
    s.s_store_id,
    COALESCE(SUM(ss.ss_net_paid_inc_tax), 0) AS store_total_sales,
    COUNT(DISTINCT sr.sr_ticket_number) AS total_returns,
    SUM(CASE 
            WHEN sr.sr_return_amt > 100 THEN 1 
            ELSE 0 
        END) AS high_value_returns,
    MAX(ws.net_profit) AS max_profit,
    AVG(CASE 
            WHEN cd.cd_gender = 'F' THEN ws.ws_sales_price 
            ELSE NULL 
        END) AS avg_female_sales,
    STRING_AGG(DISTINCT CASE 
        WHEN cd.cd_marital_status IS NULL THEN 'Unknown' 
        ELSE cd.cd_marital_status 
    END, ', ') AS marital_status_summary
FROM 
    store s 
    LEFT JOIN store_sales ss ON s.s_store_sk = ss.ss_store_sk
    LEFT JOIN store_returns sr ON s.s_store_sk = sr.sr_store_sk
    LEFT JOIN CustomerStats cd ON ss.ss_customer_sk = cd.c_customer_id
    LEFT JOIN TopWebsites tw ON ss.ss_sold_date_sk = tw.web_site_sk
    LEFT JOIN OrderAnalytics oa ON ss.ss_item_sk = oa.cs_item_sk
WHERE 
    (s.s_city = 'New York' OR s.s_state = 'NY')
    AND (s.s_tax_percentage IS NULL OR s.s_tax_percentage < 10)
GROUP BY 
    s.s_store_id
HAVING 
    store_total_sales > (
        SELECT AVG(s_total) FROM (
            SELECT SUM(ss.ss_net_paid_inc_tax) AS s_total 
            FROM store_sales ss 
            GROUP BY ss.s_store_sk
        ) AS store_avg
    )
ORDER BY 
    store_total_sales DESC
FETCH FIRST 10 ROWS ONLY;
