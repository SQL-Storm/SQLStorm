
WITH CustomerSales AS (
    SELECT 
        c.c_customer_id,
        SUM(ws.ws_ext_sales_price) AS total_web_sales,
        SUM(cs.cs_ext_sales_price) AS total_catalog_sales,
        SUM(ss.ss_ext_sales_price) AS total_store_sales,
        COUNT(DISTINCT CASE WHEN ws.ws_order_number IS NOT NULL THEN ws.ws_order_number END) AS num_web_orders,
        COUNT(DISTINCT CASE WHEN cs.cs_order_number IS NOT NULL THEN cs.cs_order_number END) AS num_catalog_orders,
        COUNT(DISTINCT CASE WHEN ss.ss_ticket_number IS NOT NULL THEN ss.ss_ticket_number END) AS num_store_orders
    FROM customer c
    LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    LEFT JOIN catalog_sales cs ON c.c_customer_sk = cs.cs_bill_customer_sk
    LEFT JOIN store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    GROUP BY c.c_customer_id
),
CustomerDemographics AS (
    SELECT 
        cd.cd_demo_sk,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_purchase_estimate,
        cd.cd_credit_rating
    FROM customer_demographics cd
    WHERE cd.cd_purchase_estimate > 500
),
CustomerWithDetails AS (
    SELECT 
        cs.c_customer_id,
        cs.total_web_sales,
        cs.total_catalog_sales,
        cs.total_store_sales,
        cs.num_web_orders,
        cs.num_catalog_orders,
        cs.num_store_orders,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_credit_rating
    FROM CustomerSales cs
    INNER JOIN CustomerDemographics cd ON cs.c_customer_id = cd.cd_demo_sk  
)
SELECT 
    cwc.cd_gender,
    cwc.cd_marital_status,
    COUNT(DISTINCT cwc.c_customer_id) AS customer_count,
    AVG(cwc.total_web_sales) AS avg_web_sales,
    AVG(cwc.total_catalog_sales) AS avg_catalog_sales,
    AVG(cwc.total_store_sales) AS avg_store_sales
FROM CustomerWithDetails cwc
GROUP BY 
    cwc.cd_gender,
    cwc.cd_marital_status
HAVING 
    AVG(cwc.total_web_sales) > 1000 
    OR AVG(cwc.total_catalog_sales) > 1000 
    OR AVG(cwc.total_store_sales) > 1000
ORDER BY 
    customer_count DESC;
