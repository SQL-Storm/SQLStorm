WITH RankedReturns AS (
    SELECT
        sr_customer_sk,
        sr_item_sk,
        COUNT(*) AS ReturnCount,
        SUM(sr_return_amt) AS TotalReturnAmt,
        SUM(sr_return_tax) AS TotalReturnTax,
        SUM(sr_return_qty) AS TotalReturnQty,
        ROW_NUMBER() OVER (PARTITION BY sr_customer_sk ORDER BY SUM(sr_return_amt) DESC) AS rn
    FROM store_returns
    GROUP BY sr_customer_sk, sr_item_sk
),
CustomerDemographics AS (
    SELECT
        cd_demo_sk,
        cd_gender,
        cd_marital_status,
        cd_purchase_estimate
    FROM customer_demographics
    WHERE cd_purchase_estimate IS NOT NULL AND cd_purchase_estimate > 0
),
FilteredCustomers AS (
    SELECT
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_purchase_estimate,
        COALESCE(r.ReturnCount, 0) AS ReturnCount,
        COALESCE(r.TotalReturnAmt, 0) AS TotalReturnAmt
    FROM customer c
    LEFT JOIN CustomerDemographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN RankedReturns r ON c.c_customer_sk = r.sr_customer_sk
    WHERE (cd.cd_gender = 'F' OR cd.cd_marital_status = 'M')
      AND (r.ReturnCount IS NULL OR r.ReturnCount > 5)
),
HighReturnCustomers AS (
    SELECT
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        SUM(r.TotalReturnAmt) AS AggregateReturnAmt,
        COUNT(DISTINCT r.sr_item_sk) AS DistinctReturnedItems
    FROM FilteredCustomers c
    LEFT JOIN RankedReturns r ON c.c_customer_sk = r.sr_customer_sk
    GROUP BY c.c_customer_sk, c.c_first_name, c.c_last_name
    HAVING SUM(r.TotalReturnAmt) > 500
)
SELECT
    c.c_first_name || ' ' || c.c_last_name AS FullName,
    c.AggregateReturnAmt,
    c.DistinctReturnedItems,
    CASE 
        WHEN c.DistinctReturnedItems > 10 THEN 'Frequent Returner'
        ELSE 'Occasional Returner'
    END AS CustomerType,
    CASE 
        WHEN c.AggregateReturnAmt IS NULL THEN 'No Returns'
        ELSE 'Total Returns Above Threshold'
    END AS ReturnStatus,
    cast('2002-10-01' as date) - c.AggregateReturnAmt AS DummyDate
FROM HighReturnCustomers c
WHERE c.AggregateReturnAmt IS NOT NULL
ORDER BY c.AggregateReturnAmt DESC
LIMIT 100
OFFSET 0;