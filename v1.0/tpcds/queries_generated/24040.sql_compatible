
WITH RankedSales AS (
    SELECT 
        ws.web_site_sk,
        ws.ws_order_number,
        ws.ws_sales_price,
        ROW_NUMBER() OVER (PARTITION BY ws.web_site_sk ORDER BY ws.ws_sales_price DESC) AS SalesRank
    FROM 
        web_sales ws
    WHERE 
        ws.ws_sales_price IS NOT NULL
),
SalesSummary AS (
    SELECT 
        r.web_site_sk,
        SUM(r.ws_sales_price) AS TotalSales,
        COUNT(DISTINCT r.ws_order_number) AS UniqueOrderCount
    FROM 
        RankedSales r
    WHERE 
        r.SalesRank <= 5
    GROUP BY 
        r.web_site_sk
),
ReturnStatistics AS (
    SELECT 
        s.store_sk,
        COUNT(cr.cr_order_number) AS TotalReturns,
        SUM(cr.cr_return_amount) AS TotalReturnAmount
    FROM 
        catalog_returns cr
    LEFT JOIN 
        store s ON s.s_store_sk = cr.cr_call_center_sk
    GROUP BY 
        s.store_sk
),
CustomerActions AS (
    SELECT 
        c.c_customer_sk,
        COALESCE(SUM(sr.sr_return_quantity), 0) AS TotalStoreReturns,
        COALESCE(SUM(wr.wr_return_quantity), 0) AS TotalWebReturns
    FROM 
        customer c
    LEFT JOIN 
        store_returns sr ON c.c_customer_sk = sr.sr_customer_sk
    LEFT JOIN 
        web_returns wr ON c.c_customer_sk = wr.wr_returning_customer_sk
    GROUP BY 
        c.c_customer_sk
)
SELECT 
    ss.web_site_sk AS web_site_id,
    ss.TotalSales,
    ss.UniqueOrderCount,
    r.TotalReturns,
    r.TotalReturnAmount,
    ca.TotalStoreReturns,
    ca.TotalWebReturns
FROM 
    SalesSummary ss
JOIN 
    ReturnStatistics r ON r.store_sk = ss.web_site_sk 
LEFT JOIN 
    CustomerActions ca ON ca.c_customer_sk = r.store_sk
WHERE 
    (ss.TotalSales > 10000 OR r.TotalReturnAmount IS NULL)
    AND (ca.TotalStoreReturns + ca.TotalWebReturns) > 0
ORDER BY 
    ss.TotalSales DESC 
FETCH FIRST 10 ROWS ONLY;
