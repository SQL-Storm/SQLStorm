
WITH AddressDetails AS (
    SELECT ca_address_id, ca_city, ca_state, 
           CONCAT(ca_street_number, ' ', ca_street_name, ' ', ca_street_type) AS full_address,
           COALESCE(ca_zip, 'ZIP_NOT_PROVIDED') AS normalized_zip
    FROM customer_address
), CustomerStats AS (
    SELECT cd_gender, cd_marital_status, COUNT(c.c_customer_sk) AS customer_count,
           SUM(CASE WHEN c.c_birth_year IS NOT NULL THEN 1 ELSE 0 END) AS birth_year_known,
           AVG(COALESCE(cd_purchase_estimate, 0)) AS avg_purchase_estimate
    FROM customer c
    JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    GROUP BY cd_gender, cd_marital_status
), WarehouseInventory AS (
    SELECT inv.warehouse_sk, SUM(inv.inv_quantity_on_hand) AS total_quantity
    FROM inventory inv
    GROUP BY inv.warehouse_sk
), ReturnDetails AS (
    SELECT 
        sr.store_sk,
        sr_reason_sk,
        SUM(sr_return_quantity) AS total_returns,
        SUM(sr_return_amt) AS total_return_amount,
        SUM(sr_return_tax) AS total_return_tax
    FROM store_returns sr
    WHERE sr_return_quantity > 0
    GROUP BY sr.store_sk, sr_reason_sk
), DailySales AS (
    SELECT d.d_date, 
           COUNT(cs.cs_order_number) AS total_orders,
           SUM(cs.cs_net_paid) AS total_sales,
           SUM(cs.cs_net_profit) AS total_profit
    FROM date_dim d
    LEFT JOIN catalog_sales cs ON d.d_date_sk = cs.cs_sold_date_sk
    GROUP BY d.d_date
), DetailedReturns AS (
    SELECT r.r_reason_desc, rd.total_returns, rd.total_return_amount
    FROM ReturnDetails rd
    LEFT JOIN reason r ON r.r_reason_sk = rd.sr_reason_sk
)
SELECT 
    ad.ca_city,
    ad.normalized_zip,
    cs.cd_gender,
    cs.customer_count,
    cs.birth_year_known,
    cs.avg_purchase_estimate,
    wi.warehouse_sk,
    wi.total_quantity,
    ds.total_orders,
    ds.total_sales,
    ds.total_profit,
    dr.r_reason_desc,
    dr.total_returns,
    dr.total_return_amount
FROM AddressDetails ad
JOIN CustomerStats cs ON ad.ca_city = 'Los Angeles' AND ad.ca_state = 'CA'
JOIN WarehouseInventory wi ON wi.total_quantity > 1000
JOIN DailySales ds ON ds.total_sales > 5000
LEFT JOIN DetailedReturns dr ON dr.total_returns > 50
WHERE ad.full_address LIKE '%Main St%' 
  AND (ad.normalized_zip IS NOT NULL OR ad.normalized_zip = 'ZIP_NOT_PROVIDED')
ORDER BY ad.ca_city, cs.cd_gender DESC, ds.total_sales DESC;
