
WITH ranked_sales AS (
    SELECT 
        ws_bill_customer_sk,
        SUM(ws_net_paid) AS total_sales,
        COUNT(*) AS sales_count,
        RANK() OVER (PARTITION BY ws_bill_customer_sk ORDER BY SUM(ws_net_paid) DESC) AS sales_rank
    FROM 
        web_sales
    GROUP BY 
        ws_bill_customer_sk
),
top_customers AS (
    SELECT 
        c.c_customer_id,
        c.c_first_name,
        c.c_last_name,
        r.total_sales,
        r.sales_count
    FROM 
        customer c
    JOIN 
        ranked_sales r ON c.c_customer_sk = r.ws_bill_customer_sk
    WHERE 
        r.sales_rank = 1
),
store_info AS (
    SELECT 
        s.s_store_id,
        s.s_store_name,
        SUM(ss_net_paid) AS total_store_sales,
        COUNT(*) AS total_transactions
    FROM 
        store s
    LEFT JOIN 
        store_sales ss ON s.s_store_sk = ss.ss_store_sk
    GROUP BY 
        s.s_store_id, s.s_store_name
)
SELECT 
    CONCAT(c.c_first_name, ' ', c.c_last_name) AS customer_full_name,
    s.s_store_name,
    s.total_store_sales,
    s.total_transactions,
    CASE 
        WHEN s.total_store_sales IS NULL THEN 'No sales'
        WHEN s.total_store_sales > 10000 THEN 'Top Store'
        ELSE 'Average Store'
    END AS store_performance,
    COALESCE((SELECT 
                  COUNT(*)
              FROM 
                  store_returns sr
              WHERE 
                  sr.sr_customer_sk = c.c_customer_sk), 0) AS total_returns
FROM 
    top_customers c
JOIN 
    store_info s ON c.c_customer_id = SUBSTRING(s.s_store_id FROM 1 FOR 16)
WHERE 
    c.total_sales > 500
ORDER BY 
    c.total_sales DESC,
    s.total_store_sales DESC;
