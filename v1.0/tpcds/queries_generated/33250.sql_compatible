
WITH RECURSIVE sales_totals AS (
    SELECT 
        ss_store_sk, 
        SUM(ss_net_profit) AS total_profit,
        COUNT(DISTINCT ss_ticket_number) AS total_sales,
        ROW_NUMBER() OVER (PARTITION BY ss_store_sk ORDER BY SUM(ss_net_profit) DESC) AS rank
    FROM store_sales
    GROUP BY ss_store_sk
    HAVING SUM(ss_net_profit) > 0
), 
customer_info AS (
    SELECT 
        c.c_customer_sk, 
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        COALESCE(hd.hd_income_band_sk, 0) AS income_band,
        SUM(ws.ws_net_profit) AS total_web_sales
    FROM customer c
    LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN household_demographics hd ON c.c_current_hdemo_sk = hd.hd_demo_sk
    LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY c.c_customer_sk, c.c_first_name, c.c_last_name, cd.cd_gender, hd.hd_income_band_sk
), 
monthly_sales AS (
    SELECT 
        d.d_month_seq,
        COUNT(DISTINCT ws.ws_order_number) AS orders_count,
        SUM(ws.ws_net_profit) AS monthly_net_profit
    FROM web_sales ws
    JOIN date_dim d ON ws.ws_sold_date_sk = d.d_date_sk
    GROUP BY d.d_month_seq
)

SELECT 
    ci.c_first_name || ' ' || ci.c_last_name AS customer_name,
    ci.cd_gender AS gender,
    it.item_desc,
    COALESCE(st.total_profit, 0) AS total_store_profit,
    COALESCE(st.total_sales, 0) AS total_store_sales,
    ms.orders_count AS total_orders,
    ms.monthly_net_profit AS total_net_profit,
    CASE 
        WHEN ms.monthly_net_profit > 1000 THEN 'High Performer'
        WHEN ms.monthly_net_profit BETWEEN 500 AND 1000 THEN 'Moderate Performer'
        ELSE 'Low Performer'
    END AS performance_category
FROM customer_info ci
LEFT JOIN item it ON ci.income_band = it.i_item_sk
LEFT JOIN sales_totals st ON st.ss_store_sk = ci.c_customer_sk
LEFT JOIN monthly_sales ms ON ms.d_month_seq = EXTRACT(MONTH FROM DATE '2002-10-01')
WHERE ci.total_web_sales IS NOT NULL
ORDER BY ci.c_first_name, ci.c_last_name;
