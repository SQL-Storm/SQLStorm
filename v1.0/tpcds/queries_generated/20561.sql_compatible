
WITH ranked_sales AS (
    SELECT 
        ws.web_site_sk,
        ws.ws_order_number,
        SUM(ws.ws_sales_price) AS total_sales,
        ROW_NUMBER() OVER (PARTITION BY ws.web_site_sk ORDER BY SUM(ws.ws_sales_price) DESC) AS sales_rank
    FROM 
        web_sales ws
    JOIN 
        date_dim dd ON ws.ws_sold_date_sk = dd.d_date_sk
    WHERE 
        dd.d_year = 2022 AND 
        (dd.d_month_seq BETWEEN 1 AND 3 AND dd.d_week_seq IS NOT NULL)
    GROUP BY 
        ws.web_site_sk, ws.ws_order_number
), 
customer_summary AS (
    SELECT 
        c.c_customer_sk, 
        CASE 
            WHEN cd.cd_gender IS NULL THEN 'Unknown' 
            ELSE cd.cd_gender 
        END AS gender,
        COUNT(DISTINCT c.c_customer_id) AS customer_count,
        MAX(cd.cd_purchase_estimate) AS max_purchase_estimate
    FROM 
        customer c 
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    GROUP BY 
        c.c_customer_sk, cd.cd_gender
), 
item_summary AS (
    SELECT 
        i.i_item_sk,
        i.i_product_name,
        COUNT(DISTINCT ws.ws_order_number) AS order_count,
        SUM(ws.ws_quantity) AS total_qty,
        AVG(ws.ws_sales_price) AS avg_price
    FROM 
        item i
    JOIN 
        web_sales ws ON i.i_item_sk = ws.ws_item_sk
    WHERE 
        ws.ws_sold_date_sk IN (SELECT d_date_sk FROM date_dim WHERE d_year = 2022)
    GROUP BY 
        i.i_item_sk, i.i_product_name
)
SELECT 
    cs.gender,
    SUM(cs.customer_count) AS num_customers,
    SUM(is.order_count) AS total_orders,
    SUM(is.total_qty) AS total_quantity,
    AVG(is.avg_price) AS average_item_price,
    MAX(rs.total_sales) AS max_sales
FROM 
    customer_summary cs
LEFT JOIN 
    ranked_sales rs ON cs.c_customer_sk IS NOT NULL
LEFT JOIN 
    item_summary is ON is.order_count > 0
WHERE 
    cs.max_purchase_estimate IS NOT NULL AND 
    (cs.gender = 'M' OR cs.gender = 'F')
GROUP BY 
    cs.gender
HAVING 
    COUNT(cs.c_customer_sk) > 1
ORDER BY 
    num_customers DESC, total_orders DESC;
