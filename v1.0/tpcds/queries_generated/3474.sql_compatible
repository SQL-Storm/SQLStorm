
WITH SalesData AS (
    SELECT 
        cs.cs_item_sk,
        cs.cs_order_number,
        cs.cs_quantity,
        cs.cs_net_paid,
        cs.cs_ext_sales_price,
        cs.cs_ship_mode_sk,
        ROW_NUMBER() OVER (PARTITION BY cs.cs_item_sk ORDER BY cs.cs_sold_date_sk DESC) AS rn
    FROM catalog_sales cs
    WHERE cs.cs_sold_date_sk BETWEEN 20230101 AND 20231231
),
CustomerDetails AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_income_band_sk,
        SUM(COALESCE(ws.ws_net_profit, 0)) AS total_net_profit
    FROM customer c
    LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY c.c_customer_sk, c.c_first_name, c.c_last_name, cd.cd_gender, cd.cd_income_band_sk
),
TopItems AS (
    SELECT 
        sd.cs_item_sk,
        SUM(sd.cs_quantity) AS total_quantity,
        SUM(sd.cs_net_paid) AS total_revenue,
        MAX(sd.cs_ship_mode_sk) AS cs_ship_mode_sk
    FROM SalesData sd
    WHERE sd.rn = 1
    GROUP BY sd.cs_item_sk
    HAVING SUM(sd.cs_net_paid) > 1000
)
SELECT 
    ci.c_first_name,
    ci.c_last_name,
    ci.cd_gender,
    ci.cd_income_band_sk,
    ti.total_quantity,
    ti.total_revenue,
    CASE 
        WHEN ti.total_revenue > 5000 THEN 'High'
        WHEN ti.total_revenue BETWEEN 1000 AND 5000 THEN 'Medium'
        ELSE 'Low'
    END AS revenue_category
FROM CustomerDetails ci
JOIN TopItems ti ON ci.c_customer_sk = ti.cs_item_sk
LEFT JOIN ship_mode sm ON ti.cs_ship_mode_sk = sm.sm_ship_mode_sk
WHERE ci.total_net_profit IS NOT NULL
ORDER BY ci.c_last_name, ci.c_first_name;
