
WITH RECURSIVE customer_sales AS (
    SELECT 
        cs.bill_customer_sk,
        SUM(cs.quantity) AS total_quantity,
        SUM(cs.net_paid) AS total_net_paid,
        COUNT(DISTINCT cs.order_number) AS total_orders
    FROM 
        catalog_sales cs 
    WHERE 
        cs.sold_date_sk >= (SELECT MIN(d_date_sk) FROM date_dim WHERE d_year = 2023)
        AND cs.sold_date_sk <= (SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = 2023)
    GROUP BY 
        cs.bill_customer_sk 
    HAVING 
        SUM(cs.net_paid) > 500
),
customer_info AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_income_band_sk,
        hd.hd_buy_potential,
        ROW_NUMBER() OVER(PARTITION BY cd.cd_income_band_sk ORDER BY SUM(COALESCE(cs.total_net_paid, 0)) DESC) AS income_ranking
    FROM 
        customer c 
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk 
    LEFT JOIN 
        household_demographics hd ON cd.cd_demo_sk = hd.hd_demo_sk 
    LEFT JOIN 
        customer_sales cs ON c.c_customer_sk = cs.bill_customer_sk
    GROUP BY 
        c.c_customer_sk, c.c_first_name, c.c_last_name, cd.cd_gender, cd.cd_marital_status, cd.cd_income_band_sk, hd.hd_buy_potential
)
SELECT 
    ci.c_customer_sk,
    ci.c_first_name,
    ci.c_last_name,
    ci.cd_gender,
    ci.cd_marital_status,
    ib.ib_lower_bound,
    ib.ib_upper_bound,
    ci.hd_buy_potential,
    COALESCE(cs.total_quantity, 0) AS total_quantity,
    COALESCE(cs.total_net_paid, 0) AS total_net_paid,
    ci.income_ranking
FROM 
    customer_info ci 
LEFT JOIN 
    income_band ib ON ci.cd_income_band_sk = ib.ib_income_band_sk
LEFT JOIN 
    customer_sales cs ON ci.c_customer_sk = cs.bill_customer_sk 
WHERE 
    ci.income_ranking <= 10 
ORDER BY 
    ci.hd_buy_potential DESC, total_net_paid DESC
LIMIT 100;
