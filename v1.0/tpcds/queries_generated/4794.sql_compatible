
WITH CustomerSales AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        SUM(ws.ws_ext_sales_price) AS total_web_sales,
        COUNT(ws.ws_order_number) AS order_count,
        DENSE_RANK() OVER (PARTITION BY c.c_customer_sk ORDER BY SUM(ws.ws_ext_sales_price) DESC) AS sales_rank
    FROM 
        customer c
    LEFT JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_ship_customer_sk
    WHERE 
        ws.ws_sold_date_sk IN (SELECT d_date_sk FROM date_dim WHERE d_year = 2023)
    GROUP BY 
        c.c_customer_sk, c.c_first_name, c.c_last_name
),

HighValueCustomers AS (
    SELECT 
        c_customer_sk, 
        c_first_name,
        c_last_name 
    FROM 
        CustomerSales 
    WHERE 
        total_web_sales > (
            SELECT AVG(total_web_sales) FROM CustomerSales
        )
),

ReturnMetrics AS (
    SELECT 
        cr.returning_customer_sk,
        COUNT(cr.cr_order_number) AS total_returns,
        SUM(cr.cr_return_amount) AS total_return_amt
    FROM 
        catalog_returns cr
    WHERE 
        cr.returning_customer_sk IS NOT NULL
    GROUP BY 
        cr.returning_customer_sk
)

SELECT 
    hvc.c_customer_sk,
    hvc.c_first_name,
    hvc.c_last_name,
    COALESCE(rs.total_returns, 0) AS total_returns,
    COALESCE(rs.total_return_amt, 0) AS total_return_amt,
    cs.total_web_sales
FROM 
    HighValueCustomers hvc
LEFT JOIN 
    ReturnMetrics rs ON hvc.c_customer_sk = rs.returning_customer_sk
JOIN 
    CustomerSales cs ON hvc.c_customer_sk = cs.c_customer_sk
WHERE 
    cs.sales_rank <= 10
ORDER BY 
    cs.total_web_sales DESC;
