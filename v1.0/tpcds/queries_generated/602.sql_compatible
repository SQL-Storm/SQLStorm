
WITH SalesData AS (
    SELECT 
        ws.web_site_id,
        ws.web_name,
        SUM(ws.ws_sales_price * ws.ws_quantity) AS total_sales,
        COUNT(DISTINCT ws.ws_order_number) AS order_count,
        RANK() OVER (PARTITION BY ws.web_site_id ORDER BY SUM(ws.ws_sales_price * ws.ws_quantity) DESC) AS sales_rank
    FROM 
        web_sales ws
    JOIN 
        date_dim dd ON ws.ws_sold_date_sk = dd.d_date_sk
    WHERE 
        dd.d_year = 2023
    GROUP BY 
        ws.web_site_id, ws.web_name
),
CustomerReturns AS (
    SELECT 
        wr_returning_customer_sk,
        COUNT(wr_return_number) AS return_count,
        SUM(wr_return_amt_inc_tax) AS total_return_value
    FROM 
        web_returns
    GROUP BY 
        wr_returning_customer_sk
)
SELECT 
    cs.c_customer_id,
    cs.c_first_name,
    cs.c_last_name,
    COALESCE(SD.total_sales, 0) AS sales,
    COALESCE(CR.return_count, 0) AS return_count,
    COALESCE(CR.total_return_value, 0) AS total_return_value,
    CASE 
        WHEN COALESCE(SD.total_sales, 0) = 0 THEN NULL
        ELSE ROUND((COALESCE(CR.total_return_value, 0) / NULLIF(COALESCE(SD.total_sales, 0), 0)) * 100, 2)
    END AS return_percentage
FROM 
    customer cs
LEFT JOIN 
    SalesData SD ON cs.c_customer_sk = SD.web_site_id
LEFT JOIN 
    CustomerReturns CR ON cs.c_customer_sk = CR.wr_returning_customer_sk
WHERE 
    (COALESCE(CR.return_count, 0) > 0 OR COALESCE(SD.total_sales, 0) > 0)
    AND cs.c_current_cdemo_sk IS NOT NULL
ORDER BY 
    return_percentage DESC
LIMIT 20;
