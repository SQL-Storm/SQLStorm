
WITH RECURSIVE SalesCTE AS (
    SELECT 
        w.warehouse_id,
        SUM(ws.ws_ext_sales_price) AS total_sales,
        ROW_NUMBER() OVER (PARTITION BY w.warehouse_id ORDER BY SUM(ws.ws_ext_sales_price) DESC) AS sales_rank
    FROM 
        warehouse w
    JOIN 
        web_sales ws ON w.warehouse_sk = ws.ws_warehouse_sk
    GROUP BY 
        w.warehouse_id
), HighestSales AS (
    SELECT
        warehouse_id,
        total_sales
    FROM 
        SalesCTE
    WHERE 
        sales_rank = 1
), CustomerStates AS (
    SELECT 
        ca.ca_state,
        COUNT(DISTINCT c.c_customer_sk) AS customer_count
    FROM 
        customer_address ca
    JOIN 
        customer c ON ca.ca_address_sk = c.c_current_addr_sk
    GROUP BY 
        ca.ca_state
), TopStates AS (
    SELECT 
        ca_state,
        customer_count,
        ROW_NUMBER() OVER (ORDER BY customer_count DESC) AS state_rank
    FROM 
        CustomerStates
    WHERE 
        customer_count > 50
), CalendarSales AS (
    SELECT
        dd.d_day_name,
        SUM(ws.ws_ext_sales_price) AS daily_sales,
        COUNT(ws.ws_order_number) AS order_count
    FROM 
        date_dim dd
    LEFT JOIN 
        web_sales ws ON dd.d_date_sk = ws.ws_sold_date_sk
    GROUP BY 
        dd.d_day_name
)
SELECT 
    ts.ca_state,
    ts.customer_count AS top_customer_count,
    cs.daily_sales,
    COALESCE(cs.order_count, 0) AS total_orders,
    hs.total_sales AS warehouse_sales
FROM 
    TopStates ts 
LEFT JOIN 
    CalendarSales cs ON ts.state_rank = 1
CROSS JOIN 
    HighestSales hs
WHERE 
    ts.state_rank <= 5
ORDER BY 
    ts.customer_count DESC, hs.total_sales DESC;
