
WITH RECURSIVE sales_hierarchy AS (
    SELECT 
        s.s_store_sk,
        s.s_store_name,
        ss.s_ticket_number,
        ss.ss_sales_price,
        ss.ss_net_profit,
        1 AS level
    FROM 
        store_sales ss
    JOIN 
        store s ON ss.ss_store_sk = s.s_store_sk
    WHERE 
        ss.ss_sold_date_sk = (SELECT MAX(ss_sold_date_sk) FROM store_sales)
    
    UNION ALL
    
    SELECT 
        sh.s_store_sk,
        sh.s_store_name,
        ss.s_ticket_number,
        ss.ss_sales_price * 0.95 AS ss_sales_price,
        ss.ss_net_profit * 0.90 AS ss_net_profit,
        sh.level + 1
    FROM 
        sales_hierarchy sh
    JOIN 
        store_sales ss ON sh.s_store_sk = ss.ss_store_sk
    WHERE 
        sh.s_ticket_number = ss.ss_ticket_number AND 
        sh.level < 3
),
total_sales AS (
    SELECT 
        s_store_name,
        SUM(ss_sales_price) AS total_sales_price,
        SUM(ss_net_profit) AS total_net_profit
    FROM 
        sales_hierarchy
    GROUP BY 
        s_store_name
),
customer_info AS (
    SELECT 
        c.c_customer_sk,
        CONCAT(c.c_first_name, ' ', c.c_last_name) AS full_name,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_credit_rating,
        COALESCE(hd.hd_income_band_sk, 0) AS income_band
    FROM 
        customer c
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN 
        household_demographics hd ON c.c_customer_sk = hd.hd_demo_sk
),
final_report AS (
    SELECT 
        ci.full_name,
        ci.cd_gender,
        ts.total_sales_price,
        ts.total_net_profit,
        CASE 
            WHEN ts.total_net_profit IS NULL THEN 'No Profit'
            WHEN ts.total_net_profit < 0 THEN 'Loss'
            ELSE 'Profit'
        END AS profit_status
    FROM 
        total_sales ts
    JOIN 
        customer_info ci ON ts.total_sales_price > 1000
)
SELECT 
    full_name,
    cd_gender,
    total_sales_price,
    total_net_profit,
    profit_status
FROM 
    final_report
WHERE 
    profit_status <> 'No Profit'
ORDER BY 
    total_net_profit DESC
FETCH FIRST 10 ROWS ONLY;
