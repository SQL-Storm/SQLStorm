
WITH RECURSIVE address_paths AS (
    SELECT ca_address_sk, ca_city, ca_state, 
           ca_country, ca_street_name, ca_street_number,
           ROW_NUMBER() OVER (PARTITION BY ca_city ORDER BY ca_address_sk) AS rn,
           1 AS level
    FROM customer_address
    WHERE ca_country IS NOT NULL
    UNION ALL
    SELECT ap.ca_address_sk, ca.ca_city, ca.ca_state, 
           ca.ca_country, ca.ca_street_name, ca.ca_street_number,
           ROW_NUMBER() OVER (PARTITION BY ca.ca_city ORDER BY ca.ca_address_sk) AS rn,
           level + 1
    FROM address_paths ap
    JOIN customer_address ca ON ap.ca_city = ca.ca_city AND ap.level < 3
)

SELECT 
    c.c_customer_id,
    SUM(ws.ws_sales_price) AS total_sales,
    MIN(cc.cc_name) AS first_call_center,
    MAX(ib.ib_upper_bound) AS max_income_bound,
    COUNT(DISTINCT ca.ca_address_id) AS unique_addresses,
    STRING_AGG(DISTINCT CONCAT(ca.ca_street_name, ' ', ca.ca_street_number), '; ') AS address_list
FROM customer c
LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
LEFT JOIN call_center cc ON c.c_customer_id = cc.cc_call_center_id
LEFT JOIN income_band ib ON cd.cd_purchase_estimate BETWEEN ib.ib_lower_bound AND ib.ib_upper_bound
LEFT JOIN address_paths ap ON c.c_current_addr_sk = ap.ca_address_sk
LEFT JOIN customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
WHERE 
    c.c_birth_year BETWEEN 1970 AND 1990
    AND (cd.cd_marital_status = 'M' OR cd.cd_marital_status IS NULL)
    AND (ws.ws_sales_price IS NOT NULL OR ws.ws_sales_price > 0)
    AND (ca.ca_city LIKE '%town%' OR ca.ca_state = 'CA')
GROUP BY c.c_customer_id
HAVING COUNT(CASE WHEN ws.ws_sales_price IS NULL THEN 1 END) < 2
ORDER BY total_sales DESC
LIMIT 10;
