
WITH RankedSales AS (
    SELECT 
        ws.ws_order_number,
        ws.ws_item_sk,
        ws.ws_quantity,
        ws.ws_net_paid,
        RANK() OVER (PARTITION BY ws.ws_order_number ORDER BY ws.ws_net_paid DESC) AS SalesRank
    FROM 
        web_sales ws
),
TotalSales AS (
    SELECT 
        ws_bill_customer_sk,
        SUM(ws_net_paid) AS TotalNetPaid,
        COUNT(DISTINCT ws_order_number) AS NumOrders
    FROM 
        web_sales
    WHERE 
        ws_sold_date_sk BETWEEN 2457527 AND 2457529 
    GROUP BY 
        ws_bill_customer_sk
),
ItemsWithReturns AS (
    SELECT 
        wr.refunded_customer_sk,
        SUM(wr.return_amt) AS TotalReturnAmount,
        COUNT(wr.return_order_number) AS TotalReturns
    FROM 
        web_returns wr
    GROUP BY 
        wr.refunded_customer_sk
),
CustomerDemographics AS (
    SELECT 
        c.c_customer_sk,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_purchase_estimate,
        cd.cd_credit_rating
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
)
SELECT 
    cd.c_customer_sk,
    cd.cd_gender,
    cd.cd_marital_status,
    COALESCE(ts.TotalNetPaid, 0) AS TotalNetPaid,
    COALESCE(iwr.TotalReturnAmount, 0) AS TotalReturnAmount,
    COALESCE(iwr.TotalReturns, 0) AS TotalReturns,
    (CASE 
        WHEN ts.NumOrders IS NULL THEN 'No Orders'
        WHEN ts.NumOrders > 10 THEN 'Frequent Buyer'
        ELSE 'Occasional Buyer'
    END) AS BuyerType
FROM 
    CustomerDemographics cd
LEFT JOIN 
    TotalSales ts ON cd.c_customer_sk = ts.ws_bill_customer_sk
LEFT JOIN 
    ItemsWithReturns iwr ON cd.c_customer_sk = iwr.refunded_customer_sk
WHERE 
    (cd.cd_gender = 'F' OR cd.cd_marital_status = 'S')
    AND (COALESCE(ts.TotalNetPaid, 0) > 1000 OR COALESCE(iwr.TotalReturnAmount, 0) > 100)
ORDER BY 
    cd.c_customer_sk
OFFSET 10 ROWS FETCH NEXT 10 ROWS ONLY;
