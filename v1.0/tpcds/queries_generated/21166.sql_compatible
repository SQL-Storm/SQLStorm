
WITH RankedSales AS (
    SELECT 
        ws.web_site_sk,
        ws_item_sk,
        ws_sales_price,
        ws_net_profit,
        ROW_NUMBER() OVER (PARTITION BY ws.web_site_sk ORDER BY ws_net_profit DESC) AS sales_rank,
        CASE 
            WHEN ws_net_profit IS NULL THEN 'No Profit'
            WHEN ws_net_profit < 0 THEN 'Loss'
            ELSE 'Profit'
        END AS profit_status 
    FROM 
        web_sales ws
    WHERE 
        ws_sold_date_sk = (SELECT MAX(ws_inner.ws_sold_date_sk) FROM web_sales ws_inner)
),
ProfitMetrics AS (
    SELECT 
        web_site_sk,
        COUNT(*) AS total_sales,
        SUM(CASE WHEN profit_status = 'Profit' THEN 1 ELSE 0 END) AS profitable_sales,
        SUM(ws_net_profit) AS total_net_profit
    FROM 
        RankedSales
    GROUP BY 
        web_site_sk
),
StoresWithProfit AS (
    SELECT 
        s_store.sk,
        s_store_id,
        COALESCE(pm.total_net_profit, 0) AS store_profit
    FROM 
        store s
    LEFT JOIN 
        ProfitMetrics pm ON pm.web_site_sk = s.s_company_id
)
SELECT 
    a.ca_city,
    a.ca_state,
    COUNT(DISTINCT c.c_customer_sk) AS unique_customers,
    SUM(COALESCE(sp.store_profit, 0) - (c.c_birth_month - 1)) AS adjusted_profit 
FROM 
    customer_address a
JOIN 
    customer c ON a.ca_address_sk = c.c_current_addr_sk
LEFT JOIN 
    StoresWithProfit sp ON sp.s_store_id = c.c_login
WHERE 
    a.ca_state IN ('NY', 'CA') AND 
    (c.c_birth_year % 2 = 0 OR c.c_birth_day IS NULL) 
GROUP BY 
    a.ca_city, a.ca_state
HAVING 
    COUNT(DISTINCT c.c_customer_sk) > 10 
ORDER BY 
    unique_customers DESC, adjusted_profit 
LIMIT 20;
