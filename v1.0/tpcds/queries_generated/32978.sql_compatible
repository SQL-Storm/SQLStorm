
WITH RECURSIVE adjusted_dates AS (
    SELECT d_date_sk, d_date, d_year, d_month_seq
    FROM date_dim
    WHERE d_date >= '2023-01-01'
    UNION ALL
    SELECT d.d_date_sk, d.d_date, d.d_year, d.d_month_seq
    FROM date_dim d
    JOIN adjusted_dates ad ON d.d_date_sk = ad.d_date_sk + 1
),
customer_stats AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        COUNT(s.ss_ticket_number) AS total_sales,
        SUM(ss.ss_sales_price) AS total_revenue,
        AVG(ss.ss_sales_price) AS avg_sales_price
    FROM customer c
    LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    GROUP BY c.c_customer_sk, c.c_first_name, c.c_last_name, cd.cd_gender, cd.cd_marital_status
),
average_revenue AS (
    SELECT 
        AVG(total_revenue) AS avg_revenue,
        cd_gender,
        cd_marital_status
    FROM customer_stats
    GROUP BY cd_gender, cd_marital_status
),
hyper_sales AS (
    SELECT customer_sk, total_revenue
    FROM customer_stats stats
    WHERE total_revenue > (SELECT AVG(total_revenue) FROM customer_stats)
),
total_links AS (
    SELECT
        w.w_warehouse_id,
        SUM(ws.ws_net_profit) AS total_profit
    FROM warehouse w
    JOIN web_sales ws ON w.w_warehouse_sk = ws.ws_warehouse_sk
    GROUP BY w.w_warehouse_id
)
SELECT 
    cs.c_first_name,
    cs.c_last_name,
    cs.total_sales,
    cs.total_revenue,
    av.avg_revenue,
    hl.w_warehouse_id,
    hl.total_profit
FROM customer_stats cs
JOIN average_revenue av ON cs.cd_gender = av.cd_gender AND cs.cd_marital_status = av.cd_marital_status
LEFT JOIN total_links hl ON hl.w_warehouse_id IN (
    SELECT w.w_warehouse_id
    FROM warehouse w
    JOIN store s ON w.w_warehouse_sk = s.s_store_sk
    WHERE s.s_state = 'CA'
)
WHERE cs.total_sales > (
    SELECT AVG(total_sales)
    FROM customer_stats
)
ORDER BY cs.total_revenue DESC
FETCH FIRST 50 ROWS ONLY;
