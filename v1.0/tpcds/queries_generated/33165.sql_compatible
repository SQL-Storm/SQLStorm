
WITH RECURSIVE sales_data AS (
    SELECT 
        ws.ws_order_number,
        ws.ws_item_sk,
        ws.ws_sales_price,
        ws.ws_quantity,
        ws.ws_ext_sales_price,
        ws.ws_ext_discount_amt,
        ROW_NUMBER() OVER (PARTITION BY ws.ws_order_number ORDER BY ws.ws_sales_price DESC) AS rn
    FROM 
        web_sales ws
    WHERE 
        ws.ws_sales_price > 0
),
top_sales AS (
    SELECT 
        sales.ws_order_number,
        SUM(sales.ws_ext_sales_price) AS total_sales,
        SUM(sales.ws_ext_discount_amt) AS total_discount
    FROM 
        sales_data sales
    WHERE 
        sales.rn <= 5
    GROUP BY 
        sales.ws_order_number
),
customer_info AS (
    SELECT 
        c.c_customer_id,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_purchase_estimate,
        cd.cd_credit_rating,
        ACOS(SIN(RADIANS(45)) * SIN(RADIANS(67)) + COS(RADIANS(45)) * COS(RADIANS(67)) * COS(RADIANS(30) - RADIANS(30))) * 6371 AS distance 
    FROM 
        customer c
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    WHERE 
        cd.cd_gender = 'F'
),
final_report AS (
    SELECT 
        ci.c_customer_id,
        COALESCE(ts.total_sales, 0) AS total_sales,
        COALESCE(ts.total_discount, 0) AS total_discount,
        ci.cd_gender,
        ci.cd_marital_status,
        ci.cd_purchase_estimate
    FROM 
        customer_info ci
    LEFT JOIN 
        top_sales ts ON ci.c_customer_id = ts.ws_order_number
)
SELECT 
    fr.c_customer_id,
    fr.total_sales,
    fr.total_discount,
    fr.cd_gender,
    fr.cd_marital_status,
    fr.cd_purchase_estimate
FROM 
    final_report fr
WHERE 
    fr.total_sales > 1000
ORDER BY 
    fr.total_sales DESC
FETCH FIRST 10 ROWS ONLY;
