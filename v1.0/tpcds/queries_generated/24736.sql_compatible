
WITH RECURSIVE address_info AS (
    SELECT ca_address_id, ca_city, ca_state, ca_zip, 
           ROW_NUMBER() OVER (PARTITION BY ca_city ORDER BY ca_zip) AS rn
    FROM customer_address
    WHERE ca_country = 'USA'
),
demographics AS (
    SELECT cd_demo_sk, cd_gender, cd_marital_status, 
           cd_purchase_estimate, cd_credit_rating
    FROM customer_demographics
    WHERE cd_purchase_estimate > (SELECT AVG(cd_purchase_estimate) FROM customer_demographics)
),
customer_data AS (
    SELECT c.c_customer_sk, c.c_first_name, c.c_last_name, 
           ci.ca_address_id, ci.ca_city, ci.ca_state, 
           ci.ca_zip, 
           d.cd_gender, d.cd_marital_status
    FROM customer c
    JOIN address_info ci ON c.c_current_addr_sk = ci.ca_address_id
    JOIN demographics d ON c.c_current_cdemo_sk = d.cd_demo_sk
),
sales_data AS (
    SELECT ws.ws_bill_customer_sk, 
           SUM(ws.ws_sales_price) AS total_sales,
           COUNT(*) AS total_orders,
           AVG(ws.ws_net_profit) AS avg_net_profit
    FROM web_sales ws
    GROUP BY ws.ws_bill_customer_sk
)
SELECT cd.c_customer_sk, cd.c_first_name, cd.c_last_name, 
       ci.ca_city, ci.ca_state, ci.ca_zip, 
       sd.total_sales, sd.total_orders, sd.avg_net_profit
FROM customer_data cd
LEFT JOIN sales_data sd ON cd.c_customer_sk = sd.ws_bill_customer_sk
WHERE (sd.total_sales IS NULL OR sd.total_sales > 1000) 
  AND (cd.cd_marital_status = 'M' OR cd.cd_gender = 'F') 
  AND COALESCE(sd.avg_net_profit, 0) > (SELECT AVG(ws_net_profit) FROM web_sales)
  AND EXISTS (SELECT 1 FROM store s WHERE s.s_store_sk = cd.c_customer_sk) 
ORDER BY ci.ca_city, sd.total_sales DESC
OFFSET 20 ROWS FETCH NEXT 100 ROWS ONLY;
