WITH ranked_sales AS (
    SELECT 
        ws.ws_item_sk,
        ws.ws_order_number,
        ws.ws_net_paid,
        ROW_NUMBER() OVER (PARTITION BY ws.ws_item_sk ORDER BY ws.ws_net_paid DESC) AS rn
    FROM web_sales ws
    WHERE ws.ws_net_paid IS NOT NULL AND ws.ws_net_paid > 0
),
item_info AS (
    SELECT 
        i.i_item_sk,
        i.i_item_desc,
        i.i_current_price,
        COALESCE(NULLIF(i.i_color, ''), 'Unknown') AS item_color
    FROM item i
),
avg_store_sales AS (
    SELECT 
        ss.ss_store_sk,
        AVG(ss.ss_net_paid) AS avg_net_paid
    FROM store_sales ss
    GROUP BY ss.ss_store_sk
),
customer_address_info AS (
    SELECT 
        ca.ca_address_sk,
        ca.ca_city,
        ca.ca_state,
        COUNT(DISTINCT c.c_customer_sk) AS customer_count
    FROM customer_address ca
    JOIN customer c ON ca.ca_address_sk = c.c_current_addr_sk
    GROUP BY ca.ca_address_sk, ca.ca_city, ca.ca_state
)
SELECT 
    isi.i_item_desc,
    isi.item_color,
    css.ss_store_sk,
    css.avg_net_paid,
    cii.customer_count,
    MAX(casemore.ws_net_paid) AS max_web_sales
FROM item_info isi
LEFT JOIN ranked_sales rs ON isi.i_item_sk = rs.ws_item_sk AND rs.rn = 1
JOIN avg_store_sales css ON css.ss_store_sk = rs.ws_order_number % 100  
JOIN customer_address_info cii ON cii.ca_city = isi.i_item_desc  
LEFT JOIN web_sales casemore ON casemore.ws_item_sk = isi.i_item_sk 
    AND casemore.ws_net_paid IS NOT NULL
WHERE 
    CSS.avg_net_paid > 100 AND
    (cii.customer_count BETWEEN 5 AND 15 OR isi.i_current_price > 50)
    OR EXISTS (
        SELECT 1 
        FROM cartesian s
        WHERE s.item_id = isi.i_item_sk
    )
GROUP BY 
    isi.i_item_desc, isi.item_color, css.ss_store_sk, css.avg_net_paid, cii.customer_count
HAVING 
    COUNT(casemore.ws_order_number) > 0 OR COUNT(DISTINCT rs.ws_item_sk) IS NULL
ORDER BY 
    isi.i_item_desc, css.avg_net_paid DESC, cii.customer_count DESC;