
WITH RECURSIVE sales_hierarchy AS (
    SELECT
        s_store_sk,
        s_store_name,
        s_number_employees,
        s_floor_space,
        s_market_id,
        s_division_name,
        1 AS lvl
    FROM store
    WHERE s_closed_date_sk IS NULL

    UNION ALL

    SELECT
        sh.s_store_sk,
        sh.s_store_name,
        sh.s_number_employees,
        sh.s_floor_space,
        sh.s_market_id,
        sh.s_division_name,
        shier.lvl + 1
    FROM store AS sh
    JOIN sales_hierarchy AS shier ON sh.s_store_sk = shier.s_store_sk
)

SELECT 
    c.c_customer_id,
    c.c_first_name,
    c.c_last_name,
    COALESCE(d.d_year, 0) AS purchase_year,
    SUM(ws.ws_net_paid) AS total_spent,
    COUNT(DISTINCT ws.ws_order_number) AS total_orders,
    AVG(ws.ws_quantity) OVER (PARTITION BY c.c_customer_sk) AS avg_order_quantity,
    ROW_NUMBER() OVER (PARTITION BY COALESCE(d.d_year, 0) ORDER BY SUM(ws.ws_net_paid) DESC) AS spend_rank,
    CONCAT_WS(', ', ca.ca_street_number, ca.ca_street_name, ca.ca_city) AS full_address,
    CASE 
        WHEN cd.cd_gender = 'M' THEN 'Male'
        WHEN cd.cd_gender = 'F' THEN 'Female'
        ELSE 'Unknown'
    END AS gender_desc
FROM 
    customer AS c
LEFT JOIN 
    customer_demographics AS cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
LEFT JOIN 
    customer_address AS ca ON c.c_current_addr_sk = ca.ca_address_sk
LEFT JOIN 
    web_sales AS ws ON c.c_customer_sk = ws.ws_bill_customer_sk
LEFT JOIN 
    date_dim AS d ON ws.ws_sold_date_sk = d.d_date_sk
WHERE 
    d.d_year IS NOT NULL AND
    ws.ws_net_paid > 0
GROUP BY 
    c.c_customer_id, c.c_first_name, c.c_last_name, COALESCE(d.d_year, 0), ca.ca_street_number, 
    ca.ca_street_name, ca.ca_city, cd.cd_gender
ORDER BY 
    purchase_year DESC, total_spent DESC
LIMIT 1000;
