
WITH RECURSIVE sales_cte AS (
    SELECT ss_store_sk, 
           SUM(ss_net_paid) AS total_sales, 
           COUNT(DISTINCT ss_customer_sk) AS unique_customers
    FROM store_sales
    WHERE ss_sold_date_sk BETWEEN 2452030 AND 2452130 
    GROUP BY ss_store_sk

    UNION ALL

    SELECT s.ss_store_sk, 
           SUM(s.ss_net_paid) + c.total_sales, 
           COUNT(DISTINCT s.ss_customer_sk) + c.unique_customers 
    FROM store_sales s
    JOIN sales_cte c ON s.ss_store_sk = c.ss_store_sk
    WHERE s.ss_sold_date_sk BETWEEN 2452030 AND 2452130
    AND s.ss_ticket_number > 0
),
customer_returns AS (
    SELECT sr_store_sk, 
           SUM(sr_return_amt) AS total_returns,
           COUNT(sr_ticket_number) AS return_count
    FROM store_returns
    WHERE sr_returned_date_sk BETWEEN 2452030 AND 2452130
    GROUP BY sr_store_sk
),
active_customers AS (
    SELECT c.c_customer_sk,
           c.c_first_name,
           c.c_last_name,
           cd.cd_gender,
           cd.cd_marital_status,
           cd.cd_purchase_estimate
    FROM customer c
    JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    WHERE cd.cd_purchase_estimate > 1000
),
item_promo AS (
    SELECT p.p_promo_name,
           SUM(ws.ws_ext_sales_price) AS promo_sales
    FROM web_sales ws
    JOIN promotion p ON ws.ws_promo_sk = p.p_promo_sk
    WHERE ws.ws_sold_date_sk BETWEEN 2452030 AND 2452130
    GROUP BY p.p_promo_name
)
SELECT 
    s.ss_store_sk AS store_sk,
    COALESCE(s.total_sales, 0) AS total_sales,
    COALESCE(r.total_returns, 0) AS total_returns,
    a.c_first_name,
    a.c_last_name,
    a.cd_gender,
    a.cd_marital_status,
    COALESCE(i.promo_sales, 0) AS total_promo_sales,
    CASE 
        WHEN s.total_sales - COALESCE(r.total_returns, 0) < 0 THEN 'Negative Profit'
        ELSE 'Positive Profit'
    END AS profit_status
FROM sales_cte s
LEFT JOIN customer_returns r ON s.ss_store_sk = r.sr_store_sk
LEFT JOIN active_customers a ON a.c_customer_sk = r.return_count
LEFT JOIN item_promo i ON i.promo_sales > 0
ORDER BY total_sales DESC
LIMIT 100;
