WITH RECURSIVE sales_hierarchy AS (
    SELECT c.c_customer_sk, c.c_customer_id, 
           COALESCE(SUM(ws.ws_ext_sales_price), 0) AS total_sales
    FROM customer c
    LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY c.c_customer_sk, c.c_customer_id
    
    UNION ALL
    
    SELECT c.c_customer_sk, c.c_customer_id, 
           COALESCE(SUM(ws.ws_ext_sales_price), 0) + sh.total_sales AS total_sales
    FROM customer c
    JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    JOIN sales_hierarchy sh ON c.c_customer_sk = sh.c_customer_sk
    WHERE ws.ws_sold_date_sk > (
        SELECT MAX(d.d_date_sk)
        FROM date_dim d
        WHERE d.d_year = EXTRACT(YEAR FROM cast('2002-10-01' as date)) - 1
          AND d.d_month_seq = EXTRACT(MONTH FROM cast('2002-10-01' as date))
    )
    GROUP BY c.c_customer_sk, c.c_customer_id
),
customer_income AS (
    SELECT cd.cd_demo_sk, ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound
    FROM customer_demographics cd
    JOIN household_demographics hd ON cd.cd_demo_sk = hd.hd_demo_sk
    JOIN income_band ib ON hd.hd_income_band_sk = ib.ib_income_band_sk
),
sales_summary AS (
    SELECT sh.c_customer_id, 
           sh.total_sales, 
           ci.ib_lower_bound, 
           ci.ib_upper_bound,
           RANK() OVER (PARTITION BY ci.ib_income_band_sk ORDER BY sh.total_sales DESC) AS sales_rank
    FROM sales_hierarchy sh
    JOIN customer_income ci ON sh.c_customer_sk = ci.cd_demo_sk
)
SELECT s.c_customer_id, 
       s.total_sales,
       CASE WHEN s.total_sales IS NULL THEN 'No Sales' ELSE 'Sales Recorded' END AS sales_status,
       ci.ib_lower_bound || ' - ' || ci.ib_upper_bound AS income_band
FROM sales_summary s
JOIN customer_income ci ON s.c_customer_id = ci.cd_demo_sk
WHERE s.sales_rank <= 10
ORDER BY ci.ib_income_band_sk, s.total_sales DESC;