
WITH RankedSales AS (
    SELECT 
        ws.ws_item_sk,
        ws.ws_sales_price,
        ws.ws_quantity,
        RANK() OVER (PARTITION BY ws.ws_item_sk ORDER BY ws.ws_sales_price DESC) AS sales_rank
    FROM 
        web_sales ws 
    WHERE 
        ws.ws_sold_date_sk >= (SELECT MAX(d.d_date_sk) FROM date_dim d WHERE d.d_year = (SELECT MAX(d_year) FROM date_dim))
),
CustomerReturns AS (
    SELECT 
        cr.cr_item_sk,
        SUM(cr.cr_return_quantity) AS total_returns,
        COUNT(DISTINCT cr.cr_returning_customer_sk) AS unique_returning_customers
    FROM 
        catalog_returns cr
    GROUP BY 
        cr.cr_item_sk
),
StoreSalesSummary AS (
    SELECT 
        ss.ss_item_sk,
        SUM(ss.ss_quantity) AS total_sold,
        AVG(ss.ss_sales_price) AS avg_price,
        SUM(ss.ss_net_profit) AS total_profit
    FROM 
        store_sales ss
    WHERE 
        ss.ss_sold_date_sk IN (SELECT d.d_date_sk FROM date_dim d WHERE d.d_year = (SELECT MAX(d_year) FROM date_dim))
    GROUP BY 
        ss.ss_item_sk
)

SELECT 
    i.i_item_id,
    i.i_item_desc,
    COALESCE(rs.sales_rank, 0) AS sales_rank,
    COALESCE(sr.total_sold, 0) AS total_sold,
    COALESCE(cr.total_returns, 0) AS total_returns,
    COALESCE(cr.unique_returning_customers, 0) AS unique_customers,
    COALESCE(ss.avg_price, 0) AS avg_price,
    COALESCE(ss.total_profit, 0) AS total_profit
FROM 
    item i
LEFT JOIN 
    RankedSales rs ON i.i_item_sk = rs.ws_item_sk
LEFT JOIN 
    StoreSalesSummary ss ON i.i_item_sk = ss.ss_item_sk
LEFT JOIN 
    CustomerReturns cr ON i.i_item_sk = cr.cr_item_sk
WHERE 
    i.i_current_price > (
        SELECT AVG(i_current_price)
        FROM item
        WHERE i_current_price IS NOT NULL
        AND i_rec_start_date <= DATE '2002-10-01'
        AND (i_rec_end_date IS NULL OR i_rec_end_date >= DATE '2002-10-01')
    )
ORDER BY 
    total_profit DESC, sales_rank ASC;
