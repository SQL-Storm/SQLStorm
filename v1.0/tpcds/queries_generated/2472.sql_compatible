
WITH SalesSummaries AS (
    SELECT 
        ws.web_site_id,
        SUM(ws.ws_quantity) AS total_quantity_sold,
        SUM(ws.ws_net_paid_inc_tax) AS total_sales,
        COUNT(DISTINCT ws.ws_order_number) AS total_orders,
        ROW_NUMBER() OVER (PARTITION BY ws.web_site_id ORDER BY SUM(ws.ws_net_paid_inc_tax) DESC) AS sales_rank
    FROM web_sales ws
    JOIN customer c ON ws.ws_bill_customer_sk = c.c_customer_sk
    WHERE c.c_birth_year BETWEEN 1960 AND 1980
    GROUP BY ws.web_site_id
),
SalesReturns AS (
    SELECT 
        wr.wr_web_page_sk,
        SUM(wr.wr_return_quantity) AS total_returned,
        SUM(wr.wr_return_amt) AS total_returned_amount
    FROM web_returns wr
    JOIN web_page wp ON wr.wr_web_page_sk = wp.wp_web_page_sk
    WHERE wp.wp_creation_date_sk IN (
        SELECT DISTINCT d.d_date_sk
        FROM date_dim d
        WHERE d.d_year = (SELECT MAX(d.d_year) FROM date_dim)
    )
    GROUP BY wr.wr_web_page_sk
)
SELECT 
    ss.web_site_id,
    ss.total_quantity_sold,
    ss.total_sales,
    ss.total_orders,
    COALESCE(sr.total_returned, 0) AS total_returned_products,
    COALESCE(sr.total_returned_amount, 0) AS total_returned_amount,
    CASE WHEN ss.total_sales > 5000 THEN 'High Revenue' ELSE 'Low Revenue' END AS revenue_category
FROM SalesSummaries ss
LEFT JOIN SalesReturns sr ON ss.web_site_id = sr.wr_web_page_sk
WHERE ss.sales_rank <= 5
ORDER BY ss.total_sales DESC
