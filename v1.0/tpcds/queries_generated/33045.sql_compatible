
WITH RECURSIVE RankedSales AS (
    SELECT 
        ws_item_sk, 
        ws_order_number, 
        ws_quantity, 
        ws_sales_price, 
        ROW_NUMBER() OVER (PARTITION BY ws_item_sk ORDER BY ws_sales_price DESC) AS rn
    FROM 
        web_sales
    WHERE 
        ws_sold_date_sk >= (SELECT MIN(d_date_sk) FROM date_dim WHERE d_year = 2023)
),
AggregateSales AS (
    SELECT 
        i_item_id, 
        SUM(ws_quantity) AS total_quantity, 
        SUM(ws_sales_price) AS total_revenue,
        COUNT(DISTINCT ws_order_number) AS order_count,
        ws_bill_customer_sk
    FROM 
        RankedSales
    JOIN 
        item ON RankedSales.ws_item_sk = item.i_item_sk
    GROUP BY 
        i_item_id, ws_bill_customer_sk
),
CustomerInfo AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        hd.hd_income_band_sk,
        hd.hd_buy_potential,
        RANK() OVER (PARTITION BY hd.hd_income_band_sk ORDER BY SUM(a.total_revenue) DESC) AS income_rank
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    JOIN 
        household_demographics hd ON c.c_customer_sk = hd.hd_demo_sk
    JOIN 
        AggregateSales a ON c.c_customer_sk = a.ws_bill_customer_sk
    GROUP BY 
        c.c_customer_sk, c.c_first_name, c.c_last_name, cd.cd_gender, hd.hd_income_band_sk, hd.hd_buy_potential
)
SELECT 
    ci.c_first_name,
    ci.c_last_name,
    ci.cd_gender,
    SUM(a.total_revenue) AS revenue_by_customer,
    ci.income_rank
FROM 
    CustomerInfo ci
JOIN 
    AggregateSales a ON ci.c_customer_sk = a.ws_bill_customer_sk
GROUP BY 
    ci.c_first_name, ci.c_last_name, ci.cd_gender, ci.income_rank
HAVING 
    SUM(a.total_revenue) > 1000
ORDER BY 
    revenue_by_customer DESC;
