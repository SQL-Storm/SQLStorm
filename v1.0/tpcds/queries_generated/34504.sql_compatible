
WITH RECURSIVE sales_summary AS (
    SELECT 
        ss.ss_sold_date_sk,
        ss.ss_item_sk,
        ss.ss_store_sk,
        SUM(ss.ss_quantity) AS total_quantity,
        SUM(ss.ss_net_profit) AS total_profit,
        COUNT(ss.ss_ticket_number) AS total_transactions
    FROM 
        store_sales ss
    WHERE 
        ss.ss_sold_date_sk BETWEEN 2458090 AND 2458098
    GROUP BY 
        ss.ss_sold_date_sk, ss.ss_item_sk, ss.ss_store_sk

    UNION ALL

    SELECT 
        ss.ss_sold_date_sk,
        ss.ss_item_sk,
        ss.ss_store_sk,
        SUM(ss.ss_quantity) + ss_summary.total_quantity,
        SUM(ss.ss_net_profit) + ss_summary.total_profit,
        COUNT(ss.ss_ticket_number) + ss_summary.total_transactions
    FROM 
        store_sales ss
    JOIN 
        sales_summary ss_summary ON ss.ss_store_sk = ss_summary.ss_store_sk AND ss.ss_item_sk = ss_summary.ss_item_sk
    WHERE 
        ss.ss_sold_date_sk < ss_summary.ss_sold_date_sk AND ss.ss_sold_date_sk BETWEEN 2458090 AND 2458098
    GROUP BY 
        ss.ss_sold_date_sk, ss.ss_item_sk, ss.ss_store_sk
),

customer_info AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_credit_rating,
        cd.cd_dep_count
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    WHERE 
        cd.cd_marital_status = 'M' 
        AND cd.cd_credit_rating IN ('Good', 'Excellent')
),

sales_return_info AS (
    SELECT 
        sr_item_sk,
        SUM(sr_return_quantity) AS total_returned_quantity,
        SUM(sr_return_amt) AS total_returned_amount,
        COUNT(DISTINCT sr_ticket_number) AS total_returned_transactions
    FROM 
        store_returns
    GROUP BY 
        sr_item_sk
)

SELECT 
    c.c_first_name,
    c.c_last_name,
    ci.total_quantity AS total_sales,
    ci.total_profit,
    COALESCE(ri.total_returned_quantity, 0) AS total_returns,
    ci.total_profit - COALESCE(ri.total_returned_amount, 0) AS net_profit,
    ROW_NUMBER() OVER (PARTITION BY ci.ss_item_sk ORDER BY ci.total_profit DESC) AS rank
FROM 
    sales_summary ci
LEFT JOIN 
    customer_info c ON ci.ss_store_sk = c.c_customer_sk
LEFT JOIN 
    sales_return_info ri ON ci.ss_item_sk = ri.sr_item_sk
WHERE 
    ci.total_quantity > 100
ORDER BY 
    net_profit DESC;
