
WITH ranked_sales AS (
    SELECT 
        ws.ws_item_sk,
        ws.ws_order_number,
        ws.ws_sales_price,
        RANK() OVER (PARTITION BY ws.ws_item_sk ORDER BY ws.ws_sales_price DESC) AS price_rank,
        COUNT(ws.ws_order_number) OVER (PARTITION BY ws.ws_item_sk) AS sales_count
    FROM web_sales ws
),
customer_info AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_purchase_estimate,
        COALESCE(cd.cd_credit_rating, 'UNKNOWN') AS credit_rating
    FROM customer c
    JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
),
inventory_data AS (
    SELECT 
        inv.inv_item_sk,
        SUM(inv.inv_quantity_on_hand) AS total_inventory
    FROM inventory inv
    GROUP BY inv.inv_item_sk
)
SELECT 
    ci.c_first_name,
    ci.c_last_name,
    ci.cd_gender,
    ci.cd_marital_status,
    COALESCE(rs.ws_item_sk, COALESCE(ws.ws_item_sk, 0)) AS item_sk,
    SUM(CASE WHEN rs.price_rank <= 5 THEN rs.ws_sales_price ELSE 0 END) AS top_5_sales,
    SUM(CASE WHEN rs.price_rank > 5 THEN rs.ws_sales_price ELSE 0 END) AS lower_priced_sales,
    COALESCE(i.total_inventory, 0) AS inventory_count,
    CASE 
        WHEN ci.cd_purchase_estimate > 1000 AND ci.cd_gender = 'F' THEN 'VIP'
        WHEN ci.cd_marital_status = 'S' AND ci.cd_purchase_estimate BETWEEN 500 AND 1000 THEN 'Moderate'
        ELSE 'Regular'
    END AS customer_status
FROM customer_info ci
LEFT JOIN ranked_sales rs ON ci.c_customer_sk = rs.ws_order_number
LEFT JOIN inventory_data i ON rs.ws_item_sk = i.inv_item_sk
WHERE ci.cd_gender IS NOT NULL
GROUP BY 
    ci.c_first_name, 
    ci.c_last_name, 
    ci.cd_gender, 
    ci.cd_marital_status, 
    rs.ws_item_sk, 
    i.total_inventory,
    ci.cd_purchase_estimate
HAVING 
    (SUM(CASE WHEN rs.price_rank <= 5 THEN rs.ws_sales_price ELSE 0 END) > 0 AND COUNT(rs.ws_order_number) > 1) 
    OR 
    (COUNT(rs.ws_order_number) = 1 AND COALESCE(i.total_inventory, 0) < 10)
ORDER BY 
    customer_status, 
    ci.c_last_name ASC;
