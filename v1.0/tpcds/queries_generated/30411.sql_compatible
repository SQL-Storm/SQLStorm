
WITH RECURSIVE SalesCTE AS (
    SELECT 
        w.w_warehouse_id,
        SUM(ws.ws_quantity) AS total_sales_quantity,
        SUM(ws.ws_sales_price) AS total_sales_amount
    FROM 
        warehouse w
    JOIN 
        web_sales ws ON w.w_warehouse_sk = ws.ws_warehouse_sk
    WHERE 
        ws.ws_sold_date_sk = (SELECT MAX(d_date_sk) FROM date_dim WHERE d_current_day = 'Y')
    GROUP BY 
        w.w_warehouse_id
    UNION ALL
    SELECT 
        w.w_warehouse_id,
        SUM(ws.ws_quantity) AS total_sales_quantity,
        SUM(ws.ws_sales_price) AS total_sales_amount
    FROM 
        warehouse w
    JOIN 
        web_sales ws ON w.w_warehouse_sk = ws.ws_warehouse_sk
    JOIN 
        SalesCTE s ON w.w_warehouse_id = s.w_warehouse_id
    WHERE 
        ws.ws_sold_date_sk < (SELECT MAX(d_date_sk) FROM date_dim WHERE d_current_day = 'Y')
    GROUP BY 
        w.w_warehouse_id
),
CustomerStats AS (
    SELECT 
        cd.cd_gender,
        COUNT(DISTINCT c.c_customer_sk) AS customer_count,
        AVG(cd.cd_purchase_estimate) AS avg_purchase_estimate
    FROM 
        customer c
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    GROUP BY 
        cd.cd_gender
)
SELECT 
    c.cd_gender, 
    cs.total_sales_quantity, 
    cs.total_sales_amount, 
    cs.customer_count, 
    cs.avg_purchase_estimate,
    CASE 
        WHEN cs.total_sales_amount > 50000 THEN 'High Value'
        WHEN cs.total_sales_amount BETWEEN 20000 AND 50000 THEN 'Medium Value'
        ELSE 'Low Value'
    END AS sales_value_category
FROM 
    SalesCTE cs
FULL OUTER JOIN 
    CustomerStats c ON cs.w_warehouse_id = c.cd_gender
WHERE 
    c.customer_count IS NOT NULL OR cs.total_sales_quantity IS NOT NULL
ORDER BY 
    sales_value_category, cs.total_sales_amount DESC;
