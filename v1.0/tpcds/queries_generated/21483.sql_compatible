
WITH SalesSummary AS (
    SELECT 
        ws.web_site_id,
        SUM(ws.ws_quantity) AS total_quantity,
        SUM(ws.ws_sales_price) AS total_sales_price,
        COUNT(DISTINCT ws.ws_order_number) AS total_orders,
        RANK() OVER (PARTITION BY ws.web_site_id ORDER BY SUM(ws.ws_sales_price) DESC) AS sales_rank
    FROM 
        web_sales ws
    JOIN 
        date_dim dd ON ws.ws_sold_date_sk = dd.d_date_sk
    WHERE 
        dd.d_year = 2023 AND 
        (ws.ws_quantity > 1 OR ws.ws_net_profit IS NULL) 
    GROUP BY 
        ws.web_site_id
),
CustomerReturns AS (
    SELECT 
        wr_returning_customer_sk,
        COUNT(DISTINCT wr_order_number) AS return_count,
        SUM(wr_return_amt_inc_tax) AS total_returned_amount
    FROM 
        web_returns
    WHERE 
        wr_returned_date_sk IN (SELECT d_date_sk FROM date_dim WHERE d_year = 2023)
    GROUP BY 
        wr_returning_customer_sk
),
ReturnRanked AS (
    SELECT 
        cr.wr_returning_customer_sk,
        cr.return_count,
        cr.total_returned_amount,
        RANK() OVER (ORDER BY cr.total_returned_amount DESC) AS return_rank
    FROM 
        CustomerReturns cr
),
FinalSales AS (
    SELECT 
        ss.web_site_id,
        ss.total_quantity,
        ss.total_sales_price,
        rs.return_count,
        COALESCE(rs.total_returned_amount, 0) AS total_returned_amount,
        ss.sales_rank,
        CASE 
            WHEN ss.total_orders = 0 THEN NULL 
            ELSE (ss.total_sales_price / ss.total_orders) 
        END AS avg_order_value
    FROM 
        SalesSummary ss
    LEFT JOIN 
        ReturnRanked rs ON ss.web_site_id = rs.wr_returning_customer_sk
)
SELECT 
    fs.web_site_id,
    fs.total_quantity,
    fs.total_sales_price,
    fs.return_count,
    fs.total_returned_amount,
    fs.avg_order_value,
    (fs.total_sales_price - fs.total_returned_amount) AS net_sales
FROM 
    FinalSales fs
WHERE 
    fs.total_sales_price IS NOT NULL
ORDER BY 
    net_sales DESC
FETCH FIRST 10 ROWS ONLY;
