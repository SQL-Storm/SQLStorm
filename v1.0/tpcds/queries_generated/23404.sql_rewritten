WITH RankedSales AS (
    SELECT 
        ws.ws_item_sk, 
        SUM(ws.ws_quantity) AS total_quantity, 
        SUM(ws.ws_ext_sales_price) AS total_sales,
        ROW_NUMBER() OVER (PARTITION BY ws.ws_item_sk ORDER BY SUM(ws.ws_ext_sales_price) DESC) AS rn
    FROM 
        web_sales ws
    JOIN 
        item i ON ws.ws_item_sk = i.i_item_sk
    WHERE 
        i.i_current_price IS NOT NULL AND 
        i.i_current_price > (SELECT AVG(i2.i_current_price) FROM item i2 WHERE i2.i_rec_start_date <= cast('2002-10-01' as date) AND (i2.i_rec_end_date IS NULL OR i2.i_rec_end_date > cast('2002-10-01' as date)))
    GROUP BY 
        ws.ws_item_sk
),

FilteredSales AS (
    SELECT 
        r.ws_item_sk, 
        r.total_quantity,
        r.total_sales,
        (CASE 
            WHEN r.rn <= 10 THEN 'Top 10'
            ELSE 'Others'
        END) AS sales_category
    FROM 
        RankedSales r
)

SELECT 
    s.sales_category, 
    COALESCE(SUM(s.total_quantity), 0) AS total_quantity_sold,
    COALESCE(SUM(s.total_sales), 0) AS total_sales_value,
    COUNT(DISTINCT CASE WHEN ca.ca_state IS NULL THEN 'Unknown' ELSE ca.ca_state END) AS state_count,
    MAX(i.i_current_price) AS highest_price,
    MIN(i.i_current_price) AS lowest_price
FROM 
    FilteredSales s
LEFT JOIN 
    item i ON s.ws_item_sk = i.i_item_sk
LEFT JOIN 
    inventory inv ON inv.inv_item_sk = s.ws_item_sk 
LEFT JOIN 
    warehouse w ON inv.inv_warehouse_sk = w.w_warehouse_sk 
LEFT JOIN 
    customer_address ca ON ca.ca_address_sk = (SELECT c.c_current_addr_sk FROM customer c WHERE c.c_customer_sk = (SELECT ws_bill_customer_sk FROM web_sales WHERE ws_item_sk = s.ws_item_sk LIMIT 1))
WHERE 
    (s.total_quantity IS NOT NULL OR s.total_sales IS NOT NULL)
GROUP BY 
    s.sales_category
ORDER BY 
    total_sales_value DESC
HAVING 
    COUNT(i.i_item_sk) > 0 AND 
    (MAX(i.i_current_price) - MIN(i.i_current_price)) > 0;