
WITH RECURSIVE address_hierarchy AS (
    SELECT ca_address_sk, 
           ca_city, 
           ca_state, 
           1 AS level 
    FROM customer_address 
    WHERE ca_state IS NOT NULL
    
    UNION ALL
    
    SELECT ca.ca_address_sk, 
           ca.ca_city, 
           ca.ca_state, 
           ah.level + 1 
    FROM customer_address ca
    JOIN address_hierarchy ah ON ca.ca_address_sk = (SELECT max(ca_address_sk) 
                                                       FROM customer_address 
                                                       WHERE ca_city = ah.ca_city 
                                                         AND ca_state IS NOT NULL)
    WHERE ah.level < 5
), 
customer_purchases AS (
    SELECT c.c_customer_sk, 
           SUM(COALESCE(ws.net_paid, 0)) AS total_spent,
           c.c_current_addr_sk
    FROM customer c
    LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY c.c_customer_sk, c.c_current_addr_sk
),
ranked_customers AS (
    SELECT cp.c_customer_sk, 
           cp.total_spent,
           ah.ca_city,
           ah.ca_state,
           RANK() OVER (PARTITION BY ah.ca_state ORDER BY cp.total_spent DESC) AS rank_within_state
    FROM customer_purchases cp 
    JOIN customer_address ca ON cp.c_current_addr_sk = ca.ca_address_sk
    JOIN address_hierarchy ah ON ca.ca_address_sk = ah.ca_address_sk
)
SELECT 
    rc.c_customer_sk, 
    rc.total_spent, 
    rc.ca_city, 
    rc.ca_state,
    CASE WHEN rc.rank_within_state <= 3 THEN 'Top Performer' 
         WHEN rc.rank_within_state IS NULL THEN 'No Purchases' 
         ELSE 'Regular Customer' END AS customer_category
FROM ranked_customers rc
LEFT JOIN customer_demographics cd ON rc.c_customer_sk = cd.cd_demo_sk
WHERE COALESCE(cd.cd_gender, 'X') = 'F'
  AND rc.total_spent > (SELECT AVG(total_spent) 
                         FROM customer_purchases)
ORDER BY rc.ca_state, rc.total_spent DESC
OFFSET 10 ROWS FETCH NEXT 10 ROWS ONLY;
