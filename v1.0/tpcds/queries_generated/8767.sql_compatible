
WITH CustomerSales AS (
    SELECT 
        c.c_customer_id,
        SUM(ws.ws_net_paid) AS total_web_sales,
        SUM(cs.cs_net_paid) AS total_catalog_sales,
        SUM(ss.ss_net_paid) AS total_store_sales,
        COUNT(DISTINCT ws.ws_order_number) AS web_orders,
        COUNT(DISTINCT cs.cs_order_number) AS catalog_orders,
        COUNT(DISTINCT ss.ss_ticket_number) AS store_orders
    FROM customer c
    LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    LEFT JOIN catalog_sales cs ON c.c_customer_sk = cs.cs_bill_customer_sk
    LEFT JOIN store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    GROUP BY c.c_customer_id
),
Sales_statistics AS (
    SELECT 
        c.c_customer_id AS customer_id,
        total_web_sales,
        total_catalog_sales,
        total_store_sales,
        (total_web_sales + total_catalog_sales + total_store_sales) AS total_sales,
        CASE 
            WHEN (total_web_sales + total_catalog_sales + total_store_sales) > 1000 THEN 'High'
            WHEN (total_web_sales + total_catalog_sales + total_store_sales) BETWEEN 500 AND 1000 THEN 'Medium'
            ELSE 'Low'
        END AS sales_category
    FROM CustomerSales c
)
SELECT 
    s.customer_id,
    s.total_web_sales,
    s.total_catalog_sales,
    s.total_store_sales,
    s.total_sales,
    s.sales_category,
    COUNT(DISTINCT o.ws_order_number) AS orders_count
FROM Sales_statistics s
LEFT JOIN web_sales o ON s.customer_id = o.ws_bill_customer_sk
GROUP BY 
    s.customer_id, 
    s.total_web_sales, 
    s.total_catalog_sales, 
    s.total_store_sales, 
    s.total_sales, 
    s.sales_category
ORDER BY s.total_sales DESC;
