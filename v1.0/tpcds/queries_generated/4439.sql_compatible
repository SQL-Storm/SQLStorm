
WITH CTE_Customer_Revenue AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        SUM(ws.ws_net_profit) AS total_revenue,
        COUNT(DISTINCT ws.ws_order_number) AS number_of_orders,
        ROW_NUMBER() OVER (PARTITION BY c.c_customer_sk ORDER BY SUM(ws.ws_net_profit) DESC) AS rn
    FROM 
        customer c
    INNER JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    WHERE 
        ws.ws_sold_date_sk IN (SELECT d_date_sk FROM date_dim WHERE d_year = 2023)
    GROUP BY 
        c.c_customer_sk, c.c_first_name, c.c_last_name
),
CTE_Returns AS (
    SELECT 
        sr_customer_sk,
        SUM(sr_return_amt) AS total_return_amount,
        COUNT(sr_ticket_number) AS return_count
    FROM 
        store_returns
    GROUP BY 
        sr_customer_sk
),
CTE_Customer_Status AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        COALESCE(cr.total_revenue, 0) AS total_revenue,
        COALESCE(rt.total_return_amount, 0) AS total_return_amount,
        (COALESCE(cr.total_revenue, 0) - COALESCE(rt.total_return_amount, 0)) AS net_revenue,
        cr.number_of_orders
    FROM 
        CTE_Customer_Revenue cr
    LEFT JOIN 
        CTE_Returns rt ON cr.c_customer_sk = rt.sr_customer_sk
)
SELECT 
    c.c_customer_sk,
    c.c_first_name,
    c.c_last_name,
    CASE 
        WHEN c.net_revenue > 0 THEN 'Profitable'
        WHEN c.net_revenue = 0 THEN 'Break-even'
        ELSE 'Unprofitable'
    END AS revenue_status,
    c.net_revenue
FROM 
    CTE_Customer_Status c
WHERE 
    c.number_of_orders > 5
ORDER BY 
    c.net_revenue DESC
FETCH FIRST 10 ROWS ONLY;
