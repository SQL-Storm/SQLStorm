
WITH RECURSIVE sales_summary AS (
    SELECT ws_item_sk, SUM(ws_quantity) AS total_quantity, 
           SUM(ws_ext_sales_price) AS total_sales_price
    FROM web_sales
    WHERE ws_sold_date_sk >= (SELECT MAX(d_date_sk) - 30 FROM date_dim WHERE d_current_year = 'Y')
    GROUP BY ws_item_sk
    UNION ALL
    SELECT ss_item_sk, SUM(ss_quantity) AS total_quantity, 
           SUM(ss_ext_sales_price) AS total_sales_price
    FROM store_sales
    WHERE ss_sold_date_sk >= (SELECT MAX(d_date_sk) - 30 FROM date_dim WHERE d_current_year = 'Y')
    GROUP BY ss_item_sk
),
customer_summary AS (
    SELECT c_customer_sk, c_first_name, c_last_name, 
           cd_gender, cd_marital_status, cd_purchase_estimate,
           ROW_NUMBER() OVER (PARTITION BY cd_gender ORDER BY cd_purchase_estimate DESC) AS rank
    FROM customer 
    LEFT JOIN customer_demographics ON c_current_cdemo_sk = cd_demo_sk
),
top_customers AS (
    SELECT c_customer_sk, c_first_name, c_last_name 
    FROM customer_summary
    WHERE rank <= 10
),
total_sales AS (
    SELECT 
        item.i_item_id,
        COALESCE(ws.total_quantity, 0) AS web_sales_quantity,
        COALESCE(ss.total_quantity, 0) AS store_sales_quantity,
        COALESCE(ws.total_sales_price, 0) AS web_sales_price,
        COALESCE(ss.total_sales_price, 0) AS store_sales_price
    FROM item
    LEFT JOIN (SELECT ws_item_sk, SUM(ws_quantity) AS total_quantity, SUM(ws_ext_sales_price) AS total_sales_price 
                FROM web_sales GROUP BY ws_item_sk) ws ON item.i_item_sk = ws.ws_item_sk
    LEFT JOIN (SELECT ss_item_sk, SUM(ss_quantity) AS total_quantity, SUM(ss_ext_sales_price) AS total_sales_price 
                FROM store_sales GROUP BY ss_item_sk) ss ON item.i_item_sk = ss.ss_item_sk
),
final_report AS (
    SELECT 
        tc.c_customer_sk, 
        tc.c_first_name, 
        tc.c_last_name,
        ts.i_item_id,
        ts.web_sales_quantity,
        ts.store_sales_quantity,
        ts.web_sales_price,
        ts.store_sales_price
    FROM top_customers tc
    JOIN total_sales ts ON ts.i_item_id IN (SELECT sr_item_sk FROM store_returns WHERE sr_customer_sk = tc.c_customer_sk)
    ORDER BY tc.c_customer_sk, ts.i_item_id
)
SELECT 
    fr.c_customer_sk, 
    fr.c_first_name, 
    fr.c_last_name,
    fr.i_item_id,
    fr.web_sales_quantity,
    fr.store_sales_quantity,
    (fr.web_sales_price + fr.store_sales_price) AS total_sales,
    CASE 
        WHEN fr.web_sales_quantity > fr.store_sales_quantity THEN 'Web'
        WHEN fr.web_sales_quantity < fr.store_sales_quantity THEN 'Store'
        ELSE 'Equal'
    END AS dominant_channel
FROM final_report fr
ORDER BY fr.c_customer_sk, total_sales DESC;
