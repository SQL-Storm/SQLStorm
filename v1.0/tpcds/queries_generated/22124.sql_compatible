
WITH ranked_customers AS (
    SELECT 
        c.c_customer_sk,
        c.c_customer_id,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_purchase_estimate,
        ROW_NUMBER() OVER (PARTITION BY cd.cd_gender ORDER BY cd.cd_purchase_estimate DESC) AS rnk
    FROM customer c
    JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    WHERE cd.cd_purchase_estimate IS NOT NULL
),
high_value_customers AS (
    SELECT 
        rc.c_customer_sk,
        rc.c_customer_id,
        rc.cd_gender,
        rc.cd_marital_status,
        rc.cd_purchase_estimate
    FROM ranked_customers rc
    WHERE rc.rnk <= 10
),
customer_addresses AS (
    SELECT 
        ca.ca_address_sk,
        ca.ca_city,
        ca.ca_state,
        COUNT(c.c_customer_sk) AS customer_count
    FROM customer_address ca
    LEFT JOIN customer c ON c.c_current_addr_sk = ca.ca_address_sk
    GROUP BY ca.ca_address_sk, ca.ca_city, ca.ca_state
),
customer_city_states AS (
    SELECT 
        ca.ca_city,
        ca.ca_state,
        COALESCE(ca.customer_count, 0) AS total_customers
    FROM customer_addresses ca
    FULL OUTER JOIN high_value_customers hvc ON hvc.cd_gender = 
    CASE 
        WHEN hvc.cd_gender = 'M' THEN 'Female'
        WHEN hvc.cd_gender = 'F' THEN 'Male'
        ELSE 'Unknown'
    END
)

SELECT 
    ccs.ca_city,
    ccs.ca_state,
    ccs.total_customers,
    COUNT(DISTINCT hvc.c_customer_id) AS high_value_customer_count,
    SUM(COALESCE(hvc.cd_purchase_estimate, 0)) AS total_purchase_estimate,
    AVG(hvc.cd_purchase_estimate) AS avg_purchase_estimate,
    DENSE_RANK() OVER (ORDER BY SUM(COALESCE(hvc.cd_purchase_estimate, 0)) DESC) AS density_rank
FROM customer_city_states ccs
LEFT JOIN high_value_customers hvc ON ccs.total_customers > 5 
GROUP BY ccs.ca_city, ccs.ca_state
HAVING COUNT(DISTINCT hvc.c_customer_id) > 0 OR SUM(COALESCE(hvc.cd_purchase_estimate, 0)) > 10000
ORDER BY total_purchase_estimate DESC, ccs.ca_city
OFFSET 5 ROWS FETCH NEXT 10 ROWS ONLY;
