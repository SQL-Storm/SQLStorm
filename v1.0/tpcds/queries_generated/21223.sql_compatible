
WITH RankedSales AS (
    SELECT 
        ws.web_site_sk,
        ws_sold_date_sk,
        SUM(ws_quantity) AS total_sales,
        ROW_NUMBER() OVER (PARTITION BY ws.web_site_sk ORDER BY SUM(ws_quantity) DESC) AS sales_rank
    FROM 
        web_sales ws
    JOIN 
        customer c ON ws.ws_bill_customer_sk = c.c_customer_sk
    WHERE 
        c.c_birth_year BETWEEN 1970 AND 1990
    GROUP BY 
        ws.web_site_sk, ws_sold_date_sk
),
InventoryDetails AS (
    SELECT 
        i.i_item_sk,
        SUM(inv.inv_quantity_on_hand) AS total_inventory
    FROM 
        inventory inv
    JOIN 
        item i ON inv.inv_item_sk = i.i_item_sk
    WHERE 
        i.i_current_price < (SELECT AVG(i2.i_current_price) FROM item i2)
    GROUP BY 
        i.i_item_sk
),
SalesWithInventory AS (
    SELECT 
        rs.web_site_sk,
        i.i_item_sk,
        rs.total_sales,
        COALESCE(id.total_inventory, 0) AS total_inventory
    FROM 
        RankedSales rs
    LEFT JOIN 
        InventoryDetails id ON id.i_item_sk = rs.web_site_sk
)
SELECT 
    sw.web_site_sk,
    COUNT(*) AS num_orders,
    AVG(CASE WHEN sw.total_sales > 100 THEN sw.total_inventory ELSE NULL END) AS avg_inventory_for_high_sales,
    SUM(CASE WHEN sw.total_inventory = 0 THEN 1 ELSE 0 END) AS zero_inventory_count,
    MAX(sw.total_sales) AS max_sales
FROM 
    SalesWithInventory sw
WHERE 
    (sw.total_sales > 50 OR sw.total_inventory IS NULL)
GROUP BY 
    sw.web_site_sk
HAVING 
    SUM(CASE WHEN sw.total_inventory < 5 THEN 1 ELSE 0 END) > 2
ORDER BY 
    sw.web_site_sk DESC;
