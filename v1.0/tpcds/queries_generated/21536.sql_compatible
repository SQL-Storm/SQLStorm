
WITH CustomerReturns AS (
    SELECT
        cr_returning_customer_sk,
        SUM(cr_return_quantity) AS total_returned_qty,
        SUM(cr_return_amt) AS total_returned_amt,
        COUNT(DISTINCT cr_order_number) AS return_count
    FROM catalog_returns
    GROUP BY cr_returning_customer_sk
),
SalesData AS (
    SELECT
        COALESCE(ws_bill_customer_sk, ss_customer_sk) AS customer_sk,
        SUM(ws_quantity + ss_quantity) AS total_quantity_sold,
        SUM(ws_net_paid + ss_net_paid) AS total_amount_sold
    FROM (
        SELECT
            ws_bill_customer_sk,
            ws_quantity,
            ws_net_paid,
            NULL AS ss_quantity,
            NULL AS ss_net_paid
        FROM web_sales
        WHERE ws_sold_date_sk = (
            SELECT MAX(d_date_sk)
            FROM date_dim
            WHERE d_date >= DATE('2002-10-01') - INTERVAL '3 MONTH'
        )
        UNION ALL
        SELECT
            ss_customer_sk,
            NULL AS ws_quantity,
            NULL AS ws_net_paid,
            ss_quantity,
            ss_net_paid
        FROM store_sales
        WHERE ss_sold_date_sk IN (
            SELECT d_date_sk
            FROM date_dim
            WHERE d_date BETWEEN DATE('2002-10-01') - INTERVAL '1 MONTH' AND DATE('2002-10-01')
        )
    ) AS CombinedSales
    GROUP BY COALESCE(ws_bill_customer_sk, ss_customer_sk)
),
CustomerDetails AS (
    SELECT
        c.c_customer_id,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_purchase_estimate,
        COALESCE(cr.total_returned_qty, 0) AS total_returns,
        COALESCE(cr.total_returned_amt, 0) AS total_returned_amt,
        sd.total_quantity_sold,
        sd.total_amount_sold
    FROM customer c
    LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN CustomerReturns cr ON c.c_customer_sk = cr.cr_returning_customer_sk
    LEFT JOIN SalesData sd ON c.c_customer_sk = sd.customer_sk
)
SELECT
    cd.c_customer_id,
    CONCAT(cd.c_first_name, ' ', cd.c_last_name) AS full_name,
    cd.cd_gender,
    cd.cd_marital_status,
    cd.cd_purchase_estimate,
    cd.total_returns,
    cd.total_returned_amt,
    COALESCE(cd.total_quantity_sold, 0) AS total_sales_qty,
    COALESCE(cd.total_amount_sold, 0) AS total_sales_amt,
    CASE
        WHEN cd.total_returned_amt > 0 THEN 'High Risk'
        WHEN cd.total_amount_sold < AVG(sd.total_amount_sold) OVER() THEN 'Under Performer'
        ELSE 'Regular Customer'
    END AS customer_risk_category
FROM CustomerDetails cd
WHERE cd.total_returns > (SELECT AVG(total_returns) FROM CustomerReturns)
ORDER BY cd.total_sales_amt DESC
FETCH FIRST 100 ROWS ONLY;
