
WITH RecursiveSales AS (
    SELECT 
        ws.web_site_sk, 
        ws.web_name, 
        SUM(ws.ws_ext_sales_price) AS total_sales,
        ROW_NUMBER() OVER(PARTITION BY ws.web_site_sk ORDER BY SUM(ws.ws_ext_sales_price) DESC) AS sales_rank
    FROM 
        web_sales ws
    WHERE 
        ws.ws_sales_price > 0
    GROUP BY 
        ws.web_site_sk, ws.web_name
), WarehouseInventory AS (
    SELECT 
        inv.inv_warehouse_sk,
        SUM(COALESCE(inv.inv_quantity_on_hand, 0)) AS total_inventory
    FROM 
        inventory inv
    GROUP BY 
        inv.inv_warehouse_sk
), CustomerStats AS (
    SELECT 
        c.c_customer_sk, 
        COUNT(DISTINCT c.c_current_cdemo_sk) AS demo_count,
        COALESCE(MAX(cd.cd_gender), 'Not Specified') AS gender
    FROM 
        customer c
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    GROUP BY 
        c.c_customer_sk
), StoreSalesRanked AS (
    SELECT 
        ss.ss_store_sk, 
        SUM(ss.ss_net_profit) AS total_profit,
        RANK() OVER(ORDER BY SUM(ss.ss_net_profit) DESC) AS profit_rank
    FROM 
        store_sales ss
    GROUP BY 
        ss.ss_store_sk
)
SELECT 
    wa.w_warehouse_id,
    wa.w_warehouse_name,
    COALESCE(rs.total_sales, 0) AS total_sales,
    COALESCE(si.total_inventory, 0) AS total_inventory,
    cs.gender,
    ssr.total_profit,
    COALESCE(ssr.profit_rank, 'Not Ranked') AS profit_rank
FROM 
    warehouse wa
LEFT JOIN 
    RecursiveSales rs ON wa.w_warehouse_sk = rs.web_site_sk
LEFT JOIN 
    WarehouseInventory si ON wa.w_warehouse_sk = si.inv_warehouse_sk
LEFT JOIN 
    CustomerStats cs ON cs.c_customer_sk = (
        SELECT 
            c.c_customer_sk
        FROM 
            customer c
        WHERE 
            c.c_current_addr_sk = (
                SELECT 
                    ca.ca_address_sk 
                FROM 
                    customer_address ca 
                WHERE 
                    ca.ca_city = wa.w_city LIMIT 1
            )
        LIMIT 1
    )
LEFT JOIN 
    StoreSalesRanked ssr ON ssr.ss_store_sk = (
        SELECT 
            MIN(ss.ss_store_sk)
        FROM 
            store_sales ss 
        WHERE 
            ss.ss_ticket_number IS NOT NULL
        GROUP BY 
            ss.ss_store_sk 
        HAVING 
            COUNT(ss.ss_ticket_number) > 10
    )
WHERE 
    wa.w_country IS NOT NULL
ORDER BY 
    total_sales DESC, 
    total_inventory DESC;
