
WITH RankedSales AS (
    SELECT 
        ws.ws_item_sk,
        ws.ws_order_number,
        ws.ws_net_paid,
        RANK() OVER (PARTITION BY ws.ws_item_sk ORDER BY ws.ws_sold_date_sk DESC) AS sales_rank
    FROM 
        web_sales ws
    WHERE 
        ws.ws_sold_date_sk BETWEEN 20220101 AND 20221231
),
CustomerDetails AS (
    SELECT 
        c.c_customer_sk,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_credit_rating,
        hd.hd_income_band_sk,
        COALESCE(CONCAT(c.c_first_name, ' ', c.c_last_name), 'Unknown') AS full_name
    FROM 
        customer c
    LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN household_demographics hd ON c.c_current_hdemo_sk = hd.hd_demo_sk
),
NullHandling AS (
    SELECT 
        r.r_reason_id,
        r.r_reason_desc,
        COUNT(cr.cr_returned_time_sk) AS return_count
    FROM 
        reason r
    LEFT JOIN catalog_returns cr ON r.r_reason_sk = cr.cr_reason_sk
    GROUP BY 
        r.r_reason_id, r.r_reason_desc
)
SELECT 
    cd.full_name,
    cd.cd_gender,
    cd.cd_marital_status,
    cd.cd_credit_rating,
    ib.ib_lower_bound,
    ib.ib_upper_bound,
    COALESCE(SUM(CASE WHEN rs.sales_rank = 1 THEN rs.ws_net_paid ELSE 0 END), 0) AS highest_paid,
    COALESCE(SUM(rs.ws_net_paid), 0) AS total_paid,
    nh.return_count
FROM 
    CustomerDetails cd
LEFT JOIN RankedSales rs ON cd.c_customer_sk = rs.ws_order_number
LEFT JOIN income_band ib ON cd.hd_income_band_sk = ib.ib_income_band_sk
LEFT JOIN NullHandling nh ON cd.hd_income_band_sk = nh.r_reason_id
WHERE 
    cd.cd_credit_rating IS NOT NULL
GROUP BY 
    cd.full_name, cd.cd_gender, cd.cd_marital_status, cd.cd_credit_rating, ib.ib_lower_bound, ib.ib_upper_bound, nh.return_count
HAVING 
    total_paid > 1000 AND 
    (cd.cd_gender = 'F' OR cd.cd_marital_status = 'M')
ORDER BY 
    total_paid DESC;
