
WITH RECURSIVE monthly_sales AS (
    SELECT 
        d.d_year,
        d.d_month_seq,
        SUM(ws.ws_ext_sales_price) AS total_sales
    FROM 
        date_dim d 
    JOIN 
        web_sales ws ON d.d_date_sk = ws.ws_sold_date_sk
    GROUP BY 
        d.d_year, d.d_month_seq
    
    UNION ALL
    
    SELECT 
        ms.d_year,
        ms.d_month_seq + 1,
        SUM(ws.ws_ext_sales_price) AS total_sales
    FROM 
        monthly_sales ms
    JOIN 
        web_sales ws ON ms.d_year = EXTRACT(YEAR FROM DATE '2002-10-01') AND ms.d_month_seq + 1 = EXTRACT(MONTH FROM DATE '2002-10-01')
    WHERE 
        ms.d_month_seq < 12 
    GROUP BY 
        ms.d_year, ms.d_month_seq
), 
store_stats AS (
    SELECT 
        s.s_store_sk,
        s.s_store_name,
        COALESCE(SUM(ws.ws_sales_price), 0) AS total_sales,
        COUNT(DISTINCT ws.ws_order_number) AS total_orders
    FROM 
        store s
    LEFT JOIN 
        web_sales ws ON s.s_store_sk = ws.ws_warehouse_sk
    GROUP BY 
        s.s_store_sk, s.s_store_name
), 
customer_demographics AS (
    SELECT 
        cd.cd_demo_sk,
        cd.cd_gender,
        COUNT(DISTINCT c.c_customer_sk) AS customer_count
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    WHERE 
        cd.cd_marital_status = 'M' 
    GROUP BY 
        cd.cd_demo_sk, cd.cd_gender
)
SELECT 
    ms.d_year,
    ms.d_month_seq,
    ss.s_store_name,
    ss.total_sales,
    cd.cd_gender,
    cd.customer_count,
    AVG(ms.total_sales) OVER (PARTITION BY ss.s_store_name ORDER BY ms.d_year, ms.d_month_seq) AS avg_monthly_sales
FROM 
    monthly_sales ms
JOIN 
    store_stats ss ON ms.d_month_seq = EXTRACT(MONTH FROM DATE '2002-10-01') AND ss.total_sales > (SELECT AVG(total_sales) FROM store_stats)
JOIN 
    customer_demographics cd ON cd.customer_count > 50
GROUP BY 
    ms.d_year, ms.d_month_seq, ss.s_store_name, ss.total_sales, cd.cd_gender, cd.customer_count
ORDER BY 
    ms.d_year, ms.d_month_seq, ss.total_sales DESC;
