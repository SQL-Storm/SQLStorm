
WITH RECURSIVE CustomerHierarchy AS (
    SELECT c.c_customer_sk, c.c_first_name, c.c_last_name, c.c_birth_year, 
           pr.p_promo_name,
           ROW_NUMBER() OVER(PARTITION BY c.c_customer_sk ORDER BY c.c_birth_year DESC) AS rn
    FROM customer c
    LEFT JOIN store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    LEFT JOIN promotion pr ON ss.ss_promo_sk = pr.p_promo_sk
    WHERE c.c_birth_year IS NOT NULL AND c.c_birth_year BETWEEN 1970 AND 2000
    UNION ALL
    SELECT ch.c_customer_sk, ch.c_first_name, ch.c_last_name, ch.c_birth_year, 
           NULL
    FROM CustomerHierarchy ch
    WHERE ch.rn = 1
),
SalesData AS (
    SELECT ws.ws_item_sk, ws.ws_sales_price, ws.ws_net_profit,
           w.w_warehouse_name, d.d_year,
           SUM(CASE WHEN ws.ws_quantity > 0 THEN ws.ws_quantity ELSE 0 END) AS total_quantity,
           COUNT(DISTINCT ws.ws_order_number) AS order_count
    FROM web_sales ws
    JOIN warehouse w ON ws.ws_warehouse_sk = w.w_warehouse_sk
    JOIN date_dim d ON ws.ws_sold_date_sk = d.d_date_sk
    WHERE d.d_year IN (2021, 2022)
    GROUP BY ws.ws_item_sk, ws.ws_sales_price, ws.ws_net_profit, w.w_warehouse_name, d.d_year
),
FinalReport AS (
    SELECT sh.c_customer_sk, sh.c_first_name, sh.c_last_name,
           SUM(sd.ws_net_profit) AS total_net_profit,
           AVG(sd.ws_sales_price) AS avg_sales_price, 
           SUM(sd.total_quantity) FILTER (WHERE sd.order_count > 5) AS high_volume_sales
    FROM CustomerHierarchy sh
    LEFT JOIN SalesData sd ON sh.c_customer_sk = sd.ws_item_sk
    GROUP BY sh.c_customer_sk, sh.c_first_name, sh.c_last_name
)
SELECT *
FROM FinalReport
WHERE total_net_profit > 1000 AND avg_sales_price IS NOT NULL
ORDER BY total_net_profit DESC
LIMIT 10;
