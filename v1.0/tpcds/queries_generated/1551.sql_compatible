
WITH CustomerSales AS (
    SELECT 
        c.c_customer_sk,
        SUM(ws.ws_net_paid) AS total_web_sales,
        COUNT(DISTINCT ws.ws_order_number) AS orders_count
    FROM 
        customer c
    LEFT JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY 
        c.c_customer_sk
),
TopCustomers AS (
    SELECT 
        cs.c_customer_sk,
        cs.total_web_sales,
        RANK() OVER (ORDER BY cs.total_web_sales DESC) AS rank
    FROM 
        CustomerSales cs
),
SalesDetails AS (
    SELECT 
        tc.c_customer_sk,
        tc.total_web_sales,
        tc.rank,
        COUNT(DISTINCT wr.wr_order_number) AS total_web_returns,
        SUM(wr.wr_return_amt_inc_tax) AS total_web_return_amount
    FROM 
        TopCustomers tc
    LEFT JOIN 
        web_returns wr ON tc.c_customer_sk = wr.wr_returning_customer_sk
    GROUP BY 
        tc.c_customer_sk, tc.total_web_sales, tc.rank
)
SELECT 
    CONCAT(c.c_first_name, ' ', c.c_last_name) AS customer_name,
    cs.total_web_sales,
    sd.total_web_returns,
    sd.total_web_return_amount,
    CASE 
        WHEN sd.rank <= 10 THEN 'Top 10'
        ELSE 'Others'
    END AS customer_category
FROM 
    SalesDetails sd
JOIN 
    customer c ON sd.c_customer_sk = c.c_customer_sk
WHERE 
    sd.total_web_sales IS NOT NULL
ORDER BY 
    sd.total_web_sales DESC;
