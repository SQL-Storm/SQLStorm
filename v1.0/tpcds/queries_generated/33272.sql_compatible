
WITH RECURSIVE CustomerReturns AS (
    SELECT 
        sr_customer_sk,
        SUM(sr_return_quantity) AS total_returned,
        SUM(sr_return_amt_inc_tax) AS total_return_amount,
        COUNT(DISTINCT sr_ticket_number) AS return_count
    FROM store_returns
    WHERE sr_returned_date_sk IS NOT NULL
    GROUP BY sr_customer_sk
),
WarehouseInventory AS (
    SELECT 
        inv.warehouse_sk,
        SUM(inv_quantity_on_hand) AS total_quantity,
        COUNT(DISTINCT inv_item_sk) AS item_count
    FROM inventory inv
    JOIN item itm ON inv.inv_item_sk = itm.i_item_sk
    WHERE itm.i_current_price > 20.00
    GROUP BY inv.warehouse_sk
),
SaleStats AS (
    SELECT 
        ws_bill_customer_sk AS customer_sk,
        SUM(ws_net_paid_inc_tax) AS total_sales,
        AVG(ws_net_profit) AS avg_profit
    FROM web_sales
    WHERE ws_sold_date_sk BETWEEN (SELECT MIN(d_date_sk) FROM date_dim WHERE d_year = 2023) 
                              AND (SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = 2023)
    GROUP BY ws_bill_customer_sk
)
SELECT 
    c.c_customer_id,
    c.c_first_name,
    c.c_last_name,
    COALESCE(cr.total_returned, 0) AS total_returned,
    COALESCE(cr.total_return_amount, 0) AS total_return_amount,
    COALESCE(ss.total_sales, 0) AS total_sales,
    COALESCE(ss.avg_profit, 0) AS avg_profit,
    COALESCE(wi.total_quantity, 0) AS warehouse_total_quantity,
    COALESCE(wi.item_count, 0) AS unique_items_in_warehouse
FROM customer c
LEFT JOIN CustomerReturns cr ON c.c_customer_sk = cr.sr_customer_sk
LEFT JOIN SaleStats ss ON c.c_customer_sk = ss.customer_sk
LEFT JOIN WarehouseInventory wi ON wi.warehouse_sk IN (
    SELECT 
        inv.inv_warehouse_sk
    FROM inventory inv
    JOIN store s ON inv.inv_warehouse_sk = s.s_store_sk
    WHERE s.s_country = 'USA'
    GROUP BY inv.inv_warehouse_sk
)
WHERE c.c_current_cdemo_sk IS NOT NULL
  AND (COALESCE(ss.total_sales, 0) > 0 OR COALESCE(cr.total_returned, 0) > 0)
ORDER BY COALESCE(ss.total_sales, 0) DESC, COALESCE(cr.total_returned, 0) DESC;
