
WITH RECURSIVE sales_trends AS (
    SELECT 
        ws_item_sk,
        SUM(ws_sales_price) AS total_sales,
        COUNT(ws_order_number) AS total_orders,
        DENSE_RANK() OVER (PARTITION BY ws_item_sk ORDER BY ws_sold_date_sk) AS sales_rank
    FROM 
        web_sales
    GROUP BY 
        ws_item_sk
),
top_items AS (
    SELECT 
        i_item_sk,
        i_product_name,
        i_category,
        i_brand
    FROM 
        item 
    WHERE 
        i_item_sk IN (SELECT ws_item_sk FROM sales_trends WHERE total_sales > 1000)
),
customer_stats AS (
    SELECT 
        c.c_customer_sk,
        d.cd_gender,
        d.cd_marital_status,
        d.cd_purchase_estimate,
        CASE 
            WHEN d.cd_purchase_estimate BETWEEN 0 AND 10000 THEN 'Low'
            WHEN d.cd_purchase_estimate BETWEEN 10001 AND 50000 THEN 'Medium'
            ELSE 'High' 
        END AS purchase_band
    FROM 
        customer c
    LEFT JOIN 
        customer_demographics d ON c.c_current_cdemo_sk = d.cd_demo_sk
)
SELECT 
    t.total_sales,
    t.total_orders,
    i.i_product_name,
    cs.cd_gender,
    cs.purchase_band
FROM 
    sales_trends t
JOIN 
    top_items i ON t.ws_item_sk = i.i_item_sk
LEFT JOIN 
    customer_stats cs ON cs.c_customer_sk IN (SELECT ws_customer_sk FROM web_sales WHERE ws_sales_price > 50)
ORDER BY 
    t.total_sales DESC, 
    t.total_orders ASC
LIMIT 10;
