
WITH RECURSIVE SalesHierarchy AS (
    SELECT 
        ss_store_sk,
        SUM(ss_net_paid) AS total_sales,
        COUNT(ss_ticket_number) AS transaction_count,
        ROW_NUMBER() OVER (PARTITION BY ss_store_sk ORDER BY SUM(ss_net_paid) DESC) AS sales_rank
    FROM 
        store_sales
    GROUP BY 
        ss_store_sk
), 
CustomerAddress AS (
    SELECT 
        ca.ca_address_sk,
        ca.ca_city,
        ca.ca_state,
        ca.ca_country
    FROM 
        customer_address ca
), 
Demographics AS (
    SELECT 
        cd.cd_demo_sk,
        cd.cd_gender,
        cd.cd_marital_status,
        ib.ib_income_band_sk,
        CASE 
            WHEN cd.cd_income_band_sk IS NOT NULL THEN 'Income Band Available'
            ELSE 'No Income Band'
        END AS income_band_status
    FROM 
        customer_demographics cd
    LEFT JOIN 
        household_demographics hd ON cd.cd_demo_sk = hd.hd_demo_sk 
    LEFT JOIN 
        income_band ib ON hd.hd_income_band_sk = ib.ib_income_band_sk
)
SELECT 
    s.ss_store_sk,
    s.total_sales,
    s.transaction_count,
    c.ca_city,
    c.ca_state,
    c.ca_country,
    d.cd_gender,
    d.cd_marital_status,
    d.income_band_status
FROM 
    SalesHierarchy s
JOIN 
    CustomerAddress c ON s.ss_store_sk = c.ca_address_sk
JOIN 
    Demographics d ON d.cd_demo_sk = s.ss_store_sk
WHERE 
    s.sales_rank <= 5 
    AND d.cd_gender = 'M' 
    AND d.cd_marital_status = 'S'
ORDER BY 
    s.total_sales DESC
LIMIT 10
UNION ALL
SELECT 
    NULL AS ss_store_sk,
    SUM(ss_net_paid) AS total_sales,
    COUNT(ss_ticket_number) AS transaction_count,
    'N/A' AS ca_city,
    'N/A' AS ca_state,
    'Aggregated' AS ca_country,
    NULL AS cd_gender,
    NULL AS cd_marital_status,
    'Total' AS income_band_status
FROM 
    store_sales
WHERE 
    ss_net_paid IS NOT NULL
GROUP BY 
    ss_store_sk;
