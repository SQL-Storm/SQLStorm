
WITH RECURSIVE CustomerHierarchy AS (
    SELECT 
        c.c_customer_sk, 
        c.c_first_name, 
        c.c_last_name, 
        cd.cd_gender, 
        cd.cd_marital_status,
        cd.cd_purchase_estimate,
        0 AS level
    FROM 
        customer c
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    WHERE 
        c.c_birth_month IS NOT NULL 

    UNION ALL 

    SELECT 
        c.c_customer_sk, 
        c.c_first_name, 
        c.c_last_name, 
        cd.cd_gender, 
        cd.cd_marital_status,
        cd.cd_purchase_estimate,
        ch.level + 1
    FROM 
        customer c
    JOIN 
        CustomerHierarchy ch ON c.c_customer_sk = ch.c_customer_sk
    WHERE 
        ch.level < 3
),
TotalReturn AS (
    SELECT 
        sr_customer_sk,
        SUM(sr_return_amt) AS total_return_amt,
        COUNT(sr_ticket_number) AS total_returns
    FROM 
        store_returns
    GROUP BY 
        sr_customer_sk
),
SalesSummary AS (
    SELECT 
        ws_bill_customer_sk AS customer_sk,
        SUM(ws_net_profit) AS total_profit,
        COUNT(ws_order_number) AS total_orders,
        RANK() OVER (PARTITION BY ws_bill_customer_sk ORDER BY SUM(ws_net_profit) DESC) AS profit_rank
    FROM 
        web_sales
    GROUP BY 
        ws_bill_customer_sk
    HAVING 
        COUNT(ws_order_number) > 0
)
SELECT 
    ch.c_customer_sk,
    ch.c_first_name, 
    ch.c_last_name,
    ch.cd_gender,
    ch.cd_marital_status,
    COALESCE(ts.total_return_amt, 0) AS total_return_amt,
    COALESCE(ss.total_profit, 0) AS total_profit,
    CASE 
        WHEN COALESCE(ts.total_return_amt, 0) > COALESCE(ss.total_profit, 0) THEN 'High Return'
        WHEN COALESCE(ts.total_return_amt, 0) <= COALESCE(ss.total_profit, 0) AND COALESCE(ss.total_orders, 0) > 5 THEN 'Loyal Customer'
        ELSE 'Occasional Customer'
    END AS customer_type,
    CASE 
        WHEN ch.cd_purchase_estimate IS NULL THEN 'Unknown'
        WHEN ch.cd_purchase_estimate > 5000 THEN 'High Value'
        ELSE 'Standard Value'
    END AS value_band
FROM 
    CustomerHierarchy ch
LEFT JOIN 
    TotalReturn ts ON ch.c_customer_sk = ts.sr_customer_sk
LEFT JOIN 
    SalesSummary ss ON ch.c_customer_sk = ss.customer_sk
WHERE 
    ch.level < 2
ORDER BY 
    value_band DESC, 
    customer_type ASC,
    CASE 
        WHEN ch.cd_gender = 'M' THEN 0
        WHEN ch.cd_gender = 'F' THEN 1
        ELSE 2 
    END,
    ch.c_first_name;
