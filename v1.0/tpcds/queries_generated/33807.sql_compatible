
WITH RECURSIVE sales_hierarchy AS (
    SELECT 
        s_store_sk,
        SUM(ss_net_profit) AS total_net_profit,
        RANK() OVER (PARTITION BY s_store_sk ORDER BY SUM(ss_net_profit) DESC) AS rank
    FROM 
        store_sales
    GROUP BY 
        s_store_sk
),
customer_sales AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        SUM(ws.ws_net_paid) AS total_spent,
        COUNT(ws.ws_order_number) AS order_count
    FROM 
        customer c
    LEFT JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY 
        c.c_customer_sk, c.c_first_name, c.c_last_name
),
high_value_customers AS (
    SELECT 
        c.c_first_name || ' ' || c.c_last_name AS customer_name, 
        c.total_spent, 
        ch.region
    FROM 
        customer_sales c
    JOIN 
        customer_address ca ON c.c_customer_sk = ca.ca_address_sk
    JOIN (
        SELECT 
            ca.ca_state AS region,
            COUNT(c.c_customer_sk) AS total_customers
        FROM 
            customer_address ca
        JOIN 
            customer c ON ca.ca_address_sk = c.c_current_addr_sk
        GROUP BY 
            ca.ca_state
        HAVING 
            COUNT(c.c_customer_sk) > 10
    ) ch ON ch.region = ca.ca_state
    WHERE 
        c.total_spent > 1000
)
SELECT 
    hvc.customer_name,
    hvc.total_spent,
    sh.total_net_profit,
    COALESCE(sh.rank, 0) AS store_rank
FROM 
    high_value_customers hvc
FULL OUTER JOIN 
    sales_hierarchy sh ON hvc.total_spent = sh.total_net_profit
WHERE 
    hvc.total_spent IS NOT NULL OR sh.total_net_profit IS NOT NULL
ORDER BY 
    hvc.total_spent DESC, store_rank ASC;
