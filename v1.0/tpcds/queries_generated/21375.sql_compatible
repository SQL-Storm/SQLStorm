
WITH RankedSales AS (
    SELECT 
        COALESCE(ws.ws_item_sk, cs.cs_item_sk, ss.ss_item_sk) AS item_id,
        COALESCE(ws.ws_sales_price, cs.cs_sales_price, ss.ss_sales_price) AS sales_price,
        COALESCE(ws.ws_quantity, cs.cs_quantity, ss.ss_quantity) AS quantity,
        ROW_NUMBER() OVER (PARTITION BY COALESCE(ws.ws_item_sk, cs.cs_item_sk, ss.ss_item_sk) 
                           ORDER BY COALESCE(ws.ws_sales_price, cs.cs_sales_price, ss.ss_sales_price) DESC) AS rank
    FROM web_sales ws
    FULL OUTER JOIN catalog_sales cs ON ws.ws_item_sk = cs.cs_item_sk
    FULL OUTER JOIN store_sales ss ON ws.ws_item_sk = ss.ss_item_sk OR cs.cs_item_sk = ss.ss_item_sk
    WHERE (ws.ws_sold_date_sk IS NOT NULL OR cs.cs_sold_date_sk IS NOT NULL OR ss.ss_sold_date_sk IS NOT NULL)
      AND COALESCE(ws.ws_sales_price, cs.cs_sales_price, ss.ss_sales_price) IS NOT NULL
)

SELECT 
    item_id,
    sales_price,
    SUM(quantity) AS total_quantity,
    SUM(CASE WHEN sales_price IS NOT NULL THEN sales_price * quantity ELSE 0 END) AS total_sales_revenue,
    AVG(sales_price) AS avg_sales_price
FROM RankedSales
WHERE rank = 1
GROUP BY item_id, sales_price
HAVING SUM(quantity) > (SELECT AVG(total_qty) 
                        FROM (
                            SELECT COALESCE(ws.ws_item_sk, cs.cs_item_sk, ss.ss_item_sk) AS item_id,
                                   SUM(COALESCE(ws.ws_quantity, 0) + COALESCE(cs.cs_quantity, 0) + COALESCE(ss.ss_quantity, 0)) AS total_qty
                            FROM web_sales ws
                            FULL OUTER JOIN catalog_sales cs ON ws.ws_item_sk = cs.cs_item_sk
                            FULL OUTER JOIN store_sales ss ON ws.ws_item_sk = ss.ss_item_sk OR cs.cs_item_sk = ss.ss_item_sk
                            GROUP BY COALESCE(ws.ws_item_sk, cs.cs_item_sk, ss.ss_item_sk)
                        ) AS subquery)
ORDER BY item_id
