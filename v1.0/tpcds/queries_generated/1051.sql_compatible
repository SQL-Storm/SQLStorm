
WITH CustomerReturns AS (
    SELECT 
        sr_customer_sk,
        SUM(sr_return_quantity) AS total_returned,
        SUM(sr_net_loss) AS total_net_loss
    FROM 
        store_returns
    GROUP BY 
        sr_customer_sk
),
ItemSales AS (
    SELECT 
        ws_item_sk,
        SUM(ws_quantity) AS total_sold,
        SUM(ws_net_profit) AS total_profit
    FROM 
        web_sales
    GROUP BY 
        ws_item_sk
),
TopItems AS (
    SELECT 
        i.i_item_sk,
        i.i_item_desc,
        COALESCE(is.total_sold, 0) AS total_sold,
        COALESCE(is.total_profit, 0) AS total_profit,
        ROW_NUMBER() OVER (ORDER BY COALESCE(is.total_profit, 0) DESC) AS item_rank
    FROM 
        item i
    LEFT JOIN 
        ItemSales is ON i.i_item_sk = is.ws_item_sk
    WHERE 
        i.i_current_price > 0
),
TopCustomers AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cr.total_returned,
        cr.total_net_loss,
        ROW_NUMBER() OVER (ORDER BY cr.total_net_loss DESC) AS customer_rank
    FROM 
        customer c
    LEFT JOIN 
        CustomerReturns cr ON c.c_customer_sk = cr.sr_customer_sk
)
SELECT 
    tc.c_customer_sk,
    tc.c_first_name,
    tc.c_last_name,
    ti.i_item_desc,
    ti.total_sold,
    ti.total_profit,
    tc.total_returned,
    tc.total_net_loss
FROM 
    TopCustomers tc
JOIN 
    TopItems ti ON tc.customer_rank <= 10 AND ti.item_rank <= 10
ORDER BY 
    tc.total_net_loss DESC, ti.total_profit DESC;
