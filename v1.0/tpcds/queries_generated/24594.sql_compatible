
WITH RECURSIVE sales_summary AS (
    SELECT 
        ws_bill_customer_sk,
        SUM(ws_ext_sales_price) AS total_sales,
        COUNT(ws_order_number) AS order_count,
        DENSE_RANK() OVER (PARTITION BY ws_bill_customer_sk ORDER BY SUM(ws_ext_sales_price) DESC) AS sales_rank
    FROM 
        web_sales
    WHERE 
        ws_sold_date_sk BETWEEN (SELECT MIN(d_date_sk) FROM date_dim WHERE d_year = 2022) AND (SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = 2022)
    GROUP BY 
        ws_bill_customer_sk
),
customer_info AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_education_status,
        sa.ca_city,
        sa.ca_state,
        sa.ca_country,
        ss.total_sales,
        ss.order_count,
        COALESCE(ss.sales_rank, 0) AS sales_rank
    FROM 
        customer AS c
    LEFT JOIN 
        customer_demographics AS cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN 
        customer_address AS sa ON c.c_current_addr_sk = sa.ca_address_sk
    LEFT JOIN 
        sales_summary AS ss ON c.c_customer_sk = ss.ws_bill_customer_sk
),
income_summary AS (
    SELECT 
        hd.hd_demo_sk,
        COUNT(DISTINCT c.c_customer_sk) AS customer_count,
        AVG(hd.hd_dep_count) AS average_dependencies,
        COUNT(DISTINCT CASE WHEN hd.hd_income_band_sk IS NOT NULL THEN hd.hd_income_band_sk END) AS income_band_count,
        SUM(ss.total_sales) AS total_income_sales
    FROM 
        household_demographics AS hd
    LEFT JOIN 
        customer AS c ON hd.hd_demo_sk = c.c_current_hdemo_sk
    LEFT JOIN 
        sales_summary AS ss ON c.c_customer_sk = ss.ws_bill_customer_sk
    GROUP BY 
        hd.hd_demo_sk
),
final_output AS (
    SELECT 
        ci.c_first_name,
        ci.c_last_name,
        ci.cd_gender,
        ci.ca_city,
        ci.total_sales,
        ROUND(AVG(is.average_dependencies), 2) AS avg_dependencies,
        COALESCE(is.total_income_sales, 0) AS total_income_sales,
        CASE 
            WHEN ci.sales_rank = 1 THEN 'Top Customer' 
            WHEN ci.sales_rank <= 5 THEN 'High Value Customer'
            ELSE 'Regular Customer'
        END AS customer_category
    FROM 
        customer_info AS ci
    LEFT JOIN 
        income_summary AS is ON ci.c_customer_sk = is.hd_demo_sk
    WHERE
        ci.ca_state IS NOT NULL 
        AND ci.total_sales IS NOT NULL
    GROUP BY 
        ci.c_first_name, ci.c_last_name, ci.cd_gender, ci.ca_city, ci.total_sales, ci.sales_rank
)
SELECT 
    f.c_first_name,
    f.c_last_name,
    f.cd_gender,
    f.ca_city,
    f.total_sales,
    f.avg_dependencies,
    f.total_income_sales,
    f.customer_category,
    CASE 
        WHEN f.total_income_sales < 1000 THEN 'Low Income' 
        WHEN f.total_income_sales BETWEEN 1000 AND 5000 THEN 'Middle Income' 
        ELSE 'High Income'
    END AS income_level
FROM 
    final_output AS f
JOIN 
    income_band AS ib ON ib.ib_lower_bound < f.total_income_sales AND ib.ib_upper_bound >= f.total_income_sales 
ORDER BY 
    f.total_sales DESC, f.c_last_name ASC
LIMIT 50;
