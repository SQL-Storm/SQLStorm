
WITH RECURSIVE cte_sales AS (
    SELECT 
        ws_sold_date_sk,
        COUNT(ws_order_number) AS total_orders,
        SUM(ws_net_paid) AS total_revenue,
        ROW_NUMBER() OVER (PARTITION BY ws_ship_mode_sk ORDER BY SUM(ws_net_paid) DESC) AS order_rank
    FROM 
        web_sales
    WHERE 
        ws_sold_date_sk >= (SELECT MAX(d_date_sk) - 30 FROM date_dim)
    GROUP BY 
        ws_sold_date_sk, ws_ship_mode_sk
), 
cte_customer_info AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_credit_rating,
        RANK() OVER (PARTITION BY cd.cd_gender ORDER BY c.c_birth_year DESC) AS gender_rank
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
), 
cte_inventory_status AS (
    SELECT 
        inv.inv_item_sk,
        SUM(inv.inv_quantity_on_hand) AS total_quantity
    FROM 
        inventory inv
    GROUP BY 
        inv.inv_item_sk
), 
cte_returns AS (
    SELECT 
        sr_item_sk,
        SUM(sr_return_quantity) AS total_returned,
        SUM(sr_return_amt_inc_tax) AS total_returned_amt
    FROM 
        store_returns
    GROUP BY 
        sr_item_sk
)

SELECT 
    c.c_first_name, 
    c.c_last_name,
    ci.total_orders,
    ci.total_revenue,
    ci.total_revenue / NULLIF(ci.total_orders, 0) AS average_order_value,
    cs.total_quantity,
    COALESCE(cr.total_returned, 0) AS total_returned,
    COALESCE(cr.total_returned_amt, 0) AS total_returned_amt,
    cd.cd_gender,
    cd.cd_marital_status
FROM 
    cte_sales ci
JOIN 
    cte_customer_info c ON ci.ws_sold_date_sk = c.c_customer_sk
LEFT JOIN 
    cte_inventory_status cs ON ci.ws_item_sk = cs.inv_item_sk
LEFT JOIN 
    cte_returns cr ON ci.ws_item_sk = cr.sr_item_sk
INNER JOIN 
    customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
WHERE 
    cd.cd_marital_status = 'S' 
    AND ci.order_rank <= 10
ORDER BY 
    ci.total_revenue DESC;
