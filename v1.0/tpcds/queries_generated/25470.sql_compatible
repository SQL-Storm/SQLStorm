
WITH AddressSample AS (
    SELECT
        ca_address_sk,
        CONCAT(ca_street_number, ' ', ca_street_name, ' ', ca_city, ' ', ca_state, ' ', ca_zip) AS full_address,
        LENGTH(CONCAT(ca_street_number, ' ', ca_street_name, ' ', ca_city, ' ', ca_state, ' ', ca_zip)) AS address_length
    FROM
        customer_address
    WHERE
        ca_state IN ('CA', 'NY')
),
Demographics AS (
    SELECT 
        cd_demo_sk,
        cd_gender,
        cd_marital_status,
        cd_education_status,
        cd_purchase_estimate,
        CASE 
            WHEN cd_credit_rating LIKE 'Excellent%' THEN 'High'
            WHEN cd_credit_rating LIKE 'Good%' THEN 'Medium'
            ELSE 'Low'
        END AS credit_band,
        cd_dep_count + cd_dep_employed_count AS total_dependents
    FROM 
        customer_demographics
),
AggregatedData AS (
    SELECT 
        LENGTH(CONCAT(first_name, ' ', last_name)) AS full_name_length,
        d.cd_gender,
        d.cd_marital_status,
        COUNT(c.c_customer_sk) AS customer_count,
        AVG(d.cd_purchase_estimate) AS avg_purchase_estimate,
        AVG(a.address_length) AS avg_address_length
    FROM 
        customer c
    JOIN 
        Demographics d ON c.c_current_cdemo_sk = d.cd_demo_sk
    JOIN 
        AddressSample a ON c.c_current_addr_sk = a.ca_address_sk
    GROUP BY 
        d.cd_gender, d.cd_marital_status
)
SELECT 
    cd_gender,
    cd_marital_status,
    COUNT(customer_count) AS user_category_count,
    AVG(avg_purchase_estimate) AS overall_avg_purchase,
    AVG(full_name_length) AS avg_full_name_length
FROM 
    AggregatedData
GROUP BY 
    cd_gender, cd_marital_status
HAVING 
    COUNT(customer_count) > 10 
ORDER BY 
    overall_avg_purchase DESC;
