
WITH RECURSIVE CustomerHierarchy AS (
    SELECT c_customer_sk, c_first_name, c_last_name, c_current_cdemo_sk, 0 AS level
    FROM customer
    WHERE c_current_cdemo_sk IS NOT NULL
    UNION ALL
    SELECT ch.c_customer_sk, ch.c_first_name, ch.c_last_name, ch.c_current_cdemo_sk, ch_parent.level + 1
    FROM customer ch
    JOIN CustomerHierarchy ch_parent ON ch.c_current_cdemo_sk = ch_parent.c_customer_sk
    WHERE ch.c_customer_sk != ch_parent.c_customer_sk
), TotalSales AS (
    SELECT ss_customer_sk,
           SUM(ss_ext_sales_price) AS total_sales,
           COUNT(DISTINCT ss_item_sk) AS total_items,
           AVG(ss_sales_price) AS avg_sales_price
    FROM store_sales
    GROUP BY ss_customer_sk
), SalesRanked AS (
    SELECT t.ss_customer_sk,
           t.total_sales,
           t.total_items,
           t.avg_sales_price,
           DENSE_RANK() OVER (ORDER BY t.total_sales DESC) AS sales_rank
    FROM TotalSales t
), CustomerDemographics AS (
    SELECT cd.cd_demo_sk,
           cd.cd_gender,
           cd.cd_marital_status,
           cd.cd_purchase_estimate,
           cd.cd_credit_rating
    FROM customer_demographics cd
    WHERE cd.cd_purchase_estimate IS NOT NULL
), CustomerWithSales AS (
    SELECT c.c_customer_sk,
           c.c_first_name,
           c.c_last_name,
           cd.cd_gender,
           cd.cd_purchase_estimate,
           sr.total_sales,
           sr.sales_rank
    FROM customer c
    JOIN SalesRanked sr ON c.c_customer_sk = sr.ss_customer_sk
    JOIN CustomerDemographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
), TopSales AS (
    SELECT c.c_first_name,
           c.c_last_name,
           c.total_sales,
           c.avg_sales_price,
           CASE 
               WHEN c.sales_rank <= 10 THEN 'Top 10'
               ELSE 'Other'
           END AS sales_category
    FROM CustomerWithSales c
    WHERE c.total_sales > (SELECT AVG(total_sales) FROM SalesRanked)
)
SELECT ch.c_first_name, ch.c_last_name, ts.total_sales, ts.sales_category
FROM CustomerHierarchy ch
LEFT JOIN TopSales ts ON ch.c_customer_sk = ts.c_customer_sk
WHERE ch.level = 0
ORDER BY ts.total_sales DESC, ch.c_last_name ASC;
