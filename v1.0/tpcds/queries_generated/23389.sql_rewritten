WITH customer_return_stats AS (
    SELECT 
        sr_customer_sk,
        COUNT(DISTINCT sr_ticket_number) AS return_count,
        SUM(sr_return_amt) AS total_return_amount,
        AVG(sr_return_quantity) AS avg_return_quantity
    FROM 
        store_returns
    GROUP BY 
        sr_customer_sk
), 
customer_info AS (
    SELECT 
        c.c_customer_sk,
        c.c_gender,
        cd.cd_purchase_estimate,
        cd.cd_credit_rating,
        ca.ca_state
    FROM 
        customer c
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN 
        customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
    WHERE 
        cd.cd_purchase_estimate IS NOT NULL 
        OR ca.ca_state IS NOT NULL
), 
top_customers AS (
    SELECT 
        csr.s_customer_sk,
        csr.total_return_amount,
        ci.cd_credit_rating,
        ROW_NUMBER() OVER (PARTITION BY ci.ca_state ORDER BY csr.total_return_amount DESC) AS rn
    FROM 
        customer_return_stats csr
    JOIN 
        customer_info ci ON csr.s_customer_sk = ci.c_customer_sk
)
SELECT 
    tc.c_customer_sk,
    tc.total_return_amount,
    ci.cd_credit_rating,
    ci.ca_state,
    CASE 
        WHEN ci.cd_credit_rating = 'Excellent' THEN 'A'
        WHEN ci.cd_credit_rating = 'Good' THEN 'B'
        WHEN ci.cd_credit_rating IS NULL THEN 'UNKNOWN'
        ELSE 'C'
    END AS credit_grade
FROM 
    top_customers tc
JOIN 
    customer_info ci ON tc.s_customer_sk = ci.c_customer_sk
WHERE 
    tc.rn <= 5 
    AND tc.total_return_amount > (SELECT AVG(total_return_amount) FROM customer_return_stats)
ORDER BY 
    ci.ca_state,
    tc.total_return_amount DESC
LIMIT 10;