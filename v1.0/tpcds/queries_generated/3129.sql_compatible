
WITH customer_sales AS (
    SELECT 
        c.c_customer_sk,
        SUM(ws.ws_ext_sales_price) AS total_sales,
        COUNT(ws.ws_order_number) AS order_count,
        MAX(ws.ws_sold_date_sk) AS last_purchase_date
    FROM 
        customer c
    JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY 
        c.c_customer_sk
),
high_value_customers AS (
    SELECT 
        cs.c_customer_sk,
        cs.total_sales,
        ROW_NUMBER() OVER (ORDER BY cs.total_sales DESC) AS sales_rank
    FROM 
        customer_sales cs
    WHERE 
        cs.total_sales > (SELECT AVG(total_sales) FROM customer_sales)
),
frequent_customers AS (
    SELECT 
        cs.c_customer_sk,
        cs.order_count,
        DENSE_RANK() OVER (ORDER BY cs.order_count DESC) AS frequent_rank
    FROM 
        customer_sales cs
    WHERE 
        cs.order_count > 5
)
SELECT 
    c.c_customer_id,
    ca.ca_city,
    cs.total_sales,
    fc.order_count,
    COALESCE(fc.frequent_rank, 'N/A') AS frequent_rank,
    COALESCE(hv.sales_rank, 'N/A') AS sales_rank,
    CASE 
        WHEN hv.sales_rank IS NOT NULL AND fc.frequent_rank IS NOT NULL THEN 'High Value & Frequent'
        WHEN hv.sales_rank IS NOT NULL THEN 'High Value Only'
        WHEN fc.frequent_rank IS NOT NULL THEN 'Frequent Only'
        ELSE 'Neither'
    END AS customer_category
FROM 
    customer c
LEFT JOIN 
    customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
LEFT JOIN 
    high_value_customers hv ON c.c_customer_sk = hv.c_customer_sk
LEFT JOIN 
    frequent_customers fc ON c.c_customer_sk = fc.c_customer_sk
WHERE 
    ca.ca_state = 'CA' AND
    (hv.sales_rank IS NOT NULL OR fc.frequent_rank IS NOT NULL)
ORDER BY 
    cs.total_sales DESC;
