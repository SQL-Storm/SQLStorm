
WITH RECURSIVE sales_summary AS (
    SELECT 
        ws_item_sk,
        SUM(ws_quantity) AS total_quantity,
        SUM(ws_ext_sales_price) AS total_sales
    FROM 
        web_sales
    GROUP BY 
        ws_item_sk
    HAVING 
        SUM(ws_quantity) > 0

    UNION ALL

    SELECT 
        cs_item_sk,
        SUM(cs_quantity) + s.total_quantity AS total_quantity,
        SUM(cs_ext_sales_price) + s.total_sales AS total_sales
    FROM 
        catalog_sales cs
    JOIN 
        sales_summary s ON cs_item_sk = s.ws_item_sk
    GROUP BY 
        cs_item_sk, s.total_quantity, s.total_sales
    HAVING 
        SUM(cs_quantity) > 0
),
filtered_sales AS (
    SELECT 
        ss.ws_item_sk,
        ss.total_quantity,
        ss.total_sales,
        ROW_NUMBER() OVER (PARTITION BY ss.ws_item_sk ORDER BY ss.total_sales DESC) AS sales_rank
    FROM 
        sales_summary ss
),
item_details AS (
    SELECT 
        i.i_item_sk,
        i.i_product_name,
        i.i_category,
        COALESCE(p.p_promo_name, 'No Promotion') AS promo_name
    FROM 
        item i
    LEFT JOIN 
        promotion p ON i.i_item_sk = p.p_item_sk
),
customer_info AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
)
SELECT 
    id.i_item_sk,
    id.i_product_name,
    id.i_category,
    id.promo_name,
    fs.total_quantity,
    fs.total_sales,
    ci.c_first_name,
    ci.c_last_name,
    ci.cd_gender,
    ci.cd_marital_status
FROM 
    filtered_sales fs
JOIN 
    item_details id ON fs.ws_item_sk = id.i_item_sk
JOIN 
    customer_info ci ON ci.c_customer_sk = (SELECT cs.cs_bill_customer_sk FROM catalog_sales cs WHERE cs.cs_item_sk = fs.ws_item_sk LIMIT 1)
WHERE 
    fs.sales_rank <= 10
ORDER BY 
    fs.total_sales DESC;
