
WITH ranked_sales AS (
    SELECT 
        ws.bill_customer_sk,
        ws.bill_cdemo_sk,
        COUNT(*) AS total_orders,
        SUM(ws.net_paid_inc_tax) AS total_revenue,
        ROW_NUMBER() OVER (PARTITION BY ws.bill_customer_sk ORDER BY SUM(ws.net_paid_inc_tax) DESC) AS rank
    FROM web_sales ws
    JOIN customer c ON ws.bill_customer_sk = c.c_customer_sk
    WHERE c.c_birth_year BETWEEN 1980 AND 1990
    GROUP BY ws.bill_customer_sk, ws.bill_cdemo_sk
), 
return_stats AS (
    SELECT 
        wr.returning_customer_sk,
        SUM(CASE WHEN wr.return_quantity > 0 THEN wr.return_amt ELSE 0 END) AS total_return_amount,
        COUNT(DISTINCT wr.order_number) AS return_count,
        AVG(wr.return_quantity) AS avg_return_qty
    FROM web_returns wr
    GROUP BY wr.returning_customer_sk
)
SELECT 
    c.c_customer_id,
    SUM(rs.total_orders) AS total_orders,
    COALESCE(SUM(rs.total_revenue), 0) AS total_revenue,
    COALESCE(r.total_return_amount, 0) AS total_return_amount,
    COALESCE(r.return_count, 0) AS return_count
FROM customer c
LEFT JOIN ranked_sales rs ON c.c_customer_sk = rs.bill_customer_sk
LEFT JOIN return_stats r ON c.c_customer_sk = r.returning_customer_sk
WHERE c.c_current_addr_sk IS NOT NULL
GROUP BY c.c_customer_id, r.total_return_amount, r.return_count
HAVING SUM(rs.total_orders) > 5
ORDER BY total_revenue DESC
LIMIT 10;
