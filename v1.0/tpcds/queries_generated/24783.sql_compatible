
WITH RankedSales AS (
    SELECT 
        ws.web_site_id,
        SUM(ws.ws_quantity) AS total_quantity,
        SUM(ws.ws_ext_sales_price) AS total_sales,
        RANK() OVER (PARTITION BY ws.web_site_id ORDER BY SUM(ws.ws_ext_sales_price) DESC) AS sales_rank
    FROM 
        web_sales ws
    JOIN 
        date_dim d ON ws.ws_sold_date_sk = d.d_date_sk
    WHERE 
        d.d_year = 2023 
        AND d.d_moy BETWEEN 1 AND 6
    GROUP BY 
        ws.web_site_id
),
TopSites AS (
    SELECT 
        web_site_id
    FROM 
        RankedSales
    WHERE 
        sales_rank <= 5
),
ReturnedSales AS (
    SELECT 
        ws.web_site_id,
        COUNT(DISTINCT wr.wr_order_number) AS total_returns,
        SUM(wr.wr_return_amt) AS total_return_amount
    FROM 
        web_returns wr
    JOIN 
        web_sales ws ON wr.wr_item_sk = ws.ws_item_sk
    WHERE 
        ws.ws_sold_date_sk IS NOT NULL
        AND ws.ws_ship_date_sk IS NOT NULL
    GROUP BY 
        ws.web_site_id
),
SalesAnalytics AS (
    SELECT 
        ts.web_site_id,
        rs.total_returns,
        rs.total_return_amount,
        COALESCE(ROUND(rs.total_return_amount / NULLIF(s.total_sales, 0), 2), 0.00) AS return_percentage
    FROM 
        TopSites ts 
    LEFT JOIN 
        ReturnedSales rs ON ts.web_site_id = rs.web_site_id
    LEFT JOIN 
        RankedSales s ON ts.web_site_id = s.web_site_id
)
SELECT 
    sa.web_site_id,
    sa.total_returns,
    sa.total_return_amount,
    CASE 
        WHEN sa.return_percentage > 0.2 THEN 'High Return' 
        WHEN sa.return_percentage BETWEEN 0.1 AND 0.2 THEN 'Moderate Return' 
        ELSE 'Low Return' 
    END AS return_category
FROM 
    SalesAnalytics sa
WHERE 
    sa.return_percentage IS NOT NULL
ORDER BY 
    sa.total_return_amount DESC;
