
WITH CustomerReturns AS (
    SELECT 
        sr_returning_customer_sk, 
        SUM(sr_return_quantity) AS total_returned,
        COUNT(DISTINCT sr_ticket_number) AS total_transactions,
        SUM(sr_return_amt_inc_tax) AS total_return_amount
    FROM 
        store_returns
    WHERE 
        sr_returned_date_sk IN (SELECT d_date_sk FROM date_dim WHERE d_year = 2022)
    GROUP BY 
        sr_returning_customer_sk
), 
CustomerDemographics AS (
    SELECT 
        cd.cd_demo_sk,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_education_status,
        COALESCE(hd.hd_income_band_sk, -1) AS income_band
    FROM 
        customer_demographics cd
    LEFT JOIN 
        household_demographics hd ON cd.cd_demo_sk = hd.hd_demo_sk
), 
RankedReturns AS (
    SELECT 
        cr.sr_returning_customer_sk AS returning_customer_sk,
        cr.total_returned,
        cr.total_transactions,
        cr.total_return_amount,
        ROW_NUMBER() OVER (PARTITION BY cr.sr_returning_customer_sk ORDER BY cr.total_return_amount DESC) AS rn
    FROM 
        CustomerReturns cr
)
SELECT 
    cu.c_customer_id,
    cu.c_first_name,
    cu.c_last_name,
    cd.cd_gender,
    cd.income_band,
    CASE 
        WHEN cu.c_birth_day IS NULL OR cu.c_birth_month IS NULL THEN 'No Birthday Info'
        ELSE CONCAT(cu.c_birth_day, '-', cu.c_birth_month, '-', cu.c_birth_year) 
    END AS birth_date,
    rr.total_returned,
    rr.total_transactions,
    rr.total_return_amount
FROM 
    customer cu
LEFT JOIN 
    CustomerDemographics cd ON cu.c_current_cdemo_sk = cd.cd_demo_sk
LEFT JOIN 
    RankedReturns rr ON cu.c_customer_sk = rr.returning_customer_sk AND rr.rn = 1
WHERE 
    cd.cd_gender = 'F'
    AND (rr.total_returned IS NOT NULL OR rr.total_transactions IS NOT NULL)
ORDER BY 
    rr.total_return_amount DESC
LIMIT 50;
