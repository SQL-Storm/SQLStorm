
WITH sales_summary AS (
    SELECT 
        ws_ship_date_sk, 
        ws_item_sk, 
        SUM(ws_quantity) AS total_quantity, 
        SUM(ws_net_paid) AS total_net_paid
    FROM 
        web_sales
    WHERE 
        ws_ship_date_sk >= (SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = 2023)
    GROUP BY 
        ws_ship_date_sk, ws_item_sk
),
top_selling_items AS (
    SELECT 
        ss.ss_item_sk,
        SUM(ss.ss_quantity) AS total_quantity
    FROM 
        store_sales ss
    JOIN 
        customer c ON ss.ss_customer_sk = c.c_customer_sk
    WHERE 
        c.c_birth_year > 1980
    GROUP BY 
        ss.ss_item_sk
    HAVING 
        SUM(ss.ss_quantity) > 100
),
customer_totals AS (
    SELECT 
        cd.cd_demo_sk,
        COUNT(c.c_customer_sk) AS customer_count,
        SUM(COALESCE(cd.cd_purchase_estimate, 0)) AS total_estimated_purchases
    FROM 
        customer_demographics cd
    LEFT JOIN 
        customer c ON cd.cd_demo_sk = c.c_current_cdemo_sk
    GROUP BY 
        cd.cd_demo_sk
),
inventory_check AS (
    SELECT 
        i.i_item_sk,
        SUM(i.inv_quantity_on_hand) AS total_inventory
    FROM 
        inventory i
    WHERE 
        i.inv_date_sk = (SELECT MAX(inv_date_sk) FROM inventory)
    GROUP BY 
        i.i_item_sk
)
SELECT 
    item.i_item_id,
    item.i_product_name,
    COALESCE(ss.total_quantity, 0) AS web_sales_quantity,
    COALESCE(inv.total_inventory, 0) AS inventory_quantity,
    COALESCE(ct.total_estimated_purchases, 0) AS estimated_purchases,
    CASE 
        WHEN COALESCE(ss.total_quantity, 0) > COALESCE(inv.total_inventory, 0) THEN 'Low Stock'
        ELSE 'In Stock'
    END AS stock_status
FROM 
    item
LEFT JOIN 
    sales_summary ss ON item.i_item_sk = ss.ws_item_sk
LEFT JOIN 
    inventory_check inv ON item.i_item_sk = inv.i_item_sk
LEFT JOIN 
    customer_totals ct ON item.i_item_sk IN (SELECT ti.ss_item_sk FROM top_selling_items ti)
WHERE 
    item.i_current_price > (SELECT AVG(i_current_price) FROM item) 
    AND item.i_item_sk IS NOT NULL
ORDER BY 
    total_net_paid DESC NULLS LAST
LIMIT 100;
