
WITH RECURSIVE customer_hierarchy AS (
    SELECT c_customer_sk, c_first_name, c_last_name, c_current_cdemo_sk, 1 AS level
    FROM customer
    WHERE c_current_cdemo_sk IS NOT NULL
    UNION ALL
    SELECT c.c_customer_sk, c.c_first_name, c.c_last_name, c.c_current_cdemo_sk, ch.level + 1
    FROM customer c
    JOIN customer_hierarchy ch ON c.c_current_cdemo_sk = ch.c_customer_sk
),
daily_sales AS (
    SELECT 
        d.d_date,
        SUM(ws.ws_sales_price * ws.ws_quantity) AS total_sales
    FROM 
        date_dim d 
    JOIN 
        web_sales ws ON d.d_date_sk = ws.ws_sold_date_sk
    GROUP BY 
        d.d_date
),
customer_demographics AS (
    SELECT 
        cd.cd_demo_sk,
        COUNT(c.c_customer_sk) AS customer_count,
        AVG(cd.cd_purchase_estimate) AS avg_purchase,
        MAX(cd.cd_dep_count) AS max_dependents
    FROM 
        customer_demographics cd
    LEFT JOIN 
        customer c ON c.c_current_cdemo_sk = cd.cd_demo_sk
    GROUP BY 
        cd.cd_demo_sk
),
item_sales AS (
    SELECT 
        i.i_item_sk, 
        SUM(ws.ws_quantity) AS total_quantity,
        AVG(ws.ws_sales_price) AS avg_price
    FROM 
        item i
    JOIN 
        web_sales ws ON i.i_item_sk = ws.ws_item_sk
    GROUP BY 
        i.i_item_sk
)
SELECT 
    ch.c_first_name,
    ch.c_last_name,
    d.total_sales,
    cd.customer_count,
    cd.avg_purchase,
    cd.max_dependents,
    i.total_quantity,
    i.avg_price
FROM 
    customer_hierarchy ch
JOIN 
    daily_sales d ON d.d_date = DATE '2002-10-01'
JOIN 
    customer_demographics cd ON ch.c_current_cdemo_sk = cd.cd_demo_sk
LEFT JOIN 
    item_sales i ON ch.c_customer_sk = i.i_item_sk
WHERE 
    (cd.avg_purchase > 500 OR cd.customer_count > 100)
    AND COALESCE(i.total_quantity, 0) > 0
ORDER BY 
    ch.c_last_name, ch.c_first_name;
