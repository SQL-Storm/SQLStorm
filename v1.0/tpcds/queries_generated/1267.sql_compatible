
WITH sales_summary AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        SUM(ws.ws_ext_sales_price) AS total_web_sales,
        COUNT(ws.ws_order_number) AS order_count,
        PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY ws.ws_sales_price) OVER (PARTITION BY c.c_customer_sk) AS median_sale_price,
        MAX(ws.ws_sales_price) AS max_sale_price,
        MIN(ws.ws_sales_price) AS min_sale_price,
        CASE 
            WHEN SUM(ws.ws_sales_price) IS NULL THEN 'No Sales'
            WHEN SUM(ws.ws_sales_price) < 100 THEN 'Low Value Customer'
            ELSE 'Valuable Customer'
        END AS customer_category
    FROM 
        customer c
    LEFT JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    WHERE 
        cd.cd_marital_status = 'M'
        AND cd.cd_gender = 'F'
        AND cd.cd_purchase_estimate > 50
    GROUP BY 
        c.c_customer_sk, c.c_first_name, c.c_last_name
),
date_range AS (
    SELECT 
        d.d_date_sk
    FROM 
        date_dim d
    WHERE 
        d.d_date BETWEEN '2023-01-01' AND '2023-12-31'
),
inventory_info AS (
    SELECT 
        inv.inv_item_sk,
        SUM(inv.inv_quantity_on_hand) AS total_inventory
    FROM 
        inventory inv
    WHERE 
        inv.inv_date_sk IN (SELECT d.d_date_sk FROM date_range)
    GROUP BY 
        inv.inv_item_sk
)
SELECT 
    ss.c_first_name,
    ss.c_last_name,
    ss.total_web_sales,
    ss.order_count,
    ss.median_sale_price,
    ii.total_inventory,
    ss.customer_category
FROM 
    sales_summary ss
LEFT JOIN 
    inventory_info ii ON ss.c_customer_sk = ii.inv_item_sk 
WHERE 
    ss.total_web_sales > 1000
ORDER BY 
    ss.total_web_sales DESC
FETCH FIRST 100 ROWS ONLY;
