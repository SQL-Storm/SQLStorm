
WITH CustomerOrders AS (
    SELECT
        c.c_customer_id,
        SUM(ws.ws_net_paid) AS total_spent,
        COUNT(ws.ws_order_number) AS order_count
    FROM customer c
    JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY c.c_customer_id
),
TopCustomers AS (
    SELECT
        c.c_customer_id,
        co.total_spent,
        co.order_count,
        ROW_NUMBER() OVER (ORDER BY co.total_spent DESC) AS rank
    FROM CustomerOrders co
    JOIN customer c ON c.c_customer_id = co.c_customer_id
    WHERE co.order_count > 5
),
RecentReturns AS (
    SELECT
        sr.sr_customer_sk,
        COUNT(*) AS return_count,
        SUM(sr.sr_return_amt) AS total_returned
    FROM store_returns sr
    WHERE sr.sr_returned_date_sk >= (SELECT MAX(d.d_date_sk) - 30 FROM date_dim d)
    GROUP BY sr.sr_customer_sk
),
FinalResults AS (
    SELECT
        tc.c_customer_id,
        tc.total_spent,
        tc.order_count,
        COALESCE(rr.return_count, 0) AS return_count,
        COALESCE(rr.total_returned, 0) AS total_returned,
        CASE 
            WHEN rr.return_count > 0 THEN 'High Return'
            ELSE 'Low Return'
        END AS return_category
    FROM TopCustomers tc
    LEFT JOIN RecentReturns rr ON rr.sr_customer_sk = tc.c_customer_id
)

SELECT
    fr.c_customer_id,
    fr.total_spent,
    fr.order_count,
    fr.return_count,
    fr.total_returned,
    fr.return_category,
    CASE 
        WHEN fr.total_spent > 1000 THEN 'Platinum'
        WHEN fr.total_spent BETWEEN 500 AND 1000 THEN 'Gold'
        WHEN fr.total_spent BETWEEN 100 AND 500 THEN 'Silver'
        ELSE 'Bronze'
    END AS customer_tier
FROM FinalResults fr
ORDER BY fr.total_spent DESC;
