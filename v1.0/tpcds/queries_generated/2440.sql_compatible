
WITH RankedSales AS (
    SELECT 
        ws.ws_sold_date_sk,
        ws.ws_item_sk,
        ws.ws_quantity,
        SUM(ws.ws_net_profit) OVER (PARTITION BY ws.ws_item_sk ORDER BY ws.ws_sold_date_sk) AS cumulative_profit,
        DENSE_RANK() OVER (PARTITION BY ws.ws_item_sk ORDER BY ws.ws_net_profit DESC) AS profit_rank
    FROM 
        web_sales ws
    WHERE 
        ws.ws_sold_date_sk >= (SELECT MAX(d.d_date_sk) FROM date_dim d WHERE d.d_year = 2023)
),
TopProfitableItems AS (
    SELECT 
        rs.ws_item_sk,
        rs.cumulative_profit
    FROM 
        RankedSales rs
    WHERE 
        rs.profit_rank = 1
)
SELECT 
    i.i_item_id,
    i.i_item_desc,
    COALESCE(ts.cumulative_profit, 0) AS total_profit,
    ca.ca_city,
    ca.ca_state,
    COUNT(DISTINCT c.c_customer_id) AS returning_customers,
    SUM(ws.ws_quantity) AS total_sold
FROM 
    item i
LEFT JOIN 
    TopProfitableItems ts ON i.i_item_sk = ts.ws_item_sk
LEFT JOIN 
    web_sales ws ON i.i_item_sk = ws.ws_item_sk
LEFT JOIN 
    customer c ON ws.ws_bill_customer_sk = c.c_customer_sk
LEFT JOIN 
    customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
GROUP BY 
    i.i_item_sk, i.i_item_id, i.i_item_desc, ca.ca_city, ca.ca_state
HAVING 
    SUM(ws.ws_quantity) > 100
ORDER BY 
    total_profit DESC
FETCH FIRST 10 ROWS ONLY;
