
WITH RECURSIVE SalesCTE AS (
    SELECT 
        ws.web_site_id,
        SUM(ws.ws_ext_sales_price) AS total_sales,
        ROW_NUMBER() OVER (PARTITION BY ws.web_site_id ORDER BY SUM(ws.ws_ext_sales_price) DESC) AS sales_rank
    FROM 
        web_sales ws
    WHERE 
        ws.ws_sold_date_sk BETWEEN 1000 AND 2000
    GROUP BY 
        ws.web_site_id
),
CustomerCTE AS (
    SELECT 
        c.c_customer_id,
        c.c_current_cdemo_sk,
        cd.cd_gender,
        ci.income_band AS customer_income_band,
        COUNT(CASE WHEN ws.ws_order_number IS NOT NULL THEN 1 END) AS total_orders,
        COUNT(ws.ws_order_number) FILTER (WHERE ws.ws_ext_sales_price > 100) AS high_value_orders
    FROM 
        customer c
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN 
        store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    LEFT JOIN 
        inventory inv ON ss.ss_item_sk = inv.inv_item_sk
    LEFT JOIN 
        income_band ci ON cd.cd_purchase_estimate BETWEEN ci.ib_lower_bound AND ci.ib_upper_bound
    LEFT JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_customer_sk
    GROUP BY 
        c.c_customer_id, c.c_current_cdemo_sk, cd.cd_gender, ci.income_band
),
FinalSales AS (
    SELECT 
        s.web_site_id,
        c.customer_income_band,
        SUM(s.total_sales) AS total_sales_by_site
    FROM 
        SalesCTE s
    INNER JOIN 
        CustomerCTE c ON c.total_orders > 0
    GROUP BY 
        s.web_site_id, c.customer_income_band
)
SELECT 
    f.web_site_id,
    f.customer_income_band,
    f.total_sales_by_site,
    RANK() OVER (PARTITION BY f.customer_income_band ORDER BY f.total_sales_by_site DESC) AS income_band_rank
FROM 
    FinalSales f
WHERE 
    f.total_sales_by_site > (SELECT AVG(total_sales_by_site) FROM FinalSales) 
ORDER BY 
    f.customer_income_band, f.total_sales_by_site DESC
LIMIT 100;
