
WITH SalesData AS (
    SELECT 
        ws.web_site_sk,
        SUM(ws.ws_net_paid) AS TotalSales,
        COUNT(ws.ws_order_number) AS OrderCount,
        AVG(ws.ws_net_paid_inc_tax) AS AvgOrderValue,
        RANK() OVER (PARTITION BY ws.web_site_sk ORDER BY SUM(ws.ws_net_paid) DESC) AS SalesRank
    FROM 
        web_sales ws
    INNER JOIN 
        web_site ws_site ON ws.ws_web_site_sk = ws_site.web_site_sk
    GROUP BY 
        ws.web_site_sk
),
CustomerAnalytics AS (
    SELECT 
        c.c_customer_sk,
        cd.cd_gender,
        CASE 
            WHEN cd.cd_marital_status = 'M' THEN 'Married'
            WHEN cd.cd_marital_status = 'S' THEN 'Single'
            ELSE 'Other'
        END AS MaritalStatus,
        COUNT(DISTINCT ws.ws_order_number) AS TotalOrders,
        SUM(ws.ws_net_paid) AS TotalSpent,
        AVG(ws.ws_net_paid) AS AvgSpendPerOrder
    FROM 
        customer c
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY 
        c.c_customer_sk, cd.cd_gender, cd.cd_marital_status
),
TopCustomers AS (
    SELECT 
        ca.c_customer_sk,
        ca.TotalSpent,
        ca.AvgSpendPerOrder,
        RANK() OVER (ORDER BY ca.TotalSpent DESC) AS CustomerRank
    FROM 
        CustomerAnalytics ca
)
SELECT 
    sd.web_site_sk,
    sd.TotalSales,
    sd.OrderCount,
    sd.AvgOrderValue,
    tc.c_customer_sk,
    tc.TotalSpent,
    tc.AvgSpendPerOrder,
    tc.CustomerRank
FROM 
    SalesData sd
FULL OUTER JOIN 
    TopCustomers tc ON sd.web_site_sk = (SELECT web_site_sk FROM web_site WHERE web_name LIKE '%Shop%')
WHERE 
    tc.TotalSpent IS NOT NULL OR sd.TotalSales IS NOT NULL
ORDER BY 
    sd.TotalSales DESC, tc.TotalSpent DESC;
