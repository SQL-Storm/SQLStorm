
WITH RankedSales AS (
    SELECT 
        ws.ws_item_sk,
        SUM(ws.ws_quantity) AS total_quantity,
        SUM(ws.ws_net_profit) AS total_net_profit,
        DENSE_RANK() OVER (PARTITION BY ws.ws_item_sk ORDER BY SUM(ws.ws_net_profit) DESC) AS sales_rank
    FROM 
        web_sales ws
    JOIN 
        item i ON ws.ws_item_sk = i.i_item_sk
    WHERE 
        i.i_current_price > 0
        AND ws.ws_sold_date_sk BETWEEN (SELECT MAX(d_date_sk) FROM date_dim) - 30 AND (SELECT MAX(d_date_sk) FROM date_dim)
    GROUP BY 
        ws.ws_item_sk
), 
CustomerDemographics AS (
    SELECT 
        cd.cd_demo_sk,
        cd.cd_gender,
        cd.cd_marital_status,
        COUNT(DISTINCT c.c_customer_sk) AS customer_count
    FROM 
        customer c
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    GROUP BY 
        cd.cd_demo_sk, cd.cd_gender, cd.cd_marital_status
), 
SalesAndDemographics AS (
    SELECT 
        r.ws_item_sk,
        r.total_quantity,
        r.total_net_profit,
        cd.cd_gender,
        cd.cd_marital_status
    FROM 
        RankedSales r
    LEFT JOIN 
        web_sales ws ON r.ws_item_sk = ws.ws_item_sk
    LEFT JOIN 
        CustomerDemographics cd ON ws.ws_bill_cdemo_sk = cd.cd_demo_sk
)
SELECT 
    item.i_item_id,
    COALESCE(SUM(sad.total_quantity), 0) AS total_quantity_sold,
    COALESCE(SUM(sad.total_net_profit), 0) AS total_net_profit,
    cd.cd_gender,
    cd.cd_marital_status
FROM 
    item
LEFT JOIN 
    SalesAndDemographics sad ON item.i_item_sk = sad.ws_item_sk
LEFT JOIN 
    customer_demographics cd ON cd.cd_demo_sk IN (SELECT DISTINCT ws.ws_bill_cdemo_sk FROM web_sales ws WHERE ws.ws_item_sk = item.i_item_sk)
WHERE 
    item.i_current_price IS NOT NULL
GROUP BY 
    item.i_item_id, cd.cd_gender, cd.cd_marital_status
HAVING 
    COALESCE(SUM(sad.total_net_profit), 0) > 500
ORDER BY 
    total_net_profit DESC
FETCH FIRST 10 ROWS ONLY;
