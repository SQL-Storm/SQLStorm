
WITH RECURSIVE sales_hierarchy AS (
    SELECT ss_store_sk, ss_sold_date_sk, SUM(ss_net_profit) AS total_profit
    FROM store_sales
    WHERE ss_sold_date_sk >= (SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = 2023)
    GROUP BY ss_store_sk, ss_sold_date_sk
    UNION ALL
    SELECT s.ss_store_sk, s.ss_sold_date_sk, SUM(s.ss_net_profit) + sh.total_profit
    FROM store_sales s
    JOIN sales_hierarchy sh ON s.ss_store_sk = sh.ss_store_sk
    WHERE s.ss_sold_date_sk < sh.ss_sold_date_sk
    GROUP BY s.ss_store_sk, s.ss_sold_date_sk, sh.total_profit
),
total_returns AS (
    SELECT sr_customer_sk, SUM(sr_return_amt) AS total_return_amount
    FROM store_returns
    GROUP BY sr_customer_sk
),
store_profit AS (
    SELECT s.s_store_id, sh.ss_sold_date_sk, 
           SUM(sh.total_profit) AS store_total_profit, 
           COALESCE(tr.total_return_amount, 0) AS total_return_amount,
           (SUM(sh.total_profit) - COALESCE(tr.total_return_amount, 0)) AS net_profit
    FROM sales_hierarchy sh
    JOIN store s ON sh.ss_store_sk = s.s_store_sk
    LEFT JOIN total_returns tr ON s.s_store_sk = tr.sr_customer_sk
    GROUP BY s.s_store_id, sh.ss_sold_date_sk
)
SELECT s_store_id, ss_sold_date_sk, store_total_profit, total_return_amount, net_profit,
       RANK() OVER (PARTITION BY ss_sold_date_sk ORDER BY net_profit DESC) AS store_rank,
       CONCAT('Store ', s_store_id, ' | Date: ', TO_CHAR(CAST(ss_sold_date_sk AS TEXT), 'YYYY-MM-DD'), 
              ' | Profit: ', ROUND(net_profit, 2)) AS profit_summary
FROM store_profit
WHERE net_profit > 0
ORDER BY ss_sold_date_sk, store_rank;
