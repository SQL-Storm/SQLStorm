
WITH AddressDetails AS (
    SELECT 
        ca_address_sk,
        CONCAT(ca_street_number, ' ', ca_street_name, ' ', ca_street_type) AS full_address,
        ca_city,
        ca_state,
        ca_zip
    FROM 
        customer_address
),
CustomerDiscounts AS (
    SELECT 
        c.c_customer_sk,
        COALESCE(CASE 
            WHEN cd.credit_rating IS NULL THEN 'unknown' 
            ELSE cd.credit_rating END, 'No Credit') AS adjusted_credit_rating,
        SUM(CASE 
            WHEN cd_marital_status = 'M' THEN 10 
            WHEN cd_marital_status = 'S' THEN 5 
            ELSE 0 
            END) AS discount_points
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    GROUP BY 
        c.c_customer_sk, cd.credit_rating
),
WebSalesData AS (
    SELECT 
        ws.ws_bill_customer_sk,
        SUM(ws.ws_ext_sales_price) AS total_sales,
        COUNT(ws.ws_order_number) AS order_count
    FROM 
        web_sales ws
    GROUP BY 
        ws.ws_bill_customer_sk
),
FinalReport AS (
    SELECT
        cd.c_customer_sk,
        ad.full_address,
        COALESCE(cs.total_sales, 0) AS total_sales,
        COALESCE(cs.order_count, 0) AS order_count,
        cd.discount_points,
        CASE 
            WHEN cd.adjusted_credit_rating = 'No Credit' AND cd.discount_points > 0 THEN 'Qualifier'
            WHEN COALESCE(cs.total_sales, 0) > 1000 THEN 'High Roller'
            WHEN cd.discount_points < 5 THEN 'Frequent User' 
            ELSE 'Standard User' 
        END AS customer_segment
    FROM 
        CustomerDiscounts cd
    LEFT JOIN 
        AddressDetails ad ON cd.c_customer_sk = ad.ca_address_sk
    LEFT JOIN 
        WebSalesData cs ON cd.c_customer_sk = cs.ws_bill_customer_sk
)
SELECT 
    customer_segment,
    COUNT(*) AS customer_count,
    AVG(total_sales) AS average_sales,
    MAX(order_count) AS max_orders,
    MIN(COALESCE(discount_points, 0)) AS min_discount_points
FROM 
    FinalReport
GROUP BY 
    customer_segment
ORDER BY 
    customer_segment DESC
WITH ROLLUP;
