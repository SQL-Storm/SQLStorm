WITH RECURSIVE CustomerHierarchy AS (
    SELECT c.c_customer_sk, 
           c.c_customer_id,
           cd.cd_gender,
           cd.cd_marital_status,
           cd.cd_purchase_estimate,
           cd.cd_credit_rating,
           cd.cd_dep_count,
           cd.cd_dep_employed_count,
           cd.cd_dep_college_count,
           LEVEL AS hierarchy_level
    FROM customer c
    LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    WHERE c.c_customer_sk IS NOT NULL
    
    UNION ALL
    
    SELECT ch.c_customer_sk,
           ch.c_customer_id,
           cd.cd_gender,
           cd.cd_marital_status,
           cd.cd_purchase_estimate,
           cd.cd_credit_rating,
           cd.cd_dep_count,
           cd.cd_dep_employed_count,
           cd.cd_dep_college_count,
           LEVEL + 1
    FROM CustomerHierarchy ch
    JOIN customer c ON c.c_current_cdemo_sk = ch.c_customer_sk
    LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
)
SELECT
    ca.ca_city,
    COUNT(DISTINCT c.c_customer_id) AS total_customers,
    COUNT(DISTINCT CASE WHEN cd.cd_gender = 'F' THEN c.c_customer_id END) AS female_customers,
    COUNT(DISTINCT CASE WHEN cd.cd_gender = 'M' THEN c.c_customer_id END) AS male_customers,
    AVG(cd.cd_purchase_estimate) AS avg_purchase_estimate,
    SUM(CASE WHEN cd.cd_marital_status = 'M' THEN cd.cd_dep_count ELSE 0 END) AS total_dependents_married,
    SUM(CASE WHEN cd.cd_marital_status = 'S' THEN cd.cd_dep_count ELSE 0 END) AS total_dependents_single,
    MAX(cd.cd_purchase_estimate) OVER (PARTITION BY ca.ca_city ORDER BY ca.ca_city) AS max_purchase_city
FROM customer c
JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
LEFT JOIN customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
WHERE ca.ca_city IS NOT NULL
GROUP BY ca.ca_city
HAVING COUNT(DISTINCT c.c_customer_id) > 10
ORDER BY total_customers DESC
LIMIT 50;