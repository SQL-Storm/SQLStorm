
WITH RECURSIVE CustomerHierarchy AS (
    SELECT 
        c.c_customer_sk, 
        c.c_first_name, 
        c.c_last_name, 
        cd.cd_demo_sk, 
        cd.cd_gender, 
        cd.cd_marital_status, 
        cd.cd_purchase_estimate, 
        cd.cd_credit_rating,
        0 AS level
    FROM customer c
    JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    WHERE cd.cd_gender = 'F' AND cd.cd_purchase_estimate > 1000

    UNION ALL

    SELECT 
        c.c_customer_sk, 
        c.c_first_name, 
        c.c_last_name, 
        cd.cd_demo_sk, 
        cd.cd_gender, 
        cd.cd_marital_status, 
        cd.cd_purchase_estimate, 
        cd.cd_credit_rating,
        ch.level + 1
    FROM customer c
    JOIN CustomerHierarchy ch ON c.c_current_cdemo_sk = ch.cd_demo_sk
    JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    WHERE cd.cd_purchase_estimate IS NOT NULL
)

SELECT 
    ch.c_customer_sk,
    CONCAT(ch.c_first_name, ' ', ch.c_last_name) AS full_name,
    ch.cd_gender,
    ch.cd_marital_status,
    SUM(ws.ws_net_paid) AS total_spent,
    COUNT(DISTINCT ws.ws_order_number) AS total_orders,
    FIRST_VALUE(ws.ws_ext_sales_price) OVER (PARTITION BY ch.c_customer_sk ORDER BY ws.ws_sold_date_sk DESC) AS last_order_value,
    MAX(ws.ws_sold_date_sk) AS last_purchase_date
FROM CustomerHierarchy ch
LEFT JOIN web_sales ws ON ch.c_customer_sk = ws.ws_bill_customer_sk
GROUP BY 
    ch.c_customer_sk, 
    ch.c_first_name, 
    ch.c_last_name, 
    ch.cd_gender, 
    ch.cd_marital_status
HAVING 
    SUM(ws.ws_net_paid) > 5000 AND COUNT(DISTINCT ws.ws_order_number) > 3
ORDER BY total_spent DESC
FETCH FIRST 10 ROWS ONLY;
