
WITH RECURSIVE date_series AS (
    SELECT d_date_sk, d_date, d_year
    FROM date_dim
    WHERE d_date = (SELECT MAX(d_date) FROM date_dim WHERE d_year = (SELECT MAX(d_year) FROM date_dim))
    UNION ALL
    SELECT d_date_sk, d_date, d_year
    FROM date_dim
    WHERE d_date_sk < (SELECT MIN(d_date_sk) FROM date_dim WHERE d_year = (SELECT MAX(d_year) FROM date_dim))
    AND d_year = (SELECT MAX(d_year) FROM date_dim)
),
customer_info AS (
    SELECT 
        c.c_customer_sk, 
        c.c_current_addr_sk,
        cd.cd_gender,
        cd.cd_marital_status,
        ca.ca_city,
        ca.ca_state,
        COALESCE(cd.cd_credit_rating, 'Unknown') AS credit_rating,
        cd.cd_purchase_estimate,
        RANK() OVER (PARTITION BY ca.ca_city ORDER BY cd.cd_purchase_estimate DESC) AS purchase_rank
    FROM customer c
    JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
),
sales_summary AS (
    SELECT 
        ws_ship_date_sk,
        SUM(ws_quantity) AS total_quantity,
        SUM(ws_net_profit) AS total_profit,
        COUNT(DISTINCT ws_order_number) AS total_orders,
        AVG(ws_sales_price) AS avg_sales_price
    FROM web_sales
    GROUP BY ws_ship_date_sk
),
return_summary AS (
    SELECT 
        wr_returned_date_sk,
        SUM(wr_return_quantity) AS total_return_quantity,
        SUM(wr_return_amt) AS total_return_amt
    FROM web_returns
    GROUP BY wr_returned_date_sk
),
combined_data AS (
    SELECT 
        ds.d_date_sk AS d_date_id,
        COALESCE(ss.total_quantity, 0) AS total_shipped,
        COALESCE(rs.total_return_quantity, 0) AS total_returned,
        COALESCE(cs.total_orders, 0) AS total_orders,
        CASE WHEN COALESCE(ss.total_profit, 0) + COALESCE(rs.total_return_amt, 0) < 0 THEN 'Loss' ELSE 'Profit' END AS profit_status
    FROM date_series ds
    LEFT JOIN sales_summary ss ON ds.d_date_sk = ss.ws_ship_date_sk 
    LEFT JOIN return_summary rs ON ds.d_date_sk = rs.wr_returned_date_sk
    LEFT JOIN (
        SELECT 
            c.c_customer_sk,
            ca.ca_city AS city,
            ca.ca_state AS state,
            SUM(ws.ws_net_profit) AS total_profit
        FROM customer_info c
        JOIN web_sales ws ON c.c_customer_sk = ws.ws_ship_customer_sk
        JOIN customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
        GROUP BY c.c_customer_sk, ca.ca_city, ca.ca_state
    ) cs ON cs.c_customer_sk = ds.d_date_sk 
),
final_summary AS (
    SELECT 
        c.city,
        c.state,
        SUM(cd.total_shipped) AS total_shipped,
        SUM(cd.total_returned) AS total_returned,
        SUM(cd.total_orders) AS total_orders,
        AVG(cd.avg_sales_price) AS overall_avg_sales_price,
        CASE 
            WHEN SUM(cd.total_shipped) > 0 THEN SUM(cd.total_returned) * 1.0 / SUM(cd.total_shipped)
            ELSE NULL
        END AS return_rate
    FROM combined_data cd
    JOIN customer_info c ON cd.d_date_id = c.c_customer_sk
    GROUP BY c.city, c.state
)
SELECT * 
FROM final_summary
WHERE return_rate IS NOT NULL 
ORDER BY return_rate DESC;
