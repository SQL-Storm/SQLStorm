
WITH RECURSIVE CustomerHierarchy AS (
    SELECT c_customer_sk, 
           c_first_name, 
           c_last_name, 
           c_birth_year, 
           1 AS level
    FROM customer
    WHERE c_birth_year IS NOT NULL

    UNION ALL

    SELECT c.c_customer_sk, 
           c.c_first_name, 
           c.c_last_name, 
           ch.c_birth_year, 
           ch.level + 1
    FROM customer c
    JOIN CustomerHierarchy ch ON c.c_current_cdemo_sk = ch.c_customer_sk
), 
SalesSummary AS (
    SELECT 
        ws_bill_customer_sk, 
        SUM(ws_net_paid) AS total_sales,
        COUNT(ws_order_number) AS order_count,
        RANK() OVER(PARTITION BY ws_bill_customer_sk ORDER BY SUM(ws_net_paid) DESC) AS sales_rank
    FROM web_sales
    GROUP BY ws_bill_customer_sk
), 
AddressCustomer AS (
    SELECT ca_state, 
           ca_city, 
           COUNT(c.c_customer_sk) AS customer_count
    FROM customer_address ca
    LEFT JOIN customer c ON ca.ca_address_sk = c.c_current_addr_sk
    GROUP BY ca_state, ca_city
), 
TopCustomers AS (
    SELECT c.*, ss.total_sales, ss.order_count
    FROM customer c
    JOIN SalesSummary ss ON c.c_customer_sk = ss.ws_bill_customer_sk
    WHERE ss.sales_rank <= 10
)
SELECT c.c_first_name, 
       c.c_last_name, 
       c.c_birth_year, 
       ac.ca_city, 
       ac.ca_state, 
       SUM(COALESCE(ss.total_sales, 0)) AS sales_total,
       COALESCE(AVG(ss.order_count), 0) AS avg_orders_per_customer,
       COUNT(DISTINCT ch.c_customer_sk) AS descendants
FROM TopCustomers c
JOIN AddressCustomer ac ON ac.customer_count > 5
LEFT JOIN SalesSummary ss ON c.c_customer_sk = ss.ws_bill_customer_sk
LEFT JOIN CustomerHierarchy ch ON c.c_customer_sk = ch.c_customer_sk
WHERE c.c_birth_year < (CAST('2002-10-01' AS DATE) - INTERVAL '25' YEAR) 
GROUP BY c.c_first_name, 
         c.c_last_name, 
         c.c_birth_year, 
         ac.ca_city, 
         ac.ca_state
HAVING SUM(COALESCE(ss.total_sales, 0)) > 1000
ORDER BY sales_total DESC, c.c_first_name;
