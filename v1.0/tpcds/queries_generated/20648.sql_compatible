
WITH RECURSIVE customer_sales AS (
    SELECT
        c.c_customer_sk,
        c.c_customer_id,
        SUM(ws.ws_sales_price) AS total_sales,
        COUNT(ws.ws_order_number) AS order_count
    FROM customer c
    LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY c.c_customer_sk, c.c_customer_id
),
top_customers AS (
    SELECT 
        cs.c_customer_id,
        cs.total_sales,
        cs.order_count,
        RANK() OVER (ORDER BY cs.total_sales DESC) AS sales_rank
    FROM customer_sales cs
    WHERE cs.total_sales IS NOT NULL
)
SELECT 
    c.c_customer_id,
    COALESCE(td.total_orders, 0) AS total_orders,
    COALESCE(sales_by_state.state_total_sales, 0) AS state_total_sales,
    CASE
        WHEN sales_by_state.state_total_sales > (SELECT AVG(state_total_sales) FROM
            (SELECT SUM(cs.total_sales) AS state_total_sales
             FROM top_customers tc
             JOIN customer_address ca ON ca.ca_address_sk = c.c_current_addr_sk
             WHERE ca.ca_state = SUBSTRING(c.c_customer_id FROM 1 FOR 2)  
             GROUP BY ca.ca_state) AS state_sales)
        THEN 'Above Average'
        ELSE 'Below Average'
    END AS sales_comparison,
    d.d_day_name,
    w.w_warehouse_name
FROM customer c
LEFT JOIN (
    SELECT ca.ca_state, COUNT(ws.ws_order_number) AS total_orders
    FROM customer_address ca
    JOIN web_sales ws ON ca.ca_address_sk = ws.ws_bill_addr_sk
    GROUP BY ca.ca_state
) td ON SUBSTRING(c.c_customer_id FROM 1 FOR 2) = td.ca_state
LEFT JOIN (
    SELECT ca.ca_state, SUM(ws.ws_sales_price) AS state_total_sales
    FROM customer_address ca
    JOIN web_sales ws ON ca.ca_address_sk = ws.ws_bill_addr_sk
    GROUP BY ca.ca_state
) sales_by_state ON SUBSTRING(c.c_customer_id FROM 1 FOR 2) = sales_by_state.ca_state
LEFT JOIN date_dim d ON d.d_date_sk = (SELECT MAX(ws.ws_ship_date_sk)
                                       FROM web_sales ws WHERE ws.ws_bill_customer_sk = c.c_customer_sk)
LEFT JOIN warehouse w ON w.w_warehouse_sk = (SELECT ws.ws_warehouse_sk
                                              FROM web_sales ws 
                                              WHERE ws.ws_bill_customer_sk = c.c_customer_sk
                                              ORDER BY ws.ws_sales_price DESC LIMIT 1)
WHERE c.c_customer_id LIKE 'CUST%'  
AND (td.total_orders > 10 OR sales_by_state.state_total_sales IS NOT NULL)
ORDER BY total_orders DESC, c.c_customer_id
FETCH FIRST 10 ROWS ONLY;
