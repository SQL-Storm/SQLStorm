
WITH RankedSales AS (
    SELECT 
        ws_bill_customer_sk,
        COUNT(ws_order_number) AS order_count,
        SUM(ws_sales_price) AS total_sales,
        SUM(ws_net_profit) AS total_profit,
        DENSE_RANK() OVER (PARTITION BY ws_bill_customer_sk ORDER BY SUM(ws_sales_price) DESC) AS sales_rank
    FROM 
        web_sales
    WHERE 
        ws_sold_date_sk BETWEEN 20230101 AND 20231231
    GROUP BY 
        ws_bill_customer_sk
),
TopCustomers AS (
    SELECT 
        r.ws_bill_customer_sk, 
        c.c_first_name, 
        c.c_last_name, 
        r.order_count, 
        r.total_sales, 
        r.total_profit
    FROM 
        RankedSales r
    JOIN 
        customer c ON r.ws_bill_customer_sk = c.c_customer_sk
    WHERE 
        r.sales_rank <= 10
),
SalesByAgeGroup AS (
    SELECT 
        CASE 
            WHEN cd_demo_sk IS NOT NULL THEN 
                CASE 
                    WHEN c_birth_year BETWEEN 1940 AND 1960 THEN 'Baby Boomer'
                    WHEN c_birth_year BETWEEN 1961 AND 1980 THEN 'Generation X'
                    WHEN c_birth_year BETWEEN 1981 AND 1996 THEN 'Millennial'
                    ELSE 'Generation Z'
                END
            ELSE 'Unknown'
        END AS age_group,
        SUM(r.total_sales) AS group_sales,
        SUM(r.total_profit) AS group_profit
    FROM 
        TopCustomers t
    LEFT JOIN 
        customer_demographics cd ON t.ws_bill_customer_sk = cd.cd_demo_sk
    LEFT JOIN 
        date_dim d ON d.d_date_sk = CAST('2002-10-01' AS DATE)
    GROUP BY 
        age_group
)
SELECT 
    age_group, 
    group_sales, 
    group_profit, 
    CASE 
        WHEN group_profit > 10000 THEN 'High'
        WHEN group_profit BETWEEN 5000 AND 10000 THEN 'Medium'
        ELSE 'Low'
    END AS profit_category
FROM 
    SalesByAgeGroup
ORDER BY 
    group_sales DESC;
