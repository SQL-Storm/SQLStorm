
WITH CustomerReturns AS (
    SELECT 
        cr_returning_customer_sk,
        SUM(cr_return_quantity) AS total_returned_quantity,
        COUNT(DISTINCT cr_order_number) AS total_returned_orders
    FROM 
        catalog_returns
    GROUP BY 
        cr_returning_customer_sk
),
TotalReturns AS (
    SELECT 
        sr_returning_customer_sk,
        SUM(sr_return_quantity) AS total_store_returned_quantity,
        COUNT(DISTINCT sr_order_number) AS total_store_returned_orders
    FROM 
        store_returns
    GROUP BY 
        sr_returning_customer_sk
),
CombinedReturns AS (
    SELECT 
        COALESCE(cr.cr_returning_customer_sk, sr.sr_returning_customer_sk) AS customer_sk,
        COALESCE(cr.total_returned_quantity, 0) + COALESCE(sr.total_store_returned_quantity, 0) AS total_returned_quantity,
        COALESCE(cr.total_returned_orders, 0) + COALESCE(sr.total_store_returned_orders, 0) AS total_returned_orders
    FROM 
        CustomerReturns cr
    FULL OUTER JOIN 
        TotalReturns sr ON cr.cr_returning_customer_sk = sr.sr_returning_customer_sk
),
CustomerDemographics AS (
    SELECT 
        cd.cd_demo_sk,
        cd.cd_gender,
        cd.cd_marital_status,
        CASE 
            WHEN cd.cd_dep_count IS NULL THEN 'Unknown'
            ELSE 
                CASE 
                    WHEN cd.cd_dep_count > 3 THEN 'Large Family'
                    WHEN cd.cd_dep_count > 0 THEN 'Small Family'
                    ELSE 'Single'
                END
        END AS family_status
    FROM 
        customer_demographics cd
    WHERE 
        cd.cd_credit_rating IN ('Excellent', 'Good', 'Fair')
),
EligibleCustomers AS (
    SELECT 
        c.c_customer_id,
        c.c_first_name,
        c.c_last_name,
        d.family_status,
        r.total_returned_quantity,
        r.total_returned_orders
    FROM 
        customer c
    JOIN 
        CustomerDemographics d ON c.c_current_cdemo_sk = d.cd_demo_sk
    LEFT JOIN 
        CombinedReturns r ON c.c_customer_sk = r.customer_sk
    WHERE 
        (d.family_status = 'Single' AND r.total_returned_orders > 0) OR 
        (d.family_status IN ('Small Family', 'Large Family') AND r.total_returned_orders IS NULL)
)
SELECT 
    e.c_customer_id,
    e.c_first_name,
    e.c_last_name,
    COALESCE(e.total_returned_quantity, 0) AS total_returned_quantity,
    COALESCE(e.total_returned_orders, 0) AS total_returned_orders,
    RANK() OVER (PARTITION BY e.family_status ORDER BY COALESCE(e.total_returned_quantity, 0) DESC) AS return_rank
FROM 
    EligibleCustomers e
WHERE 
    (COALESCE(e.total_returned_quantity, 0) > 5 OR COALESCE(e.total_returned_orders, 0) > 3)
ORDER BY 
    e.family_status ASC, 
    return_rank;
