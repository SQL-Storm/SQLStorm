
WITH RECURSIVE sales_summary AS (
    SELECT 
        ws_sold_date_sk,
        ws_item_sk,
        SUM(ws_quantity) AS total_quantity,
        SUM(ws_net_paid) AS total_sales
    FROM 
        web_sales
    GROUP BY 
        ws_sold_date_sk, ws_item_sk
    UNION ALL
    SELECT 
        ss_sold_date_sk,
        ss_item_sk,
        SUM(ss_quantity) AS total_quantity,
        SUM(ss_net_paid) AS total_sales
    FROM 
        store_sales
    GROUP BY 
        ss_sold_date_sk, ss_item_sk
),
customer_info AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        COALESCE(cd.cd_dep_count, 0) AS dep_count,
        COALESCE(hd.hd_income_band_sk, 0) AS income_band,
        ROW_NUMBER() OVER (PARTITION BY c.c_customer_sk ORDER BY COALESCE(ss.total_sales, 0) DESC) AS rank
    FROM 
        customer c
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN 
        household_demographics hd ON c.c_current_hdemo_sk = hd.hd_demo_sk
)
SELECT 
    ci.c_first_name,
    ci.c_last_name,
    COALESCE(ss.total_quantity, 0) AS total_quantity,
    COALESCE(ss.total_sales, 0) AS total_sales,
    SUM(CASE WHEN ci.dep_count > 2 THEN COALESCE(ss.total_sales, 0) ELSE 0 END) OVER (PARTITION BY ci.c_customer_sk) AS high_dep_sales
FROM 
    customer_info ci
LEFT JOIN 
    sales_summary ss ON ci.c_customer_sk = ss.ws_item_sk
WHERE 
    ci.rank = 1 
    AND ci.dep_count > 0 
    AND ci.income_band = (SELECT ib_income_band_sk 
                          FROM income_band 
                          WHERE ib_lower_bound <= 50000 AND ib_upper_bound > 30000)
ORDER BY 
    total_sales DESC 
FETCH FIRST 100 ROWS ONLY;
