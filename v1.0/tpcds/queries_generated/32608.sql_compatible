
WITH RECURSIVE Sales_Hierarchy AS (
    SELECT 
        cs_bill_customer_sk AS customer_id,
        SUM(cs_net_profit) AS total_profit,
        1 AS level
    FROM 
        catalog_sales
    WHERE 
        cs_sold_date_sk >= (SELECT MIN(d_date_sk) FROM date_dim WHERE d_year = 2022)
    GROUP BY 
        cs_bill_customer_sk

    UNION ALL

    SELECT 
        ss_customer_sk,
        SUM(ss_net_profit) AS total_profit,
        sh.level + 1
    FROM 
        store_sales
    JOIN 
        Sales_Hierarchy sh ON ss_customer_sk = sh.customer_id
    WHERE 
        ss_sold_date_sk >= (SELECT MIN(d_date_sk) FROM date_dim WHERE d_year = 2022)
    GROUP BY 
        ss_customer_sk, sh.level
),
Customer_Summary AS (
    SELECT 
        c.c_customer_id, 
        c.c_first_name, 
        c.c_last_name, 
        sh.total_profit,
        ROW_NUMBER() OVER (PARTITION BY c.c_customer_id ORDER BY sh.total_profit DESC) AS rank
    FROM 
        customer c
    LEFT JOIN 
        Sales_Hierarchy sh ON c.c_customer_sk = sh.customer_id
),
Aggregate_Demographics AS (
    SELECT 
        cd.cd_marital_status,
        SUM(cs.cs_net_profit) AS total_net_profit,
        COUNT(DISTINCT c.c_customer_id) AS customer_count
    FROM 
        customer_demographics cd
    JOIN 
        customer c ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN 
        catalog_sales cs ON c.c_customer_sk = cs.cs_bill_customer_sk
    GROUP BY 
        cd.cd_marital_status
)
SELECT 
    cs.c_customer_id,
    cs.c_first_name,
    cs.c_last_name,
    COALESCE(AD.total_net_profit, 0) AS total_net_profit,
    cs.rank
FROM 
    Customer_Summary cs
LEFT JOIN 
    Aggregate_Demographics AD ON cs.c_customer_id = (SELECT c_customer_id FROM customer WHERE c_customer_sk = cs.c_customer_id)
WHERE 
    cs.total_profit IS NOT NULL
ORDER BY 
    total_net_profit DESC
LIMIT 100;
