
WITH RECURSIVE SalesCTE AS (
    SELECT 
        ws.ws_item_sk,
        SUM(ws.ws_net_profit) AS total_net_profit,
        DENSE_RANK() OVER (PARTITION BY ws.ws_item_sk ORDER BY SUM(ws.ws_net_profit) DESC) as rank
    FROM 
        web_sales ws
    JOIN 
        item i ON ws.ws_item_sk = i.i_item_sk
    WHERE 
        i.i_current_price > 20
    GROUP BY 
        ws.ws_item_sk
    HAVING 
        SUM(ws.ws_net_profit) > 1000
),
CustomerRanked AS (
    SELECT 
        c.c_customer_sk, 
        c.c_first_name, 
        c.c_last_name,
        cd.cd_gender,
        ROW_NUMBER() OVER (PARTITION BY cd.cd_gender ORDER BY cd.cd_purchase_estimate DESC) AS gender_rank
    FROM 
        customer c
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    WHERE 
        cd.cd_purchase_estimate IS NOT NULL
),
TopCustomers AS (
    SELECT 
        cr.c_customer_sk, 
        SUM(ws.ws_net_profit) AS total_spent 
    FROM 
        CustomerRanked cr
    JOIN 
        web_sales ws ON cr.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY 
        cr.c_customer_sk
)
SELECT 
    aa.ca_city,
    SUM(COALESCE(sr.sr_return_amt, 0)) AS total_return_amt,
    SUM(ws.ws_net_profit) AS total_sales,
    COUNT(DISTINCT cs.cs_order_number) AS total_orders,
    COUNT(DISTINCT sr.sr_ticket_number) AS total_returns
FROM 
    customer_address aa
LEFT JOIN 
    store_sales ss ON aa.ca_address_sk = ss.ss_addr_sk
LEFT JOIN 
    store_returns sr ON sr.sr_addr_sk = ss.ss_addr_sk
LEFT JOIN 
    web_sales ws ON ws.ws_bill_addr_sk = aa.ca_address_sk
LEFT JOIN 
    TopCustomers tc ON tc.c_customer_sk = ss.ss_customer_sk
LEFT JOIN 
    customer_sales cs ON cs.cs_customer_sk = tc.c_customer_sk
WHERE 
    aa.ca_city IS NOT NULL
GROUP BY 
    aa.ca_city
HAVING 
    SUM(ws.ws_net_profit) > 5000
ORDER BY 
    total_sales DESC
LIMIT 10;
