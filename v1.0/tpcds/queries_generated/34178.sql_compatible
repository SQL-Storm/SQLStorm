
WITH RECURSIVE ItemHierarchy AS (
    SELECT i_item_sk, i_item_id, 1 AS level
    FROM item
    WHERE i_rec_start_date <= DATE('2002-10-01') AND (i_rec_end_date IS NULL OR i_rec_end_date > DATE('2002-10-01'))
    UNION ALL
    SELECT i.item_sk, i.item_id, ih.level + 1
    FROM item i
    JOIN ItemHierarchy ih ON i.i_item_sk = ih.i_item_sk
)
SELECT 
    c.c_first_name || ' ' || c.c_last_name AS customer_name,
    ca.ca_city,
    SUM(ss.ss_net_paid_inc_tax) AS total_spent,
    COUNT(DISTINCT ss.ss_ticket_number) AS total_transactions,
    ROW_NUMBER() OVER (PARTITION BY ca.ca_city ORDER BY SUM(ss.ss_net_paid_inc_tax) DESC) AS city_rank,
    COUNT(DISTINCT CASE WHEN ws_promo_sk IS NOT NULL THEN ws_order_number END) AS promo_orders,
    COALESCE(SUM(cr.cr_return_amount), 0) AS total_returns,
    CASE 
        WHEN SUM(ss.ss_net_paid_inc_tax) > 500 THEN 'High Value' 
        WHEN SUM(ss.ss_net_paid_inc_tax) BETWEEN 200 AND 500 THEN 'Medium Value' 
        ELSE 'Low Value' 
    END AS customer_value_segment
FROM 
    customer c
JOIN customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
LEFT JOIN store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
LEFT JOIN catalog_sales cs ON c.c_customer_sk = cs.cs_bill_customer_sk
LEFT JOIN catalog_returns cr ON c.c_customer_sk = cr.cr_refunded_customer_sk
WHERE 
    c.c_birth_year IS NOT NULL AND 
    ca.ca_city IS NOT NULL
GROUP BY 
    c.c_first_name, c.c_last_name, ca.ca_city
HAVING 
    SUM(ss.ss_net_paid_inc_tax) > 100
ORDER BY 
    total_spent DESC;
