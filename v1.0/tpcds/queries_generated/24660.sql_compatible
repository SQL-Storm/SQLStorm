
WITH RankedSales AS (
    SELECT 
        ws_item_sk,
        ws_order_number,
        ws_sales_price,
        ROW_NUMBER() OVER (PARTITION BY ws_item_sk ORDER BY ws_sales_price DESC) AS rn
    FROM web_sales
),
HighValueReturns AS (
    SELECT 
        sr_item_sk,
        SUM(sr_return_amt_inc_tax) AS total_return_amount
    FROM store_returns
    WHERE sr_return_quantity > 0
    GROUP BY sr_item_sk
),
TotalReturns AS (
    SELECT 
        cr_item_sk,
        SUM(cr_return_amt_inc_tax) AS total_catalog_return
    FROM catalog_returns
    GROUP BY cr_item_sk
),
CombinedReturns AS (
    SELECT 
        item_sk,
        COALESCE(total_return_amount, 0) AS store_return,
        COALESCE(total_catalog_return, 0) AS catalog_return
    FROM (
        SELECT 
            hr.item_sk,
            hr.total_return_amount,
            tr.total_catalog_return
        FROM HighValueReturns hr
        FULL OUTER JOIN TotalReturns tr ON hr.sr_item_sk = tr.cr_item_sk
    ) AS combined
),
FinalSales AS (
    SELECT 
        COUNT(ws.ws_order_number) AS total_sales,
        SUM(ws.ws_net_profit) AS total_profit,
        i.inv_warehouse_sk AS warehouse_sk
    FROM web_sales ws
    JOIN CombinedReturns cr ON ws.ws_item_sk = cr.item_sk
    JOIN inventory i ON i.inv_item_sk = cr.item_sk AND i.inv_date_sk = ws.ws_sold_date_sk
    LEFT JOIN store s ON s.s_store_sk = ws.ws_ship_addr_sk
    LEFT JOIN call_center cc ON s.s_store_sk = cc.cc_call_center_sk
    GROUP BY i.inv_warehouse_sk
)
SELECT 
    f.total_sales,
    f.total_profit,
    c.ca_city AS warehouse_city,
    c.ca_state AS warehouse_state,
    CASE
        WHEN f.total_profit IS NULL THEN 'No Profit Data'
        WHEN f.total_profit > 0 THEN 'Profitable'
        ELSE 'Loss'
    END AS profit_status,
    (SELECT COUNT(*) 
     FROM customer c 
     WHERE c.c_customer_sk IS NOT NULL AND 
           EXISTS (SELECT 1 
                   FROM customer_demographics cd 
                   WHERE cd.cd_demo_sk = c.c_current_cdemo_sk AND cd.cd_gender = 'F')
    ) AS female_customers_count
FROM FinalSales f
JOIN warehouse w ON w.w_warehouse_sk = f.warehouse_sk
JOIN customer_address c ON c.ca_address_sk = w.w_address_sk
WHERE f.total_sales > 100
  AND (f.total_profit IS NOT NULL OR f.total_profit <= 0)
ORDER BY f.total_profit DESC, warehouse_city ASC;
