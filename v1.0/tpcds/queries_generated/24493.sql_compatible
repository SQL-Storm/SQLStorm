
WITH RankedReturns AS (
    SELECT 
        sr_returning_customer_sk, 
        sr_item_sk, 
        COUNT(sr_return_quantity) AS total_returns,
        SUM(sr_return_amt_inc_tax) AS total_return_amount,
        ROW_NUMBER() OVER (PARTITION BY sr_returning_customer_sk ORDER BY COUNT(sr_return_quantity) DESC) AS rnk
    FROM store_returns
    GROUP BY sr_returning_customer_sk, sr_item_sk
), 
CustomerWithDemographics AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.gender,
        cd.marital_status,
        cd.education_status,
        cd.dep_count,
        COALESCE(cd.dep_employed_count, 0) AS dep_employed_count,
        COALESCE(cd.dep_college_count, 0) AS dep_college_count,
        CASE 
          WHEN cd.dep_count IS NULL THEN 'N/A'
          WHEN cd.dep_count > 3 THEN 'Large Family'
          ELSE 'Small Family' 
        END AS family_size_desc
    FROM customer c
    LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
), 
IncomeDistribution AS (
    SELECT 
        c.c_customer_sk,
        ib.ib_income_band_sk,
        COUNT(*) AS customer_count,
        DENSE_RANK() OVER (ORDER BY COUNT(*) DESC) AS income_rank
    FROM customer c
    LEFT JOIN household_demographics hd ON c.c_current_hdemo_sk = hd.hd_demo_sk
    LEFT JOIN income_band ib ON hd.hd_income_band_sk = ib.ib_income_band_sk
    GROUP BY c.c_customer_sk, ib.ib_income_band_sk
)

SELECT 
    cd.c_customer_sk,
    cd.c_first_name || ' ' || cd.c_last_name AS full_name,
    cd.gender,
    cd.marital_status,
    cd.education_status,
    cd.dep_count,
    COALESCE(cd.dep_employed_count, 0) AS num_employed_members,
    COALESCE(cd.dep_college_count, 0) AS college_members,
    CASE 
        WHEN cd.dep_count IS NULL THEN 'N/A'
        WHEN cd.dep_count > 3 THEN 'Large Family'
        ELSE 'Small Family' 
    END AS family_type,
    ir.ib_income_band_sk AS income_band_sk,
    ir.customer_count,
    CASE 
        WHEN ir.customer_count IS NULL THEN 'No customers in this income band'
        WHEN ir.customer_count >= 100 THEN 'Populous'
        WHEN ir.customer_count BETWEEN 50 AND 99 THEN 'Moderate'
        ELSE 'Rare' 
    END AS distribution_category,
    rr.total_returns,
    rr.total_return_amount
FROM CustomerWithDemographics cd
JOIN IncomeDistribution ir ON cd.c_customer_sk = ir.c_customer_sk
LEFT JOIN RankedReturns rr ON cd.c_customer_sk = rr.sr_returning_customer_sk AND rr.rnk = 1
WHERE 
    (cd.gender = 'F' AND cd.marital_status = 'S') OR cd.education_status LIKE '%PhD%' AND 
    cd.dep_count IS NOT NULL
ORDER BY 
    family_type, 
    distribution_category DESC,
    rr.total_return_amount DESC NULLS LAST
LIMIT 100;
