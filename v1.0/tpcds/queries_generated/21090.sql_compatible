
WITH CustomerReturns AS (
    SELECT 
        sr_customer_sk,
        COUNT(DISTINCT sr_ticket_number) AS return_count,
        SUM(sr_return_amt_inc_tax) AS total_return_amt
    FROM 
        store_returns
    GROUP BY 
        sr_customer_sk
),
TopReturningCustomers AS (
    SELECT 
        cr.sr_customer_sk,
        cr.return_count,
        cr.total_return_amt,
        RANK() OVER (ORDER BY cr.total_return_amt DESC) AS return_rank
    FROM 
        CustomerReturns cr
    WHERE 
        cr.total_return_amt IS NOT NULL AND 
        cr.return_count > 2
),
CustomerDemographics AS (
    SELECT 
        cd.cd_demo_sk,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_purchase_estimate,
        ib.ib_income_band_sk
    FROM 
        customer_demographics cd
    LEFT JOIN 
        household_demographics hd ON cd.cd_demo_sk = hd.hd_demo_sk
    LEFT JOIN 
        income_band ib ON hd.hd_income_band_sk = ib.ib_income_band_sk
    WHERE 
        cd.cd_purchase_estimate < 1000 OR (cd.cd_gender = 'F' AND cd.cd_marital_status = 'M')
),
InventoryStatus AS (
    SELECT 
        i.i_item_sk,
        SUM(inv.inv_quantity_on_hand) AS total_inventory,
        MAX(inv.inv_date_sk) AS last_inventory_date
    FROM 
        item i
    JOIN 
        inventory inv ON i.i_item_sk = inv.inv_item_sk
    GROUP BY 
        i.i_item_sk
    HAVING 
        SUM(inv.inv_quantity_on_hand) > 0
),
WebSalesInfo AS (
    SELECT 
        ws.ws_item_sk,
        SUM(ws.ws_quantity) AS total_sales_quantity,
        SUM(ws.ws_sales_price) AS total_sales_amt,
        COUNT(ws.ws_order_number) AS order_count,
        MIN(ws.ws_sold_date_sk) AS first_sale_date
    FROM 
        web_sales ws
    GROUP BY 
        ws.ws_item_sk
)
SELECT 
    c.c_customer_id,
    cd.cd_gender,
    cd.cd_marital_status,
    cd.cd_purchase_estimate,
    wsi.total_sales_quantity,
    wsi.total_sales_amt,
    wsi.order_count,
    CASE 
        WHEN wsi.total_sales_amt IS NULL THEN 'No Sales'
        WHEN wsi.first_sale_date IS NOT NULL AND wsi.total_sales_quantity > 10 THEN 'Frequent Buyer'
        ELSE 'Occasional Buyer'
    END AS buyer_category,
    CASE 
        WHEN c.c_birth_year IS NULL THEN 'Birth Year Unknown'
        ELSE CONCAT(CAST(DATE '2002-10-01' - INTERVAL (EXTRACT(YEAR FROM DATE '2002-10-01') - c.c_birth_year) YEAR AS VARCHAR), ' (' , c.c_birth_year, ')')
    END AS age_category
FROM 
    customer c
JOIN 
    TopReturningCustomers tr ON c.c_customer_sk = tr.sr_customer_sk
JOIN 
    CustomerDemographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
LEFT JOIN 
    WebSalesInfo wsi ON wsi.ws_item_sk IN (SELECT DISTINCT sr_item_sk FROM store_returns WHERE sr_customer_sk = c.c_customer_sk)
ORDER BY 
    tr.return_count DESC,
    wsi.total_sales_amt DESC NULLS LAST;
