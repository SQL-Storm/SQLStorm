
WITH RECURSIVE sales_hierarchy AS (
    SELECT
        c.c_customer_sk,
        c.c_customer_id,
        SUM(ws.ws_net_profit) AS total_profit,
        COUNT(DISTINCT ws.ws_order_number) AS order_count,
        ROW_NUMBER() OVER (PARTITION BY c.c_customer_sk ORDER BY SUM(ws.ws_net_profit) DESC) AS rn
    FROM
        customer c
    LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    WHERE
        ws.ws_sold_date_sk BETWEEN 1 AND 365
    GROUP BY
        c.c_customer_sk, c.c_customer_id
),
top_sales AS (
    SELECT * FROM sales_hierarchy WHERE rn <= 10
),
avg_item_prices AS (
    SELECT
        i.i_item_sk,
        AVG(i.i_current_price) AS avg_price
    FROM
        item i
    JOIN store_sales ss ON i.i_item_sk = ss.ss_item_sk
    GROUP BY
        i.i_item_sk
),
customer_address_details AS (
    SELECT
        ca.ca_address_sk,
        ca.ca_city,
        ca.ca_state,
        COALESCE(SUM(ws.ws_ext_sales_price), 0) AS total_sales
    FROM
        customer_address ca
    LEFT JOIN web_sales ws ON ca.ca_address_sk = ws.ws_bill_addr_sk
    GROUP BY
        ca.ca_address_sk, ca.ca_city, ca.ca_state
),
high_value_customers AS (
    SELECT
        c.c_customer_sk,
        SUM(cc.total_sales) AS cumulative_sales
    FROM
        customer c
    JOIN customer_address_details cc ON c.c_current_addr_sk = cc.ca_address_sk
    WHERE
        c.c_birth_year < 1980
    GROUP BY
        c.c_customer_sk
    HAVING
        SUM(cc.total_sales) > 10000
)
SELECT
    c.c_customer_id,
    sh.total_profit,
    sh.order_count,
    hvc.cumulative_sales,
    COALESCE(a.avg_price, 0) AS average_item_price
FROM
    top_sales sh
JOIN high_value_customers hvc ON sh.c_customer_sk = hvc.c_customer_sk
LEFT JOIN avg_item_prices a ON sh.total_profit / NULLIF(sh.order_count, 0) = a.avg_price
ORDER BY
    hvc.cumulative_sales DESC
