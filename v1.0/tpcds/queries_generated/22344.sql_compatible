
WITH yearly_sales AS (
    SELECT 
        d.d_year,
        SUM(ws.ws_ext_sales_price) AS total_sales,
        COUNT(DISTINCT ws.ws_order_number) AS order_count,
        ROW_NUMBER() OVER (PARTITION BY d.d_year ORDER BY SUM(ws.ws_ext_sales_price) DESC) AS rank_sales
    FROM 
        date_dim d
    JOIN 
        web_sales ws ON d.d_date_sk = ws.ws_sold_date_sk
    WHERE 
        d.d_year BETWEEN 2015 AND 2023
    GROUP BY 
        d.d_year
),
top_sales_year AS (
    SELECT 
        d_year,
        total_sales,
        order_count
    FROM 
        yearly_sales
    WHERE 
        rank_sales <= 5
),
customer_summary AS (
    SELECT 
        c.c_customer_sk,
        COUNT(DISTINCT ws.ws_order_number) AS total_orders,
        SUM(ws.ws_ext_sales_price) AS total_spent,
        MAX(ws.ws_sold_date_sk) AS last_order_date
    FROM 
        customer c
    LEFT JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY 
        c.c_customer_sk
    HAVING 
        SUM(ws.ws_ext_sales_price) IS NOT NULL
),
high_value_customers AS (
    SELECT 
        cs.c_customer_sk,
        cs.total_orders,
        cs.total_spent,
        cs.last_order_date,
        COALESCE(d.d_month_seq, 0) AS last_order_month_seq
    FROM 
        customer_summary cs
    JOIN 
        date_dim d ON cs.last_order_date = d.d_date
    WHERE 
        cs.total_spent > (SELECT AVG(total_spent) FROM customer_summary)
),
customer_ranks AS (
    SELECT 
        hvc.c_customer_sk,
        hvc.total_orders,
        hvc.total_spent,
        RANK() OVER (ORDER BY hvc.total_spent DESC) AS rank
    FROM 
        high_value_customers hvc
)
SELECT 
    c.c_first_name,
    c.c_last_name,
    COALESCE(CAST(ca.ca_city AS CHAR), 'Unknown City') AS city,
    cr.total_orders,
    cr.total_spent,
    cr.rank
FROM 
    customer c
LEFT JOIN 
    customer_ranks cr ON c.c_customer_sk = cr.c_customer_sk
LEFT JOIN 
    customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
JOIN 
    top_sales_year ts ON ts.d_year = (SELECT MAX(d.d_year) FROM date_dim d WHERE d.d_year = ts.d_year)
WHERE 
    cr.rank <= 10
ORDER BY 
    cr.rank ASC, 
    cr.total_spent DESC;
