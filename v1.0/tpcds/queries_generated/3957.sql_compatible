
WITH CustomerStats AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        COALESCE(cd.cd_purchase_estimate, 0) AS purchase_estimate,
        ROW_NUMBER() OVER (PARTITION BY cd.cd_gender ORDER BY COALESCE(cd.cd_purchase_estimate, 0) DESC) AS purchase_rank
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
),
TopCustomers AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cs.purchase_estimate
    FROM 
        CustomerStats cs
    WHERE 
        cs.purchase_rank <= 10
),
SalesData AS (
    SELECT 
        ws.web_site_sk,
        ws.ws_order_number,
        SUM(ws.ws_ext_sales_price) AS total_sales,
        COUNT(ws.ws_order_number) AS order_count
    FROM 
        web_sales ws
    GROUP BY 
        ws.web_site_sk, ws.ws_order_number
),
SalesSummary AS (
    SELECT 
        sd.web_site_sk,
        SUM(sd.total_sales) AS total_sales,
        SUM(sd.order_count) AS total_orders
    FROM 
        SalesData sd
    GROUP BY 
        sd.web_site_sk
)
SELECT 
    c.c_first_name,
    c.c_last_name,
    COALESCE(ss.total_sales, 0) AS total_sales,
    COALESCE(ss.total_orders, 0) AS total_orders
FROM 
    TopCustomers c
LEFT JOIN 
    SalesSummary ss
ON 
    c.c_customer_sk = ss.web_site_sk
WHERE 
    ss.total_sales IS NOT NULL OR c.c_customer_sk IS NOT NULL
ORDER BY 
    total_sales DESC, c.c_last_name, c.c_first_name;
