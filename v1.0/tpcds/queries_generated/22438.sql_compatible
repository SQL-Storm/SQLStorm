
WITH ranked_sales AS (
    SELECT 
        ws.customer_sk,
        ROW_NUMBER() OVER (PARTITION BY ws.customer_sk ORDER BY ws.net_profit DESC) AS rank,
        ws.net_profit,
        CASE 
            WHEN cd.education_status IS NULL THEN 'Unknown'
            ELSE cd.education_status 
        END AS education,
        COALESCE(ca.city, 'Not Specified') AS customer_city,
        CASE 
            WHEN hd.income_band_sk IS NULL THEN -1 
            ELSE hd.income_band_sk 
        END AS income_band
    FROM web_sales ws
    JOIN customer c ON ws.bill_customer_sk = c.c_customer_sk
    LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN household_demographics hd ON c.c_current_hdemo_sk = hd.hd_demo_sk
    LEFT JOIN customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
),
high_profit_sales AS (
    SELECT 
        customer_sk, 
        net_profit
    FROM ranked_sales
    WHERE rank = 1
    AND net_profit >= (SELECT AVG(net_profit) FROM ranked_sales)
),
geo_sales AS (
    SELECT 
        ca.city, 
        SUM(ws.net_profit) AS total_net_profit
    FROM web_sales ws
    JOIN customer c ON ws.bill_customer_sk = c.c_customer_sk
    JOIN customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
    GROUP BY ca.city
    HAVING SUM(ws.net_profit) > (SELECT AVG(total_net_profit) FROM (
        SELECT 
            ca.city, 
            SUM(ws.net_profit) AS total_net_profit
        FROM web_sales ws
        JOIN customer c ON ws.bill_customer_sk = c.c_customer_sk
        JOIN customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
        GROUP BY ca.city
    ) AS city_profit)
)
SELECT 
    hps.customer_sk,
    hps.net_profit,
    gs.city,
    gs.total_net_profit,
    CASE 
        WHEN hps.income_band < 0 THEN 'Unknown Income Band'
        ELSE CAST(hps.income_band AS VARCHAR)
    END AS income_band_desc
FROM high_profit_sales hps
FULL OUTER JOIN geo_sales gs ON hps.customer_sk IS NOT NULL AND gs.city IS NOT NULL
WHERE (hps.net_profit IS NOT NULL OR gs.total_net_profit IS NOT NULL)
AND (hps.net_profit < 0 OR gs.total_net_profit > 1000)
ORDER BY COALESCE(hps.net_profit, 0) DESC, COALESCE(gs.total_net_profit, 0) DESC;
``` 