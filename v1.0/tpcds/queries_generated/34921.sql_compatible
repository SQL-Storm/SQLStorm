
WITH RECURSIVE sales_summary AS (
    SELECT 
        ws_sold_date_sk,
        ws_item_sk,
        SUM(ws_quantity) AS total_quantity,
        SUM(ws_ext_sales_price) AS total_sales
    FROM 
        web_sales
    WHERE 
        ws_sold_date_sk BETWEEN 2459525 AND 2459565
    GROUP BY 
        ws_sold_date_sk, ws_item_sk
    UNION ALL
    SELECT 
        t.ws_sold_date_sk,
        t.ws_item_sk,
        t.total_quantity + ss.total_quantity AS total_quantity,
        t.total_sales + ss.total_sales AS total_sales
    FROM 
        sales_summary ss
    JOIN 
        web_sales t ON ss.ws_item_sk = t.ws_item_sk AND ss.ws_sold_date_sk < t.ws_sold_date_sk
),
inventory_status AS (
    SELECT 
        inv.inv_item_sk,
        SUM(inv.inv_quantity_on_hand) AS total_inventory
    FROM 
        inventory inv
    GROUP BY 
        inv.inv_item_sk
),
item_details AS (
    SELECT 
        i.i_item_id,
        i.i_product_name,
        COALESCE(i.i_current_price, 0) AS price,
        COALESCE(ws.total_quantity, 0) AS total_sold,
        COALESCE(inv.total_inventory, 0) AS total_inventory,
        COALESCE(ws.total_sales, 0) AS total_sales
    FROM 
        item i
    LEFT JOIN 
        sales_summary ws ON i.i_item_sk = ws.ws_item_sk
    LEFT JOIN 
        inventory_status inv ON i.i_item_sk = inv.inv_item_sk
)
SELECT 
    id.i_item_id,
    id.i_product_name,
    id.price,
    id.total_sold,
    id.total_inventory,
    id.total_sales,
    CASE
        WHEN id.total_inventory - id.total_sold < 0 THEN 'Stock Out'
        WHEN id.price = 0 THEN 'Free Item'
        ELSE 'Available'
    END AS inventory_status
FROM 
    item_details id
ORDER BY 
    id.total_sales DESC
LIMIT 10;
