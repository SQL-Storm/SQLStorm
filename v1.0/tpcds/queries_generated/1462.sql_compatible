
WITH CustomerSales AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        SUM(ws.ws_net_paid) AS total_spent,
        COUNT(DISTINCT ws.ws_order_number) AS orders_count
    FROM 
        customer c
    LEFT JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY 
        c.c_customer_sk, c.c_first_name, c.c_last_name
),
HighSpenders AS (
    SELECT 
        cs.c_customer_sk,
        cs.c_first_name,
        cs.c_last_name,
        cs.total_spent,
        DENSE_RANK() OVER (ORDER BY cs.total_spent DESC) AS spend_rank
    FROM 
        CustomerSales cs
    WHERE 
        cs.total_spent IS NOT NULL
),
CustomerDemographics AS (
    SELECT 
        cd.cd_demo_sk,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_buy_potential,
        c.c_customer_sk
    FROM 
        customer_demographics cd
    JOIN 
        customer c ON cd.cd_demo_sk = c.c_current_cdemo_sk
),
ProductSales AS (
    SELECT 
        i.i_item_sk,
        SUM(ws.ws_quantity) AS total_quantity_sold
    FROM 
        item i
    JOIN 
        web_sales ws ON i.i_item_sk = ws.ws_item_sk
    GROUP BY 
        i.i_item_sk
)
SELECT 
    hs.c_first_name,
    hs.c_last_name,
    hs.total_spent,
    cd.cd_gender,
    cd.cd_marital_status,
    COALESCE(ps.total_quantity_sold, 0) AS total_items_sold,
    (SELECT COUNT(*) FROM ProductSales ps WHERE ps.total_quantity_sold > 50) AS high_volume_product_count
FROM 
    HighSpenders hs
LEFT JOIN 
    CustomerDemographics cd ON hs.c_customer_sk = cd.c_customer_sk
LEFT JOIN 
    ProductSales ps ON ps.i_item_sk IN (SELECT DISTINCT ws.ws_item_sk FROM web_sales ws WHERE ws.ws_bill_customer_sk = hs.c_customer_sk)
WHERE 
    hs.spend_rank <= 10
ORDER BY 
    hs.total_spent DESC;
