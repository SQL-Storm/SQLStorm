
WITH RankedSales AS (
    SELECT 
        ws_order_number,
        ws_web_site_sk,
        ws_sales_price,
        ws_quantity,
        ROW_NUMBER() OVER (PARTITION BY ws_order_number ORDER BY ws_net_profit DESC) AS rn
    FROM web_sales
    WHERE ws_sales_price IS NOT NULL
),
TopSales AS (
    SELECT 
        ws_order_number,
        SUM(ws_sales_price * ws_quantity) AS total_sales,
        COUNT(*) AS order_count
    FROM RankedSales
    WHERE rn = 1
    GROUP BY ws_order_number
),
CustomerReturns AS (
    SELECT 
        wr_returning_customer_sk,
        SUM(wr_return_amt) AS total_return_amt,
        COUNT(*) AS return_count
    FROM web_returns
    WHERE wr_return_amt IS NOT NULL
    GROUP BY wr_returning_customer_sk
),
FinalResults AS (
    SELECT 
        c.c_customer_sk,
        COALESCE(ts.total_sales, 0) AS total_sales,
        COALESCE(cr.total_return_amt, 0) AS total_return_amt,
        (COALESCE(ts.total_sales, 0) - COALESCE(cr.total_return_amt, 0)) AS net_sales,
        cd.gender,
        cd.marital_status
    FROM customer c
    LEFT JOIN TopSales ts ON c.c_customer_sk = ts.ws_order_number
    LEFT JOIN CustomerReturns cr ON c.c_customer_sk = cr.wr_returning_customer_sk
    LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
)
SELECT 
    f.c_customer_sk,
    f.total_sales,
    f.total_return_amt,
    f.net_sales,
    f.gender,
    f.marital_status
FROM FinalResults f
WHERE f.net_sales > 1000
ORDER BY f.net_sales DESC
FETCH FIRST 50 ROWS ONLY;
