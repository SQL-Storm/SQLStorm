
WITH RECURSIVE CustomerHierarchy AS (
    SELECT c_customer_sk, c_first_name, c_last_name, c_preferred_cust_flag, 1 AS level
    FROM customer
    WHERE c_customer_sk IS NOT NULL
    UNION ALL
    SELECT ch.c_customer_sk, ch.c_first_name, ch.c_last_name, ch.c_preferred_cust_flag, ch.level + 1
    FROM customer AS ch
    JOIN customer AS c ON ch.c_customer_sk = c.c_current_cdemo_sk
    WHERE ch.c_customer_sk IS NOT NULL
),
SalesData AS (
    SELECT
        w.w_warehouse_id,
        SUM(ws.ws_net_profit) AS total_net_profit,
        COUNT(ws.ws_order_number) AS total_orders,
        AVG(ws.ws_sales_price) AS average_sales_price
    FROM web_sales AS ws
    JOIN warehouse AS w ON ws.ws_warehouse_sk = w.w_warehouse_sk
    WHERE ws.ws_sold_date_sk >= (SELECT MAX(d_date_sk) - 30 FROM date_dim WHERE d_current_month = 'Y')
    GROUP BY w.w_warehouse_id
),
CustomerDemographics AS (
    SELECT 
        cd.cd_gender, 
        cd.cd_marital_status, 
        COUNT(DISTINCT c.c_customer_sk) AS customer_count,
        SUM(cd.cd_purchase_estimate) AS total_purchase_estimate
    FROM customer_demographics AS cd
    LEFT JOIN customer AS c ON cd.cd_demo_sk = c.c_current_cdemo_sk
    GROUP BY cd.cd_gender, cd.cd_marital_status
)
SELECT 
    ch.c_first_name,
    ch.c_last_name,
    ch.c_preferred_cust_flag,
    sd.w_warehouse_id,
    sd.total_net_profit,
    sd.total_orders,
    cd.cd_gender,
    cd.cd_marital_status,
    COUNT(ch.c_customer_sk) OVER (PARTITION BY ch.c_first_name ORDER BY ch.level) AS customer_hierarchy_count
FROM CustomerHierarchy AS ch
JOIN SalesData AS sd ON sd.total_net_profit > 1000
JOIN CustomerDemographics AS cd ON cd.customer_count > 0
WHERE sd.w_warehouse_id LIKE 'W%'
  AND (ch.c_preferred_cust_flag IS NULL OR ch.c_preferred_cust_flag = 'Y')
  AND COALESCE(cd.cd_gender, 'UNSPECIFIED') = 'F'
ORDER BY sd.total_net_profit DESC, ch.c_last_name;
