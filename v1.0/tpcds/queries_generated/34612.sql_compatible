
WITH RECURSIVE CustomerHierarchy AS (
    SELECT c.c_customer_sk,
           c.c_first_name,
           c.c_last_name,
           c.c_preferred_cust_flag,
           0 AS level
    FROM customer c
    WHERE c.c_current_cdemo_sk IS NOT NULL

    UNION ALL

    SELECT ch.c_customer_sk,
           ch.c_first_name,
           ch.c_last_name,
           ch.c_preferred_cust_flag,
           ch.level + 1
    FROM customer c
    JOIN CustomerHierarchy ch ON c.c_current_cdemo_sk = ch.c_customer_sk
), 

SalesData AS (
    SELECT ds.d_date,
           SUM(ws.ws_ext_sales_price) AS total_sales,
           SUM(ws.ws_net_profit) AS net_profit,
           COUNT(DISTINCT ws.ws_order_number) AS order_count
    FROM web_sales ws
    JOIN date_dim ds ON ws.ws_sold_date_sk = ds.d_date_sk
    WHERE ds.d_year = 2022
    GROUP BY ds.d_date
),

RankedSales AS (
    SELECT *,
           RANK() OVER (ORDER BY total_sales DESC) AS sales_rank
    FROM SalesData
)

SELECT ch.c_customer_sk,
       ch.c_first_name,
       ch.c_last_name,
       COALESCE(r.total_sales, 0) AS total_sales,
       COALESCE(r.net_profit, 0) AS net_profit,
       COALESCE(r.order_count, 0) AS order_count,
       CASE 
           WHEN r.sales_rank <= 10 THEN 'Top Customer'
           ELSE 'Regular Customer'
       END AS customer_type
FROM CustomerHierarchy ch
LEFT JOIN RankedSales r ON ch.c_customer_sk = r.customer_sk
WHERE ch.c_preferred_cust_flag = 'Y'
ORDER BY total_sales DESC, net_profit DESC
LIMIT 100 OFFSET 0;
