
WITH RECURSIVE sales_hierarchy AS (
    SELECT cs_bill_customer_sk, 
           SUM(cs_ext_sales_price) AS total_sales,
           1 AS level
    FROM catalog_sales
    GROUP BY cs_bill_customer_sk
    UNION ALL
    SELECT cs.cs_bill_customer_sk, 
           SUM(cs.cs_ext_sales_price) * 1.1 AS total_sales, 
           sh.level + 1
    FROM catalog_sales cs
    JOIN sales_hierarchy sh ON cs.cs_bill_customer_sk = sh.cs_bill_customer_sk
    WHERE sh.level < 5
    GROUP BY cs.cs_bill_customer_sk, sh.level
),
ranked_customers AS (
    SELECT c.c_customer_id,
           c.c_first_name,
           c.c_last_name,
           sh.total_sales,
           RANK() OVER (ORDER BY sh.total_sales DESC) AS sales_rank
    FROM customer c
    JOIN sales_hierarchy sh ON c.c_customer_sk = sh.cs_bill_customer_sk
),
top_customers AS (
    SELECT c.c_customer_id AS c_id, 
           c.c_first_name,
           c.c_last_name,
           rc.total_sales,
           rc.sales_rank
    FROM ranked_customers rc
    WHERE rc.sales_rank <= 10
)
SELECT tc.c_id AS customer_id,
       CONCAT(tc.c_first_name, ' ', tc.c_last_name) AS full_name,
       tc.total_sales,
       COALESCE((SELECT COUNT(*) 
                 FROM store_sales ss
                 WHERE ss.ss_customer_sk = tc.c_id 
                 AND ss.ss_net_paid_inc_tax > 1000), 0) AS high_value_purchases,
       CASE 
           WHEN tc.total_sales > 5000 THEN 'High Spender'
           ELSE 'Regular Spender'
       END AS spending_category
FROM top_customers tc
LEFT JOIN customer_demographics cd ON tc.c_id = cd.cd_demo_sk
WHERE EXISTS (SELECT 1 
              FROM web_sales ws 
              WHERE ws.ws_bill_customer_sk = tc.c_id) 
ORDER BY tc.total_sales DESC;
