WITH RECURSIVE sales_data AS (
    SELECT 
        s_store_sk,
        SUM(ss_net_paid) AS total_sales,
        COUNT(DISTINCT ss_ticket_number) AS transaction_count,
        ROW_NUMBER() OVER (PARTITION BY s_store_sk ORDER BY SUM(ss_net_paid) DESC) AS rank
    FROM store_sales
    WHERE ss_sold_date_sk BETWEEN 2451545 AND 2451550   
    GROUP BY s_store_sk
), 
customer_info AS (
    SELECT 
        c.c_customer_id,
        cd.cd_gender,
        cd.cd_marital_status,
        COALESCE(hd.hd_income_band_sk, 0) AS income_band
    FROM customer c
    LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN household_demographics hd ON c.c_customer_sk = hd.hd_demo_sk
),
daily_sales AS (
    SELECT 
        d.d_date,
        SUM(ws.ws_net_paid) AS total_web_sales,
        COUNT(ws.ws_order_number) AS web_order_count
    FROM web_sales ws
    JOIN date_dim d ON ws.ws_sold_date_sk = d.d_date_sk
    WHERE d.d_year = 2001
    GROUP BY d.d_date
)
SELECT 
    s.s_store_name,
    SUM(ss.ss_net_paid) AS total_store_sales,
    AVG(ss.ss_sales_price) AS avg_sales_price,
    c.gender_ratio,
    ds.total_web_sales,
    ds.web_order_count
FROM store_sales ss
JOIN store s ON ss.ss_store_sk = s.s_store_sk
LEFT JOIN (
    SELECT 
        cd.cd_gender,
        COUNT(*) * 1.0 / SUM(COUNT(*)) OVER () AS gender_ratio
    FROM customer_info ci
    JOIN store_sales ss ON ci.c_customer_id = ss.ss_customer_sk
    GROUP BY cd.cd_gender
) c ON TRUE
LEFT JOIN daily_sales ds ON ds.total_web_sales > 1000 
GROUP BY s.s_store_name, c.gender_ratio, ds.total_web_sales, ds.web_order_count
HAVING SUM(ss.ss_net_paid) > 10000
ORDER BY total_store_sales DESC;