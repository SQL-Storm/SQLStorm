
WITH RECURSIVE TopCustomers AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        SUM(ws.ws_net_profit) AS total_profit
    FROM 
        customer c
    JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_ship_customer_sk
    WHERE 
        ws.ws_sold_date_sk >= (SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = 2023)
    GROUP BY 
        c.c_customer_sk, c.c_first_name, c.c_last_name
    ORDER BY 
        total_profit DESC
    LIMIT 10
),
CustomerWithDemographics AS (
    SELECT 
        tc.c_customer_sk,
        tc.c_first_name,
        tc.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_education_status,
        cd.cd_purchase_estimate,
        COALESCE(hd.hd_income_band_sk, 0) AS income_band
    FROM 
        TopCustomers tc
    LEFT JOIN 
        customer_demographics cd ON tc.c_customer_sk = cd.cd_demo_sk
    LEFT JOIN 
        household_demographics hd ON cd.cd_demo_sk = hd.hd_demo_sk
),
SalesSummary AS (
    SELECT 
        c.c_customer_sk,
        COUNT(ws.ws_order_number) AS total_orders,
        SUM(ws.ws_quantity) AS total_quantity,
        AVG(ws.ws_net_paid_inc_tax) AS avg_order_value
    FROM 
        web_sales ws
    JOIN 
        customer c ON ws.ws_ship_customer_sk = c.c_customer_sk
    GROUP BY 
        c.c_customer_sk
)
SELECT 
    cd.c_first_name,
    cd.c_last_name,
    cd.cd_gender,
    cd.cd_marital_status,
    cd.cd_education_status,
    ss.total_orders,
    ss.total_quantity,
    ss.avg_order_value,
    CASE 
        WHEN ss.avg_order_value IS NULL THEN 'No Sales'
        WHEN ss.avg_order_value > 100 THEN 'High Value'
        ELSE 'Low Value'
    END AS customer_value_category,
    COUNT(DISTINCT ws.ws_order_number) OVER (PARTITION BY cd.c_customer_sk) AS order_count,
    (SELECT COUNT(*) FROM store s WHERE s.s_country = 'USA') AS total_stores
FROM 
    CustomerWithDemographics cd
LEFT JOIN 
    SalesSummary ss ON cd.c_customer_sk = ss.c_customer_sk
JOIN 
    web_sales ws ON cd.c_customer_sk = ws.ws_ship_customer_sk
WHERE 
    cd.income_band > 0
ORDER BY 
    ss.total_orders DESC;
