
WITH RECURSIVE sales_cte AS (
    SELECT 
        ws.bill_customer_sk,
        SUM(ws.total_sales) AS total_sales,
        ROW_NUMBER() OVER (PARTITION BY ws.bill_customer_sk ORDER BY SUM(ws.total_sales) DESC) AS sales_rank
    FROM (
        SELECT 
            ws.bill_customer_sk,
            ws.ext_sales_price AS total_sales
        FROM web_sales ws
        WHERE ws.sold_date_sk BETWEEN 2457036 AND 2458711
        UNION ALL
        SELECT 
            cs.bill_customer_sk,
            cs.ext_sales_price AS total_sales
        FROM catalog_sales cs
        WHERE cs.sold_date_sk BETWEEN 2457036 AND 2458711
    ) ws
    GROUP BY ws.bill_customer_sk
),
customer_info AS (
    SELECT 
        c.c_customer_id,
        cd.cd_gender,
        cd.cd_marital_status,
        ca.ca_city,
        ca.ca_state,
        ca.ca_country,
        COALESCE(hd.hd_income_band_sk, 0) AS income_band,
        ROW_NUMBER() OVER (PARTITION BY ca.ca_state ORDER BY c.c_first_name) AS city_rank
    FROM customer c
    JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    JOIN customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
    LEFT JOIN household_demographics hd ON hd.hd_demo_sk = cd.cd_demo_sk
)
SELECT 
    ci.c_customer_id,
    ci.cd_gender,
    ci.cd_marital_status,
    SUM(s.total_sales) AS total_sales,
    ci.ca_city,
    ci.ca_state,
    ci.ca_country,
    CASE 
        WHEN SUM(s.total_sales) IS NULL THEN 'No Sales'
        WHEN SUM(s.total_sales) > (SELECT AVG(total_sales) FROM sales_cte) THEN 'Above Average'
        ELSE 'Below Average'
    END AS sales_category
FROM customer_info ci
LEFT JOIN sales_cte s ON ci.c_customer_id = s.bill_customer_sk
WHERE ci.city_rank <= 10
GROUP BY 
    ci.c_customer_id, 
    ci.cd_gender, 
    ci.cd_marital_status, 
    ci.ca_city, 
    ci.ca_state, 
    ci.ca_country
ORDER BY total_sales DESC NULLS LAST;
