
WITH CustomerSales AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        SUM(ws.ws_ext_sales_price) AS total_web_sales,
        COUNT(ws.ws_order_number) AS order_count,
        ROW_NUMBER() OVER (PARTITION BY c.c_customer_sk ORDER BY SUM(ws.ws_ext_sales_price) DESC) AS sales_rank
    FROM customer c
    LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY c.c_customer_sk, c.c_first_name, c.c_last_name
),
Demographics AS (
    SELECT 
        cd.cd_demo_sk,
        cd.cd_gender,
        cd.cd_marital_status,
        cbib.ib_income_band_sk,
        cbib.ib_lower_bound,
        cbib.ib_upper_bound
    FROM customer_demographics cd
    LEFT JOIN household_demographics hd ON cd.cd_demo_sk = hd.hd_demo_sk
    LEFT JOIN income_band cbib ON hd.hd_income_band_sk = cbib.ib_income_band_sk
),
SalesComparison AS (
    SELECT 
        cs.c_first_name,
        cs.c_last_name,
        cs.total_web_sales,
        COALESCE(d.cd_gender, 'Unknown') AS gender,
        COALESCE(d.cd_marital_status, 'U') AS marital_status,
        COALESCE(d.ib_lower_bound, 0) AS income_lower,
        COALESCE(d.ib_upper_bound, 0) AS income_upper,
        CASE 
            WHEN cs.total_web_sales IS NULL THEN 'No Sales'
            WHEN cs.total_web_sales < 100 THEN 'Low Sales'
            WHEN cs.total_web_sales BETWEEN 100 AND 500 THEN 'Medium Sales'
            ELSE 'High Sales'
        END AS sales_category
    FROM CustomerSales cs
    LEFT JOIN Demographics d ON cs.c_customer_sk = d.cd_demo_sk
)
SELECT 
    c.c_first_name,
    c.c_last_name,
    cs.total_web_sales,
    cs.gender,
    cs.marital_status,
    cs.income_lower,
    cs.income_upper,
    cs.sales_category
FROM SalesComparison cs
WHERE cs.sales_category <> 'No Sales'
ORDER BY cs.total_web_sales DESC
LIMIT 10;
