
WITH RECURSIVE sales_hierarchy AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_purchase_estimate,
        1 AS level
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    WHERE 
        cd.cd_purchase_estimate > 1000
    UNION ALL
    SELECT 
        sh.c_customer_sk,
        sh.c_first_name,
        sh.c_last_name,
        sh.cd_gender,
        sh.cd_marital_status,
        sh.cd_purchase_estimate,
        sh.level + 1
    FROM 
        sales_hierarchy sh
    JOIN 
        customer c ON c.c_current_cdemo_sk = sh.c_customer_sk
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    WHERE 
        cd.cd_purchase_estimate > 500
),
sales_data AS (
    SELECT 
        ws.ws_order_number,
        ws.ws_net_profit,
        ws.ws_sold_date_sk,
        d.d_date,
        ROW_NUMBER() OVER (PARTITION BY ws.ws_order_number ORDER BY ws.ws_net_profit DESC) AS rn
    FROM 
        web_sales ws
    JOIN 
        date_dim d ON ws.ws_sold_date_sk = d.d_date_sk
    WHERE 
        d.d_year = 2023
),
top_sales AS (
    SELECT 
        ws.ws_order_number AS order_number,
        SUM(ws.ws_net_profit) AS total_profit
    FROM 
        sales_data ws
    WHERE 
        ws.rn = 1
    GROUP BY 
        ws.ws_order_number
)
SELECT 
    sh.c_first_name,
    sh.c_last_name,
    sh.cd_gender,
    sh.cd_marital_status,
    COALESCE(ts.total_profit, 0) AS total_profit
FROM 
    sales_hierarchy sh
LEFT JOIN 
    top_sales ts ON sh.c_customer_sk = ts.order_number
WHERE 
    sh.level = 1
ORDER BY 
    sh.cd_purchase_estimate DESC;
