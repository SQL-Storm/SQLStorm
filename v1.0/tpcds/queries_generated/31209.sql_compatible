
WITH RECURSIVE sales_data AS (
    SELECT 
        ws.web_site_sk,
        ws.web_name,
        SUM(ws.ws_net_paid) AS total_sales,
        COUNT(DISTINCT ws.ws_order_number) AS order_count
    FROM 
        web_sales ws
    JOIN 
        date_dim dd ON ws.ws_sold_date_sk = dd.d_date_sk
    WHERE 
        dd.d_year = 2023
    GROUP BY 
        ws.web_site_sk, ws.web_name
    UNION ALL
    SELECT 
        w.warehouse_sk,
        w.warehouse_name,
        SUM(hit.ws_net_paid) AS total_sales,
        COUNT(DISTINCT hit.ws_order_number) AS order_count
    FROM 
        warehouse w
    LEFT JOIN 
        web_sales hit ON w.warehouse_sk = hit.ws_warehouse_sk
    GROUP BY 
        w.warehouse_sk, w.warehouse_name
),
customer_analysis AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        d.cd_gender,
        d.cd_purchase_estimate,
        ROW_NUMBER() OVER (PARTITION BY c.c_customer_sk ORDER BY d.cd_purchase_estimate DESC) AS rn
    FROM 
        customer c
    JOIN 
        customer_demographics d ON c.c_current_cdemo_sk = d.cd_demo_sk
    WHERE 
        d.cd_purchase_estimate IS NOT NULL
),
top_customers AS (
    SELECT 
        ca.c_first_name,
        ca.c_last_name,
        ca.cd_gender,
        ca.cd_purchase_estimate,
        COALESCE(sd.total_sales, 0) AS total_sales
    FROM 
        customer_analysis ca
    LEFT JOIN 
        sales_data sd ON ca.c_customer_sk = sd.web_site_sk
    WHERE 
        ca.rn = 1
)
SELECT 
    t.c_first_name,
    t.c_last_name,
    t.cd_gender,
    t.cd_purchase_estimate,
    SUM(CASE WHEN t.total_sales > 0 THEN t.total_sales ELSE NULL END) AS positive_sales,
    COUNT(CASE WHEN t.total_sales = 0 THEN 1 END) AS null_sales_count,
    COUNT(CASE WHEN t.total_sales < 0 THEN 1 END) AS negative_sales_count
FROM 
    top_customers t
GROUP BY 
    t.c_first_name, t.c_last_name, t.cd_gender, t.cd_purchase_estimate
HAVING 
    SUM(t.total_sales) > 1000
ORDER BY 
    positive_sales DESC, t.c_last_name;
