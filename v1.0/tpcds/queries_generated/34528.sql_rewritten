WITH RECURSIVE SalesHierarchy AS (
    SELECT 
        ss.store_sk,
        ss_sold_date_sk,
        SUM(ss_sales_price) AS total_sales,
        1 AS level
    FROM 
        store_sales ss
    GROUP BY ss.store_sk, ss_sold_date_sk

    UNION ALL

    SELECT 
        sh.store_sk,
        sh.ss_sold_date_sk,
        sh.total_sales + sh_total_sales AS total_sales,
        level + 1
    FROM 
        SalesHierarchy sh
        JOIN store_returns sr ON sh.store_sk = sr.sr_store_sk
    WHERE 
        sh.ss_sold_date_sk = sr.sr_returned_date_sk
)

SELECT 
    c.c_first_name,
    c.c_last_name,
    ca.ca_city,
    SUM(ws.ws_net_profit) AS total_net_profit,
    COUNT(DISTINCT sr.sr_ticket_number) AS total_returns,
    CASE 
        WHEN SUM(ws.ws_net_profit) IS NULL THEN 'No sales'
        ELSE 'Sales available'
    END AS sales_status
FROM 
    customer c
    LEFT JOIN customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
    LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    LEFT JOIN store_returns sr ON c.c_customer_sk = sr.sr_customer_sk
WHERE 
    ca.ca_state = 'CA' 
    AND (ws.ws_sold_date_sk BETWEEN 1000 AND 2000 OR ws.ws_sold_date_sk IS NULL)
GROUP BY 
    c.c_customer_sk, c.c_first_name, c.c_last_name, ca.ca_city
ORDER BY 
    total_net_profit DESC;