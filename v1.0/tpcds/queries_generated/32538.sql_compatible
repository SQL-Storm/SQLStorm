
WITH RECURSIVE sales_hierarchy AS (
    SELECT 
        c_customer_sk,
        c_first_name,
        c_last_name,
        cd_marital_status,
        hd_income_band_sk,
        0 AS level
    FROM customer 
    JOIN customer_demographics ON c_current_cdemo_sk = cd_demo_sk
    WHERE c_customer_sk IS NOT NULL
    
    UNION ALL

    SELECT 
        sh.c_customer_sk,
        sh.c_first_name,
        sh.c_last_name,
        sh.cd_marital_status,
        sh.hd_income_band_sk,
        sh.level + 1
    FROM sales_hierarchy sh
    JOIN store_sales ss ON sh.c_customer_sk = ss.ss_customer_sk
    WHERE ss.ss_quantity > (
        SELECT AVG(ss_quantity) 
        FROM store_sales 
        WHERE ss_sold_date_sk = sh.c_customer_sk
    )
),
active_dates AS (
    SELECT 
        d_date_sk,
        d_date,
        d_month_seq,
        d_year,
        COUNT(*) OVER (PARTITION BY d_year ORDER BY d_month_seq) AS month_count
    FROM date_dim 
    WHERE d_date BETWEEN DATE '2002-10-01' - INTERVAL '12 MONTH' AND DATE '2002-10-01'
),
store_summary AS (
    SELECT 
        s_store_name,
        SUM(ws_net_profit) AS total_profit,
        COUNT(DISTINCT ss_ticket_number) AS total_sales,
        ROW_NUMBER() OVER (PARTITION BY s_store_sk ORDER BY SUM(ws_net_profit) DESC) AS rank
    FROM store
    JOIN store_sales ON store.s_store_sk = store_sales.ss_store_sk
    JOIN web_sales ON store_sales.ss_item_sk = web_sales.ws_item_sk
    WHERE ws_sold_date_sk IN (SELECT d_date_sk FROM active_dates)
    GROUP BY s_store_name, store.s_store_sk
)

SELECT 
    sh.c_first_name,
    sh.c_last_name,
    sh.cd_marital_status,
    COALESCE(SUM(ss.ss_net_profit), 0) AS total_net_profit,
    COUNT(DISTINCT ss.ss_ticket_number) AS total_tickets,
    ss_rank.rank AS ss_rank
FROM sales_hierarchy sh
LEFT JOIN store_sales ss ON sh.c_customer_sk = ss.ss_customer_sk
LEFT JOIN (
    SELECT 
        s_store_sk,
        s_store_name, 
        total_profit,
        rank
    FROM store_summary
    WHERE rank <= 3
) ss_rank ON ss.ss_store_sk = ss_rank.s_store_sk
GROUP BY sh.c_first_name, sh.c_last_name, sh.cd_marital_status, ss_rank.s_store_name, ss_rank.rank
HAVING COUNT(DISTINCT ss.ss_ticket_number) > 0
ORDER BY total_net_profit DESC;
