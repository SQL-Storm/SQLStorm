
WITH cumulative_sales AS (
    SELECT 
        ws_bills.bill_customer_sk,
        SUM(ws_ext_sales_price) AS total_sales,
        COUNT(DISTINCT ws_order_number) AS total_orders,
        ROW_NUMBER() OVER (PARTITION BY ws_bills.bill_customer_sk ORDER BY SUM(ws_ext_sales_price) DESC) AS sales_rank,
        MAX(ws_bills.bill_customer_sk) OVER () AS max_bill_customer_sk
    FROM web_sales ws_bills
    JOIN customer c ON ws_bills.ws_bill_customer_sk = c.c_customer_sk
    LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN store s ON s.s_store_sk = (
        SELECT sr_store_sk 
        FROM store_returns sr 
        WHERE sr_customer_sk = ws_bills.ws_bill_customer_sk 
        ORDER BY sr_return_quantity DESC 
        LIMIT 1
    )
    WHERE ws_bills.ws_sold_date_sk BETWEEN (
        SELECT MIN(d_date_sk) 
        FROM date_dim 
        WHERE d_year = 2023
    ) AND (
        SELECT MAX(d_date_sk) 
        FROM date_dim 
        WHERE d_year = 2023
    )
    GROUP BY ws_bills.bill_customer_sk
    HAVING SUM(ws_ext_sales_price) > (
        SELECT AVG(total) 
        FROM (
            SELECT SUM(ws_ext_sales_price) AS total
            FROM web_sales 
            GROUP BY ws_bill_customer_sk
        ) AS avg_sales
    )
), top_customers AS (
    SELECT * 
    FROM cumulative_sales 
    WHERE sales_rank <= 10
), combined_returns AS (
    SELECT 
        cr_returning_customer_sk AS customer_sk,
        SUM(cr_return_amount) AS total_return_amount,
        COUNT(DISTINCT cr_order_number) AS total_returns
    FROM catalog_returns
    WHERE cr_returned_date_sk IN (
        SELECT cr_returned_date_sk 
        FROM catalog_returns 
        WHERE cr_return_quantity > 0
    )
    GROUP BY cr_returning_customer_sk
), final_results AS (
    SELECT 
        tc.bill_customer_sk,
        tc.total_sales,
        tc.total_orders,
        COALESCE(cr.total_return_amount, 0) AS total_return_amount,
        COUNT(cr.customer_sk) AS return_count,
        (tc.total_sales - COALESCE(cr.total_return_amount, 0)) AS net_sales
    FROM top_customers tc 
    LEFT JOIN combined_returns cr ON tc.bill_customer_sk = cr.customer_sk
    GROUP BY tc.bill_customer_sk, tc.total_sales, tc.total_orders, cr.total_return_amount
)
SELECT 
    f.bill_customer_sk,
    f.total_sales,
    f.total_orders,
    f.total_return_amount,
    f.return_count,
    ROUND(f.net_sales, 2) AS net_sales
FROM final_results f
WHERE f.net_sales > 1000
ORDER BY f.net_sales DESC;
