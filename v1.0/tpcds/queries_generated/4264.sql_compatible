
WITH RankedReturns AS (
    SELECT 
        sr_customer_sk,
        sr_item_sk,
        sr_return_quantity,
        RANK() OVER (PARTITION BY sr_customer_sk ORDER BY sr_return_quantity DESC) AS rnk
    FROM 
        store_returns
    WHERE 
        sr_returned_date_sk >= (SELECT d_date_sk FROM date_dim WHERE d_date = DATE '2002-10-01' - INTERVAL '30 days')
),
CustomerStats AS (
    SELECT 
        c.c_customer_sk,
        COUNT(DISTINCT r.sr_item_sk) AS return_count,
        SUM(r.sr_return_quantity) AS total_returned_quantity,
        MAX(r.rnk) AS max_rank
    FROM 
        customer AS c
    LEFT JOIN 
        RankedReturns r ON c.c_customer_sk = r.sr_customer_sk
    WHERE 
        c.c_preferred_cust_flag = 'Y'
    GROUP BY 
        c.c_customer_sk
),
TopCustomers AS (
    SELECT 
        c.c_customer_id,
        cs.return_count,
        cs.total_returned_quantity,
        ROW_NUMBER() OVER (ORDER BY cs.total_returned_quantity DESC) AS customer_rank
    FROM 
        CustomerStats cs
    JOIN 
        customer c ON cs.c_customer_sk = c.c_customer_sk
    WHERE 
        cs.return_count > 0
)
SELECT 
    tc.c_customer_id, 
    tc.return_count, 
    tc.total_returned_quantity,
    CASE 
        WHEN tc.customer_rank <= 10 THEN 'Top 10' 
        ELSE 'Others' 
    END AS customer_category
FROM 
    TopCustomers tc
WHERE 
    EXISTS (
        SELECT 1 
        FROM web_sales ws 
        WHERE ws.ws_bill_customer_sk = tc.c_customer_id
        AND ws.ws_ext_sales_price > 100
    )
ORDER BY 
    tc.total_returned_quantity DESC;
