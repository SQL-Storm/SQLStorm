
WITH RankedSales AS (
    SELECT 
        ws_item_sk,
        COUNT(DISTINCT ws_order_number) AS order_count,
        SUM(ws_sales_price) AS total_sales,
        RANK() OVER (PARTITION BY ws_item_sk ORDER BY SUM(ws_sales_price) DESC) AS sales_rank
    FROM 
        web_sales
    WHERE 
        ws_sales_price > 0
    GROUP BY 
        ws_item_sk
),
InventoryWithSales AS (
    SELECT 
        i.inv_item_sk,
        COALESCE(SUM(i.inv_quantity_on_hand), 0) AS total_inventory,
        COALESCE(s.total_sales, 0) AS total_sales,
        COALESCE(s.order_count, 0) AS order_count
    FROM 
        inventory i
    LEFT JOIN 
        RankedSales s ON i.inv_item_sk = s.ws_item_sk
    GROUP BY 
        i.inv_item_sk
),
FinalMetrics AS (
    SELECT 
        iw.inv_item_sk,
        iw.total_inventory,
        iw.total_sales,
        iw.order_count,
        CASE 
            WHEN iw.total_inventory > 0 THEN (iw.total_sales / iw.total_inventory)
            ELSE NULL
        END AS sales_per_inventory
    FROM 
        InventoryWithSales iw
)
SELECT 
    p.p_promo_name,
    fm.inv_item_sk,
    fm.total_sales,
    fm.order_count,
    fm.sales_per_inventory,
    DENSE_RANK() OVER (ORDER BY fm.total_sales DESC) AS sales_rank,
    DATE '2002-10-01' AS report_date
FROM 
    FinalMetrics fm
JOIN 
    promotion p ON fm.order_count > 0
WHERE 
    p.p_start_date_sk <= (SELECT MAX(d_date_sk) FROM date_dim WHERE d_date = DATE '2002-10-01')
    AND p.p_end_date_sk >= (SELECT MIN(d_date_sk) FROM date_dim WHERE d_date = DATE '2002-10-01')
    AND (fm.sales_per_inventory IS NOT NULL OR fm.total_inventory IS NULL)
ORDER BY 
    sales_rank, fm.inv_item_sk;
