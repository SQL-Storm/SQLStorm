
WITH RankedSales AS (
    SELECT 
        ws.web_site_sk,
        ws.ws_sold_date_sk,
        SUM(ws.ws_sales_price) AS total_sales,
        DENSE_RANK() OVER (PARTITION BY ws.web_site_sk ORDER BY SUM(ws.ws_sales_price) DESC) AS sales_rank
    FROM 
        web_sales ws
    JOIN 
        date_dim dd ON ws.ws_sold_date_sk = dd.d_date_sk
    WHERE 
        dd.d_year = 2023 
    GROUP BY 
        ws.web_site_sk, ws.ws_sold_date_sk
),
CustomerDetails AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_purchase_estimate,
        CASE 
            WHEN cd.cd_dep_count IS NULL THEN 'Unknown'
            ELSE CAST(cd.cd_dep_count AS VARCHAR) 
        END AS dependent_count
    FROM 
        customer c
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
),
TopSalesSites AS (
    SELECT 
        web_site_sk
    FROM 
        RankedSales
    WHERE 
        sales_rank <= 3
)
SELECT 
    cs.c_customer_sk,
    cs.c_first_name,
    cs.c_last_name,
    cs.dependent_count,
    SUM(ws.ws_sales_price) AS total_sales,
    SUM(ws.ws_ext_discount_amt) AS total_discount,
    CASE 
        WHEN SUM(ws.ws_sales_price) IS NULL THEN 0 
        ELSE SUM(ws.ws_sales_price) - SUM(ws.ws_ext_discount_amt)
    END AS net_revenue,
    COUNT(DISTINCT ws.ws_order_number) AS order_count
FROM 
    CustomerDetails cs
JOIN 
    web_sales ws ON cs.c_customer_sk = ws.ws_bill_customer_sk
JOIN 
    TopSalesSites tss ON ws.ws_web_site_sk = tss.web_site_sk
GROUP BY 
    cs.c_customer_sk, cs.c_first_name, cs.c_last_name, cs.dependent_count
ORDER BY 
    net_revenue DESC
FETCH FIRST 100 ROWS ONLY;
