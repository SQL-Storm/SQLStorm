
WITH RECURSIVE sales_cte AS (
    SELECT 
        ws_order_number, 
        SUM(ws_quantity) AS total_quantity,
        SUM(ws_net_paid_inc_tax) AS total_revenue,
        ROW_NUMBER() OVER (PARTITION BY ws_order_number ORDER BY ws_sales_price DESC) as rn
    FROM 
        web_sales
    GROUP BY 
        ws_order_number
    HAVING 
        SUM(ws_quantity) > 0
),
classifications AS (
    SELECT 
        c.c_customer_sk, 
        cd.cd_gender,
        hd.hd_income_band_sk,
        (CASE 
            WHEN cd.cd_marital_status = 'M' THEN 'Married'
            ELSE 'Single'
        END) AS marital_status
    FROM 
        customer c 
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk 
    LEFT JOIN 
        household_demographics hd ON c.c_customer_sk = hd.hd_demo_sk
)
SELECT 
    c.customer_id,
    c.first_name,
    c.last_name,
    COALESCE(wp.wp_url, 'N/A') AS web_page_url,
    COALESCE(SUM(ss.ss_ext_sales_price), 0) AS total_sales_from_stores,
    ARRAY_AGG(DISTINCT CONCAT('Income Band: ', ib.ib_lower_bound, ' - ', ib.ib_upper_bound)) AS income_bands,
    CASE 
        WHEN SUM(ws.ws_ext_sales_price) IS NOT NULL THEN 'Online Sales Available'
        ELSE 'No Online Sales'
    END AS online_sales_status
FROM 
    customer c
LEFT JOIN 
    classifications cl ON c.c_customer_sk = cl.c_customer_sk
LEFT JOIN 
    store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
LEFT JOIN 
    web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
LEFT JOIN 
    web_page wp ON ws.ws_web_page_sk = wp.wp_web_page_sk
LEFT JOIN 
    income_band ib ON cl.hd_income_band_sk = ib.ib_income_band_sk
GROUP BY 
    c.customer_id, c.first_name, c.last_name, wp.wp_url
HAVING 
    COUNT(DISTINCT CASE WHEN ws.ws_order_number IS NOT NULL THEN ws.ws_order_number END) > 0
ORDER BY 
    total_sales_from_stores DESC 
LIMIT 10;
