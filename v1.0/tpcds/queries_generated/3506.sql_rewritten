WITH SalesData AS (
    SELECT 
        ws.ws_item_sk,
        SUM(ws.ws_quantity) AS total_quantity,
        SUM(ws.ws_net_profit) AS total_profit,
        DENSE_RANK() OVER (PARTITION BY ws.ws_item_sk ORDER BY SUM(ws.ws_net_profit) DESC) AS profit_rank
    FROM 
        web_sales ws
    JOIN 
        item i ON ws.ws_item_sk = i.i_item_sk
    WHERE 
        i.i_rec_start_date <= cast('2002-10-01' as date) 
        AND (i.i_rec_end_date IS NULL OR i.i_rec_end_date > cast('2002-10-01' as date))
    GROUP BY 
        ws.ws_item_sk
    HAVING 
        SUM(ws.ws_sales_price) > 0
),
TopItems AS (
    SELECT 
        item_sk,
        total_quantity,
        total_profit
    FROM 
        SalesData
    WHERE 
        profit_rank <= 10
),
FrequentReturnReasons AS (
    SELECT 
        r.r_reason_desc,
        COUNT(cr.cr_item_sk) AS total_returns
    FROM 
        catalog_returns cr
    JOIN 
        reason r ON cr.cr_reason_sk = r.r_reason_sk
    WHERE 
        cr.cr_item_sk IN (SELECT item_sk FROM TopItems)
    GROUP BY 
        r.r_reason_desc
),
ReturnStatistics AS (
    SELECT 
        r.r_reason_desc,
        COALESCE(SUM(cr.cr_return_quantity), 0) AS total_returned_quantity,
        COUNT(cr.cr_order_number) AS total_return_count
    FROM 
        FrequentReturnReasons r
    FULL OUTER JOIN 
        catalog_returns cr ON r.r_reason_desc = cr.cr_reason_sk
    GROUP BY 
        r.r_reason_desc
)
SELECT 
    ti.item_sk,
    ti.total_quantity,
    ti.total_profit,
    rs.r_reason_desc,
    rs.total_returned_quantity,
    rs.total_return_count,
    CASE 
        WHEN rs.total_returned_quantity > 0 THEN 'Returns Exist'
        ELSE 'No Returns'
    END AS return_status
FROM 
    TopItems ti
LEFT JOIN 
    ReturnStatistics rs ON ti.item_sk = rs.r_reason_desc
ORDER BY 
    ti.total_profit DESC;