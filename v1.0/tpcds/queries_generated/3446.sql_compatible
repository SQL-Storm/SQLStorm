
WITH customer_summary AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_education_status,
        COUNT(DISTINCT ws.ws_order_number) AS total_orders,
        SUM(ws.ws_net_paid) AS total_spent,
        DENSE_RANK() OVER (ORDER BY SUM(ws.ws_net_paid) DESC) AS spending_rank
    FROM 
        customer c
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY 
        c.c_customer_sk, c.c_first_name, c.c_last_name, cd.cd_gender, cd.cd_marital_status, cd.cd_education_status
),
top_customers AS (
    SELECT * FROM customer_summary
    WHERE spending_rank <= 10
),
item_summary AS (
    SELECT 
        i.i_item_sk,
        i.i_item_id,
        COUNT(ws.ws_order_number) AS order_count,
        SUM(ws.ws_quantity) AS total_quantity_sold,
        AVG(ws.ws_sales_price) AS avg_price
    FROM 
        item i
    JOIN 
        web_sales ws ON i.i_item_sk = ws.ws_item_sk
    GROUP BY 
        i.i_item_sk, i.i_item_id
),
best_selling_items AS (
    SELECT 
        is.i_item_id,
        is.total_quantity_sold,
        RANK() OVER (ORDER BY is.total_quantity_sold DESC) AS best_selling_rank
    FROM 
        item_summary is
)
SELECT 
    CONCAT(tc.c_first_name, ' ', tc.c_last_name) AS customer_name,
    tc.cd_gender,
    tc.cd_marital_status,
    tc.total_orders,
    tc.total_spent,
    bsi.i_item_id,
    bsi.total_quantity_sold
FROM 
    top_customers tc
LEFT JOIN 
    best_selling_items bsi ON tc.total_orders = bsi.best_selling_rank
WHERE 
    tc.cd_gender IS NOT NULL
ORDER BY 
    tc.total_spent DESC,
    bsi.total_quantity_sold DESC;
