
WITH RankSales AS (
    SELECT 
        ws.web_site_sk,
        ws.ws_item_sk,
        SUM(ws.ws_quantity) AS total_quantity_sold,
        RANK() OVER (PARTITION BY ws.web_site_sk ORDER BY SUM(ws.ws_quantity) DESC) AS sales_rank
    FROM 
        web_sales ws
    JOIN 
        item i ON ws.ws_item_sk = i.i_item_sk
    WHERE 
        i.i_current_price > 10
    GROUP BY 
        ws.web_site_sk, ws.ws_item_sk
),
HighValueCustomers AS (
    SELECT 
        c.c_customer_sk,
        COUNT(DISTINCT s.ss_ticket_number) AS total_purchases,
        SUM(s.ss_net_paid) AS total_spent
    FROM 
        customer c
    LEFT JOIN 
        store_sales s ON c.c_customer_sk = s.ss_customer_sk
    WHERE 
        c.c_birth_year < 1980
    GROUP BY 
        c.c_customer_sk
    HAVING 
        total_spent > (SELECT AVG(total_spent) FROM (SELECT SUM(ss_net_paid) AS total_spent FROM store_sales GROUP BY ss_customer_sk) AS avg_spent)
),
RecentReturns AS (
    SELECT 
        cr.returning_customer_sk,
        SUM(cr.cr_return_quantity) AS total_returns,
        SUM(cr.cr_return_amount) AS total_return_amount
    FROM 
        catalog_returns cr
    WHERE 
        cr.cr_returned_date_sk >= (SELECT MAX(d.d_date_sk) FROM date_dim d WHERE d.d_date = DATE '2002-10-01' - INTERVAL '30 DAYS')
    GROUP BY 
        cr.returning_customer_sk
)
SELECT 
    cu.c_customer_sk,
    cu.total_purchases,
    cu.total_spent,
    COALESCE(rr.total_returns, 0) AS total_returns,
    COALESCE(rr.total_return_amount, 0) AS total_return_amount,
    CASE 
        WHEN cu.total_purchases > 10 THEN 'Frequent'
        WHEN cu.total_purchases BETWEEN 5 AND 10 THEN 'Moderate'
        ELSE 'Occasional'
    END AS customer_category
FROM 
    HighValueCustomers cu
LEFT JOIN 
    RecentReturns rr ON cu.c_customer_sk = rr.returning_customer_sk
JOIN 
    RankSales rs ON rs.web_site_sk = (SELECT ws.web_site_sk FROM web_site ws ORDER BY ws.w_warehouse_sq_ft DESC LIMIT 1)
WHERE 
    rs.total_quantity_sold > 5
ORDER BY 
    cu.total_spent DESC;
