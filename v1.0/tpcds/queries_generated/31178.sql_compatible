
WITH RECURSIVE sales_hierarchy AS (
    SELECT 
        ws.bill_customer_sk,
        ws.bill_cdemo_sk,
        ws.item_sk,
        SUM(ws.ext_sales_price) AS total_sales,
        COUNT(ws.order_number) AS total_orders,
        ROW_NUMBER() OVER (PARTITION BY ws.bill_cdemo_sk ORDER BY SUM(ws.ext_sales_price) DESC) AS sales_rank
    FROM 
        web_sales ws
    JOIN 
        customer c ON ws.bill_customer_sk = c.c_customer_sk
    WHERE 
        c.c_birth_year > 1980
    GROUP BY 
        ws.bill_customer_sk, ws.bill_cdemo_sk, ws.item_sk
), 
customer_sales AS (
    SELECT 
        c.c_customer_id,
        COALESCE(SUM(ws.total_sales), 0) AS total_sales,
        COALESCE(SUM(ws.total_orders), 0) AS total_orders
    FROM 
        customer c
    LEFT JOIN 
        sales_hierarchy ws ON c.c_current_cdemo_sk = ws.bill_cdemo_sk
    GROUP BY 
        c.c_customer_id
),
top_customers AS (
    SELECT 
        c.c_customer_id,
        cs.total_sales,
        cs.total_orders,
        DENSE_RANK() OVER (ORDER BY cs.total_sales DESC) AS sales_rank
    FROM 
        customer_sales cs
    JOIN 
        customer c ON cs.c_customer_id = c.c_customer_id
    WHERE 
        cs.total_sales > 0
)
SELECT 
    tc.c_customer_id,
    tc.total_sales,
    tc.total_orders,
    CASE 
        WHEN tc.sales_rank <= 10 THEN 'Top Customer'
        WHEN tc.sales_rank > 10 AND tc.sales_rank <= 50 THEN 'Regular Customer'
        ELSE 'Casual Customer'
    END AS customer_type
FROM 
    top_customers tc
WHERE 
    tc.sales_rank <= 100
ORDER BY 
    tc.total_sales DESC;
