
WITH CustomerSales AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        CASE 
            WHEN cd.cd_gender = 'M' THEN 'Male'
            WHEN cd.cd_gender = 'F' THEN 'Female'
            ELSE 'Other'
        END AS Gender,
        COALESCE(SUM(ws.ws_ext_sales_price), 0) AS Total_Sales,
        COUNT(DISTINCT ws.ws_order_number) AS Total_Orders
    FROM 
        customer c
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY 
        c.c_customer_sk, c.c_first_name, c.c_last_name, cd.cd_gender
),
ItemSales AS (
    SELECT 
        i.i_item_sk,
        i.i_item_id,
        i.i_product_name,
        SUM(ws.ws_quantity) AS Total_Quantity_Sold,
        AVG(ws.ws_sales_price) AS Avg_Selling_Price
    FROM 
        item i
    JOIN 
        web_sales ws ON i.i_item_sk = ws.ws_item_sk
    GROUP BY 
        i.i_item_sk, i.i_item_id, i.i_product_name
),
TopItems AS (
    SELECT 
        i.i_item_id,
        i.i_product_name,
        ROW_NUMBER() OVER (ORDER BY SUM(ws.ws_ext_sales_price) DESC) AS Sales_Rank
    FROM 
        item i
    JOIN 
        web_sales ws ON i.i_item_sk = ws.ws_item_sk
    GROUP BY 
        i.i_item_id, i.i_product_name
    HAVING 
        COUNT(ws.ws_order_number) > 5
)

SELECT 
    cs.c_first_name,
    cs.c_last_name,
    cs.Gender,
    cs.Total_Sales,
    cs.Total_Orders,
    ti.i_product_name,
    ti.Sales_Rank,
    is.Total_Quantity_Sold,
    is.Avg_Selling_Price
FROM 
    CustomerSales cs
LEFT JOIN 
    TopItems ti ON cs.Total_Sales > 1000
LEFT JOIN 
    ItemSales is ON ti.i_item_id = is.i_item_id
WHERE 
    cs.Total_Sales > (SELECT AVG(Total_Sales) FROM CustomerSales)
ORDER BY 
    cs.Total_Sales DESC, ti.Sales_Rank
FETCH FIRST 50 ROWS ONLY;
