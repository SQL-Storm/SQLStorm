WITH RECURSIVE customer_info AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_credit_rating,
        cd.cd_purchase_estimate,
        cd.cd_dep_count,
        cd_dep_college_count,
        cd_dep_employed_count,
        1 AS level
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    WHERE 
        c.c_birth_year >= 1985
    UNION ALL
    SELECT 
        ci.c_customer_sk,
        ci.c_first_name,
        ci.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_credit_rating,
        cd.cd_purchase_estimate,
        cd.cd_dep_count,
        cd.cd_dep_college_count,
        cd.cd_dep_employed_count,
        ci.level + 1
    FROM 
        customer_info ci
    JOIN 
        customer c ON ci.c_customer_sk = c.c_current_addr_sk
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    WHERE 
        ci.level < 5  
)
SELECT 
    ci.c_customer_sk,
    CONCAT(ci.c_first_name, ' ', ci.c_last_name) AS full_name,
    ci.cd_gender,
    SUM(ws.ws_net_profit) AS total_profit,
    COUNT(DISTINCT ws.ws_order_number) AS total_orders,
    AVG(ws.ws_list_price) AS avg_list_price,
    MAX(ws.ws_sales_price) AS max_sales_price,
    MIN(ws.ws_sales_price) AS min_sales_price
FROM 
    customer_info ci
LEFT JOIN 
    web_sales ws ON ci.c_customer_sk = ws.ws_bill_customer_sk
WHERE 
    ws.ws_sold_date_sk IN (
        SELECT 
            d.d_date_sk 
        FROM 
            date_dim d 
        WHERE 
            d.d_year = 2001
    ) 
    AND ci.cd_credit_rating IS NOT NULL 
GROUP BY 
    ci.c_customer_sk, 
    ci.c_first_name, 
    ci.c_last_name, 
    ci.cd_gender
HAVING 
    total_profit > 500.00 
ORDER BY 
    total_profit DESC;