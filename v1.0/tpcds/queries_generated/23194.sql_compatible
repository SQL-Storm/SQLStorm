
WITH RankedReturns AS (
    SELECT 
        sr.return_item_sk,
        COUNT(*) AS return_count,
        SUM(sr.return_amt) AS total_return_amt,
        SUM(sr.return_tax) AS total_return_tax,
        SUM(sr.return_net_loss) AS total_net_loss,
        ROW_NUMBER() OVER (PARTITION BY sr.return_item_sk ORDER BY SUM(sr.return_amt) DESC) AS rn
    FROM store_returns sr
    GROUP BY sr.return_item_sk
),
CustomerStats AS (
    SELECT
        c.c_customer_sk,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_purchase_estimate,
        COUNT(ca.ca_address_sk) AS address_count,
        COALESCE(SUM(CASE WHEN cd.cd_dep_count > 0 THEN 1 ELSE 0 END), 0) AS employed_deps,
        COALESCE(AVG(cd.cd_purchase_estimate), 0) AS avg_purchase
    FROM customer c
    LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
    GROUP BY c.c_customer_sk, cd.cd_gender, cd.cd_marital_status, cd.cd_purchase_estimate
),
SalesStats AS (
    SELECT
        ws.ws_item_sk,
        SUM(ws.ws_quantity) AS total_quantity_sold,
        AVG(ws.ws_sales_price) AS avg_sales_price,
        MAX(ws.ws_net_profit) AS max_net_profit,
        MIN(ws.ws_net_profit) AS min_net_profit
    FROM web_sales ws
    GROUP BY ws.ws_item_sk
)
SELECT 
    cs.c_customer_sk,
    cs.cd_gender,
    cs.cd_marital_status,
    cs.avg_purchase,
    ss.total_quantity_sold,
    ss.avg_sales_price,
    ss.max_net_profit,
    ss.min_net_profit,
    rr.return_count,
    rr.total_return_amt,
    rr.total_return_tax
FROM CustomerStats cs
LEFT JOIN SalesStats ss ON cs.c_customer_sk = ss.ws_item_sk
LEFT JOIN RankedReturns rr ON ss.ws_item_sk = rr.return_item_sk AND rr.rn = 1
WHERE (cs.avg_purchase > 100 AND cs.address_count > 1)
   OR (cs.cd_gender = 'F' AND cs.cd_marital_status IS NULL)
   OR (cs.cd_purchase_estimate IS NOT NULL AND cs.cd_purchase_estimate BETWEEN 500 AND 2000)
ORDER BY cs.cd_gender, ss.total_quantity_sold DESC
OFFSET 10 ROWS
FETCH NEXT 20 ROWS ONLY;
