
WITH recent_sales AS (
    SELECT 
        ws.ws_sold_date_sk,
        ws.ws_item_sk,
        SUM(ws.ws_quantity) AS total_quantity,
        SUM(ws.ws_sales_price) AS total_sales,
        ROW_NUMBER() OVER (PARTITION BY ws.ws_item_sk ORDER BY ws.ws_sold_date_sk DESC) AS rn
    FROM 
        web_sales ws
    JOIN 
        date_dim dd ON ws.ws_sold_date_sk = dd.d_date_sk
    WHERE 
        dd.d_year = 2023
    GROUP BY 
        ws.ws_sold_date_sk, ws.ws_item_sk
),
customer_info AS (
    SELECT 
        c.c_customer_sk,
        cd.cd_gender,
        cd.cd_marital_status,
        CASE 
            WHEN cd.cd_purchase_estimate IS NULL THEN 'Unknown'
            ELSE CASE 
                WHEN cd.cd_purchase_estimate < 1000 THEN 'Low'
                WHEN cd.cd_purchase_estimate BETWEEN 1000 AND 5000 THEN 'Medium'
                ELSE 'High'
            END
        END AS purchase_category
    FROM 
        customer c
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
)
SELECT 
    ci.c_customer_sk,
    ci.cd_gender,
    ci.cd_marital_status,
    ci.purchase_category,
    COALESCE(SUM(rs.total_quantity), 0) AS total_web_quantity,
    COALESCE(SUM(rs.total_sales), 0) AS total_web_sales,
    COUNT(DISTINCT rs.ws_item_sk) AS distinct_items_bought
FROM 
    customer_info ci
LEFT JOIN 
    recent_sales rs ON ci.c_customer_sk = rs.ws_bill_customer_sk
WHERE 
    ci.cd_marital_status = 'M' AND
    (ci.cd_gender = 'F' OR ci.cd_gender IS NULL)
GROUP BY 
    ci.c_customer_sk, ci.cd_gender, ci.cd_marital_status, ci.purchase_category
HAVING 
    SUM(COALESCE(rs.total_sales, 0)) > 1000
ORDER BY 
    total_web_sales DESC
LIMIT 10

UNION ALL

SELECT 
    ci.c_customer_sk,
    ci.cd_gender,
    ci.cd_marital_status,
    ci.purchase_category,
    0 AS total_web_quantity,
    0 AS total_web_sales,
    0 AS distinct_items_bought
FROM 
    customer_info ci
WHERE 
    ci.cd_marital_status = 'S' AND
    (ci.cd_gender = 'M' OR ci.cd_gender IS NULL);
