
WITH CustomerSales AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        SUM(ws.ws_net_paid) AS total_sales
    FROM 
        customer c
    LEFT JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY 
        c.c_customer_sk, c.c_first_name, c.c_last_name
),
HighSpenders AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cs.total_sales,
        HD.hd_income_band_sk,
        IB.ib_lower_bound,
        IB.ib_upper_bound
    FROM 
        CustomerSales cs
    JOIN 
        customer_demographics CD ON cs.c_customer_sk = CD.cd_demo_sk
    JOIN 
        household_demographics HD ON CD.cd_demo_sk = HD.hd_demo_sk
    JOIN 
        income_band IB ON HD.hd_income_band_sk = IB.ib_income_band_sk
    WHERE 
        cs.total_sales > 1000
),
RankedSpenders AS (
    SELECT 
        hs.c_customer_sk,
        hs.c_first_name,
        hs.c_last_name,
        hs.total_sales,
        hs.ib_lower_bound,
        hs.ib_upper_bound,
        ROW_NUMBER() OVER (ORDER BY hs.total_sales DESC) AS rank
    FROM 
        HighSpenders hs
)
SELECT 
    rs.c_first_name,
    rs.c_last_name,
    rs.total_sales,
    CONCAT('Income Range: ', CAST(rs.ib_lower_bound AS VARCHAR), ' - ', CAST(rs.ib_upper_bound AS VARCHAR)) AS income_range,
    CASE
        WHEN rs.total_sales > 5000 THEN 'Platinum'
        WHEN rs.total_sales BETWEEN 3000 AND 5000 THEN 'Gold'
        WHEN rs.total_sales BETWEEN 1000 AND 3000 THEN 'Silver'
        ELSE 'Bronze'
    END AS customer_tier
FROM 
    RankedSpenders rs
WHERE 
    rs.rank <= 10
ORDER BY 
    rs.total_sales DESC;
