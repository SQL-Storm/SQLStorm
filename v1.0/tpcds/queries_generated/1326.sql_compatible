
WITH CustomerSales AS (
    SELECT 
        c.c_customer_id,
        SUM(ws.ws_ext_sales_price) AS total_sales,
        COUNT(DISTINCT ws.ws_order_number) AS order_count,
        RANK() OVER (PARTITION BY cd.cd_gender ORDER BY SUM(ws.ws_ext_sales_price) DESC) AS sales_rank
    FROM 
        customer c
        JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
        LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    WHERE 
        c.c_birth_year BETWEEN 1975 AND 1995 
        AND c.c_first_name IS NOT NULL
    GROUP BY 
        c.c_customer_id, cd.cd_gender
),
WarehouseSales AS (
    SELECT 
        w.w_warehouse_id,
        SUM(ws.ws_ext_sales_price) AS warehouse_sales
    FROM 
        warehouse w
        JOIN web_sales ws ON w.w_warehouse_sk = ws.ws_warehouse_sk
    GROUP BY 
        w.w_warehouse_id
),
SalesSummary AS (
    SELECT 
        cs.c_customer_id,
        cs.total_sales,
        ws.warehouse_sales,
        cs.order_count,
        CASE 
            WHEN cs.order_count > 0 THEN cs.total_sales / cs.order_count 
            ELSE 0 
        END AS avg_order_value
    FROM 
        CustomerSales cs
    LEFT JOIN WarehouseSales ws ON cs.c_customer_id = ws.warehouse_sales
)
SELECT 
    s.c_customer_id,
    s.total_sales,
    s.warehouse_sales,
    s.avg_order_value,
    CASE 
        WHEN s.total_sales > 10000 THEN 'High roller'
        WHEN s.total_sales BETWEEN 5000 AND 10000 THEN 'Medium spender'
        ELSE 'Low spender' 
    END AS customer_tier
FROM 
    SalesSummary s
WHERE 
    s.warehouse_sales IS NOT NULL
ORDER BY 
    s.total_sales DESC
FETCH FIRST 50 ROWS ONLY;
