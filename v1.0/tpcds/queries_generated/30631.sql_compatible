
WITH RECURSIVE ranked_sales AS (
    SELECT 
        ss.ss_item_sk, 
        ss.ss_ticket_number,
        ss.ss_sold_date_sk,
        ss.ss_sales_price,
        ss.ss_ext_sales_price,
        ROW_NUMBER() OVER (PARTITION BY ss.ss_item_sk ORDER BY ss.ss_sales_price DESC) AS sales_rank
    FROM store_sales ss
    WHERE ss.ss_sales_price IS NOT NULL
),
item_promotions AS (
    SELECT 
        cs.cs_item_sk,
        SUM(cs.cs_ext_sales_price) AS total_sales,
        COUNT(DISTINCT cs.cs_order_number) AS order_count
    FROM catalog_sales cs
    JOIN promotion p ON cs.cs_promo_sk = p.p_promo_sk
    WHERE p.p_start_date_sk <= (SELECT MAX(d.d_date_sk) FROM date_dim d WHERE d.d_date = DATE '2002-10-01')
      AND p.p_end_date_sk >= (SELECT MIN(d.d_date_sk) FROM date_dim d WHERE d.d_date = DATE '2002-10-01')
    GROUP BY cs.cs_item_sk
),
combined_sales AS (
    SELECT 
        i.i_item_id,
        COALESCE(s.sales_rank, 0) AS sales_rank,
        COALESCE(ip.total_sales, 0) AS total_catalog_sales,
        COALESCE(ip.order_count, 0) AS total_order_count
    FROM item i
    LEFT JOIN ranked_sales s ON i.i_item_sk = s.ss_item_sk
    LEFT JOIN item_promotions ip ON i.i_item_sk = ip.cs_item_sk
)
SELECT 
    ca.ca_city,
    COUNT(DISTINCT c.c_customer_id) AS customer_count,
    SUM(cs.ss_net_paid) AS total_sales_amount,
    AVG(cs.ss_sales_price) AS avg_sales_price,
    STRING_AGG(DISTINCT i.i_item_id) AS item_ids,
    COUNT(DISTINCT CASE WHEN EXTRACT(MONTH FROM c.c_birth_month) = EXTRACT(MONTH FROM DATE '2002-10-01') THEN c.c_customer_id END) AS birthday_month_customers
FROM combined_sales cs
JOIN customer c ON cs.sales_rank = 1 AND c.c_current_addr_sk IS NOT NULL
JOIN customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
GROUP BY ca.ca_city
HAVING SUM(cs.ss_net_paid) > 1000
ORDER BY total_sales_amount DESC
LIMIT 10;
