
WITH RECURSIVE price_history AS (
    SELECT i_item_sk, i_item_id, i_current_price, 1 AS price_level
    FROM item
    WHERE i_rec_start_date <= DATE '2002-10-01'
    UNION ALL
    SELECT i_item_sk, i_item_id, i_current_price * 1.05, price_level + 1
    FROM price_history
    WHERE price_level < 5
),
customer_summary AS (
    SELECT c.c_customer_sk, COUNT(DISTINCT ws.ws_order_number) AS order_count, SUM(ws.ws_net_profit) AS total_profit
    FROM customer c
    LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    WHERE c.c_birth_year BETWEEN 1980 AND 2000
    GROUP BY c.c_customer_sk
),
high_value_customers AS (
    SELECT cs.c_customer_sk
    FROM customer_summary cs
    WHERE cs.total_profit > (SELECT AVG(total_profit) FROM customer_summary)
),
item_sales AS (
    SELECT
        i.i_item_sk,
        i.i_item_id,
        SUM(ws.ws_quantity) AS total_quantity_sold,
        SUM(ws.ws_net_profit) AS total_net_profit,
        ROW_NUMBER() OVER (PARTITION BY i.i_item_sk ORDER BY SUM(ws.ws_net_profit) DESC) AS profit_rank
    FROM item i
    JOIN web_sales ws ON i.i_item_sk = ws.ws_item_sk
    WHERE ws.ws_sold_date_sk >= CURRENT_DATE - INTERVAL '6 months'
    GROUP BY i.i_item_sk, i.i_item_id
),
sales_with_customers AS (
    SELECT
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        is.i_item_id,
        is.total_quantity_sold,
        is.total_net_profit,
        CASE
            WHEN c.c_customer_sk IN (SELECT c_customer_sk FROM high_value_customers) THEN 'High Value'
            ELSE 'Regular'
        END AS customer_type
    FROM customer c
    JOIN item_sales is ON c.c_customer_sk = is.i_item_sk
)
SELECT
    swc.c_first_name,
    swc.c_last_name,
    swc.i_item_id,
    swc.total_quantity_sold,
    swc.total_net_profit,
    p.price_level,
    CASE
        WHEN swc.total_net_profit IS NULL THEN 'No Profit'
        ELSE 'Profit Made'
    END AS profit_status
FROM sales_with_customers swc
LEFT JOIN price_history p ON swc.i_item_id = p.i_item_id
WHERE swc.total_net_profit IS NOT NULL
ORDER BY swc.total_net_profit DESC
LIMIT 100;
