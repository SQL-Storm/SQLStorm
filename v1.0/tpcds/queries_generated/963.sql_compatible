
WITH CustomerSales AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cs.cs_net_paid_inc_tax AS total_sales,
        DENSE_RANK() OVER (PARTITION BY c.c_customer_sk ORDER BY cs.cs_net_paid_inc_tax DESC) AS sales_rank
    FROM 
        customer c
    LEFT JOIN 
        store_sales cs ON c.c_customer_sk = cs.ss_customer_sk
    WHERE 
        cs.ss_sold_date_sk >= (SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = 2023) - 30
),
TopCustomers AS (
    SELECT 
        cs.c_customer_sk,
        cs.c_first_name,
        cs.c_last_name,
        SUM(cs.total_sales) AS total_sales
    FROM 
        CustomerSales cs
    WHERE 
        cs.sales_rank <= 5
    GROUP BY 
        cs.c_customer_sk, cs.c_first_name, cs.c_last_name
)
SELECT 
    tc.c_customer_sk,
    tc.c_first_name,
    tc.c_last_name,
    COALESCE(NULLIF(tc.total_sales, 0), 'No sales') AS sales_amount,
    CASE 
        WHEN tc.total_sales > (SELECT AVG(total_sales) FROM TopCustomers) THEN 'Above Average'
        ELSE 'Below Average'
    END AS performance_category
FROM 
    TopCustomers tc
FULL OUTER JOIN 
    customer_address ca ON tc.c_customer_sk = ca.ca_address_sk
WHERE 
    ca.ca_country IS NOT NULL
ORDER BY 
    sales_amount DESC;
