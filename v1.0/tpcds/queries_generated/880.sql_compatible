
WITH RankedSales AS (
    SELECT 
        ws.bill_customer_sk,
        SUM(ws.ext_sales_price) AS total_sales,
        COUNT(DISTINCT ws.order_number) AS order_count,
        RANK() OVER (PARTITION BY ws.bill_customer_sk ORDER BY SUM(ws.ext_sales_price) DESC) AS sales_rank
    FROM 
        web_sales ws
    WHERE 
        ws.sold_date_sk BETWEEN 2459538 AND 2459568  
    GROUP BY 
        ws.bill_customer_sk
),
HighValueCustomers AS (
    SELECT 
        c.c_customer_id,
        c.c_first_name,
        c.c_last_name,
        cs.total_sales,
        cs.order_count
    FROM 
        customer c
    JOIN RankedSales cs ON c.c_customer_sk = cs.bill_customer_sk
    WHERE 
        cs.sales_rank = 1
),
ReturnStats AS (
    SELECT 
        sr.customer_sk,
        COUNT(sr.ticket_number) AS return_count,
        SUM(sr.return_amt_inc_tax) AS total_return_amount
    FROM 
        store_returns sr
    GROUP BY 
        sr.customer_sk
),
FinalAnalytics AS (
    SELECT 
        hc.c_first_name,
        hc.c_last_name,
        COALESCE(rs.return_count, 0) AS return_count,
        COALESCE(rs.total_return_amount, 0) AS total_return_amount,
        hc.total_sales,
        hc.order_count,
        hc.bill_customer_sk
    FROM 
        HighValueCustomers hc
    LEFT JOIN ReturnStats rs ON hc.bill_customer_id = rs.customer_sk
)
SELECT 
    CONCAT(fa.c_first_name, ' ', fa.c_last_name) AS customer_name,
    fa.total_sales,
    fa.order_count,
    fa.return_count,
    fa.total_return_amount,
    CASE 
        WHEN fa.total_return_amount / NULLIF(fa.total_sales, 0) > 0.1 THEN 'High Return Customer'
        ELSE 'Normal Customer'
    END AS customer_type
FROM 
    FinalAnalytics fa
ORDER BY 
    fa.total_sales DESC;
