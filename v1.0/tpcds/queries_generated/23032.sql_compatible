
WITH CustomerInfo AS (
    SELECT 
        c.c_customer_id,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_purchase_estimate,
        cd.cd_credit_rating,
        (SELECT COUNT(*) 
         FROM store_sales ss 
         WHERE ss.ss_customer_sk = c.c_customer_sk) AS total_store_sales,
        (SELECT COUNT(*) 
         FROM web_sales ws 
         WHERE ws.ws_bill_customer_sk = c.c_customer_sk) AS total_web_sales
    FROM 
        customer c
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    WHERE 
        cd.cd_purchase_estimate > (SELECT AVG(cd_purchase_estimate) FROM customer_demographics)
        AND (cd.cd_gender = 'M' OR cd.cd_marital_status = 'S')
),
SalesRank AS (
    SELECT 
        c.c_customer_id,
        c.c_first_name,
        c.c_last_name,
        SUM(ss.ss_sales_price) AS store_sales_total,
        SUM(ws.ws_sales_price) AS web_sales_total,
        RANK() OVER (PARTITION BY c.c_customer_id ORDER BY SUM(ss.ss_sales_price + ws.ws_sales_price) DESC) AS sales_rank
    FROM 
        CustomerInfo c
    LEFT JOIN 
        store_sales ss ON c.c_customer_id = ss.ss_customer_sk
    LEFT JOIN 
        web_sales ws ON c.c_customer_id = ws.ws_bill_customer_sk
    GROUP BY 
        c.c_customer_id, c.c_first_name, c.c_last_name
    HAVING 
        SUM(ss.ss_sales_price + ws.ws_sales_price) > 1000
),
FinalSales AS (
    SELECT 
        sr.c_customer_id,
        sr.c_first_name,
        sr.c_last_name,
        COALESCE(sr.store_sales_total, 0) AS total_store_sales,
        COALESCE(sr.web_sales_total, 0) AS total_web_sales,
        CASE 
            WHEN sr.sales_rank < 5 THEN 'Top Customer'
            ELSE 'Regular Customer'
        END AS customer_type
    FROM 
        SalesRank sr
)
SELECT 
    f.c_customer_id, 
    f.c_first_name, 
    f.c_last_name, 
    f.total_store_sales, 
    f.total_web_sales, 
    f.customer_type,
    (SELECT AVG(COALESCE(total_store_sales, 0) + COALESCE(total_web_sales, 0))
     FROM FinalSales) AS avg_sales_for_top_customers
FROM 
    FinalSales f
WHERE 
    f.total_store_sales IS NOT NULL AND f.total_web_sales IS NOT NULL
ORDER BY 
    f.total_store_sales DESC, 
    f.total_web_sales DESC;
