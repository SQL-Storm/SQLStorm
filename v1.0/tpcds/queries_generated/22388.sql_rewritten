WITH RECURSIVE address_hierarchy AS (
    SELECT ca_address_sk, ca_city, ca_state, ca_country, 0 AS level
    FROM customer_address
    WHERE ca_state IS NOT NULL
    UNION ALL
    SELECT ca.ca_address_sk, CONCAT(ch.ca_city, ' -> ', ca.ca_city) AS ca_city, ca.ca_state, ca.ca_country, level + 1
    FROM customer_address ca
    JOIN address_hierarchy ch ON ca.ca_state = ch.ca_state AND ca.ca_country = ch.ca_country
    WHERE level < 2
),
customer_data AS (
    SELECT c.c_customer_sk, c.c_birth_month, c.c_birth_year, 
           c.c_first_name || ' ' || c.c_last_name AS full_name,
           cd.cd_marital_status, cd.cd_gender,
           ROW_NUMBER() OVER (PARTITION BY c.c_birth_year ORDER BY c.c_birth_month) AS rn
    FROM customer c
    LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    WHERE cd.cd_gender IS NOT NULL OR cd.cd_marital_status IS NOT NULL
),
sales_data AS (
    SELECT ws.ws_item_sk, SUM(ws.ws_quantity) AS total_quantity, 
           SUM(ws.ws_sales_price) AS total_sales 
    FROM web_sales ws
    WHERE ws.ws_sold_date_sk IN (
        SELECT d_date_sk
        FROM date_dim
        WHERE d_year = 2000 AND d_dow IN (5, 6) 
    )
    GROUP BY ws.ws_item_sk
),
catalog_sales_combined AS (
    SELECT cs.cs_item_sk, cs.cs_sales_price, cs.cs_quantity, cs.cs_order_number
    FROM catalog_sales cs
    JOIN catalog_page cp ON cs.cs_catalog_page_sk = cp.cp_catalog_page_sk
    WHERE cp.cp_department LIKE '%electronics%'
),
final_data AS (
    SELECT ca.ca_city, ca.ca_state, SUM(sd.total_sales) AS total_sales,
           COUNT(DISTINCT cd.c_customer_sk) AS unique_customers,
           MAX(cd.full_name) AS top_customer_name
    FROM address_hierarchy ca
    LEFT JOIN customer_data cd ON cd.c_birth_month = ca.level
    FULL OUTER JOIN sales_data sd ON sd.ws_item_sk IN (
        SELECT item.i_item_sk FROM item item WHERE item.i_current_price BETWEEN 10 AND 100
    )
    GROUP BY ca.ca_city, ca.ca_state
)
SELECT fd.ca_city, fd.ca_state, COALESCE(fd.total_sales, 0) AS total_sales,
       COALESCE(fd.unique_customers, 0) AS unique_customers,
       CASE 
           WHEN fd.top_customer_name IS NULL THEN 'No Data Available' 
           ELSE fd.top_customer_name 
       END AS top_customer_name,
       CASE 
           WHEN MAX(fd.total_sales) IS NULL THEN 'No sales data'
           ELSE 'Sales data present'
       END AS sales_data_status
FROM final_data fd
WHERE (fd.total_sales IS NOT NULL OR fd.unique_customers IS NOT NULL)
ORDER BY fd.total_sales DESC NULLS LAST;