
WITH sales_summary AS (
    SELECT 
        ws.ws_item_sk, 
        SUM(ws.ws_quantity) AS total_quantity, 
        SUM(ws.ws_net_paid_inc_tax) AS total_revenue,
        COUNT(DISTINCT ws.ws_order_number) AS order_count,
        ROW_NUMBER() OVER (PARTITION BY ws.ws_item_sk ORDER BY SUM(ws.ws_net_paid_inc_tax) DESC) AS rank
    FROM web_sales AS ws
    JOIN item AS i ON ws.ws_item_sk = i.i_item_sk
    WHERE i.i_current_price > 10.00
    GROUP BY ws.ws_item_sk
),
customer_details AS (
    SELECT 
        c.c_customer_sk,
        cd.cd_gender,
        cd.cd_birth_year,
        CASE 
            WHEN cd.cd_marital_status = 'M' THEN 'Married'
            ELSE 'Single'
        END AS marital_status,
        COALESCE(hd.hd_income_band_sk, 0) AS income_band
    FROM customer AS c
    LEFT JOIN customer_demographics AS cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN household_demographics AS hd ON c.c_customer_sk = hd.hd_demo_sk
),
returns_summary AS (
    SELECT 
        sr_item_sk,
        SUM(sr_return_quantity) AS total_returns,
        COUNT(sr_ticket_number) AS return_count
    FROM store_returns
    GROUP BY sr_item_sk
)
SELECT 
    ss.ws_item_sk,
    ss.total_quantity,
    ss.total_revenue,
    ss.order_count,
    cd.cd_gender,
    cd.marital_status,
    cd.cd_birth_year,
    r.total_returns,
    r.return_count,
    CASE 
        WHEN r.total_returns IS NOT NULL THEN 'Has Returns'
        ELSE 'No Returns'
    END AS returns_status
FROM sales_summary AS ss
JOIN customer_details AS cd ON cd.c_customer_sk IN (
    SELECT c_customer_sk
    FROM customer
    WHERE c_customer_sk IN (SELECT DISTINCT ws_bill_customer_sk FROM web_sales)
)
LEFT JOIN returns_summary AS r ON ss.ws_item_sk = r.sr_item_sk
WHERE ss.rank <= 10
ORDER BY ss.total_revenue DESC
FETCH FIRST 20 ROWS ONLY;
