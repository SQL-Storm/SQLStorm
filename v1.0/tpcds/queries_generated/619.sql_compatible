
WITH RankedCustomers AS (
    SELECT 
        c.c_customer_id,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_income_band_sk,
        cd.cd_purchase_estimate,
        RANK() OVER (PARTITION BY cd.cd_gender ORDER BY cd.cd_purchase_estimate DESC) AS purchase_rank
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
),
ReturnStatistics AS (
    SELECT 
        sr.sr_returned_date_sk,
        sr.sr_item_sk,
        COUNT(sr.sr_ticket_number) AS total_returns,
        SUM(sr.sr_return_amt) AS total_return_amount,
        AVG(sr.sr_return_quantity) AS avg_return_quantity
    FROM 
        store_returns sr
    GROUP BY 
        sr.sr_returned_date_sk, sr.sr_item_sk
),
SalesData AS (
    SELECT 
        ws.ws_bill_customer_sk AS customer_sk,
        SUM(ws.ws_net_paid) AS total_sales,
        SUM(ws.ws_net_profit) AS total_profit
    FROM 
        web_sales ws
    GROUP BY 
        ws.ws_bill_customer_sk
),
FilteredSales AS (
    SELECT
        sd.customer_sk,
        sd.total_sales,
        sd.total_profit,
        COALESCE(rc.purchase_rank, 0) AS purchase_rank
    FROM 
        SalesData sd
    LEFT JOIN 
        RankedCustomers rc ON sd.customer_sk = rc.c_customer_id
),
FinalReport AS (
    SELECT 
        fs.customer_sk,
        fs.total_sales,
        fs.total_profit,
        fs.purchase_rank,
        CASE 
            WHEN fs.total_sales > 1000 THEN 'High Value'
            WHEN fs.total_sales BETWEEN 500 AND 1000 THEN 'Medium Value'
            ELSE 'Low Value'
        END AS customer_value_category,
        rs.total_returns,
        rs.total_return_amount,
        rs.avg_return_quantity
    FROM 
        FilteredSales fs
    LEFT JOIN 
        ReturnStatistics rs ON fs.customer_sk = rs.sr_customer_sk 
)

SELECT * FROM FinalReport
WHERE purchase_rank <= 5 
OR customer_value_category = 'High Value'
ORDER BY total_sales DESC;
