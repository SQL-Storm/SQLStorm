WITH RankedSales AS (
    SELECT 
        ws.ws_item_sk,
        SUM(ws.ws_quantity) AS total_quantity,
        SUM(ws.ws_sales_price) AS total_sales,
        ROW_NUMBER() OVER (PARTITION BY ws.ws_item_sk ORDER BY SUM(ws.ws_sales_price) DESC) AS rank
    FROM 
        web_sales ws
    LEFT JOIN 
        customer c ON ws.ws_ship_customer_sk = c.c_customer_sk
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN 
        store s ON ws.ws_store_sk = s.s_store_sk
    WHERE 
        cd.cd_gender = 'F' 
        AND cd.cd_marital_status IS NOT NULL
        AND (cd.cd_purchase_estimate > 100 AND cd.cd_credit_rating IN ('Excellent', 'Good'))
    GROUP BY 
        ws.ws_item_sk
),
SalesReturns AS (
    SELECT 
        sr_item_sk,
        COUNT(*) AS total_returns,
        SUM(sr_return_quantity) AS total_returned_quantity,
        SUM(sr_return_amt_inc_tax) AS total_returned_amount
    FROM 
        store_returns
    WHERE 
        sr_reason_sk IS NOT NULL 
    GROUP BY 
        sr_item_sk
)
SELECT 
    i.i_item_id,
    i.i_item_desc,
    COALESCE(rs.total_quantity, 0) AS total_quantity_sold,
    COALESCE(rs.total_sales, 0) AS total_sales,
    COALESCE(r.total_returns, 0) AS total_returns,
    COALESCE(r.total_returned_quantity, 0) AS total_returned_quantity,
    COALESCE(r.total_returned_amount, 0) AS total_returned_amount,
    CASE 
        WHEN COALESCE(rs.total_sales, 0) = 0 THEN NULL
        ELSE (COALESCE(r.total_returned_amount, 0) / COALESCE(rs.total_sales, 0)) * 100
    END AS return_percentage
FROM 
    item i
LEFT JOIN 
    RankedSales rs ON i.i_item_sk = rs.ws_item_sk
LEFT JOIN 
    SalesReturns r ON i.i_item_sk = r.sr_item_sk
WHERE 
    (SELECT COUNT(*) FROM customer WHERE c_birth_year IS NOT NULL AND c_birth_year < (cast('2002-10-01' as date) - INTERVAL '18 years')) > 0
    OR i.i_current_price IS NULL 
ORDER BY 
    return_percentage DESC NULLS LAST
FETCH FIRST 100 ROWS ONLY;