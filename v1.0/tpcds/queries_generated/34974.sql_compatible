
WITH RECURSIVE SalesHierarchy AS (
    SELECT
        ss_store_sk,
        ss_sold_date_sk,
        SUM(ss_net_profit) AS total_net_profit,
        1 AS level
    FROM
        store_sales
    GROUP BY
        ss_store_sk, ss_sold_date_sk
    
    UNION ALL
    
    SELECT
        s.ss_store_sk,
        s.ss_sold_date_sk,
        SUM(s.ss_net_profit) + h.total_net_profit AS total_net_profit,
        h.level + 1
    FROM
        store_sales s
    JOIN
        SalesHierarchy h ON s.ss_store_sk = h.ss_store_sk
    WHERE
        h.level < 5
    GROUP BY
        s.ss_store_sk, s.ss_sold_date_sk, h.total_net_profit
),
TopStores AS (
    SELECT
        sh.ss_store_sk,
        sh.ss_sold_date_sk,
        sh.total_net_profit,
        DENSE_RANK() OVER (ORDER BY sh.total_net_profit DESC) AS rank
    FROM
        SalesHierarchy sh
)
SELECT
    cs.c_customer_id,
    ca.ca_city,
    SUM(ws.ws_net_profit) AS total_profit,
    CASE
        WHEN cs.c_preferred_cust_flag IS NULL THEN 'No Preference'
        ELSE cs.c_preferred_cust_flag
    END AS customer_preference,
    COALESCE(SUM(ws.ws_net_profit), 0) AS net_profit_with_coalesce
FROM
    customer cs
LEFT JOIN
    customer_address ca ON cs.c_current_addr_sk = ca.ca_address_sk
LEFT JOIN
    web_sales ws ON cs.c_customer_sk = ws.ws_bill_customer_sk
JOIN
    TopStores ts ON ws.ws_ship_addr_sk = ts.ss_store_sk
WHERE
    ca.ca_state = 'CA' 
    AND ts.rank <= 10
GROUP BY
    cs.c_customer_id, ca.ca_city, cs.c_preferred_cust_flag
ORDER BY
    total_profit DESC;
