WITH ranked_sales AS (
    SELECT 
        ws.ws_item_sk, 
        SUM(ws.ws_quantity) AS total_quantity, 
        SUM(ws.ws_sales_price) AS total_sales,
        ROW_NUMBER() OVER (PARTITION BY ws.ws_item_sk ORDER BY SUM(ws.ws_sales_price) DESC) AS rank
    FROM 
        web_sales ws 
    WHERE 
        ws.ws_sold_date_sk IN (SELECT d.d_date_sk 
                                FROM date_dim d 
                                WHERE d.d_year = (SELECT MAX(d_year) 
                                                  FROM date_dim) 
                                  AND d.d_month_seq BETWEEN 1 AND 12)
    GROUP BY 
        ws.ws_item_sk
),
customer_sales AS (
    SELECT 
        c.c_customer_sk, 
        c.c_first_name, 
        c.c_last_name, 
        SUM(ws.ws_sales_price) AS total_customer_sales,
        COUNT(DISTINCT ws.ws_order_number) AS orders_count
    FROM 
        customer c 
    JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    WHERE 
        c.c_birth_year IS NOT NULL 
        AND c.c_birth_month IS NOT NULL
        AND (c.c_birth_day = 1 OR c.c_birth_day IS NULL) 
    GROUP BY 
        c.c_customer_sk, c.c_first_name, c.c_last_name
),
inventory_analysis AS (
    SELECT 
        i.i_item_sk, 
        inv.inv_quantity_on_hand, 
        COALESCE(i.i_current_price * inv.inv_quantity_on_hand, 0) AS total_value
    FROM 
        item i 
    LEFT JOIN 
        inventory inv ON i.i_item_sk = inv.inv_item_sk 
    WHERE 
        i.i_rec_start_date <= cast('2002-10-01' as date) 
        AND (i.i_rec_end_date IS NULL OR i.i_rec_end_date >= cast('2002-10-01' as date))
)
SELECT 
    cs.c_first_name, 
    cs.c_last_name, 
    COUNT(DISTINCT cs.orders_count) AS unique_orders, 
    SUM(rs.total_sales) AS total_sales_from_ranked_items,
    SUM(ia.total_value) AS total_inventory_value,
    CASE 
        WHEN SUM(rs.total_sales) IS NULL THEN 'No Sales'
        WHEN SUM(rs.total_sales) = 0 THEN 'No Profit'
        ELSE 'Active Customer'
    END AS customer_status
FROM 
    customer_sales cs 
LEFT JOIN 
    ranked_sales rs ON cs.c_customer_sk = rs.ws_item_sk
LEFT JOIN 
    inventory_analysis ia ON rs.ws_item_sk = ia.i_item_sk
GROUP BY 
    cs.c_first_name, cs.c_last_name
HAVING 
    total_sales_from_ranked_items IS NOT NULL 
    AND UNIQUE_ORDERS > 5
ORDER BY 
    total_sales_from_ranked_items DESC
LIMIT 50;