
WITH RECURSIVE income_bracket AS (
    SELECT ib_income_band_sk, ib_lower_bound, ib_upper_bound
    FROM income_band
    WHERE ib_lower_bound IS NOT NULL
    UNION ALL
    SELECT ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound
    FROM income_band ib
    JOIN income_bracket ibr ON ib.ib_income_band_sk = ibr.ib_income_band_sk
    WHERE ib.ib_lower_bound < 0
), 
customer_info AS (
    SELECT c.c_customer_id, cd.cd_gender, cd.cd_marital_status, 
           COALESCE(hd.hd_income_band_sk, -1) AS income_band,
           COUNT(DISTINCT ws.ws_order_number) AS total_orders,
           SUM(ws.ws_net_paid) AS total_spent
    FROM customer c
    LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN household_demographics hd ON c.c_current_hdemo_sk = hd.hd_demo_sk
    LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY c.c_customer_id, cd.cd_gender, cd.cd_marital_status, hd.hd_income_band_sk
),
shipment_info AS (
    SELECT sm.sm_type, COUNT(DISTINCT ws.ws_order_number) AS total_shipments, 
           AVG(ws.ws_ext_ship_cost) AS average_shipping_cost
    FROM web_sales ws
    JOIN ship_mode sm ON ws.ws_ship_mode_sk = sm.sm_ship_mode_sk
    GROUP BY sm.sm_type
),
return_statistics AS (
    SELECT sr_cdemo_sk, SUM(sr_return_quantity) AS total_returns 
    FROM store_returns 
    GROUP BY sr_cdemo_sk
)
SELECT ci.c_customer_id, ci.cd_gender, ci.cd_marital_status, 
       CASE WHEN ci.total_orders > 0 THEN ci.total_spent / NULLIF(ci.total_orders, 0) ELSE 0 END AS avg_spent_per_order,
       (SELECT COUNT(*) FROM shipment_info) AS total_shipment_types,
       rs.total_returns
FROM customer_info ci
LEFT JOIN return_statistics rs ON ci.c_customer_id = rs.sr_cdemo_sk
WHERE ci.income_band IN (SELECT ib_income_band_sk FROM income_bracket WHERE ib_upper_bound IS NOT NULL)
ORDER BY avg_spent_per_order DESC 
LIMIT 100 OFFSET 10;
