
WITH RankedAddresses AS (
    SELECT 
        ca_address_sk,
        CONCAT(ca_street_number, ' ', ca_street_name, ' ', ca_street_type) AS full_address,
        ROW_NUMBER() OVER (PARTITION BY ca_city ORDER BY ca_street_number ASC) AS address_rank
    FROM 
        customer_address
),
FilteredAddresses AS (
    SELECT 
        full_address,
        ca_city,
        address_rank
    FROM 
        RankedAddresses
    WHERE 
        address_rank <= 5
),
CustomerActivity AS (
    SELECT 
        c.c_customer_sk,
        CONCAT(c.c_first_name, ' ', c.c_last_name) AS full_name,
        COALESCE(SUM(ws.ws_quantity), 0) AS total_web_sales_quantity,
        COALESCE(SUM(ss.ss_quantity), 0) AS total_store_sales_quantity,
        COALESCE(SUM(cr.cr_return_quantity), 0) AS total_catalog_returns_quantity
    FROM 
        customer c
    LEFT JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    LEFT JOIN 
        store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    LEFT JOIN 
        catalog_returns cr ON c.c_customer_sk = cr.cr_returning_customer_sk
    GROUP BY 
        c.c_customer_sk, full_name
)
SELECT 
    fa.ca_city,
    COUNT(DISTINCT fa.ca_address_sk) AS num_addresses,
    AVG(ca.total_web_sales_quantity) AS avg_web_sales,
    AVG(ca.total_store_sales_quantity) AS avg_store_sales,
    AVG(ca.total_catalog_returns_quantity) AS avg_catalog_returns
FROM 
    FilteredAddresses fa
JOIN 
    CustomerActivity ca ON ca.c_customer_sk IN (
        SELECT 
            c.c_customer_sk 
        FROM 
            customer c 
        JOIN 
            customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
        WHERE 
            ca.full_address IS NOT NULL
    )
GROUP BY 
    fa.ca_city
ORDER BY 
    num_addresses DESC;
