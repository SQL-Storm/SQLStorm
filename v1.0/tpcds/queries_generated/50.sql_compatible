
WITH customer_sales AS (
    SELECT
        c.c_customer_id,
        SUM(ws.ws_ext_sales_price) AS total_web_sales,
        SUM(cs.cs_ext_sales_price) AS total_catalog_sales,
        SUM(ss.ss_ext_sales_price) AS total_store_sales,
        COUNT(DISTINCT ws.ws_order_number) AS web_order_count,
        COUNT(DISTINCT cs.cs_order_number) AS catalog_order_count,
        COUNT(DISTINCT ss.ss_ticket_number) AS store_order_count
    FROM
        customer c
    LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    LEFT JOIN catalog_sales cs ON c.c_customer_sk = cs.cs_bill_customer_sk
    LEFT JOIN store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    WHERE
        c.c_birth_year BETWEEN 1980 AND 1990
    GROUP BY
        c.c_customer_id
),
customer_demo AS (
    SELECT
        cd.cd_demo_sk,
        cd.cd_gender,
        CASE
            WHEN cd.cd_marital_status = 'M' THEN 'Married'
            WHEN cd.cd_marital_status = 'S' THEN 'Single'
            ELSE 'Other'
        END AS marital_status,
        cd.cd_credit_rating,
        cd.cd_purchase_estimate,
        cd.cd_dep_count,
        cd.cd_dep_college_count
    FROM
        customer_demographics cd
)
SELECT
    cs.c_customer_id,
    cs.total_web_sales,
    cs.total_catalog_sales,
    cs.total_store_sales,
    cd.cd_gender,
    cd.marital_status,
    cd.cd_credit_rating,
    cd.cd_purchase_estimate,
    cd.cd_dep_count,
    cd.cd_dep_college_count,
    DENSE_RANK() OVER (PARTITION BY cd.marital_status ORDER BY cs.total_web_sales DESC) AS web_sales_rank,
    COALESCE(cs.total_web_sales + cs.total_catalog_sales + cs.total_store_sales, 0) AS total_sales_value
FROM
    customer_sales cs
JOIN customer_demo cd ON cs.c_customer_id = cd.cd_demo_sk
WHERE
    (cd.cd_dep_count IS NULL OR cd.cd_dep_count > 0)
    AND (cd.cd_purchase_estimate > 500 OR cd.cd_credit_rating = 'High')
    AND (cs.total_web_sales IS NOT NULL OR cs.total_catalog_sales IS NOT NULL OR cs.total_store_sales IS NOT NULL)
ORDER BY
    total_sales_value DESC
LIMIT 100;
