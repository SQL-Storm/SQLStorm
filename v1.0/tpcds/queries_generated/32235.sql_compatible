
WITH RECURSIVE CustomerReturns AS (
    SELECT 
        sr_customer_sk,
        SUM(sr_return_amt_inc_tax) AS total_return_amt,
        COUNT(sr_ticket_number) AS total_returns,
        ROW_NUMBER() OVER (PARTITION BY sr_customer_sk ORDER BY SUM(sr_return_amt_inc_tax) DESC) AS rn
    FROM 
        store_returns
    GROUP BY 
        sr_customer_sk
),
TopCustomers AS (
    SELECT 
        c.c_customer_id,
        cd.cd_gender,
        cd.cd_income_band_sk,
        cr.total_return_amt,
        cr.total_returns
    FROM 
        customer AS c
    JOIN 
        customer_demographics AS cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN 
        CustomerReturns AS cr ON c.c_customer_sk = cr.sr_customer_sk
    WHERE 
        cd.cd_gender IS NOT NULL
        AND cd.cd_income_band_sk IS NOT NULL
        AND cr.rn = 1
),
WebSalesPerformance AS (
    SELECT 
        ws_bill_cdemo_sk,
        SUM(ws_net_profit) AS total_profit,
        COUNT(ws_order_number) AS total_orders,
        AVG(ws_net_paid_inc_tax) AS avg_order_value
    FROM 
        web_sales
    GROUP BY 
        ws_bill_cdemo_sk
),
FinalResults AS (
    SELECT 
        tc.c_customer_id,
        wsp.total_profit,
        wsp.total_orders,
        wsp.avg_order_value,
        tc.total_return_amt,
        tc.total_returns
    FROM 
        TopCustomers AS tc
    LEFT JOIN 
        WebSalesPerformance AS wsp ON tc.c_customer_id = (SELECT c_customer_id FROM customer WHERE c_customer_sk = wsp.ws_bill_cdemo_sk)
)
SELECT 
    c.c_customer_id,
    c.c_first_name,
    c.c_last_name,
    COALESCE(fr.total_returns, 0) AS total_returns,
    COALESCE(fr.total_return_amt, 0) AS total_return_amt,
    fr.total_profit,
    fr.total_orders,
    fr.avg_order_value
FROM 
    customer AS c
LEFT JOIN 
    FinalResults AS fr ON c.c_customer_id = fr.c_customer_id
WHERE 
    fr.total_orders > 10 OR fr.total_returns IS NULL
ORDER BY 
    fr.total_profit DESC, 
    fr.avg_order_value DESC, 
    c.c_customer_id;
