
WITH ranked_sales AS (
    SELECT 
        ws_sales.ship_date_sk,
        ws_sales.item_sk,
        ws_sales.net_profit,
        ROW_NUMBER() OVER (PARTITION BY ws_sales.item_sk ORDER BY ws_sales.net_profit DESC) AS sales_rank
    FROM web_sales ws_sales
    WHERE ws_sales.ship_date_sk > (SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = 2023)
),
customer_stats AS (
    SELECT 
        c.c_customer_sk,
        d.cd_gender,
        SUM(ws.net_profit) AS total_net_profit,
        COUNT(DISTINCT ws.ws_order_number) AS total_orders,
        COUNT(DISTINCT ws.ws_item_sk) AS unique_items_ordered
    FROM customer c
    JOIN customer_demographics d ON c.c_current_cdemo_sk = d.cd_demo_sk
    LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_ship_customer_sk
    GROUP BY c.c_customer_sk, d.cd_gender
),
item_sales AS (
    SELECT 
        i.i_item_sk,
        SUM(ws.ws_quantity) AS total_quantity_sold,
        AVG(ws.ws_sales_price) AS avg_sales_price
    FROM item i
    LEFT JOIN web_sales ws ON i.i_item_sk = ws.ws_item_sk
    GROUP BY i.i_item_sk
),
return_summary AS (
    SELECT 
        sr.returning_customer_sk,
        COUNT(DISTINCT sr.return_ticket_number) AS total_returns,
        SUM(sr.return_quantity) AS total_return_quantity,
        CASE WHEN COUNT(DISTINCT sr.return_ticket_number) > 0 THEN SUM(sr.return_amt) / COUNT(DISTINCT sr.return_ticket_number) ELSE 0 END AS avg_return_amount
    FROM store_returns sr
    GROUP BY sr.returning_customer_sk
)
SELECT 
    cs.c_customer_sk,
    cs.total_net_profit,
    cs.total_orders,
    cs.unique_items_ordered,
    COALESCE(rs.net_profit, 0) AS highest_profit,
    COALESCE(rs.item_sk, -1) AS best_selling_item,
    COALESCE(rs.sales_rank, 'No Sales') AS sales_rank,
    i.total_quantity_sold,
    i.avg_sales_price,
    r.total_returns,
    r.avg_return_amount
FROM customer_stats cs
LEFT JOIN ranked_sales rs ON cs.c_customer_sk = rs.returning_customer_sk
LEFT JOIN item_sales i ON rs.item_sk = i.i_item_sk
LEFT JOIN return_summary r ON cs.c_customer_sk = r.returning_customer_sk
WHERE cs.total_orders >= (SELECT AVG(total_orders) FROM customer_stats)
  AND cs.cd_gender IS NOT NULL
ORDER BY cs.total_net_profit DESC, cs.unique_items_ordered ASC
OFFSET 0 ROWS FETCH NEXT 100 ROWS ONLY;
