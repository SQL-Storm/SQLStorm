
WITH TotalSales AS (
    SELECT 
        ws_sold_date_sk,
        ws_item_sk,
        SUM(ws_sales_price) AS total_sales_price,
        COUNT(ws_order_number) AS total_orders,
        RANK() OVER (PARTITION BY ws_item_sk ORDER BY SUM(ws_sales_price) DESC) AS rank_sales
    FROM 
        web_sales
    GROUP BY 
        ws_sold_date_sk, ws_item_sk
),
TopItems AS (
    SELECT 
        ts.ws_item_sk,
        item.i_item_desc,
        item.i_current_price,
        ts.total_sales_price,
        ts.total_orders,
        ROW_NUMBER() OVER (ORDER BY ts.total_sales_price DESC) AS row_num
    FROM 
        TotalSales ts
    JOIN 
        item ON ts.ws_item_sk = item.i_item_sk
    WHERE 
        ts.rank_sales <= 5
),
CustomerReturns AS (
    SELECT 
        sr_customer_sk,
        COUNT(sr_ticket_number) AS total_returns,
        SUM(sr_return_amt) AS total_return_amount
    FROM 
        store_returns
    WHERE 
        sr_return_quantity > 0
    GROUP BY 
        sr_customer_sk
    HAVING 
        SUM(sr_return_amt) IS NOT NULL
),
ReturnAnalysis AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        COALESCE(cr.total_returns, 0) AS total_returns,
        COALESCE(cr.total_return_amount, 0.00) AS total_return_amount,
        COUNT(DISTINCT ws.ws_order_number) OVER (PARTITION BY c.c_customer_sk) AS order_count
    FROM 
        customer c
    LEFT JOIN 
        CustomerReturns cr ON c.c_customer_sk = cr.sr_customer_sk
)
SELECT 
    r.c_customer_sk,
    r.c_first_name,
    r.c_last_name,
    r.total_returns,
    r.total_return_amount,
    ti.i_item_desc,
    ti.i_current_price,
    CASE 
        WHEN r.total_return_amount > 100 THEN 'High Returner'
        WHEN r.total_return_amount BETWEEN 50 AND 100 THEN 'Medium Returner'
        ELSE 'Low Returner'
    END AS return_status,
    (SELECT COUNT(*)
     FROM web_returns wr
     WHERE wr.returning_customer_sk = r.c_customer_sk
       AND wr_reason_sk IS NOT NULL) AS customer_web_returns_count
FROM 
    ReturnAnalysis r
JOIN 
    TopItems ti ON r.order_count > 10
WHERE 
    r.total_returns IS NOT NULL
ORDER BY 
    r.total_return_amount DESC, r.c_last_name ASC
LIMIT 100;
