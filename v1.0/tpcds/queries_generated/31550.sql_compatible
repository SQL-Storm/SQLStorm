
WITH RECURSIVE sales_cte AS (
    SELECT 
        ss_store_sk, 
        ss_item_sk, 
        SUM(ss_sales_price) AS total_sales,
        ROW_NUMBER() OVER (PARTITION BY ss_store_sk ORDER BY SUM(ss_sales_price) DESC) AS sales_rank
    FROM 
        store_sales
    WHERE 
        ss_sold_date_sk BETWEEN 2458598 AND 2458664  
    GROUP BY 
        ss_store_sk, ss_item_sk
),
item_details AS (
    SELECT 
        i_item_sk, 
        i_item_id, 
        i_current_price, 
        i_brand 
    FROM 
        item
    WHERE 
        i_current_price IS NOT NULL
),
top_sales AS (
    SELECT 
        s.store_id, 
        s.store_name, 
        ss.total_sales,
        i.i_item_id,
        i.i_brand,
        ss.sales_rank
    FROM 
        sales_cte ss
    JOIN store s ON ss.ss_store_sk = s.s_store_sk
    JOIN item_details i ON ss.ss_item_sk = i.i_item_sk
    WHERE 
        ss.sales_rank <= 3  
)
SELECT 
    ts.store_id,
    ts.store_name,
    ts.i_item_id,
    ts.i_brand,
    ts.total_sales,
    COALESCE(rs.returned_sales, 0) AS returned_sales,
    (ts.total_sales - COALESCE(rs.returned_sales, 0)) AS net_sales
FROM 
    top_sales ts
LEFT JOIN (
    SELECT 
        sr_store_sk, 
        SUM(sr_return_amt) AS returned_sales
    FROM 
        store_returns
    WHERE 
        sr_returned_date_sk BETWEEN 2458598 AND 2458664
    GROUP BY 
        sr_store_sk
) rs ON rs.sr_store_sk = ts.ss_store_sk
ORDER BY 
    ts.store_name, net_sales DESC;
