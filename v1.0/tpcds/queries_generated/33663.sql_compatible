
WITH RECURSIVE item_hierarchy AS (
    SELECT i_item_sk, i_item_id, i_rec_start_date, i_rec_end_date, i_item_desc, 
           i_current_price, 0 AS level
    FROM item
    WHERE i_item_sk IN (SELECT i_item_sk FROM catalog_sales 
                        WHERE cs_sold_date_sk = (SELECT MAX(cs_sold_date_sk) FROM catalog_sales))

    UNION ALL

    SELECT i.i_item_sk, i.i_item_id, i.i_rec_start_date, i.i_rec_end_date, i.i_item_desc, 
           i.i_current_price, ih.level + 1
    FROM item_hierarchy ih 
    JOIN item i ON i.i_item_sk = ih.i_item_sk 
    WHERE i.i_rec_start_date < DATE '2002-10-01'
),

customer_details AS (
    SELECT c.c_customer_sk, c.c_first_name, c.c_last_name, cd.cd_gender, cd.cd_income_band_sk,
           ROW_NUMBER() OVER (PARTITION BY cd.cd_gender ORDER BY c.c_birth_year DESC) as rn
    FROM customer c
    JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    WHERE cd.cd_marital_status = 'M'
)

SELECT 
    ca.ca_city, 
    COUNT(DISTINCT cd.c_customer_sk) AS customer_count,
    AVG(i.i_current_price) AS avg_item_price,
    SUM(ws.ws_net_profit) AS total_profit,
    STRING_AGG(i.i_item_desc, ', ' ORDER BY i.i_item_desc) AS item_descriptions
FROM customer_address ca
LEFT JOIN customer c ON ca.ca_address_sk = c.c_current_addr_sk
LEFT JOIN customer_details cd ON c.c_customer_sk = cd.c_customer_sk
LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk 
LEFT JOIN item_hierarchy i ON ws.ws_item_sk = i.i_item_sk
WHERE ca.ca_state = 'CA' 
  AND (cd.cd_income_band_sk IS NULL OR cd.cd_income_band_sk NOT IN (1, 2))
GROUP BY ca.ca_city
HAVING AVG(i.i_current_price) > (SELECT AVG(i_current_price) FROM item) 
   OR COUNT(DISTINCT cd.c_customer_sk) > 10
ORDER BY total_profit DESC
LIMIT 10;
