
WITH RECURSIVE sales_hierarchy AS (
    SELECT 
        ss.store_sk,
        ss_sold_date_sk,
        SUM(ss_sales_price) AS total_sales,
        ROW_NUMBER() OVER (PARTITION BY ss.store_sk ORDER BY SUM(ss_sales_price) DESC) AS rank
    FROM 
        store_sales ss
    GROUP BY 
        ss.store_sk, ss_sold_date_sk
), 
top_stores AS (
    SELECT 
        store_sk, 
        total_sales 
    FROM 
        sales_hierarchy 
    WHERE 
        rank <= 5
),
sales_summary AS (
    SELECT 
        s.store_id,
        s.store_name,
        COALESCE(ts.total_sales, 0) AS store_sales,
        COUNT(DISTINCT cs.cs_order_number) AS catalog_sales_count,
        SUM(COALESCE(ws.ws_net_profit, 0)) AS web_sales_profit
    FROM 
        store s 
    LEFT JOIN 
        top_stores ts ON s.s_store_sk = ts.store_sk
    LEFT JOIN 
        catalog_sales cs ON s.s_store_sk = cs.cs_ship_mode_sk
    LEFT JOIN 
        web_sales ws ON s.s_store_sk = ws.ws_ship_mode_sk
    GROUP BY 
        s.store_id, s.store_name
),
customer_sales AS (
    SELECT 
        c.c_customer_id,
        CONCAT(c.c_first_name, ' ', c.c_last_name) AS full_name,
        SUM(ss.ss_sales_price) AS total_store_sales
    FROM 
        customer c
    JOIN 
        store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    GROUP BY 
        c.c_customer_id, c.c_first_name, c.c_last_name
)
SELECT 
    s.store_id,
    s.store_name,
    s.store_sales,
    cs.full_name,
    cs.total_store_sales,
    CASE 
        WHEN cs.total_store_sales IS NULL THEN 'No Purchases'
        WHEN cs.total_store_sales < 100 THEN 'Low Value'
        WHEN cs.total_store_sales BETWEEN 100 AND 500 THEN 'Medium Value'
        ELSE 'High Value'
    END AS customer_value_band
FROM 
    sales_summary s
LEFT JOIN 
    customer_sales cs ON s.store_sales > 0 
ORDER BY 
    s.store_sales DESC, cs.total_store_sales DESC;
