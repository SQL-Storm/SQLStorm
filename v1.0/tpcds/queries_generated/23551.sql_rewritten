WITH RankedSales AS (
    SELECT 
        ws.web_site_sk,
        ws.net_profit,
        ROW_NUMBER() OVER (PARTITION BY ws.web_site_sk ORDER BY ws.sold_date_sk DESC) AS rn
    FROM 
        web_sales ws
    JOIN 
        customer c ON ws.bill_customer_sk = c.c_customer_sk
    WHERE 
        c.c_birth_month = EXTRACT(MONTH FROM cast('2002-10-01' as date)) 
        AND c.c_birth_day = EXTRACT(DAY FROM cast('2002-10-01' as date))
),
InventoryStats AS (
    SELECT 
        inv.inv_item_sk,
        SUM(inv.inv_quantity_on_hand) AS total_inventory,
        AVG(inv.inv_quantity_on_hand) OVER (PARTITION BY inv.inv_item_sk) AS avg_per_warehouse
    FROM 
        inventory inv
    GROUP BY 
        inv.inv_item_sk
),
HighValueReturns AS (
    SELECT 
        cr.cr_item_sk,
        SUM(cr.cr_return_amount) AS total_return_amt,
        COUNT(cr.cr_order_number) AS return_count
    FROM 
        catalog_returns cr
    WHERE 
        cr.cr_return_quantity > 0
    GROUP BY 
        cr.cr_item_sk
    HAVING 
        SUM(cr.cr_return_amount) > 1000
)
SELECT 
    a.ca_city,
    a.ca_state,
    COALESCE(RankedSales.web_site_sk, 0) AS web_site,
    COALESCE(HighValueReturns.total_return_amt, 0) AS total_return_value,
    COALESCE(InventoryStats.total_inventory, 0) AS total_inventory_on_hand,
    CASE 
        WHEN RankedSales.rn = 1 THEN 'Leader' 
        ELSE 'Follower' 
    END AS sales_rank
FROM 
    customer_address a
LEFT JOIN 
    RankedSales ON a.ca_address_sk = (SELECT c.c_current_addr_sk FROM customer c WHERE c.c_current_addr_sk IS NOT NULL LIMIT 1)
LEFT JOIN 
    InventoryStats ON InventoryStats.inv_item_sk = (SELECT i.i_item_sk FROM item i WHERE i.i_current_price > 50 LIMIT 1)
LEFT JOIN 
    HighValueReturns ON HighValueReturns.cr_item_sk = (SELECT cr.cr_item_sk FROM catalog_returns cr WHERE cr.cr_return_quantity > 10 LIMIT 1)
WHERE 
    a.ca_state IS NOT NULL
    AND a.ca_city IS NOT NULL
    AND (
        a.ca_zip LIKE '9%' OR 
        a.ca_country IS NULL
    )
ORDER BY 
    a.ca_city ASC, 
    total_return_value DESC;