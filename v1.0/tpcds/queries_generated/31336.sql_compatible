
WITH RECURSIVE sales_summary AS (
    SELECT
        ws_sold_date_sk,
        ws_item_sk,
        SUM(ws_sales_price) AS total_sales,
        COUNT(ws_order_number) AS total_orders,
        RANK() OVER (PARTITION BY ws_item_sk ORDER BY SUM(ws_sales_price) DESC) AS sales_rank
    FROM
        web_sales
    GROUP BY
        ws_sold_date_sk,
        ws_item_sk
),
customer_details AS (
    SELECT
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_purchase_estimate,
        ca.ca_city,
        ca.ca_state,
        ROW_NUMBER() OVER (PARTITION BY c.c_customer_sk ORDER BY cd.cd_purchase_estimate DESC) AS demo_rank
    FROM
        customer c
        LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
        LEFT JOIN customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
)
SELECT
    cs.c_first_name,
    cs.c_last_name,
    cs.ca_city,
    cs.ca_state,
    SUM(ss.total_sales) AS total_web_sales,
    COUNT(ss.ws_item_sk) AS total_items_sold,
    MAX(ss.sales_rank) AS max_sales_rank,
    CASE 
        WHEN MAX(ss.sales_rank) IS NULL THEN 'No sales recorded'
        ELSE 'Sales recorded'
    END AS sales_status,
    (SELECT AVG(wp.web_char_count) FROM web_page wp WHERE wp.wp_web_page_sk IN (SELECT ws.wp_web_page_sk FROM web_sales ws WHERE ws.ws_item_sk = ss.ws_item_sk)) AS avg_page_char_count
FROM
    sales_summary ss
    JOIN customer_details cs ON cs.c_customer_sk = ss.ws_item_sk
WHERE
    ss.total_sales > 100
GROUP BY
    cs.c_first_name,
    cs.c_last_name,
    cs.ca_city,
    cs.ca_state
ORDER BY
    total_web_sales DESC;
