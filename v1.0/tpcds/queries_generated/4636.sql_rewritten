WITH RankedSales AS (
    SELECT 
        ws.web_site_sk,
        ws.ws_order_number,
        SUM(ws.ws_sales_price) AS total_sales,
        ROW_NUMBER() OVER (PARTITION BY ws.web_site_sk ORDER BY SUM(ws.ws_sales_price) DESC) AS sales_rank
    FROM 
        web_sales ws 
    JOIN 
        web_site w ON ws.ws_web_site_sk = w.web_site_sk
    GROUP BY 
        ws.web_site_sk, ws.ws_order_number
),
TopSales AS (
    SELECT 
        web_site_sk, 
        total_sales 
    FROM 
        RankedSales 
    WHERE 
        sales_rank <= 10
),
ReturnedSales AS (
    SELECT 
        wr_order_number,
        SUM(wr_return_amt) AS total_returned 
    FROM 
        web_returns 
    GROUP BY 
        wr_order_number
),
FinalStats AS (
    SELECT 
        ts.web_site_sk,
        ts.total_sales,
        COALESCE(rs.total_returned, 0) AS total_returned,
        (ts.total_sales - COALESCE(rs.total_returned, 0)) AS net_sales 
    FROM 
        TopSales ts 
    LEFT JOIN 
        ReturnedSales rs ON ts.web_order_number = rs.wr_order_number
)
SELECT 
    ws.web_site_id,
    ws.web_name,
    fs.total_sales,
    fs.total_returned,
    fs.net_sales,
    w.w_warehouse_name,
    (CASE 
        WHEN fs.net_sales > 10000 THEN 'High Performer'
        WHEN fs.net_sales BETWEEN 5000 AND 10000 THEN 'Moderate Performer'
        ELSE 'Low Performer' 
    END) AS performance_category 
FROM 
    FinalStats fs 
JOIN 
    web_site ws ON fs.web_site_sk = ws.web_site_sk 
JOIN 
    warehouse w ON w.w_warehouse_sk = fs.web_site_sk % 10  
WHERE 
    ws.web_gmt_offset IS NOT NULL
ORDER BY 
    fs.net_sales DESC;