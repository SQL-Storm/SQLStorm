
WITH RankedSales AS (
    SELECT 
        ws_item_sk,
        SUM(ws_quantity) AS total_quantity,
        SUM(ws_sales_price) AS total_sales,
        RANK() OVER (PARTITION BY ws_item_sk ORDER BY SUM(ws_sales_price) DESC) AS sales_rank
    FROM 
        web_sales
    GROUP BY 
        ws_item_sk
),
CustomerDemographics AS (
    SELECT 
        cd_demo_sk,
        cd_gender,
        cd_marital_status,
        CASE 
            WHEN cd_purchase_estimate IS NULL THEN 'Unknown'
            ELSE CAST(cd_purchase_estimate AS VARCHAR)
        END AS purchase_estimate,
        cd_dep_count,
        cd_credit_rating
    FROM 
        customer_demographics
),
SalesDetails AS (
    SELECT 
        ws.web_site_sk,
        ws.ws_order_number,
        ws_quantity,
        ws_sales_price,
        ws_ext_discount_amt,
        ws_ext_sales_price,
        ws_net_profit,
        CASE 
            WHEN ws_ext_discount_amt > 0 THEN 'Discounted'
            ELSE 'Regular'
        END AS sale_type
    FROM 
        web_sales ws
    WHERE 
        ws_sales_price > 10 AND 
        ws_net_profit IS NOT NULL
)
SELECT 
    ca.city AS customer_city,
    COUNT(DISTINCT ws.ws_order_number) AS order_count,
    AVG(ws.ws_sales_price) AS avg_sales_price,
    SUM(ws.ws_net_profit) AS total_net_profit,
    STRING_AGG(DISTINCT CASE WHEN (cd.gender = 'F') THEN 'Female' 
                             WHEN (cd.gender = 'M') THEN 'Male' 
                             ELSE 'Unknown' END, ', ') AS gender_distribution
FROM 
    customer ca
LEFT JOIN 
    SalesDetails ws ON ca.c_customer_sk = ws.ws_bill_customer_sk
LEFT JOIN 
    CustomerDemographics cd ON ca.c_current_cdemo_sk = cd.cd_demo_sk
WHERE 
    ca.c_birth_year IS NOT NULL 
    AND ws.ws_sales_price > 20
    AND NOT EXISTS (
        SELECT 1 
        FROM store s 
        WHERE s.s_store_sk = ws.ws_item_sk
        AND s.s_zip IS NULL
    )
GROUP BY 
    ca.city
HAVING 
    COUNT(DISTINCT ws.ws_order_number) > 5
ORDER BY 
    total_net_profit DESC
LIMIT 10;
