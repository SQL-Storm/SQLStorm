
WITH SalesSummary AS (
    SELECT 
        ws_item_sk,
        SUM(ws_quantity) AS total_quantity,
        SUM(ws_net_profit) AS total_net_profit,
        DENSE_RANK() OVER (PARTITION BY ws_item_sk ORDER BY SUM(ws_net_profit) DESC) AS profit_rank
    FROM 
        web_sales
    GROUP BY 
        ws_item_sk
),
CustomerStats AS (
    SELECT 
        c_customer_sk,
        COUNT(DISTINCT ws.web_site_sk) AS total_websites,
        AVG(cd_dep_count) AS avg_dependents,
        SUM(ws_ext_sales_price) AS total_sales
    FROM 
        customer c
    JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    GROUP BY 
        c_customer_sk
)
SELECT 
    ca.ca_address_id,
    cs.total_websites,
    COALESCE(ROUND(100.0 * ss.total_net_profit / NULLIF(SUM(ss.total_net_profit) OVER (), 0), 2), 0) AS profit_percentage,
    CASE 
        WHEN cs.avg_dependents IS NULL THEN 'No Data' 
        ELSE CAST(cs.avg_dependents AS VARCHAR)
    END AS avg_dep_count,
    ss.total_quantity
FROM 
    customer_address ca
LEFT JOIN 
    CustomerStats cs ON cs.c_customer_sk = ca.ca_address_sk
LEFT JOIN 
    SalesSummary ss ON ss.ws_item_sk = (SELECT i_item_sk FROM item ORDER BY RANDOM() LIMIT 1)
WHERE 
    ca.ca_state = 'CA' 
    AND (cs.total_sales > 1000 OR cs.total_websites IS NULL)
ORDER BY 
    profit_percentage DESC, 
    total_quantity DESC
FETCH FIRST 50 ROWS ONLY;
