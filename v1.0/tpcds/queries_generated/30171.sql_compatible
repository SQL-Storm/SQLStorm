
WITH RECURSIVE sales_cte AS (
    SELECT 
        ws.web_site_sk, 
        SUM(ws.ws_sales_price) AS total_sales,
        COUNT(ws.ws_order_number) AS order_count
    FROM 
        web_sales ws
    JOIN 
        date_dim d ON ws.ws_sold_date_sk = d.d_date_sk
    WHERE 
        d.d_year = 2001
    GROUP BY 
        ws.web_site_sk

    UNION ALL

    SELECT 
        s.web_site_sk,
        SUM(s.ws_sales_price),
        COUNT(s.ws_order_number)
    FROM 
        web_sales s
    JOIN 
        sales_cte sa ON s.web_site_sk = sa.web_site_sk
    WHERE 
        s.ws_sold_date_sk < LAST_DAY(DATE('2002-10-01'))  
    GROUP BY 
        s.web_site_sk
),
customer_summary AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender AS gender,
        COALESCE(cd.cd_purchase_estimate, 0) AS purchase_estimate,
        COALESCE(cd.cd_credit_rating, 'Unknown') AS credit_rating
    FROM 
        customer c
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
),
inventory_summary AS (
    SELECT 
        inv.inv_item_sk,
        SUM(inv.inv_quantity_on_hand) AS total_quantity
    FROM 
        inventory inv
    GROUP BY 
        inv.inv_item_sk
)
SELECT 
    cs.c_customer_sk,
    cs.c_first_name,
    cs.c_last_name,
    cs.gender,
    ss.total_sales,
    ss.order_count,
    COALESCE(is.total_quantity, 0) AS inventory_on_hand
FROM 
    customer_summary cs
JOIN 
    sales_cte ss ON cs.c_customer_sk = ss.web_site_sk
LEFT JOIN 
    inventory_summary is ON cs.c_customer_sk = is.inv_item_sk
WHERE 
    (cs.purchase_estimate > 5000 OR cs.credit_rating = 'High')
    AND ss.total_sales IS NOT NULL
ORDER BY 
    ss.total_sales DESC
LIMIT 100 OFFSET 0;
