
WITH sales_data AS (
    SELECT 
        ws.web_site_sk AS site_id,
        SUM(ws.ws_net_profit) AS total_profit,
        COUNT(DISTINCT ws.ws_order_number) AS total_orders,
        RANK() OVER (PARTITION BY ws.web_site_sk ORDER BY SUM(ws.ws_net_profit) DESC) AS profit_rank
    FROM web_sales ws
    JOIN date_dim d ON ws.ws_sold_date_sk = d.d_date_sk
    WHERE d.d_year BETWEEN 2021 AND 2023
    GROUP BY ws.web_site_sk
),
customer_info AS (
    SELECT 
        c.c_customer_sk,
        CONCAT(c.c_first_name, ' ', c.c_last_name) AS full_name,
        cd.cd_gender,
        hd.hd_income_band_sk,
        COALESCE(hd.hd_dep_count, 0) AS dependent_count,
        ROW_NUMBER() OVER (PARTITION BY c.c_gender ORDER BY c.c_birth_year DESC) AS gender_rank
    FROM customer c
    LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN household_demographics hd ON c.c_current_hdemo_sk = hd.hd_demo_sk
    WHERE c.c_birth_year IS NOT NULL AND (cd.cd_marital_status IS NOT NULL OR cd.cd_gender IS NOT NULL)
),
store_sales_data AS (
    SELECT 
        ss.ss_store_sk,
        SUM(ss.ss_net_profit) AS store_total_profit,
        COUNT(ss.ss_ticket_number) AS store_order_count,
        (SELECT COUNT(DISTINCT sr_item_sk)
         FROM store_returns sr 
         WHERE sr.sr_store_sk = ss.ss_store_sk) AS return_item_count
    FROM store_sales ss
    GROUP BY ss.ss_store_sk
)
SELECT 
    ci.full_name,
    ci.cd_gender,
    sd.site_id,
    sd.total_profit AS web_total_profit,
    ssd.store_total_profit AS store_total_profit,
    COALESCE(sd.total_orders, 0) AS web_order_count,
    COALESCE(ssd.store_order_count, 0) AS store_order_count,
    CASE 
        WHEN sd.total_profit > 1000 THEN 'High Profit'
        WHEN sd.total_profit IS NULL THEN 'No Sales'
        ELSE 'Moderate Profit'
    END AS profit_category,
    CASE 
        WHEN ssd.return_item_count > 0 THEN 'Frequent Returns'
        ELSE 'No Returns'
    END AS return_category
FROM customer_info ci
LEFT JOIN sales_data sd ON ci.c_customer_sk = sd.site_id
LEFT JOIN store_sales_data ssd ON ci.c_customer_sk = ssd.ss_store_sk
WHERE ci.dependent_count > 1 OR (ci.cd_gender = 'F' AND ci.gender_rank <= 5)
ORDER BY web_total_profit DESC, store_total_profit DESC;
