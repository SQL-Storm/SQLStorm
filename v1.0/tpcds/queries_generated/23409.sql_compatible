
WITH ranked_sales AS (
    SELECT
        ws.web_site_sk,
        ws.ws_order_number,
        SUM(ws.ws_quantity) AS total_quantity,
        SUM(ws.ws_ext_sales_price - ws.ws_ext_discount_amt) AS total_sales,
        RANK() OVER (PARTITION BY ws.web_site_sk ORDER BY SUM(ws.ws_ext_sales_price - ws.ws_ext_discount_amt) DESC) AS sales_rank
    FROM
        web_sales ws
    JOIN
        customer c ON ws.ws_bill_customer_sk = c.c_customer_sk
    WHERE
        c.c_birth_country IS NOT NULL AND c.c_birth_country <> 'Unknown'
    GROUP BY
        ws.web_site_sk, ws.ws_order_number
),
sales_by_gender AS (
    SELECT
        d.cd_gender,
        SUM(rs.total_sales) AS gender_sales
    FROM
        ranked_sales rs
    JOIN
        customer_demographics d ON rs.web_site_sk = d.cd_demo_sk
    GROUP BY
        d.cd_gender
),
NULL_handling AS (
    SELECT
        COALESCE(gender_sales, 0) AS gender_sales_sum,
        cd_gender
    FROM
        sales_by_gender
)
SELECT
    n.cd_gender,
    n.gender_sales_sum,
    CASE 
        WHEN n.gender_sales_sum > 1000 THEN 'High'
        WHEN n.gender_sales_sum BETWEEN 500 AND 1000 THEN 'Medium'
        ELSE 'Low'
    END AS sales_category
FROM
    NULL_handling n
LEFT JOIN
    income_band ib ON ib.ib_lower_bound <= n.gender_sales_sum AND n.gender_sales_sum <= ib.ib_upper_bound
WHERE
    ib.ib_income_band_sk IS NOT NULL
    OR n.gender_sales_sum IS NOT NULL
ORDER BY
    n.gender_sales_sum DESC
LIMIT 10 OFFSET 0;
