
WITH RECURSIVE sales_summary AS (
    SELECT
        ws.bill_customer_sk,
        ws.ws_item_sk,
        SUM(ws.net_profit) AS total_profit,
        COUNT(*) AS total_sales,
        DENSE_RANK() OVER (PARTITION BY ws.bill_customer_sk ORDER BY SUM(ws.net_profit) DESC) AS sales_rank
    FROM web_sales ws
    WHERE ws.sold_date_sk BETWEEN 20230101 AND 20231231
    GROUP BY ws.bill_customer_sk, ws.ws_item_sk

    UNION ALL

    SELECT
        sss.bill_customer_sk,
        sss.ws_item_sk,
        sss.total_profit,
        sss.total_sales,
        sss.sales_rank
    FROM sales_summary sss
    WHERE sss.sales_rank < 3
),
customer_info AS (
    SELECT
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_dependent_count,
        a.ca_city,
        a.ca_state,
        d.d_year,
        COALESCE(hd.hd_buy_potential, 'UNKNOWN') AS buy_potential
    FROM customer c
    LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN customer_address a ON c.c_current_addr_sk = a.ca_address_sk
    LEFT JOIN household_demographics hd ON c.c_customer_sk = hd.hd_demo_sk
    JOIN date_dim d ON d.d_year = EXTRACT(YEAR FROM DATE '2002-10-01')
),
detailed_sales AS (
    SELECT
        ci.c_customer_sk,
        ci.c_first_name,
        ci.c_last_name,
        ci.ca_city,
        ci.ca_state,
        ci.cd_gender,
        ss.total_profit,
        ss.total_sales,
        CASE
            WHEN ci.buy_potential = 'HIGH' THEN 'VIP'
            WHEN ci.buy_potential = 'MEDIUM' THEN 'Frequent'
            ELSE 'Occasional'
        END AS customer_category
    FROM customer_info ci
    JOIN sales_summary ss ON ci.c_customer_sk = ss.bill_customer_sk
)
SELECT 
    ds.c_first_name,
    ds.c_last_name,
    ds.ca_city,
    ds.ca_state,
    ds.cd_gender,
    ds.customer_category,
    ds.total_sales,
    ds.total_profit,
    CASE 
        WHEN ds.total_profit IS NULL THEN 'No Sales'
        ELSE CONCAT('Total Profit: $', FORMAT(ds.total_profit, 2))
    END AS profit_info
FROM detailed_sales ds
WHERE ds.total_sales > 1
ORDER BY ds.total_profit DESC
LIMIT 50;
