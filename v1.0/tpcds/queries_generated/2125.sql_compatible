
WITH CustomerSales AS (
    SELECT 
        c.c_customer_id,
        SUM(ws.ws_net_paid_inc_tax) AS total_spent,
        COUNT(DISTINCT ws.ws_order_number) AS purchase_count
    FROM 
        customer c
    LEFT JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_ship_customer_sk
    GROUP BY 
        c.c_customer_id
),
IncomeDemographics AS (
    SELECT 
        cd.cd_gender,
        ib.ib_income_band_sk,
        COUNT(*) AS customer_count
    FROM 
        customer_demographics cd
    JOIN 
        household_demographics hd ON cd.cd_demo_sk = hd.hd_demo_sk
    JOIN 
        income_band ib ON hd.hd_income_band_sk = ib.ib_income_band_sk
    GROUP BY 
        cd.cd_gender, ib.ib_income_band_sk
),
TopCustomers AS (
    SELECT 
        cs.c_customer_id,
        cs.total_spent,
        ROW_NUMBER() OVER (ORDER BY cs.total_spent DESC) AS rank
    FROM 
        CustomerSales cs
    WHERE 
        cs.total_spent IS NOT NULL AND cs.total_spent > 1000
),
SalesByIncomeBand AS (
    SELECT 
        id.cd_gender,
        ib.ib_lower_bound,
        ib.ib_upper_bound,
        SUM(cs.total_spent) AS total_sales
    FROM 
        TopCustomers tc
    JOIN 
        CustomerSales cs ON tc.c_customer_id = cs.c_customer_id
    JOIN 
        customer_demographics id ON cs.c_customer_id = id.cd_demo_sk
    JOIN 
        household_demographics hd ON id.cd_demo_sk = hd.hd_demo_sk
    JOIN 
        income_band ib ON hd.hd_income_band_sk = ib.ib_income_band_sk
    GROUP BY 
        id.cd_gender, ib.ib_lower_bound, ib.ib_upper_bound
)
SELECT 
    CASE 
        WHEN ib.ib_income_band_sk IS NOT NULL THEN CONCAT('[', ib.ib_lower_bound, ' - ', ib.ib_upper_bound, ']')
        ELSE 'Unknown Income Band'
    END AS Income_Band,
    sd.cd_gender,
    COALESCE(SUM(sd.total_sales), 0) AS total_sales
FROM 
    SalesByIncomeBand sd
FULL OUTER JOIN 
    income_band ib ON sd.ib_income_band_sk = ib.ib_income_band_sk 
GROUP BY 
    ib.ib_income_band_sk, sd.cd_gender
ORDER BY 
    Income_Band, sd.cd_gender;
