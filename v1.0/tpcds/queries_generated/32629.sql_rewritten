WITH RECURSIVE sales_hierarchy AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        COALESCE(SUM(ss.ss_net_paid), 0) AS total_spent,
        0 AS level,
        NULL AS parent_id
    FROM 
        customer c
    LEFT JOIN 
        store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    GROUP BY 
        c.c_customer_sk, c.c_first_name, c.c_last_name
    
    UNION ALL
    
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        COALESCE(SUM(ss.ss_net_paid), 0) + sh.total_spent AS total_spent,
        level + 1,
        sh.c_customer_sk AS parent_id
    FROM 
        customer c
    JOIN 
        sales_hierarchy sh ON c.c_current_cdemo_sk = sh.c_customer_sk
    LEFT JOIN 
        store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    GROUP BY 
        c.c_customer_sk, c.c_first_name, c.c_last_name, sh.total_spent, level
)
SELECT 
    CONCAT(c.c_first_name, ' ', c.c_last_name) AS full_name,
    sh.total_spent,
    d.d_year,
    d.d_month_seq,
    COUNT(DISTINCT ss.ss_ticket_number) AS transaction_count,
    MAX(ss.ss_net_paid) AS highest_single_transaction,
    AVG(ss.ss_net_paid) AS average_transaction
FROM 
    sales_hierarchy sh
JOIN 
    customer c ON sh.c_customer_sk = c.c_customer_sk
LEFT JOIN 
    store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
JOIN 
    date_dim d ON ss.ss_sold_date_sk = d.d_date_sk
WHERE 
    d.d_year = 2001
GROUP BY 
    full_name, sh.total_spent, d.d_year, d.d_month_seq
HAVING 
    AVG(ss.ss_net_paid) > 50
ORDER BY 
    total_spent DESC
LIMIT 100;