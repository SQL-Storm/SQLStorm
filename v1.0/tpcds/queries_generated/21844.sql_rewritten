WITH ranked_sales AS (
    SELECT 
        ws.ws_item_sk,
        SUM(ws.ws_quantity) AS total_quantity,
        RANK() OVER (PARTITION BY ws.ws_item_sk ORDER BY SUM(ws.ws_sales_price) DESC) AS sales_rank
    FROM 
        web_sales AS ws
    JOIN 
        item AS i ON ws.ws_item_sk = i.i_item_sk
    WHERE 
        i.i_rec_start_date <= cast('2002-10-01' as date) AND 
        (i.i_rec_end_date IS NULL OR i.i_rec_end_date > cast('2002-10-01' as date))
    GROUP BY 
        ws.ws_item_sk
),
customer_return AS (
    SELECT 
        sr_returning_customer_sk,
        SUM(COALESCE(sr_return_quantity, 0)) AS total_returns,
        COUNT(DISTINCT sr_return_time_sk) AS return_count
    FROM 
        store_returns
    GROUP BY 
        sr_returning_customer_sk
),
high_return_customers AS (
    SELECT 
        cr.rc_customer_sk,
        cr.total_returns,
        cr.return_count
    FROM 
        customer_return AS cr
    WHERE 
        cr.total_returns > (SELECT AVG(total_returns) FROM customer_return)
)
SELECT 
    ca.ca_city,
    ca.ca_state,
    COUNT(DISTINCT c.c_customer_id) AS unique_customers,
    SUM(CASE WHEN c.c_birth_month = 12 THEN 1 ELSE 0 END) AS december_born_count,
    AVG(COALESCE(cd.cd_purchase_estimate, 0)) AS avg_purchase_estimate,
    STRING_AGG(DISTINCT i.i_product_name, ', ') AS product_names
FROM 
    customer AS c
LEFT JOIN 
    customer_demographics AS cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
LEFT JOIN 
    customer_address AS ca ON c.c_current_addr_sk = ca.ca_address_sk
JOIN 
    high_return_customers AS hrc ON c.c_customer_sk = hrc.rc_customer_sk
JOIN 
    web_sales AS ws ON c.c_customer_sk = ws.ws_bill_customer_sk
JOIN 
    ranked_sales AS rs ON ws.ws_item_sk = rs.ws_item_sk AND rs.sales_rank = 1
GROUP BY 
    ca.ca_city, ca.ca_state
HAVING 
    COUNT(DISTINCT c.c_customer_id) > 0 AND 
    AVG(COALESCE(cd.cd_credit_rating, '0')::int) IS NOT NULL
ORDER BY 
    unique_customers DESC, ca.ca_city ASC;