
WITH RECURSIVE sales_hierarchy AS (
    SELECT 
        cs_bill_customer_sk,
        cs_sales_price,
        1 AS level
    FROM 
        catalog_sales
    WHERE 
        cs_sales_price > 0
    UNION ALL
    SELECT 
        cs.cs_bill_customer_sk,
        cs.cs_sales_price * 0.9 AS cs_sales_price,
        sh.level + 1
    FROM 
        catalog_sales cs
    INNER JOIN 
        sales_hierarchy sh ON cs.cs_bill_customer_sk = sh.cs_bill_customer_sk
    WHERE 
        sh.level < 5
),
customer_info AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        COALESCE(MAX(sales.cs_sales_price), 0) AS max_sales_price
    FROM 
        customer c
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN 
        catalog_sales sales ON c.c_customer_sk = sales.cs_bill_customer_sk
    GROUP BY 
        c.c_customer_sk, c.c_first_name, c.c_last_name, cd.cd_gender, cd.cd_marital_status
),
top_customers AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        DENSE_RANK() OVER (ORDER BY c.max_sales_price DESC) AS sales_rank
    FROM 
        customer_info c
    WHERE 
        c.max_sales_price IS NOT NULL
),
shipping_info AS (
    SELECT 
        ws.ws_web_site_sk,
        SUM(ws.ws_net_paid_inc_tax) AS total_sales
    FROM 
        web_sales ws
    WHERE 
        ws.ws_sold_date_sk >= (SELECT MIN(d.d_date_sk) FROM date_dim d WHERE d.d_year = 2023)
    GROUP BY 
        ws.ws_web_site_sk
)
SELECT 
    c.c_first_name,
    c.c_last_name,
    c.cd_gender,
    c.cd_marital_status,
    sh.cs_sales_price,
    t.total_sales,
    CASE 
        WHEN sh.level = 5 THEN 'Top Sales Level'
        ELSE 'Other Sales Level'
    END AS sales_level
FROM 
    customer_info c
LEFT JOIN 
    sales_hierarchy sh ON c.c_customer_sk = sh.cs_bill_customer_sk
LEFT JOIN 
    shipping_info t ON t.ws_web_site_sk = c.c_customer_sk
WHERE 
    (c.cd_gender IS NOT NULL OR c.cd_marital_status IS NOT NULL)
    AND (sh.cs_sales_price IS NOT NULL OR t.total_sales IS NOT NULL)
ORDER BY 
    c.c_first_name, 
    c.c_last_name;
