
WITH ranked_sales AS (
    SELECT 
        ws.ws_item_sk,
        ws.ws_order_number,
        ws.ws_sales_price,
        RANK() OVER (PARTITION BY ws.ws_item_sk ORDER BY ws.ws_sales_price DESC) AS price_rank,
        COALESCE(SUM(ws.ws_net_paid) OVER (PARTITION BY ws.ws_item_sk ORDER BY ws.ws_order_number ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW), 0) AS cumulative_net_paid
    FROM 
        web_sales ws
),
filtered_sales AS (
    SELECT 
        rs.ws_item_sk,
        rs.ws_order_number,
        rs.ws_sales_price,
        rs.cumulative_net_paid
    FROM 
        ranked_sales rs
    WHERE 
        rs.price_rank = 1 AND 
        rs.cumulative_net_paid > (
            SELECT 
                AVG(cumulative_sales) 
            FROM (
                SELECT 
                    SUM(ws.ws_net_paid) AS cumulative_sales
                FROM 
                    web_sales ws
                WHERE 
                    ws.ws_sold_date_sk BETWEEN 1 AND 30
                GROUP BY 
                    ws.ws_item_sk
            ) avg_sales
        )
)
SELECT 
    ca.ca_country,
    COUNT(DISTINCT cs.cs_order_number) AS total_store_sales,
    SUM(COALESCE(ws.ws_sales_price, 0)) AS total_web_sales,
    MAX(ss.ss_ext_tax) AS highest_tax,
    CASE 
        WHEN MAX(ss.ss_ext_tax) IS NULL THEN 'No Tax' 
        ELSE 'Tax Applied' 
    END AS tax_status
FROM 
    customer_demographics cd
LEFT JOIN 
    customer c ON cd.cd_demo_sk = c.c_current_cdemo_sk
LEFT JOIN 
    store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
LEFT JOIN 
    catalog_sales cs ON c.c_customer_sk = cs.cs_bill_customer_sk
JOIN 
    customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
JOIN 
    filtered_sales fs ON fs.ws_item_sk = ss.ss_item_sk
LEFT JOIN 
    store_returns sr ON sr.sr_ticket_number = ss.ss_ticket_number
WHERE 
    cd.cd_gender = 'F' 
    AND (ca.ca_state IS NOT NULL OR ca.ca_country IS NOT NULL)
GROUP BY 
    ca.ca_country
HAVING 
    COUNT(DISTINCT cs.cs_order_number) > 5
ORDER BY 
    total_web_sales DESC
LIMIT 10;
