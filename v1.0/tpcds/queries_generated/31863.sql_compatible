
WITH RECURSIVE SalesHierarchy AS (
    SELECT 
        ws_bill_customer_sk,
        SUM(ws_net_profit) AS total_profit,
        COUNT(DISTINCT ws_order_number) AS order_count,
        1 AS level
    FROM 
        web_sales 
    WHERE 
        ws_sold_date_sk >= (SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = 2023)
    GROUP BY 
        ws_bill_customer_sk
    UNION ALL
    SELECT 
        sh.ws_bill_customer_sk,
        SUM(ws.ws_net_profit) AS total_profit,
        COUNT(DISTINCT ws.ws_order_number) AS order_count,
        sh.level + 1
    FROM 
        SalesHierarchy sh
    JOIN 
        web_sales ws ON sh.ws_bill_customer_sk = ws.ws_ship_customer_sk
    WHERE 
        ws_sold_date_sk >= (SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = 2022)
    GROUP BY 
        sh.ws_bill_customer_sk, sh.level
),
CustomerPerformance AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        COALESCE(MAX(sh.total_profit), 0) AS total_profit,
        COALESCE(SUM(ws.ws_quantity), 0) AS total_quantity,
        AVG(ws.ws_sales_price) OVER (PARTITION BY c.c_customer_sk) AS avg_sales_price
    FROM 
        customer c
    LEFT JOIN 
        SalesHierarchy sh ON c.c_customer_sk = sh.ws_bill_customer_sk
    LEFT JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY 
        c.c_customer_sk, c.c_first_name, c.c_last_name
)
SELECT 
    cp.c_customer_sk,
    cp.c_first_name,
    cp.c_last_name,
    cp.total_profit,
    cp.total_quantity,
    CASE 
        WHEN cp.total_profit > 10000 THEN 'High Value'
        WHEN cp.total_profit BETWEEN 5000 AND 10000 THEN 'Medium Value'
        ELSE 'Low Value' 
    END AS customer_value,
    CASE 
        WHEN cp.total_quantity > 100 THEN 'Frequent Buyer' 
        ELSE 'Occasional Buyer' 
    END AS purchase_frequency
FROM 
    CustomerPerformance cp
WHERE 
    cp.total_profit IS NOT NULL
ORDER BY 
    cp.total_profit DESC
FETCH FIRST 50 ROWS ONLY;
