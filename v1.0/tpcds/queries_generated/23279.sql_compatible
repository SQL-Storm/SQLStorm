
WITH RECURSIVE address_hierarchy AS (
    SELECT 
        ca_address_sk,
        ca_address_id,
        ca_city,
        ca_state,
        ca_country,
        1 AS level
    FROM 
        customer_address
    WHERE 
        ca_city IS NOT NULL

    UNION ALL

    SELECT 
        sub.ca_address_sk,
        sub.ca_address_id,
        sub.ca_city,
        sub.ca_state,
        sub.ca_country,
        parent.level + 1
    FROM 
        customer_address AS sub
    JOIN 
        address_hierarchy AS parent ON parent.ca_address_sk = sub.ca_address_sk
    WHERE 
        parent.ca_city != sub.ca_city
        AND sub.ca_state IS NOT NULL
)

SELECT 
    CONCAT(ca.ca_street_number, ', ', ca.ca_street_name, ' ', ca.ca_street_type) AS full_address,
    (SELECT COUNT(*) 
     FROM store s 
     WHERE s.s_city = ca.ca_city AND s.s_state = ca.ca_state) AS store_count,
    DATEDIFF(DATE '2002-10-01', MIN(d.d_date)) AS days_since_first_purchase,
    MAX(cd.cd_purchase_estimate) AS max_estimate,
    COUNT(DISTINCT c.c_current_cdemo_sk) AS unique_demographics,
    AVG(NULLIF(ws.ws_net_profit, 0)) AS avg_net_profit
FROM 
    customer_address ca
LEFT JOIN 
    customer c ON c.c_current_addr_sk = ca.ca_address_sk
LEFT JOIN 
    customer_demographics cd ON cd.cd_demo_sk = c.c_current_cdemo_sk
LEFT JOIN 
    web_sales ws ON ws.ws_bill_addr_sk = ca.ca_address_sk
LEFT JOIN 
    date_dim d ON d.d_date_sk = ws.ws_sold_date_sk
GROUP BY 
    ca.ca_street_number, ca.ca_street_name, ca.ca_street_type, ca.ca_address_sk, ca.ca_address_id, ca.ca_city, ca.ca_state, ca.ca_country
HAVING 
    COUNT(*) > 2
    AND (MAX(cd.cd_purchase_estimate) IS NOT NULL OR MAX(cd.cd_purchase_estimate) > 100)
ORDER BY 
    days_since_first_purchase DESC;
