WITH RECURSIVE sales_cycle AS (
    SELECT 
        ss_customer_sk,
        SUM(ss_quantity) AS total_quantity,
        SUM(ss_net_paid) AS total_net_paid,
        COUNT(DISTINCT ss_ticket_number) AS distinct_sales_count
    FROM 
        store_sales
    WHERE 
        ss_sold_date_sk BETWEEN 100 AND 200
    GROUP BY 
        ss_customer_sk
),
promotions AS (
    SELECT 
        p_promo_sk,
        SUM(cs_ext_sales_price) AS promo_sales,
        COUNT(DISTINCT cs_order_number) AS orders_with_promo
    FROM 
        catalog_sales
    LEFT JOIN 
        promotion ON cs_promo_sk = p_promo_sk
    WHERE 
        p_start_date_sk <= 200 AND p_end_date_sk >= 100
    GROUP BY 
        p_promo_sk
),
customer_info AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        row_number() OVER (PARTITION BY cd.cd_gender ORDER BY total_net_paid DESC) AS gender_rank
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    JOIN 
        sales_cycle sc ON c.c_customer_sk = sc.ss_customer_sk 
),
city_sales AS (
    SELECT 
        si.s_city,
        COUNT(DISTINCT si.s_store_sk) AS store_count,
        SUM(ss.ss_net_paid) AS total_sales
    FROM 
        store si
    LEFT JOIN 
        store_sales ss ON si.s_store_sk = ss.ss_store_sk 
    GROUP BY 
        si.s_city
)
SELECT 
    ci.c_customer_sk,
    ci.c_first_name,
    ci.c_last_name,
    ci.cd_gender,
    ci.cd_marital_status,
    ci.gender_rank,
    COALESCE(ps.promo_sales, 0) AS total_promo_sales,
    cs.city,
    cs.store_count,
    cs.total_sales,
    CASE 
        WHEN total_sales > 10000 THEN 'High Sales'
        WHEN total_sales > 5000 THEN 'Medium Sales'
        ELSE 'Low Sales'
    END AS sales_category
FROM 
    customer_info ci
LEFT JOIN 
    promotions ps ON ci.c_customer_sk = ps.c_customer_sk
LEFT JOIN 
    city_sales cs ON ci.c_city = cs.city
WHERE 
    ci.gender_rank = 1 
    AND (total_sales IS NOT NULL OR total_promo_sales > 0)
ORDER BY 
    ci.cd_gender, ci.c_last_name
LIMIT 100;