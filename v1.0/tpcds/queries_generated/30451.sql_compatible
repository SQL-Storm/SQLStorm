
WITH RECURSIVE SalesCTE AS (
    SELECT 
        ws_item_sk,
        SUM(ws_quantity) AS total_quantity,
        SUM(ws_net_paid) AS total_net_paid,
        DENSE_RANK() OVER (PARTITION BY ws_item_sk ORDER BY SUM(ws_net_paid) DESC) AS rank
    FROM 
        web_sales
    GROUP BY 
        ws_item_sk
    HAVING 
        SUM(ws_quantity) > 10
), 
CustomerGenderCTE AS (
    SELECT 
        c.c_customer_sk,
        cd.cd_gender,
        COUNT(DISTINCT sr.sr_ticket_number) AS return_count
    FROM 
        customer c
        JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
        LEFT JOIN store_returns sr ON c.c_customer_sk = sr.sr_customer_sk
    GROUP BY 
        c.c_customer_sk, cd.cd_gender
), 
CustomerIncomeCTE AS (
    SELECT 
        h.hd_demo_sk,
        h.hd_income_band_sk,
        COUNT(DISTINCT c.c_customer_sk) AS customer_count
    FROM 
        household_demographics h
        JOIN customer c ON h.hd_demo_sk = c.c_current_hdemo_sk
    GROUP BY 
        h.hd_demo_sk, h.hd_income_band_sk
), 
CombinedCTE AS (
    SELECT 
        cg.cd_gender,
        ci.hd_income_band_sk,
        ci.customer_count,
        COALESCE(sr.return_count, 0) AS total_returns
    FROM 
        CustomerGenderCTE cg
        FULL OUTER JOIN CustomerIncomeCTE ci ON cg.c_customer_sk = ci.hd_demo_sk
        LEFT JOIN (
            SELECT cd_gender, COUNT(*) AS return_count 
            FROM CustomerGenderCTE 
            GROUP BY cd_gender
        ) sr ON cg.cd_gender = sr.cd_gender
    GROUP BY 
        cg.cd_gender, ci.hd_income_band_sk, ci.customer_count
)
SELECT 
    c.cd_gender,
    i.ib_lower_bound, 
    i.ib_upper_bound,
    COUNT(DISTINCT s.ws_item_sk) AS unique_customers,
    SUM(s.total_net_paid) AS total_spent
FROM 
    SalesCTE s
    JOIN CombinedCTE c ON s.ws_item_sk = c.hd_demo_sk
    JOIN income_band i ON c.hd_income_band_sk = i.ib_income_band_sk
WHERE 
    (c.cd_gender IS NOT NULL OR c.hd_income_band_sk IS NULL)
GROUP BY 
    c.cd_gender, i.ib_lower_bound, i.ib_upper_bound
HAVING 
    SUM(s.total_net_paid) > 1000
ORDER BY 
    total_spent DESC;
