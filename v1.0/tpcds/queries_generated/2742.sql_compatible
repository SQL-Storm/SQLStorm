
WITH CustomerSales AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        SUM(ws.ws_quantity) AS total_quantity,
        SUM(ws.ws_net_profit) AS total_profit
    FROM 
        customer c
    LEFT JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    WHERE 
        c.c_current_cdemo_sk IS NOT NULL
    GROUP BY 
        c.c_customer_sk, c.c_first_name, c.c_last_name
),
BestCustomers AS (
    SELECT 
        c_customer_sk,
        c_first_name,
        c_last_name,
        total_quantity,
        total_profit,
        RANK() OVER (ORDER BY total_profit DESC) AS profit_rank
    FROM 
        CustomerSales
)
SELECT 
    bc.c_customer_sk,
    bc.c_first_name,
    bc.c_last_name,
    bc.total_quantity,
    bc.total_profit,
    CASE 
        WHEN bc.profit_rank <= 10 THEN 'Top Customer'
        ELSE 'Regular Customer' 
    END AS customer_type,
    EXISTS (
        SELECT 1 
        FROM store s 
        WHERE s.s_store_sk = (
            SELECT 
                ss.s_store_sk 
            FROM 
                store_sales ss 
            WHERE 
                ss.ss_customer_sk = bc.c_customer_sk 
            GROUP BY 
                ss.s_store_sk 
            ORDER BY 
                SUM(ss.ss_net_profit) DESC 
            LIMIT 1
        )
    ) AS has_top_store_sales
FROM 
    BestCustomers bc
WHERE 
    bc.total_profit > (SELECT AVG(total_profit) FROM CustomerSales)
ORDER BY 
    bc.total_profit DESC;
