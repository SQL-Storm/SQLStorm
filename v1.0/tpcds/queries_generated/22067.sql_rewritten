WITH CustomerRank AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        ROW_NUMBER() OVER (PARTITION BY cd.cd_gender ORDER BY cd.cd_purchase_estimate DESC) AS rank_by_purchase
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
),
RecentReturns AS (
    SELECT 
        sr_returning_customer_sk, 
        SUM(sr_return_quantity) AS total_return_quantity,
        COUNT(DISTINCT sr_ticket_number) AS total_return_count
    FROM 
        store_returns
    WHERE 
        sr_returned_date_sk = (SELECT MAX(d_date_sk) FROM date_dim WHERE d_date = cast('2002-10-01' as date))
    GROUP BY 
        sr_returning_customer_sk
),
SalesData AS (
    SELECT 
        ws_bill_customer_sk,
        SUM(ws_sales_price) AS total_sales,
        COUNT(ws_order_number) AS total_orders,
        CASE 
            WHEN SUM(ws_sales_price) > 1000 THEN 'High'
            WHEN SUM(ws_sales_price) BETWEEN 500 AND 1000 THEN 'Medium'
            ELSE 'Low'
        END AS sales_category
    FROM 
        web_sales 
    GROUP BY 
        ws_bill_customer_sk
)
SELECT 
    cr.c_first_name,
    cr.c_last_name,
    cr.cd_gender,
    sr.total_return_quantity,
    sr.total_return_count,
    COALESCE(sd.total_sales, 0) AS total_sales,
    sd.sales_category
FROM 
    CustomerRank cr
LEFT JOIN 
    RecentReturns sr ON cr.c_customer_sk = sr.sr_returning_customer_sk
LEFT JOIN 
    SalesData sd ON cr.c_customer_sk = sd.ws_bill_customer_sk
WHERE 
    cr.rank_by_purchase <= 10
AND 
    (sr.total_return_quantity IS NULL OR sr.total_return_quantity < 5)
ORDER BY 
    cr.cd_gender, cr.c_last_name;