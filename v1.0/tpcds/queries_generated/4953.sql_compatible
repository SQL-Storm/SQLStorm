
WITH CustomerReturns AS (
    SELECT
        sr_customer_sk,
        SUM(sr_return_amt_inc_tax) AS total_returned,
        COUNT(sr_return_quantity) AS return_count
    FROM store_returns
    GROUP BY sr_customer_sk
),
TopCustomers AS (
    SELECT
        cr.sr_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cr.total_returned,
        DENSE_RANK() OVER (ORDER BY cr.total_returned DESC) AS customer_rank
    FROM CustomerReturns cr
    JOIN customer c ON cr.sr_customer_sk = c.c_customer_sk
    WHERE cr.total_returned > (SELECT AVG(total_returned) FROM CustomerReturns)
),
PopularItems AS (
    SELECT
        ws.ws_item_sk,
        SUM(ws.ws_quantity) AS total_sold,
        DENSE_RANK() OVER (ORDER BY SUM(ws.ws_quantity) DESC) AS item_rank
    FROM web_sales ws
    JOIN TopCustomers tc ON ws.ws_ship_customer_sk = tc.sr_customer_sk
    GROUP BY ws.ws_item_sk
    HAVING SUM(ws.ws_quantity) >= 100
),
SaleDetails AS (
    SELECT
        ti.t_time_sk,
        dd.d_date,
        SUM(ws.ws_ext_sales_price) AS total_sales
    FROM web_sales ws
    JOIN time_dim ti ON ws.ws_sold_time_sk = ti.t_time_sk
    JOIN date_dim dd ON ws.ws_sold_date_sk = dd.d_date_sk
    JOIN PopularItems pi ON ws.ws_item_sk = pi.ws_item_sk
    GROUP BY ti.t_time_sk, dd.d_date
)
SELECT 
    d.d_day_name,
    d.d_month_seq,
    d.d_year,
    COUNT(sd.total_sales) AS sales_count,
    SUM(sd.total_sales) AS aggregate_sales,
    AVG(sd.total_sales) OVER (PARTITION BY d.d_year) AS average_sales_year,
    COALESCE(REPLACE(d.d_holiday, 'Y', 'Holiday'), 'Not Holiday') AS is_holiday
FROM SaleDetails sd
JOIN date_dim d ON sd.d_date = d.d_date
GROUP BY d.d_day_name, d.d_month_seq, d.d_year, d.d_holiday
ORDER BY d.d_year, d.d_month_seq;
