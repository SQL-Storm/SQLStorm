
WITH RECURSIVE SalesCTE AS (
    SELECT
        ws_item_sk,
        SUM(ws_quantity) AS total_quantity,
        SUM(ws_sales_price) AS total_sales
    FROM
        web_sales
    WHERE
        ws_sold_date_sk IN (
            SELECT d_date_sk
            FROM date_dim
            WHERE d_year = 2023
        )
    GROUP BY
        ws_item_sk
    UNION ALL
    SELECT
        cs_item_sk,
        SUM(cs_quantity),
        SUM(cs_sales_price)
    FROM
        catalog_sales
    WHERE
        cs_sold_date_sk IN (
            SELECT d_date_sk
            FROM date_dim
            WHERE d_year = 2023
        )
    GROUP BY
        cs_item_sk
),
AggregateSales AS (
    SELECT
        item.i_item_id,
        item.i_brand,
        COALESCE(SUM(cte.total_quantity), 0) AS total_quantity,
        COALESCE(SUM(cte.total_sales), 0) AS total_sales
    FROM
        item
    LEFT JOIN SalesCTE cte ON item.i_item_sk = cte.ws_item_sk OR item.i_item_sk = cte.cs_item_sk
    GROUP BY
        item.i_item_id, item.i_brand
),
TopSales AS (
    SELECT
        i_brand AS brand,
        total_sales,
        RANK() OVER (PARTITION BY i_brand ORDER BY total_sales DESC) AS sales_rank
    FROM
        AggregateSales
)
SELECT
    t.brand,
    t.total_sales,
    CASE
        WHEN t.total_sales > AVG(t.total_sales) OVER() THEN 'Above Average'
        ELSE 'Below Average'
    END AS sales_performance
FROM
    TopSales t
WHERE
    t.sales_rank <= 10
ORDER BY
    t.brand, t.total_sales DESC;
