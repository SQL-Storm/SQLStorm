
WITH RankedSales AS (
    SELECT 
        ws.web_site_id,
        SUM(ws.ws_net_paid) AS total_sales,
        DENSE_RANK() OVER (PARTITION BY ws.web_site_id ORDER BY SUM(ws.ws_net_paid) DESC) AS sales_rank
    FROM 
        web_sales ws
    JOIN 
        date_dim dd ON ws.ws_sold_date_sk = dd.d_date_sk
    WHERE 
        dd.d_year = 2001
    GROUP BY 
        ws.web_site_id
),
TopSales AS (
    SELECT 
        web_site_id,
        total_sales
    FROM 
        RankedSales
    WHERE 
        sales_rank <= 5
),
CustomerStats AS (
    SELECT 
        c.c_customer_id, 
        cd.cd_gender,
        COUNT(DISTINCT ws.ws_order_number) AS total_orders,
        SUM(ws.ws_net_paid) AS total_spent,
        AVG(ws.ws_net_paid) AS avg_order_value
    FROM 
        customer c 
    JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    GROUP BY 
        c.c_customer_id, cd.cd_gender
),
SalesWithCustomers AS (
    SELECT 
        ts.web_site_id,
        cs.c_customer_id,
        cs.total_orders,
        cs.total_spent,
        cs.avg_order_value,
        CASE 
            WHEN cs.total_spent IS NULL THEN 'No Purchases'
            WHEN cs.total_spent < 100 THEN 'Low Spender'
            WHEN cs.total_spent BETWEEN 100 AND 500 THEN 'Medium Spender'
            ELSE 'High Spender'
        END AS spending_category
    FROM 
        TopSales ts
    LEFT JOIN 
        CustomerStats cs ON ts.web_site_id = cs.c_customer_id  
)
SELECT 
    swc.web_site_id,
    swc.c_customer_id,
    swc.total_orders,
    swc.total_spent,
    swc.avg_order_value,
    swc.spending_category
FROM 
    SalesWithCustomers swc
WHERE 
    swc.total_orders > 2 OR swc.spending_category = 'High Spender'
ORDER BY 
    swc.total_spent DESC;
