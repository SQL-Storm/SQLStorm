
WITH RECURSIVE SalesCTE AS (
    SELECT ss_sold_date_sk, ss_item_sk, ss_quantity, ss_net_profit, 1 AS level
    FROM store_sales
    WHERE ss_sold_date_sk = (SELECT MAX(ss_sold_date_sk) FROM store_sales)
    
    UNION ALL

    SELECT ss.sold_date_sk, ss.item_sk, ss.quantity, ss.net_profit, sc.level + 1
    FROM store_sales ss
    JOIN SalesCTE sc ON ss.sold_date_sk = sc.sold_date_sk - INTERVAL '1 day' AND ss.item_sk = sc.item_sk
),
CustomerInfo AS (
    SELECT c.c_customer_sk, c.c_first_name, c.c_last_name, cd.cd_gender, cd.cd_marital_status,
           ca.ca_state, SUM(ss.ss_net_profit) AS total_net_profit
    FROM customer c
    JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    JOIN store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    JOIN customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
    GROUP BY c.c_customer_sk, c.c_first_name, c.c_last_name, cd.cd_gender, cd.cd_marital_status, ca.ca_state
),
RevenueStats AS (
    SELECT ca_state, COUNT(DISTINCT ci.c_customer_sk) AS num_customers,
           AVG(total_net_profit) AS avg_net_profit, 
           SUM(total_net_profit) AS total_revenue
    FROM CustomerInfo ci
    GROUP BY ca_state
)
SELECT rs.ca_state, rs.num_customers, rs.avg_net_profit, rs.total_revenue,
       CASE
           WHEN rs.total_revenue IS NULL THEN 'No Sales'
           WHEN rs.total_revenue > 1000000 THEN 'High Revenue'
           ELSE 'Moderate Revenue'
       END AS revenue_category
FROM RevenueStats rs
LEFT JOIN (
    SELECT DISTINCT d.d_date
    FROM date_dim d
    WHERE d.d_holiday = 'Y'
) holidays ON holidays.d_date = DATE '2002-10-01'
WHERE holidays.d_date IS NULL OR rs.total_revenue IS NOT NULL
ORDER BY rs.total_revenue DESC;
