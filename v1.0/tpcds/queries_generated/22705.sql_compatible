
WITH RankedSales AS (
    SELECT 
        ws.ws_item_sk, 
        ws.ws_order_number,
        ws.ws_net_profit,
        RANK() OVER (PARTITION BY ws.ws_item_sk ORDER BY ws.ws_net_profit DESC) AS rank
    FROM 
        web_sales ws 
    WHERE 
        ws.ws_net_paid > 0 
        AND ws.ws_ship_date_sk IS NOT NULL
),
CustomerReturns AS (
    SELECT 
        cr.ret_customer_sk,
        SUM(cr.cr_return_quantity) AS total_returns,
        COUNT(DISTINCT cr.cr_order_number) AS return_orders
    FROM 
        catalog_returns cr 
    GROUP BY 
        cr.ret_customer_sk
),
JoinResults AS (
    SELECT 
        c.c_customer_id,
        c.c_first_name,
        c.c_last_name,
        COALESCE(cs.total_sales, 0) AS total_sales,
        COALESCE(cr.total_returns, 0) AS total_returns,
        COALESCE((SELECT SUM(CASE 
            WHEN ws.ws_net_paid_inc_tax > 100 THEN ws.ws_net_paid_inc_tax 
            ELSE NULL 
        END) 
        FROM web_sales ws 
        WHERE ws.ws_bill_customer_sk = c.c_customer_sk), 0) AS high_value_sales
    FROM 
        customer c
    LEFT JOIN (
        SELECT 
            ws_bill_customer_sk, 
            SUM(ws_net_paid) AS total_sales 
        FROM 
            web_sales 
        GROUP BY 
            ws_bill_customer_sk
    ) cs ON c.c_customer_sk = cs.ws_bill_customer_sk
    LEFT JOIN CustomerReturns cr ON cr.ret_customer_sk = c.c_customer_sk
)
SELECT 
    j.c_customer_id,
    j.c_first_name,
    j.c_last_name,
    j.total_sales,
    j.total_returns,
    j.high_value_sales,
    COALESCE(r.rank, 0) AS rank_position
FROM 
    JoinResults j
LEFT JOIN RankedSales r ON j.c_customer_id = (
    SELECT 
        c.c_customer_id
    FROM 
        customer c
    WHERE 
        c.c_customer_sk = r.ws_item_sk
    FETCH FIRST 1 ROWS ONLY
)
WHERE 
    (j.total_sales > j.total_returns OR j.total_returns IS NULL)
    AND j.high_value_sales > (
        SELECT AVG(total_sales)
        FROM JoinResults
    ) 
ORDER BY 
    j.total_sales DESC,
    j.total_returns ASC;
