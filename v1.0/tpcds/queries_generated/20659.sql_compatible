
WITH CustomerReturns AS (
    SELECT 
        cr.returning_customer_sk,
        SUM(cr.return_amount) AS total_return_amount,
        COUNT(DISTINCT cr.return_order_number) AS total_returns,
        MAX(cr.returned_date_sk) AS last_return_date
    FROM 
        catalog_returns cr
    GROUP BY 
        cr.returning_customer_sk
),
AggregatedSales AS (
    SELECT 
        ws.ship_customer_sk,
        SUM(ws.net_paid_seq) AS total_net_paid,
        COUNT(ws.order_number) AS total_orders,
        AVG(ws.net_profit) AS average_net_profit
    FROM 
        web_sales ws
    WHERE 
        ws.ship_date_sk > (SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = 2022)
    GROUP BY 
        ws.ship_customer_sk
),
CustomerStats AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        COALESCE(cr.total_return_amount, 0) AS total_return_amount,
        COALESCE(cr.total_returns, 0) AS total_returns,
        COALESCE(asales.total_net_paid, 0) AS total_net_paid,
        COALESCE(asales.total_orders, 0) AS total_orders,
        COALESCE(asales.average_net_profit, 0) AS average_net_profit
    FROM 
        customer c
    LEFT OUTER JOIN CustomerReturns cr ON c.c_customer_sk = cr.returning_customer_sk
    LEFT OUTER JOIN AggregatedSales asales ON c.c_customer_sk = asales.ship_customer_sk
),
FinalOutput AS (
    SELECT 
        cs.c_customer_sk,
        cs.c_first_name,
        cs.c_last_name,
        cs.total_return_amount,
        cs.total_returns,
        cs.total_net_paid,
        cs.total_orders,
        cs.average_net_profit,
        CASE 
            WHEN cs.total_net_paid = 0 THEN 'No Purchase'
            WHEN cs.total_returns > cs.total_orders THEN 'Frequent Returner'
            ELSE 'Regular Customer'
        END AS customer_category
    FROM 
        CustomerStats cs
)
SELECT 
    f.c_customer_sk,
    f.c_first_name,
    f.c_last_name,
    f.total_return_amount,
    f.total_returns,
    RANK() OVER (ORDER BY f.total_net_paid DESC) AS net_paid_rank,
    f.total_net_paid,
    f.total_orders,
    f.average_net_profit,
    CONCAT(f.c_first_name, ' ', f.c_last_name) AS full_name,
    CASE 
        WHEN f.total_return_amount = 0 THEN 'Unknown'
        ELSE 'Known'
    END AS return_status
FROM 
    FinalOutput f
WHERE 
    f.total_net_paid > (SELECT AVG(total_net_paid) FROM AggregatedSales)
    OR 
    (f.total_returns IS NOT NULL AND f.total_returns > 5)
ORDER BY 
    f.total_return_amount DESC;
