
WITH CustomerReturns AS (
    SELECT 
        c.c_customer_id,
        SUM(COALESCE(sr.return_quantity, 0)) AS total_return_quantity,
        SUM(COALESCE(sr.return_amt, 0)) AS total_return_amt,
        COUNT(DISTINCT sr.ticket_number) AS return_count
    FROM 
        customer AS c
    LEFT JOIN 
        store_returns AS sr ON c.c_customer_sk = sr.customer_sk
    GROUP BY 
        c.c_customer_id
),
TopReturningCustomers AS (
    SELECT 
        c.c_customer_id,
        cr.total_return_quantity,
        cr.total_return_amt,
        RANK() OVER (ORDER BY cr.total_return_quantity DESC) AS rank
    FROM 
        CustomerReturns AS cr
    JOIN 
        customer AS c ON cr.c_customer_id = c.c_customer_id
    WHERE 
        cr.return_count > 0
),
SalesData AS (
    SELECT 
        w.web_site_id,
        SUM(ws.ext_sales_price) AS total_sales,
        SUM(ws.ext_discount_amt) AS total_discount,
        COUNT(ws.order_number) AS order_count
    FROM 
        web_sales AS ws
    JOIN 
        web_site AS w ON ws.web_site_sk = w.web_site_sk
    GROUP BY 
        w.web_site_id
)
SELECT 
    cu.c_customer_id,
    cu.total_return_quantity,
    cu.total_return_amt,
    sd.total_sales,
    sd.total_discount,
    sd.order_count,
    COALESCE((sd.total_sales - sd.total_discount) / NULLIF(sd.total_sales, 0), 0) AS net_sales_ratio,
    CASE 
        WHEN cu.total_return_quantity > 0 THEN 'Active Returner'
        ELSE 'Normal Customer'
    END AS customer_status
FROM 
    TopReturningCustomers AS cu
JOIN 
    SalesData AS sd ON cu.c_customer_id = sd.web_site_id
WHERE 
    cu.rank <= 10
ORDER BY 
    cu.total_return_quantity DESC;
