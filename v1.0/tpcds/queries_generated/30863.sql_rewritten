WITH RECURSIVE SalesCTE AS (
    SELECT 
        ws_item_sk,
        WS_ORDER_NUMBER,
        WS_NET_PROFIT,
        1 AS Level
    FROM 
        web_sales
    WHERE 
        ws_sold_date_sk = (SELECT max(ws_sold_date_sk) FROM web_sales)
    
    UNION ALL
    
    SELECT 
        cs_item_sk,
        cs_order_number,
        cs_net_profit,
        Level + 1
    FROM 
        catalog_sales
    JOIN 
        SalesCTE ON cs_item_sk = SalesCTE.ws_item_sk
    WHERE 
        cs_sold_date_sk = (SELECT max(cs_sold_date_sk) FROM catalog_sales)
)
SELECT 
    c.c_customer_id,
    c.c_first_name,
    c.c_last_name,
    SUM(COALESCE(ws.ws_net_profit, 0) + COALESCE(cs.cs_net_profit, 0)) AS total_profit,
    COUNT(DISTINCT ws.ws_order_number) AS web_sales_count,
    COUNT(DISTINCT cs.cs_order_number) AS catalog_sales_count,
    AVG(DATE_PART('epoch', d.d_date - cast('2002-10-01' as date)) / 86400) AS avg_days_since_last_order
FROM
    customer c
LEFT JOIN 
    web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
LEFT JOIN 
    catalog_sales cs ON c.c_customer_sk = cs.cs_bill_customer_sk
JOIN 
    date_dim d ON ws.ws_sold_date_sk = d.d_date_sk OR cs.cs_sold_date_sk = d.d_date_sk
WHERE 
    d.d_year = (SELECT max(d_year) FROM date_dim)
GROUP BY 
    c.c_customer_id, c.c_first_name, c.c_last_name
HAVING 
    SUM(COALESCE(ws.ws_net_profit, 0) + COALESCE(cs.cs_net_profit, 0)) > (SELECT AVG(SUM(ws_net_profit)) FROM web_sales) 
ORDER BY 
    total_profit DESC
LIMIT 10;