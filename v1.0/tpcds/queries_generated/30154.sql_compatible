
WITH RECURSIVE MonthlySales AS (
    SELECT 
        d.d_year, 
        d.d_month, 
        SUM(ws.ws_ext_sales_price) AS total_sales,
        COUNT(DISTINCT ws.ws_order_number) AS order_count
    FROM 
        date_dim d
    LEFT JOIN web_sales ws ON d.d_date_sk = ws.ws_sold_date_sk
    GROUP BY 
        d.d_year, d.d_month
    UNION ALL
    SELECT 
        d.d_year, 
        d.d_month, 
        SUM(ws.ws_ext_sales_price) AS total_sales,
        COUNT(DISTINCT ws.ws_order_number) AS order_count
    FROM 
        date_dim d
    JOIN web_sales ws ON d.d_date_sk = ws.ws_sold_date_sk
    JOIN MonthlySales ms ON ms.d_year = d.d_year AND ms.d_month = d.d_month - 1
    GROUP BY 
        d.d_year, d.d_month
),
SalesWithPercentage AS (
    SELECT 
        ms.d_year,
        ms.d_month,
        ms.total_sales,
        ms.order_count,
        CASE 
            WHEN ms.total_sales IS NULL THEN 0
            ELSE (SELECT SUM(total_sales) FROM MonthlySales WHERE d_year = ms.d_year) 
                 / NULLIF(ms.total_sales, 0)
        END AS sales_percentage
    FROM 
        MonthlySales ms
),
HighSales AS (
    SELECT 
        d.d_year, 
        d.d_month, 
        s.total_sales,
        s.order_count,
        s.sales_percentage
    FROM 
        SalesWithPercentage s
    JOIN date_dim d ON d.d_year = s.d_year AND d.d_month = s.d_month
    WHERE 
        s.sales_percentage > 0.1 AND s.order_count > 5
)
SELECT 
    h.d_year,
    h.d_month,
    h.total_sales,
    h.order_count,
    COALESCE(h.sales_percentage, 0) AS percentage_of_total,
    ca.ca_city
FROM 
    HighSales h
LEFT JOIN 
    customer_address ca ON h.d_month = CAST(SUBSTRING(ca.ca_zip, 1, 2) AS INTEGER)
WHERE 
    COALESCE(h.total_sales, 0) > 1000
ORDER BY 
    h.d_year, h.d_month DESC
FETCH FIRST 100 ROWS ONLY;
