WITH CustomerSales AS (
    SELECT 
        c.c_customer_id,
        SUM(COALESCE(ws.ws_net_paid, 0)) AS web_sales_total,
        SUM(COALESCE(cs.cs_net_paid, 0)) AS catalog_sales_total,
        SUM(COALESCE(ss.ss_net_paid, 0)) AS store_sales_total
    FROM 
        customer c
    LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    LEFT JOIN catalog_sales cs ON c.c_customer_sk = cs.cs_bill_customer_sk
    LEFT JOIN store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    GROUP BY 
        c.c_customer_id
),
RankedSales AS (
    SELECT 
        cst.c_customer_id,
        cst.web_sales_total,
        cst.catalog_sales_total,
        cst.store_sales_total,
        RANK() OVER (ORDER BY (cst.web_sales_total + cst.catalog_sales_total + cst.store_sales_total) DESC) AS sales_rank
    FROM 
        CustomerSales cst
),
HighValueCustomers AS (
    SELECT 
        r.c_customer_id,
        r.web_sales_total,
        r.catalog_sales_total,
        r.store_sales_total,
        CASE 
            WHEN r.web_sales_total > 1000 AND r.catalog_sales_total > 1000 THEN 'High Value Digital'
            WHEN r.store_sales_total > 1000 THEN 'High Value Store'
            ELSE 'Regular'
        END AS customer_category
    FROM 
        RankedSales r
    WHERE 
        r.sales_rank <= 100  
)
SELECT 
    hvc.c_customer_id,
    hvc.web_sales_total,
    hvc.catalog_sales_total,
    hvc.store_sales_total,
    hvc.customer_category,
    d.d_month_seq,
    d.d_year
FROM 
    HighValueCustomers hvc
JOIN date_dim d ON d.d_date_sk = (
    SELECT MIN(ws_ship_date_sk) 
    FROM web_sales ws
    WHERE ws_bill_customer_sk = hvc.c_customer_id
    GROUP BY ws_bill_customer_sk
)
WHERE 
    d.d_year = 2001
ORDER BY 
    hvc.web_sales_total DESC;