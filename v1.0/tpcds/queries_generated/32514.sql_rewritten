WITH RECURSIVE SalesCTE AS (
    SELECT 
        ws_item_sk,
        ws_order_number,
        ws_ext_sales_price,
        ws_net_profit,
        ROW_NUMBER() OVER (PARTITION BY ws_item_sk ORDER BY ws_ext_sales_price DESC) AS rank
    FROM web_sales
    WHERE ws_sold_date_sk >= (SELECT d_date_sk FROM date_dim WHERE d_date = cast('2002-10-01' as date) - INTERVAL '1 year')
), InventoryCTE AS (
    SELECT 
        inv_item_sk, 
        SUM(inv_quantity_on_hand) AS total_quantity_on_hand
    FROM inventory
    GROUP BY inv_item_sk
), ReturnStats AS (
    SELECT 
        wr_item_sk,
        SUM(wr_return_quantity) AS total_returned_quantity,
        SUM(wr_return_amt) AS total_return_amount,
        SUM(wr_net_loss) AS total_net_loss
    FROM web_returns
    GROUP BY wr_item_sk
)
SELECT 
    i.i_item_id,
    i.i_item_desc,
    COALESCE(SUM(s.ws_ext_sales_price), 0) AS total_sales,
    COALESCE(SUM(s.ws_net_profit), 0) AS total_profit,
    COALESCE(r.total_returned_quantity, 0) AS total_returns,
    COALESCE(r.total_return_amount, 0) AS return_amount,
    COALESCE(r.total_net_loss, 0) AS net_loss_from_returns,
    CASE 
        WHEN SUM(s.ws_ext_sales_price) > 0 THEN (SUM(s.ws_net_profit) / SUM(s.ws_ext_sales_price)) * 100 
        ELSE NULL 
    END AS profit_margin_percentage,
    COUNT(DISTINCT ws_order_number) AS total_orders,
    COUNT(DISTINCT CASE WHEN s.ws_net_profit < 0 THEN s.ws_order_number END) AS loss_orders
FROM item i
LEFT JOIN SalesCTE s ON i.i_item_sk = s.ws_item_sk AND s.rank = 1
LEFT JOIN InventoryCTE iv ON i.i_item_sk = iv.inv_item_sk
LEFT JOIN ReturnStats r ON i.i_item_sk = r.wr_item_sk
GROUP BY i.i_item_id, i.i_item_desc
ORDER BY total_sales DESC
LIMIT 10;