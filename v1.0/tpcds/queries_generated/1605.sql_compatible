
WITH customer_sales AS (
    SELECT 
        c.c_customer_id,
        SUM(COALESCE(ss.ss_net_paid, 0)) AS total_store_sales,
        SUM(COALESCE(ws.ws_net_paid, 0)) AS total_web_sales,
        COUNT(DISTINCT ss.ss_ticket_number) AS store_transaction_count,
        COUNT(DISTINCT ws.ws_order_number) AS web_transaction_count
    FROM 
        customer c
    LEFT JOIN 
        store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    LEFT JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY 
        c.c_customer_id
), demographic_summary AS (
    SELECT 
        cd.cd_gender,
        COUNT(DISTINCT cs.c_customer_id) AS customer_count,
        AVG(cs.total_store_sales) AS avg_store_sales,
        AVG(cs.total_web_sales) AS avg_web_sales
    FROM 
        customer_sales cs
    JOIN 
        customer_demographics cd ON cs.c_customer_id = cd.cd_demo_sk
    GROUP BY 
        cd.cd_gender
), top_customers AS (
    SELECT 
        c.c_customer_id,
        SUM(COALESCE(ss.ss_net_paid, 0)) AS total_spent,
        ROW_NUMBER() OVER (ORDER BY SUM(COALESCE(ss.ss_net_paid, 0)) DESC) AS sales_rank
    FROM 
        customer c
    LEFT JOIN 
        store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    GROUP BY 
        c.c_customer_id
)
SELECT 
    d.cd_gender,
    d.customer_count,
    d.avg_store_sales,
    d.avg_web_sales,
    tc.c_customer_id,
    tc.total_spent
FROM 
    demographic_summary d
LEFT JOIN 
    top_customers tc ON d.customer_count >= 100
WHERE 
    d.avg_web_sales > 500
ORDER BY 
    tc.total_spent DESC
FETCH FIRST 10 ROWS ONLY;
