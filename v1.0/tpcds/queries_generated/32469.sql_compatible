
WITH RECURSIVE top_customers AS (
    SELECT
        c_customer_sk,
        c_first_name,
        c_last_name,
        SUM(COALESCE(ss_net_profit, 0)) AS total_profit
    FROM customer
    LEFT JOIN store_sales ON customer.c_customer_sk = store_sales.ss_customer_sk
    GROUP BY c_customer_sk, c_first_name, c_last_name
    HAVING SUM(COALESCE(ss_net_profit, 0)) > 0
    UNION ALL
    SELECT
        tc.c_customer_sk,
        tc.c_first_name,
        tc.c_last_name,
        SUM(COALESCE(wb.ws_net_profit, 0)) AS total_profit
    FROM top_customers tc
    JOIN web_sales wb ON tc.c_customer_sk = wb.ws_ship_customer_sk
    GROUP BY tc.c_customer_sk, tc.c_first_name, tc.c_last_name
),
customer_demographics AS (
    SELECT 
        cd_demo_sk,
        cd_gender,
        cd_marital_status,
        cd_education_status,
        cd_purchase_estimate,
        ROW_NUMBER() OVER(PARTITION BY cd_gender ORDER BY cd_purchase_estimate DESC) AS rank
    FROM customer_demographics
    WHERE cd_purchase_estimate IS NOT NULL
),
sales_summary AS (
    SELECT
        dd.d_year,
        COUNT(DISTINCT cs.cs_order_number) AS total_orders,
        SUM(cs.cs_net_profit) AS total_sales,
        AVG(cs.cs_sales_price) AS avg_sales_price
    FROM catalog_sales cs
    JOIN date_dim dd ON cs.cs_sold_date_sk = dd.d_date_sk
    GROUP BY dd.d_year
)
SELECT
    cu.c_first_name,
    cu.c_last_name,
    cd.cd_gender,
    cd.cd_marital_status,
    ss.total_orders,
    ss.total_sales,
    ss.avg_sales_price,
    ROW_NUMBER() OVER (PARTITION BY cd.cd_gender ORDER BY ss.total_sales DESC) AS gender_rank
FROM top_customers cu
JOIN customer_demographics cd ON cu.c_current_cdemo_sk = cd.cd_demo_sk
JOIN sales_summary ss ON ss.d_year = EXTRACT(YEAR FROM DATE '2002-10-01')
WHERE cd.rank <= 10
ORDER BY cd.cd_gender, ss.total_sales DESC;
