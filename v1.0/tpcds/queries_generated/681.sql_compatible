
WITH CustomerSales AS (
    SELECT
        c.c_customer_sk,
        c.c_customer_id,
        SUM(ws.ws_net_paid) AS total_web_sales,
        SUM(cs.cs_net_paid) AS total_catalog_sales,
        SUM(ss.ss_net_paid) AS total_store_sales
    FROM
        customer c
    LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    LEFT JOIN catalog_sales cs ON c.c_customer_sk = cs.cs_bill_customer_sk
    LEFT JOIN store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    GROUP BY
        c.c_customer_sk, c.c_customer_id
),
SalesRank AS (
    SELECT
        c.c_customer_id,
        COALESCE(total_web_sales, 0) AS web_sales,
        COALESCE(total_catalog_sales, 0) AS catalog_sales,
        COALESCE(total_store_sales, 0) AS store_sales,
        RANK() OVER (ORDER BY (COALESCE(total_web_sales, 0) + COALESCE(total_catalog_sales, 0) + COALESCE(total_store_sales, 0)) DESC) AS sales_rank
    FROM
        CustomerSales c
),
FilteredRank AS (
    SELECT
        *,
        CASE 
            WHEN web_sales > 1000 THEN 'High Web Sales'
            WHEN web_sales BETWEEN 500 AND 1000 THEN 'Medium Web Sales'
            ELSE 'Low Web Sales'
        END AS web_sales_category
    FROM
        SalesRank
)
SELECT
    f.customer_id,
    f.web_sales,
    f.catalog_sales,
    f.store_sales,
    f.sales_rank,
    f.web_sales_category,
    CASE 
        WHEN f.sales_rank <= 10 THEN 'Top 10 Customers'
        ELSE 'Other Customers'
    END AS customer_group
FROM
    FilteredRank f
WHERE
    f.web_sales > 0 OR f.catalog_sales > 0 OR f.store_sales > 0
ORDER BY
    f.sales_rank;
