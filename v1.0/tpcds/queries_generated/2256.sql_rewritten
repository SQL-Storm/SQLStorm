WITH customer_sales_summary AS (
    SELECT
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        SUM(ws.ws_net_paid) AS total_web_sales,
        COUNT(DISTINCT ws.ws_order_number) AS order_count,
        RANK() OVER (PARTITION BY c.c_gender ORDER BY SUM(ws.ws_net_paid) DESC) AS sales_rank
    FROM
        customer c
    JOIN
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    WHERE
        c.c_birth_year > 1980
    GROUP BY
        c.c_customer_sk, c.c_first_name, c.c_last_name, c.c_gender
),
store_sales_summary AS (
    SELECT
        s.s_store_sk,
        SUM(ss.ss_net_paid) AS total_store_sales,
        AVG(ss.ss_net_paid_inc_tax) AS avg_sale_amount,
        COUNT(DISTINCT ss.ss_ticket_number) AS total_transactions
    FROM
        store s
    JOIN
        store_sales ss ON s.s_store_sk = ss.ss_store_sk
    GROUP BY
        s.s_store_sk
)
SELECT
    cs.c_first_name,
    cs.c_last_name,
    cs.total_web_sales,
    ss.total_store_sales,
    ss.avg_sale_amount,
    CASE 
        WHEN ss.total_transactions > 100 THEN 'High Transaction Store'
        ELSE 'Regular Transaction Store'
    END AS store_transaction_category
FROM
    customer_sales_summary cs
LEFT JOIN
    store_sales_summary ss ON cs.c_customer_sk = ss.s_store_sk  
WHERE
    cs.sales_rank = 1
ORDER BY
    cs.total_web_sales DESC
LIMIT 10;