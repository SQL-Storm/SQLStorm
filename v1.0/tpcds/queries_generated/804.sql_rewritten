WITH RankedSales AS (
    SELECT 
        ws.ws_order_number,
        ws.ws_item_sk,
        ws.ws_sales_price,
        ws.ws_quantity,
        ROW_NUMBER() OVER (PARTITION BY ws.ws_item_sk ORDER BY ws.ws_sales_price DESC) AS price_rank
    FROM 
        web_sales ws
    WHERE 
        ws.ws_sold_date_sk BETWEEN 2451000 AND 2451500 
),
TopSales AS (
    SELECT 
        rs.ws_order_number,
        rs.ws_item_sk,
        rs.ws_sales_price,
        rs.ws_quantity
    FROM 
        RankedSales rs
    WHERE 
        rs.price_rank = 1
),
CustomerReturns AS (
    SELECT 
        wr_refunded_customer_sk AS customer_sk,
        SUM(wr_return_amount) AS total_return_amount,
        COUNT(wr_order_number) AS total_returns
    FROM 
        web_returns
    WHERE 
        wr_returned_date_sk BETWEEN 2451000 AND 2451500 
    GROUP BY 
        wr_refunded_customer_sk
)
SELECT 
    c.c_customer_id,
    c.c_first_name,
    c.c_last_name,
    COALESCE(p.total_return_amount, 0) AS total_return_amount,
    COALESCE(p.total_returns, 0) AS total_returns,
    SUM(ts.ws_sales_price * ts.ws_quantity) AS total_sales,
    COUNT(ts.ws_order_number) AS order_count,
    SUM(ts.ws_sales_price * ts.ws_quantity) - COALESCE(p.total_return_amount, 0) AS net_sales
FROM 
    customer c
LEFT JOIN 
    CustomerReturns p ON c.c_customer_sk = p.customer_sk
JOIN 
    TopSales ts ON c.c_customer_sk = ts.ws_bill_customer_sk
GROUP BY 
    c.c_customer_id, c.c_first_name, c.c_last_name
HAVING 
    net_sales > 1000 
ORDER BY 
    net_sales DESC
LIMIT 10;