
WITH RECURSIVE Customer_Hierarchy AS (
    SELECT c_customer_sk, c_first_name, c_last_name, c_preferred_cust_flag,
           c_current_cdemo_sk, 1 AS level
    FROM customer
    WHERE c_preferred_cust_flag = 'Y'
    UNION ALL
    SELECT c.c_customer_sk, c.c_first_name, c.c_last_name, c.c_preferred_cust_flag,
           c.c_current_cdemo_sk, ch.level + 1
    FROM customer AS c
    JOIN Customer_Hierarchy AS ch ON c.c_current_cdemo_sk = ch.c_current_cdemo_sk
),
Store_Sales_Summary AS (
    SELECT ss_store_sk, SUM(ss_net_paid_inc_tax) AS total_sales, COUNT(ss_ticket_number) AS transaction_count
    FROM store_sales
    WHERE ss_sold_date_sk BETWEEN 2020001 AND 2022010
    GROUP BY ss_store_sk
),
Customer_Sales AS (
    SELECT ws_bill_customer_sk, SUM(ws_net_paid_inc_tax) AS total_web_sales
    FROM web_sales
    GROUP BY ws_bill_customer_sk
),
Combined_Sales AS (
    SELECT cs.c_customer_sk, 
           COALESCE(css.total_web_sales, 0) AS web_sales,
           COALESCE(sss.total_sales, 0) AS store_sales,
           cs.level
    FROM Customer_Hierarchy AS cs
    LEFT JOIN Customer_Sales AS css ON cs.c_customer_sk = css.ws_bill_customer_sk
    LEFT JOIN Store_Sales_Summary AS sss ON cs.c_customer_sk = sss.ss_store_sk
)
SELECT c.c_customer_sk,
       c.c_first_name,
       SUM(cs.web_sales + cs.store_sales) AS total_spent,
       ROW_NUMBER() OVER (PARTITION BY cs.level ORDER BY SUM(cs.web_sales + cs.store_sales) DESC) AS sales_rank
FROM Combined_Sales AS cs
JOIN customer AS c ON cs.c_customer_sk = c.c_customer_sk
WHERE c.c_birth_year < 1990
GROUP BY c.c_customer_sk, c.c_first_name, cs.level
HAVING SUM(cs.web_sales + cs.store_sales) > 1000
ORDER BY total_spent DESC
LIMIT 10;
