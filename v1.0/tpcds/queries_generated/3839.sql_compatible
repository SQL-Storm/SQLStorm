
WITH CustomerReturns AS (
    SELECT 
        cr.returning_customer_sk,
        SUM(cr.return_quantity) AS total_returned_quantity,
        SUM(cr.return_amt_inc_tax) AS total_returned_amount,
        ROW_NUMBER() OVER (PARTITION BY cr.returning_customer_sk ORDER BY SUM(cr.return_amt_inc_tax) DESC) AS return_rank
    FROM
        catalog_returns cr
    GROUP BY 
        cr.returning_customer_sk
),
HighReturnCustomers AS (
    SELECT 
        cr.returning_customer_sk,
        cd.gender,
        cd.marital_status,
        ROW_NUMBER() OVER (PARTITION BY cd.gender ORDER BY cr.total_returned_quantity DESC) AS gender_rank
    FROM 
        CustomerReturns cr
    JOIN 
        customer_demographics cd ON cr.returning_customer_sk = cd.cd_demo_sk
    WHERE 
        cr.total_returned_quantity > 10
),
StoreDetails AS (
    SELECT 
        ss.store_sk,
        COUNT(ss.ticket_number) AS total_sales,
        SUM(ss.net_profit) AS total_profit
    FROM 
        store_sales ss
    GROUP BY 
        ss.store_sk
)
SELECT 
    c.c_first_name,
    c.c_last_name,
    cr.total_returned_quantity,
    cr.total_returned_amount,
    sd.total_sales,
    sd.total_profit,
    COALESCE(ca.ca_city, 'Unknown City') AS return_city,
    CASE 
        WHEN cr.total_returned_quantity > 100 THEN 'High'
        WHEN cr.total_returned_quantity BETWEEN 50 AND 100 THEN 'Medium'
        ELSE 'Low' 
    END AS return_category
FROM 
    CustomerReturns cr
JOIN 
    customer c ON cr.returning_customer_sk = c.c_customer_sk
LEFT JOIN 
    customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
JOIN 
    HighReturnCustomers hrc ON cr.returning_customer_sk = hrc.returning_customer_sk
JOIN 
    StoreDetails sd ON sd.store_sk = c.c_current_addr_sk
WHERE 
    hrc.gender_rank = 1
ORDER BY 
    cr.total_returned_amount DESC
LIMIT 100;
