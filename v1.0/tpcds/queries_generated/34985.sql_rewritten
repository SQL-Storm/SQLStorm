WITH RECURSIVE sales_data AS (
    SELECT 
        ws_sold_date_sk,
        ws_item_sk,
        SUM(ws_net_profit) AS total_net_profit,
        ROW_NUMBER() OVER (PARTITION BY ws_item_sk ORDER BY SUM(ws_net_profit) DESC) AS rank
    FROM 
        web_sales
    GROUP BY 
        ws_sold_date_sk, ws_item_sk
),
daily_sales AS (
    SELECT 
        d.d_date, 
        d.d_year,
        SUM(sd.total_net_profit) AS daily_net_profit
    FROM 
        date_dim AS d
    JOIN 
        sales_data AS sd ON d.d_date_sk = sd.ws_sold_date_sk
    GROUP BY 
        d.d_date, d.d_year
),
customer_info AS (
    SELECT 
        c.c_customer_id,
        cd.cd_gender,
        cd.cd_income_band_sk,
        COUNT(DISTINCT ws.ws_order_number) AS total_orders,
        SUM(ws.ws_sales_price) AS total_spent
    FROM 
        customer AS c
    JOIN 
        customer_demographics AS cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN 
        web_sales AS ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY 
        c.c_customer_id, cd.cd_gender, cd.cd_income_band_sk
)
SELECT
    di.d_year,
    ci.cd_gender,
    ci.cd_income_band_sk,
    SUM(di.daily_net_profit) AS total_profit,
    COUNT(DISTINCT ci.c_customer_id) AS customer_count,
    AVG(ci.total_spent) AS avg_spent
FROM 
    daily_sales AS di
JOIN 
    customer_info AS ci 
    ON di.d_year = EXTRACT(YEAR FROM cast('2002-10-01' as date))
GROUP BY 
    di.d_year, ci.cd_gender, ci.cd_income_band_sk
HAVING 
    SUM(di.daily_net_profit) > (SELECT AVG(daily_net_profit) FROM daily_sales)
ORDER BY 
    total_profit DESC, customer_count ASC
LIMIT 10;