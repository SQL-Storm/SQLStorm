
WITH RankedSales AS (
    SELECT
        ws_shipped_date_sk,
        ws_item_sk,
        ws_sales_price,
        ws_quantity,
        ROW_NUMBER() OVER (PARTITION BY ws_item_sk ORDER BY ws_sales_price DESC) AS rnk
    FROM
        web_sales
    WHERE
        ws_sales_price IS NOT NULL
),
MonthlySales AS (
    SELECT
        d.d_month_seq,
        SUM(rs.ws_sales_price * rs.ws_quantity) AS total_sales,
        COUNT(DISTINCT rs.ws_item_sk) AS num_unique_items_sold
    FROM
        date_dim d
    JOIN
        RankedSales rs ON d.d_date_sk = rs.ws_shipped_date_sk
    GROUP BY
        d.d_month_seq
),
CustomerData AS (
    SELECT
        c.c_customer_id,
        cd.cd_gender,
        cd.cd_marital_status,
        SUM(ws.ws_net_paid) AS total_spent
    FROM
        customer c
    LEFT JOIN
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    JOIN
        web_sales ws ON ws.ws_bill_customer_sk = c.c_customer_sk
    GROUP BY
        c.c_customer_id, cd.cd_gender, cd.cd_marital_status
)
SELECT
    md.d_month_seq,
    c.cd_gender,
    c.cd_marital_status,
    md.total_sales,
    md.num_unique_items_sold,
    COALESCE(cd.total_spent, 0) AS total_spent_by_customer
FROM
    MonthlySales md
LEFT JOIN
    (SELECT d_month_seq FROM date_dim WHERE d_date_sk IN (SELECT MAX(ws_shipped_date_sk) FROM web_sales)) AS subquery
ON 
    md.d_month_seq = subquery.d_month_seq
LEFT JOIN
    customer_demographics c ON cd.cd_demo_sk = c.c_current_cdemo_sk
WHERE
    md.total_sales > 1000
ORDER BY
    md.d_month_seq, total_spent_by_customer DESC
FETCH FIRST 50 ROWS ONLY;
