WITH RECURSIVE item_hierarchy AS (
    SELECT i_item_sk, i_item_id, i_item_desc, i_current_price, 1 AS hierarchy_level
    FROM item
    WHERE i_rec_start_date <= cast('2002-10-01' as date) AND (i_rec_end_date IS NULL OR i_rec_end_date >= cast('2002-10-01' as date))
    UNION ALL
    SELECT i.i_item_sk, i.i_item_id, i.i_item_desc, i.i_current_price, ih.hierarchy_level + 1
    FROM item i
    JOIN item_hierarchy ih ON i.i_item_sk = ih.i_item_sk + 1
),
customer_sales AS (
    SELECT c.c_customer_sk, c.c_customer_id, SUM(ws.ws_net_profit) AS total_profit
    FROM customer c
    LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_ship_customer_sk
    GROUP BY c.c_customer_sk, c.c_customer_id
),
top_customers AS (
    SELECT c_customer_id, total_profit
    FROM customer_sales
    WHERE total_profit > (SELECT AVG(total_profit) FROM customer_sales)
    ORDER BY total_profit DESC
    LIMIT 10
),
sales_details AS (
    SELECT 
        ts.c_customer_id,
        ih.i_item_desc,
        COUNT(ws.ws_order_number) AS order_count,
        SUM(ws.ws_quantity) AS total_quantity
    FROM top_customers ts
    JOIN web_sales ws ON ts.c_customer_id = ws.ws_bill_customer_sk
    JOIN item_hierarchy ih ON ws.ws_item_sk = ih.i_item_sk
    GROUP BY ts.c_customer_id, ih.i_item_desc
),
final_report AS (
    SELECT 
        ts.c_customer_id, 
        SUM(sd.total_quantity) AS total_items_sold,
        COUNT(DISTINCT sd.order_count) AS unique_orders,
        RANK() OVER (PARTITION BY sd.orders_count ORDER BY SUM(sd.total_quantity) DESC) AS item_rank
    FROM sales_details sd
    JOIN top_customers ts ON sd.c_customer_id = ts.c_customer_id
    GROUP BY ts.c_customer_id
)

SELECT 
    fr.c_customer_id,
    fr.total_items_sold,
    fr.unique_orders,
    CASE 
        WHEN fr.unique_orders IS NULL THEN 'No orders'
        ELSE 'Orders placed'
    END AS order_status
FROM final_report fr
FULL OUTER JOIN customer c ON fr.c_customer_id = c.c_customer_id
WHERE (c.c_gender IS NULL OR c.c_gender = 'M')
ORDER BY fr.total_items_sold DESC
LIMIT 20;