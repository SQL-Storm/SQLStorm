WITH RECURSIVE revenue_data AS (
    SELECT 
        ws_bill_customer_sk AS customer_sk,
        SUM(ws_net_paid_inc_tax) AS total_revenue,
        COUNT(ws_order_number) AS order_count,
        ROW_NUMBER() OVER (PARTITION BY ws_bill_customer_sk ORDER BY SUM(ws_net_paid_inc_tax) DESC) AS revenue_rank
    FROM web_sales
    WHERE ws_sold_date_sk BETWEEN 1 AND 30
    GROUP BY ws_bill_customer_sk
),
best_customers AS (
    SELECT 
        rd.*,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_credit_rating,
        cd.cd_purchase_estimate,
        ca.ca_state,
        COALESCE(SUM(CASE WHEN cr.returning_customer_sk IS NOT NULL THEN cr.cr_return_quantity ELSE 0 END), 0) AS total_returns
    FROM revenue_data rd
    JOIN customer c ON rd.customer_sk = c.c_customer_sk
    JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN catalog_returns cr ON cr.cr_returning_customer_sk = c.c_customer_sk
    JOIN customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
    WHERE rd.revenue_rank <= 10
    GROUP BY rd.customer_sk, cd.cd_gender, cd.cd_marital_status, cd.cd_credit_rating, cd.cd_purchase_estimate, ca.ca_state
),
avg_order_value AS (
    SELECT 
        customer_sk,
        total_revenue / NULLIF(order_count, 0) AS avg_order_value
    FROM best_customers
),
cut_off AS (
    SELECT 
        customer_sk,
        avg_order_value,
        NTILE(100) OVER (ORDER BY avg_order_value DESC) AS percentile
    FROM avg_order_value
)
SELECT 
    c.c_customer_id,
    c.c_first_name,
    c.c_last_name,
    b.total_revenue,
    b.order_count,
    a.avg_order_value,
    b.total_returns,
    CASE 
        WHEN c.c_birth_month = EXTRACT(MONTH FROM cast('2002-10-01' as date)) THEN 'Birthday Month!'
        ELSE 'Regular Customer'
    END AS customer_status,
    CASE 
        WHEN c.c_login IS NOT NULL THEN 'Active'
        ELSE 'Inactive'
    END AS login_status
FROM best_customers b
JOIN customer c ON b.customer_sk = c.c_customer_sk
JOIN avg_order_value a ON b.customer_sk = a.customer_sk
JOIN cut_off co ON b.customer_sk = co.customer_sk
WHERE co.percentile <= 10
AND b.total_returns = 0
ORDER BY b.total_revenue DESC NULLS LAST;