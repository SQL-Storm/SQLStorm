
WITH RECURSIVE customer_sales AS (
    SELECT c.c_customer_sk,
           c.c_first_name,
           c.c_last_name,
           SUM(ws.ws_ext_sales_price) AS total_sales,
           COUNT(ws.ws_order_number) AS order_count,
           ROW_NUMBER() OVER (PARTITION BY c.c_customer_sk ORDER BY SUM(ws.ws_ext_sales_price) DESC) AS rank
    FROM customer c
    LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY c.c_customer_sk, c.c_first_name, c.c_last_name
),
ranked_sales AS (
    SELECT *,
           CASE 
               WHEN total_sales IS NULL THEN 'No Sales'
               WHEN total_sales < 1000 THEN 'Low Sales'
               WHEN total_sales BETWEEN 1000 AND 5000 THEN 'Medium Sales'
               ELSE 'High Sales'
           END AS sale_category
    FROM customer_sales
    WHERE rank <= 10
)
SELECT ra.c_customer_sk,
       ra.c_first_name,
       ra.c_last_name,
       ra.total_sales,
       ra.order_count,
       ra.sale_category,
       d.d_year,
       d.d_month_seq,
       SUM(ws.ws_ext_sales_price) OVER (PARTITION BY d.d_year ORDER BY d.d_month_seq) AS year_total_sales,
       COUNT(DISTINCT p.p_promo_id) AS promotion_count,
       COALESCE(MAX(p.p_cost), 0.00) AS max_promotion_cost
FROM ranked_sales ra
JOIN date_dim d ON d.d_date_sk = (
    SELECT ws.ws_sold_date_sk
    FROM web_sales ws
    WHERE ws.ws_bill_customer_sk = ra.c_customer_sk
    ORDER BY ws.ws_sold_date_sk DESC
    FETCH FIRST 1 ROW ONLY
)
LEFT JOIN promotion p ON p.p_item_sk IN (
    SELECT ws.ws_item_sk
    FROM web_sales ws
    WHERE ws.ws_bill_customer_sk = ra.c_customer_sk
)
GROUP BY ra.c_customer_sk, ra.c_first_name, ra.c_last_name, ra.total_sales, ra.order_count, ra.sale_category, d.d_year, d.d_month_seq
ORDER BY ra.total_sales DESC
FETCH FIRST 50 ROWS ONLY;
