WITH RankedSales AS (
    SELECT 
        s.s_store_name,
        ws.ws_sold_date_sk,
        SUM(ws.ws_quantity) AS total_quantity,
        SUM(ws.ws_ext_sales_price) AS total_sales,
        ROW_NUMBER() OVER (PARTITION BY s.s_store_sk ORDER BY SUM(ws.ws_ext_sales_price) DESC) AS sales_rank
    FROM store s
    JOIN web_sales ws ON s.s_store_sk = ws.ws_store_sk
    WHERE ws.ws_sold_date_sk BETWEEN (SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = 2001) - 30 AND (SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = 2001)
    GROUP BY s.s_store_sk, s.s_store_name, ws.ws_sold_date_sk
),
CustomerInflation AS (
    SELECT 
        c.c_customer_sk,
        COALESCE(cd.cd_purchase_estimate * (1 + (0.02 * EXTRACT(YEAR FROM cast('2002-10-01' as date)) - 1999)), 0) AS inflated_purchase_estimate
    FROM customer c
    LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
),
TopStores AS (
    SELECT 
        s.s_store_name,
        ROW_NUMBER() OVER (ORDER BY total_sales DESC) AS rank
    FROM RankedSales 
    GROUP BY s_store_name
    HAVING SUM(total_sales) > 10000
)
SELECT 
    s.s_store_name,
    COALESCE(ci.inflated_purchase_estimate, 0) AS estimated_purchase_power,
    rs.total_quantity,
    rs.total_sales,
    t.rank
FROM RankedSales rs
JOIN TopStores t ON rs.s_store_name = t.s_store_name
LEFT JOIN CustomerInflation ci ON ci.c_customer_sk IN (SELECT DISTINCT ws_bill_customer_sk FROM web_sales WHERE ws_store_sk = rs.s_store_sk)
WHERE rs.sales_rank = 1
ORDER BY estimated_purchase_power DESC, total_sales DESC;