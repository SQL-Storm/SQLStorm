
WITH CustomerReturns AS (
    SELECT 
        cr.returning_customer_sk,
        cr.returning_cdemo_sk,
        cr.returning_hdemo_sk,
        COALESCE(SUM(cr.return_quantity), 0) AS total_returned,
        COUNT(DISTINCT cr.return_number) AS return_count
    FROM 
        catalog_returns cr
    LEFT JOIN 
        customer c ON cr.returning_customer_sk = c.c_customer_sk
    GROUP BY 
        cr.returning_customer_sk, cr.returning_cdemo_sk, cr.returning_hdemo_sk
),
SalesSummary AS (
    SELECT 
        ws_bill_customer_sk AS customer_sk,
        SUM(ws_sales_price) AS total_sales,
        AVG(ws_sales_price) AS avg_sales_price,
        COUNT(ws_order_number) AS order_count
    FROM 
        web_sales
    WHERE 
        ws_sales_price > (
            SELECT AVG(ws_sales_price)
            FROM web_sales
        )
    GROUP BY 
        ws_bill_customer_sk
),
CustomerInfo AS (
    SELECT 
        c.c_customer_id,
        cd.cd_gender,
        COALESCE(cd.cd_dep_count, 0) AS dep_count,
        r.total_returned,
        s.total_sales,
        s.avg_sales_price,
        s.order_count
    FROM 
        customer c
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN 
        CustomerReturns r ON c.c_customer_sk = r.returning_customer_sk
    LEFT JOIN 
        SalesSummary s ON c.c_customer_sk = s.customer_sk
)
SELECT 
    ci.c_customer_id,
    ci.cd_gender,
    ci.dep_count,
    ci.total_returned,
    ci.total_sales,
    ci.avg_sales_price,
    ci.order_count,
    CASE 
        WHEN ci.total_sales > 1000 THEN 'High Value'
        WHEN ci.total_sales BETWEEN 500 AND 1000 THEN 'Medium Value'
        ELSE 'Low Value'
    END AS customer_value
FROM 
    CustomerInfo ci
WHERE 
    ci.total_returned > 5 
    OR (ci.total_sales > 100 AND ci.dep_count IS NULL)
ORDER BY 
    ci.total_sales DESC
OFFSET 5 ROWS FETCH NEXT 20 ROWS ONLY;
