WITH RECURSIVE sales_summary AS (
    SELECT 
        ws_sold_date_sk, 
        ws_item_sk, 
        SUM(ws_quantity) AS total_quantity, 
        SUM(ws_net_paid) AS total_net_paid,
        MIN(ws_sold_date_sk) OVER (PARTITION BY ws_item_sk) AS first_sale_date
    FROM web_sales
    WHERE ws_sold_date_sk >= 2451000  
    GROUP BY ws_sold_date_sk, ws_item_sk
    UNION ALL
    SELECT 
        w.ws_sold_date_sk, 
        w.ws_item_sk,
        w.ws_quantity + ss.total_quantity,
        w.ws_net_paid + ss.total_net_paid,
        ss.first_sale_date
    FROM web_sales w
    JOIN sales_summary ss ON w.ws_item_sk = ss.ws_item_sk
    WHERE w.ws_sold_date_sk > ss.ws_sold_date_sk
    LIMIT 1000
),
category_sales AS (
    SELECT 
        i_category, 
        SUM(total_net_paid) AS category_total_net_paid
    FROM item i
    JOIN sales_summary ss ON i.i_item_sk = ss.ws_item_sk
    GROUP BY i_category
),
highest_category AS (
    SELECT 
        i_category,
        category_total_net_paid,
        RANK() OVER (ORDER BY category_total_net_paid DESC) as sales_rank
    FROM category_sales
)
SELECT 
    hc.i_category,
    hc.category_total_net_paid,
    ca.ca_city,
    COALESCE(sm.sm_type, 'Standard Shipping') AS shipping_type,
    hd.hd_buy_potential,
    (SELECT COUNT(*) FROM customer c WHERE c.c_current_cdemo_sk IS NOT NULL) AS total_customers
FROM highest_category hc
LEFT JOIN customer c ON c.c_customer_sk = (SELECT MIN(c_customer_sk) FROM customer)
LEFT JOIN customer_demographics hd ON c.c_current_cdemo_sk = hd.cd_demo_sk
LEFT JOIN customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
LEFT JOIN ship_mode sm ON c.c_current_addr_sk = sm.sm_ship_mode_sk
WHERE hc.sales_rank <= 5
AND ca.ca_state IN ('CA', 'TX')
AND hd.hd_buy_potential LIKE 'High%'
ORDER BY category_total_net_paid DESC;