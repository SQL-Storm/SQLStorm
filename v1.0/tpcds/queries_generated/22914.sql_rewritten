WITH RECURSIVE sales_data AS (
    SELECT 
        ws.web_site_sk,
        ws.web_name,
        SUM(ws_ext_sales_price) AS total_sales,
        COUNT(DISTINCT ws_order_number) AS order_count,
        ROW_NUMBER() OVER (PARTITION BY ws.web_site_sk ORDER BY SUM(ws_ext_sales_price) DESC) AS sales_rank
    FROM 
        web_sales ws
    JOIN 
        item i ON ws.ws_item_sk = i.i_item_sk
    WHERE 
        (ws.ws_ship_date_sk IS NOT NULL OR ws.ws_ship_date_sk IS NULL)
    GROUP BY 
        ws.web_site_sk, ws.web_name
),
high_sales AS (
    SELECT 
        web_name,
        COUNT(*) AS high_sales_count
    FROM 
        sales_data
    WHERE 
        sales_rank <= 5
    GROUP BY 
        web_name
),
customer_info AS (
    SELECT
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        COALESCE(cd.cd_dep_count, 0) AS dep_count,
        CASE 
            WHEN cd.cd_purchase_estimate > 1000 THEN 'High'
            WHEN cd.cd_purchase_estimate BETWEEN 500 AND 1000 THEN 'Medium'
            ELSE 'Low'
        END AS purchase_segment
    FROM 
        customer c
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
),
pending_orders AS (
    SELECT 
        ss.ss_customer_sk,
        SUM(ss.ss_sales_price) AS total_pending_sales,
        COUNT(ss_ticket_number) AS pending_order_count
    FROM 
        store_sales ss
    JOIN 
        sales_data sd ON ss.ss_customer_sk = sd.web_site_sk
    WHERE 
        ss.ss_sold_date_sk > (SELECT MAX(d.d_date_sk) FROM date_dim d WHERE d.d_date = cast('2002-10-01' as date) - INTERVAL '30' DAY)
    GROUP BY 
        ss.ss_customer_sk
)
SELECT 
    ci.c_first_name,
    ci.c_last_name,
    ci.cd_gender,
    ci.cd_marital_status,
    ci.dep_count,
    COALESCE(ho.high_sales_count, 0) AS high_sales_count,
    po.total_pending_sales,
    po.pending_order_count,
    CASE 
        WHEN po.total_pending_sales IS NULL THEN 'No Orders'
        WHEN po.total_pending_sales > 1000 THEN 'High Value'
        ELSE 'Regular'
    END AS order_status
FROM 
    customer_info ci
LEFT JOIN 
    high_sales ho ON ci.c_first_name || ' ' || ci.c_last_name IN (SELECT CONCAT(c_first_name, ' ', c_last_name) FROM customer_info)
LEFT JOIN 
    pending_orders po ON ci.c_customer_sk = po.ss_customer_sk
WHERE 
    (ci.cd_gender = 'F' OR ci.cd_marital_status = 'S')
    AND (ho.high_sales_count > 0 OR po.pending_order_count > 0)
ORDER BY 
    ci.dep_count DESC, 
    po.total_pending_sales DESC
LIMIT 10;