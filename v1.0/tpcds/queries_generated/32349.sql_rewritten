WITH RECURSIVE address_hierarchy AS (
    SELECT 
        ca_address_sk,
        ca_address_id,
        ca_street_number,
        ca_street_name,
        ca_city,
        ca_state,
        1 AS level
    FROM 
        customer_address
    WHERE 
        ca_state IN ('CA', 'NY') 

    UNION ALL

    SELECT 
        ca.ca_address_sk,
        ca.ca_address_id,
        ca.ca_street_number,
        ca.ca_street_name,
        ca.ca_city,
        ca.ca_state,
        ah.level + 1
    FROM 
        customer_address ca
    JOIN 
        address_hierarchy ah ON ca.ca_address_sk = ah.ca_address_sk
    WHERE 
        ca_state IS NOT NULL
),
aggregate_sales AS (
    SELECT 
        ws.web_site_id,
        SUM(ws.ws_sales_price) AS total_sales,
        COUNT(DISTINCT ws.ws_order_number) AS total_orders
    FROM 
        web_sales ws
    WHERE 
        ws.ws_sold_date_sk >= (SELECT MIN(d_date_sk) FROM date_dim WHERE d_year = 2001)
        AND ws.ws_sold_date_sk <= (SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = 2001)
    GROUP BY 
        ws.web_site_id
),
customer_info AS (
    SELECT 
        c.c_customer_id,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_purchase_estimate,
        ROW_NUMBER() OVER (PARTITION BY cd.cd_gender ORDER BY cd.cd_purchase_estimate DESC) AS rn
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    WHERE 
        cd.cd_purchase_estimate IS NOT NULL
),
returns_summary AS (
    SELECT 
        sr_returned_date_sk,
        COUNT(sr_ticket_number) AS total_returns,
        SUM(sr_return_amt_inc_tax) AS total_return_value
    FROM 
        store_returns
    GROUP BY 
        sr_returned_date_sk
)
SELECT 
    ah.ca_city,
    ah.ca_state,
    ci.c_customer_id,
    ci.cd_gender,
    ci.cd_marital_status,
    ci.total_sales,
    ci.total_orders,
    COALESCE(rs.total_returns, 0) AS returns_count,
    COALESCE(rs.total_return_value, 0.00) AS return_value,
    CASE 
        WHEN ci.total_orders > 100 THEN 'High Value Customer'
        ELSE 'Regular Customer'
    END AS customer_status
FROM 
    address_hierarchy ah
LEFT JOIN 
    aggregate_sales ai ON ah.ca_address_id = ai.web_site_id
LEFT JOIN 
    customer_info ci ON ah.ca_address_id = ci.c_customer_id AND ci.rn = 1
LEFT JOIN 
    returns_summary rs ON rs.sr_returned_date_sk = ah.ca_address_sk
WHERE 
    ah.level < 3 
ORDER BY 
    ah.ca_city, ci.c_customer_id;