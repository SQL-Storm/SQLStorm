
WITH RankedReturns AS (
    SELECT 
        sr_return_quantity,
        sr_item_sk,
        sr_customer_sk,
        RANK() OVER (PARTITION BY sr_item_sk ORDER BY sr_return_quantity DESC) AS rnk
    FROM 
        store_returns
),
HighValueReturns AS (
    SELECT 
        rr.sr_item_sk,
        SUM(rr.sr_return_amt_inc_tax) AS total_return_amount
    FROM 
        RankedReturns rr
    WHERE 
        rr.rnk <= 3
    GROUP BY 
        rr.sr_item_sk
),
CustomerDemographics AS (
    SELECT 
        cd.cd_demo_sk,
        cd.cd_gender,
        CASE 
            WHEN cd.cd_marital_status = 'M' THEN 'Married'
            WHEN cd.cd_marital_status = 'S' THEN 'Single'
            ELSE 'Unknown'
        END AS marital_status,
        COUNT(DISTINCT c.c_customer_sk) AS customer_count
    FROM 
        customer_demographics cd
    LEFT JOIN 
        customer c ON cd.cd_demo_sk = c.c_current_cdemo_sk
    GROUP BY 
        cd.cd_demo_sk, cd.cd_gender, cd.cd_marital_status
)
SELECT 
    ca.ca_city,
    SUM(ws.ws_ext_sales_price) AS total_sales,
    COALESCE(MAX(hv.total_return_amount), 0) AS max_return_amount,
    cd.customer_count,
    CASE 
        WHEN SUM(ws.ws_ext_sales_price) > 100000 THEN 'High Value'
        WHEN SUM(ws.ws_ext_sales_price) > 50000 THEN 'Medium Value'
        ELSE 'Low Value'
    END AS sales_category
FROM 
    web_sales ws
JOIN 
    customer_address ca ON ws.ws_bill_addr_sk = ca.ca_address_sk
LEFT JOIN 
    HighValueReturns hv ON ws.ws_item_sk = hv.sr_item_sk
LEFT JOIN 
    CustomerDemographics cd ON ws.ws_bill_cdemo_sk = cd.cd_demo_sk
WHERE 
    ca.ca_state IS NOT NULL
    AND ws.ws_sales_price IS NOT NULL
    AND (cd.customer_count > 10 OR cd.customer_count IS NULL)
GROUP BY 
    ca.ca_city, cd.customer_count
HAVING 
    SUM(ws.ws_ext_sales_price) > 0
ORDER BY 
    total_sales DESC, sales_category ASC
FETCH FIRST 50 ROWS ONLY;
