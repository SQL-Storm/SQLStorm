WITH CustomerSales AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        SUM(ss.ss_ext_sales_price) AS total_sales,
        COUNT(DISTINCT ss.ss_ticket_number) AS total_transactions
    FROM 
        customer c
    LEFT JOIN 
        store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    GROUP BY 
        c.c_customer_sk, c.c_first_name, c.c_last_name
),
HighSpenders AS (
    SELECT 
        cs.c_customer_sk,
        cs.c_first_name,
        cs.c_last_name,
        cs.total_sales,
        cs.total_transactions,
        DENSE_RANK() OVER (ORDER BY cs.total_sales DESC) AS spend_rank
    FROM 
        CustomerSales cs
    WHERE 
        cs.total_sales IS NOT NULL
),
RecentYearSales AS (
    SELECT 
        sr.s_store_sk,
        SUM(sr.ss_ext_sales_price) AS total_return_amount,
        COUNT(sr.ss_ticket_number) AS return_count
    FROM 
        store_sales sr
    WHERE 
        sr.ss_sold_date_sk IN (
            SELECT 
                d.d_date_sk 
            FROM 
                date_dim d
            WHERE 
                d.d_year = EXTRACT(YEAR FROM cast('2002-10-01' as date)) - 1
        )
    GROUP BY 
        sr.s_store_sk
)
SELECT 
    hs.c_first_name,
    hs.c_last_name,
    hs.total_sales,
    hy.total_return_amount,
    hy.return_count,
    CASE 
        WHEN hs.total_sales > 1000 THEN 'High Value'
        WHEN hs.total_sales > 500 THEN 'Medium Value'
        ELSE 'Low Value'
    END AS customer_value_category
FROM 
    HighSpenders hs
LEFT JOIN 
    RecentYearSales hy ON hs.c_customer_sk = hy.s_store_sk
WHERE 
    hs.spend_rank <= 10
    OR hy.return_count > 0
ORDER BY 
    hs.total_sales DESC;