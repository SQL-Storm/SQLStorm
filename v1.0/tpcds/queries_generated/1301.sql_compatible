
WITH CustomerSales AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        SUM(ws.ws_ext_sales_price) AS total_sales,
        COUNT(DISTINCT ws.ws_order_number) AS order_count
    FROM 
        customer c
    LEFT JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY 
        c.c_customer_sk, c.c_first_name, c.c_last_name
),
RankedSales AS (
    SELECT 
        cs.c_customer_sk,
        cs.c_first_name,
        cs.c_last_name,
        cs.total_sales,
        cs.order_count,
        RANK() OVER (ORDER BY cs.total_sales DESC) AS sales_rank
    FROM 
        CustomerSales cs
),
HighValueCustomers AS (
    SELECT 
        r.c_customer_sk,
        r.c_first_name,
        r.c_last_name,
        r.total_sales,
        r.order_count
    FROM 
        RankedSales r
    WHERE 
        r.sales_rank <= 10
),
CustomerDemographics AS (
    SELECT 
        cd.cd_demo_sk,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_income_band_sk,
        cd.cd_purchase_estimate
    FROM 
        customer_demographics cd
),
IncomeRanges AS (
    SELECT 
        ib.ib_income_band_sk,
        ib.ib_lower_bound,
        ib.ib_upper_bound
    FROM 
        income_band ib
)
SELECT 
    h.c_first_name,
    h.c_last_name,
    cd.cd_gender,
    cd.cd_marital_status,
    ir.ib_lower_bound,
    ir.ib_upper_bound,
    h.total_sales,
    h.order_count,
    CASE 
        WHEN h.total_sales > 10000 THEN 'High Value'
        WHEN h.total_sales BETWEEN 5000 AND 10000 THEN 'Medium Value'
        ELSE 'Low Value'
    END AS customer_value_segment
FROM 
    HighValueCustomers h
LEFT JOIN 
    customer c ON h.c_customer_sk = c.c_customer_sk
LEFT JOIN 
    CustomerDemographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
LEFT JOIN 
    IncomeRanges ir ON cd.cd_income_band_sk = ir.ib_income_band_sk
WHERE 
    cd.cd_purchase_estimate IS NOT NULL
ORDER BY 
    h.total_sales DESC
FETCH FIRST 20 ROWS ONLY;
