
WITH RankedSales AS (
    SELECT 
        ws_bill_customer_sk,
        ws_item_sk,
        ws_order_number,
        ws_quantity,
        ws_net_profit,
        ROW_NUMBER() OVER (PARTITION BY ws_bill_customer_sk ORDER BY ws_net_profit DESC) AS rn
    FROM 
        web_sales
    WHERE 
        ws_sold_date_sk BETWEEN 1 AND 1000
),
CustomerProfits AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        COALESCE(SUM(ws.ws_net_profit), 0) AS total_profit,
        COUNT(ws.ws_order_number) AS order_count,
        AVG(ws.ws_quantity) AS avg_quantity
    FROM 
        customer c
    LEFT JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY 
        c.c_customer_sk, c.c_first_name, c.c_last_name
),
TopSellingItems AS (
    SELECT 
        i.i_item_id,
        i.i_product_name,
        SUM(COALESCE(ws.ws_quantity, 0)) AS total_quantity_sold
    FROM 
        item i
    LEFT JOIN 
        web_sales ws ON i.i_item_sk = ws.ws_item_sk
    GROUP BY 
        i.i_item_id, i.i_product_name
    ORDER BY 
        total_quantity_sold DESC
    LIMIT 5
)
SELECT 
    cp.c_first_name,
    cp.c_last_name,
    COALESCE(rp.item_details, 'No Sales') AS top_item_details,
    cp.total_profit,
    cp.order_count,
    cp.avg_quantity,
    RANK() OVER (ORDER BY cp.total_profit DESC) AS profit_rank
FROM 
    CustomerProfits cp
LEFT JOIN (
    SELECT 
        r.ws_bill_customer_sk,
        STRING_AGG(CONCAT(ti.i_product_name, ' - ', CAST(ti.total_quantity_sold AS VARCHAR)), ', ') AS item_details
    FROM 
        RankedSales r
    JOIN 
        TopSellingItems ti ON r.ws_item_sk = ti.i_item_id
    GROUP BY 
        r.ws_bill_customer_sk
) rp ON cp.c_customer_sk = rp.ws_bill_customer_sk
WHERE 
    cp.total_profit > 0
ORDER BY 
    cp.total_profit DESC;
