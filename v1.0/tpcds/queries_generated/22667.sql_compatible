
WITH RankedReturns AS (
    SELECT 
        sr_returned_date_sk,
        sr_return_time_sk,
        sr_item_sk,
        sr_return_quantity,
        sr_net_loss,
        ROW_NUMBER() OVER (PARTITION BY sr_item_sk ORDER BY sr_net_loss DESC) AS rn
    FROM store_returns
    WHERE sr_return_date_sk IS NOT NULL
), 
SalesByCustomer AS (
    SELECT 
        ws_bill_customer_sk,
        COUNT(DISTINCT ws_order_number) AS total_orders,
        SUM(ws_net_profit) AS total_profit
    FROM web_sales
    GROUP BY ws_bill_customer_sk
), 
TopCustomers AS (
    SELECT 
        sbc.ws_bill_customer_sk,
        RANK() OVER (ORDER BY total_profit DESC) AS rank
    FROM SalesByCustomer sbc
    WHERE total_orders > 5
), 
CustomerAverages AS (
    SELECT 
        cd_gender,
        AVG(total_profit) AS avg_profit
    FROM SalesByCustomer sbc
    JOIN customer c ON sbc.ws_bill_customer_sk = c.c_customer_sk
    JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    GROUP BY cd_gender
) 
SELECT 
    ca.ca_state,
    COUNT(DISTINCT c.c_customer_sk) AS num_customers,
    SUM(CASE WHEN cd.cd_gender = 'F' THEN ca.ca_gmt_offset ELSE NULL END) AS female_offset_sum,
    MAX(sbc.total_orders) AS max_orders,
    AVG(sbc.total_profit) AS avg_sales_profit,
    SUM(CASE 
        WHEN EXISTS (
            SELECT 1 FROM RankedReturns rr WHERE rr.sr_item_sk = ss.ws_item_sk 
            AND rr.rn = 1 
            AND rr.sr_net_loss > 0
        ) THEN 1 
        ELSE 0 
    END) AS item_with_positive_return_count
FROM customer_address ca
LEFT JOIN customer c ON ca.ca_address_sk = c.c_current_addr_sk
LEFT JOIN store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
LEFT JOIN SalesByCustomer sbc ON c.c_customer_sk = sbc.ws_bill_customer_sk
LEFT JOIN CustomerAverages ca_avg ON 1=1
LEFT JOIN TopCustomers tc ON c.c_customer_sk = tc.ws_bill_customer_sk
WHERE ca.ca_state IS NOT NULL OR c.c_email_address IS NULL
GROUP BY ca.ca_state
HAVING COUNT(DISTINCT c.c_customer_sk) > 10
ORDER BY ca.ca_state DESC, max_orders DESC;
