
WITH RankedSales AS (
    SELECT 
        s_store_sk, 
        ss_item_sk, 
        ss_sold_date_sk, 
        ss_sales_price,
        ss_quantity,
        RANK() OVER (PARTITION BY ss_item_sk ORDER BY ss_sales_price DESC) AS sales_rank
    FROM 
        store_sales
    WHERE 
        ss_sold_date_sk IN (SELECT d_date_sk FROM date_dim WHERE d_year = 2023)
),
TotalSales AS (
    SELECT 
        r.s_store_sk, 
        r.ss_item_sk,
        SUM(r.ss_quantity) AS total_quantity_sold,
        SUM(r.ss_sales_price) AS total_sales_value
    FROM 
        RankedSales r
    GROUP BY 
        r.s_store_sk, r.ss_item_sk
),
HighValueItems AS (
    SELECT 
        t.s_store_sk,
        t.ss_item_sk
    FROM 
        TotalSales t
    WHERE 
        t.total_sales_value > (SELECT AVG(total_sales_value) FROM TotalSales)
),
CustomerReturns AS (
    SELECT 
        sr_item_sk,
        SUM(sr_return_quantity) AS total_returned_quantity
    FROM 
        store_returns
    GROUP BY 
        sr_item_sk
)
SELECT 
    ca.ca_city,
    COALESCE(hv.ss_item_sk, 'No High Value Items') AS item,
    COALESCE(SUM(s.total_quantity_sold), 0) AS total_quantity,
    COALESCE(r.total_returned_quantity, 0) AS total_returns,
    SUM(s.total_sales_value) AS total_sales
FROM 
    customer_address ca
LEFT JOIN 
    HighValueItems hv ON hv.s_store_sk = ca.ca_address_sk
LEFT JOIN 
    TotalSales s ON s.s_store_sk = hv.s_store_sk AND s.ss_item_sk = hv.ss_item_sk
LEFT JOIN 
    CustomerReturns r ON r.sr_item_sk = s.ss_item_sk
GROUP BY 
    ca.ca_city, hv.ss_item_sk, r.total_returned_quantity
HAVING 
    COUNT(DISTINCT s.ss_item_sk) > 0 OR COUNT(DISTINCT r.sr_item_sk) > 0
ORDER BY 
    ca.ca_city, total_sales DESC;
