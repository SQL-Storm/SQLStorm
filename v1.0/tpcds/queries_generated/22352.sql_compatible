
WITH RankedSales AS (
    SELECT 
        w.ws_item_sk,
        w.ws_order_number,
        w.ws_net_profit,
        RANK() OVER (PARTITION BY w.ws_item_sk ORDER BY w.ws_net_profit DESC) AS profit_rank,
        d.d_year,
        w.ws_quantity,
        COALESCE(NULLIF(w.ws_ext_tax, 0), w.ws_net_paid_inc_tax) AS effective_tax
    FROM web_sales w
    JOIN date_dim d ON w.ws_sold_date_sk = d.d_date_sk
),
HighProfitItems AS (
    SELECT 
        r.ws_item_sk,
        r.ws_order_number,
        r.ws_net_profit,
        r.d_year,
        r.ws_quantity,
        r.effective_tax
    FROM RankedSales r
    WHERE r.profit_rank = 1
),
CustomerReturns AS (
    SELECT 
        sr_refunded_customer_sk,
        SUM(sr_return_amt) AS total_return_amount,
        COUNT(DISTINCT sr_ticket_number) AS return_count
    FROM store_returns
    GROUP BY sr_refunded_customer_sk
)
SELECT 
    i.i_item_id,
    COALESCE(SUM(hp.ws_quantity), 0) AS total_sold,
    c.c_first_name,
    c.c_last_name,
    SUM(CASE 
        WHEN hp.effective_tax IS NULL THEN 0 
        ELSE hp.effective_tax END
    ) AS total_effective_tax,
    COALESCE(cr.total_return_amount, 0) AS total_returns,
    COALESCE(cr.return_count, 0) AS return_count,
    CASE 
        WHEN SUM(hp.ws_net_profit) IS NULL THEN 'No Sales'
        ELSE 'Sales Exist' 
    END AS sales_status
FROM item i
LEFT JOIN HighProfitItems hp ON i.i_item_sk = hp.ws_item_sk
LEFT JOIN customer c ON hp.ws_order_number = c.c_customer_id
LEFT JOIN CustomerReturns cr ON c.c_customer_sk = cr.sr_refunded_customer_sk
GROUP BY 
    i.i_item_id,
    c.c_first_name,
    c.c_last_name,
    cr.total_return_amount,
    cr.return_count
HAVING 
    SUM(hp.ws_quantity) > 10 OR COALESCE(cr.return_count, 0) > 5
ORDER BY 
    total_sold DESC, 
    total_returns ASC
LIMIT 100 OFFSET 25;
