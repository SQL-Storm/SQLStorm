
WITH RECURSIVE Address_CTE AS (
    SELECT ca_address_sk, 
           ca_street_number, 
           ca_street_name, 
           ca_city, 
           ca_state, 
           ca_zip, 
           ROW_NUMBER() OVER (PARTITION BY ca_state ORDER BY ca_zip) AS rn
    FROM customer_address
    WHERE ca_city IS NOT NULL
),
Customer_Summary AS (
    SELECT c.c_customer_sk,
           c.c_first_name,
           c.c_last_name,
           cd.cd_gender,
           cd.cd_marital_status,
           COUNT(DISTINCT ws.ws_order_number) AS total_orders,
           SUM(ws.ws_ext_sales_price) AS total_spent,
           CASE 
               WHEN SUM(ws.ws_ext_sales_price) IS NULL THEN 'No purchases'
               WHEN SUM(ws.ws_ext_sales_price) > 1000 THEN 'High Value'
               WHEN SUM(ws.ws_ext_sales_price) BETWEEN 500 AND 1000 THEN 'Medium Value'
               ELSE 'Low Value'
           END AS customer_value_segment
    FROM customer c
    LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    WHERE cd.cd_gender IS NOT NULL AND cd.cd_marital_status IN ('M', 'S')
    GROUP BY c.c_customer_sk, c.c_first_name, c.c_last_name, cd.cd_gender, cd.cd_marital_status
),
Sales_Trend AS (
    SELECT d.d_year, 
           SUM(ws.ws_ext_sales_price) AS yearly_sales,
           COUNT(ws.ws_order_number) AS total_orders
    FROM date_dim d
    JOIN web_sales ws ON d.d_date_sk = ws.ws_sold_date_sk
    GROUP BY d.d_year
    ORDER BY d.d_year
),
Top_Customers AS (
    SELECT c.c_customer_sk,
           c.c_first_name,
           c.c_last_name,
           RANK() OVER (ORDER BY cs.total_spent DESC) AS customer_rank
    FROM Customer_Summary cs
)
SELECT CONCAT('Customer: ', tc.c_first_name, ' ', tc.c_last_name) AS customer_name,
       tc.customer_rank,
       cs.total_orders,
       cs.customer_value_segment,
       at.ca_city,
       at.ca_state,
       CONCAT(at.ca_street_number, ' ', at.ca_street_name, ', ', at.ca_zip) AS full_address,
       st.yearly_sales,
       st.total_orders AS yearly_orders
FROM Top_Customers tc
JOIN Customer_Summary cs ON tc.c_customer_sk = cs.c_customer_sk
LEFT JOIN Address_CTE at ON cs.c_customer_sk = at.ca_address_sk AND at.rn = 1
LEFT JOIN Sales_Trend st ON st.d_year = EXTRACT(YEAR FROM DATE '2002-10-01') - 1
WHERE tc.customer_rank <= 10 
AND (at.ca_state IS NOT NULL OR at.ca_city IS NOT NULL)
ORDER BY tc.customer_rank;
