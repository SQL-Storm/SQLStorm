
WITH ranked_sales AS (
    SELECT
        ws.bill_customer_sk,
        SUM(ws.net_profit) AS total_net_profit,
        ROW_NUMBER() OVER (PARTITION BY ws.bill_customer_sk ORDER BY SUM(ws.net_profit) DESC) AS profit_rank
    FROM
        web_sales ws
    JOIN
        customer c ON ws.bill_customer_sk = c.c_customer_sk
    LEFT JOIN
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN
        customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
    WHERE
        c.c_birth_year < 1985
    GROUP BY
        ws.bill_customer_sk
),
customer_info AS (
    SELECT
        c.c_customer_id,
        ca.ca_city,
        cd.cd_gender,
        CASE
            WHEN cd.cd_marital_status = 'S' THEN 'Single'
            WHEN cd.cd_marital_status = 'M' THEN 'Married'
            ELSE 'Unknown'
        END AS marital_status,
        CASE
            WHEN COUNT(DISTINCT cd.cd_demo_sk) > 0 THEN 'Has Demographics'
            ELSE 'No Demographics'
        END AS demographics_information
    FROM
        customer c
    LEFT JOIN
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN
        customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
    GROUP BY
        c.c_customer_id, ca.ca_city, cd.cd_gender, cd.cd_marital_status
),
top_customers AS (
    SELECT
        rc.bill_customer_sk,
        rc.total_net_profit,
        ci.c_customer_id,
        ci.marital_status,
        ci.ca_city,
        ROW_NUMBER() OVER (ORDER BY rc.total_net_profit DESC) AS rank
    FROM
        ranked_sales rc
    JOIN
        customer_info ci ON rc.bill_customer_sk = ci.c_customer_id
    WHERE
        rc.profit_rank = 1
)

SELECT
    tc.c_customer_id,
    tc.total_net_profit,
    tc.marital_status,
    tc.ca_city,
    (SELECT COUNT(*)
     FROM store_returns sr
     WHERE sr.returning_customer_sk = tc.bill_customer_sk
       AND sr.return_quantity > 0) AS total_returns,
    (SELECT COALESCE(SUM(cr.return_amount), 0)
     FROM catalog_returns cr
     WHERE cr.returning_customer_sk = tc.bill_customer_sk) AS total_catalog_returns,
    CASE
        WHEN tc.total_net_profit > 1000 THEN 'High Value'
        ELSE 'Low Value'
    END AS customer_value
FROM
    top_customers tc
WHERE
    tc.rank <= 10
ORDER BY
    tc.total_net_profit DESC
OFFSET 0 ROWS FETCH NEXT 5 ROWS ONLY;
