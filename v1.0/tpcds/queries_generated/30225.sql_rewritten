WITH RECURSIVE SalesPeriods AS (
    SELECT 
        d.d_date_sk,
        d.d_year,
        SUM(ss_ext_sales_price) AS total_sales
    FROM 
        date_dim d
    LEFT JOIN 
        store_sales ss ON d.d_date_sk = ss.ss_sold_date_sk
    WHERE 
        d.d_year BETWEEN 1998 AND 2001
    GROUP BY 
        d.d_date_sk, d.d_year
    
    UNION ALL
    
    SELECT 
        d.d_date_sk,
        d.d_year,
        SUM(cs_ext_sales_price) AS total_sales
    FROM 
        date_dim d
    LEFT JOIN 
        catalog_sales cs ON d.d_date_sk = cs.cs_sold_date_sk
    WHERE 
        d.d_year BETWEEN 1998 AND 2001
    GROUP BY 
        d.d_date_sk, d.d_year
),
SalesWithRank AS (
    SELECT 
        sp.d_year,
        SUM(sp.total_sales) AS yearly_sales,
        RANK() OVER (PARTITION BY sp.d_year ORDER BY SUM(sp.total_sales) DESC) AS sales_rank
    FROM 
        SalesPeriods sp
    GROUP BY 
        sp.d_year
)
SELECT 
    n.d_year,
    n.yearly_sales,
    COALESCE(n.sales_rank, 0) AS sales_rank,
    (SELECT 
        COUNT(DISTINCT ws_item_sk) 
     FROM 
        web_sales 
     WHERE 
        EXTRACT(YEAR FROM cast('2002-10-01' as date)) - EXTRACT(YEAR FROM ws_sold_date_sk) <= 5
     ) AS total_items_sold_recently
FROM 
    (SELECT 
        d_year, yearly_sales, sales_rank 
     FROM 
        SalesWithRank 
     WHERE 
        yearly_sales > (SELECT AVG(yearly_sales) FROM SalesWithRank)
    ) n
LEFT JOIN 
    inventory i ON i.inv_date_sk = (SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = n.d_year)
WHERE 
    n.sales_rank IS NULL
ORDER BY 
    n.d_year DESC;