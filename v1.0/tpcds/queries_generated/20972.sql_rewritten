WITH RankedReturns AS (
    SELECT 
        sr.store_sk, 
        sr.returned_date_sk,
        SUM(sr.return_quantity) AS total_return_quantity,
        SUM(sr.return_amt) AS total_return_amt,
        ROW_NUMBER() OVER(PARTITION BY sr.store_sk ORDER BY SUM(sr.return_quantity) DESC) AS rn
    FROM 
        store_returns sr
    GROUP BY 
        sr.store_sk, sr.returned_date_sk
),
FilteredStores AS (
    SELECT 
        s.store_sk,
        s.store_name,
        COALESCE(s.number_employees, 0) AS adjusted_employees
    FROM 
        store s
    WHERE 
        s.closed_date_sk IS NULL
        AND (s.number_employees IS NULL OR s.number_employees > 10)
),
MaxReturnStore AS (
    SELECT 
        store_sk, 
        MAX(total_return_amt) AS max_return_amt
    FROM 
        RankedReturns
    WHERE 
        rn <= 5
    GROUP BY 
        store_sk
)
SELECT 
    s.store_name,
    r.total_return_quantity,
    r.total_return_amt,
    CASE 
        WHEN r.total_return_amt IS NULL THEN 'No returns'
        ELSE CONCAT('Returns: $', CAST(r.total_return_amt AS VARCHAR))
    END AS return_description,
    CASE 
        WHEN f.adjusted_employees > 0 THEN 'Active'
        ELSE 'Inactive'
    END AS store_status
FROM 
    FilteredStores f
LEFT JOIN 
    RankedReturns r ON f.store_sk = r.store_sk
LEFT JOIN 
    MaxReturnStore m ON f.store_sk = m.store_sk
WHERE 
    (r.total_return_quantity IS NOT NULL OR m.max_return_amt IS NULL)
    AND (FLOOR(EXTRACT(DOW FROM cast('2002-10-01' as date))) BETWEEN 1 AND 5)
ORDER BY 
    f.adjusted_employees DESC, r.total_return_amt DESC;