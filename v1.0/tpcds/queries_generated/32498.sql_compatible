
WITH RECURSIVE SalesCTE AS (
    SELECT 
        ws_sold_date_sk,
        ws_item_sk,
        SUM(ws_quantity) AS total_quantity,
        SUM(ws_net_paid) AS total_revenue
    FROM 
        web_sales
    GROUP BY 
        ws_sold_date_sk, ws_item_sk
), DateAggregates AS (
    SELECT 
        d.d_date,
        SUM(COALESCE(ss.ext_sales_price, 0)) AS total_sales,
        COUNT(DISTINCT ws_item_sk) AS unique_items_sold
    FROM 
        date_dim d
    LEFT JOIN 
        store_sales ss ON d.d_date_sk = ss.ss_sold_date_sk 
    GROUP BY 
        d.d_date
), HighValueCustomers AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_credit_rating,
        SUM(ws.ws_net_paid) AS total_spent
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY 
        c.c_customer_sk, c.c_first_name, c.c_last_name, cd.cd_gender, cd.cd_credit_rating
    HAVING 
        SUM(ws.ws_net_paid) > (SELECT AVG(ws_net_paid) FROM web_sales) 
), RankedSales AS (
    SELECT 
        ws_item_sk,
        ROW_NUMBER() OVER (PARTITION BY ws_item_sk ORDER BY total_quantity DESC) AS rank
    FROM 
        SalesCTE
)
SELECT 
    da.d_date,
    da.total_sales,
    da.unique_items_sold,
    hvc.c_first_name,
    hvc.c_last_name,
    hvc.cd_gender,
    hvc.total_spent,
    r.ws_item_sk
FROM 
    DateAggregates da
LEFT JOIN 
    HighValueCustomers hvc ON da.total_sales > 5000
JOIN 
    RankedSales r ON r.rank = 1
WHERE 
    da.unique_items_sold > 10
ORDER BY 
    da.total_sales DESC, hvc.total_spent DESC;
