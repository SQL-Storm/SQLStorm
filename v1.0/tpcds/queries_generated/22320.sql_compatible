
WITH customer_stats AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        COUNT(DISTINCT ws.ws_order_number) AS total_orders,
        SUM(ws.ws_sales_price) AS total_spent,
        DENSE_RANK() OVER (PARTITION BY cd.cd_gender ORDER BY SUM(ws.ws_sales_price) DESC) AS spending_rank
    FROM 
        customer c
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY 
        c.c_customer_sk, c.c_first_name, c.c_last_name, cd.cd_gender, cd.cd_marital_status
),
top_customers AS (
    SELECT 
        cs.c_customer_sk,
        cs.c_first_name,
        cs.c_last_name,
        cs.total_orders,
        cs.total_spent,
        ROW_NUMBER() OVER (ORDER BY cs.total_spent DESC) AS row_num
    FROM 
        customer_stats cs
    WHERE 
        cs.spending_rank <= 3
),
warehouse_info AS (
    SELECT 
        w.w_warehouse_sk,
        w.w_warehouse_name,
        COUNT(DISTINCT ss.ss_ticket_number) AS total_sales,
        SUM(ss.ss_net_paid) AS total_revenue
    FROM 
        warehouse w
    LEFT JOIN 
        store_sales ss ON ss.ss_store_sk IN (
            SELECT s.s_store_sk 
            FROM store s 
            WHERE s.s_state = 'CA'
        )
    GROUP BY 
        w.w_warehouse_sk, w.w_warehouse_name
)
SELECT 
    tc.c_first_name,
    tc.c_last_name,
    tc.total_orders,
    tc.total_spent,
    wi.w_warehouse_name,
    wi.total_sales,
    wi.total_revenue
FROM 
    top_customers tc
FULL OUTER JOIN 
    warehouse_info wi ON wi.total_revenue > (SELECT AVG(total_revenue) FROM warehouse_info) OR wi.total_sales IS NULL
WHERE 
    (tc.total_spent IS NOT NULL AND tc.total_orders > 5 AND tc.total_spent < 1000) 
    OR wi.total_sales IS NULL
ORDER BY 
    tc.total_spent DESC, 
    wi.total_revenue DESC
LIMIT 50;
