
WITH RECURSIVE SalesHierarchy AS (
    SELECT 
        c.c_customer_sk,
        c.c_customer_id,
        cd.cd_gender,
        cd.cd_marital_status,
        SUM(ss.ss_net_profit) AS total_profit,
        DENSE_RANK() OVER (PARTITION BY cd.cd_gender ORDER BY SUM(ss.ss_net_profit) DESC) AS profit_rank
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN 
        store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    GROUP BY 
        c.c_customer_sk, c.c_customer_id, cd.cd_gender, cd.cd_marital_status
    HAVING 
        SUM(ss.ss_net_profit) > 1000
),
TopProfitCustomers AS (
    SELECT 
        ch.c_customer_id,
        ch.cd_gender,
        ch.total_profit,
        ch.profit_rank
    FROM 
        SalesHierarchy ch
    WHERE 
        ch.profit_rank <= 10
),
HighVolumeReturns AS (
    SELECT 
        cr.returning_customer_sk,
        SUM(cr.cr_return_quantity) AS total_returns
    FROM 
        catalog_returns cr
    GROUP BY 
        cr.returning_customer_sk
    HAVING 
        SUM(cr.cr_return_quantity) > 5
)
SELECT 
    tpc.c_customer_id,
    tpc.cd_gender,
    tpc.total_profit,
    COALESCE(hv.total_returns, 0) AS total_returns,
    CASE 
        WHEN hv.total_returns IS NOT NULL THEN 'High Return' 
        ELSE 'No Returns'
    END AS return_status
FROM 
    TopProfitCustomers tpc
LEFT JOIN 
    HighVolumeReturns hv ON tpc.c_customer_id = hv.returning_customer_sk
ORDER BY 
    tpc.total_profit DESC;
