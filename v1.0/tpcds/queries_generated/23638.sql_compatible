
WITH RECURSIVE address_hierarchy AS (
    SELECT ca_address_sk, ca_street_name, ca_city, ca_state, ca_country, 1 AS level
    FROM customer_address
    WHERE ca_state IS NOT NULL
    UNION ALL
    SELECT a.ca_address_sk, a.ca_street_name, a.ca_city, a.ca_state, a.ca_country, ah.level + 1
    FROM customer_address a
    JOIN address_hierarchy ah ON a.ca_address_sk = ah.ca_address_sk
    WHERE ah.level < 5
),
demographics_summary AS (
    SELECT
        cd_gender,
        COUNT(*) AS total_customers,
        AVG(cd_dep_count) AS avg_dependencies,
        SUM(cd_purchase_estimate) AS total_purchase_estimate
    FROM customer_demographics
    GROUP BY cd_gender
),
sales_summary AS (
    SELECT
        ws.web_site_id,
        SUM(ws.net_paid) AS total_sales,
        COUNT(DISTINCT ws.order_number) AS total_orders,
        ROW_NUMBER() OVER (PARTITION BY ws.web_site_id ORDER BY SUM(ws.net_paid) DESC) AS rank
    FROM web_sales ws
    LEFT JOIN customer c ON ws.bill_customer_sk = c.c_customer_sk
    WHERE c.c_birth_country IS NULL OR c.c_birth_country = 'USA'
    GROUP BY ws.web_site_id
),
filtered_inventory AS (
    SELECT
        i.i_item_sk,
        i.i_item_desc,
        COALESCE(SUM(inv.inv_quantity_on_hand), 0) AS total_inventory
    FROM item i
    LEFT JOIN inventory inv ON i.i_item_sk = inv.inv_item_sk
    GROUP BY i.i_item_sk, i.i_item_desc
    HAVING COALESCE(SUM(inv.inv_quantity_on_hand), 0) < 100
)
SELECT 
    dh.cd_gender,
    dh.total_customers,
    dh.avg_dependencies,
    dh.total_purchase_estimate,
    ss.web_site_id,
    ss.total_sales,
    ss.total_orders,
    fi.i_item_sk,
    fi.i_item_desc,
    fi.total_inventory
FROM demographics_summary dh
JOIN sales_summary ss ON TRUE
JOIN filtered_inventory fi ON ss.total_sales > 10000
WHERE (fi.total_inventory IS NOT NULL OR fi.total_inventory < 50)
    AND dh.cd_gender IS NOT NULL
ORDER BY dh.total_purchase_estimate DESC, ss.total_sales DESC
FETCH FIRST 100 ROWS ONLY;
