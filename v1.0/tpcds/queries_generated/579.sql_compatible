
WITH SalesData AS (
    SELECT
        w.warehouse_name,
        SUM(ws.ws_quantity) AS total_quantity,
        SUM(ws.ws_ext_sales_price) AS total_sales,
        COUNT(DISTINCT ws.ws_order_number) AS total_orders,
        AVG(ws.ws_net_profit) AS average_profit
    FROM
        web_sales ws
    JOIN
        warehouse w ON ws.ws_warehouse_sk = w.w_warehouse_sk
    GROUP BY
        w.warehouse_name
),
CustomerMetrics AS (
    SELECT
        cd.cd_gender,
        COUNT(DISTINCT c.c_customer_sk) AS customer_count,
        AVG(cd.cd_purchase_estimate) AS avg_purchase_estimate,
        SUM(CASE WHEN cd.cd_marital_status = 'M' THEN 1 ELSE 0 END) AS married_customers
    FROM
        customer c
    JOIN
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    GROUP BY
        cd.cd_gender
),
ReturnStats AS (
    SELECT
        cr_reason_sk,
        COUNT(*) AS total_returns,
        SUM(cr_return_amount) AS total_return_amount
    FROM
        catalog_returns cr
    GROUP BY
        cr_reason_sk
)
SELECT 
    sd.warehouse_name,
    cm.cd_gender,
    cm.customer_count,
    cm.avg_purchase_estimate,
    cm.married_customers,
    rs.total_returns,
    rs.total_return_amount
FROM 
    SalesData sd
FULL OUTER JOIN 
    CustomerMetrics cm ON sd.warehouse_name IS NOT NULL
LEFT JOIN 
    ReturnStats rs ON rs.cr_reason_sk IN (SELECT r.r_reason_sk FROM reason r)
WHERE 
    (cm.customer_count > 100 OR sd.total_quantity > 500)
    AND (cm.avg_purchase_estimate IS NOT NULL AND rs.total_return_amount IS NOT NULL)
ORDER BY 
    sd.total_sales DESC, cm.customer_count DESC;
