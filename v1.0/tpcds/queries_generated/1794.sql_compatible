
WITH RankedSales AS (
    SELECT
        ws_item_sk,
        SUM(ws_quantity) AS total_quantity,
        SUM(ws_net_paid) AS total_net_paid,
        ROW_NUMBER() OVER (PARTITION BY ws_item_sk ORDER BY SUM(ws_net_paid) DESC) AS rank
    FROM
        web_sales
    GROUP BY
        ws_item_sk
),
TopSales AS (
    SELECT
        rs.ws_item_sk,
        rs.total_quantity,
        rs.total_net_paid,
        i.i_item_desc,
        i.i_current_price,
        i.i_brand
    FROM
        RankedSales rs
    JOIN
        item i ON rs.ws_item_sk = i.i_item_sk
    WHERE
        rs.rank <= 10
),
CustomerReturns AS (
    SELECT
        sr_customer_sk,
        SUM(sr_return_quantity) AS total_returned,
        SUM(sr_return_amt_inc_tax) AS total_return_amt,
        COUNT(DISTINCT sr_ticket_number) AS return_count
    FROM
        store_returns
    WHERE
        sr_returned_date_sk IN (SELECT d_date_sk FROM date_dim WHERE d_year = 2023)
    GROUP BY
        sr_customer_sk
)
SELECT
    c.c_customer_id,
    c.c_first_name,
    c.c_last_name,
    cs.total_returned,
    cs.total_return_amt,
    ts.total_quantity,
    ts.total_net_paid,
    i.i_brand,
    CASE 
        WHEN cs.total_returned IS NULL THEN 'No Returns'
        ELSE 'Returned'
    END AS return_status
FROM
    customer c
LEFT JOIN 
    CustomerReturns cs ON c.c_customer_sk = cs.sr_customer_sk
LEFT JOIN 
    TopSales ts ON ts.ws_item_sk = (
        SELECT ws_item_sk 
        FROM TopSales 
        WHERE ts.ws_item_sk = TopSales.ws_item_sk 
        ORDER BY total_net_paid DESC 
        LIMIT 1
    )
WHERE
    (c.c_birth_year BETWEEN 1980 AND 2000 OR c.c_preferred_cust_flag = 'Y')
    AND (cs.return_count > 2 OR cs.total_returned IS NULL)
ORDER BY
    ts.total_net_paid DESC NULLS LAST;
