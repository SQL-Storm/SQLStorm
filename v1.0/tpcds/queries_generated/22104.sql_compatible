
WITH RankedSales AS (
    SELECT
        ws.ws_item_sk,
        ws.ws_order_number,
        ws.ws_sales_price,
        RANK() OVER (PARTITION BY ws.ws_item_sk ORDER BY ws.ws_net_profit DESC) AS sales_rank,
        COUNT(*) OVER (PARTITION BY ws.ws_item_sk) AS total_sales_count
    FROM
        web_sales ws
    WHERE
        ws.ws_sales_price > 0
),
ConsolidatedReturns AS (
    SELECT
        cr.cr_item_sk,
        SUM(cr.cr_return_quantity) AS total_return_quantity,
        SUM(cr.cr_return_amount) AS total_return_amount
    FROM
        catalog_returns cr
    GROUP BY
        cr.cr_item_sk
),
CustomerDemographics AS (
    SELECT
        cd.cd_demo_sk,
        cd.cd_gender,
        cd.cd_marital_status,
        hd.hd_income_band_sk,
        hd.hd_buy_potential
    FROM
        customer_demographics cd
    LEFT JOIN
        household_demographics hd ON cd.cd_demo_sk = hd.hd_demo_sk
)
SELECT
    ca.ca_city,
    COUNT(DISTINCT cs.cs_order_number) AS total_catalog_sales,
    COALESCE(SUM(inv.inv_quantity_on_hand), 0) AS total_inventory_on_hand,
    AVG(cs.cs_sales_price) AS avg_catalog_price,
    COALESCE(SUM(cr.total_return_quantity), 0) AS total_returns,
    AVG(CASE WHEN rs.sales_rank = 1 THEN ws.ws_sales_price END) AS highest_sales_price_for_top_item
FROM
    customer_address ca
LEFT JOIN
    catalog_sales cs ON cs.cs_ship_addr_sk = ca.ca_address_sk
LEFT JOIN
    inventory inv ON inv.inv_item_sk = cs.cs_item_sk
LEFT JOIN
    ConsolidatedReturns cr ON cr.cr_item_sk = cs.cs_item_sk
LEFT JOIN
    RankedSales rs ON rs.ws_item_sk = cs.cs_item_sk AND rs.ws_order_number = cs.cs_order_number
LEFT JOIN
    CustomerDemographics cd ON cd.cd_demo_sk = cs.cs_bill_cdemo_sk
WHERE
    ca.ca_city IS NOT NULL
    AND (ca.ca_state = 'CA' OR ca.ca_country = 'USA')
GROUP BY
    ca.ca_city
HAVING
    COUNT(cs.cs_order_number) > (SELECT COUNT(*) * 0.01 FROM web_sales)
ORDER BY
    total_catalog_sales DESC
FETCH FIRST 10 ROWS ONLY;
