
WITH RECURSIVE SalesHierarchy AS (
    SELECT s_store_sk, ss_sold_date_sk, SUM(ss_net_profit) AS total_profit
    FROM store_sales
    GROUP BY s_store_sk, ss_sold_date_sk
    UNION ALL
    SELECT ss.s_store_sk, ss.ss_sold_date_sk, SUM(ss.ss_net_profit) + sh.total_profit
    FROM store_sales ss
    JOIN SalesHierarchy sh ON ss.s_store_sk = sh.s_store_sk AND ss.ss_sold_date_sk = sh.ss_sold_date_sk
    WHERE sh.total_profit IS NOT NULL
),
CustomerIncome AS (
    SELECT c.c_customer_sk, c.c_last_name, c.c_first_name, 
           d.cd_marital_status, d.cd_gender, d.cd_purchase_estimate,
           ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound
    FROM customer c
    LEFT JOIN customer_demographics d ON c.c_current_cdemo_sk = d.cd_demo_sk
    LEFT JOIN household_demographics hd ON c.c_current_cdemo_sk = hd.hd_demo_sk
    LEFT JOIN income_band ib ON hd.hd_income_band_sk = ib.ib_income_band_sk
),
DateProfit AS (
    SELECT d.d_date_sk, SUM(sh.total_profit) AS daily_profit
    FROM date_dim d
    LEFT JOIN SalesHierarchy sh ON d.d_date_sk = sh.ss_sold_date_sk
    GROUP BY d.d_date_sk
),
TopCustomers AS (
    SELECT c.c_customer_sk, c.c_last_name, c.c_first_name, 
           SUM(ws.ws_net_profit) AS total_web_profit
    FROM customer c
    JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY c.c_customer_sk, c.c_last_name, c.c_first_name
    ORDER BY total_web_profit DESC
    LIMIT 10
)
SELECT 
    ci.c_last_name,
    ci.c_first_name,
    ci.cd_marital_status,
    ci.cd_gender,
    CONCAT(ib.ib_lower_bound, '-', ib.ib_upper_bound) AS Income_Band,
    dt.d_date_sk,
    dt.daily_profit,
    COALESCE(tc.total_web_profit, 0) AS total_web_profit
FROM CustomerIncome ci
JOIN DateProfit dt ON dt.daily_profit IS NOT NULL
LEFT JOIN TopCustomers tc ON ci.c_customer_sk = tc.c_customer_sk
WHERE ci.cd_purchase_estimate >= (SELECT AVG(cd_purchase_estimate) FROM customer_demographics)
AND dt.daily_profit > 1000
ORDER BY dt.d_date_sk DESC, ci.c_last_name ASC;
