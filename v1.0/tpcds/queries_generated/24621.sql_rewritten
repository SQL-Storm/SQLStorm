WITH RECURSIVE sales_data AS (
    SELECT 
        c.c_customer_id,
        c.c_first_name,
        c.c_last_name,
        SUM(ws.ws_net_paid) AS total_sales,
        ROW_NUMBER() OVER (PARTITION BY c.c_customer_id ORDER BY SUM(ws.ws_net_paid) DESC) AS sales_rank
    FROM 
        customer c
    JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    WHERE 
        ws.ws_ship_date_sk IS NOT NULL
    GROUP BY 
        c.c_customer_id, c.c_first_name, c.c_last_name
),
high_value_customers AS (
    SELECT 
        customer_id,
        total_sales
    FROM 
        sales_data
    WHERE 
        total_sales > (SELECT AVG(total_sales) FROM sales_data)
)
SELECT 
    c.c_customer_id,
    c.c_first_name,
    c.c_last_name,
    COALESCE(ws.ws_net_paid_inc_tax, 0) AS total_spent,
    CASE 
        WHEN c.c_birth_month = EXTRACT(MONTH FROM cast('2002-10-01' as date)) THEN 'Birthday Month'
        ELSE 'Regular Month'
    END AS customer_status,
    CASE 
        WHEN EXISTS (SELECT 1 FROM store s WHERE s.s_zip = c.c_zip AND s.s_state = c.c_state) THEN 'Local Store Available'
        ELSE 'No Local Store'
    END AS store_availability
FROM 
    customer c
LEFT JOIN 
    web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
LEFT JOIN 
    high_value_customers hvc ON c.c_customer_id = hvc.customer_id
WHERE 
    c.c_current_cdemo_sk IS NOT NULL
    AND c.c_birth_year < (EXTRACT(YEAR FROM cast('2002-10-01' as date)) - 18)
    AND (SUM(ws.ws_net_paid) OVER (PARTITION BY c.c_customer_id) 
         > (SELECT MAX(total_sales) FROM sales_data WHERE sales_rank <= 10)
         OR hvc.total_sales IS NOT NULL)
ORDER BY 
    total_spent DESC, c.c_last_name;