
WITH RECURSIVE TopCustomers AS (
    SELECT c.c_customer_sk, c.c_first_name, c.c_last_name, SUM(ss.ss_net_paid) AS total_spent
    FROM customer c
    JOIN store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    GROUP BY c.c_customer_sk, c.c_first_name, c.c_last_name
    HAVING SUM(ss.ss_net_paid) > 1000
    UNION ALL
    SELECT c.c_customer_sk, c.c_first_name, c.c_last_name, (tc.total_spent + SUM(ss.ss_net_paid)) AS total_spent
    FROM customer c
    JOIN store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    JOIN TopCustomers tc ON c.c_customer_sk = tc.c_customer_sk
    GROUP BY c.c_customer_sk, c.c_first_name, c.c_last_name, tc.total_spent
    HAVING SUM(ss.ss_net_paid) > 500
),
LatestSales AS (
    SELECT ws_bill_customer_sk, SUM(ws_net_paid) AS total_web_sales
    FROM web_sales
    WHERE ws_sold_date_sk >= (SELECT MAX(d_date_sk) - 30 FROM date_dim)
    GROUP BY ws_bill_customer_sk
),
CustomerDemographics AS (
    SELECT cd_demo_sk, cd_gender AS gender, cd_marital_status AS marital_status, COUNT(DISTINCT c.c_customer_sk) AS customer_count
    FROM customer_demographics d
    LEFT JOIN customer c ON c.c_current_cdemo_sk = d.cd_demo_sk
    GROUP BY cd_demo_sk, cd_gender, cd_marital_status
),
CustomerWithWebSales AS (
    SELECT c.c_customer_sk, c.c_first_name, c.c_last_name, COALESCE(ws.total_web_sales, 0) AS total_web_sales
    FROM customer c
    LEFT JOIN LatestSales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
),
FinalReport AS (
    SELECT tc.c_customer_sk, tc.c_first_name, tc.c_last_name,
           tc.total_spent, cw.total_web_sales,
           cd.gender, cd.marital_status
    FROM TopCustomers tc
    JOIN CustomerWithWebSales cw ON tc.c_customer_sk = cw.c_customer_sk
    JOIN CustomerDemographics cd ON cw.c_customer_sk = cd.cd_demo_sk
)
SELECT fr.c_customer_sk, fr.c_first_name, fr.c_last_name,
       fr.total_spent, fr.total_web_sales,
       fr.gender, fr.marital_status,
       CASE WHEN fr.total_web_sales = 0 THEN 'No Web Sales' 
            WHEN fr.total_web_sales > (SELECT AVG(total_web_sales) FROM CustomerWithWebSales) 
                 THEN 'Above Average Web Sales' ELSE 'Below Average Web Sales' END AS web_sales_category
FROM FinalReport fr
WHERE fr.total_spent > 1500
ORDER BY fr.total_spent DESC;
