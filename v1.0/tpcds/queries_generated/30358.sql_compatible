
WITH RECURSIVE price_history AS (
    SELECT 
        i_item_sk,
        i_item_id,
        i_current_price,
        ROW_NUMBER() OVER (PARTITION BY i_item_id ORDER BY i_rec_start_date DESC) AS rn
    FROM 
        item
    WHERE 
        i_rec_end_date IS NULL
),
sales_summary AS (
    SELECT 
        ws_item_sk,
        SUM(ws_quantity) AS total_sales,
        SUM(ws_ext_sales_price) AS total_revenue,
        AVG(ws_sales_price) AS avg_price,
        DENSE_RANK() OVER (ORDER BY SUM(ws_ext_sales_price) DESC) AS sales_rank
    FROM 
        web_sales
    WHERE 
        ws_sold_date_sk BETWEEN (SELECT MIN(d_date_sk) FROM date_dim WHERE d_year = 2023) 
        AND (SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = 2023)
    GROUP BY 
        ws_item_sk
),
address_country AS (
    SELECT 
        DISTINCT ca_country
    FROM 
        customer_address
    WHERE 
        ca_country IS NOT NULL
)
SELECT 
    p.promo_name,
    ph.i_item_id,
    ss.total_sales,
    ss.total_revenue,
    ss.avg_price,
    ac.ca_country
FROM 
    promotion p
JOIN 
    price_history ph ON ph.i_item_sk = p.p_item_sk
JOIN 
    sales_summary ss ON ss.ws_item_sk = ph.i_item_sk
LEFT OUTER JOIN 
    address_country ac ON ac.ca_country IS NOT NULL
WHERE 
    ss.sales_rank <= 10
    AND ph.rn = 1
GROUP BY 
    p.promo_name,
    ph.i_item_id,
    ss.total_sales,
    ss.total_revenue,
    ss.avg_price,
    ac.ca_country
ORDER BY 
    ss.total_revenue DESC, 
    ss.total_sales DESC;
