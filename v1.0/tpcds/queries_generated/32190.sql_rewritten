WITH RECURSIVE item_hierarchy AS (
    SELECT i_item_sk, i_item_id, i_item_desc, i_brand, 1 AS level
    FROM item
    WHERE i_brand = 'Brand_A' 
    
    UNION ALL
    
    SELECT i.item_sk, i.i_item_id, i.i_item_desc, i.i_brand, ih.level + 1
    FROM item_hierarchy ih
    JOIN item i ON i.i_brand = ih.i_item_desc
    WHERE ih.level < 3 
),
sales_summary AS (
    SELECT 
        ws.web_site_sk,
        SUM(ws.ws_quantity) AS total_quantity,
        SUM(ws.ws_net_profit) AS total_profit
    FROM web_sales ws
    JOIN web_site w ON ws.ws_web_site_sk = w.web_site_sk
    WHERE ws.ws_sold_date_sk BETWEEN 2458590 AND 2458597 
    GROUP BY ws.web_site_sk
),
customer_info AS (
    SELECT 
        c.c_customer_sk,
        cd.cd_gender,
        cd.cd_marital_status,
        COUNT(DISTINCT ws.ws_order_number) AS total_orders
    FROM customer c
    LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY c.c_customer_sk, cd.cd_gender, cd.cd_marital_status
),
inventory_evaluation AS (
    SELECT 
        inv.inv_item_sk,
        SUM(inv.inv_quantity_on_hand) AS total_stock,
        COALESCE(SUM(ws.ws_quantity), 0) AS total_sold
    FROM inventory inv
    LEFT JOIN web_sales ws ON inv.inv_item_sk = ws.ws_item_sk
    GROUP BY inv.inv_item_sk
),
returns_summary AS (
    SELECT 
        sr_returns.sr_item_sk,
        COUNT(sr_returns.sr_ticket_number) AS total_returns,
        SUM(sr_returns.sr_return_amt) AS total_return_amount
    FROM store_returns sr_returns
    GROUP BY sr_returns.sr_item_sk
)
SELECT 
    it.i_item_id,
    it.i_item_desc,
    it_h.level,
    cs.total_orders,
    ss.total_quantity,
    ss.total_profit,
    ie.total_stock,
    COALESCE(rs.total_returns, 0) AS total_returns,
    COALESCE(rs.total_return_amount, 0) AS total_return_amount
FROM item_hierarchy it_h
JOIN item it ON it_h.i_item_sk = it.i_item_sk
LEFT JOIN customer_info cs ON cs.c_customer_sk = it_h.i_item_sk 
LEFT JOIN sales_summary ss ON ss.web_site_sk = it_h.i_item_sk
LEFT JOIN inventory_evaluation ie ON ie.inv_item_sk = it_h.i_item_sk
LEFT JOIN returns_summary rs ON rs.sr_item_sk = it_h.i_item_sk
WHERE it.i_current_price IS NOT NULL
ORDER BY total_profit DESC, total_orders DESC;