
WITH CustomerSales AS (
    SELECT 
        c.c_customer_id,
        SUM(ws.ws_net_paid) AS total_sales,
        COUNT(DISTINCT ws.ws_order_number) AS order_count,
        MAX(ws.ws_sold_date_sk) AS last_purchase_date
    FROM 
        customer c
    JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY 
        c.c_customer_id
),
SalesRanked AS (
    SELECT 
        cs.c_customer_id,
        cs.total_sales,
        cs.order_count,
        cs.last_purchase_date,
        RANK() OVER (ORDER BY cs.total_sales DESC) AS sales_rank
    FROM 
        CustomerSales cs
),
TopCustomers AS (
    SELECT 
        c.c_first_name,
        c.c_last_name,
        sr.total_sales,
        sr.order_count,
        sr.last_purchase_date,
        CASE 
            WHEN sr.order_count > 5 THEN 'Frequent Buyer'
            WHEN sr.order_count BETWEEN 2 AND 5 THEN 'Occasional Buyer'
            ELSE 'Rare Buyer'
        END AS buyer_category
    FROM 
        SalesRanked sr
    JOIN 
        customer c ON sr.c_customer_id = c.c_customer_id
    WHERE 
        sr.sales_rank <= 100
),
ItemReturns AS (
    SELECT 
        sr_item_sk,
        SUM(CASE WHEN sr_return_quantity > 0 THEN sr_return_quantity ELSE 0 END) AS total_returned,
        COUNT(DISTINCT sr_order_number) AS return_count
    FROM 
        store_returns 
    GROUP BY 
        sr_item_sk
)
SELECT 
    tc.c_first_name,
    tc.c_last_name,
    tc.total_sales,
    tc.order_count,
    tc.last_purchase_date,
    tc.buyer_category,
    COALESCE(ir.total_returned, 0) AS total_returned_items,
    COALESCE(ir.return_count, 0) AS total_return_orders
FROM 
    TopCustomers tc
LEFT JOIN 
    ItemReturns ir ON ir.sr_item_sk = (
        SELECT 
            ws.ws_item_sk 
        FROM 
            web_sales ws 
        WHERE 
            ws.ws_bill_customer_sk = tc.c_customer_id 
        ORDER BY 
            ws.ws_net_paid DESC 
        FETCH FIRST 1 ROW ONLY
    )
WHERE 
    tc.total_sales > 1000
ORDER BY 
    tc.total_sales DESC;
