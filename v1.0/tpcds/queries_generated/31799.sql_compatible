
WITH RECURSIVE sales_summary AS (
    SELECT 
        ws.ws_sold_date_sk,
        ws.ws_item_sk,
        ws.ws_quantity,
        ws.ws_net_profit,
        RANK() OVER (PARTITION BY ws.ws_item_sk ORDER BY ws.ws_net_profit DESC) AS profit_rank
    FROM 
        web_sales ws
    WHERE 
        ws.ws_sold_date_sk >= (
            SELECT MIN(d.d_date_sk) 
            FROM date_dim d 
            WHERE d.d_year = 2023
        )
),
ranked_sales AS (
    SELECT 
        ss.ws_item_sk,
        SUM(ss.ws_quantity) AS total_quantity,
        SUM(ss.ws_net_profit) AS total_net_profit
    FROM 
        sales_summary ss
    WHERE 
        ss.profit_rank <= 5
    GROUP BY 
        ss.ws_item_sk
),
top_items AS (
    SELECT 
        i.i_item_id,
        i.i_item_desc,
        rs.total_quantity,
        rs.total_net_profit,
        ROW_NUMBER() OVER (ORDER BY rs.total_net_profit DESC) AS item_rank
    FROM 
        ranked_sales rs
    JOIN 
        item i ON i.i_item_sk = rs.ws_item_sk
),
customers_with_returns AS (
    SELECT 
        c.c_customer_id,
        COUNT(DISTINCT sr.sr_ticket_number) AS total_returns
    FROM 
        customer c
    LEFT JOIN 
        store_returns sr ON c.c_customer_sk = sr.sr_customer_sk
    GROUP BY 
        c.c_customer_id
)
SELECT 
    ti.i_item_id,
    ti.i_item_desc,
    ti.total_quantity,
    ti.total_net_profit,
    cw.c_customer_id,
    cw.total_returns
FROM 
    top_items ti
JOIN 
    customers_with_returns cw ON cw.total_returns > 0
WHERE 
    EXISTS (
        SELECT 1
        FROM store_sales ss
        WHERE ss.ss_item_sk = ti.i_item_sk
        AND ss.ss_net_paid > 1000
    )
ORDER BY 
    ti.total_net_profit DESC,
    cw.total_returns DESC
FETCH FIRST 10 ROWS ONLY;
