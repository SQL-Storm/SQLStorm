
WITH CustomerSales AS (
    SELECT 
        c.c_customer_id,
        SUM(ws.ws_ext_sales_price) AS total_web_sales,
        SUM(cs.cs_ext_sales_price) AS total_catalog_sales,
        SUM(ss.ss_ext_sales_price) AS total_store_sales,
        COALESCE(SUM(ws.ws_ext_sales_price), 0) + COALESCE(SUM(cs.cs_ext_sales_price), 0) + COALESCE(SUM(ss.ss_ext_sales_price), 0) AS total_sales
    FROM 
        customer c
    LEFT JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    LEFT JOIN 
        catalog_sales cs ON c.c_customer_sk = cs.cs_bill_customer_sk
    LEFT JOIN 
        store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    GROUP BY 
        c.c_customer_id
),
IncomeDetails AS (
    SELECT 
        h.hd_demo_sk,
        i.ib_income_band_sk,
        CASE 
            WHEN i.ib_income_band_sk IS NULL THEN 'Unknown'
            ELSE CONCAT('Income Band: ', i.ib_income_band_sk)
        END AS income_band,
        COUNT(h.hd_demo_sk) AS demographics_count
    FROM 
        household_demographics h
    LEFT JOIN 
        income_band i ON h.hd_income_band_sk = i.ib_income_band_sk
    GROUP BY 
        h.hd_demo_sk, i.ib_income_band_sk
)
SELECT 
    cs.c_customer_id,
    cs.total_web_sales,
    cs.total_catalog_sales,
    cs.total_store_sales,
    cs.total_sales,
    id.income_band,
    id.demographics_count,
    RANK() OVER (PARTITION BY id.income_band ORDER BY cs.total_sales DESC) AS sales_rank
FROM 
    CustomerSales cs
JOIN 
    IncomeDetails id ON cs.c_customer_id = id.hd_demo_sk
WHERE 
    cs.total_sales > 1000
ORDER BY 
    cs.total_sales DESC
LIMIT 10 OFFSET 0;
