
WITH RECURSIVE CustomerHierarchy AS (
    SELECT 
        c_customer_sk, 
        c_first_name, 
        c_last_name, 
        c_current_cdemo_sk, 
        1 AS level
    FROM customer
    WHERE c_current_cdemo_sk IS NOT NULL
    UNION ALL
    SELECT 
        c.c_customer_sk, 
        c.c_first_name, 
        c.c_last_name, 
        c.c_current_cdemo_sk, 
        ch.level + 1
    FROM customer c
    JOIN CustomerHierarchy ch ON c.c_current_cdemo_sk = ch.c_customer_sk
),
SalesSummary AS (
    SELECT 
        ws_bill_customer_sk,
        SUM(ws_sales_price) AS total_sales,
        COUNT(ws_order_number) AS order_count,
        ROW_NUMBER() OVER (PARTITION BY ws_bill_customer_sk ORDER BY SUM(ws_sales_price) DESC) AS sales_rank
    FROM web_sales
    GROUP BY ws_bill_customer_sk
),
ReturnSummary AS (
    SELECT 
        sr_returning_customer_sk,
        SUM(sr_return_amt) AS total_returns,
        COUNT(sr_return_number) AS return_count
    FROM store_returns
    GROUP BY sr_returning_customer_sk
)
SELECT 
    ch.c_first_name, 
    ch.c_last_name, 
    COALESCE(ss.total_sales, 0) AS total_sales,
    COALESCE(ss.order_count, 0) AS order_count,
    COALESCE(rs.total_returns, 0) AS total_returns,
    COALESCE(rs.return_count, 0) AS return_count
FROM CustomerHierarchy ch
LEFT JOIN SalesSummary ss ON ch.c_customer_sk = ss.ws_bill_customer_sk
LEFT JOIN ReturnSummary rs ON ch.c_customer_sk = rs.sr_returning_customer_sk
WHERE (ss.total_sales IS NOT NULL OR rs.total_returns IS NOT NULL)
AND (ch.level = 2 OR (ch.level = 1 AND COALESCE(ss.total_sales, 0) > 1000))
ORDER BY COALESCE(ss.total_sales, 0) DESC;
