
WITH RECURSIVE sales_summary AS (
    SELECT
        ws_sold_date_sk,
        ws_item_sk,
        SUM(ws_quantity) AS total_quantity,
        SUM(ws_net_paid) AS total_revenue,
        ROW_NUMBER() OVER (PARTITION BY ws_item_sk ORDER BY ws_sold_date_sk DESC) AS row_num
    FROM
        web_sales
    GROUP BY
        ws_sold_date_sk, ws_item_sk
),
top_items AS (
    SELECT
        item.i_item_sk,
        item.i_item_id,
        item.i_product_name,
        COALESCE(SUM(ss.ss_quantity), 0) AS store_quantity,
        COALESCE(SUM(ss.ss_net_profit), 0) AS store_profit
    FROM
        item
    LEFT JOIN store_sales ss ON item.i_item_sk = ss.ss_item_sk
    GROUP BY
        item.i_item_sk, item.i_item_id, item.i_product_name
    HAVING
        SUM(ss.ss_net_profit) > 1000
),
item_threshold AS (
    SELECT
        it.i_item_sk,
        it.i_item_id,
        it.i_product_name,
        it.store_quantity,
        it.store_profit,
        CASE
            WHEN it.store_profit IS NULL THEN 'No Sales'
            WHEN it.store_profit > 5000 THEN 'High Profit'
            ELSE 'Moderate Profit'
        END AS profit_category
    FROM
        top_items it
)
SELECT
    ca.ca_city,
    SUM(s.total_revenue) AS city_revenue,
    COUNT(DISTINCT c.c_customer_sk) AS loyal_customers,
    it.i_item_id AS item_id,
    it.i_product_name AS product_name,
    it.profit_category
FROM
    customer c
JOIN customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
JOIN sales_summary s ON c.c_customer_sk = s.ws_customer_sk
JOIN item_threshold it ON s.ws_item_sk = it.i_item_sk
WHERE
    ca.ca_state = 'CA'
    AND (s.total_quantity > 10 OR it.store_profit IS NOT NULL)
GROUP BY
    ca.ca_city, it.i_item_id, it.i_product_name, it.profit_category
HAVING
    SUM(s.total_revenue) > 10000
ORDER BY
    city_revenue DESC;
