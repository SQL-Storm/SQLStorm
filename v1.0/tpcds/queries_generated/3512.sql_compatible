
WITH RankedSales AS (
    SELECT 
        ws.ws_order_number,
        ws.ws_item_sk,
        ws.ws_sales_price,
        SUM(ws.ws_sales_price) OVER (PARTITION BY ws.ws_item_sk ORDER BY ws.ws_sold_date_sk) AS cumulative_sales,
        ROW_NUMBER() OVER (PARTITION BY ws.ws_item_sk ORDER BY ws.ws_sold_date_sk DESC) AS sales_rank
    FROM 
        web_sales ws
    WHERE 
        ws.ws_sold_date_sk BETWEEN (SELECT MIN(d_date_sk) FROM date_dim WHERE d_year = 2023) AND (SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = 2023)
),
HighValueReturns AS (
    SELECT 
        wr.wr_item_sk,
        SUM(wr.wr_return_amt) AS total_return_amt
    FROM 
        web_returns wr
    WHERE 
        wr.wr_return_quantity > 0
    GROUP BY 
        wr.wr_item_sk
),
SalesSummary AS (
    SELECT 
        ri.ws_item_sk,
        SUM(ri.ws_sales_price) AS total_sales,
        COUNT(DISTINCT ri.ws_order_number) AS order_count,
        COALESCE(hvr.total_return_amt, 0) AS total_return_amt,
        (SUM(ri.ws_sales_price) - COALESCE(hvr.total_return_amt, 0)) AS net_sales
    FROM 
        RankedSales ri
    LEFT JOIN 
        HighValueReturns hvr ON ri.ws_item_sk = hvr.wr_item_sk
    GROUP BY 
        ri.ws_item_sk
)
SELECT 
    ss.ws_item_sk,
    ss.total_sales,
    ss.order_count,
    ss.total_return_amt,
    ss.net_sales,
    ca.ca_city,
    ca.ca_state
FROM 
    SalesSummary ss
JOIN 
    item i ON ss.ws_item_sk = i.i_item_sk
LEFT JOIN 
    customer_address ca ON i.i_item_sk = ca.ca_address_sk
WHERE 
    ss.net_sales > 1000
ORDER BY 
    ss.net_sales DESC
FETCH FIRST 10 ROWS ONLY;
