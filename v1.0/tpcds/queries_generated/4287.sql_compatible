
WITH RankedSales AS (
    SELECT
        ws.sold_date_sk,
        ws.web_site_sk,
        ws.item_sk,
        SUM(ws.ext_sales_price) AS total_sales,
        DENSE_RANK() OVER (PARTITION BY ws.web_site_sk ORDER BY SUM(ws.ext_sales_price) DESC) AS sales_rank
    FROM
        web_sales ws
    JOIN
        web_site w ON ws.web_site_sk = w.web_site_sk
    WHERE
        w.web_country = 'USA'
    GROUP BY
        ws.sold_date_sk, ws.web_site_sk, ws.item_sk
),
TopSellingItems AS (
    SELECT
        item_sk,
        total_sales
    FROM
        RankedSales
    WHERE
        sales_rank <= 10
),
CustomerReturns AS (
    SELECT
        sr.returned_date_sk,
        sr.item_sk,
        SUM(sr.return_quantity) AS total_returns
    FROM
        store_returns sr
    GROUP BY
        sr.returned_date_sk, sr.item_sk
),
RefundAnalysis AS (
    SELECT
        tsi.item_sk,
        tsi.total_sales,
        COALESCE(tr.total_returns, 0) AS total_returns,
        (tsi.total_sales - COALESCE(tr.total_returns, 0)) AS net_sales
    FROM
        TopSellingItems tsi
    LEFT JOIN
        CustomerReturns tr ON tsi.item_sk = tr.item_sk
)
SELECT
    item_sk,
    total_sales,
    total_returns,
    net_sales,
    CASE
        WHEN net_sales < 0 THEN 'Loss'
        WHEN net_sales = 0 THEN 'Break Even'
        ELSE 'Profit'
    END AS financial_status
FROM
    RefundAnalysis
WHERE
    net_sales < 10000
ORDER BY
    net_sales DESC
LIMIT 20;
