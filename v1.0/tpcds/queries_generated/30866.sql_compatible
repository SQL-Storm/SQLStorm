
WITH RECURSIVE category_hierarchy AS (
    SELECT i_category_id, i_category, i_item_sk
    FROM item
    WHERE i_category IS NOT NULL
    UNION ALL
    SELECT i.i_category_id, i.i_category, i_item_sk
    FROM item i
    JOIN category_hierarchy ch ON i.i_category_id = ch.i_category_id
),
sales_data AS (
    SELECT 
        ws.ws_item_sk,
        SUM(ws.ws_quantity) AS total_sold,
        SUM(ws.ws_ext_sales_price) AS total_sales,
        COUNT(DISTINCT ws.ws_order_number) AS order_count
    FROM web_sales ws
    JOIN date_dim dd ON ws.ws_sold_date_sk = dd.d_date_sk
    WHERE dd.d_year = 2023
    GROUP BY ws.ws_item_sk
),
returned_sales AS (
    SELECT 
        wr.wr_item_sk,
        SUM(wr.wr_return_quantity) AS total_returns,
        SUM(wr.wr_return_amt_inc_tax) AS total_return_amount
    FROM web_returns wr
    JOIN date_dim dd ON wr.wr_returned_date_sk = dd.d_date_sk
    WHERE dd.d_year = 2023
    GROUP BY wr.wr_item_sk
),
final_sales AS (
    SELECT 
        ch.i_category,
        COALESCE(sd.total_sold, 0) AS total_sold,
        COALESCE(sd.total_sales, 0) AS total_sales,
        COALESCE(rs.total_returns, 0) AS total_returns,
        COALESCE(rs.total_return_amount, 0) AS total_return_amount
    FROM category_hierarchy ch
    LEFT JOIN sales_data sd ON ch.i_item_sk = sd.ws_item_sk
    LEFT JOIN returned_sales rs ON ch.i_item_sk = rs.wr_item_sk
)
SELECT 
    f.i_category,
    f.total_sold,
    f.total_sales,
    f.total_returns,
    f.total_return_amount,
    (f.total_sales - f.total_return_amount) AS net_revenue,
    CASE 
        WHEN f.total_sold = 0 THEN 0
        ELSE (f.total_returns / NULLIF(f.total_sold, 0)) * 100 
    END AS return_percentage
FROM final_sales f
WHERE f.total_sales > 5000
ORDER BY net_revenue DESC
LIMIT 10;
