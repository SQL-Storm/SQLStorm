WITH RECURSIVE AddressHierarchy AS (
    SELECT 
        ca_address_sk,
        ca_street_number,
        ca_street_name,
        ca_city,
        ca_state,
        0 AS level
    FROM 
        customer_address
    WHERE 
        ca_city IS NOT NULL
    
    UNION ALL
    
    SELECT 
        ca_address_sk,
        ca_street_number,
        CONCAT('Nested ', ca_street_name) AS ca_street_name,
        ca_city,
        ca_state,
        level + 1
    FROM 
        customer_address
    JOIN 
        AddressHierarchy ON ca_address_sk = ca_address_sk
    WHERE 
        level < 2
),
MaxReturns AS (
    SELECT 
        sr_returning_customer_sk,
        COUNT(*) AS return_count,
        SUM(sr_return_amt) AS total_return_amt
    FROM 
        store_returns
    GROUP BY 
        sr_returning_customer_sk
),
CustomerReturns AS (
    SELECT 
        c.c_customer_id,
        COALESCE(mr.return_count, 0) AS return_count,
        COALESCE(mr.total_return_amt, 0) AS total_return_amt
    FROM 
        customer c
    LEFT JOIN 
        MaxReturns mr ON c.c_customer_sk = mr.sr_returning_customer_sk
),
SalesData AS (
    SELECT 
        ws_bill_customer_sk,
        SUM(ws_net_paid) AS total_sales,
        COUNT(ws_order_number) AS order_count,
        AVG(ws_sales_price) AS average_sales_price
    FROM 
        web_sales
    GROUP BY 
        ws_bill_customer_sk
)
SELECT 
    cr.c_customer_id,
    cr.return_count,
    cr.total_return_amt,
    COALESCE(sd.total_sales, 0) AS total_sales,
    sd.order_count,
    sd.average_sales_price,
    ah.ca_city AS address_city,
    ah.ca_street_name AS address_street,
    CASE 
        WHEN cr.return_count > 0 THEN 'Returned'
        ELSE 'No Return'
    END AS return_status,
    ROW_NUMBER() OVER (PARTITION BY cr.c_customer_id ORDER BY cr.total_return_amt DESC) AS rank_by_returns
FROM 
    CustomerReturns cr
LEFT JOIN 
    SalesData sd ON cr.c_customer_id = sd.ws_bill_customer_sk
JOIN 
    AddressHierarchy ah ON cr.c_customer_id = CAST(ah.ca_address_sk AS CHAR(16)) 
WHERE 
    (cr.return_count > 5 OR sd.total_sales > 1000) 
    AND (ah.ca_city IS NOT NULL OR ah.ca_state IS NOT NULL)
ORDER BY 
    cr.total_return_amt DESC, 
    total_sales ASC;