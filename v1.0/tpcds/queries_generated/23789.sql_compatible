
WITH RECURSIVE customer_tree AS (
    SELECT c.c_customer_sk, c.c_customer_id, c.c_first_name, c.c_last_name, 
           COALESCE(cd.cd_gender, 'U') AS cd_gender, 
           COALESCE(cd.cd_marital_status, 'U') AS cd_marital_status,
           0 AS hierarchy_level
    FROM customer c
    LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    WHERE c.c_birth_year IS NOT NULL
    UNION ALL
    SELECT c.c_customer_sk, c.c_customer_id, c.c_first_name, c.c_last_name, 
           COALESCE(cd.cd_gender, 'U') AS cd_gender, 
           COALESCE(cd.cd_marital_status, 'U') AS cd_marital_status,
           ct.hierarchy_level + 1
    FROM customer_tree ct
    JOIN customer c ON ct.c_customer_sk = c.c_current_hdemo_sk
    LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
),
customer_income AS (
    SELECT ct.c_customer_id, ct.c_first_name, ct.c_last_name, ct.cd_gender, 
           ct.cd_marital_status, 
           ib.ib_lower_bound, ib.ib_upper_bound,
           ROW_NUMBER() OVER (PARTITION BY ct.c_customer_id ORDER BY ib.ib_lower_bound) AS rn
    FROM customer_tree ct
    LEFT JOIN household_demographics hd ON hd.hd_demo_sk = ct.c_current_cdemo_sk
    LEFT JOIN income_band ib ON hd.hd_income_band_sk = ib.ib_income_band_sk
)
SELECT DISTINCT ci.c_customer_id, ci.c_first_name, ci.c_last_name, ci.cd_gender, 
                ci.cd_marital_status,
                (CASE 
                    WHEN ci.ib_lower_bound IS NULL THEN 'Unknown' 
                    WHEN ci.ib_upper_bound IS NULL THEN 'Infinity' 
                    ELSE CONCAT(CAST(ci.ib_lower_bound AS VARCHAR), ' - ', CAST(ci.ib_upper_bound AS VARCHAR))
                END) AS income_range,
                COUNT(DISTINCT ws.ws_order_number) AS total_orders,
                SUM(ws.ws_net_paid) AS total_spent
FROM customer_income ci
LEFT JOIN web_sales ws ON ci.c_customer_id = ws.ws_bill_customer_sk
WHERE ci.rn = 1
AND (ci.cd_gender = 'M' OR (ci.cd_gender IS NULL AND ci.cd_marital_status <> 'S'))
GROUP BY ci.c_customer_id, ci.c_first_name, ci.c_last_name, ci.cd_gender, ci.cd_marital_status, 
         ci.ib_lower_bound, ci.ib_upper_bound
HAVING SUM(ws.ws_net_paid) > COALESCE((SELECT AVG(ws2.ws_net_paid) 
                                         FROM web_sales ws2 WHERE ws2.ws_bill_customer_sk IS NOT NULL), 0)
ORDER BY total_spent DESC
FETCH FIRST 100 ROWS ONLY;
