
WITH RECURSIVE TopCustomers AS (
    SELECT c.c_customer_sk, 
           c.c_first_name, 
           c.c_last_name,
           SUM(ws.ws_net_paid) AS Total_Spend
    FROM customer c
    JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk 
    GROUP BY c.c_customer_sk, c.c_first_name, c.c_last_name
    HAVING SUM(ws.ws_net_paid) > 5000
), 
CustomerRanked AS (
    SELECT c.*, 
           RANK() OVER (ORDER BY Total_Spend DESC) AS Spend_Rank
    FROM TopCustomers c
),  
RecentReturns AS (
    SELECT sr.sr_returned_date_sk, 
           sr.sr_item_sk, 
           sr.sr_return_quantity, 
           SUM(sr.sr_return_amt_inc_tax) AS Total_Return_Amount
    FROM store_returns sr
    WHERE sr.sr_returned_date_sk > (SELECT MAX(d.d_date_sk) 
                                     FROM date_dim d 
                                     WHERE d.d_date >= DATE '2002-10-01' - INTERVAL '1 year')
    GROUP BY sr.sr_returned_date_sk, sr.sr_item_sk
)
SELECT cr.Spend_Rank, 
       cr.c_first_name, 
       cr.c_last_name, 
       COALESCE(rr.Total_Return_Amount, 0) AS Total_Returns,
       SUM(ws.ws_sales_price * ws.ws_quantity) AS Total_Sales
FROM CustomerRanked cr
LEFT JOIN web_sales ws ON cr.c_customer_sk = ws.ws_bill_customer_sk
LEFT JOIN RecentReturns rr ON ws.ws_item_sk = rr.sr_item_sk
GROUP BY cr.Spend_Rank, cr.c_first_name, cr.c_last_name, rr.Total_Return_Amount
ORDER BY cr.Spend_Rank
FETCH FIRST 10 ROWS ONLY;
