
WITH RECURSIVE CustomerReturns AS (
    SELECT 
        sr_returned_date_sk, 
        sr_item_sk, 
        sr_return_quantity, 
        sr_return_amt, 
        sr_customer_sk,
        1 AS return_level
    FROM store_returns
    WHERE sr_return_quantity > 0
    UNION ALL
    SELECT 
        sr_returned_date_sk, 
        sr_item_sk, 
        sr_return_quantity + cr.return_quantity AS return_quantity,
        sr_return_amt + cr.return_amt AS return_amt,
        sr_customer_sk,
        return_level + 1
    FROM store_returns sr
    JOIN CustomerReturns cr ON sr_item_sk = cr.sr_item_sk 
    WHERE cr.return_level < 5 
)

SELECT 
    c.c_customer_id, 
    c.c_first_name, 
    c.c_last_name, 
    COALESCE(SUM(cr.return_quantity), 0) AS total_return_quantity,
    COALESCE(SUM(cr.return_amt), 0) AS total_return_amt,
    COUNT(DISTINCT cr.sr_returned_date_sk) AS return_days_count,
    ROW_NUMBER() OVER (PARTITION BY c.c_customer_id ORDER BY COALESCE(SUM(cr.return_amt), 0) DESC) AS return_rank
FROM customer c
LEFT JOIN CustomerReturns cr ON c.c_customer_sk = cr.sr_customer_sk
WHERE c.c_birth_country IS NOT NULL 
  AND (c.c_current_addr_sk IS NULL OR c.c_current_addr_sk IN 
      (SELECT ca_address_sk FROM customer_address WHERE ca_city = 'New York'))
GROUP BY c.c_customer_id, c.c_first_name, c.c_last_name
HAVING COALESCE(SUM(cr.return_quantity), 0) > 0
ORDER BY total_return_amt DESC
LIMIT 10;
