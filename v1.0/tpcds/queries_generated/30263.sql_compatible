
WITH RECURSIVE address_hierarchy AS (
    SELECT 
        ca_address_sk,
        ca_city,
        ca_state,
        ca_country,
        ca_location_type,
        1 AS level
    FROM customer_address
    WHERE ca_city IS NOT NULL

    UNION ALL

    SELECT 
        ca_address_sk,
        ca_city,
        ca_state,
        ca_country,
        CONCAT(ca_location_type, ' - nested') AS ca_location_type,
        level + 1
    FROM customer_address
    INNER JOIN address_hierarchy ON customer_address.ca_address_sk > address_hierarchy.ca_address_sk
    WHERE level < 3
),
customer_sales AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        SUM(ws.ws_net_profit) AS total_profit,
        COUNT(DISTINCT ws.ws_order_number) AS total_orders
    FROM customer c
    INNER JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    WHERE ws.ws_sold_date_sk BETWEEN 1000 AND 2000
    GROUP BY c.c_customer_sk, c.c_first_name, c.c_last_name
),
demographic_summary AS (
    SELECT 
        cd.cd_demo_sk,
        cd.cd_gender,
        cd.cd_marital_status,
        AVG(cd.cd_purchase_estimate) AS avg_purchase_estimate,
        COUNT(DISTINCT c.c_customer_sk) AS customer_count
    FROM customer_demographics cd
    LEFT JOIN customer c ON cd.cd_demo_sk = c.c_current_cdemo_sk
    GROUP BY cd.cd_demo_sk, cd.cd_gender, cd.cd_marital_status
)
SELECT 
    a.ca_city,
    COUNT(DISTINCT cs.c_customer_sk) AS total_customers,
    COALESCE(SUM(cs.total_profit), 0) AS total_profit,
    COUNT(DISTINCT d.cd_demo_sk) AS unique_demographics,
    d.cd_gender,
    d.cd_marital_status
FROM address_hierarchy a
LEFT JOIN customer_sales cs ON a.ca_city = cs.c_last_name  
LEFT JOIN demographic_summary d ON d.customer_count > 0
GROUP BY 
    a.ca_city,
    d.cd_gender,
    d.cd_marital_status
HAVING 
    COALESCE(SUM(cs.total_profit), 0) > 1000
    AND COUNT(DISTINCT cs.c_customer_sk) > 10
ORDER BY total_profit DESC
LIMIT 10;
