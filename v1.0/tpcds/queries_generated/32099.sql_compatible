
WITH RECURSIVE items_hierarchy AS (
    SELECT 
        i.i_item_sk,
        i.i_item_id,
        i.i_item_desc,
        i.i_current_price,
        1 AS level
    FROM 
        item i
    WHERE 
        i.i_rec_start_date <= DATE '2002-10-01' AND 
        (i.i_rec_end_date IS NULL OR i.i_rec_end_date > DATE '2002-10-01')

    UNION ALL 

    SELECT 
        ih.i_item_sk,
        ih.i_item_id,
        ih.i_item_desc,
        ih.i_current_price,
        ihp.level + 1
    FROM 
        item ih
    INNER JOIN items_hierarchy ihp ON ih.i_item_sk = ihp.i_item_sk
)

SELECT 
    ca.ca_city, 
    ca.ca_state, 
    COUNT(DISTINCT c.c_customer_sk) AS total_customers,
    SUM(COALESCE(ws.ws_net_paid, 0)) AS total_sales,
    MAX(i.i_current_price) AS max_item_price,
    STRING_AGG(DISTINCT i.i_item_desc) AS featured_items
FROM 
    customer c
LEFT JOIN 
    customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
LEFT JOIN 
    web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
LEFT JOIN 
    items_hierarchy i ON ws.ws_item_sk = i.i_item_sk
GROUP BY 
    ca.ca_city, 
    ca.ca_state
HAVING 
    SUM(COALESCE(ws.ws_net_paid, 0)) > 10000
ORDER BY 
    total_sales DESC
LIMIT 10

UNION ALL 

SELECT 
    ca.ca_city, 
    ca.ca_state, 
    COUNT(DISTINCT c.c_customer_sk) AS total_customers,
    SUM(COALESCE(cs.cs_net_paid, 0)) AS total_sales,
    MAX(i.i_current_price) AS max_item_price,
    STRING_AGG(DISTINCT i.i_item_desc) AS featured_items
FROM 
    customer c
LEFT JOIN 
    customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
LEFT JOIN 
    catalog_sales cs ON c.c_customer_sk = cs.cs_bill_customer_sk
LEFT JOIN 
    items_hierarchy i ON cs.cs_item_sk = i.i_item_sk
GROUP BY 
    ca.ca_city, 
    ca.ca_state
HAVING 
    SUM(COALESCE(cs.cs_net_paid, 0)) > 10000
ORDER BY 
    total_sales DESC
LIMIT 10;
