
WITH RECURSIVE Sales_CTE AS (
    SELECT 
        ws.ws_order_number,
        SUM(ws.ws_quantity) AS total_quantity,
        SUM(ws.ws_net_profit) AS total_profit,
        DATE(d.d_date) AS order_date
    FROM web_sales ws
    JOIN date_dim d ON ws.ws_sold_date_sk = d.d_date_sk
    GROUP BY ws.ws_order_number, d.d_date
),
Customer_Ranking AS (
    SELECT 
        c.c_customer_id,
        c.c_first_name,
        c.c_last_name,
        ROW_NUMBER() OVER (PARTITION BY c.c_customer_id ORDER BY SUM(ws.ws_net_profit) DESC) AS rn
    FROM customer c
    JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY c.c_customer_id, c.c_first_name, c.c_last_name
),
Top_Customers AS (
    SELECT * FROM Customer_Ranking WHERE rn = 1
),
Returns_Summary AS (
    SELECT 
        cr.cr_order_number,
        SUM(cr.cr_return_quantity) AS total_returns,
        SUM(cr.cr_return_amt) AS total_return_amt
    FROM catalog_returns cr
    GROUP BY cr.cr_order_number
),
Sales_Returns AS (
    SELECT 
        s.ws_order_number,
        s.total_quantity,
        s.total_profit,
        rv.total_returns,
        rv.total_return_amt,
        CASE 
            WHEN rv.total_returns IS NOT NULL THEN (s.total_profit - rv.total_return_amt) 
            ELSE s.total_profit 
        END AS net_profit
    FROM Sales_CTE s
    LEFT JOIN Returns_Summary rv ON s.ws_order_number = rv.cr_order_number
)
SELECT 
    tc.c_customer_id,
    tc.c_first_name,
    tc.c_last_name,
    COALESCE(SUM(sr.net_profit), 0) AS net_profit,
    COUNT(DISTINCT sr.ws_order_number) AS total_orders
FROM Top_Customers tc
LEFT JOIN Sales_Returns sr ON tc.c_customer_id = sr.ws_order_number
GROUP BY tc.c_customer_id, tc.c_first_name, tc.c_last_name
HAVING COALESCE(SUM(sr.net_profit), 0) > 10000
ORDER BY net_profit DESC
FETCH FIRST 10 ROWS ONLY;
