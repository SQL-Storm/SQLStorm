WITH RECURSIVE monthly_sales AS (
    SELECT
        d.d_year,
        d.d_month_seq,
        SUM(ws.ws_sales_price * ws.ws_quantity) AS total_sales
    FROM
        date_dim d
    JOIN
        web_sales ws ON d.d_date_sk = ws.ws_sold_date_sk
    WHERE
        d.d_year >= 1998
    GROUP BY
        d.d_year, d.d_month_seq

    UNION ALL

    SELECT
        ms.d_year,
        ms.d_month_seq + 1,
        SUM(ws.ws_sales_price * ws.ws_quantity) AS total_sales
    FROM
        monthly_sales ms
    JOIN
        date_dim d ON ms.d_year = d.d_year AND ms.d_month_seq + 1 = d.d_month_seq
    JOIN
        web_sales ws ON d.d_date_sk = ws.ws_sold_date_sk
    WHERE
        ms.d_month_seq < 12
    GROUP BY
        ms.d_year, ms.d_month_seq
),

customer_sales AS (
    SELECT
        c.c_customer_sk,
        COUNT(DISTINCT ws.ws_order_number) AS order_count,
        COALESCE(SUM(ws.ws_net_paid_inc_tax), 0) AS total_spent
    FROM
        customer c
    LEFT JOIN
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY
        c.c_customer_sk
),

top_customers AS (
    SELECT
        cs.c_customer_sk,
        cs.order_count,
        cs.total_spent,
        RANK() OVER (ORDER BY cs.total_spent DESC) AS rank
    FROM
        customer_sales cs
    WHERE
        cs.total_spent > (SELECT AVG(total_spent) FROM customer_sales)
)

SELECT 
    d.d_year,
    d.d_month_seq,
    ms.total_sales,
    tc.c_customer_sk,
    tc.order_count AS customer_order_count,
    tc.total_spent AS customer_total_spent
FROM
    monthly_sales ms
JOIN
    top_customers tc ON ms.d_year = EXTRACT(YEAR FROM cast('2002-10-01' as date)) 
                     AND ms.d_month_seq = EXTRACT(MONTH FROM cast('2002-10-01' as date))
LEFT JOIN
    date_dim d ON ms.d_year = d.d_year AND ms.d_month_seq = d.d_month_seq
WHERE 
    tc.rank <= 10
ORDER BY 
    ms.total_sales DESC, 
    tc.total_spent DESC;