
WITH RECURSIVE sales_data AS (
    SELECT 
        ws_item_sk,
        SUM(ws_quantity) AS total_quantity,
        SUM(ws_sales_price) AS total_sales,
        ROW_NUMBER() OVER (PARTITION BY ws_item_sk ORDER BY SUM(ws_sales_price) DESC) AS rank
    FROM web_sales
    GROUP BY ws_item_sk
),
top_items AS (
    SELECT 
        i_item_sk,
        i_item_desc,
        i_current_price,
        COALESCE(s.total_quantity, 0) AS total_quantity,
        COALESCE(s.total_sales, 0) AS total_sales
    FROM item
    LEFT JOIN sales_data s ON item.i_item_sk = s.ws_item_sk
    WHERE s.rank <= 10
),
customer_sales AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        COUNT(ws.ws_order_number) AS order_count,
        SUM(ws.ws_net_profit) AS total_profit
    FROM customer c
    JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY c.c_customer_sk, c.c_first_name, c.c_last_name
),
order_summary AS (
    SELECT 
        cs.c_customer_sk,
        SUM(COALESCE(cs.total_profit, 0)) AS total_profit_summary,
        COUNT(DISTINCT cs.order_count) AS distinct_orders
    FROM customer_sales cs
    GROUP BY cs.c_customer_sk
)
SELECT 
    ca.ca_city,
    ca.ca_state,
    COUNT(DISTINCT c.c_customer_sk) AS customer_count,
    SUM(ots.total_profit_summary) AS total_profit_by_city,
    AVG(ot.total_quantity) AS avg_quantity_sold
FROM customer_address ca
LEFT JOIN customer c ON ca.ca_address_sk = c.c_current_addr_sk
LEFT JOIN order_summary ots ON c.c_customer_sk = ots.c_customer_sk
LEFT JOIN top_items ot ON ot.i_item_sk IN (SELECT ws.ws_item_sk FROM web_sales ws WHERE ws.ws_bill_customer_sk = c.c_customer_sk)
WHERE ca.ca_country = 'United States'
GROUP BY ca.ca_city, ca.ca_state
HAVING SUM(ots.total_profit_summary) > 1000
ORDER BY total_profit_by_city DESC;
