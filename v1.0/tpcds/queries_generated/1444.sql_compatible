
WITH RankedSales AS (
    SELECT 
        ws_bill_customer_sk,
        ws_item_sk,
        ws_quantity,
        ws_sales_price,
        RANK() OVER (PARTITION BY ws_bill_customer_sk ORDER BY ws_sales_price DESC) AS price_rank
    FROM 
        web_sales
    WHERE 
        ws_sold_date_sk BETWEEN 2450547 AND 2450580
),
HighValueCustomers AS (
    SELECT 
        c.customer_id,
        SUM(ws_sales_price * ws_quantity) AS total_spent
    FROM 
        customer AS c
    JOIN 
        web_sales AS ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY 
        c.customer_id
    HAVING 
        SUM(ws_sales_price * ws_quantity) > 1000
),
TopItems AS (
    SELECT 
        i_item_sk,
        i_item_desc,
        AVG(ws_sales_price) AS avg_sales_price
    FROM 
        item
    JOIN 
        web_sales ON item.i_item_sk = web_sales.ws_item_sk
    GROUP BY 
        i_item_sk, i_item_desc
    HAVING 
        AVG(ws_sales_price) > 50
)
SELECT 
    c.c_first_name,
    c.c_last_name,
    SUM(ws_quantity) AS total_quantity_sold,
    COALESCE(SUM(ws_sales_price) - SUM(ws_ext_discount_amt), 0) AS total_revenue,
    STRING_AGG(DISTINCT ti.i_item_desc, ', ') AS purchased_items
FROM 
    customer AS c
LEFT JOIN 
    web_sales AS ws ON c.c_customer_sk = ws.ws_bill_customer_sk
LEFT JOIN 
    TopItems AS ti ON ws.ws_item_sk = ti.i_item_sk
WHERE 
    ws.ws_sold_date_sk BETWEEN 2450547 AND 2450580
    AND EXISTS (
        SELECT 1
        FROM HighValueCustomers AS hvc
        WHERE hvc.customer_id = c.customer_id
    )
GROUP BY 
    c.c_first_name, c.c_last_name
HAVING 
    SUM(ws_quantity) > 10
ORDER BY 
    total_revenue DESC
LIMIT 10;
