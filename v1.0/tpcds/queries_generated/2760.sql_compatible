
WITH RankedSales AS (
    SELECT 
        ws.web_site_sk,
        ws.web_name,
        ws.net_paid,
        RANK() OVER (PARTITION BY ws.web_site_sk ORDER BY ws.net_paid DESC) AS rank_sales
    FROM 
        web_sales ws
    WHERE 
        ws.sold_date_sk BETWEEN (SELECT MIN(d_date_sk) FROM date_dim WHERE d_year = 2023) 
        AND (SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = 2023)
),
HighValueCustomers AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_purchase_estimate,
        cd.cd_credit_rating
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    WHERE 
        cd.cd_purchase_estimate > 5000
),
SalesSummary AS (
    SELECT 
        ws.web_site_sk,
        COUNT(ws.ws_order_number) AS total_orders,
        SUM(ws.ws_net_paid) AS total_sales,
        AVG(ws.ws_net_paid) AS avg_order_value
    FROM 
        web_sales ws
    JOIN 
        HighValueCustomers hvc ON ws.ws_bill_customer_sk = hvc.c_customer_sk
    GROUP BY 
        ws.web_site_sk
)
SELECT 
    site.web_site_sk,
    site.web_name,
    ss.total_orders,
    ss.total_sales,
    ss.avg_order_value,
    COALESCE(RankSales.rank_sales, 0) AS rank_sales
FROM 
    web_site site
LEFT JOIN 
    SalesSummary ss ON site.web_site_sk = ss.web_site_sk
LEFT JOIN 
    RankedSales RankSales ON site.web_site_sk = RankSales.web_site_sk AND RankSales.rank_sales = 1
WHERE 
    ss.total_orders > 10 OR ss.total_sales IS NOT NULL
ORDER BY 
    ss.total_sales DESC, site.web_name;
