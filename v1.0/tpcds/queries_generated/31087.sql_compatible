
WITH RECURSIVE SalesCTE AS (
    SELECT 
        ws_sold_date_sk,
        ws_item_sk,
        SUM(ws_ext_sales_price) AS total_sales,
        RANK() OVER (PARTITION BY ws_item_sk ORDER BY SUM(ws_ext_sales_price) DESC) AS sales_rank
    FROM 
        web_sales
    GROUP BY 
        ws_sold_date_sk, 
        ws_item_sk
), DailySales AS (
    SELECT 
        d.d_date,
        SUM(s.total_sales) AS daily_total_sales
    FROM 
        date_dim d
    LEFT JOIN 
        SalesCTE s ON d.d_date_sk = s.ws_sold_date_sk
    GROUP BY 
        d.d_date
), TopItems AS (
    SELECT 
        i.i_item_id,
        i.i_item_desc,
        SUM(ws_ext_sales_price) AS item_sales
    FROM 
        web_sales ws
    JOIN 
        item i ON ws.ws_item_sk = i.i_item_sk
    GROUP BY 
        i.i_item_id, i.i_item_desc
    HAVING 
        SUM(ws_ext_sales_price) > (SELECT AVG(item_sales) FROM (
            SELECT SUM(ws_ext_sales_price) AS item_sales 
            FROM web_sales 
            GROUP BY ws_item_sk
        ) AS avg_sales)
)
SELECT 
    ds.d_date,
    COALESCE(ds.daily_total_sales, 0) AS total_sales_for_day,
    ti.i_item_id,
    ti.i_item_desc,
    ti.item_sales
FROM 
    DailySales ds
FULL OUTER JOIN 
    TopItems ti ON ds.d_date = (SELECT MAX(ds2.d_date) FROM DailySales ds2 WHERE ds2.daily_total_sales IS NOT NULL)
WHERE 
    ds.daily_total_sales IS NOT NULL OR ti.item_sales IS NOT NULL
ORDER BY 
    ds.d_date DESC, ti.item_sales DESC;
