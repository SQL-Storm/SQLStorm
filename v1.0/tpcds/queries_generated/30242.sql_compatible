
WITH RECURSIVE Sales_CTE AS (
    SELECT ws_item_sk, 
           SUM(ws_quantity) AS total_sales_quantity,
           SUM(ws_ext_sales_price) AS total_sales_amount,
           ROW_NUMBER() OVER (PARTITION BY ws_item_sk ORDER BY SUM(ws_ext_sales_price) DESC) AS rank
    FROM web_sales
    WHERE ws_sold_date_sk BETWEEN 2452180 AND 2452232 
    GROUP BY ws_item_sk
),
Recent_Returns AS (
    SELECT 
        wr_item_sk,
        COUNT(wr_return_quantity) AS total_returns,
        SUM(wr_return_amt) AS total_return_amount
    FROM web_returns
    WHERE wr_returned_date_sk BETWEEN 2452180 AND 2452232
    GROUP BY wr_item_sk
),
Sales_Returns AS (
    SELECT 
        s.ws_item_sk,
        s.total_sales_quantity,
        s.total_sales_amount,
        r.total_returns,
        r.total_return_amount,
        COALESCE(s.total_sales_amount, 0) - COALESCE(r.total_return_amount, 0) AS net_sales
    FROM Sales_CTE s
    LEFT JOIN Recent_Returns r ON s.ws_item_sk = r.wr_item_sk
)
SELECT 
    CASE 
        WHEN net_sales > 1000 THEN 'High Sales'
        WHEN net_sales BETWEEN 500 AND 1000 THEN 'Medium Sales'
        ELSE 'Low Sales'
    END AS sales_category,
    i.description AS item_description,
    COALESCE(total_sales_quantity, 0) AS sales_quantity,
    COALESCE(total_returns, 0) AS returns,
    COALESCE(total_sales_amount, 0) AS sales_amount,
    COALESCE(total_return_amount, 0) AS return_amount,
    net_sales
FROM Sales_Returns sr
JOIN item i ON sr.ws_item_sk = i.i_item_sk
ORDER BY net_sales DESC
LIMIT 100;
