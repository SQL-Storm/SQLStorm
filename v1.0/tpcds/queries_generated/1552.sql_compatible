
WITH CustomerSales AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        SUM(ss.ss_sales_price) AS total_store_sales,
        COUNT(ss.ss_ticket_number) AS total_store_transactions,
        AVG(ss.ss_sales_price) AS avg_store_sales
    FROM customer c
    INNER JOIN store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    GROUP BY c.c_customer_sk, c.c_first_name, c.c_last_name
), WebSales AS (
    SELECT 
        ws.ws_bill_customer_sk,
        SUM(ws.ws_sales_price) AS total_web_sales
    FROM web_sales ws
    GROUP BY ws.ws_bill_customer_sk
), CombinedSales AS (
    SELECT 
        cs.c_customer_sk,
        cs.c_first_name,
        cs.c_last_name,
        cs.total_store_sales,
        ws.total_web_sales,
        COALESCE(cs.total_store_sales, 0) + COALESCE(ws.total_web_sales, 0) AS total_combined_sales
    FROM CustomerSales cs
    LEFT JOIN WebSales ws ON cs.c_customer_sk = ws.ws_bill_customer_sk
)
SELECT 
    c.c_first_name,
    c.c_last_name,
    cs.total_store_sales,
    ws.total_web_sales,
    cs.total_combined_sales,
    ROW_NUMBER() OVER (ORDER BY cs.total_combined_sales DESC) AS rank
FROM CombinedSales cs
JOIN customer c ON cs.c_customer_sk = c.c_customer_sk
WHERE COALESCE(cs.total_combined_sales, 0) > 1000
ORDER BY cs.total_combined_sales DESC
LIMIT 10;
