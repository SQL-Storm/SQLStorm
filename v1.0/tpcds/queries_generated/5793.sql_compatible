
WITH customer_sales AS (
    SELECT 
        c.c_customer_id,
        SUM(ws.ws_ext_sales_price) AS total_web_sales,
        SUM(cs.cs_ext_sales_price) AS total_catalog_sales,
        SUM(ss.ss_ext_sales_price) AS total_store_sales
    FROM customer c
    LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    LEFT JOIN catalog_sales cs ON c.c_customer_sk = cs.cs_ship_customer_sk
    LEFT JOIN store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    GROUP BY c.c_customer_id
),
sales_summary AS (
    SELECT 
        cs.c_customer_id,
        cs.total_web_sales,
        cs.total_catalog_sales,
        cs.total_store_sales,
        COALESCE(cs.total_web_sales, 0) + COALESCE(cs.total_catalog_sales, 0) + COALESCE(cs.total_store_sales, 0) AS total_sales
    FROM customer_sales cs
),
income_categories AS (
    SELECT
        CASE 
            WHEN hd.hd_income_band_sk IS NULL THEN 'Unknown'
            WHEN hd.hd_income_band_sk = 1 THEN 'Low Income'
            WHEN hd.hd_income_band_sk = 2 THEN 'Middle Income'
            WHEN hd.hd_income_band_sk = 3 THEN 'High Income'
            ELSE 'Other'
        END AS income_category,
        COUNT(*) AS customer_count,
        SUM(ss.net_profit) AS total_profit
    FROM sales_summary s
    LEFT JOIN household_demographics hd ON s.c_customer_id = hd.hd_demo_sk
    LEFT JOIN store_sales ss ON s.c_customer_id = ss.ss_customer_sk
    GROUP BY 
        income_category
)
SELECT 
    income_category,
    customer_count,
    total_profit,
    RANK() OVER (ORDER BY total_profit DESC) AS profit_rank
FROM income_categories
WHERE customer_count > 0;
