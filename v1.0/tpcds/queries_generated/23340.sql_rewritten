WITH CustomerReturns AS (
    SELECT
        cr_returning_customer_sk,
        SUM(cr_return_quantity) AS total_returned,
        SUM(cr_return_amount) AS total_return_amount,
        COUNT(DISTINCT cr_order_number) AS num_returns
    FROM catalog_returns
    GROUP BY cr_returning_customer_sk
),
CustomerDemographics AS (
    SELECT
        cd_demo_sk,
        cd_gender,
        cd_marital_status,
        cd_income_band_sk
    FROM customer_demographics
    WHERE cd_marital_status IN ('M', 'S')
),
IncomeBand AS (
    SELECT
        ib_income_band_sk,
        CASE
            WHEN ib_lower_bound IS NULL THEN 'No Income'
            WHEN ib_upper_bound IS NULL THEN 'High Income'
            ELSE CONCAT('Income: $', ib_lower_bound, ' - $', ib_upper_bound)
        END AS income_bracket
    FROM income_band
),
TopReturningCustomers AS (
    SELECT
        c.c_customer_id,
        cr.total_returned,
        cr.total_return_amount,
        cd.cd_gender,
        ib.income_bracket
    FROM CustomerReturns cr
    JOIN customer c ON cr.cr_returning_customer_sk = c.c_customer_sk
    JOIN CustomerDemographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN IncomeBand ib ON cd.cd_income_band_sk = ib.ib_income_band_sk
    WHERE cr.total_returned > (
        SELECT AVG(total_returned * 1.0)
        FROM CustomerReturns
    )
)
SELECT
    t.customer_id,
    t.total_returned,
    t.total_return_amount,
    COALESCE(t.cd_gender, 'Unknown') AS gender,
    COALESCE(t.income_bracket, 'Undefined') AS income_bracket,
    DENSE_RANK() OVER (ORDER BY t.total_return_amount DESC) AS return_rank
FROM TopReturningCustomers t
JOIN date_dim dd ON dd.d_date_sk = (
    SELECT MAX(d_date_sk)
    FROM date_dim
    WHERE d_date < cast('2002-10-01' as date) AND d_weekend = '1'
)
WHERE EXISTS (
    SELECT 1
    FROM store_sales ss
    WHERE ss.ss_customer_sk = t.customer_id AND ss.ss_sold_date_sk = dd.d_date_sk
) 
ORDER BY t.total_return_amount DESC
LIMIT 100
OFFSET 10;