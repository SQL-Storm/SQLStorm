
WITH RECURSIVE SeasonalSales AS (
    SELECT
        d.d_year,
        d.d_quarter_seq,
        SUM(ws.ws_ext_sales_price) AS total_sales
    FROM
        date_dim d
    JOIN
        web_sales ws ON d.d_date_sk = ws.ws_sold_date_sk
    WHERE
        d.d_year = 2023
    GROUP BY
        d.d_year, d.d_quarter_seq
    UNION ALL
    SELECT
        d.d_year,
        d.d_quarter_seq,
        SUM(cs.cs_ext_sales_price) AS total_sales
    FROM
        date_dim d
    JOIN
        catalog_sales cs ON d.d_date_sk = cs.cs_sold_date_sk
    WHERE
        d.d_year = 2023
    GROUP BY
        d.d_year, d.d_quarter_seq
),
FilteredSales AS (
    SELECT
        ss.s_store_sk,
        SUM(ss.ss_ext_sales_price) AS store_sales,
        COUNT(ss.ss_ticket_number) AS transaction_count,
        AVG(ss.ss_net_profit) AS avg_net_profit
    FROM
        store_sales ss
    JOIN 
        customer c ON ss.ss_customer_sk = c.c_customer_sk
    WHERE
        c.c_birth_year BETWEEN 1980 AND 1994
    AND
        c.c_preferred_cust_flag = 'Y'
    GROUP BY
        ss.s_store_sk
),
MaxSales AS (
    SELECT 
        f.s_store_sk,
        f.store_sales,
        RANK() OVER (ORDER BY f.store_sales DESC) AS sales_rank
    FROM
        FilteredSales f
    WHERE 
        f.store_sales IS NOT NULL
)
SELECT 
    w.w_warehouse_id,
    w.w_warehouse_name,
    COALESCE(s.total_sales, 0) AS total_sales,
    COALESCE(ss.transaction_count, 0) AS transaction_count,
    MAX(m.sales_rank) AS store_sales_rank,
    STRING_AGG(DISTINCT CONCAT(c.c_first_name, ' ', c.c_last_name), ', ') AS top_customers
FROM 
    warehouse w
LEFT JOIN 
    SeasonalSales s ON w.w_warehouse_sk = s.d_year
LEFT JOIN 
    MaxSales m ON w.w_warehouse_sk = m.s_store_sk
LEFT JOIN
    store_sales ss ON w.w_warehouse_sk = ss.ss_store_sk
JOIN 
    customer c ON ss.ss_customer_sk = c.c_customer_sk
WHERE 
    w.w_warehouse_sq_ft IS NOT NULL
    AND (s.total_sales IS NOT NULL OR m.sales_rank = 1)
GROUP BY 
    w.w_warehouse_id, w.w_warehouse_name
HAVING 
    COUNT(c.c_customer_sk) > 0
ORDER BY 
    total_sales DESC;
