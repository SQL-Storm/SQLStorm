
WITH SalesSummary AS (
    SELECT 
        ws.web_site_id, 
        SUM(ws.ws_quantity) AS total_quantity,
        SUM(ws.ws_ext_sales_price) AS total_sales,
        COUNT(DISTINCT ws.ws_order_number) AS total_orders
    FROM 
        web_sales ws
    JOIN 
        web_site w ON ws.ws_web_site_sk = w.web_site_sk
    WHERE 
        ws.ws_sold_date_sk >= (SELECT MIN(d_date_sk) FROM date_dim WHERE d_year = 2023)
        AND ws.ws_sold_date_sk <= (SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = 2023)
    GROUP BY 
        ws.web_site_id
),
CustomerDemographics AS (
    SELECT 
        cd.cd_demo_sk, 
        cd.cd_gender,
        COUNT(DISTINCT c.c_customer_sk) AS customer_count
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    GROUP BY 
        cd.cd_demo_sk, cd.cd_gender
)
SELECT 
    ss.web_site_id,
    ss.total_quantity,
    ss.total_sales,
    cd.cd_gender,
    cd.customer_count,
    CASE 
        WHEN ss.total_sales > 10000 THEN 'High Revenue'
        WHEN ss.total_sales BETWEEN 5000 AND 10000 THEN 'Medium Revenue'
        ELSE 'Low Revenue'
    END AS revenue_category,
    COALESCE(ROUND(ss.total_sales / NULLIF(cd.customer_count, 0), 2), 0) AS avg_sales_per_customer
FROM 
    SalesSummary ss
LEFT JOIN 
    CustomerDemographics cd ON ss.total_orders = cd.customer_count
ORDER BY 
    ss.total_sales DESC;
