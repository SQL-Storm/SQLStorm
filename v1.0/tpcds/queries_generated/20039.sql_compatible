
WITH ranked_sales AS (
    SELECT 
        ws.web_site_sk,
        ws.web_sales_price,
        RANK() OVER (PARTITION BY ws.web_site_sk ORDER BY ws.ws_net_profit DESC) AS profit_rank,
        CASE 
            WHEN ws.ws_net_paid > 1000 THEN 'High'
            WHEN ws.ws_net_paid BETWEEN 500 AND 1000 THEN 'Medium'
            ELSE 'Low' 
        END AS price_category
    FROM 
        web_sales ws
    LEFT JOIN 
        item it ON ws.ws_item_sk = it.i_item_sk
    WHERE 
        it.i_current_price IS NOT NULL
),
customer_info AS (
    SELECT 
        c.c_customer_sk,
        cd.cd_gender,
        cd.cd_marital_status,
        COUNT(DISTINCT ws.ws_order_number) AS order_count,
        SUM(ws.ws_net_paid_inc_tax) AS total_spent
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_ship_customer_sk
    WHERE 
        c.c_first_name IS NOT NULL
    GROUP BY 
        c.c_customer_sk, cd.cd_gender, cd.cd_marital_status
)
SELECT 
    ci.c_customer_sk,
    ci.cd_gender,
    ci.total_spent,
    rs.web_site_sk,
    rs.web_sales_price,
    rs.price_category,
    CASE 
        WHEN ci.order_count > 10 THEN 'Frequent'
        ELSE 'Infrequent'
    END AS customer_type,
    CASE 
        WHEN rs.profit_rank = 1 THEN 'Top Seller'
        ELSE 'Other'
    END AS sales_performance
FROM 
    customer_info ci
JOIN 
    ranked_sales rs ON ci.c_customer_sk = rs.web_site_sk
FULL OUTER JOIN 
    warehouse w ON rs.web_site_sk = w.w_warehouse_sk
WHERE 
    (ci.total_spent IS NOT NULL OR rs.web_sales_price < 50)
    AND w.w_country IS NULL
ORDER BY 
    ci.total_spent DESC, rs.web_sales_price ASC
LIMIT 10 OFFSET 5;
