
WITH RECURSIVE sales_data AS (
    SELECT 
        ss_sold_date_sk,
        ss_item_sk,
        SUM(ss_sales_price) AS total_sales,
        RANK() OVER (PARTITION BY ss_item_sk ORDER BY SUM(ss_sales_price) DESC) AS sales_rank
    FROM 
        store_sales
    GROUP BY 
        ss_sold_date_sk, ss_item_sk
),
category_sales AS (
    SELECT 
        i_category,
        SUM(total_sales) AS category_total_sales
    FROM 
        sales_data
    JOIN item ON sales_data.ss_item_sk = item.i_item_sk
    GROUP BY 
        i_category
),
top_categories AS (
    SELECT 
        i_category,
        category_total_sales,
        RANK() OVER (ORDER BY category_total_sales DESC) AS category_rank
    FROM 
        category_sales
),
customer_data AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        COUNT(DISTINCT ws.ws_order_number) AS total_orders,
        SUM(ws.ws_sales_price) AS total_spent,
        MAX(ws.ws_bill_customer_sk) AS max_order_amount
    FROM 
        customer c
    LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY 
        c.c_customer_sk, c.c_first_name, c.c_last_name, cd.cd_gender, cd.cd_marital_status
),
high_value_customers AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        hv.total_spent
    FROM 
        customer_data hv
    JOIN customer c ON hv.c_customer_sk = c.c_customer_sk
    JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    WHERE 
        hv.total_spent > (SELECT AVG(total_spent) FROM customer_data)
)
SELECT 
    c.c_first_name,
    c.c_last_name,
    cd.cd_gender,
    cat.i_category,
    cat.category_rank,
    cat.category_total_sales,
    SUM(sp.total_spent) AS customer_total_spent
FROM 
    high_value_customers c
JOIN (
    SELECT 
        i_category,
        tc.category_rank,
        tc.category_total_sales 
    FROM 
        top_categories tc
    WHERE 
        tc.category_rank <= 5
) cat ON true
LEFT JOIN 
    web_sales sp ON c.c_customer_sk = sp.ws_bill_customer_sk
GROUP BY 
    c.c_first_name, c.c_last_name, cd.cd_gender, cat.i_category, cat.category_rank, cat.category_total_sales
ORDER BY 
    customer_total_spent DESC,
    cat.category_total_sales DESC;
