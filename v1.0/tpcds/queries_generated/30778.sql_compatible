
WITH RECURSIVE SalesCTE AS (
    SELECT 
        ss.sold_date_sk,
        ss.store_sk,
        SUM(ss.net_profit) AS total_profit,
        COUNT(ss.ticket_number) AS transaction_count,
        ROW_NUMBER() OVER (PARTITION BY ss.store_sk ORDER BY SUM(ss.net_profit) DESC) AS rank
    FROM 
        store_sales ss
    WHERE 
        ss.sold_date_sk >= (SELECT MIN(d_date_sk) FROM date_dim WHERE d_year = 2023)
        AND ss.sold_date_sk <= (SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = 2023)
    GROUP BY 
        ss.sold_date_sk, ss.store_sk
),
HighestProfitStores AS (
    SELECT 
        store_sk,
        total_profit,
        transaction_count,
        ROW_NUMBER() OVER (ORDER BY total_profit DESC) AS store_rank
    FROM 
        SalesCTE
    WHERE 
        rank = 1
),
CustomerStats AS (
    SELECT 
        c.c_customer_sk,
        COUNT(ws.ws_order_number) AS order_count,
        SUM(ws.ws_net_paid) AS total_spent,
        cd.cd_gender,
        cd.cd_marital_status,
        hd.hd_income_band_sk,
        RANK() OVER (PARTITION BY cd.cd_gender, hd.hd_income_band_sk ORDER BY SUM(ws.ws_net_paid) DESC) AS income_rank
    FROM 
        customer c
    JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN 
        household_demographics hd ON c.c_customer_sk = hd.hd_demo_sk
    GROUP BY 
        c.c_customer_sk, cd.cd_gender, cd.cd_marital_status, hd.hd_income_band_sk
)
SELECT 
    hps.store_sk,
    hps.total_profit,
    cs.c_customer_sk,
    cs.total_spent,
    cs.order_count,
    cs.cd_gender,
    cs.cd_marital_status,
    cs.hd_income_band_sk
FROM 
    HighestProfitStores hps
JOIN 
    CustomerStats cs ON hps.store_sk IN (SELECT DISTINCT ss.store_sk FROM store_sales ss WHERE ss.ticket_number IS NOT NULL)
WHERE 
    (cs.total_spent > 1000 OR cs.order_count > 10)
    AND (cs.cd_gender IS NOT NULL OR cs.cd_marital_status IS NOT NULL)
ORDER BY 
    hps.total_profit DESC, cs.total_spent DESC;
