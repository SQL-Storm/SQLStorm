WITH RankedReturns AS (
    SELECT
        cr.returning_customer_sk,
        SUM(cr.return_quantity) AS total_returned,
        COUNT(cr.returning_cdemo_sk) AS return_count,
        RANK() OVER (PARTITION BY cr.returning_customer_sk ORDER BY SUM(cr.return_quantity) DESC) AS rnk
    FROM catalog_returns cr
    GROUP BY cr.returning_customer_sk
),
ReturnDetails AS (
    SELECT
        r.returning_customer_sk,
        r.total_returned,
        r.return_count,
        COALESCE(c.c_first_name || ' ' || c.c_last_name, 'Anonymous') AS customer_name,
        cd.cd_gender,
        cd.cd_marital_status
    FROM RankedReturns r
    LEFT JOIN customer c ON r.returning_customer_sk = c.c_customer_sk
    LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    WHERE r.total_returned > (SELECT AVG(total_returned) FROM RankedReturns)
),
RecentSales AS (
    SELECT
        ws_bill_customer_sk,
        SUM(ws_sales_price) AS total_sales,
        COUNT(ws_order_number) AS sales_count
    FROM web_sales
    WHERE ws_sold_date_sk >= (SELECT MAX(d_date_sk) FROM date_dim WHERE d_date = cast('2002-10-01' as date))
    GROUP BY ws_bill_customer_sk
)
SELECT
    rd.customer_name,
    rd.total_returned,
    rd.return_count,
    COALESCE(rs.total_sales, 0) AS total_sales,
    rs.sales_count,
    CASE
        WHEN rd.cd_gender = 'M' THEN 'Male'
        WHEN rd.cd_gender = 'F' THEN 'Female'
        ELSE 'Not Specified'
   END AS gender_desc,
   CASE
        WHEN rd.cd_marital_status = 'M' THEN 'Married'
        WHEN rd.cd_marital_status = 'S' THEN 'Single'
        ELSE 'Unknown'
   END AS marital_status_desc,
   CASE 
        WHEN rd.return_count >= 5 THEN 'High Returner'
        WHEN rd.return_count BETWEEN 2 AND 4 THEN 'Moderate Returner'
        ELSE 'Low Returner'
   END AS returner_category,
   DENSE_RANK() OVER (ORDER BY rd.total_returned DESC) AS return_rank
FROM ReturnDetails rd
LEFT JOIN RecentSales rs ON rd.returning_customer_sk = rs.ws_bill_customer_sk
WHERE (rd.total_returned > 0 OR rd.return_count IS NOT NULL);