
WITH RECURSIVE sales_cte AS (
    SELECT 
        ws_item_sk, 
        SUM(ws_quantity) AS total_quantity,
        SUM(ws_ext_sales_price) AS total_sales,
        RANK() OVER (PARTITION BY ws_item_sk ORDER BY SUM(ws_ext_sales_price) DESC) AS sales_rank
    FROM web_sales
    WHERE ws_sold_date_sk > (SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = 2021)
    GROUP BY ws_item_sk
), 
customer_return_summary AS (
    SELECT 
        cr_returning_customer_sk,
        COUNT(*) AS total_returns,
        SUM(cr_return_amount) AS total_return_amount,
        AVG(cr_return_quantity) AS average_return_quantity,
        SUM(cr_fee) AS total_return_fee
    FROM catalog_returns
    GROUP BY cr_returning_customer_sk
), 
store_sales_summary AS (
    SELECT 
        ss_store_sk,
        SUM(ss_ext_sales_price) AS total_store_sales,
        AVG(ss_net_profit) AS average_net_profit
    FROM store_sales
    WHERE ss_sold_date_sk IN (SELECT d_date_sk FROM date_dim WHERE d_year IN (2021, 2022))
    GROUP BY ss_store_sk
)
SELECT 
    c.c_customer_id,
    c.c_first_name,
    c.c_last_name,
    s.total_store_sales,
    r.total_returns,
    r.total_return_amount
FROM customer c
LEFT JOIN store_sales_summary s ON c.c_customer_sk = s.ss_store_sk
LEFT JOIN customer_return_summary r ON c.c_customer_sk = r.cr_returning_customer_sk
WHERE c.c_customer_sk IS NOT NULL
AND (s.total_sales > 10000 OR r.total_returns > 5)
ORDER BY s.total_store_sales DESC, r.total_return_amount DESC
LIMIT 100;
