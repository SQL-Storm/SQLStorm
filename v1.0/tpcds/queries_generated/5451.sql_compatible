
WITH RankedReturns AS (
    SELECT 
        cr_returning_customer_sk,
        SUM(cr_return_quantity) AS total_returned_quantity,
        SUM(cr_return_amount) AS total_returned_amount,
        ROW_NUMBER() OVER (PARTITION BY cr_returning_customer_sk ORDER BY SUM(cr_return_quantity) DESC) AS rn
    FROM 
        catalog_returns
    GROUP BY 
        cr_returning_customer_sk
),
CustomerMetrics AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        SUM(ws.ws_quantity) AS total_purchased_quantity,
        SUM(ws.ws_net_profit) AS total_net_profit,
        COALESCE(rr.total_returned_quantity, 0) AS total_returned_quantity,
        COALESCE(rr.total_returned_amount, 0) AS total_returned_amount
    FROM 
        customer c
    LEFT JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_ship_customer_sk
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN 
        RankedReturns rr ON c.c_customer_sk = rr.cr_returning_customer_sk
    GROUP BY 
        c.c_customer_sk, c.c_first_name, c.c_last_name, cd.cd_gender, cd.cd_marital_status
)
SELECT 
    cm.c_customer_sk,
    cm.c_first_name,
    cm.c_last_name,
    cm.cd_gender,
    cm.cd_marital_status,
    cm.total_purchased_quantity,
    cm.total_net_profit,
    cm.total_returned_quantity,
    cm.total_returned_amount,
    CASE 
        WHEN cm.total_returned_quantity = 0 THEN 0 
        ELSE (cm.total_returned_amount / cm.total_returned_quantity)
    END AS avg_return_amount_per_item
FROM 
    CustomerMetrics cm
WHERE 
    cm.total_purchased_quantity > 10
ORDER BY 
    cm.total_net_profit DESC;
