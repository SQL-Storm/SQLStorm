
WITH RankedStores AS (
    SELECT 
        s_store_sk,
        s_store_name,
        s_number_employees,
        RANK() OVER (PARTITION BY s_state ORDER BY s_number_employees DESC) AS emp_rank
    FROM 
        store
    WHERE 
        s_number_employees IS NOT NULL
), 
CustomerPurchases AS (
    SELECT 
        c.c_customer_sk,
        SUM(ws.ws_quantity) AS total_quantity,
        SUM(ws.ws_sales_price) AS total_spent,
        COUNT(DISTINCT ws.ws_order_number) AS order_count
    FROM 
        customer c
        JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    WHERE 
        c.c_birth_year BETWEEN 1980 AND 1990
    GROUP BY 
        c.c_customer_sk
    HAVING 
        SUM(ws.ws_sales_price) > (SELECT AVG(ws_ext_sales_price) FROM web_sales WHERE ws_ship_date_sk IS NOT NULL)
), 
SalesWithTotals AS (
    SELECT 
        ws.ws_item_sk,
        SUM(ws.ws_quantity) AS total_sold,
        COUNT(ws.ws_order_number) AS order_count,
        SUM(ws.ws_net_profit) AS total_profit
    FROM 
        web_sales ws
    GROUP BY 
        ws.ws_item_sk
    HAVING 
        SUM(ws.ws_quantity) > 100
)
SELECT 
    ca.ca_address_sk,
    ca.ca_city,
    ca.ca_state,
    COUNT(DISTINCT cp.c_customer_sk) AS customer_count,
    COALESCE(SUM(cp.total_spent), 0) AS total_customer_spent,
    COALESCE(SUM(st.total_sold), 0) AS total_item_sales,
    CASE 
        WHEN SUM(st.total_sold) IS NULL OR SUM(st.total_sold) = 0 THEN 'No sales'
        ELSE 'Sales present'
    END AS sales_status
FROM 
    customer_address ca
    LEFT JOIN CustomerPurchases cp ON ca.ca_address_sk = cp.c_customer_sk
    LEFT JOIN SalesWithTotals st ON st.ws_item_sk = cp.c_customer_sk
    LEFT JOIN RankedStores rs ON rs.s_store_sk = (SELECT s.s_store_sk FROM store s WHERE s.s_store_name = cp.c_first_name ORDER BY s.s_number_employees DESC LIMIT 1)
WHERE 
    ca.ca_city IS NOT NULL OR ca.ca_state IS NOT NULL
GROUP BY 
    ca.ca_address_sk,
    ca.ca_city,
    ca.ca_state
HAVING 
    COUNT(DISTINCT cp.c_customer_sk) >= 5 AND 
    COALESCE(SUM(st.total_sold), 0) > 50 
ORDER BY 
    customer_count DESC, 
    total_customer_spent DESC;
