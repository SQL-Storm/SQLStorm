
WITH SalesData AS (
    SELECT 
        ss.ss_sold_date_sk,
        ss.ss_item_sk,
        ss.ss_quantity,
        ss.ss_net_paid,
        DENSE_RANK() OVER (PARTITION BY ss.ss_item_sk ORDER BY ss.ss_sold_date_sk DESC) AS RecentSales
    FROM 
        store_sales ss
    WHERE 
        ss.ss_sold_date_sk >= (SELECT MAX(ss2.ss_sold_date_sk) FROM store_sales ss2) - INTERVAL '30 DAY'
),
CustomerDemographics AS (
    SELECT 
        c.c_customer_sk,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_income_band_sk,
        hd.hd_income_band_sk,
        hd.hd_buy_potential,
        MAX(cd.cd_purchase_estimate) AS MaxPurchaseEstimate
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk 
    LEFT JOIN 
        household_demographics hd ON cd.cd_demo_sk = hd.hd_demo_sk
    GROUP BY 
        c.c_customer_sk, cd.cd_gender, cd.cd_marital_status, cd.cd_income_band_sk, hd.hd_income_band_sk, hd.hd_buy_potential
),
IncomeBand AS (
    SELECT 
        ib.ib_income_band_sk,
        COUNT(*) AS CustomersInBand
    FROM 
        CustomerDemographics cd
    JOIN 
        income_band ib ON cd.cd_income_band_sk = ib.ib_income_band_sk
    GROUP BY 
        ib.ib_income_band_sk
),
AggregatedSales AS (
    SELECT 
        sd.ss_item_sk,
        SUM(sd.ss_quantity) AS TotalQuantity,
        SUM(sd.ss_net_paid) AS TotalNetPaid,
        COUNT(DISTINCT cd.c_customer_sk) AS UniqueCustomers
    FROM 
        SalesData sd
    JOIN 
        CustomerDemographics cd ON sd.ss_item_sk IN (SELECT i.i_item_sk FROM item i WHERE i.i_current_price IS NOT NULL)
    GROUP BY 
        sd.ss_item_sk
)
SELECT 
    ib.ib_income_band_sk,
    ib.CustomersInBand,
    as_data.TotalQuantity,
    as_data.TotalNetPaid,
    as_data.UniqueCustomers,
    (CASE 
        WHEN as_data.UniqueCustomers IS NULL OR as_data.UniqueCustomers = 0 THEN 'N/A'
        ELSE ROUND(as_data.TotalNetPaid / NULLIF(as_data.UniqueCustomers, 0), 2)
    END) AS AverageSpendPerCustomer
FROM 
    IncomeBand ib
LEFT JOIN 
    AggregatedSales as_data ON ib.ib_income_band_sk = as_data.ss_item_sk
ORDER BY 
    ib.ib_income_band_sk;
