
WITH RankedSales AS (
    SELECT 
        ws.web_site_id,
        SUM(ws.net_profit) AS total_net_profit,
        ROW_NUMBER() OVER (PARTITION BY ws.web_site_id ORDER BY SUM(ws.net_profit) DESC) AS rank
    FROM 
        web_sales AS ws
    JOIN 
        date_dim AS dd ON ws.sold_date_sk = dd.d_date_sk
    WHERE 
        dd.d_year = 2023
    GROUP BY 
        ws.web_site_id
), CustomerReturns AS (
    SELECT
        wr.returning_customer_sk,
        COALESCE(SUM(wr.return_amt), 0) AS total_return_amount,
        (SELECT COUNT(DISTINCT wr2.returning_customer_sk) 
         FROM web_returns AS wr2
         WHERE wr2.returning_customer_sk = wr.returning_customer_sk) AS return_count
    FROM 
        web_returns AS wr
    GROUP BY 
        wr.returning_customer_sk
), CustomerDetails AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_purchase_estimate,
        CASE 
            WHEN cd.cd_credit_rating IS NULL THEN 'No Rating' 
            ELSE cd.cd_credit_rating 
        END AS credit_rating
    FROM 
        customer AS c
    LEFT JOIN 
        customer_demographics AS cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
), TopWebSales AS (
    SELECT 
        r.web_site_id,
        r.total_net_profit,
        r.rank,
        cd.c_first_name,
        cd.c_last_name,
        cd.credit_rating,
        cr.total_return_amount,
        cr.return_count
    FROM 
        RankedSales AS r
    JOIN 
        CustomerDetails AS cd ON r.web_site_id = cd.c_customer_sk
    LEFT JOIN 
        CustomerReturns AS cr ON cd.c_customer_sk = cr.returning_customer_sk
    WHERE 
        r.rank = 1
)
SELECT 
    CONCAT(ts.c_first_name, ' ', ts.c_last_name) AS customer_name,
    w.warehouse_name,
    ts.total_net_profit,
    ts.total_return_amount,
    CASE 
        WHEN ts.return_count > 2 THEN 'Frequent Returner' 
        ELSE 'Occasional Returner' 
    END AS return_behaviour,
    COALESCE(SUM(ws.ws_quantity), 0) AS total_quantity_sold
FROM 
    TopWebSales AS ts
JOIN 
    store AS s ON ts.web_site_id = s.s_store_id
JOIN 
    item AS i ON i.i_item_sk = ws.ws_item_sk
JOIN 
    warehouse AS w ON s.s_store_sk = w.w_warehouse_sk
LEFT JOIN 
    web_sales AS ws ON ts.web_site_id = ws.ws_web_site_sk
GROUP BY 
    ts.c_first_name, ts.c_last_name, w.warehouse_name, ts.total_net_profit, ts.total_return_amount, ts.return_count
HAVING 
    COALESCE(SUM(ws.ws_quantity), 0) > 50
ORDER BY 
    ts.total_net_profit DESC;
