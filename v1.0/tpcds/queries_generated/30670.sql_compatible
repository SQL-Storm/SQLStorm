
WITH RECURSIVE Sales_CTE AS (
    SELECT ss_item_sk, SUM(ss_sales_price) AS total_sales, COUNT(DISTINCT ss_ticket_number) AS sale_count
    FROM store_sales
    WHERE ss_sold_date_sk IN (SELECT d_date_sk FROM date_dim WHERE d_year = 2001)
    GROUP BY ss_item_sk
    UNION ALL
    SELECT ss_item_sk, SUM(ss_sales_price) + 100 AS total_sales, sale_count  
    FROM store_sales
    WHERE ss_item_sk IN (SELECT DISTINCT ss_item_sk FROM store_sales WHERE ss_sold_date_sk < (SELECT MAX(ss_sold_date_sk) FROM store_sales))
    GROUP BY ss_item_sk
)
SELECT 
    c.c_customer_id,
    CONCAT(c.c_first_name, ' ', c.c_last_name) AS full_name,
    SUM(ws.ws_sales_price) AS total_web_sales,
    AVG(ws.ws_net_paid_inc_tax) AS average_net_paid,
    COUNT(DISTINCT ws.ws_order_number) AS order_count,
    COUNT(DISTINCT sr.ticket_number) FILTER (WHERE sr.return_quantity > 0) AS total_returns,
    ROW_NUMBER() OVER (PARTITION BY c.c_customer_id ORDER BY SUM(ws.ws_net_paid_inc_tax) DESC) AS sale_rank
FROM customer c
LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
LEFT JOIN store_returns sr ON c.c_customer_sk = sr.sr_customer_sk
WHERE c.c_birth_year BETWEEN 1980 AND 1990
GROUP BY c.c_customer_id, c.c_first_name, c.c_last_name
HAVING SUM(ws.ws_sales_price) > 1000 AND COUNT(DISTINCT ws.ws_order_number) > 5
ORDER BY total_web_sales DESC
LIMIT 10;
