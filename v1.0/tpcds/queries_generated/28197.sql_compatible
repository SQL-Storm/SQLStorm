
WITH AddressSummary AS (
    SELECT 
        ca_state, 
        COUNT(DISTINCT ca_address_id) AS unique_addresses, 
        COUNT(DISTINCT ca_city) AS unique_cities, 
        AVG(ca_gmt_offset) AS avg_gmt_offset
    FROM 
        customer_address
    GROUP BY 
        ca_state
),
CustomerDemographics AS (
    SELECT 
        cd_gender, 
        SUM(cd_dep_count) AS total_dependents, 
        AVG(cd_purchase_estimate) AS avg_purchase_estimate
    FROM 
        customer_demographics
    GROUP BY 
        cd_gender
),
SalesData AS (
    SELECT 
        CASE 
            WHEN ws_sales_price < 50 THEN 'Low'
            WHEN ws_sales_price BETWEEN 50 AND 100 THEN 'Medium'
            ELSE 'High'
        END AS price_range,
        COUNT(ws_order_number) AS order_count,
        SUM(ws_ext_sales_price) AS total_sales
    FROM 
        web_sales
    GROUP BY 
        CASE 
            WHEN ws_sales_price < 50 THEN 'Low'
            WHEN ws_sales_price BETWEEN 50 AND 100 THEN 'Medium'
            ELSE 'High'
        END
)
SELECT 
    AS.ca_state, 
    AS.unique_addresses, 
    AS.unique_cities, 
    AS.avg_gmt_offset, 
    CD.cd_gender, 
    CD.total_dependents, 
    CD.avg_purchase_estimate, 
    SD.price_range, 
    SD.order_count, 
    SD.total_sales
FROM 
    AddressSummary AS AS
JOIN 
    CustomerDemographics AS CD ON AS.ca_state = (SELECT ca_state FROM customer_address WHERE ca_address_sk = CD.cd_demo_sk LIMIT 1)
JOIN 
    SalesData AS SD ON SD.price_range IN ('Low', 'Medium', 'High')
ORDER BY 
    AS.ca_state, 
    CD.cd_gender, 
    SD.price_range;
