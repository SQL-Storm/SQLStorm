WITH RankedReturns AS (
    SELECT 
        cr_returning_customer_sk,
        SUM(cr_return_quantity) AS total_return_quantity,
        COUNT(DISTINCT cr_order_number) AS total_returns,
        ROW_NUMBER() OVER (PARTITION BY cr_returning_customer_sk ORDER BY SUM(cr_return_quantity) DESC) AS rank
    FROM 
        catalog_returns
    GROUP BY 
        cr_returning_customer_sk
),
CustomerDemographics AS (
    SELECT 
        cd_demo_sk,
        cd_gender,
        cd_marital_status,
        cd_education_status,
        CASE 
            WHEN cd_gender = 'M' THEN 'Male'
            WHEN cd_gender = 'F' THEN 'Female'
            ELSE 'Unknown'
        END AS gender_desc,
        ib_income_band_sk,
        hd_buy_potential
    FROM 
        customer_demographics
    LEFT JOIN household_demographics ON cd_demo_sk = hd_demo_sk
),
EnhancedSales AS (
    SELECT 
        ws_item_sk,
        SUM(ws_quantity) AS total_sales_quantity,
        SUM(ws_net_profit) AS total_net_profit,
        SUM(ws_ext_sales_price) AS total_sales_value,
        AVG(ws_sales_price) AS average_sales_price,
        MAX(ws_sold_date_sk) AS last_sale_date
    FROM 
        web_sales
    GROUP BY 
        ws_item_sk
),
SalesLateReturns AS (
    SELECT 
        cr_returning_customer_sk,
        cr_item_sk,
        SUM(cr_return_quantity) AS late_return_quantity
    FROM 
        catalog_returns
    WHERE 
        cr_returned_date_sk > (SELECT MAX(d_date_sk) FROM date_dim WHERE d_dow = 5)  
    GROUP BY 
        cr_returning_customer_sk, cr_item_sk
)
SELECT 
    cd.gender_desc,
    cd.marital_status,
    es.total_sales_quantity,
    es.total_net_profit,
    es.total_sales_value,
    COALESCE(rr.total_return_quantity, 0) AS total_return_quantity,
    COALESCE(lr.late_return_quantity, 0) AS late_return_quantity
FROM 
    CustomerDemographics cd
LEFT JOIN EnhancedSales es ON cd.cd_demo_sk = es.ws_item_sk
LEFT JOIN RankedReturns rr ON cd.cd_demo_sk = rr.cr_returning_customer_sk AND rr.rank = 1
LEFT JOIN SalesLateReturns lr ON lr.cr_returning_customer_sk = cd.cd_demo_sk
ORDER BY 
    es.total_sales_value DESC, 
    cd.marital_status, 
    cd.gender_desc DESC
LIMIT 50
OFFSET (SELECT COUNT(*) FROM customer) * 0.1
WITH TIES;