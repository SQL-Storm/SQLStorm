
WITH RecursiveAddress AS (
    SELECT ca_address_sk, ca_city, ca_state, ca_country
    FROM customer_address
    WHERE ca_country IS NOT NULL

    UNION ALL

    SELECT ca_address_sk, 'Unknown City' AS ca_city, 'Unknown State' AS ca_state, 'Unknown Country' AS ca_country
    FROM RecursiveAddress
    WHERE ca_city IS NULL OR ca_state IS NULL OR ca_country IS NULL
),
AggregateCustomer AS (
    SELECT 
        c.c_customer_id,
        cd.cd_gender,
        COUNT(DISTINCT c.c_customer_sk) AS customer_count,
        SUM(COALESCE(cr.return_quantity, 0)) AS total_returns,
        AVG(COALESCE(ws.ws_sales_price, 0)) AS avg_sales_price,
        MAX(COALESCE(ws.ws_net_profit, 0)) AS max_net_profit,
        COUNT(DISTINCT ws.ws_order_number) AS total_orders
    FROM customer c
    LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    LEFT JOIN catalog_returns cr ON c.c_customer_sk = cr.cr_returning_customer_sk
    GROUP BY c.c_customer_id, cd.cd_gender
),
ReturnAnalysis AS (
    SELECT
        a.ca_country,
        a.ca_state,
        a.ca_city,
        ac.customer_count,
        ac.total_returns,
        ac.avg_sales_price,
        ac.max_net_profit,
        CASE 
            WHEN ac.total_orders > 0 THEN (ac.total_returns / NULLIF(ac.total_orders, 0)) * 100
            ELSE 0
        END AS return_percentage
    FROM RecursiveAddress a
    JOIN AggregateCustomer ac ON a.ca_address_sk = ac.customer_count  
)
SELECT 
    r.ca_country,
    r.ca_state,
    r.ca_city,
    r.customer_count,
    r.total_returns,
    r.avg_sales_price,
    r.max_net_profit,
    r.return_percentage,
    CASE 
        WHEN r.return_percentage IS NULL THEN 'No Data'
        WHEN r.return_percentage > 50 THEN 'High Return'
        WHEN r.return_percentage BETWEEN 20 AND 50 THEN 'Medium Return'
        ELSE 'Low Return'
    END AS return_category
FROM ReturnAnalysis r
WHERE r.return_percentage IS NOT NULL
ORDER BY r.return_percentage DESC
FETCH FIRST 10 ROWS ONLY;
