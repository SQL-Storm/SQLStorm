
WITH ranked_sales AS (
    SELECT 
        ws_item_sk,
        ws_order_number,
        ws_quantity,
        ws_sales_price,
        RANK() OVER (PARTITION BY ws_item_sk ORDER BY ws_sales_price DESC) AS sales_rank
    FROM web_sales
),
total_sales AS (
    SELECT 
        ws_item_sk,
        SUM(ws_sales_price) AS total_sales_value
    FROM ranked_sales
    WHERE sales_rank <= 3
    GROUP BY ws_item_sk
),
top_items AS (
    SELECT 
        i.i_item_id,
        t.total_sales_value,
        ROW_NUMBER() OVER (ORDER BY t.total_sales_value DESC) AS item_rank
    FROM item i
    JOIN total_sales t ON i.i_item_sk = t.ws_item_sk
    WHERE i.i_current_price IS NOT NULL
),
item_category AS (
    SELECT 
        i.i_item_id, 
        COALESCE(ic.ic_category, 'Unknown') AS category 
    FROM item i
    LEFT JOIN item_category ic ON i.i_category_id = ic.ic_category_id
),
final_selection AS (
    SELECT 
        ti.item_rank,
        ti.i_item_id,
        ic.category,
        ti.total_sales_value,
        CASE 
            WHEN ti.total_sales_value IS NULL THEN 'No Sales'
            ELSE 'Sales Present'
        END AS sales_status
    FROM top_items ti
    JOIN item_category ic ON ti.i_item_id = ic.i_item_id
    WHERE ti.item_rank <= 10
)
SELECT 
    fs.item_rank,
    fs.i_item_id,
    fs.category,
    fs.total_sales_value,
    fs.sales_status,
    CASE 
        WHEN fs.sales_status = 'No Sales' THEN NULL 
        ELSE ROUND(fs.total_sales_value / NULLIF((SELECT SUM(total_sales_value) FROM total_sales), 0), 2) 
    END AS sales_percentage_of_total
FROM final_selection fs
ORDER BY fs.item_rank;
