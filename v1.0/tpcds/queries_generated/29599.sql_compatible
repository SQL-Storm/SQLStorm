
WITH processed_customer_info AS (
    SELECT 
        c.c_customer_sk,
        CONCAT(c.c_first_name, ' ', c.c_last_name) AS full_name,
        LOWER(c.c_email_address) AS normalized_email,
        d.d_year AS birth_year,
        cd.cd_marital_status AS marital_status,
        cd.cd_gender AS gender,
        ca.ca_city AS city,
        ca.ca_state AS state,
        ca.ca_country AS country,
        LEFT(c.c_birth_country, 3) AS birth_country_code,
        CASE 
            WHEN cd.cd_dep_count > 2 THEN 'Large Family'
            WHEN cd.cd_dep_count = 2 THEN 'Small Family'
            ELSE 'Single'
        END AS family_size_category
    FROM customer c
    JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    JOIN customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
    JOIN date_dim d ON d.d_date_sk = c.c_first_shipto_date_sk
),
customer_purchases AS (
    SELECT
        c.c_customer_sk,
        SUM(ws.ws_ext_sales_price) AS total_spent,
        COUNT(ws.ws_order_number) AS total_orders
    FROM processed_customer_info c
    LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY c.c_customer_sk
),
benchmark AS (
    SELECT
        pci.full_name,
        pci.normalized_email,
        pci.birth_year,
        pci.marital_status,
        pci.gender,
        pci.city,
        pci.state,
        pci.country,
        pci.birth_country_code,
        pci.family_size_category,
        cp.total_spent,
        cp.total_orders,
        COUNT(*) OVER() AS total_customers
    FROM processed_customer_info pci
    LEFT JOIN customer_purchases cp ON pci.c_customer_sk = cp.customer_sk
)
SELECT 
    full_name,
    normalized_email,
    total_spent,
    total_orders,
    birth_year,
    marital_status,
    gender,
    city,
    state,
    country,
    birth_country_code,
    family_size_category,
    total_customers
FROM benchmark
WHERE total_spent > 1000
ORDER BY total_spent DESC, full_name;
