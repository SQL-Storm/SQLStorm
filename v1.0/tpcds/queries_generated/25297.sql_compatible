
WITH CustomerAddressInfo AS (
    SELECT
        ca.ca_address_sk,
        CONCAT(ca.ca_street_number, ' ', ca.ca_street_name, ' ', ca.ca_street_type, 
               CASE WHEN ca.ca_suite_number IS NOT NULL THEN CONCAT(' Suite ', ca.ca_suite_number) ELSE '' END) AS full_address,
        ca.ca_city,
        ca.ca_state,
        ca.ca_zip,
        ca.ca_country
    FROM
        customer_address ca
),
CustomerInfo AS (
    SELECT
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_education_status,
        ca.full_address,
        ca.ca_city,
        ca.ca_state,
        c.c_current_cdemo_sk
    FROM
        customer c
    JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    JOIN CustomerAddressInfo ca ON c.c_current_addr_sk = ca.ca_address_sk
),
AggregateSales AS (
    SELECT
        c.c_customer_sk,
        SUM(ws.ws_ext_sales_price) AS total_sales,
        COUNT(ws.ws_order_number) AS order_count
    FROM
        web_sales ws
    JOIN CustomerInfo c ON ws.ws_bill_customer_sk = c.c_customer_sk
    GROUP BY
        c.c_customer_sk
),
IncomeDemographics AS (
    SELECT
        hd.hd_demo_sk,
        ib.ib_lower_bound,
        ib.ib_upper_bound
    FROM
        household_demographics hd
    JOIN income_band ib ON hd.hd_income_band_sk = ib.ib_income_band_sk
),
FinalResults AS (
    SELECT
        ci.c_first_name,
        ci.c_last_name,
        ci.cd_gender,
        ci.cd_marital_status,
        ci.cd_education_status,
        ci.full_address,
        ci.ca_city,
        ci.ca_state,
        ca.ca_zip,
        ca.ca_country,
        COALESCE(asales.total_sales, 0) AS total_sales,
        COALESCE(asales.order_count, 0) AS order_count,
        id.ib_lower_bound,
        id.ib_upper_bound
    FROM
        CustomerInfo ci
    LEFT JOIN AggregateSales asales ON ci.c_customer_sk = asales.c_customer_sk
    LEFT JOIN IncomeDemographics id ON ci.c_current_cdemo_sk = id.hd_demo_sk
)
SELECT
    *,
    CASE 
        WHEN total_sales > 1000 THEN 'High Value Customer'
        WHEN total_sales > 500 THEN 'Medium Value Customer'
        ELSE 'Low Value Customer'
    END AS customer_value_segment
FROM
    FinalResults
ORDER BY
    total_sales DESC;
