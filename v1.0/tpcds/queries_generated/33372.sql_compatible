
WITH RECURSIVE CustomerHierarchy AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        c.c_preferred_cust_flag,
        c.c_birth_year,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_purchase_estimate,
        cd.cd_credit_rating,
        1 AS level
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    WHERE 
        c.c_birth_year IS NOT NULL
    UNION ALL
    SELECT 
        ch.c_customer_sk,
        ch.c_first_name,
        ch.c_last_name,
        ch.c_preferred_cust_flag,
        ch.c_birth_year,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_purchase_estimate,
        cd.cd_credit_rating,
        ch.level + 1
    FROM 
        CustomerHierarchy ch
    JOIN 
        customer c ON c.c_current_cdemo_sk = ch.c_customer_sk
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
)
SELECT 
    COUNT(DISTINCT ch.c_customer_sk) AS total_customers,
    SUM(CASE WHEN cd.cd_gender = 'F' THEN 1 ELSE 0 END) AS female_customers,
    AVG(cd.cd_purchase_estimate) AS avg_purchase_estimate,
    MAX(ch.level) AS max_level,
    MIN(ch.c_birth_year) AS oldest_customer_year,
    cd.cd_credit_rating
FROM 
    CustomerHierarchy ch
LEFT JOIN 
    customer_demographics cd ON ch.c_customer_sk = cd.cd_demo_sk
WHERE 
    ch.c_preferred_cust_flag = 'Y'
    AND (cd.cd_marital_status = 'M' OR cd.cd_marital_status IS NULL)
GROUP BY 
    cd.cd_credit_rating
HAVING 
    COUNT(DISTINCT ch.c_customer_sk) > 5 
ORDER BY 
    avg_purchase_estimate DESC
LIMIT 100
OFFSET 0;
