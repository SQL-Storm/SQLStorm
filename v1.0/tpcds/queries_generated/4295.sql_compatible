
WITH RankedSales AS (
    SELECT 
        ws.bill_customer_sk,
        ws.web_site_sk,
        SUM(ws.net_paid_inc_tax) AS total_sales,
        RANK() OVER (PARTITION BY ws.bill_customer_sk ORDER BY SUM(ws.net_paid_inc_tax) DESC) AS rank_sales
    FROM web_sales ws
    JOIN customer c ON ws.bill_customer_sk = c.c_customer_sk
    WHERE ws.sold_date_sk IN (
        SELECT d_date_sk
        FROM date_dim
        WHERE d_year = 2023 AND d_month_seq BETWEEN 1 AND 6
    )
    GROUP BY ws.bill_customer_sk, ws.web_site_sk
),
CustomerDemographics AS (
    SELECT 
        cd_demo_sk,
        cd_gender,
        cd_marital_status,
        cd_income_band_sk,
        CASE 
            WHEN cd_gender = 'M' AND cd_marital_status = 'M' THEN 'Married Male'
            WHEN cd_gender = 'F' AND cd_marital_status = 'M' THEN 'Married Female'
            WHEN cd_gender = 'M' THEN 'Single Male'
            ELSE 'Single Female'
        END AS demographic_group
    FROM customer_demographics
),
IncomeSegments AS (
    SELECT 
        ib_income_band_sk,
        (ib_lower_bound + ib_upper_bound) / 2 AS average_income
    FROM income_band
),
SalesDetails AS (
    SELECT 
        r.bill_customer_sk,
        r.total_sales,
        cd.cd_gender AS gender,
        cd.demographic_group,
        is.average_income AS avg_income,
        CASE 
            WHEN r.total_sales > 1000 THEN 'High Roller'
            WHEN r.total_sales BETWEEN 500 AND 1000 THEN 'Moderate'
            ELSE 'Low Spender'
        END AS spending_category
    FROM RankedSales r
    JOIN CustomerDemographics cd ON r.bill_customer_sk = cd.cd_demo_sk
    LEFT JOIN IncomeSegments is ON cd.cd_income_band_sk = is.ib_income_band_sk
)

SELECT 
    sd.demographic_group,
    sd.spending_category,
    COUNT(*) AS number_of_customers,
    AVG(sd.total_sales) AS avg_sales,
    SUM(sd.total_sales) AS total_spent
FROM SalesDetails sd
WHERE sd.avg_income IS NOT NULL
GROUP BY sd.demographic_group, sd.spending_category
HAVING COUNT(*) > 5
ORDER BY total_spent DESC;
