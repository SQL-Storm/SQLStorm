
WITH sales_summary AS (
    SELECT 
        ws.web_site_id, 
        SUM(ws.ws_net_paid) AS total_sales,
        COUNT(DISTINCT ws.ws_order_number) AS total_orders,
        AVG(ws.ws_net_profit) AS avg_profit
    FROM 
        web_sales ws
        LEFT JOIN customer c ON ws.ws_bill_customer_sk = c.c_customer_sk
    WHERE 
        c.c_birth_year IS NOT NULL
        AND c.c_birth_month BETWEEN 1 AND 6
    GROUP BY 
        ws.web_site_id
),
promotions AS (
    SELECT 
        p.p_promo_id,
        p.p_discount_active,
        COUNT(DISTINCT p.p_item_sk) AS active_items
    FROM 
        promotion p
    WHERE 
        p.p_channel_email = 'Y'
        AND p.p_discount_active = 'Y'
    GROUP BY 
        p.p_promo_id, p.p_discount_active
),
warehouse_sales AS (
    SELECT 
        w.w_warehouse_id,
        SUM(ss.ss_net_paid) AS total_store_sales
    FROM 
        warehouse w
        INNER JOIN store s ON w.w_warehouse_sk = s.s_store_sk
        LEFT JOIN store_sales ss ON s.s_store_sk = ss.ss_store_sk
    WHERE 
        w.w_country IS NOT NULL
    GROUP BY 
        w.w_warehouse_id
)
SELECT 
    s.web_site_id, 
    s.total_sales,
    s.total_orders,
    s.avg_profit,
    COALESCE(ws.total_store_sales, 0) AS total_store_sales,
    CASE 
        WHEN s.total_sales > 10000 THEN 'High Volume'
        ELSE 'Low Volume'
    END AS sales_category,
    p.p_promo_id,
    p.active_items 
FROM 
    sales_summary s
    LEFT JOIN warehouse_sales ws ON s.web_site_id = ws.w_warehouse_id
    FULL OUTER JOIN promotions p ON s.total_orders > 50 AND p.active_items >= 5
WHERE 
    (s.total_sales IS NOT NULL OR ws.total_store_sales IS NOT NULL)
ORDER BY 
    sales_category DESC, 
    s.total_sales DESC 
LIMIT 100;
