
WITH RECURSIVE CustomerHierarchy AS (
    SELECT c.c_customer_sk, c.c_first_name, c.c_last_name, 
           c.c_current_cdemo_sk, 0 AS level
    FROM customer c
    WHERE c.c_current_cdemo_sk IS NOT NULL
    UNION ALL
    SELECT c.c_customer_sk, c.c_first_name, c.c_last_name, 
           c.c_current_cdemo_sk, ch.level + 1
    FROM customer c
    JOIN CustomerHierarchy ch ON c.c_current_cdemo_sk = ch.c_customer_sk
),
SalesData AS (
    SELECT 
        ws.ws_sold_date_sk,
        ws.ws_item_sk,
        SUM(ws.ws_net_sales) AS total_sales,
        COUNT(DISTINCT ws.ws_order_number) AS order_count
    FROM web_sales ws
    GROUP BY ws.ws_sold_date_sk, ws.ws_item_sk
),
AddressDetails AS (
    SELECT 
        ca.ca_address_sk,
        CONCAT(ca.ca_street_number, ' ', ca.ca_street_name, ' ', ca.ca_street_type) AS full_address,
        ca.ca_city, 
        ca.ca_state, 
        ca.ca_country
    FROM customer_address ca
),
Demographics AS (
    SELECT 
        cd.cd_demo_sk,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_education_status
    FROM customer_demographics cd
),
AggregateSales AS (
    SELECT 
        sd.ws_item_sk,
        SUM(sd.total_sales) AS total_sales,
        SUM(sd.order_count) AS total_orders
    FROM SalesData sd
    GROUP BY sd.ws_item_sk
),
FinalReport AS (
    SELECT 
        h.c_customer_sk,
        h.c_first_name,
        h.c_last_name,
        a.full_address,
        d.cd_gender,
        d.cd_marital_status,
        COALESCE(s.total_sales, 0) AS item_sales,
        COALESCE(s.total_orders, 0) AS item_orders
    FROM CustomerHierarchy h
    LEFT JOIN AddressDetails a ON h.c_customer_sk = a.ca_address_sk
    LEFT JOIN Demographics d ON h.c_current_cdemo_sk = d.cd_demo_sk
    LEFT JOIN AggregateSales s ON h.c_customer_sk = s.ws_item_sk
)
SELECT 
    fr.c_customer_sk,
    fr.c_first_name,
    fr.c_last_name,
    fr.full_address,
    fr.cd_gender,
    fr.cd_marital_status,
    fr.item_sales,
    fr.item_orders
FROM FinalReport fr
WHERE fr.item_sales > (
        SELECT AVG(total_sales)
        FROM AggregateSales
    )
ORDER BY fr.item_sales DESC
LIMIT 100;
