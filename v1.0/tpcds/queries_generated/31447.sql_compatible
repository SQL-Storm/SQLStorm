
WITH RECURSIVE income_summary AS (
    SELECT 
        cd.cd_demo_sk,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_education_status,
        hd.hd_income_band_sk,
        CASE 
            WHEN ib.ib_lower_bound IS NOT NULL THEN ib.ib_lower_bound 
            ELSE 0 
        END AS lower_bound,
        CASE 
            WHEN ib.ib_upper_bound IS NOT NULL THEN ib.ib_upper_bound 
            ELSE NULL 
        END AS upper_bound
    FROM customer_demographics cd
    LEFT JOIN household_demographics hd ON cd.cd_demo_sk = hd.hd_demo_sk
    LEFT JOIN income_band ib ON hd.hd_income_band_sk = ib.ib_income_band_sk
),
sales_data AS (
    SELECT
        ws_bill_customer_sk,
        COUNT(ws_order_number) AS total_orders,
        SUM(ws_ext_sales_price) AS total_sales,
        DENSE_RANK() OVER (PARTITION BY ws_bill_customer_sk ORDER BY SUM(ws_ext_sales_price) DESC) AS sales_rank
    FROM web_sales
    GROUP BY ws_bill_customer_sk
),
returns_data AS (
    SELECT
        cr_returning_customer_sk,
        COUNT(cr_order_number) AS total_returns,
        SUM(cr_return_amount) AS total_returns_amt,
        SUM(cr_return_qty) AS total_return_qty
    FROM catalog_returns
    GROUP BY cr_returning_customer_sk
),
final_summary AS (
    SELECT 
        is.cd_demo_sk,
        is.cd_gender,
        is.cd_marital_status,
        is.cd_education_status,
        sd.total_orders,
        sd.total_sales,
        COALESCE(rd.total_returns, 0) AS total_returns,
        COALESCE(rd.total_returns_amt, 0) AS total_returns_amt,
        COALESCE(rd.total_return_qty, 0) AS total_return_qty,
        ROW_NUMBER() OVER (ORDER BY sd.total_sales DESC) AS rank
    FROM income_summary is
    LEFT JOIN sales_data sd ON is.cd_demo_sk = sd.ws_bill_customer_sk
    LEFT JOIN returns_data rd ON is.cd_demo_sk = rd.cr_returning_customer_sk
)
SELECT 
    cd.cd_gender,
    SUM(fs.total_sales) AS total_sales_by_gender,
    AVG(fs.total_orders) AS avg_orders,
    SUM(fs.total_returns_amt) AS total_returns_by_gender
FROM final_summary fs
JOIN customer_demographics cd ON fs.cd_demo_sk = cd.cd_demo_sk
WHERE fs.total_orders > 5
GROUP BY 
    cd.cd_gender,
    fs.total_orders
HAVING AVG(fs.total_orders) > 1
ORDER BY total_sales_by_gender DESC;
