
WITH RECURSIVE address_hierarchy AS (
    SELECT ca_address_sk, ca_city, ca_state, 
           ROW_NUMBER() OVER (PARTITION BY ca_state ORDER BY ca_city) AS city_rank
    FROM customer_address
    WHERE ca_country IS NOT NULL
),
customer_metrics AS (
    SELECT c.c_customer_sk, 
           CONCAT(c.c_first_name, ' ', c.c_last_name) AS full_name,
           cd.cd_gender,
           cd.cd_marital_status,
           SUM(ws.ws_net_profit) AS total_profit,
           COUNT(DISTINCT ws.ws_order_number) AS order_count,
           MAX(ws.ws_sales_price) AS max_item_price,
           AVG(ws.ws_sales_price) OVER (PARTITION BY cd.cd_gender ORDER BY c.c_customer_sk) AS avg_price_by_gender
    FROM customer c
    JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_ship_customer_sk
    GROUP BY c.c_customer_sk, c.c_first_name, c.c_last_name, cd.cd_gender, cd.cd_marital_status
),
income_stats AS (
    SELECT cd.cd_marital_status, 
           COUNT(DISTINCT c.c_customer_id) AS customer_count,
           SUM(CASE WHEN cd.cd_gender = 'M' THEN 1 ELSE 0 END) AS male_count,
           SUM(CASE WHEN cd.cd_gender = 'F' THEN 1 ELSE 0 END) AS female_count,
           AVG(cm.total_profit) AS avg_profit
    FROM customer_metrics cm
    JOIN customer c ON cm.c_customer_sk = c.c_customer_sk
    JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    GROUP BY cd.cd_marital_status
),
sales_summary AS (
    SELECT 
        SUM(cs.cs_sales_price) AS total_catalog_sales,
        SUM(ss.ss_net_profit) AS total_store_sales,
        COUNT(DISTINCT cs.cs_order_number) AS total_catalog_orders,
        COUNT(DISTINCT ss.ss_ticket_number) AS total_store_orders,
        CASE WHEN MIN(ss.ss_sold_date_sk) IS NULL THEN 'No Sales' 
             ELSE 'Sales Exist' 
        END AS sales_existence
    FROM catalog_sales cs 
    FULL OUTER JOIN store_sales ss ON cs.cs_item_sk = ss.ss_item_sk
)
SELECT * 
FROM address_hierarchy a
FULL OUTER JOIN customer_metrics cm ON a.ca_city = cm.full_name
FULL OUTER JOIN income_stats is ON cm.cd_marital_status = is.cd_marital_status
FULL OUTER JOIN sales_summary ss ON ss.total_catalog_orders = ss.total_store_orders
WHERE (is.customer_count > 10 OR cm.order_count > 5)
AND (a.city_rank IS NULL OR a.ca_state = 'CA')
ORDER BY a.ca_city DESC, cm.total_profit DESC
OFFSET 0 ROWS FETCH NEXT 100 ROWS ONLY;
