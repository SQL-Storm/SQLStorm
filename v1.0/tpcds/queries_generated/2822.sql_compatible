
WITH RankedSales AS (
    SELECT 
        ws.ws_order_number,
        ws.ws_item_sk,
        ws.ws_sales_price,
        ws.ws_quantity,
        ws.ws_sold_date_sk,
        ROW_NUMBER() OVER (PARTITION BY ws.ws_order_number ORDER BY ws.ws_sales_price DESC) AS rnk
    FROM 
        web_sales ws
),
CustomerWithDemographics AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_education_status,
        cd.cd_purchase_estimate
    FROM 
        customer c
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
),
TotalSales AS (
    SELECT 
        ws.ws_order_number,
        SUM(ws.ws_ext_sales_price) AS total_sales,
        COUNT(ws.ws_item_sk) AS total_items_sold,
        ws.ws_bill_customer_sk
    FROM 
        web_sales ws
    GROUP BY 
        ws.ws_order_number, ws.ws_bill_customer_sk
)

SELECT 
    cs.c_first_name,
    cs.c_last_name,
    cs.cd_gender,
    cs.cd_marital_status,
    ts.total_sales,
    ts.total_items_sold,
    COALESCE(rs.ws_sales_price, 0) AS highest_price,
    COUNT(DISTINCT ts.ws_order_number) OVER (PARTITION BY cs.c_customer_sk) AS order_count
FROM 
    CustomerWithDemographics cs
LEFT JOIN 
    TotalSales ts ON cs.c_customer_sk = ts.ws_bill_customer_sk
LEFT JOIN 
    RankedSales rs ON ts.ws_order_number = rs.ws_order_number AND rs.rnk = 1
WHERE 
    ts.total_sales > 1000 
    OR (cs.cd_gender IS NULL AND cs.cd_marital_status IS NULL)
ORDER BY 
    ts.total_sales DESC, cs.c_last_name, cs.c_first_name;
