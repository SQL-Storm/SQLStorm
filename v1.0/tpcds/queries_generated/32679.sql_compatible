
WITH RECURSIVE sales_hierarchy AS (
    SELECT 
        ss_store_sk, 
        ss_sold_date_sk, 
        SUM(ss_net_profit) AS total_profit,
        COUNT(ss_ticket_number) AS total_sales,
        1 AS level
    FROM 
        store_sales
    GROUP BY 
        ss_store_sk, ss_sold_date_sk

    UNION ALL

    SELECT 
        sh.ss_store_sk,
        sd.d_date_sk,
        SUM(sh.total_profit + ss.net_profit) AS total_profit,
        SUM(sh.total_sales + COUNT(ss.ticket_number)) AS total_sales,
        sh.level + 1
    FROM 
        sales_hierarchy sh
    JOIN 
        store_sales ss ON sh.ss_store_sk = ss.ss_store_sk AND sh.ss_sold_date_sk < ss.ss_sold_date_sk
    JOIN 
        date_dim sd ON ss.ss_sold_date_sk = sd.d_date_sk
    WHERE 
        sh.level < 5
    GROUP BY 
        sh.ss_store_sk, sd.d_date_sk, sh.level
)

SELECT 
    s_store.s_store_id,
    SUM(s.total_profit) AS total_profit,
    AVG(s.total_sales) AS avg_sales_per_day,
    MAX(s.total_sales) AS max_daily_sales,
    STRING_AGG(DISTINCT sm.sm_type, ', ') AS shipping_methods,
    CASE 
        WHEN AVG(s.total_sales) IS NULL THEN 'No Sales'
        ELSE 'Has Sales'
    END AS sales_status,
    CASE 
        WHEN SUM(s.total_profit) IS NULL OR SUM(s.total_profit) = 0 THEN 'Zero Profit'
        ELSE 'Profit Available'
    END AS profit_status
FROM 
    sales_hierarchy s
JOIN 
    store s_store ON s.ss_store_sk = s_store.s_store_sk
LEFT JOIN 
    ship_mode sm ON sm.sm_ship_mode_sk IN (
        SELECT DISTINCT ss.ss_ship_mode_sk 
        FROM store_sales ss WHERE ss.ss_store_sk = s.ss_store_sk
    )
GROUP BY 
    s_store.s_store_id
HAVING 
    SUM(s.total_profit) > 0
ORDER BY 
    total_profit DESC;
