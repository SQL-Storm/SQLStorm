WITH processed_addresses AS (
    SELECT
        ca_address_sk,
        UPPER(ca_street_name) AS street_name,
        CONCAT(ca_street_number, ' ', ca_street_name, ' ', ca_street_type) AS full_address,
        TRIM(ca_city) AS city,
        TRIM(ca_state) AS state,
        REPLACE(ca_zip, '-', '') AS zip
    FROM customer_address
),
customer_data AS (
    SELECT
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        d.cd_gender,
        d.cd_marital_status,
        d.cd_education_status,
        d.cd_purchase_estimate,
        d.cd_credit_rating,
        d.cd_dep_count,
        d.cd_dep_employed_count,
        d.cd_dep_college_count,
        CONCAT(c.c_first_name, ' ', c.c_last_name) AS full_name,
        processed.full_address
    FROM customer c
    JOIN customer_demographics d ON c.c_current_cdemo_sk = d.cd_demo_sk
    JOIN processed_addresses processed ON c.c_current_addr_sk = processed.ca_address_sk
),
date_info AS (
    SELECT
        d.d_date_sk,
        d.d_date AS transaction_date,
        d.d_year,
        d.d_month_seq
    FROM date_dim d
),
aggregated_sales AS (
    SELECT
        ws.bill_customer_sk,
        SUM(ws.ws_sales_price) AS total_sales,
        COUNT(ws.ws_order_number) AS total_orders
    FROM web_sales ws
    GROUP BY ws.bill_customer_sk
)

SELECT
    cd.full_name,
    cd.city,
    cd.state,
    cd.zip,
    di.transaction_date,
    di.d_year,
    di.d_month_seq,
    COALESCE(as.total_sales, 0) AS total_sales,
    COALESCE(as.total_orders, 0) AS total_orders,
    CASE 
        WHEN as.total_sales > 1000 THEN 'High Value Customer'
        WHEN as.total_sales BETWEEN 500 AND 1000 THEN 'Medium Value Customer'
        ELSE 'Low Value Customer'
    END AS customer_segment
FROM customer_data cd
JOIN date_info di ON di.d_date_sk = cd.c_customer_sk  
LEFT JOIN aggregated_sales as ON as.bill_customer_sk = cd.c_customer_sk
WHERE cd.state = 'CA' 
ORDER BY cd.full_name, di.transaction_date DESC;