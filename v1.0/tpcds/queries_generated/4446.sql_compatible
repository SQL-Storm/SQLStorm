
WITH CustomerReturns AS (
    SELECT 
        sr_returning_customer_sk,
        SUM(sr_return_quantity) AS total_returned_qty,
        SUM(sr_return_amt_inc_tax) AS total_returned_amt
    FROM store_returns
    GROUP BY sr_returning_customer_sk
),
CustomerDemographics AS (
    SELECT
        cd.cd_demo_sk,
        cd.cd_gender,
        cd.cd_marital_status,
        COUNT(DISTINCT c.c_customer_sk) AS total_customers
    FROM customer_demographics cd
    JOIN customer c ON cd.cd_demo_sk = c.c_current_cdemo_sk
    GROUP BY cd.cd_demo_sk, cd.cd_gender, cd.cd_marital_status
),
TopItems AS (
    SELECT 
        ws.ws_item_sk,
        SUM(ws.ws_quantity) AS total_sold_qty,
        SUM(ws.ws_net_profit) AS total_net_profit
    FROM web_sales ws
    WHERE ws.ws_sold_date_sk IN (SELECT DISTINCT d_date_sk FROM date_dim WHERE d_year = 2023)
    GROUP BY ws.ws_item_sk
    HAVING SUM(ws.ws_quantity) > 100
    ORDER BY total_net_profit DESC
    LIMIT 10
),
Dataset AS (
    SELECT 
        cd.cd_gender,
        cd.cd_marital_status,
        cr.total_returned_qty,
        cr.total_returned_amt,
        ti.total_sold_qty,
        ti.total_net_profit,
        DENSE_RANK() OVER (PARTITION BY cd.cd_gender ORDER BY ti.total_net_profit DESC) AS profit_rank
    FROM CustomerDemographics cd
    LEFT JOIN CustomerReturns cr ON cd.cd_demo_sk = cr.sr_returning_customer_sk
    JOIN TopItems ti ON ti.ws_item_sk = cr.sr_item_sk
)
SELECT 
    d.cd_gender,
    d.cd_marital_status,
    COALESCE(SUM(d.total_returned_qty), 0) AS total_returned_qty,
    COALESCE(SUM(d.total_returned_amt), 0) AS total_returned_amt,
    COALESCE(SUM(d.total_sold_qty), 0) AS total_sold_qty,
    COALESCE(SUM(d.total_net_profit), 0) AS total_net_profit,
    AVG(d.total_net_profit) AS average_profit,
    COUNT(CASE WHEN d.profit_rank = 1 THEN 1 END) AS top_profit_items_count
FROM Dataset d
GROUP BY d.cd_gender, d.cd_marital_status
ORDER BY d.cd_gender, d.cd_marital_status;
