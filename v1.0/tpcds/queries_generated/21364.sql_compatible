
WITH RecursiveCTE AS (
    SELECT 
        ca_address_id,
        ca_city,
        ca_state,
        ROW_NUMBER() OVER (PARTITION BY ca_city ORDER BY ca_address_id) AS rn
    FROM 
        customer_address
    WHERE 
        ca_country IS NOT NULL AND
        ca_state IN ('CA', 'NY')
),
FilteredCustomers AS (
    SELECT 
        c.c_customer_id,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_purchase_estimate,
        COALESCE(cd.cd_credit_rating, 'Unknown') AS credit_rating,
        CASE 
            WHEN cd.cd_dep_count IS NULL THEN 0 
            ELSE cd.cd_dep_count 
        END AS dep_count,
        (SELECT SUM(ws_net_payment) 
         FROM (
            SELECT ws_net_paid AS ws_net_payment
            FROM web_sales
            WHERE ws_bill_customer_sk = c.c_customer_sk
            UNION ALL
            SELECT cs_net_paid AS ws_net_payment
            FROM catalog_sales
            WHERE cs_bill_customer_sk = c.c_customer_sk
         ) AS Payment
        ) AS total_payment
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    WHERE 
        EXISTS (
            SELECT 1 
            FROM RecursiveCTE r
            WHERE r.ca_city = 'Los Angeles'
            AND r.rn = 1
        )
),
SalesData AS (
    SELECT 
        ss.ss_item_sk,
        SUM(ss.ss_quantity) AS total_quantity,
        SUM(ss.ss_net_paid) AS total_sales
    FROM 
        store_sales ss
    GROUP BY 
        ss.ss_item_sk
)
SELECT 
    fc.c_customer_id, 
    fc.c_first_name,
    fc.c_last_name,
    fc.cd_gender,
    fc.credit_rating,
    fc.dep_count,
    fd.total_quantity,
    fd.total_sales,
    CASE 
        WHEN fd.total_sales IS NULL THEN 'No Sales'
        ELSE 'Has Sales'
    END AS sales_status
FROM 
    FilteredCustomers fc
LEFT JOIN 
    SalesData fd ON fc.c_customer_id = (SELECT c.c_customer_id 
                                          FROM customer c 
                                          WHERE c.c_customer_sk = fc.c_customer_sk 
                                          LIMIT 1)
WHERE 
    (fc.dep_count > 0 OR fc.cd_marital_status = 'M')
ORDER BY 
    total_payment DESC NULLS LAST
LIMIT 50 OFFSET 10
