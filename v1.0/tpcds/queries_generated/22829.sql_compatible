
WITH RankedReturns AS (
    SELECT 
        wr.returning_customer_sk,
        SUM(wr.return_quantity) AS total_returned,
        SUM(wr.return_amt) AS total_return_amount,
        DENSE_RANK() OVER (PARTITION BY wr.returning_customer_sk ORDER BY wr.returned_date_sk DESC) AS rank
    FROM 
        web_returns wr
    GROUP BY 
        wr.returning_customer_sk
),
MaxReturns AS (
    SELECT 
        returning_customer_sk,
        total_returned,
        total_return_amount
    FROM 
        RankedReturns
    WHERE 
        rank = 1
),
CustomerStats AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        COALESCE(cd.cd_gender, 'U') AS gender,
        COALESCE(hd.hd_income_band_sk, -1) AS income_band,
        COALESCE(cd.cd_marital_status, 'Unknown') AS marital_status,
        COALESCE(MAX(total_returned), 0) AS max_total_returned
    FROM 
        customer c
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN 
        household_demographics hd ON c.c_customer_sk = hd.hd_demo_sk
    LEFT JOIN 
        MaxReturns mr ON c.c_customer_sk = mr.returning_customer_sk
    GROUP BY 
        c.c_customer_sk, c.c_first_name, c.c_last_name, cd.cd_gender, hd.hd_income_band_sk
)
SELECT 
    cs.c_customer_sk,
    cs.c_first_name,
    cs.c_last_name,
    cs.gender,
    cs.income_band,
    cs.marital_status,
    cs.max_total_returned,
    COUNT(DISTINCT ws.web_site_sk) AS total_websites_visited,
    SUM(ws.ws_sales_price) AS total_spent
FROM 
    CustomerStats cs
JOIN 
    web_sales ws ON cs.c_customer_sk = ws.ws_bill_customer_sk
WHERE 
    ws.ws_ship_date_sk IS NOT NULL
    AND cs.marital_status != 'Unknown'
GROUP BY 
    cs.c_customer_sk, cs.c_first_name, cs.c_last_name, cs.gender, cs.income_band, cs.marital_status
HAVING 
    SUM(ws.ws_sales_price) > (SELECT AVG(ws_sales_price) FROM web_sales) 
    OR COUNT(DISTINCT ws.web_site_sk) > 5
ORDER BY 
    cs.max_total_returned DESC NULLS LAST;
