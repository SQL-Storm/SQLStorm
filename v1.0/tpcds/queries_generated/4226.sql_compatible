
WITH CustomerReturns AS (
    SELECT 
        sr_customer_sk,
        SUM(sr_return_quantity) AS total_return_quantity,
        SUM(sr_return_amt) AS total_return_amt
    FROM store_returns
    GROUP BY sr_customer_sk
),
ItemSales AS (
    SELECT 
        ws_item_sk,
        COUNT(ws_order_number) AS total_orders,
        SUM(ws_quantity) AS total_sold,
        SUM(ws_sales_price) AS total_sales
    FROM web_sales
    GROUP BY ws_item_sk
),
TopCustomers AS (
    SELECT 
        c.c_customer_id,
        CD.cd_gender,
        COALESCE(CR.total_return_quantity, 0) AS total_return_qty,
        COALESCE(CR.total_return_amt, 0) AS total_return_amt,
        DENSE_RANK() OVER (ORDER BY COALESCE(CR.total_return_amt, 0) DESC) AS rank
    FROM customer c
    LEFT JOIN customer_demographics CD ON c.c_current_cdemo_sk = CD.cd_demo_sk
    LEFT JOIN CustomerReturns CR ON c.c_customer_sk = CR.sr_customer_sk
)
SELECT 
    mac.c_customer_id,
    COALESCE(mac.total_return_qty, 0) AS total_return_qty,
    COALESCE(mac.total_return_amt, 0) AS total_return_amt,
    (SELECT COUNT(*) FROM ItemSales) AS total_items_sold,
    COUNT(DISTINCT cs.ws_item_sk) AS total_items_returned,
    AVG(CASE WHEN p.p_discount_active = 'Y' THEN p.p_cost ELSE NULL END) AS avg_discounted_cost
FROM TopCustomers mac
LEFT JOIN web_sales cs ON mac.c_customer_id = cs.ws_bill_customer_sk
LEFT JOIN promotion p ON p.p_promo_sk = cs.ws_promo_sk
WHERE mac.rank <= 10
GROUP BY mac.c_customer_id, mac.total_return_qty, mac.total_return_amt
ORDER BY total_return_amt DESC;
