
WITH RECURSIVE customer_hierarchy AS (
    SELECT
        c.c_customer_sk,
        c.c_customer_id,
        c.c_first_name,
        c.c_last_name,
        c.c_preferred_cust_flag,
        cd.cd_marital_status,
        cd.cd_gender,
        cd.cd_birth_year,
        0 AS level,
        NULL AS parent_customer_sk
    FROM
        customer c
    JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    WHERE
        c.c_preferred_cust_flag = 'Y'
    UNION ALL
    SELECT
        c.c_customer_sk,
        c.c_customer_id,
        c.c_first_name,
        c.c_last_name,
        c.c_preferred_cust_flag,
        cd.cd_marital_status,
        cd.cd_gender,
        cd.cd_birth_year,
        ch.level + 1 AS level,
        ch.c_customer_sk AS parent_customer_sk
    FROM
        customer c
    JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    JOIN customer_hierarchy ch ON c.c_first_shipto_date_sk = ch.c_customer_sk
)
SELECT
    ca.ca_city,
    ca.ca_state,
    COUNT(DISTINCT ch.c_customer_id) AS customer_count,
    SUM(CASE 
            WHEN cd.cd_marital_status = 'M' THEN 1
            ELSE 0 
        END) AS married_customers,
    AVG(CASE 
            WHEN cd.cd_gender = 'M' THEN cd.cd_birth_year 
            ELSE NULL 
        END) AS avg_male_birth_year,
    SUM(COALESCE(iw.inv_quantity_on_hand, 0)) AS total_inventory,
    STRING_AGG(DISTINCT CONCAT(ch.c_first_name, ' ', ch.c_last_name), '; ') AS customer_names
FROM
    customer_address ca
LEFT JOIN customer c ON ca.ca_address_sk = c.c_current_addr_sk
JOIN customer_hierarchy ch ON c.c_customer_sk = ch.c_customer_sk
LEFT JOIN store s ON s.s_store_sk = (SELECT ss.ss_store_sk FROM store_sales ss WHERE ss.ss_customer_sk = c.c_customer_sk LIMIT 1)
LEFT JOIN inventory iw ON iw.inv_warehouse_sk = s.s_warehouse_sk
LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
GROUP BY
    ca.ca_city, ca.ca_state
HAVING
    COUNT(DISTINCT ch.c_customer_id) > 10
ORDER BY
    ca.ca_state, customer_count DESC;
