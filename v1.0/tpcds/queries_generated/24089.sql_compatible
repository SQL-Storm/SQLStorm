
WITH RankedSales AS (
    SELECT 
        ws.ws_item_sk,
        ws.ws_order_number,
        ws.ws_sales_price,
        ws.ws_net_profit,
        ROW_NUMBER() OVER (PARTITION BY ws.ws_item_sk ORDER BY ws.ws_net_profit DESC) AS rn
    FROM web_sales ws
    WHERE ws.ws_sold_date_sk > (SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = 1999) 
),
SalesAnalysis AS (
    SELECT
        r.ws_item_sk,
        r.ws_order_number,
        r.ws_sales_price,
        r.ws_net_profit,
        COALESCE(c.c_first_name, 'Unknown') AS customer_first_name,
        COALESCE(c.c_last_name, 'Unknown') AS customer_last_name,
        DENSE_RANK() OVER (ORDER BY r.ws_net_profit) AS profit_rank,
        CASE 
            WHEN r.ws_net_profit IS NULL THEN 'Profit Unknown'
            ELSE 'Profit Known'
        END AS profit_status
    FROM RankedSales r
    LEFT JOIN customer c ON r.ws_order_number = c.c_customer_id
    WHERE r.rn = 1
)
SELECT 
    sa.ws_item_sk,
    COUNT(*) AS number_of_sales,
    AVG(sa.ws_sales_price) AS avg_sales_price,
    SUM(sa.ws_net_profit) AS total_net_profit,
    SUM(CASE WHEN sa.profit_status = 'Profit Known' THEN 1 ELSE 0 END) AS known_profit_count
FROM SalesAnalysis sa
GROUP BY 
    sa.ws_item_sk
HAVING SUM(sa.ws_net_profit) > 
    (SELECT AVG(total_sales) 
     FROM (SELECT SUM(ws_ext_sales_price) AS total_sales 
           FROM store_sales 
           WHERE ss_sold_date_sk BETWEEN 12000 AND 13000) AS subquery) 
ORDER BY avg_sales_price DESC
LIMIT 10;
