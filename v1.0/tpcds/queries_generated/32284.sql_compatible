
WITH RECURSIVE sales_cte AS (
    SELECT 
        ws_item_sk,
        SUM(ws_ext_sales_price) AS total_sales,
        COUNT(DISTINCT ws_order_number) AS total_orders,
        RANK() OVER (ORDER BY SUM(ws_ext_sales_price) DESC) AS sales_rank
    FROM web_sales
    WHERE ws_sold_date_sk >= (SELECT MAX(d_date_sk) - 30 FROM date_dim)
    GROUP BY ws_item_sk
),
customer_info AS (
    SELECT 
        c.c_customer_sk,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_purchase_estimate,
        hd.hd_income_band_sk,
        ROW_NUMBER() OVER (PARTITION BY cd.cd_gender ORDER BY cd.cd_purchase_estimate DESC) AS gender_rank
    FROM customer c
    JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN household_demographics hd ON c.c_current_hdemo_sk = hd.hd_demo_sk
),
address_info AS (
    SELECT 
        ca.ca_address_sk,
        ca.ca_city,
        ca.ca_state,
        COUNT(DISTINCT c.c_customer_sk) AS customer_count
    FROM customer_address ca
    JOIN customer c ON c.c_current_addr_sk = ca.ca_address_sk
    GROUP BY ca.ca_address_sk, ca.ca_city, ca.ca_state
),
filtered_sales AS (
    SELECT 
        item.i_item_id,
        it.total_sales,
        ca.ca_city,
        ca.ca_state,
        ci.gender_rank
    FROM sales_cte it
    JOIN item item ON item.i_item_sk = it.ws_item_sk
    JOIN address_info ca ON ca.customer_count > 10
    JOIN customer_info ci ON ci.c_customer_sk = item.i_item_id  
    WHERE it.sales_rank <= 50
)
SELECT 
    COUNT(DISTINCT fs.i_item_id) AS popular_items,
    AVG(fs.total_sales) AS avg_sales,
    SUM(CASE WHEN ci.cd_marital_status = 'M' THEN fs.total_sales ELSE 0 END) AS total_married_sales,
    ARRAY_AGG(DISTINCT ci.cd_gender) AS distinct_genders,
    MAX(fs.total_sales) AS max_sales
FROM filtered_sales fs
JOIN customer_info ci ON ci.c_customer_sk = fs.i_item_id 
WHERE fs.ca_city IS NOT NULL
GROUP BY fs.ca_state
ORDER BY avg_sales DESC
LIMIT 10;
