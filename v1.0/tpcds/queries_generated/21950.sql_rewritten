WITH RECURSIVE CustomerCTE AS (
    SELECT c.c_customer_sk, c.c_first_name, c.c_last_name, c.c_birth_year,
           CAST(CONCAT(c.c_first_name, ' ', c.c_last_name) AS VARCHAR(100)) AS full_name,
           COALESCE(cd.cd_gender, 'U') AS gender,
           ROW_NUMBER() OVER (PARTITION BY c.c_country ORDER BY c.c_birth_year DESC) AS rn
    FROM customer AS c
    LEFT JOIN customer_demographics AS cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    WHERE c.c_birth_year IS NOT NULL
),
WarehouseInventory AS (
    SELECT w.w_warehouse_id, SUM(i.inv_quantity_on_hand) AS total_quantity
    FROM warehouse AS w
    JOIN inventory AS i ON w.w_warehouse_sk = i.inv_warehouse_sk
    WHERE i.inv_quantity_on_hand > 0
    GROUP BY w.w_warehouse_id
),
CustomerReturns AS (
    SELECT sr_customer_sk, SUM(sr_return_amt) AS total_returned_amt
    FROM store_returns 
    WHERE sr_return_quantity IS NOT NULL
    GROUP BY sr_customer_sk
),
RankedCustomerReturns AS (
    SELECT cr.sr_customer_sk, cr.total_returned_amt,
           RANK() OVER (ORDER BY cr.total_returned_amt DESC) AS rank
    FROM CustomerReturns cr
    WHERE cr.total_returned_amt > (SELECT AVG(total_returned_amt) FROM CustomerReturns) 
)
SELECT c.full_name, c.gender, c.c_birth_year, 
       wi.warehouse_id, wi.total_quantity,
       r.total_returned_amt, r.rank
FROM CustomerCTE c
JOIN WarehouseInventory wi ON c.c_country = wi.warehouse_id
LEFT JOIN RankedCustomerReturns r ON c.c_customer_sk = r.sr_customer_sk
WHERE c.rn <= 10 AND (c.gender = 'M' OR c.gender IS NULL) 
ORDER BY wi.total_quantity DESC, r.total_returned_amt DESC NULLS LAST;