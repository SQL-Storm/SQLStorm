
WITH customer_info AS (
    SELECT 
        c.c_customer_id,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_purchase_estimate,
        cd.cd_credit_rating,
        hd.hd_income_band_sk,
        COUNT(DISTINCT s.s_store_sk) AS store_count
    FROM customer c
    JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN household_demographics hd ON hd.hd_demo_sk = cd.cd_demo_sk
    LEFT JOIN store s ON s.s_store_sk IN (
        SELECT ss_store_sk 
        FROM store_sales 
        WHERE ss_customer_sk = c.c_customer_sk
    )
    WHERE cd.cd_purchase_estimate > 10000
    AND (cd.cd_marital_status = 'M' OR cd.cd_gender = 'F')
    GROUP BY c.c_customer_id, c.c_first_name, c.c_last_name, cd.cd_gender, cd.cd_marital_status, cd.cd_purchase_estimate, cd.cd_credit_rating, hd.hd_income_band_sk
),
sales_data AS (
    SELECT 
        ws_bill_customer_sk,
        SUM(ws_net_profit) AS total_profit,
        SUM(ws_quantity) AS total_quantity,
        ROW_NUMBER() OVER (PARTITION BY ws_bill_customer_sk ORDER BY SUM(ws_net_profit) DESC) AS rank_profit
    FROM web_sales
    GROUP BY ws_bill_customer_sk
),
return_data AS (
    SELECT 
        cr_returning_customer_sk,
        COUNT(cr_item_sk) AS total_returns,
        SUM(cr_return_amount) AS total_return_amount
    FROM catalog_returns 
    GROUP BY cr_returning_customer_sk
)
SELECT 
    ci.c_customer_id,
    ci.c_first_name,
    ci.c_last_name,
    ci.cd_gender,
    ci.cd_marital_status,
    COALESCE(sd.total_profit, 0) AS total_profit,
    COALESCE(sd.total_quantity, 0) AS total_quantity,
    COALESCE(rd.total_returns, 0) AS total_returns,
    COALESCE(rd.total_return_amount, 0.00) AS total_return_amount,
    CASE 
        WHEN ci.store_count > 3 THEN 'Frequent Shopper'
        WHEN ci.store_count BETWEEN 1 AND 3 THEN 'Occasional Shopper'
        ELSE 'Rare Shopper'
    END AS shopper_category
FROM customer_info ci
LEFT JOIN sales_data sd ON ci.c_customer_id = sd.ws_bill_customer_sk
LEFT JOIN return_data rd ON ci.c_customer_id = rd.cr_returning_customer_sk
WHERE (ci.cd_credit_rating IS NOT NULL OR COALESCE(rd.total_returns, 0) > 0)
ORDER BY ci.c_last_name, ci.c_first_name;
