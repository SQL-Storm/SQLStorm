
WITH customer_sales AS (
    SELECT
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        COUNT(DISTINCT ws.ws_order_number) AS total_web_orders,
        SUM(ws.ws_net_profit) AS total_web_profit
    FROM
        customer c
    LEFT JOIN
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    WHERE
        c.c_current_cdemo_sk IS NOT NULL
    GROUP BY
        c.c_customer_sk, c.c_first_name, c.c_last_name
),
store_sales_summary AS (
    SELECT
        ss.ss_store_sk,
        SUM(ss.ss_net_profit) AS total_store_profit,
        COUNT(ss.ss_ticket_number) AS total_store_transactions
    FROM
        store_sales ss
    GROUP BY
        ss.ss_store_sk
),
combined_sales AS (
    SELECT
        cs.c_customer_sk,
        cs.c_first_name,
        cs.c_last_name,
        COALESCE(ws.total_web_orders, 0) AS total_web_orders,
        COALESCE(ss.total_store_profit, 0) AS total_store_profit,
        COALESCE(ws.total_web_profit, 0) AS total_web_profit,
        CASE
            WHEN COALESCE(ws.total_web_profit, 0) > COALESCE(ss.total_store_profit, 0) THEN 'Web Dominant'
            WHEN COALESCE(ws.total_web_profit, 0) < COALESCE(ss.total_store_profit, 0) THEN 'Store Dominant'
            ELSE 'Equal Profit'
        END AS profit_category
    FROM
        customer_sales cs
    LEFT JOIN
        store_sales_summary ss ON cs.c_customer_sk = ss.ss_store_sk
),
ranked_sales AS (
    SELECT
        cs.*,
        RANK() OVER (PARTITION BY profit_category ORDER BY total_web_profit DESC) AS profit_rank
    FROM
        combined_sales cs
)
SELECT
    rs.c_first_name,
    rs.c_last_name,
    rs.total_web_orders,
    rs.total_store_profit,
    rs.profit_category,
    CASE
        WHEN rs.total_web_orders < 10 THEN 'Low Orders'
        WHEN rs.total_web_orders BETWEEN 10 AND 30 THEN 'Medium Orders'
        ELSE 'High Orders'
    END AS order_category,
    rs.profit_rank
FROM
    ranked_sales rs
WHERE
    rs.profit_rank <= 10
ORDER BY
    rs.profit_category, rs.profit_rank;
