
WITH RECURSIVE addr_hierarchy AS (
    SELECT 
        ca_address_sk, 
        ca_street_name, 
        CONCAT(ca_street_number, ' ', ca_street_name, ' ', ca_street_type) AS full_address,
        ROW_NUMBER() OVER (PARTITION BY ca_state ORDER BY ca_address_sk) AS address_rank
    FROM 
        customer_address
    WHERE 
        ca_country IS NOT NULL
),
customer_info AS (
    SELECT 
        c.c_customer_sk, 
        c.c_current_cdemo_sk,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_income_band_sk,
        COALESCE(CAST(cd.cd_purchase_estimate AS VARCHAR), 'Unknown') AS purchase_estimate,
        CASE 
            WHEN cd.cd_credit_rating IS NULL THEN 'No Rating' 
            ELSE cd.cd_credit_rating 
        END AS credit_rating
    FROM 
        customer c 
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
),
sales_summary AS (
    SELECT 
        ws.ws_ship_date_sk,
        SUM(ws.ws_net_profit) AS total_net_profit,
        COUNT(DISTINCT ws.ws_order_number) AS unique_orders,
        AVG(ws.ws_net_paid_inc_tax) AS avg_net_paid
    FROM 
        web_sales ws
    LEFT JOIN 
        date_dim dd ON ws.ws_ship_date_sk = dd.d_date_sk
    GROUP BY 
        ws.ws_ship_date_sk
),
high_income_customers AS (
    SELECT 
        ci.c_customer_sk,
        hd.hd_income_band_sk
    FROM 
        customer_info ci
    JOIN 
        household_demographics hd ON ci.c_current_cdemo_sk = hd.hd_demo_sk
    WHERE 
        hd.hd_income_band_sk IS NOT NULL AND hd.hd_buy_potential = 'High'
)

SELECT 
    CASE WHEN h.c_customer_sk IS NOT NULL AND a.full_address IS NOT NULL THEN 'High-income customer with address' 
         ELSE 'Other' 
    END AS customer_status,
    a.full_address,
    SUM(ss.total_net_profit) AS total_profit,
    AVG(ss.avg_net_paid) AS average_payment
FROM 
    addr_hierarchy a
FULL OUTER JOIN 
    high_income_customers h ON a.ca_address_sk = h.c_customer_sk
JOIN 
    sales_summary ss ON a.ca_address_sk = ss.ws_ship_date_sk
WHERE 
    a.address_rank <= 10 AND 
    (h.hd_income_band_sk IS NOT NULL OR h.hd_income_band_sk IS NULL)
GROUP BY 
    customer_status, 
    a.full_address 
ORDER BY 
    total_profit DESC NULLS LAST;
