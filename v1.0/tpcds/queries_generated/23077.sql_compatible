
WITH RecursiveCouponSummaries AS (
    SELECT 
        ws.ws_item_sk,
        ws.ws_order_number,
        SUM(ws.ws_coupon_amt) AS total_coupons,
        COUNT(ws.ws_order_number) AS order_count
    FROM web_sales ws
    JOIN customer c ON ws.ws_bill_customer_sk = c.c_customer_sk
    WHERE c.c_birth_month BETWEEN 1 AND 6
    GROUP BY ws.ws_item_sk, ws.ws_order_number
    HAVING SUM(ws.ws_coupon_amt) IS NOT NULL
),
WarehouseStats AS (
    SELECT 
        w.w_warehouse_id,
        COALESCE(SUM(CASE WHEN sm.sm_code LIKE 'S%' THEN 1 ELSE 0 END), 0) AS expedited_shipping_count
    FROM warehouse w
    LEFT JOIN ship_mode sm ON w.w_warehouse_sk = sm.sm_ship_mode_sk
    GROUP BY w.w_warehouse_id
),
ItemSales AS (
    SELECT 
        i.i_item_id,
        SUM(ss.ss_sales_price) AS total_sales,
        AVG(ss.ss_net_profit) AS avg_profit
    FROM item i
    LEFT JOIN store_sales ss ON i.i_item_sk = ss.ss_item_sk
    WHERE i.i_formulation IS NOT NULL
    GROUP BY i.i_item_id
)

SELECT 
    cs.c_first_name,
    cs.c_last_name,
    COALESCE(rcs.ws_item_sk, 'UNKNOWN') AS item_id,
    isales.total_sales,
    ws_stats.expedited_shipping_count,
    FORMAT((rcs.total_coupons + 0.0) / NULLIF(rcs.order_count, 0), 'N2') AS avg_coupons_per_order
FROM customer cs
LEFT JOIN RecursiveCouponSummaries rcs ON cs.c_customer_sk = rcs.ws_order_number
LEFT JOIN WarehouseStats ws_stats ON ws_stats.w_warehouse_id = (
    SELECT w.w_warehouse_id 
    FROM warehouse w 
    WHERE w.w_warehouse_sq_ft = (
        SELECT MAX(w2.w_warehouse_sq_ft) 
        FROM warehouse w2
    )
    LIMIT 1
)
LEFT JOIN ItemSales isales ON isales.i_item_id = (
    SELECT MAX(i.i_item_id) 
    FROM item i 
    WHERE i.i_current_price BETWEEN 10 AND 100
)
WHERE cs.c_birth_year IS NULL OR cs.c_birth_year < (EXTRACT(YEAR FROM DATE '2002-10-01') - 30)
ORDER BY cs.c_last_name DESC, cs.c_first_name ASC
LIMIT 100 OFFSET 0;
