
WITH RECURSIVE DateRange AS (
    SELECT MIN(d_date) AS start_date, MAX(d_date) AS end_date
    FROM date_dim
), SalesData AS (
    SELECT 
        d.d_date,
        ws.ws_item_sk,
        SUM(ws.ws_quantity) AS total_quantity,
        SUM(ws.ws_net_paid) AS total_sales
    FROM web_sales ws
    JOIN date_dim d ON ws.ws_sold_date_sk = d.d_date_sk
    WHERE d.d_date BETWEEN (SELECT start_date FROM DateRange) AND (SELECT end_date FROM DateRange)
    GROUP BY d.d_date, ws.ws_item_sk
), CustomerSales AS (
    SELECT 
        c.c_first_name,
        c.c_last_name,
        sd.total_quantity,
        sd.total_sales,
        DENSE_RANK() OVER (PARTITION BY sd.ws_item_sk ORDER BY sd.total_sales DESC) AS sales_rank
    FROM SalesData sd
    JOIN customer c ON c.c_customer_sk = sd.ws_ship_customer_sk
), RankFilter AS (
    SELECT *
    FROM CustomerSales
    WHERE sales_rank <= 3
), AddressInfo AS (
    SELECT 
        ca.ca_city,
        ca.ca_state,
        rf.c_first_name,
        rf.c_last_name,
        r.r_reason_desc,
        COALESCE(SUM(sr.sr_return_quantity), 0) AS total_returns
    FROM RankFilter rf
    JOIN customer_address ca ON ca.ca_address_sk = rf.c_current_addr_sk
    LEFT JOIN store_returns sr ON sr.sr_customer_sk = rf.c_customer_sk
    LEFT JOIN reason r ON sr.sr_reason_sk = r.r_reason_sk
    GROUP BY ca.ca_city, ca.ca_state, rf.c_first_name, rf.c_last_name, r.r_reason_desc
)
SELECT 
    ca.ca_city AS city,
    ca.ca_state AS state,
    COUNT(DISTINCT rf.c_first_name || ' ' || rf.c_last_name) AS unique_customers,
    SUM(total_returns) AS total_returns,
    AVG(total_returns) AS average_returns_per_customer
FROM AddressInfo
WHERE total_returns IS NOT NULL
GROUP BY ca.ca_city, ca.ca_state
ORDER BY unique_customers DESC, total_returns DESC
LIMIT 10;
