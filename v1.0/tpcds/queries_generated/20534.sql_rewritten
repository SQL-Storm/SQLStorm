WITH RECURSIVE customer_hierarchy AS (
    SELECT c_customer_sk, c_first_name, c_last_name, c_birth_month,
           ROW_NUMBER() OVER (PARTITION BY c_birth_month ORDER BY c_birth_year) AS row_num
    FROM customer
    WHERE c_birth_month IS NOT NULL
), 
address_counts AS (
    SELECT ca_state, COUNT(DISTINCT c_customer_sk) AS customer_count
    FROM customer_address ca
    LEFT JOIN customer c ON c.c_current_addr_sk = ca.ca_address_sk
    GROUP BY ca_state
), 
monthly_sales AS (
    SELECT d.d_month_seq, SUM(ws_net_paid) AS total_sales
    FROM date_dim d
    JOIN web_sales ws ON d.d_date_sk = ws.ws_sold_date_sk
    WHERE d.d_year = 2001
    GROUP BY d.d_month_seq
)
SELECT 
    ch.c_first_name, 
    ch.c_last_name,
    ch.c_birth_month,
    ac.ca_state,
    ac.customer_count,
    ms.total_sales,
    ms.total_sales / NULLIF(ac.customer_count, 0) AS avg_sales_per_customer,
    CASE 
        WHEN CHAR_LENGTH(ch.c_first_name) > 0 THEN CONCAT(ch.c_first_name, ' ', ch.c_last_name)
        ELSE 'Unknown Customer'
    END AS full_name,
    CASE 
        WHEN ch.c_birth_month IS NULL THEN 'Unknown'
        ELSE ch.c_birth_month
    END AS birth_month_condition,
    DENSE_RANK() OVER (ORDER BY ms.total_sales DESC) AS sales_rank
FROM customer_hierarchy ch
LEFT JOIN address_counts ac ON ch.c_birth_month = MONTH(cast('2002-10-01' as date)) 
LEFT JOIN monthly_sales ms ON ms.d_month_seq = MONTH(cast('2002-10-01' as date)) 
WHERE EXISTS (
    SELECT 1 
    FROM store_returns sr
    WHERE sr.s_returned_date_sk = d_month_seq AND sr.s_return_quantity > 0
)
AND (ac.customer_count IS NULL OR ac.customer_count < 50)
ORDER BY avg_sales_per_customer DESC NULLS LAST;