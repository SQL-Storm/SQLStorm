
WITH RankedSales AS (
    SELECT 
        ws_bill_customer_sk,
        SUM(ws_sales_price) AS total_sales,
        RANK() OVER (PARTITION BY ws_bill_customer_sk ORDER BY SUM(ws_sales_price) DESC) AS sales_rank
    FROM 
        web_sales
    WHERE 
        ws_sold_date_sk BETWEEN (
            SELECT MIN(d_date_sk) FROM date_dim WHERE d_year = 2023
        ) AND (
            SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = 2023
        )
    GROUP BY 
        ws_bill_customer_sk
),
CustomerDetails AS (
    SELECT 
        c.c_customer_id,
        cd.cd_gender,
        cd.cd_marital_status,
        COALESCE(hd.hd_income_band_sk, -1) AS income_band
    FROM 
        customer c
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN 
        household_demographics hd ON c.c_current_hdemo_sk = hd.hd_demo_sk
),
SalesRankedCustomers AS (
    SELECT 
        cd.c_customer_id,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.income_band,
        rs.total_sales
    FROM 
        CustomerDetails cd
    JOIN 
        RankedSales rs ON cd.c_customer_id = rs.ws_bill_customer_sk
    WHERE 
        rs.sales_rank <= 10
)
SELECT 
    c.c_customer_id,
    c.cd_gender,
    c.cd_marital_status,
    c.income_band,
    COALESCE(c.total_sales, 0) AS total_sales,
    CASE 
        WHEN c.cd_gender = 'M' AND c.total_sales > 500 THEN 'High Value Male'
        WHEN c.cd_gender = 'F' AND c.total_sales > 500 THEN 'High Value Female'
        ELSE 'Standard'
    END AS customer_value_category
FROM 
    SalesRankedCustomers c
FULL OUTER JOIN 
    store s ON c.c_customer_id = CAST(s.s_store_sk AS VARCHAR(16))
WHERE 
    (c.income_band = -1 OR c.income_band IS NOT NULL)
    AND (c.total_sales IS NOT NULL OR s.s_store_name IS NOT NULL)
ORDER BY 
    c.total_sales DESC, c.c_customer_id;
