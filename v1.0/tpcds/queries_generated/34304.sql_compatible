
WITH RECURSIVE sales_data AS (
    SELECT 
        ws_sold_date_sk,
        ws_item_sk,
        SUM(ws_quantity) AS total_quantity,
        SUM(ws_net_profit) AS total_profit
    FROM 
        web_sales
    GROUP BY 
        ws_sold_date_sk, ws_item_sk
    UNION ALL
    SELECT 
        sd.ws_sold_date_sk,
        sd.ws_item_sk,
        sd.total_quantity + ws.ws_quantity,
        sd.total_profit + ws.ws_net_profit
    FROM 
        sales_data sd
    JOIN 
        web_sales ws ON sd.ws_item_sk = ws.ws_item_sk 
    WHERE 
        sd.ws_sold_date_sk < ws.ws_sold_date_sk
),
customer_summary AS (
    SELECT 
        c.c_customer_sk,
        c.c_current_cdemo_sk,
        cd.cd_gender,
        cd.cd_marital_status,
        COALESCE(cd.cd_dep_count, 0) AS dependent_count,
        SUM(ws.ws_net_profit) AS total_profit
    FROM 
        customer c
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY 
        c.c_customer_sk, c.c_current_cdemo_sk, cd.cd_gender, cd.cd_marital_status
),
inventory_status AS (
    SELECT 
        i.i_item_sk,
        SUM(inv.inv_quantity_on_hand) AS quantity_on_hand
    FROM 
        item i
    JOIN 
        inventory inv ON i.i_item_sk = inv.inv_item_sk
    GROUP BY 
        i.i_item_sk
)
SELECT 
    cs.c_customer_sk,
    cs.cd_gender,
    cs.cd_marital_status,
    cs.dependent_count,
    is.quantity_on_hand,
    COALESCE(sd.total_quantity, 0) AS total_items_sold, 
    COALESCE(sd.total_profit, 0) AS total_profit,
    CASE 
        WHEN cs.total_profit > 10000 THEN 'High Value'
        WHEN cs.total_profit BETWEEN 5000 AND 10000 THEN 'Medium Value'
        ELSE 'Low Value' 
    END AS customer_value
FROM 
    customer_summary cs
LEFT JOIN 
    inventory_status is ON cs.c_current_cdemo_sk = is.i_item_sk
LEFT JOIN 
    sales_data sd ON cs.c_customer_sk = sd.ws_item_sk
WHERE 
    cs.total_profit > 5000 
ORDER BY 
    cs.total_profit DESC
FETCH FIRST 50 ROWS ONLY;
