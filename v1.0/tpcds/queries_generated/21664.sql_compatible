
WITH RankedSales AS (
    SELECT 
        ws.ws_bill_customer_sk,
        ws.ws_item_sk,
        ws.ws_sales_price,
        ws.ws_quantity,
        ROW_NUMBER() OVER (PARTITION BY ws.ws_bill_customer_sk ORDER BY ws.ws_net_profit DESC) AS rnk
    FROM web_sales ws
    LEFT JOIN item i ON ws.ws_item_sk = i.i_item_sk
    WHERE i.i_current_price IS NOT NULL 
      AND i.i_brand IS NOT NULL
),
CustomerDemographics AS (
    SELECT 
        cd.cd_demo_sk,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_education_status,
        COUNT(DISTINCT cs.cs_order_number) AS order_count,
        SUM(cs.cs_net_profit) AS total_profit
    FROM customer c
    JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN catalog_sales cs ON c.c_customer_sk = cs.cs_bill_customer_sk
    GROUP BY cd.cd_demo_sk, cd.cd_gender, cd.cd_marital_status, cd.cd_education_status
),
SalesWithAgeAndIncome AS (
    SELECT 
        c.c_customer_id,
        FLOOR(EXTRACT(YEAR FROM AGE(DATE '2000-01-01', 
        TO_DATE(CAST(c.c_birth_year AS VARCHAR) || '-' || 
        CAST(c.c_birth_month AS VARCHAR) || '-' || 
        CAST(c.c_birth_day AS VARCHAR), 'YYYY-MM-DD')))) AS age,
        ic.ib_lower_bound,
        ic.ib_upper_bound,
        RANK() OVER (PARTITION BY c.c_customer_id ORDER BY SUM(w.ws_net_paid) DESC) AS income_rank
    FROM customer c
    LEFT JOIN household_demographics hd ON c.c_current_hdemo_sk = hd.hd_demo_sk
    LEFT JOIN income_band ic ON hd.hd_income_band_sk = ic.ib_income_band_sk
    LEFT JOIN web_sales w ON c.c_customer_sk = w.ws_bill_customer_sk
    GROUP BY c.c_customer_id, c.c_birth_year, c.c_birth_month, c.c_birth_day, ic.ib_lower_bound, ic.ib_upper_bound
)
SELECT 
    cd.cd_gender,
    cd.cd_marital_status,
    cd.cd_education_status,
    COUNT(DISTINCT c.c_customer_id) AS total_customers,
    SUM(sws.ws_sales_price * sws.ws_quantity) AS total_sales,
    COALESCE(SUM(Ranked.ws_sales_price), 0) AS top_sales_price,
    SUM(CASE WHEN Ranked.rnk = 1 THEN Ranked.ws_sales_price ELSE 0 END) AS highest_sales,
    AVG(sa.age) AS average_age
FROM CustomerDemographics cd
JOIN SalesWithAgeAndIncome sa ON cd.cd_demo_sk = (SELECT c.c_current_cdemo_sk FROM customer c WHERE c.c_customer_id = sa.c_customer_id)
LEFT JOIN RankedSales Ranked ON sa.c_customer_id = Ranked.ws_bill_customer_sk
LEFT JOIN web_sales sws ON sa.c_customer_id = sws.ws_bill_customer_sk
WHERE cd.order_count > 0 
  AND cd.total_profit > 1000 
  AND (sa.ib_lower_bound IS NOT NULL OR sa.ib_upper_bound IS NULL)
GROUP BY cd.cd_gender, cd.cd_marital_status, cd.cd_education_status, sa.age
HAVING COUNT(DISTINCT c.c_customer_id) > 50 OR AVG(sa.age) < 30
ORDER BY total_sales DESC, average_age ASC;
