
WITH RankedReturns AS (
    SELECT 
        sr_returned_date_sk,
        sr_return_time_sk,
        sr_item_sk,
        sr_return_quantity,
        sr_return_amt,
        RANK() OVER (PARTITION BY sr_item_sk ORDER BY sr_return_quantity DESC) AS rnk
    FROM store_returns
), 
ReturnsSummary AS (
    SELECT 
        sr_item_sk,
        COUNT(*) AS total_returns,
        SUM(sr_return_quantity) AS total_return_quantity,
        SUM(sr_return_amt) AS total_return_amount
    FROM RankedReturns
    WHERE rnk <= 10
    GROUP BY sr_item_sk
),
TopCustomers AS (
    SELECT 
        s_store_sk,
        COUNT(DISTINCT sr_customer_sk) AS returning_customers,
        SUM(sr_return_quantity) AS total_quantity_returned
    FROM store_returns
    GROUP BY s_store_sk
),
CustomerDemographics AS (
    SELECT 
        c.c_customer_sk,
        cd.cd_gender,
        cd.cd_marital_status,
        SUM(COALESCE(ws.ws_net_paid_inc_tax, 0)) AS total_spent
    FROM customer c
    LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY c.c_customer_sk, cd.cd_gender, cd.cd_marital_status
)
SELECT 
    ca.ca_city,
    COUNT(DISTINCT c.c_customer_sk) AS unique_customers,
    SUM(RS.total_return_quantity) AS total_return_qty,
    AVG(COALESCE(cd.cd_dep_count, 0)) AS avg_dep_count,
    MAX(COALESCE(cd.cd_credit_rating, 'Unknown')) AS max_credit_rating,
    STRING_AGG(DISTINCT CASE WHEN cd.cd_gender = 'M' THEN 'Male' ELSE 'Female' END, ', ') AS gender_distribution
FROM customer_address ca
JOIN customer c ON ca.ca_address_sk = c.c_current_addr_sk
JOIN CustomerDemographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
LEFT JOIN ReturnsSummary RS ON RS.sr_item_sk IN (
    SELECT 
        sr_item_sk 
    FROM store_returns 
    WHERE sr_return_quantity > 0
)
GROUP BY ca.ca_city
HAVING COUNT(DISTINCT c.c_customer_sk) > 10
ORDER BY unique_customers DESC
LIMIT 20 OFFSET 5;
