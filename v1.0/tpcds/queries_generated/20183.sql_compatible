
WITH RankedSales AS (
    SELECT
        ws.ws_item_sk,
        SUM(ws.ws_quantity) AS total_quantity,
        SUM(ws.ws_net_profit) AS total_net_profit,
        ROW_NUMBER() OVER (PARTITION BY ws.ws_item_sk ORDER BY SUM(ws.ws_net_profit) DESC) AS rn
    FROM web_sales ws
    JOIN item i ON ws.ws_item_sk = i.i_item_sk
    JOIN customer c ON ws.ws_bill_customer_sk = c.c_customer_sk
    WHERE c.c_birth_year IS NOT NULL
    GROUP BY ws.ws_item_sk
),
CustomerDemographics AS (
    SELECT
        cd.cd_demo_sk,
        cd.cd_gender,
        COUNT(c.c_customer_sk) AS customer_count,
        AVG(cd.cd_purchase_estimate) AS avg_purchase_estimate
    FROM customer c
    LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    GROUP BY cd.cd_demo_sk, cd.cd_gender
),
ReturnStatistics AS (
    SELECT
        sr_item_sk,
        COUNT(sr_returned_date_sk) AS total_returns,
        SUM(sr_return_amt_inc_tax) AS total_return_amt
    FROM store_returns
    GROUP BY sr_item_sk
),
FinalResults AS (
    SELECT
        i.i_item_id,
        rs.total_quantity,
        rs.total_net_profit,
        cd.cd_gender,
        cd.customer_count,
        cd.avg_purchase_estimate,
        COALESCE(rs.total_returns, 0) AS total_returns,
        COALESCE(rs.total_return_amt, 0) AS total_return_amt
    FROM RankedSales rs
    JOIN item i ON rs.ws_item_sk = i.i_item_sk
    LEFT JOIN CustomerDemographics cd ON cd.customer_count > 0
    LEFT JOIN ReturnStatistics rst ON rst.sr_item_sk = rs.ws_item_sk
    WHERE rs.rn = 1 OR (cd.cd_gender = 'F' AND cd.avg_purchase_estimate > 500)
)
SELECT
    fr.i_item_id,
    fr.total_quantity,
    fr.total_net_profit,
    CASE 
        WHEN fr.total_returns > 10 THEN 'High Return'
        WHEN fr.total_return_amt > 1000 THEN 'High Return Amount'
        ELSE 'Normal'
    END AS return_status,
    CONCAT(i.i_item_desc, ' - ', 'Item analysis') AS item_analysis
FROM FinalResults fr
JOIN item i ON fr.i_item_id = i.i_item_id
WHERE fr.total_net_profit IS NOT NULL
ORDER BY fr.total_net_profit DESC, fr.total_quantity ASC
LIMIT 100;
