
WITH RECURSIVE date_series AS (
    SELECT MIN(d_date_sk) AS d_date_sk
    FROM date_dim
    UNION ALL
    SELECT d_date_sk + 1
    FROM date_dim
    WHERE d_date_sk + 1 <= (SELECT MAX(d_date_sk) FROM date_dim)
),
customer_return_summary AS (
    SELECT 
        c.c_customer_id,
        COUNT(DISTINCT sr.ticket_number) AS total_returns,
        SUM(sr.return_amt) AS total_return_amount,
        AVG(sr.return_quantity) AS avg_quantity_returned
    FROM customer c
    LEFT JOIN store_returns sr ON c.c_customer_sk = sr.sr_customer_sk 
    WHERE sr.returned_date_sk IS NOT NULL 
    GROUP BY c.c_customer_id
),
sales_summary AS (
    SELECT 
        d.d_year,
        d.d_month_seq,
        SUM(ws.net_profit) AS total_net_profit
    FROM date_dim d
    JOIN web_sales ws ON d.d_date_sk = ws.ws_sold_date_sk 
    WHERE d.d_year >= 1998
    GROUP BY d.d_year, d.d_month_seq
),
income_bracket_statistics AS (
    SELECT 
        h.hd_income_band_sk,
        AVG(h.hd_dep_count) AS avg_dep_count,
        COUNT(DISTINCT c.c_customer_id) AS customer_count
    FROM household_demographics h
    JOIN customer c ON h.hd_demo_sk = c.c_current_cdemo_sk
    WHERE h.hd_income_band_sk IS NOT NULL
    GROUP BY h.hd_income_band_sk
)
SELECT 
    d.year_month,
    COALESCE(cs.total_net_profit, 0) AS total_net_profit,
    COALESCE(crs.total_returns, 0) AS total_returns,
    COALESCE(crs.total_return_amount, 0) AS total_return_amount,
    COALESCE(ibs.avg_dep_count, 0) AS avg_dep_count,
    CASE
        WHEN ibs.customer_count > 0 THEN ROUND(COALESCE(crs.total_return_amount, 0) / ibs.customer_count, 2)
        ELSE 0
    END AS avg_return_amount_per_customer
FROM (
    SELECT 
        CONCAT(d.d_year, '-', LPAD(d.d_month_seq, 2, '0')) AS year_month,
        d.d_year,
        d.d_month_seq
    FROM date_dim d
    WHERE d.d_year BETWEEN 1998 AND 2000
) d
LEFT JOIN sales_summary cs ON d.d_year = cs.d_year AND d.d_month_seq = cs.d_month_seq
LEFT JOIN customer_return_summary crs ON 1=1  
LEFT JOIN income_bracket_statistics ibs ON ibs.hd_income_band_sk IN (SELECT DISTINCT hd_income_band_sk FROM household_demographics)
GROUP BY d.year_month, cs.total_net_profit, crs.total_returns, crs.total_return_amount, ibs.avg_dep_count, ibs.customer_count
ORDER BY d.year_month;
