WITH ranked_sales AS (
    SELECT 
        ws_item_sk,
        SUM(ws_quantity) AS total_quantity,
        SUM(ws_sales_price) AS total_sales_price,
        ROW_NUMBER() OVER (PARTITION BY ws_item_sk ORDER BY SUM(ws_quantity) DESC) AS rank
    FROM 
        web_sales
    GROUP BY 
        ws_item_sk
),
customer_info AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        hd.hd_income_band_sk,
        cd.cd_marital_status,
        CASE 
            WHEN cd.cd_purchase_estimate IS NULL THEN 'Unknown'
            ELSE CAST(cd.cd_purchase_estimate AS VARCHAR)
        END AS purchase_estimate
    FROM 
        customer c
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN 
        household_demographics hd ON cd.cd_demo_sk = hd.hd_demo_sk
    WHERE 
        cd.cd_gender IS NOT NULL
),
sales_with_customers AS (
    SELECT 
        rs.ws_item_sk,
        ci.c_customer_sk,
        ci.c_first_name,
        ci.c_last_name,
        ci.cd_gender,
        ci.hd_income_band_sk,
        ci.purchase_estimate,
        rs.total_quantity,
        rs.total_sales_price
    FROM 
        ranked_sales rs
    LEFT JOIN 
        web_sales ws ON rs.ws_item_sk = ws.ws_item_sk
    LEFT JOIN 
        customer_info ci ON ws.ws_bill_customer_sk = ci.c_customer_sk
)
SELECT 
    W.w_warehouse_name,
    COALESCE(SUM(swc.total_sales_price), 0) AS total_sales,
    COUNT(DISTINCT swc.c_customer_sk) AS unique_customers,
    AVG(swc.total_quantity) AS avg_quantity_sold
FROM 
    warehouse W
LEFT JOIN 
    sales_with_customers swc ON swc.ws_ship_mode_sk = W.w_warehouse_sk
WHERE 
    W.w_state = 'CA'
GROUP BY 
    W.w_warehouse_name
HAVING 
    SUM(swc.total_sales_price) > 1000
ORDER BY 
    total_sales DESC;