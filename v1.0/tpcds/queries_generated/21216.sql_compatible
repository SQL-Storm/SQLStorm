
WITH RECURSIVE IncomeRanges AS (
    SELECT ib_income_band_sk, ib_lower_bound, ib_upper_bound,
           (ib_lower_bound + ib_upper_bound) / 2 AS mid_point
    FROM income_band
    UNION ALL
    SELECT ib_income_band_sk, ib_lower_bound, ib_upper_bound,
           (ib_lower_bound + ib_upper_bound) / 2 AS mid_point
    FROM IncomeRanges
    WHERE ib_upper_bound - ib_lower_bound > 1
), 
CustomerDetails AS (
    SELECT c.c_customer_sk,
           c.c_customer_id,
           cd.cd_gender,
           cd.cd_marital_status,
           cd.cd_purchase_estimate,
           ca.ca_city,
           DENSE_RANK() OVER (PARTITION BY ca.ca_state ORDER BY cd.cd_purchase_estimate DESC) AS rank_within_state
    FROM customer c
    JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    JOIN customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
    WHERE cd.cd_purchase_estimate IS NOT NULL
), 
SalesData AS (
    SELECT ws.ws_item_sk, 
           SUM(ws.ws_quantity) AS total_quantity,
           SUM(ws.ws_net_profit) AS total_profit,
           EXTRACT(MONTH FROM d.d_date) AS sale_month
    FROM web_sales ws
    JOIN date_dim d ON ws.ws_sold_date_sk = d.d_date_sk
    WHERE d.d_year = 2023
    GROUP BY ws.ws_item_sk, EXTRACT(MONTH FROM d.d_date)
), 
ReturnsData AS (
    SELECT sr_item_sk,
           SUM(sr_return_quantity) AS total_returns,
           SUM(sr_return_amt_inc_tax) AS total_returned_amount
    FROM store_returns
    GROUP BY sr_item_sk
)
SELECT cd.c_customer_id,
       cd.ca_city,
       COALESCE(ir.ib_lower_bound::TEXT, 'Unknown') AS income_range,
       sd.sale_month,
       sd.total_quantity,
       sd.total_profit,
       COALESCE(rd.total_returns, 0) AS total_returns,
       COALESCE(rd.total_returned_amount, 0) AS returned_amount
FROM CustomerDetails cd
LEFT JOIN IncomeRanges ir ON cd.cd_purchase_estimate BETWEEN ir.ib_lower_bound AND ir.ib_upper_bound
LEFT JOIN SalesData sd ON cd.c_customer_sk = sd.ws_item_sk
LEFT JOIN ReturnsData rd ON sd.ws_item_sk = rd.sr_item_sk
WHERE (cd.cd_gender = 'F' AND cd.rank_within_state <= 10) 
   OR (cd.cd_gender = 'M' AND sd.total_profit > (SELECT AVG(total_profit) FROM SalesData))
ORDER BY cd.ca_city ASC, sd.total_profit DESC NULLS LAST;
