
WITH RankedSales AS (
    SELECT 
        ws.web_site_id,
        ws.ws_order_number,
        ws.ws_sales_price,
        ROW_NUMBER() OVER (PARTITION BY ws.web_site_id ORDER BY ws.ws_sales_price DESC) AS sales_rank
    FROM 
        web_sales ws
    WHERE 
        ws.ws_sales_price IS NOT NULL 
        AND ws.ws_sales_price > 0
), 
CustomerInfo AS (
    SELECT 
        c.c_customer_id, 
        cd.cd_gender,
        CASE 
            WHEN cd.cd_marital_status = 'S' THEN 'Single'
            WHEN cd.cd_marital_status = 'M' THEN 'Married'
            ELSE 'Unknown'
        END AS marital_status,
        COALESCE(hd.hd_income_band_sk, 0) AS income_band
    FROM 
        customer c 
        LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
        LEFT JOIN household_demographics hd ON c.c_current_hdemo_sk = hd.hd_demo_sk
), 
SalesSummary AS (
    SELECT 
        ci.c_customer_id,
        SUM(r.rr_sales_amount) AS total_sales,
        COUNT(DISTINCT r.rr_order_number) AS order_count
    FROM 
        customer_info ci
        JOIN (
            SELECT 
                wr_returned_date_sk,
                wr_refunded_customer_sk,
                SUM(wr_return_amt) AS rr_sales_amount,
                wr_order_number
            FROM 
                web_returns wr
            GROUP BY 
                wr_returned_date_sk, wr_refunded_customer_sk, wr_order_number
        ) r ON ci.c_customer_id = r.wr_refunded_customer_sk
    GROUP BY 
        ci.c_customer_id
)

SELECT 
    ci.c_customer_id,
    COUNT(DISTINCT r.ws_order_number) AS total_orders,
    SUM(r.ws_sales_price) AS total_revenue,
    AVG(r.ws_sales_price) AS average_order_value,
    DENSE_RANK() OVER (PARTITION BY ci.income_band ORDER BY SUM(r.ws_sales_price) DESC) AS income_band_rank,
    CASE 
        WHEN SUM(r.ws_sales_price) IS NULL THEN 'No Sales'
        WHEN SUM(r.ws_sales_price) > 10000 THEN 'High Roller'
        ELSE 'Occasional Buyer'
    END AS customer_category,
    COALESCE(MAX(s.total_sales), 0) AS total_returned_sales
FROM 
    RankedSales r
    JOIN CustomerInfo ci ON r.c_customer_id = ci.c_customer_id
    LEFT JOIN SalesSummary s ON ci.c_customer_id = s.c_customer_id
WHERE 
    (ci.marital_status = 'Single' OR ci.marital_status IS NULL)
    AND r.sales_rank <= 5
GROUP BY 
    ci.c_customer_id, ci.income_band
HAVING 
    COUNT(DISTINCT r.ws_order_number) > 0
ORDER BY 
    total_revenue DESC
LIMIT 10;
