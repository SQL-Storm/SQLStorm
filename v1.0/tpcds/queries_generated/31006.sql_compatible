
WITH RECURSIVE sales_dates AS (
    SELECT d_date_sk
    FROM date_dim
    WHERE d_date = (SELECT MAX(d_date) FROM date_dim)
    UNION ALL
    SELECT d_date_sk - 1
    FROM sales_dates
    WHERE d_date_sk > 1
),
customer_stats AS (
    SELECT
        cd_demo_sk,
        COUNT(DISTINCT c.c_customer_sk) AS total_customers,
        AVG(cd_purchase_estimate) AS avg_purchase_estimate,
        SUM(CASE WHEN cd_marital_status = 'M' THEN 1 ELSE 0 END) AS married_count,
        SUM(CASE WHEN cd_gender = 'F' THEN 1 ELSE 0 END) AS female_count
    FROM
        customer_demographics cd
    JOIN
        customer c ON cd.cd_demo_sk = c.c_current_cdemo_sk
    GROUP BY
        cd_demo_sk
),
sales_data AS (
    SELECT
        ws.web_site_sk,
        SUM(ws.ws_net_profit) AS total_net_profit,
        COUNT(DISTINCT ws.ws_order_number) AS total_orders,
        COUNT(DISTINCT ws.ws_bill_customer_sk) AS unique_customers
    FROM
        web_sales ws
    WHERE
        ws.ws_sold_date_sk IN (SELECT d_date_sk FROM sales_dates)
    GROUP BY
        ws.web_site_sk
)
SELECT
    cs.cd_demo_sk,
    cs.total_customers,
    cs.avg_purchase_estimate,
    cs.married_count,
    cs.female_count,
    sd.total_net_profit,
    sd.total_orders,
    sd.unique_customers
FROM
    customer_stats cs
LEFT JOIN
    sales_data sd ON cs.cd_demo_sk = sd.web_site_sk
WHERE
    cs.total_customers > 0 AND
    sd.total_net_profit IS NOT NULL
ORDER BY 
    sd.total_net_profit DESC
FETCH FIRST 100 ROWS ONLY;
