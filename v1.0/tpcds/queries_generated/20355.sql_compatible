
WITH RankedReturns AS (
    SELECT 
        sr_item_sk,
        SUM(sr_return_quantity) AS total_returned,
        SUM(sr_return_amt) AS total_return_amt,
        RANK() OVER (PARTITION BY sr_item_sk ORDER BY SUM(sr_return_amt) DESC) AS return_rank
    FROM 
        store_returns
    GROUP BY 
        sr_item_sk
),
CustomerGenderIncome AS (
    SELECT 
        cd_gender,
        ib_income_band_sk,
        COUNT(c_customer_sk) AS customer_count
    FROM 
        customer 
    JOIN 
        customer_demographics ON c_current_cdemo_sk = cd_demo_sk
    JOIN 
        household_demographics ON cd_demo_sk = hd_demo_sk
    JOIN 
        income_band ON hd_income_band_sk = ib_income_band_sk
    GROUP BY 
        cd_gender, ib_income_band_sk
),
HighValueCustomers AS (
    SELECT 
        c_customer_id,
        SUM(ws_net_profit) AS total_profit
    FROM 
        web_sales 
    JOIN 
        customer ON ws_bill_customer_sk = c_customer_sk
    GROUP BY 
        c_customer_id
    HAVING 
        SUM(ws_net_profit) > 1000
),
SalesSummary AS (
    SELECT 
        i_item_id,
        COALESCE(SUM(ss_net_profit), 0) AS total_store_profit,
        COALESCE(SUM(cs_net_profit), 0) AS total_catalog_profit,
        COALESCE(SUM(ws_net_profit), 0) AS total_web_profit
    FROM 
        item
    LEFT JOIN 
        store_sales ON i_item_sk = ss_item_sk
    LEFT JOIN 
        catalog_sales ON i_item_sk = cs_item_sk
    LEFT JOIN 
        web_sales ON i_item_sk = ws_item_sk
    GROUP BY 
        i_item_id
)
SELECT 
    s.i_item_id,
    s.total_store_profit,
    s.total_catalog_profit,
    s.total_web_profit,
    COALESCE(rr.total_returned, 0) AS total_returned,
    COALESCE(rr.total_return_amt, 0) AS total_return_amt,
    cg.customer_count,
    CASE 
        WHEN s.total_store_profit > 5000 THEN 'High Performer'
        WHEN s.total_store_profit BETWEEN 1000 AND 5000 THEN 'Average Performer'
        ELSE 'Low Performer'
    END AS performance_category,
    (SELECT COUNT(*) FROM HighValueCustomers) AS high_value_customer_count
FROM 
    SalesSummary s
LEFT JOIN 
    RankedReturns rr ON s.i_item_id = rr.sr_item_sk
LEFT JOIN 
    (SELECT cd_gender, SUM(customer_count) AS total_customers 
     FROM CustomerGenderIncome 
     GROUP BY cd_gender) cg ON 1 = 1
WHERE 
    s.total_store_profit IS NOT NULL
ORDER BY 
    s.total_store_profit DESC, total_returned DESC
LIMIT 50;
