
WITH RankedSales AS (
    SELECT 
        ws.web_site_sk,
        ws.ws_sold_date_sk,
        SUM(ws.ws_sales_price) AS total_sales,
        RANK() OVER (PARTITION BY ws.web_site_sk ORDER BY SUM(ws.ws_sales_price) DESC) AS sales_rank
    FROM 
        web_sales ws
    JOIN 
        date_dim dd ON ws.ws_sold_date_sk = dd.d_date_sk
    WHERE 
        dd.d_year = 2023
    GROUP BY 
        ws.web_site_sk, ws.ws_sold_date_sk
),
CustomerStats AS (
    SELECT 
        c.c_customer_sk,
        cd.cd_gender,
        COUNT(DISTINCT ws.ws_order_number) AS total_orders,
        SUM(ws.ws_net_profit) AS total_profit
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    WHERE 
        cd.cd_gender = 'F' 
        AND (ws.ws_net_profit IS NOT NULL OR ws.ws_net_profit = 0)
    GROUP BY 
        c.c_customer_sk, cd.cd_gender
),
StoreSalesSummary AS (
    SELECT 
        ss.ss_store_sk,
        COUNT(ss.ss_ticket_number) AS total_tickets,
        SUM(ss.ss_net_profit) AS total_store_profit
    FROM 
        store_sales ss
    WHERE 
        ss.ss_sold_date_sk IN (SELECT d_date_sk FROM date_dim WHERE d_year = 2023)
    GROUP BY 
        ss.ss_store_sk
)
SELECT 
    rs.web_site_sk,
    rs.total_sales,
    cs.total_orders,
    cs.total_profit,
    COALESCE(ss.total_tickets, 0) AS total_tickets,
    COALESCE(ss.total_store_profit, 0) AS total_store_profit,
    CASE 
        WHEN rs.total_sales > 100000 THEN 'High Sales'
        WHEN rs.total_sales BETWEEN 50000 AND 100000 THEN 'Moderate Sales'
        ELSE 'Low Sales'
    END AS sales_category
FROM 
    RankedSales rs
LEFT JOIN 
    CustomerStats cs ON rs.web_site_sk = cs.c_customer_sk
LEFT JOIN 
    StoreSalesSummary ss ON rs.web_site_sk = ss.ss_store_sk
WHERE 
    rs.sales_rank = 1
ORDER BY 
    rs.total_sales DESC;
