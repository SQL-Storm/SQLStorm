
WITH CustomerReturns AS (
    SELECT
        sr_customer_sk,
        SUM(sr_return_quantity) AS total_returned,
        SUM(sr_return_amt_inc_tax) AS total_return_amount,
        COUNT(DISTINCT sr_ticket_number) AS return_count
    FROM
        store_returns
    GROUP BY
        sr_customer_sk
),
TopCustomers AS (
    SELECT
        cr.sr_customer_sk,
        cr.total_returned,
        cr.total_return_amount,
        RANK() OVER (ORDER BY cr.total_return_amount DESC) AS rank
    FROM
        CustomerReturns cr
)
SELECT
    c.c_customer_id,
    c.c_first_name,
    c.c_last_name,
    ca.ca_city,
    ca.ca_state,
    tc.total_returned,
    tc.total_return_amount,
    CASE 
        WHEN tc.return_count > 5 THEN 'Frequent Returner'
        WHEN tc.return_count BETWEEN 2 AND 5 THEN 'Moderate Returner'
        ELSE 'Infrequent Returner'
    END AS return_category,
    (SELECT COUNT(*) 
     FROM store s 
     WHERE s.s_state = ca.ca_state) AS total_stores_in_state
FROM
    TopCustomers tc
JOIN
    customer c ON tc.sr_customer_sk = c.c_customer_sk
JOIN
    customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
LEFT JOIN
    store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
JOIN
    CustomerReturns cr ON tc.sr_customer_sk = cr.sr_customer_sk
WHERE
    (tc.total_returned IS NOT NULL)
    AND (tc.total_return_amount > 1000)
    AND (ca.ca_state IS NOT NULL)
GROUP BY
    c.c_customer_id,
    c.c_first_name,
    c.c_last_name,
    ca.ca_city,
    ca.ca_state,
    tc.total_returned,
    tc.total_return_amount,
    tc.rank
ORDER BY
    tc.rank
FETCH FIRST 100 ROWS ONLY;
