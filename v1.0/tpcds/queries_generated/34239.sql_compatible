
WITH RECURSIVE sales_hierarchy AS (
    SELECT c.c_customer_sk, c.c_first_name, c.c_last_name, 
           NULL AS parent_customer_sk, 
           0 AS level
    FROM customer c
    WHERE c.c_customer_sk IS NOT NULL

    UNION ALL

    SELECT c.c_customer_sk, c.c_first_name, c.c_last_name,
           sh.c_customer_sk AS parent_customer_sk, 
           sh.level + 1
    FROM customer c
    JOIN store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    JOIN sales_hierarchy sh ON ss.ss_cdemo_sk = sh.c_customer_sk
)
SELECT ca.ca_city, 
       COUNT(DISTINCT sh.c_customer_sk) AS total_customers, 
       AVG(cd.cd_purchase_estimate) AS avg_purchase_estimate,
       SUM(ws.ws_net_profit) AS total_net_profit,
       STRING_AGG(DISTINCT CONCAT(c.c_first_name, ' ', c.c_last_name), ', ') AS customer_names,
       CASE 
           WHEN AVG(cd.cd_purchase_estimate) > 1000 THEN 'High Value' 
           WHEN AVG(cd.cd_purchase_estimate) BETWEEN 500 AND 1000 THEN 'Medium Value' 
           ELSE 'Low Value' 
       END AS customer_value_segment
FROM sales_hierarchy sh
LEFT JOIN customer_demographics cd ON sh.c_customer_sk = cd.cd_demo_sk
JOIN customer_address ca ON ca.ca_address_sk = sh.c_customer_sk
LEFT JOIN web_sales ws ON ws.ws_bill_customer_sk = sh.c_customer_sk
WHERE ca.ca_city IS NOT NULL
GROUP BY ca.ca_city, 
         AVG(cd.cd_purchase_estimate), 
         SUM(ws.ws_net_profit)
HAVING COUNT(DISTINCT sh.c_customer_sk) > 10
ORDER BY total_net_profit DESC
FETCH FIRST 10 ROWS ONLY;
