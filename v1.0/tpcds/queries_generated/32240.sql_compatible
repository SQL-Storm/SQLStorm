
WITH RECURSIVE item_hierarchy AS (
    SELECT i_item_sk, i_item_id, i_item_desc, i_current_price, i_class, i_category
    FROM item
    WHERE i_item_sk < 1000  
    
    UNION ALL
    
    SELECT i.i_item_sk, i.i_item_id, i.i_item_desc, (ih.i_current_price * 0.9) AS discounted_price, i.i_class, i.i_category
    FROM item_hierarchy ih
    JOIN item i ON ih.i_item_sk = i.i_item_sk AND i.i_item_sk < 1000 
),
date_range AS (
    SELECT d_date_sk, d_date 
    FROM date_dim
    WHERE d_date >= '2001-01-01' AND d_date < '2001-12-31'
),
sales_summary AS (
    SELECT ws_item_sk, SUM(ws_quantity) AS total_quantity, SUM(ws_net_profit) AS total_profit
    FROM web_sales
    WHERE ws_sold_date_sk IN (SELECT d_date_sk FROM date_range)
    GROUP BY ws_item_sk
)
SELECT 
    i.i_item_id,
    i.i_item_desc,
    COALESCE(ss.total_quantity, 0) AS total_quantity,
    COALESCE(ss.total_profit, 0) AS total_profit,
    CASE 
        WHEN COALESCE(ss.total_profit, 0) > 0 THEN 'Profitable'
        WHEN COALESCE(ss.total_profit, 0) < 0 THEN 'Loss'
        ELSE 'No Profit'
    END AS profit_status,
    ROW_NUMBER() OVER (PARTITION BY i.i_class ORDER BY COALESCE(ss.total_profit, 0) DESC) AS rank_within_class
FROM item_hierarchy i
LEFT JOIN sales_summary ss ON i.i_item_sk = ss.ws_item_sk
JOIN customer_address ca ON ca.ca_address_sk = (SELECT c_current_addr_sk FROM customer WHERE c_current_cdemo_sk = 1)
WHERE i.i_current_price IS NOT NULL
AND (ss.total_quantity IS NULL OR ss.total_quantity > 5)
AND (i.i_class LIKE '%Electronics%' OR i.i_class LIKE '%Clothing%')
ORDER BY i.i_item_desc
LIMIT 100;
