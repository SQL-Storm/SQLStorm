
WITH RECURSIVE sales_hierarchy AS (
    SELECT 
        ws_bill_customer_sk,
        ws_order_number,
        ws_quantity,
        ws_ext_sales_price,
        1 AS level
    FROM web_sales
    WHERE ws_quantity > 0
    
    UNION ALL

    SELECT 
        ws.ws_bill_customer_sk,
        ws.ws_order_number,
        ws.ws_quantity,
        ws.ws_ext_sales_price,
        sh.level + 1
    FROM web_sales ws
    JOIN sales_hierarchy sh ON ws.ws_bill_customer_sk = sh.ws_bill_customer_sk 
    AND ws.ws_order_number = sh.ws_order_number 
    WHERE ws.ws_quantity > 0 AND sh.level < 5
),
customer_summary AS (
    SELECT 
        c.c_customer_sk,
        COUNT(DISTINCT sh.ws_order_number) AS total_orders,
        SUM(sh.ws_ext_sales_price) AS total_sales,
        AVG(sh.ws_quantity) AS avg_quantity
    FROM customer c
    LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    LEFT JOIN sales_hierarchy sh ON sh.ws_bill_customer_sk = ws.ws_bill_customer_sk
    GROUP BY c.c_customer_sk
),
promo_summary AS (
    SELECT 
        p.p_promo_id,
        COUNT(DISTINCT ws.ws_order_number) AS promo_order_count,
        SUM(ws.ws_net_profit) AS total_promo_profit
    FROM promotion p
    JOIN web_sales ws ON p.p_promo_sk = ws.ws_promo_sk
    GROUP BY p.p_promo_id
)
SELECT 
    cs.c_customer_sk,
    cs.total_orders,
    cs.total_sales,
    cs.avg_quantity,
    ps.promo_order_count,
    ps.total_promo_profit
FROM customer_summary cs
FULL OUTER JOIN promo_summary ps ON cs.c_customer_sk IS NOT NULL AND ps.p_promo_id IS NOT NULL
WHERE COALESCE(cs.total_sales, 0) > 10000 OR COALESCE(ps.total_promo_profit, 0) > 5000
ORDER BY COALESCE(cs.total_sales, 0) DESC, COALESCE(ps.total_promo_profit, 0) DESC
LIMIT 100;
