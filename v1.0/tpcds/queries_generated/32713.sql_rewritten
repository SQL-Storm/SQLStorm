WITH RECURSIVE SalesCTE AS (
    SELECT 
        ss_item_sk,
        SUM(ss_ext_sales_price) AS total_sales,
        COUNT(ss_ticket_number) AS total_transactions,
        ROW_NUMBER() OVER (PARTITION BY ss_item_sk ORDER BY SUM(ss_ext_sales_price) DESC) AS rn
    FROM store_sales
    GROUP BY ss_item_sk
),
CustomerStats AS (
    SELECT 
        c.c_customer_sk,
        COALESCE(cd.cd_gender, 'U') AS gender,
        COALESCE(SUM(CASE WHEN ss.ss_sold_date_sk IS NOT NULL THEN 1 ELSE 0 END), 0) AS total_sales,
        COALESCE(SUM(ss.ss_net_profit), 0) AS total_net_profit
    FROM customer AS c
    LEFT JOIN store_sales AS ss ON c.c_customer_sk = ss.ss_customer_sk
    LEFT JOIN customer_demographics AS cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    GROUP BY c.c_customer_sk, cd.cd_gender
),
TopSellingItems AS (
    SELECT 
        i.i_item_id,
        i.i_item_desc,
        s.total_sales,
        s.total_transactions
    FROM SalesCTE AS s
    JOIN item AS i ON s.ss_item_sk = i.i_item_sk
    WHERE s.rn <= 10  
),
SalesByRegion AS (
    SELECT 
        ca_state,
        SUM(ss_ext_sales_price) AS region_sales
    FROM store_sales 
    JOIN store ON store.s_store_sk = store_sales.ss_store_sk
    JOIN customer_address AS ca ON ca.ca_address_sk = store.s_store_sk
    GROUP BY ca_state
)
SELECT 
    cs.c_customer_sk,
    cs.gender,
    cs.total_sales,
    cs.total_net_profit,
    tb.item_id,
    tb.item_desc,
    tb.total_sales AS item_sales,
    tb.total_transactions,
    sr.region_sales 
FROM CustomerStats AS cs
JOIN TopSellingItems AS tb ON cs.total_sales > 0 
LEFT JOIN SalesByRegion AS sr ON sr.region_sales > 10000
WHERE cs.total_net_profit > 0
ORDER BY cs.total_net_profit DESC, tb.item_sales DESC
FETCH FIRST 100 ROWS ONLY;