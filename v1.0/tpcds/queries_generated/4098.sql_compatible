
WITH CustomerReturns AS (
    SELECT 
        sr_customer_sk, 
        COUNT(sr_ticket_number) AS total_returns, 
        SUM(sr_return_amt) AS total_return_amount, 
        SUM(sr_return_tax) AS total_return_tax
    FROM 
        store_returns
    GROUP BY 
        sr_customer_sk
), WebSalesDetails AS (
    SELECT 
        ws_bill_customer_sk,
        COUNT(ws_order_number) AS total_orders,
        SUM(ws_net_profit) AS total_net_profit,
        AVG(ws_sales_price) AS avg_sales_price
    FROM 
        web_sales
    GROUP BY 
        ws_bill_customer_sk
), CustomerDemo AS (
    SELECT 
        c.c_customer_sk, 
        cd.cd_gender, 
        cd.cd_marital_status, 
        cd.cd_credit_rating, 
        SUM(CASE 
                WHEN wr.cr_returned_date_sk IS NOT NULL THEN 1 
                ELSE 0 
            END) AS web_returns
    FROM 
        customer c 
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN 
        web_returns wr ON c.c_customer_sk = wr.wr_returning_customer_sk
    GROUP BY 
        c.c_customer_sk, cd.cd_gender, cd.cd_marital_status, cd.cd_credit_rating
)
SELECT 
    cd.c_customer_sk, 
    cd.cd_gender, 
    cd.cd_marital_status,
    COALESCE(cr.total_returns, 0) AS total_store_returns,
    COALESCE(ws.total_orders, 0) AS total_web_orders,
    COALESCE(ws.total_net_profit, 0) AS total_web_profit,
    cd.web_returns,
    (cd.web_returns + COALESCE(cr.total_returns, 0) + COALESCE(ws.total_orders, 0)) AS total_activity
FROM 
    CustomerDemo cd
LEFT JOIN 
    CustomerReturns cr ON cd.c_customer_sk = cr.sr_customer_sk
LEFT JOIN 
    WebSalesDetails ws ON cd.c_customer_sk = ws.ws_bill_customer_sk
WHERE 
    (cd.cd_gender = 'F' AND cd.web_returns > 3) 
    OR (cd.cd_gender = 'M' AND cd.web_returns <= 3)
ORDER BY 
    total_activity DESC 
LIMIT 100;
