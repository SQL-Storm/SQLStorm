
WITH RECURSIVE ranked_sales AS (
    SELECT 
        ws_item_sk, 
        SUM(ws_quantity) AS total_quantity,
        RANK() OVER (PARTITION BY ws_item_sk ORDER BY SUM(ws_quantity) DESC) AS rank
    FROM 
        web_sales
    GROUP BY 
        ws_item_sk
),
total_revenue AS (
    SELECT 
        ws_item_sk, 
        SUM(ws_net_paid) AS total_net_paid
    FROM 
        web_sales
    GROUP BY 
        ws_item_sk
),
customer_demographics AS (
    SELECT 
        c.c_customer_sk, 
        cd.cd_gender, 
        cd.cd_marital_status, 
        cd.cd_education_status, 
        COUNT(DISTINCT cs.cs_order_number) AS total_orders
    FROM 
        customer c 
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    LEFT JOIN 
        catalog_sales cs ON c.c_customer_sk = cs.cs_bill_customer_sk
    GROUP BY 
        c.c_customer_sk, cd.cd_gender, cd.cd_marital_status, cd.cd_education_status
    HAVING 
        COUNT(DISTINCT cs.cs_order_number) > 5
),
filtered_items AS (
    SELECT 
        i.i_item_sk, 
        i.i_item_desc, 
        COALESCE(tr.total_net_paid, 0) AS total_net_paid, 
        COALESCE(rs.total_quantity, 0) AS total_quantity
    FROM 
        item i
    LEFT JOIN 
        total_revenue tr ON i.i_item_sk = tr.ws_item_sk
    LEFT JOIN 
        ranked_sales rs ON i.i_item_sk = rs.ws_item_sk
)
SELECT 
    fi.i_item_sk, 
    fi.i_item_desc, 
    fi.total_net_paid, 
    fi.total_quantity, 
    cd.cd_gender, 
    cd.cd_marital_status, 
    cd.cd_education_status
FROM 
    filtered_items fi
JOIN 
    customer_demographics cd ON fi.total_quantity > 100
ORDER BY 
    fi.total_net_paid DESC
FETCH FIRST 10 ROWS ONLY;
