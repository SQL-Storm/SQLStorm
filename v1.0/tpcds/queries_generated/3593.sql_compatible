
WITH CustomerSales AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        SUM(ws.ws_net_profit) AS total_net_profit,
        COUNT(DISTINCT ws.ws_order_number) AS order_count,
        ROW_NUMBER() OVER (PARTITION BY c.c_customer_sk ORDER BY SUM(ws.ws_net_profit) DESC) AS rn
    FROM customer c
    LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY c.c_customer_sk, c.c_first_name, c.c_last_name
), 
SalesByMonth AS (
    SELECT 
        DATE_TRUNC('month', dd.d_date) AS sales_month,
        SUM(ws.ws_net_profit) AS monthly_net_profit
    FROM web_sales ws
    JOIN date_dim dd ON ws.ws_sold_date_sk = dd.d_date_sk
    GROUP BY DATE_TRUNC('month', dd.d_date)
),
HighRefunds AS (
    SELECT 
        cr_returning_customer_sk,
        COUNT(*) AS return_count,
        SUM(cr_return_amt) AS total_return_amount
    FROM catalog_returns
    GROUP BY cr_returning_customer_sk
    HAVING SUM(cr_return_amt) > 1000
),
CustomerReturns AS (
    SELECT 
        cr.cr_returning_customer_sk AS customer_sk,
        COALESCE(cs.total_net_profit, 0) AS sales_profit,
        hr.total_return_amount AS returns_total
    FROM HighRefunds hr
    LEFT JOIN CustomerSales cs ON hr.cr_returning_customer_sk = cs.c_customer_sk
)
SELECT 
    c.c_customer_sk,
    c.c_first_name,
    c.c_last_name,
    cr.sales_profit,
    cr.returns_total,
    (cr.sales_profit - cr.returns_total) AS net_gain_loss,
    CASE 
        WHEN cr.sales_profit > cr.returns_total THEN 'Profit'
        WHEN cr.sales_profit < cr.returns_total THEN 'Loss'
        ELSE 'Break Even'
    END AS financial_status
FROM customer c
JOIN CustomerReturns cr ON c.c_customer_sk = cr.customer_sk
WHERE cr.sales_profit > 0
ORDER BY net_gain_loss DESC;
