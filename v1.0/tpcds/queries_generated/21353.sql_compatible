
WITH RankedSales AS (
    SELECT 
        ws.bill_customer_sk,
        ws.bill_cdemo_sk,
        SUM(ws.ext_sales_price) AS total_sales,
        RANK() OVER (PARTITION BY ws.bill_cdemo_sk ORDER BY SUM(ws.ext_sales_price) DESC) AS sales_rank
    FROM 
        web_sales ws
    LEFT JOIN 
        customer c ON ws.bill_customer_sk = c.c_customer_sk
    WHERE 
        c.c_birth_year BETWEEN 1980 AND 1990
        AND (ws.ext_discount_amt = 0 OR ws.ext_discount_amt IS NULL)
    GROUP BY 
        ws.bill_customer_sk, ws.bill_cdemo_sk
),
FilteredRankedSales AS (
    SELECT 
        r.bill_customer_sk,
        r.total_sales,
        r.sales_rank,
        cd.cd_gender,
        cd.cd_marital_status,
        CASE 
            WHEN cd.cd_purchase_estimate > 500 THEN 'High Value'
            WHEN cd.cd_purchase_estimate IS NULL THEN 'Unknown'
            ELSE 'Low Value'
        END AS customer_value,
        CASE 
            WHEN cd.cd_dep_count IS NULL THEN 'No Dependents'
            WHEN cd.cd_dep_count > 2 THEN 'Large Family'
            ELSE 'Small Family'
        END AS family_size
    FROM 
        RankedSales r
    JOIN 
        customer_demographics cd ON r.bill_cdemo_sk = cd.cd_demo_sk
)
SELECT 
    DISTINCT f.bill_customer_sk,
    f.total_sales,
    f.sales_rank,
    f.customer_value,
    f.family_size,
    COALESCE((SELECT AVG(total_sales)
               FROM FilteredRankedSales
               WHERE sales_rank <= f.sales_rank), 0) AS avg_higher_sales
FROM 
    FilteredRankedSales f
WHERE 
    f.family_size = 'Large Family'
ORDER BY 
    f.total_sales DESC
LIMIT 10
UNION ALL
SELECT 
    NULL,
    SUM(ss.ext_sales_price) AS total_sales,
    NULL,
    'Aggregate',
    NULL,
    NULL
FROM 
    store_sales ss
WHERE 
    ss.sold_date_sk IN (
        SELECT d_date_sk 
        FROM date_dim 
        WHERE d_year = 2023 AND d_month_seq BETWEEN 1 AND 6
    )
    AND ss.ext_discount_amt < 0;
