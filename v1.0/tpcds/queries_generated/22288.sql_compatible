
WITH CustomerData AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        COALESCE(NULLIF(cd.cd_education_status, ''), 'Not Specified') AS education_status,
        COUNT(DISTINCT wr.wr_order_number) AS web_return_count,
        COUNT(DISTINCT sr.sr_ticket_number) AS store_return_count,
        SUM(COALESCE(wr.wr_return_amount, 0) + COALESCE(sr.sr_return_amt, 0)) AS total_return_amount,
        COUNT(DISTINCT s.ss_ticket_number) AS store_sales_count
    FROM 
        customer c
    LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN web_returns wr ON c.c_customer_sk = wr.wr_returning_customer_sk
    LEFT JOIN store_returns sr ON c.c_customer_sk = sr.sr_customer_sk
    LEFT JOIN store_sales s ON c.c_customer_sk = s.ss_customer_sk
    GROUP BY 
        c.c_customer_sk, 
        c.c_first_name, 
        c.c_last_name, 
        cd.cd_gender, 
        cd.cd_marital_status, 
        cd.cd_education_status
),
IncomeBandedData AS (
    SELECT 
        cu.*,
        ib.ib_income_band_sk,
        CASE 
            WHEN cu.web_return_count > 5 THEN 'High Returner' 
            WHEN cu.total_return_amount > 1000 THEN 'VIP Customer' 
            ELSE 'Regular Customer' 
        END AS customer_segment,
        ROW_NUMBER() OVER (PARTITION BY ib.ib_income_band_sk ORDER BY cu.total_return_amount DESC) AS income_band_rank
    FROM 
        CustomerData cu
    LEFT JOIN household_demographics hd ON cu.c_customer_sk = hd.hd_demo_sk
    LEFT JOIN income_band ib ON hd.hd_income_band_sk = ib.ib_income_band_sk
)
SELECT 
    IncomeBandedData.*, 
    CONCAT(c_first_name, ' ', c_last_name) AS full_name, 
    CASE 
        WHEN income_band_rank IS NULL THEN 'No Rank' 
        ELSE CAST(income_band_rank AS VARCHAR(255)) 
    END AS rank_display
FROM 
    IncomeBandedData
WHERE 
    (customer_segment = 'VIP Customer' AND web_return_count = 0) 
    OR (customer_segment != 'VIP Customer' AND total_return_amount IS NOT NULL) 
ORDER BY 
    full_name ASC
LIMIT 100
OFFSET 50;
