
WITH RankedSales AS (
    SELECT 
        ws.web_site_sk,
        ws.net_profit,
        ROW_NUMBER() OVER (PARTITION BY ws.web_site_sk ORDER BY ws.net_profit DESC) AS rank,
        COUNT(*) OVER (PARTITION BY ws.web_site_sk) AS total_sales
    FROM 
        web_sales ws
    JOIN 
        customer c ON ws.ws_bill_customer_sk = c.c_customer_sk
    WHERE 
        c.c_birth_year BETWEEN 1970 AND 1990
        AND (c.c_preferred_cust_flag = 'Y' OR c.c_last_name LIKE '%son')
),
CustomerDemographics AS (
    SELECT 
        cd.cd_demo_sk,
        cd.gender,
        SUM(ws.net_profit) AS total_net_profit
    FROM 
        customer_demographics cd
    JOIN 
        web_sales ws ON cd.cd_demo_sk = ws.ws_bill_cdemo_sk
    WHERE 
        cd.cd_purchase_estimate > 1000
    GROUP BY 
        cd.cd_demo_sk, cd.gender
    HAVING 
        SUM(ws.net_profit) > (SELECT AVG(net_profit) FROM RankedSales)
),
CombinedData AS (
    SELECT 
        cd.cd_demo_sk,
        cd.gender,
        cs.ss_ticket_number,
        RANK() OVER (PARTITION BY cd.gender ORDER BY cs.ss_net_profit DESC) AS gender_rank,
        cs.ss_net_profit
    FROM 
        CustomerDemographics cd
    LEFT JOIN 
        store_sales cs ON cd.cd_demo_sk = cs.ss_cdemo_sk
    WHERE 
        cs.ss_net_profit IS NOT NULL
)
SELECT 
    CASE 
        WHEN gender_rank IS NULL THEN 'No Sales'
        ELSE CONCAT('Rank ', gender_rank)
    END AS sales_rank,
    gender,
    COUNT(*) AS count_of_sales,
    AVG(ss_net_profit) AS avg_net_profit
FROM 
    CombinedData
GROUP BY 
    gender, gender_rank
HAVING 
    AVG(ss_net_profit) IS NOT NULL
    AND COUNT(*) > 1
ORDER BY 
    gender, sales_rank NULLS LAST;
