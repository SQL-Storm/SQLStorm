
WITH RECURSIVE customer_tree AS (
    SELECT 
        c_customer_sk, 
        c_first_name, 
        c_last_name, 
        c_current_cdemo_sk,
        1 AS depth
    FROM customer
    WHERE c_birth_year BETWEEN 1970 AND 1980

    UNION ALL

    SELECT 
        c.c_customer_sk, 
        c.c_first_name, 
        c.c_last_name, 
        c.c_current_cdemo_sk,
        ct.depth + 1
    FROM customer c
    JOIN customer_tree ct ON c.c_current_cdemo_sk = ct.c_current_cdemo_sk AND c.c_customer_sk <> ct.c_customer_sk
    WHERE ct.depth < 5
),
analytic_sales AS (
    SELECT 
        ws.ws_sold_date_sk, 
        ws.ws_item_sk,
        SUM(ws.ws_quantity) AS total_quantity,
        AVG(ws.ws_net_profit) OVER (PARTITION BY ws.ws_item_sk ORDER BY ws.ws_sold_date_sk ROWS BETWEEN 30 PRECEDING AND CURRENT ROW) AS avg_net_profit_last_month
    FROM web_sales ws
    JOIN customer_tree ct ON ws.ws_bill_customer_sk = ct.c_customer_sk
    GROUP BY ws.ws_sold_date_sk, ws.ws_item_sk
),
store_stats AS (
    SELECT 
        ss.s_store_sk,
        COUNT(DISTINCT ss.ss_ticket_number) AS total_transactions,
        SUM(ss.ss_ext_sales_price - ss.ss_ext_discount_amt) AS total_sales
    FROM store_sales ss
    LEFT JOIN store s ON ss.ss_store_sk = s.s_store_sk
    GROUP BY ss.s_store_sk
)
SELECT 
    ca.ca_city,
    COUNT(DISTINCT ct.c_customer_sk) AS customer_count,
    COALESCE(SUM(ss.total_sales), 0) AS total_sales_per_city,
    AVG(ast.avg_net_profit_last_month) AS avg_profit_per_item
FROM customer_address ca
LEFT JOIN customer_tree ct ON ca.ca_address_sk = (
    SELECT c_current_addr_sk 
    FROM customer 
    WHERE c_customer_sk = ct.c_customer_sk
)
LEFT JOIN store_stats ss ON ss.s_store_sk IN (
    SELECT s_store_sk 
    FROM store s 
    WHERE ca.ca_city = s.s_city
)
LEFT JOIN analytic_sales ast ON ast.ws_item_sk IN (
    SELECT i_item_sk 
    FROM item 
    WHERE EXISTS (
        SELECT 1 FROM store_sales 
        WHERE ss_item_sk = i_item_sk AND ss_sold_date_sk < DATE '2002-10-01' - INTERVAL '90 days'
    )
)
WHERE ca.ca_state = 'CA' 
AND (ct.depth IS NOT NULL OR ct.c_current_cdemo_sk IS NULL)
GROUP BY ca.ca_city
HAVING COUNT(DISTINCT ct.c_customer_sk) > 0 
ORDER BY total_sales_per_city DESC
LIMIT 10;
