
WITH RankedReturns AS (
    SELECT
        sr_customer_sk,
        SUM(sr_return_quantity) AS total_return_quantity,
        SUM(sr_return_amt_inc_tax) AS total_return_amount,
        ROW_NUMBER() OVER (PARTITION BY sr_customer_sk ORDER BY SUM(sr_return_amt_inc_tax) DESC) AS rank
    FROM store_returns
    GROUP BY sr_customer_sk
),
TopReturningCustomers AS (
    SELECT
        rr.sr_customer_sk,
        rr.total_return_quantity,
        rr.total_return_amount,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_purchase_estimate,
        ROW_NUMBER() OVER (ORDER BY rr.total_return_amount DESC) AS customer_rank
    FROM RankedReturns rr
    JOIN customer c ON rr.sr_customer_sk = c.c_customer_sk
    LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    WHERE rr.rank = 1
),
HighlyEducatedCustomers AS (
    SELECT
        c.c_customer_sk,
        COUNT(*) AS total_sales,
        SUM(ws.ws_net_profit) AS total_profit,
        STRING_AGG(DISTINCT CAST(ws.ws_item_sk AS VARCHAR), ',' ORDER BY ws.ws_item_sk) AS items
    FROM web_sales ws
    JOIN customer c ON ws.ws_bill_customer_sk = c.c_customer_sk
    JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    WHERE cd.cd_education_status ILIKE '%Master%' OR cd.cd_education_status ILIKE '%Doctor%'
    GROUP BY c.c_customer_sk
    HAVING COUNT(DISTINCT ws.ws_order_number) > 5
),
CombinedResults AS (
    SELECT
        thrc.sr_customer_sk,
        thrc.total_return_quantity,
        thrc.total_return_amount,
        hec.total_sales,
        hec.total_profit,
        hec.items
    FROM TopReturningCustomers thrc
    FULL OUTER JOIN HighlyEducatedCustomers hec ON thrc.sr_customer_sk = hec.c_customer_sk
)
SELECT
    COALESCE(tr.c_first_name, c.c_first_name) AS customer_first_name,
    COALESCE(tr.c_last_name, c.c_last_name) AS customer_last_name,
    COALESCE(tr.total_return_amount, 0) AS total_return_amount,
    COALESCE(hec.total_profit, 0) AS total_profit,
    (CASE
        WHEN COALESCE(tr.total_return_amount, 0) > 0 THEN 'Return Customer'
        ELSE 'Non-Return Customer'
    END) AS customer_type,
    (CASE
        WHEN hec.items IS NOT NULL THEN 'Items Purchased: ' || hec.items
        ELSE 'No Purchases'
    END) AS purchase_details
FROM CombinedResults tr
LEFT JOIN customer c ON tr.sr_customer_sk = c.c_customer_sk
WHERE COALESCE(tr.total_return_amount, 0) > 100 OR COALESCE(hec.total_profit, 0) > 50
ORDER BY COALESCE(tr.total_return_amount, 0) DESC, COALESCE(hec.total_profit, 0) DESC
LIMIT 100;
