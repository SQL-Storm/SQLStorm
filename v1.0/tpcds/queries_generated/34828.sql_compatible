
WITH RECURSIVE sales_summary AS (
    SELECT 
        ws_bill_customer_sk,
        SUM(ws_ext_sales_price) AS total_sales,
        COUNT(ws_order_number) AS total_orders,
        DENSE_RANK() OVER (ORDER BY SUM(ws_ext_sales_price) DESC) AS rank
    FROM 
        web_sales
    GROUP BY 
        ws_bill_customer_sk
),
customer_info AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_purchase_estimate,
        cd.cd_credit_rating,
        COALESCE(hd.hd_buy_potential, 'N/A') AS buy_potential
    FROM 
        customer c
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN 
        household_demographics hd ON c.c_customer_sk = hd.hd_demo_sk
),
top_customers AS (
    SELECT 
        ci.c_customer_sk,
        ci.c_first_name,
        ci.c_last_name,
        ci.cd_gender,
        ci.cd_marital_status,
        ci.cd_purchase_estimate,
        ci.cd_credit_rating,
        ci.buy_potential,
        COALESCE(ss.total_sales, 0) AS sales_total,
        ss.total_orders
    FROM 
        customer_info ci
    LEFT JOIN 
        sales_summary ss ON ci.c_customer_sk = ss.ws_bill_customer_sk
    WHERE 
        ci.cd_purchase_estimate > 1000
    ORDER BY 
        sales_total DESC
    LIMIT 10
)
SELECT 
    tc.c_first_name || ' ' || tc.c_last_name AS full_name,
    tc.cd_gender,
    tc.cd_marital_status,
    tc.sales_total,
    tc.total_orders,
    CASE 
        WHEN tc.sales_total > 5000 THEN 'High Value'
        WHEN tc.sales_total BETWEEN 1000 AND 5000 THEN 'Medium Value'
        ELSE 'Low Value'
    END AS customer_value_category,
    DATEDIFF(CAST('2002-10-01' AS DATE), DATE(CONCAT(tc.c_birth_year, '-', LPAD(tc.c_birth_month, 2, '0'), '-', LPAD(tc.c_birth_day, 2, '0')))) AS age
FROM 
    top_customers tc
LEFT JOIN 
    customer_address ca ON tc.c_customer_sk = ca.ca_address_sk
WHERE 
    ca.ca_state IS NOT NULL
ORDER BY 
    tc.total_orders DESC, tc.sales_total DESC;
