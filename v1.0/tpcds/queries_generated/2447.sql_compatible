
WITH customer_sales AS (
    SELECT
        c.c_customer_id,
        SUM(COALESCE(ws.ws_net_paid, 0) + COALESCE(cs.cs_net_paid, 0) + COALESCE(ss.ss_net_paid, 0)) AS total_sales,
        COUNT(DISTINCT ws.ws_order_number) AS online_orders,
        COUNT(DISTINCT cs.cs_order_number) AS catalog_orders,
        COUNT(DISTINCT ss.ss_ticket_number) AS store_orders
    FROM customer c
    LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    LEFT JOIN catalog_sales cs ON c.c_customer_sk = cs.cs_bill_customer_sk
    LEFT JOIN store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    WHERE 
        c.c_birth_year >= 1980
        AND c.c_preferred_cust_flag = 'Y'
    GROUP BY c.c_customer_id
),
income_ranges AS (
    SELECT
        hd.hd_income_band_sk,
        CASE
            WHEN ib.ib_lower_bound < 20000 THEN 'Low Income'
            WHEN ib.ib_lower_bound BETWEEN 20000 AND 60000 THEN 'Middle Income'
            ELSE 'High Income'
        END AS income_group
    FROM household_demographics hd
    JOIN income_band ib ON hd.hd_income_band_sk = ib.ib_income_band_sk
),
ranked_sales AS (
    SELECT
        cs.c_customer_id,
        cs.total_sales,
        ir.income_group,
        ROW_NUMBER() OVER (PARTITION BY ir.income_group ORDER BY cs.total_sales DESC) AS sales_rank
    FROM customer_sales cs
    JOIN income_ranges ir ON cs.c_customer_id = ir.hd_income_band_sk
)
SELECT
    rs.income_group,
    COUNT(*) AS customer_count,
    AVG(rs.total_sales) AS average_sales,
    MAX(rs.total_sales) AS highest_sales,
    MIN(rs.total_sales) AS lowest_sales
FROM ranked_sales rs
WHERE rs.sales_rank <= 10
GROUP BY rs.income_group
ORDER BY rs.income_group;
