
WITH RECURSIVE SalesCTE AS (
    SELECT 
        c.c_customer_sk,
        c.c_customer_id,
        SUM(ss.ss_net_profit) AS total_sales,
        ROW_NUMBER() OVER (PARTITION BY c.c_customer_sk ORDER BY SUM(ss.ss_net_profit) DESC) AS sales_rank
    FROM 
        customer c
    LEFT JOIN 
        store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    GROUP BY 
        c.c_customer_sk, c.c_customer_id
),
AddressCTE AS (
    SELECT 
        ca.ca_address_sk,
        ca.ca_city,
        ca.ca_state,
        COUNT(DISTINCT c.c_customer_sk) AS customer_count
    FROM 
        customer_address ca
    JOIN 
        customer c ON ca.ca_address_sk = c.c_current_addr_sk
    GROUP BY 
        ca.ca_address_sk, ca.ca_city, ca.ca_state
)
SELECT 
    a.ca_city,
    a.ca_state,
    a.customer_count,
    COALESCE(SUM(s.total_sales), 0) AS total_sales,
    CASE 
        WHEN a.customer_count = 0 THEN 'No Sales'
        ELSE 'Sales Exist'
    END AS sales_status
FROM 
    AddressCTE a
LEFT JOIN 
    SalesCTE s ON a.customer_count > 0 
GROUP BY 
    a.ca_city, a.ca_state, a.customer_count
HAVING 
    SUM(COALESCE(s.total_sales, 0)) > AVG(COALESCE(s.total_sales, 0)) OVER () OR 
    SUM(COALESCE(s.total_sales, 0)) = 0
ORDER BY 
    a.ca_state, a.customer_count DESC;
