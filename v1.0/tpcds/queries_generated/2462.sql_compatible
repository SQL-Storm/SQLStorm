
WITH CustomerSales AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        SUM(ws.ws_ext_sales_price) AS total_sales,
        DENSE_RANK() OVER (PARTITION BY c.c_customer_sk ORDER BY SUM(ws.ws_ext_sales_price) DESC) AS rank_within_customer
    FROM 
        customer c
    LEFT JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_ship_customer_sk
    GROUP BY 
        c.c_customer_sk, c.c_first_name, c.c_last_name
),
TopCustomers AS (
    SELECT 
        cs.c_customer_sk,
        cs.c_first_name,
        cs.c_last_name,
        cs.total_sales
    FROM 
        CustomerSales cs
    WHERE 
        cs.rank_within_customer <= 10
),
StoreSalesByMonth AS (
    SELECT
        DATE_TRUNC('month', d.d_date) AS sale_month,
        SUM(ss.ss_ext_sales_price) AS total_store_sales
    FROM 
        store_sales ss
    JOIN 
        date_dim d ON ss.ss_sold_date_sk = d.d_date_sk
    GROUP BY
        DATE_TRUNC('month', d.d_date)
),
OrderStats AS (
    SELECT
        ws.ws_order_number,
        COUNT(DISTINCT ws.ws_item_sk) AS item_count,
        SUM(ws.ws_ext_sales_price) AS order_total
    FROM
        web_sales ws
    GROUP BY 
        ws.ws_order_number
    HAVING 
        SUM(ws.ws_ext_sales_price) > 100
)
SELECT 
    tc.c_first_name,
    tc.c_last_name,
    tc.total_sales,
    s.sale_month,
    s.total_store_sales,
    os.order_total,
    os.item_count
FROM 
    TopCustomers tc
LEFT JOIN 
    StoreSalesByMonth s ON TRUE
LEFT JOIN 
    OrderStats os ON os.ws_order_number IN (SELECT ws_order_number FROM web_sales WHERE ws_bill_customer_sk = tc.c_customer_sk)
WHERE 
    tc.total_sales > (SELECT AVG(total_sales) FROM CustomerSales)
ORDER BY 
    tc.total_sales DESC, s.sale_month DESC
LIMIT 100;
