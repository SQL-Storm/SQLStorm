
WITH RECURSIVE SalesHierarchy AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        COALESCE(SUM(ss.ss_net_profit), 0) AS total_sales
    FROM customer c
    LEFT JOIN store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    GROUP BY c.c_customer_sk, c.c_first_name, c.c_last_name
    UNION ALL
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        SUM(COALESCE(ss.ss_net_profit, 0)) AS total_sales
    FROM customer c
    JOIN store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    JOIN SalesHierarchy sh ON c.c_customer_sk = sh.c_customer_sk
    GROUP BY c.c_customer_sk, c.c_first_name, c.c_last_name
),
AggregatedSales AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        sh.total_sales,
        DENSE_RANK() OVER (ORDER BY sh.total_sales DESC) AS sales_rank
    FROM SalesHierarchy sh
    JOIN customer c ON c.c_customer_sk = sh.c_customer_sk
),
FilteredSales AS (
    SELECT 
        a.c_customer_sk,
        a.c_first_name,
        a.c_last_name,
        a.total_sales,
        a.sales_rank
    FROM AggregatedSales a
    WHERE a.sales_rank <= 10
)
SELECT 
    fs.c_customer_sk,
    CONCAT(fs.c_first_name, ' ', fs.c_last_name) AS full_name,
    fs.total_sales,
    fs.sales_rank,
    (SELECT COUNT(DISTINCT ss.ss_ticket_number) 
     FROM store_sales ss 
     WHERE ss.ss_customer_sk = fs.c_customer_sk) AS order_count,
     CASE 
         WHEN fs.total_sales IS NULL THEN 'No Sales'
         ELSE 'Sales Present'
     END AS sales_status
FROM FilteredSales fs
ORDER BY fs.sales_rank;
