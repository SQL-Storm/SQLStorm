
WITH RECURSIVE revenue_summary AS (
    SELECT 
        ws_sold_date_sk,
        ws_item_sk,
        SUM(ws_net_profit) AS total_profit,
        COUNT(ws_order_number) AS order_count
    FROM 
        web_sales
    WHERE 
        ws_sold_date_sk BETWEEN (SELECT MIN(d_date_sk) FROM date_dim WHERE d_year = 2023)
                             AND (SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = 2023)
    GROUP BY 
        ws_sold_date_sk, ws_item_sk
    UNION ALL
    SELECT 
        ws_sold_date_sk,
        ws_item_sk,
        total_profit + (ws_ext_sales_price - ws_ext_discount_amt) AS total_profit,
        order_count + COUNT(ws_order_number) 
    FROM 
        web_sales
    INNER JOIN revenue_summary ON 
        ws_item_sk = revenue_summary.ws_item_sk
    WHERE 
        ws_sold_date_sk = revenue_summary.ws_sold_date_sk + INTERVAL '1 day'
    GROUP BY 
        ws_sold_date_sk, ws_item_sk, total_profit, order_count
),
cumulative_sales AS (
    SELECT 
        d_year,
        d_month_seq,
        SUM(total_profit) AS monthly_profit,
        SUM(order_count) AS total_orders
    FROM 
        revenue_summary
    JOIN 
        date_dim ON revenue_summary.ws_sold_date_sk = date_dim.d_date_sk
    GROUP BY 
        d_year, d_month_seq
),
top_stores AS (
    SELECT 
        s_store_name,
        SUM(ss_net_profit) AS store_profit 
    FROM 
        store_sales 
    JOIN 
        store ON store_sales.ss_store_sk = store.s_store_sk
    GROUP BY 
        s_store_name
    ORDER BY 
        store_profit DESC 
    LIMIT 5
)
SELECT 
    cs.c_customer_id,
    cd.cd_gender,
    cd.cd_marital_status,
    COALESCE(SUM(ss.ss_net_profit), 0) AS total_store_sales,
    COALESCE(SUM(ws.ws_net_profit), 0) AS total_web_sales,
    cumulative_sales.monthly_profit,
    top_stores.s_store_name
FROM 
    customer AS cs
LEFT JOIN 
    customer_demographics AS cd ON cs.c_current_cdemo_sk = cd.cd_demo_sk
LEFT JOIN 
    store_sales AS ss ON cs.c_customer_sk = ss.ss_customer_sk
LEFT JOIN 
    web_sales AS ws ON cs.c_customer_sk = ws.ws_bill_customer_sk
JOIN 
    cumulative_sales ON cumulative_sales.d_year = 2023
LEFT JOIN 
    top_stores ON ss.ss_store_sk = (SELECT s_store_sk FROM store WHERE s_store_name = top_stores.s_store_name LIMIT 1)
GROUP BY 
    cs.c_customer_id, cd.cd_gender, cd.cd_marital_status, cumulative_sales.monthly_profit, top_stores.s_store_name
HAVING 
    total_store_sales > 1000 OR total_web_sales > 2000
ORDER BY 
    total_store_sales DESC, total_web_sales DESC;
