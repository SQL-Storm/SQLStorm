
WITH RankedSales AS (
    SELECT 
        ws.web_site_id,
        customer.c_customer_id,
        SUM(ws.ws_net_paid) AS total_sales,
        DENSE_RANK() OVER (PARTITION BY ws.web_site_id ORDER BY SUM(ws.ws_net_paid) DESC) AS rank_within_website
    FROM 
        web_sales ws
    JOIN 
        customer ON ws.ws_bill_customer_sk = customer.c_customer_sk
    GROUP BY 
        ws.web_site_id, customer.c_customer_id
),
TopCustomers AS (
    SELECT 
        web_site_id,
        c_customer_id,
        total_sales
    FROM 
        RankedSales
    WHERE 
        rank_within_website <= 5
),
CustomerDetails AS (
    SELECT 
        c.c_customer_id,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_purchase_estimate,
        cd.cd_credit_rating,
        ca.ca_city,
        ca.ca_state,
        ca.ca_country
    FROM 
        TopCustomers tc
    JOIN 
        customer c ON tc.c_customer_id = c.c_customer_id
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    JOIN 
        customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
),
StoreSalesData AS (
    SELECT 
        s.s_store_id,
        SUM(ss.ss_net_paid) AS total_store_sales
    FROM 
        store_sales ss
    JOIN 
        store s ON ss.ss_store_sk = s.s_store_sk
    GROUP BY 
        s.s_store_id
)
SELECT 
    cd.ca_city,
    cd.ca_state,
    cd.ca_country,
    COUNT(DISTINCT cd.c_customer_id) AS number_of_top_customers,
    COALESCE(ssd.total_store_sales, 0) AS total_store_sales,
    CASE 
        WHEN COUNT(DISTINCT cd.c_customer_id) > 0 THEN 'Yes' 
        ELSE 'No' 
    END AS has_top_customers
FROM 
    CustomerDetails cd
LEFT JOIN 
    StoreSalesData ssd ON cd.ca_state = ssd.s_store_id
GROUP BY 
    cd.ca_city, cd.ca_state, cd.ca_country
HAVING 
    SUM(cd.cd_purchase_estimate) > (SELECT AVG(cd.cd_purchase_estimate) FROM customer_demographics cd);
