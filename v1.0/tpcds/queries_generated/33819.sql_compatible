
WITH RECURSIVE sales_hierarchy AS (
    SELECT c_customer_sk, c_first_name, c_last_name, 0 AS level
    FROM customer
    WHERE c_customer_sk IN (SELECT DISTINCT sr_customer_sk FROM store_returns)

    UNION ALL

    SELECT c.c_customer_sk, c.c_first_name, c.c_last_name, sh.level + 1
    FROM customer c
    JOIN sales_hierarchy sh ON sh.c_customer_sk = c.c_current_cdemo_sk
),
return_details AS (
    SELECT
        sr.returning_customer_sk,
        SUM(sr.return_quantity) AS total_returned_qty,
        SUM(sr.return_amt) AS total_returned_amt,
        COUNT(DISTINCT sr.ticket_number) AS total_returns
    FROM store_returns sr
    GROUP BY sr.returning_customer_sk
),
customer_with_returns AS (
    SELECT
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        COALESCE(rd.total_returned_qty, 0) AS total_returned_qty,
        COALESCE(rd.total_returned_amt, 0) AS total_returned_amt,
        COALESCE(rd.total_returns, 0) AS total_returns
    FROM customer c
    LEFT JOIN return_details rd ON c.c_customer_sk = rd.returning_customer_sk
),
total_returns AS (
    SELECT 
        c.c_customer_sk,
        SUM(c.total_returned_qty) AS sum_returned_qty,
        AVG(c.total_returned_amt) AS avg_returned_amt,
        COUNT(c.total_returns) AS counts_of_returns
    FROM customer_with_returns c
    WHERE c.total_returned_qty > 0
    GROUP BY c.c_customer_sk
)
SELECT
    sh.c_customer_sk,
    sh.c_first_name,
    sh.c_last_name,
    tr.sum_returned_qty,
    tr.avg_returned_amt,
    tr.counts_of_returns,
    DENSE_RANK() OVER (ORDER BY tr.sum_returned_qty DESC) AS rank_by_qty
FROM sales_hierarchy sh
LEFT JOIN total_returns tr ON sh.c_customer_sk = tr.c_customer_sk
WHERE tr.sum_returned_qty IS NOT NULL
ORDER BY rank_by_qty
LIMIT 10;
