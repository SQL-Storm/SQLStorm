
WITH RECURSIVE address_cte AS (
    SELECT ca_address_sk, ca_address_id, ca_city, ca_state, 
        ROW_NUMBER() OVER (PARTITION BY ca_city, ca_state ORDER BY ca_address_sk) AS rn
    FROM customer_address
    WHERE ca_country = 'USA'
), demographic_info AS (
    SELECT 
        cd_gender,
        cd_marital_status,
        cd_purchase_estimate,
        COUNT(cd_demo_sk) AS demo_count,
        SUM(cd_dep_count) AS total_deps,
        AVG(cd_purchase_estimate) OVER (PARTITION BY cd_gender) AS avg_purchase_by_gender
    FROM customer_demographics
    GROUP BY cd_gender, cd_marital_status
), sales_summary AS (
    SELECT 
        ws_item_sk,
        SUM(ws_sales_price) AS total_sales,
        SUM(ws_quantity) AS total_quantity
    FROM web_sales
    GROUP BY ws_item_sk
), unusual_sales AS (
    SELECT 
        cs_item_sk,
        SUM(cs_net_profit) AS unique_net_profit
    FROM catalog_sales
    WHERE cs_net_paid > (SELECT AVG(cs_net_paid) FROM catalog_sales) 
      AND cs_timestamp IS NOT NULL
    GROUP BY cs_item_sk
), combined AS (
    SELECT 
        a.ca_address_id,
        d.cd_gender,
        s.total_sales,
        s.total_quantity,
        us.unique_net_profit,
        CASE 
            WHEN us.unique_net_profit IS NULL THEN 'No profit'
            WHEN us.unique_net_profit > 100 THEN 'High Profit'
            ELSE 'Moderate Profit'
        END AS profit_category
    FROM address_cte a
    LEFT JOIN demographic_info d ON a.rn = d.demo_count
    LEFT JOIN sales_summary s ON a.ca_address_sk = s.ws_item_sk
    FULL OUTER JOIN unusual_sales us ON s.ws_item_sk = us.cs_item_sk
    WHERE a.ca_state IN (SELECT ca_state FROM customer_address WHERE ca_city LIKE '%town%')
        AND (d.cd_marital_status IS NULL OR d.cd_marital_status = 'M')
)
SELECT 
    profit_category,
    COUNT(*) AS count_by_category,
    AVG(total_sales) AS avg_sales
FROM combined
GROUP BY profit_category
HAVING AVG(total_sales) IS NOT NULL
ORDER BY count_by_category DESC, profit_category;
