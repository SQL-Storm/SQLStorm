
WITH RECURSIVE customer_sales AS (
    SELECT 
        c.c_customer_sk,
        SUM(COALESCE(ss.ss_net_paid_inc_tax, 0) + COALESCE(cs.cs_net_paid_inc_tax, 0) + COALESCE(ws.ws_net_paid_inc_tax, 0)) AS total_sales,
        COUNT(DISTINCT ss.ss_ticket_number) AS total_store_sales,
        COUNT(DISTINCT cs.cs_order_number) AS total_catalog_sales,
        COUNT(DISTINCT ws.ws_order_number) AS total_web_sales
    FROM customer c
    LEFT JOIN store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    LEFT JOIN catalog_sales cs ON c.c_customer_sk = cs.cs_ship_customer_sk
    LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_ship_customer_sk
    GROUP BY c.c_customer_sk
), 
sales_summary AS (
    SELECT 
        cs.c_customer_sk,
        CASE 
            WHEN cs.total_sales > 10000 THEN 'High Value'
            WHEN cs.total_sales BETWEEN 5000 AND 10000 THEN 'Medium Value'
            ELSE 'Low Value'
        END AS customer_value,
        cs.total_sales,
        cs.total_store_sales,
        cs.total_catalog_sales,
        cs.total_web_sales
    FROM customer_sales cs
),
date_range AS (
    SELECT 
        MIN(d.d_date) AS min_date,
        MAX(d.d_date) AS max_date
    FROM date_dim d
    WHERE d.d_current_year = 1
)
SELECT 
    d.min_date,
    d.max_date,
    ss.customer_value,
    COUNT(DISTINCT ss.c_customer_sk) AS customer_count,
    AVG(ss.total_sales) AS avg_sales,
    SUM(ss.total_store_sales) AS total_store_sales,
    SUM(ss.total_catalog_sales) AS total_catalog_sales,
    SUM(ss.total_web_sales) AS total_web_sales
FROM sales_summary ss
CROSS JOIN date_range d
GROUP BY d.min_date, d.max_date, ss.customer_value
ORDER BY d.min_date, ss.customer_value DESC;
