
WITH RECURSIVE SalesCTE AS (
    SELECT 
        cs.cs_order_number,
        cs.cs_item_sk,
        cs.cs_quantity,
        cs.cs_sale_price AS sales_price,
        0 AS level
    FROM catalog_sales cs
    WHERE cs.cs_sold_date_sk = (SELECT MAX(d_date_sk) FROM date_dim WHERE d_date = CAST('2002-10-01' AS DATE))

    UNION ALL

    SELECT 
        cs.cs_order_number,
        cs.cs_item_sk,
        cs.cs_quantity + cte.cs_quantity,
        cs.cs_sale_price,
        cte.level + 1
    FROM SalesCTE cte
    JOIN catalog_sales cs ON cte.cs_order_number = cs.cs_order_number AND cte.cs_item_sk = cs.cs_item_sk
    WHERE cte.level < 5
),
TopSelling AS (
    SELECT 
        cte.cs_item_sk,
        SUM(cte.cs_quantity) AS total_quantity,
        AVG(cte.sales_price) AS avg_sales_price
    FROM SalesCTE cte
    GROUP BY cte.cs_item_sk
),
CustomerInfo AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        COUNT(rs.sr_ticket_number) AS return_count,
        SUM(rs.sr_return_amt) AS total_return_amount
    FROM customer c
    LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN store_returns rs ON c.c_customer_sk = rs.sr_customer_sk
    GROUP BY c.c_customer_sk, c.c_first_name, c.c_last_name, cd.cd_gender
),
WarehouseDetails AS (
    SELECT 
        w.w_warehouse_sk,
        SUM(inv.inv_quantity_on_hand) AS total_inventory,
        AVG(ws.ws_sales_price) AS avg_sales_price
    FROM warehouse w
    JOIN inventory inv ON w.w_warehouse_sk = inv.inv_warehouse_sk
    JOIN web_sales ws ON inv.inv_item_sk = ws.ws_item_sk
    WHERE ws.ws_sold_date_sk BETWEEN (SELECT MIN(d_date_sk) FROM date_dim) AND (SELECT MAX(d_date_sk) FROM date_dim)
    GROUP BY w.w_warehouse_sk
)
SELECT 
    ci.c_first_name || ' ' || ci.c_last_name AS customer_name,
    ci.cd_gender,
    ts.total_quantity,
    ts.avg_sales_price,
    wd.total_inventory,
    wd.avg_sales_price AS warehouse_avg_sales_price
FROM CustomerInfo ci
JOIN TopSelling ts ON ci.c_customer_sk IN (SELECT DISTINCT sr_customer_sk FROM store_returns)
JOIN WarehouseDetails wd ON ci.c_customer_sk IN (SELECT DISTINCT ws_bill_customer_sk FROM web_sales)
WHERE ci.return_count > 0 AND ts.total_quantity > 10
ORDER BY ts.total_quantity DESC, wd.total_inventory DESC
FETCH FIRST 100 ROWS ONLY;
