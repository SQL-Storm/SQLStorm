
WITH RECURSIVE sales_hierarchy AS (
    SELECT 
        c.c_customer_sk,
        c.c_customer_id,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        COALESCE(SUM(ss.ss_net_profit), 0) AS total_sales_profit,
        1 AS level
    FROM 
        customer c
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN 
        store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    GROUP BY 
        c.c_customer_sk, c.c_customer_id, c.c_first_name, c.c_last_name, cd.cd_gender

    UNION ALL

    SELECT 
        c.c_customer_sk,
        c.c_customer_id,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        COALESCE(SUM(ss.ss_net_profit), 0) + sh.total_sales_profit AS total_sales_profit,
        sh.level + 1
    FROM 
        customer c
    JOIN 
        sales_hierarchy sh ON c.c_customer_sk = sh.c_customer_sk
    LEFT JOIN 
        store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    GROUP BY 
        c.c_customer_sk, c.c_customer_id, c.c_first_name, c.c_last_name, cd.cd_gender, sh.total_sales_profit, sh.level
)
SELECT 
    c.c_customer_id,
    c.c_first_name,
    c.c_last_name,
    cd.cd_gender,
    cd.cd_marital_status,
    ROW_NUMBER() OVER (PARTITION BY cd.cd_gender ORDER BY sh.total_sales_profit DESC) AS sales_rank,
    CASE 
        WHEN sh.total_sales_profit = 0 THEN 'No Sales'
        ELSE 'Sales Made'
    END AS sales_status
FROM 
    sales_hierarchy sh
JOIN 
    customer c ON sh.c_customer_sk = c.c_customer_sk
JOIN 
    customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
JOIN 
    (SELECT 
        ws_bill_customer_sk, 
        SUM(ws_net_profit) AS ws_total_profit
     FROM 
        web_sales 
     GROUP BY 
        ws_bill_customer_sk
     HAVING 
        SUM(ws_net_profit) > 500
    ) w ON c.c_customer_sk = w.ws_bill_customer_sk
WHERE 
    (cd.cd_gender IS NOT NULL AND cd.cd_gender IN ('M', 'F'))
    AND sh.total_sales_profit > 100
ORDER BY 
    sales_rank, c.c_customer_id;
