
WITH RECURSIVE CTE_Sales AS (
    SELECT 
        ss.sold_date_sk,
        SUM(ss.net_profit) AS total_profit,
        COUNT(DISTINCT ss.ticket_number) AS transaction_count,
        RANK() OVER (PARTITION BY ss.sold_date_sk ORDER BY SUM(ss.net_profit) DESC) AS sales_rank
    FROM 
        store_sales ss
    WHERE 
        ss.sold_date_sk IS NOT NULL
    GROUP BY 
        ss.sold_date_sk
),
CustomerStats AS (
    SELECT 
        c.c_customer_sk,
        d.cd_gender,
        SUM(ws.ws_net_profit) AS total_web_profit,
        COUNT(ws.ws_order_number) AS total_orders
    FROM 
        customer c
    JOIN 
        customer_demographics d ON c.c_current_cdemo_sk = d.cd_demo_sk
    LEFT JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY 
        c.c_customer_sk, d.cd_gender
),
AddressStats AS (
    SELECT 
        a.ca_state,
        COUNT(DISTINCT a.ca_address_sk) AS distinct_addresses,
        AVG(cdt.total_web_profit) AS average_web_profit
    FROM 
        customer_address a
    JOIN 
        CustomerStats cdt ON cdt.c_customer_sk = a.c_current_addr_sk
    GROUP BY 
        a.ca_state
)
SELECT 
    s.s_state,
    COALESCE(SUM(sales.total_profit), 0) AS total_profit,
    COALESCE(a.average_web_profit, 0) AS average_web_profit_per_address,
    SUM(a.distinct_addresses) AS total_distinct_addresses
FROM 
    (SELECT DISTINCT ca_state AS s_state FROM customer_address) s
LEFT JOIN 
    (SELECT 
        sales.sold_date_sk,
        sales.total_profit,
        sales.transaction_count 
     FROM 
        CTE_Sales sales
     WHERE 
        sales.sales_rank <= 5) sales ON sales.sold_date_sk = (SELECT MAX(sold_date_sk) FROM CTE_Sales)
LEFT JOIN 
    AddressStats a ON a.ca_state = s.s_state
GROUP BY 
    s.s_state
ORDER BY 
    total_profit DESC, average_web_profit_per_address DESC;
