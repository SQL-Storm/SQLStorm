WITH RECURSIVE sales_hierarchy AS (
    SELECT
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        0 AS level
    FROM customer c
    WHERE c.c_preferred_cust_flag = 'Y'
    
    UNION ALL
    
    SELECT
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        sh.level + 1
    FROM customer c
    JOIN sales_hierarchy sh ON c.c_current_cdemo_sk = sh.c_customer_sk
),
inventory_summary AS (
    SELECT 
        i.i_item_sk,
        SUM(CASE WHEN inv.inv_quantity_on_hand IS NULL THEN 0 ELSE inv.inv_quantity_on_hand END) AS total_quantity,
        COUNT(DISTINCT inv.inv_warehouse_sk) AS distinct_warehouses
    FROM item i
    LEFT JOIN inventory inv ON i.i_item_sk = inv.inv_item_sk
    GROUP BY i.i_item_sk
),
recent_sales AS (
    SELECT 
        ws.ws_item_sk,
        SUM(ws.ws_quantity) AS total_sales,
        AVG(ws.ws_net_profit) AS avg_net_profit
    FROM web_sales ws
    JOIN date_dim d ON ws.ws_sold_date_sk = d.d_date_sk
    WHERE d.d_date >= DATEADD(DAY, -30, cast('2002-10-01' as date))
    GROUP BY ws.ws_item_sk
),
top_items AS (
    SELECT 
        ris.i_item_id,
        ris.total_quantity,
        ris.distinct_warehouses,
        rs.total_sales,
        rs.avg_net_profit,
        ROW_NUMBER() OVER (ORDER BY rs.total_sales DESC, rs.avg_net_profit DESC) AS rank
    FROM inventory_summary ris
    JOIN recent_sales rs ON ris.i_item_sk = rs.ws_item_sk
)
SELECT 
    th.c_first_name,
    th.c_last_name,
    ti.i_item_id,
    ti.total_quantity,
    ti.distinct_warehouses,
    ti.total_sales,
    ti.avg_net_profit
FROM sales_hierarchy th
JOIN top_items ti ON th.c_customer_sk = ti.i_item_id
WHERE ti.rank <= 10
ORDER BY th.c_last_name, th.c_first_name, ti.total_sales DESC;