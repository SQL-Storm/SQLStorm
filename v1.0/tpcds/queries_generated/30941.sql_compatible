
WITH RECURSIVE CustomerReturns AS (
    SELECT 
        sr_returned_date_sk,
        sr_return_time_sk,
        sr_item_sk,
        sr_customer_sk,
        sr_return_quantity,
        sr_return_amt,
        sr_return_tax,
        sr_return_amt_inc_tax,
        sr_fee,
        sr_return_ship_cost,
        1 AS return_depth
    FROM store_returns
    WHERE sr_return_quantity > 0
    
    UNION ALL
    
    SELECT 
        cr_returned_date_sk,
        cr_returned_time_sk,
        cr_item_sk,
        cr_returning_customer_sk,
        cr_returning_quantity,
        cr_return_amount,
        cr_return_tax,
        cr_return_amt_inc_tax,
        cr_fee,
        cr_return_ship_cost,
        return_depth + 1
    FROM catalog_returns
    WHERE cr_returning_quantity > 0 AND return_depth < 5
),
TotalReturns AS (
    SELECT 
        c.c_customer_sk,
        COUNT(DISTINCT cr.sr_item_sk) AS total_store_item_returns,
        SUM(cr.sr_return_amt) AS total_store_return_amount,
        COUNT(DISTINCT cr.cr_item_sk) AS total_catalog_item_returns,
        SUM(cr.cr_return_amount) AS total_catalog_return_amount
    FROM CustomerReturns cr
    JOIN customer c ON c.c_customer_sk = cr.sr_customer_sk
    GROUP BY c.c_customer_sk
),
SalesData AS (
    SELECT 
        ws_bill_customer_sk,
        COUNT(ws_order_number) AS total_orders,
        SUM(ws_net_profit) AS total_profit,
        AVG(ws_net_paid) AS avg_net_paid
    FROM web_sales
    WHERE ws_sold_date_sk BETWEEN 1000 AND 2000  
    GROUP BY ws_bill_customer_sk
)
SELECT 
    cd.cd_gender,
    cd.cd_marital_status,
    SUM(tr.total_store_return_amount + tr.total_catalog_return_amount) AS total_returned_amount,
    COUNT(DISTINCT tr.c_customer_sk) AS unique_customers_returned,
    ws.total_orders,
    ws.total_profit,
    ws.avg_net_paid,
    CASE 
        WHEN cd.cd_purchase_estimate IS NULL THEN 'Unknown'
        ELSE CAST(cd.cd_purchase_estimate AS VARCHAR)
    END AS purchase_estimate
FROM TotalReturns tr
JOIN customer_demographics cd ON cd.cd_demo_sk = tr.c_customer_sk
JOIN SalesData ws ON ws.ws_bill_customer_sk = tr.c_customer_sk
GROUP BY 
    cd.cd_gender,
    cd.cd_marital_status,
    ws.total_orders,
    ws.total_profit,
    ws.avg_net_paid,
    tr.c_customer_sk
ORDER BY total_returned_amount DESC, unique_customers_returned DESC;
