
WITH RECURSIVE SalesHierarchy AS (
    SELECT ws_bill_customer_sk AS customer_sk, 
           SUM(ws_ext_sales_price) AS total_sales,
           1 AS level
    FROM web_sales
    GROUP BY ws_bill_customer_sk
    UNION ALL
    SELECT sr.refunded_customer_sk, 
           SUM(sr.sr_return_amt) * -1 AS total_sales,
           2 AS level
    FROM store_returns sr
    JOIN SalesHierarchy sh ON sr.refunded_customer_sk = sh.customer_sk
    GROUP BY sr.refunded_customer_sk
),
AverageSales AS (
    SELECT customer_sk,
           AVG(total_sales) AS average_sales
    FROM SalesHierarchy
    GROUP BY customer_sk
),
TopCustomers AS (
    SELECT ca.ca_address_id,
           c.c_first_name,
           c.c_last_name,
           COALESCE(as.total_sales, 0) AS total_sales,
           RANK() OVER (ORDER BY COALESCE(as.total_sales, 0) DESC) AS sales_rank,
           c.c_customer_sk
    FROM customer_address ca
    JOIN customer c ON ca.ca_address_sk = c.c_current_addr_sk
    LEFT JOIN AverageSales as ON c.c_customer_sk = as.customer_sk
    WHERE c.c_current_cdemo_sk IS NOT NULL
)
SELECT tc.ca_address_id,
       tc.c_first_name,
       tc.c_last_name,
       tc.total_sales,
       (SELECT COUNT(*) 
        FROM customer cc 
        WHERE cc.c_current_cdemo_sk IS NOT NULL AND cc.c_customer_sk < tc.c_customer_sk) AS before_count
FROM TopCustomers tc
WHERE tc.sales_rank <= 10
ORDER BY tc.total_sales DESC
OFFSET 0 ROWS FETCH NEXT 10 ROWS ONLY;
