
WITH CustomerSales AS (
    SELECT 
        c.c_customer_id,
        SUM(ws.ws_ext_sales_price) AS total_web_sales,
        SUM(cs.cs_ext_sales_price) AS total_catalog_sales,
        SUM(ss.ss_ext_sales_price) AS total_store_sales
    FROM 
        customer c
    LEFT JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    LEFT JOIN 
        catalog_sales cs ON c.c_customer_sk = cs.cs_bill_customer_sk
    LEFT JOIN 
        store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    GROUP BY 
        c.c_customer_id
),
CustomerDemographics AS (
    SELECT 
        cd.cd_demo_sk,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_credit_rating,
        cd.cd_purchase_estimate,
        cd.cd_dep_count,
        cd.cd_dep_college_count
    FROM 
        customer_demographics cd
),
IncomeDemographics AS (
    SELECT 
        h.hd_demo_sk,
        ib.ib_lower_bound,
        ib.ib_upper_bound
    FROM 
        household_demographics h
    JOIN 
        income_band ib ON h.hd_income_band_sk = ib.ib_income_band_sk
),
FinalReport AS (
    SELECT 
        cs.c_customer_id,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_credit_rating,
        cs.total_web_sales,
        cs.total_catalog_sales,
        cs.total_store_sales,
        id.ib_lower_bound,
        id.ib_upper_bound
    FROM 
        CustomerSales cs
    JOIN 
        CustomerDemographics cd ON cs.c_customer_id = cd.cd_demo_sk
    JOIN 
        IncomeDemographics id ON cd.cd_demo_sk = id.hd_demo_sk
)
SELECT 
    *,
    (total_web_sales + total_catalog_sales + total_store_sales) AS total_sales,
    CASE 
        WHEN (total_web_sales + total_catalog_sales + total_store_sales) >= 100000 THEN 'High Value'
        WHEN (total_web_sales + total_catalog_sales + total_store_sales) >= 50000 THEN 'Mid Value'
        ELSE 'Low Value'
    END AS customer_value_segment
FROM 
    FinalReport
ORDER BY 
    total_sales DESC
LIMIT 100;
