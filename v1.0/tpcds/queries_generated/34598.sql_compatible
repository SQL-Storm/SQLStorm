
WITH RECURSIVE SalesCTE AS (
    SELECT 
        ss_item_sk,
        SUM(ss_quantity) AS total_quantity,
        SUM(ss_net_profit) AS total_profit,
        1 AS level
    FROM 
        store_sales
    GROUP BY 
        ss_item_sk
    HAVING 
        SUM(ss_net_profit) > 1000
    UNION ALL
    SELECT 
        s.ss_item_sk,
        SUM(s.ss_quantity) + sc.total_quantity,
        SUM(s.ss_net_profit) + sc.total_profit,
        sc.level + 1
    FROM 
        store_sales s
    INNER JOIN 
        SalesCTE sc ON s.ss_item_sk = sc.ss_item_sk
    WHERE 
        sc.level < 3
    GROUP BY 
        s.ss_item_sk, sc.total_quantity, sc.total_profit, sc.level
), 
CustomerSales AS (
    SELECT 
        c.c_customer_sk,
        COUNT(DISTINCT ss.ticket_number) AS sales_count,
        SUM(ss.ss_net_profit) AS total_net_profit
    FROM 
        customer c
    LEFT JOIN 
        store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    GROUP BY 
        c.c_customer_sk
),
AddressSales AS (
    SELECT 
        ca.ca_address_sk,
        SUM(ss.ss_net_profit) AS total_profit,
        COUNT(ss.ss_ticket_number) AS ticket_count,
        MAX(ss.ss_sold_date_sk) AS last_sale_date_sk
    FROM 
        customer_address ca
    LEFT JOIN 
        customer c ON ca.ca_address_sk = c.c_current_addr_sk
    LEFT JOIN 
        store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    GROUP BY 
        ca.ca_address_sk
),
TopCustomers AS (
    SELECT 
        cs.c_customer_sk,
        cs.sales_count,
        cs.total_net_profit,
        ROW_NUMBER() OVER (ORDER BY cs.total_net_profit DESC) AS profit_rank
    FROM 
        CustomerSales cs
    WHERE 
        cs.sales_count > 10
),
FinalResults AS (
    SELECT 
        a.ca_address_sk,
        a.total_profit,
        tc.sales_count,
        tc.total_net_profit,
        a.last_sale_date_sk,
        tc.profit_rank
    FROM 
        AddressSales a
    JOIN 
        TopCustomers tc ON tc.c_customer_sk = (SELECT c.c_customer_sk FROM customer c WHERE c.c_current_addr_sk = a.ca_address_sk)
    ORDER BY 
        a.total_profit DESC
)
SELECT 
    f.ca_address_sk,
    f.total_profit,
    f.sales_count,
    f.total_net_profit,
    f.last_sale_date_sk,
    COALESCE(f.profit_rank, 'N/A') AS profit_rank
FROM 
    FinalResults f
WHERE 
    f.total_profit IS NOT NULL
ORDER BY 
    f.total_profit DESC;
