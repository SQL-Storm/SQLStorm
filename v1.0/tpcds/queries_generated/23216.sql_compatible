
WITH relevant_sales AS (
    SELECT 
        ws.ws_item_sk,
        ws.ws_order_number,
        COALESCE(ws.ws_sales_price, 0) AS sales_price,
        COALESCE(ws.ws_quantity, 0) AS quantity,
        COALESCE(ws.ws_ext_discount_amt, 0) AS discount_amt,
        ws.ws_net_profit,
        ROW_NUMBER() OVER (PARTITION BY ws.ws_item_sk ORDER BY ws.ws_order_number DESC) AS recent_order
    FROM 
        web_sales ws
    WHERE 
        ws.ws_sold_date_sk IN (SELECT d_date_sk FROM date_dim WHERE d_year = 2023)
),
returns AS (
    SELECT 
        cr.cr_item_sk,
        SUM(cr.cr_return_quantity) AS total_returned,
        SUM(cr.cr_net_loss) AS total_loss
    FROM 
        catalog_returns cr
    GROUP BY 
        cr.cr_item_sk
),
sales_summary AS (
    SELECT 
        rs.ws_item_sk,
        SUM(rs.sales_price * rs.quantity) AS total_sales,
        SUM(rs.discount_amt) AS total_discount,
        COALESCE(r.total_returned, 0) AS total_returns,
        COALESCE(r.total_loss, 0) AS total_loss
    FROM 
        relevant_sales rs
    LEFT JOIN returns r ON rs.ws_item_sk = r.cr_item_sk
    GROUP BY 
        rs.ws_item_sk
)
SELECT 
    s.ws_item_sk,
    s.total_sales,
    s.total_discount,
    s.total_returns,
    CASE 
        WHEN s.total_sales > 0 THEN (s.total_loss / s.total_sales) * 100
        ELSE NULL
    END AS loss_percentage,
    CASE 
        WHEN s.total_discount > 0 AND s.total_sales > 0 THEN (s.total_discount / s.total_sales) * 100 
        ELSE NULL
    END AS discount_percentage,
    STRING_AGG(CONCAT('Item SK: ', s.ws_item_sk, ' - Loss %: ', COALESCE(ROUND(loss_percentage, 2), 'N/A')), '; ') 
        WITHIN GROUP (ORDER BY loss_percentage DESC) AS item_loss_report
FROM 
    sales_summary s 
WHERE 
    s.total_returns > 0
GROUP BY 
    s.ws_item_sk,
    s.total_sales,
    s.total_discount,
    s.total_returns,
    loss_percentage
ORDER BY 
    s.total_sales DESC
LIMIT 10;
