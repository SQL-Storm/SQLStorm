
WITH CustomerSales AS (
    SELECT
        c.c_customer_id,
        SUM(ws.ws_net_profit) AS total_web_profit,
        COUNT(DISTINCT ws.ws_order_number) AS web_orders,
        AVG(ws.ws_net_paid_inc_ship) AS avg_web_purchase
    FROM customer c
    LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY c.c_customer_id
),
StoreReturns AS (
    SELECT
        sr_store_sk,
        COUNT(sr_ticket_number) AS total_returns,
        SUM(sr_return_amt_inc_tax) AS returns_value
    FROM store_returns
    GROUP BY sr_store_sk
),
HighValueCustomers AS (
    SELECT c.c_customer_id
    FROM customer c
    JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    WHERE cd.cd_purchase_estimate > (SELECT AVG(cd_purchase_estimate) FROM customer_demographics)
),
ReturnTrends AS (
    SELECT
        s.s_store_sk,
        COALESCE(sr.total_returns, 0) AS total_returns,
        COALESCE(sr.returns_value, 0) AS returns_value,
        COUNT(DISTINCT wr.returning_customer_sk) AS unique_customers_returned,
        AVG(wr.wr_return_amt) AS avg_web_return_value
    FROM store s
    LEFT JOIN store_returns sr ON s.s_store_sk = sr.s_store_sk
    LEFT JOIN web_returns wr ON sr.sr_item_sk = wr.wr_item_sk
    GROUP BY s.s_store_sk
),
FinalBenchmark AS (
    SELECT
        cs.c_customer_id,
        cs.total_web_profit,
        cs.web_orders,
        cs.avg_web_purchase,
        rt1.s_store_sk,
        rt1.total_returns,
        rt1.returns_value,
        rt1.unique_customers_returned,
        rt1.avg_web_return_value,
        CASE
            WHEN cs.total_web_profit > 1000 THEN 'High'
            WHEN cs.total_web_profit BETWEEN 500 AND 1000 THEN 'Moderate'
            ELSE 'Low'
        END AS customer_value,
        CASE 
            WHEN rt1.returns_value = 0 THEN 'No Returns'
            WHEN rt1.returns_value > 100 THEN 'High Return Risk'
            ELSE 'Normal Returns'
        END AS return_risk
    FROM CustomerSales cs
    JOIN ReturnTrends rt1 ON cs.web_orders > 5
    WHERE cs.c_customer_id IN (SELECT c_customer_id FROM HighValueCustomers)
    ORDER BY cs.total_web_profit DESC
)
SELECT * FROM FinalBenchmark
WHERE (customer_value = 'High' AND return_risk <> 'No Returns') 
   OR (customer_value = 'Moderate' AND unique_customers_returned > 10);
