
WITH CustomerStats AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        COUNT(DISTINCT ws.ws_order_number) AS total_orders,
        SUM(ws.ws_net_profit) AS total_profit,
        DENSE_RANK() OVER (PARTITION BY cd.cd_gender ORDER BY SUM(ws.ws_net_profit) DESC) AS rank_within_gender
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY 
        c.c_customer_sk, c.c_first_name, c.c_last_name, cd.cd_gender, cd.cd_marital_status
),
TopCustomers AS (
    SELECT 
        cs.c_customer_sk,
        cs.c_first_name,
        cs.c_last_name,
        cs.total_orders,
        cs.total_profit
    FROM 
        CustomerStats cs
    WHERE 
        cs.rank_within_gender <= 10
),
AggregateSales AS (
    SELECT 
        ws.ws_sold_date_sk,
        SUM(ws.ws_net_profit) AS gross_sales,
        COUNT(ws.ws_order_number) AS total_sales
    FROM 
        web_sales ws
    GROUP BY 
        ws.ws_sold_date_sk
)

SELECT 
    a.ws_sold_date_sk,
    a.gross_sales,
    a.total_sales,
    t.total_orders,
    t.total_profit,
    CASE 
        WHEN a.gross_sales > 10000 THEN 'High'
        WHEN a.gross_sales BETWEEN 5000 AND 10000 THEN 'Medium'
        ELSE 'Low' 
    END AS sales_category
FROM 
    AggregateSales a
LEFT JOIN 
    TopCustomers t ON a.ws_sold_date_sk = (SELECT MAX(d.d_date_sk) 
                                             FROM date_dim d 
                                             WHERE d.d_date_sk <= a.ws_sold_date_sk)
ORDER BY 
    a.ws_sold_date_sk DESC, 
    t.total_profit DESC
FETCH FIRST 100 ROWS ONLY;
