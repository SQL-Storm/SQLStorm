WITH RankedSales AS (
    SELECT 
        ws.web_site_id,
        ws_sold_date_sk,
        ws_item_sk,
        ws_sales_price,
        ROW_NUMBER() OVER (PARTITION BY ws_item_sk ORDER BY ws_sales_price DESC) AS rn
    FROM web_sales ws
    WHERE ws_sold_date_sk > (SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = 2001)
),
CustomerReturns AS (
    SELECT 
        wr_returning_customer_sk,
        SUM(wr_return_quantity) AS total_returned,
        COUNT(DISTINCT wr_order_number) AS total_orders_returned
    FROM web_returns
    GROUP BY wr_returning_customer_sk
),
TopCustomers AS (
    SELECT 
        c.c_customer_id,
        cd.cd_gender,
        COALESCE(cr.total_returned, 0) AS total_returned,
        COALESCE(cr.total_orders_returned, 0) AS total_orders_returned,
        SUM(ws.ws_sales_price) OVER (PARTITION BY c.c_customer_sk) AS total_spent
    FROM customer c
    JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN CustomerReturns cr ON c.c_customer_sk = cr.wr_returning_customer_sk
    WHERE 
        (cd.cd_marital_status = 'M' OR cd.cd_gender = 'F') 
        AND c.c_birth_year > (YEAR(cast('2002-10-01' as date)) - 30)
),
InventoryStats AS (
    SELECT 
        inv.item_sk,
        SUM(inv.inv_quantity_on_hand) AS total_inventory,
        AVG(i.i_current_price) AS avg_price
    FROM inventory inv
    JOIN item i ON inv.inv_item_sk = i.i_item_sk
    GROUP BY inv.item_sk
),
SalesComparison AS (
    SELECT 
        rs.web_site_id,
        SUM(rs.ws_sales_price) AS total_sales,
        SUM(is.total_inventory * is.avg_price) AS value_of_inventory
    FROM RankedSales rs
    JOIN InventoryStats is ON rs.ws_item_sk = is.item_sk
    GROUP BY rs.web_site_id
)
SELECT 
    tc.c_customer_id,
    tc.cd_gender,
    sc.total_sales,
    sc.value_of_inventory,
    CASE 
        WHEN sc.total_sales > sc.value_of_inventory THEN 'Profitable'
        WHEN sc.total_sales < sc.value_of_inventory AND sc.total_sales < tc.total_spent THEN 'Loss Leader'
        ELSE 'Neutral'
    END AS performance_category
FROM TopCustomers tc
JOIN SalesComparison sc ON tc.c_customer_id = sc.web_site_id
WHERE 
    (tc.total_returned IS NULL OR tc.total_returned < 10) 
    AND (tc.total_orders_returned / NULLIF(tc.total_spent, 0) <= 0.1 OR tc.total_orders_returned IS NULL)
ORDER BY tc.total_spent DESC, sc.total_sales DESC;