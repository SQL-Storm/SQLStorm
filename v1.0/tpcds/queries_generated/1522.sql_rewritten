WITH RankedSales AS (
    SELECT 
        ws.web_site_sk,
        ws.order_number,
        SUM(ws.net_profit) AS total_net_profit,
        ROW_NUMBER() OVER (PARTITION BY ws.web_site_sk ORDER BY SUM(ws.net_profit) DESC) AS rank
    FROM 
        web_sales ws
    JOIN 
        web_site w ON ws.web_site_sk = w.web_site_sk
    WHERE 
        w.web_class = 'Retail'
    GROUP BY 
        ws.web_site_sk, ws.order_number
),
SalesLastMonth AS (
    SELECT 
        COUNT(*) AS total_sales_count,
        SUM(ws.net_profit) AS last_month_profit
    FROM 
        web_sales ws
    JOIN 
        date_dim d ON ws.ws_sold_date_sk = d.d_date_sk
    WHERE 
        d.d_month_seq = (SELECT MAX(d_month_seq) FROM date_dim WHERE d_year = 2001) 
),
CustomerDemographics AS (
    SELECT 
        cd.cd_gender,
        COUNT(c.c_customer_sk) AS customer_count,
        AVG(cd.cd_purchase_estimate) AS avg_purchase_estimate
    FROM 
        customer c
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    GROUP BY 
        cd.cd_gender
),
PopularItems AS (
    SELECT 
        i.i_item_id,
        SUM(ws.ws_quantity) AS total_quantity_sold
    FROM 
        item i
    JOIN 
        web_sales ws ON i.i_item_sk = ws.ws_item_sk
    WHERE 
        ws.ws_sold_date_sk BETWEEN (SELECT MIN(d_date_sk) FROM date_dim WHERE d_year = 2001) AND (SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = 2001)
    GROUP BY 
        i.i_item_id
    HAVING 
        SUM(ws.ws_quantity) > 500
)
SELECT 
    r.web_site_sk,
    r.order_number,
    r.total_net_profit,
    lm.total_sales_count,
    lm.last_month_profit,
    cd.cd_gender,
    cd.customer_count,
    cd.avg_purchase_estimate,
    pi.i_item_id,
    pi.total_quantity_sold
FROM 
    RankedSales r
LEFT JOIN 
    SalesLastMonth lm ON r.rank = 1
LEFT JOIN 
    CustomerDemographics cd ON cd.customer_count IS NOT NULL
LEFT JOIN 
    PopularItems pi ON pi.total_quantity_sold IS NOT NULL
WHERE 
    r.total_net_profit > 1000
ORDER BY 
    r.total_net_profit DESC, lm.last_month_profit DESC, pi.total_quantity_sold DESC
LIMIT 100;