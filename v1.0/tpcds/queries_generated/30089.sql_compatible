
WITH RECURSIVE sales_data AS (
    SELECT 
        si.item_sk,
        ws_sold_date_sk AS sold_date,
        SUM(ws_quantity) AS total_quantity,
        SUM(ws_sales_price) AS total_sales 
    FROM web_sales 
    JOIN item si ON si.i_item_sk = web_sales.ws_item_sk
    GROUP BY si.item_sk, ws_sold_date_sk

    UNION ALL 

    SELECT 
        si.item_sk,
        ws_sold_date_sk AS sold_date,
        SUM(cs_quantity) AS total_quantity,
        SUM(cs_sales_price) AS total_sales 
    FROM catalog_sales 
    JOIN item si ON si.i_item_sk = catalog_sales.cs_item_sk
    GROUP BY si.item_sk, ws_sold_date_sk
), customer_returns AS (
    SELECT 
        wr_item_sk,
        SUM(wr_return_quantity) AS total_returns,
        SUM(wr_return_amt_inc_tax) AS total_return_amount
    FROM web_returns
    GROUP BY wr_item_sk
), summary AS (
    SELECT 
        item.i_item_id, 
        item.i_item_desc,
        COALESCE(sd.total_quantity, 0) AS total_quantity_sold,
        COALESCE(sd.total_sales, 0) AS total_sales,
        COALESCE(cr.total_returns, 0) AS total_returns,
        COALESCE(cr.total_return_amount, 0) AS total_return_amount,
        CASE 
            WHEN COALESCE(sd.total_sales, 0) = 0 THEN 0 
            ELSE (COALESCE(cr.total_return_amount, 0) / NULLIF(COALESCE(sd.total_sales, 0), 0)) * 100 
        END AS return_percentage
    FROM item
    LEFT JOIN sales_data sd ON item.i_item_sk = sd.item_sk
    LEFT JOIN customer_returns cr ON item.i_item_sk = cr.wr_item_sk
)
SELECT 
    s.i_item_id,
    s.i_item_desc,
    s.total_quantity_sold,
    s.total_sales,
    s.total_returns,
    s.total_return_amount,
    s.return_percentage
FROM summary s
WHERE s.return_percentage > 5
ORDER BY s.return_percentage DESC
LIMIT 10;
