WITH RECURSIVE SalesHierarchy AS (
    SELECT 
        c.c_customer_sk,
        c.c_customer_id,
        SUM(ws.ws_net_profit) AS total_profit,
        ROW_NUMBER() OVER (PARTITION BY c.c_customer_sk ORDER BY SUM(ws.ws_net_profit) DESC) AS rank
    FROM 
        customer c
    LEFT JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    WHERE 
        c.c_current_cdemo_sk IS NOT NULL
    GROUP BY 
        c.c_customer_sk, c.c_customer_id
    UNION ALL
    SELECT 
        sh.c_customer_sk,
        sh.c_customer_id,
        SUM(ws.ws_net_profit) AS total_profit,
        ROW_NUMBER() OVER (PARTITION BY sh.c_customer_sk ORDER BY SUM(ws.ws_net_profit) DESC) AS rank
    FROM 
        SalesHierarchy sh
    JOIN 
        web_sales ws ON sh.c_customer_sk = ws.ws_bill_customer_sk
    WHERE 
        ws.ws_net_profit IS NOT NULL
    GROUP BY 
        sh.c_customer_sk, sh.c_customer_id
),
TopCustomers AS (
    SELECT 
        sh.c_customer_sk,
        sh.c_customer_id,
        sh.total_profit
    FROM 
        SalesHierarchy sh
    WHERE 
        sh.rank <= 5
)

SELECT 
    c.c_first_name,
    c.c_last_name,
    c.c_email_address,
    COALESCE(SUM(ws.ws_net_profit), 0) AS total_spent,
    COUNT(DISTINCT ws.ws_order_number) AS number_of_orders,
    AVG(ws.ws_net_paid_inc_tax) AS avg_order_value,
    CASE 
        WHEN SUM(ws.ws_net_profit) > 1000 THEN 'High Spender'
        WHEN SUM(ws.ws_net_profit) BETWEEN 500 AND 1000 THEN 'Moderate Spender'
        ELSE 'Low Spender'
    END AS spending_category
FROM 
    customer c
LEFT JOIN 
    web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
JOIN 
    TopCustomers tc ON c.c_customer_sk = tc.c_customer_sk
GROUP BY 
    c.c_first_name, c.c_last_name, c.c_email_address
HAVING 
    COUNT(DISTINCT ws.ws_order_number) > 0
ORDER BY 
    total_spent DESC
LIMIT 10;