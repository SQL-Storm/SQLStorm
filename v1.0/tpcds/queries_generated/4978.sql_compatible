
WITH RankedSales AS (
    SELECT 
        ws.ws_item_sk, 
        SUM(ws.ws_quantity) AS total_quantity_sold,
        ROW_NUMBER() OVER (PARTITION BY ws.ws_item_sk ORDER BY SUM(ws.ws_sales_price) DESC) AS rank
    FROM web_sales ws
    JOIN item i ON ws.ws_item_sk = i.i_item_sk
    WHERE i.i_current_price > 10.00
    GROUP BY ws.ws_item_sk
),
RecentReturns AS (
    SELECT 
        cr.cr_item_sk, 
        SUM(cr.cr_return_quantity) AS total_returned_quantity
    FROM catalog_returns cr
    WHERE cr.cr_returned_date_sk >= (
        SELECT MAX(d.d_date_sk) 
        FROM date_dim d 
        WHERE d.d_date >= DATEADD(YEAR, -1, '2002-10-01')
    )
    GROUP BY cr.cr_item_sk
),
CustomerProfile AS (
    SELECT 
        cd.cd_demo_sk,
        cd.cd_gender,
        COUNT(DISTINCT c.c_customer_sk) AS unique_customers
    FROM customer c
    JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    WHERE cd.cd_marital_status = 'M'
    GROUP BY cd.cd_demo_sk, cd.cd_gender
)
SELECT 
    i.i_item_id,
    COALESCE(rs.total_quantity_sold, 0) AS total_quantity_sold,
    COALESCE(rr.total_returned_quantity, 0) AS total_returned_quantity,
    cp.cd_gender,
    cp.unique_customers,
    CASE 
        WHEN rs.total_quantity_sold IS NULL THEN 'No Sales'
        WHEN rr.total_returned_quantity > rs.total_quantity_sold THEN 'More Returns than Sales'
        ELSE 'Healthy Sales'
    END AS sales_health
FROM RankedSales rs
FULL OUTER JOIN RecentReturns rr ON rs.ws_item_sk = rr.cr_item_sk
JOIN CustomerProfile cp ON cp.cd_demo_sk = (
    SELECT cd.cd_demo_sk 
    FROM customer_demographics cd 
    ORDER BY cd.cd_purchase_estimate DESC
    LIMIT 1
)
JOIN item i ON i.i_item_sk = COALESCE(rs.ws_item_sk, rr.cr_item_sk)
WHERE i.i_current_price IS NOT NULL
ORDER BY total_quantity_sold DESC, total_returned_quantity ASC;
