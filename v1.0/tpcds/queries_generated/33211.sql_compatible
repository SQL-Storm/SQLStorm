
WITH RECURSIVE SalesCTE AS (
    SELECT 
        ws.sold_date_sk,
        ws.item_sk,
        ws.order_number,
        SUM(ws.quantity) AS total_quantity,
        SUM(ws.net_profit) AS total_net_profit
    FROM 
        web_sales ws
    JOIN 
        date_dim dd ON ws.sold_date_sk = dd.d_date_sk
    WHERE 
        dd.d_year = 2023
    GROUP BY 
        ws.sold_date_sk, ws.item_sk, ws.order_number
    HAVING 
        SUM(ws.net_profit) > 1000
    UNION ALL
    SELECT 
        ws.sold_date_sk,
        ws.item_sk,
        ws.order_number,
        SUM(ws.quantity) AS total_quantity,
        SUM(ws.net_profit) AS total_net_profit
    FROM 
        web_sales ws
    JOIN 
        SalesCTE s ON ws.order_number = s.order_number AND ws.item_sk = s.item_sk
    GROUP BY 
        ws.sold_date_sk, ws.item_sk, ws.order_number
), 
CustomerStats AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        COALESCE(SUM(ss.net_paid), 0) AS total_spent,
        COUNT(DISTINCT ss.ticket_number) AS number_of_purchases
    FROM 
        customer c
    LEFT JOIN 
        store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    GROUP BY 
        c.c_customer_sk, c.c_first_name, c.c_last_name
    HAVING 
        COALESCE(SUM(ss.net_paid), 0) > 50000
)
SELECT 
    cs.c_customer_sk,
    cs.c_first_name,
    cs.c_last_name,
    cte.total_quantity,
    cte.total_net_profit
FROM 
    CustomerStats cs
JOIN 
    SalesCTE cte ON cs.c_customer_sk IN (
        SELECT DISTINCT ws_bill_customer_sk 
        FROM web_sales 
        WHERE ws_net_profit > 500
    )
ORDER BY 
    COALESCE(cs.total_spent, 0) DESC, COALESCE(cte.total_net_profit, 0) ASC
FETCH FIRST 10 ROWS ONLY;
