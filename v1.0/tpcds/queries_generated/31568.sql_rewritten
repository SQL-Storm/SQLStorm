WITH RECURSIVE sales_data AS (
    SELECT 
        ws_order_number,
        ws_item_sk,
        ws_quantity,
        ws_sales_price,
        ws_ext_sales_price,
        ws_net_profit,
        1 AS depth
    FROM 
        web_sales
    WHERE 
        ws_sold_date_sk >= (SELECT d_date_sk FROM date_dim WHERE d_date = cast('2002-10-01' as date) - INTERVAL '30 DAY')
    
    UNION ALL
    
    SELECT 
        cs_order_number,
        cs_item_sk,
        cs_quantity,
        cs_sales_price,
        cs_ext_sales_price,
        cs_net_profit,
        depth + 1
    FROM 
        catalog_sales
    WHERE 
        cs_order_number IN (SELECT ws_order_number FROM web_sales)
),
customer_info AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name || ' ' || c.c_last_name AS customer_name,
        cd.cd_gender,
        cd.cd_marital_status,
        SUM(sd.ws_quantity) AS total_quantity,
        SUM(sd.ws_net_profit) AS total_profit
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN 
        sales_data sd ON c.c_customer_sk = sd.ws_item_sk
    GROUP BY 
        c.c_customer_sk, customer_name, cd.cd_gender, cd.cd_marital_status
),
warehouse_summary AS (
    SELECT 
        w.w_warehouse_sk,
        COUNT(DISTINCT ss.ss_ticket_number) AS total_sales,
        SUM(ss.ss_net_profit) AS total_profit
    FROM 
        warehouse w
    LEFT JOIN 
        store_sales ss ON w.w_warehouse_sk = ss.ss_store_sk
    GROUP BY 
        w.warehouse_sk
)
SELECT 
    ci.customer_name,
    ci.total_quantity,
    ci.total_profit,
    ws.warehouse_sk,
    ws.total_sales,
    ws.total_profit
FROM 
    customer_info ci
JOIN 
    warehouse_summary ws ON ci.c_customer_sk % 10 = ws.warehouse_sk % 10 
WHERE 
    (ci.cd_gender = 'F' AND ci.total_profit > 1000)
    OR (ci.cd_marital_status = 'M' AND ci.total_quantity > 50)
ORDER BY 
    ci.total_profit DESC
LIMIT 100;