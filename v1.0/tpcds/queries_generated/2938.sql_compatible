
WITH sales_summary AS (
    SELECT 
        ws.ws_item_sk,
        SUM(ws.ws_quantity) AS total_quantity,
        SUM(ws.ws_ext_sales_price) AS total_sales,
        MAX(ws.ws_sold_date_sk) AS latest_date
    FROM 
        web_sales ws
    GROUP BY 
        ws.ws_item_sk
),
average_sales AS (
    SELECT 
        ss.ws_item_sk, 
        ss.total_quantity,
        ss.total_sales,
        AVG(ss.total_sales) OVER() AS avg_sales
    FROM 
        sales_summary ss
),
high_performance_items AS (
    SELECT 
        i.i_item_id,
        a.total_quantity,
        a.total_sales,
        CASE 
            WHEN a.total_sales > a.avg_sales THEN 'Above Average'
            WHEN a.total_sales IS NULL THEN 'No Sales'
            ELSE 'Below Average'
        END AS performance_category,
        a.ws_item_sk
    FROM 
        average_sales a
    JOIN 
        item i ON a.ws_item_sk = i.i_item_sk
)
SELECT 
    h.i_item_id,
    h.total_quantity,
    h.total_sales,
    COALESCE(r.r_reason_desc, 'N/A') AS return_reason,
    h.performance_category,
    d.d_date AS sales_date
FROM 
    high_performance_items h
LEFT JOIN 
    store_returns sr ON h.ws_item_sk = sr.sr_item_sk
LEFT JOIN 
    reason r ON sr.sr_reason_sk = r.r_reason_sk
JOIN 
    date_dim d ON h.latest_date = d.d_date_sk
WHERE 
    d.d_year = 2023
ORDER BY 
    h.total_sales DESC;
