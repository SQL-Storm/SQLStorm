
WITH RECURSIVE sales_hierarchy AS (
    SELECT 
        s_store_sk,
        s_store_name,
        s_sales_price AS sales_price,
        1 AS level
    FROM 
        store_sales 
    JOIN 
        item ON store_sales.ss_item_sk = item.i_item_sk
    WHERE 
        ss_sold_date_sk = (
            SELECT MAX(ss_sold_date_sk) FROM store_sales
        )
    UNION ALL
    SELECT 
        sh.s_store_sk,
        sh.s_store_name,
        sh.sales_price * 1.1 AS sales_price,
        sh.level + 1
    FROM 
        sales_hierarchy sh
    JOIN 
        store s ON sh.s_store_sk = s.s_store_sk
    WHERE 
        sh.level < 5
)
SELECT 
    ca.ca_city,
    COUNT(DISTINCT c.c_customer_id) AS customer_count,
    SUM(ws.ws_net_profit) AS total_profit,
    AVG(ws.ws_net_paid) AS average_amount,
    MAX(wp.wp_creation_date_sk) AS last_visited_page,
    STRING_AGG(DISTINCT CONCAT(wp.wp_url, ': ', wp.wp_type), ', ') AS urls
FROM 
    sales_hierarchy sh
JOIN 
    web_sales ws ON sh.s_store_sk = ws.ws_warehouse_sk
JOIN 
    customer c ON ws.ws_bill_customer_sk = c.c_customer_sk
LEFT JOIN 
    customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
JOIN 
    web_page wp ON ws.ws_web_page_sk = wp.wp_web_page_sk
WHERE 
    ca.ca_state = 'CA'
    AND ws.ws_net_profit IS NOT NULL
GROUP BY 
    ca.ca_city,
    ca.ca_address_sk,
    sh.s_store_sk,
    sh.s_store_name,
    sh.sales_price,
    wp.wp_creation_date_sk
HAVING 
    COUNT(DISTINCT c.c_customer_id) > 10
ORDER BY 
    total_profit DESC;
