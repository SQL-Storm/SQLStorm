
WITH CustomerReturns AS (
    SELECT 
        cr.returned_date_sk,
        cr.return_time_sk,
        cr.returning_customer_sk,
        cr.return_item_sk,
        SUM(cr.return_quantity) AS total_returns,
        SUM(cr.return_amount) AS total_return_amount
    FROM 
        catalog_returns cr
    GROUP BY 
        cr.returned_date_sk, cr.return_time_sk, cr.returning_customer_sk, cr.return_item_sk
),
DailySales AS (
    SELECT 
        ws.sold_date_sk,
        COUNT(DISTINCT ws.order_number) AS total_orders,
        SUM(ws.net_profit) AS total_sales
    FROM 
        web_sales ws
    GROUP BY 
        ws.sold_date_sk
),
CustomerMetrics AS (
    SELECT 
        c.c_customer_sk,
        cd.cd_gender,
        COALESCE(cd.cd_marital_status, 'N/A') AS marital_status,
        COUNT(CASE WHEN cr.total_returns > 0 THEN 1 END) AS return_count,
        SUM(COALESCE(cr.total_return_amount, 0)) AS total_return_value,
        SUM(COALESCE(dm.total_sales, 0)) AS total_purchase_value,
        ROW_NUMBER() OVER(PARTITION BY cd.cd_gender ORDER BY SUM(COALESCE(dm.total_sales, 0)) DESC) AS sales_rank
    FROM 
        customer c
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN 
        CustomerReturns cr ON c.c_customer_sk = cr.returning_customer_sk
    LEFT JOIN 
        DailySales dm ON cr.returned_date_sk = dm.sold_date_sk
    GROUP BY 
        c.c_customer_sk, cd.cd_gender, cd.cd_marital_status
),
ReturnStatistics AS (
    SELECT 
        cm.marital_status,
        cm.cd_gender,
        COUNT(DISTINCT cm.c_customer_sk) AS unique_customers,
        AVG(cm.return_count) AS avg_returns_per_customer,
        SUM(cm.total_return_value) AS total_return_value,
        SUM(CASE WHEN cm.total_purchase_value > 0 THEN 1 ELSE 0 END) AS purchase_count
    FROM 
        CustomerMetrics cm
    GROUP BY 
        cm.marital_status, cm.cd_gender
)
SELECT 
    rs.marital_status,
    rs.cd_gender,
    rs.unique_customers,
    rs.avg_returns_per_customer,
    rs.total_return_value,
    rs.purchase_count,
    CASE 
        WHEN rs.purchase_count > 0 THEN (rs.total_return_value / rs.purchase_count)
        ELSE NULL 
    END AS average_return_value_per_purchase
FROM 
    ReturnStatistics rs
WHERE 
    rs.unique_customers > 0
ORDER BY 
    rs.marital_status, rs.cd_gender;
