
WITH RankedSales AS (
    SELECT 
        ws.ws_item_sk,
        ws.ws_order_number,
        ws.ws_sales_price,
        ws.ws_quantity,
        DENSE_RANK() OVER (PARTITION BY ws.ws_item_sk ORDER BY ws.ws_sales_price DESC) AS rank_price,
        SUM(ws.ws_quantity) OVER (PARTITION BY ws.ws_item_sk) AS total_quantity,
        SUM(ws.ws_net_profit) OVER (PARTITION BY ws.ws_item_sk) AS total_net_profit
    FROM 
        web_sales ws
    WHERE 
        ws.ws_sold_date_sk > 1000
), FilteredSales AS (
    SELECT 
        fs.ws_item_sk,
        fs.ws_order_number,
        fs.ws_sales_price,
        fs.total_quantity,
        fs.total_net_profit
    FROM 
        RankedSales fs
    WHERE 
        fs.rank_price = 1
), CustomerInfo AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_income_band_sk,
        COALESCE(ci.total_net_profit, 0) AS total_net_profit
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN 
        (SELECT 
            ws_bill_customer_sk,
            SUM(ws_net_profit) AS total_net_profit
        FROM 
            web_sales
        WHERE 
            ws_sold_date_sk BETWEEN 2000 AND 3000
        GROUP BY 
            ws_bill_customer_sk) ci ON c.c_customer_sk = ci.ws_bill_customer_sk
), TopCustomers AS (
    SELECT 
        ci.c_customer_sk,
        ci.c_first_name,
        ci.c_last_name,
        ci.cd_gender,
        ci.cd_income_band_sk,
        ROW_NUMBER() OVER (PARTITION BY ci.cd_income_band_sk ORDER BY ci.total_net_profit DESC) AS rank_within_income
    FROM 
        CustomerInfo ci
)
SELECT 
    tc.c_customer_sk,
    tc.c_first_name,
    tc.c_last_name,
    tc.cd_gender,
    COALESCE(ib.ib_lower_bound, 'Unknown') AS income_lower_bound,
    COALESCE(ib.ib_upper_bound, 'Unknown') AS income_upper_bound,
    fs.ws_sales_price,
    fs.total_quantity,
    fs.total_net_profit 
FROM 
    TopCustomers tc
LEFT JOIN 
    income_band ib ON tc.cd_income_band_sk = ib.ib_income_band_sk
JOIN 
    FilteredSales fs ON tc.c_customer_sk = fs.ws_order_number
WHERE 
    tc.rank_within_income <= 3
ORDER BY 
    tc.cd_income_band_sk, fs.total_net_profit DESC;
