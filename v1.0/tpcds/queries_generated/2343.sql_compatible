
WITH ItemSales AS (
    SELECT 
        ws.web_site_id,
        i.i_item_id,
        SUM(ws.ws_net_paid) AS total_sales,
        COUNT(DISTINCT ws.ws_order_number) AS order_count,
        AVG(ws.ws_net_paid) AS avg_order_value
    FROM web_sales ws
    JOIN item i ON ws.ws_item_sk = i.i_item_sk
    GROUP BY ws.web_site_id, i.i_item_id
),
CustomerInfo AS (
    SELECT 
        c.c_customer_id,
        cd.cd_gender,
        ib.ib_income_band_sk,
        SUBSTRING(c.c_first_name FROM 1 FOR 1) AS first_name_initial,
        COUNT(DISTINCT ws.ws_order_number) AS total_orders
    FROM customer c
    JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN household_demographics hd ON c.c_customer_sk = hd.hd_demo_sk
    LEFT JOIN income_band ib ON hd.hd_income_band_sk = ib.ib_income_band_sk
    LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY c.c_customer_id, cd.cd_gender, ib.ib_income_band_sk, first_name_initial
),
SalesRanked AS (
    SELECT 
        web_site_id,
        i_item_id,
        total_sales,
        order_count,
        avg_order_value,
        DENSE_RANK() OVER (PARTITION BY web_site_id ORDER BY total_sales DESC) AS sales_rank
    FROM ItemSales
)
SELECT 
    ci.first_name_initial,
    ci.cd_gender,
    ci.ib_income_band_sk,
    sr.web_site_id,
    sr.i_item_id,
    sr.total_sales,
    sr.order_count,
    sr.avg_order_value,
    CASE 
        WHEN ci.total_orders > 5 THEN 'Frequent Buyer'
        ELSE 'Occasional Buyer'
    END AS customer_segment
FROM SalesRanked sr
JOIN CustomerInfo ci ON sr.web_site_id = ci.c_customer_id
WHERE sr.sales_rank <= 10
AND ci.ib_income_band_sk IS NOT NULL
ORDER BY sr.web_site_id, sr.total_sales DESC;
