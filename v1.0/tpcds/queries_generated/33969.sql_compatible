
WITH RECURSIVE sales_hierarchy AS (
    SELECT
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        SUM(ss.ss_net_profit) AS total_net_profit
    FROM
        customer AS c
    JOIN
        customer_demographics AS cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN
        store_sales AS ss ON c.c_customer_sk = ss.ss_customer_sk
    GROUP BY
        c.c_customer_sk, c.c_first_name, c.c_last_name, cd.cd_gender, cd.cd_marital_status
    HAVING
        SUM(ss.ss_net_profit) IS NOT NULL
    UNION ALL
    SELECT
        sh.c_customer_sk,
        sh.c_first_name,
        sh.c_last_name,
        sh.cd_gender,
        sh.cd_marital_status,
        SUM(s.ws_net_profit) AS total_net_profit
    FROM
        sales_hierarchy AS sh
    JOIN
        web_sales AS s ON sh.c_customer_sk = s.ws_ship_customer_sk
    GROUP BY
        sh.c_customer_sk, sh.c_first_name, sh.c_last_name, sh.cd_gender, sh.cd_marital_status
    HAVING
        SUM(s.ws_net_profit) IS NOT NULL
),
ranked_sales AS (
    SELECT
        sh.c_customer_sk,
        sh.c_first_name,
        sh.c_last_name,
        sh.cd_gender,
        sh.cd_marital_status,
        sh.total_net_profit,
        RANK() OVER (PARTITION BY sh.cd_gender ORDER BY sh.total_net_profit DESC) AS profit_rank
    FROM
        sales_hierarchy AS sh
),
final_sales AS (
    SELECT
        rs.c_customer_sk,
        rs.c_first_name,
        rs.c_last_name,
        rs.cd_gender,
        rs.cd_marital_status,
        rs.total_net_profit,
        rs.profit_rank,
        COALESCE(p.p_promo_name, 'No Promotion') AS promotion
    FROM
        ranked_sales AS rs
    LEFT JOIN
        promotion AS p ON rs.total_net_profit > p.p_cost
    WHERE
        rs.profit_rank <= 5
    ORDER BY
        rs.cd_gender, rs.total_net_profit DESC
)
SELECT
    COUNT(*) AS total_customers,
    cd_gender,
    AVG(total_net_profit) AS avg_net_profit,
    MAX(total_net_profit) AS max_net_profit,
    MIN(total_net_profit) AS min_net_profit,
    STRING_AGG(c_first_name || ' ' || c_last_name, '; ') AS customer_names
FROM
    final_sales
GROUP BY
    cd_gender
ORDER BY
    cd_gender;
