
WITH RECURSIVE address_chain AS (
    SELECT ca_address_sk, ca_city, ca_state, ca_country, 0 AS level
    FROM customer_address
    WHERE ca_state IS NOT NULL
    UNION ALL
    SELECT ca.ca_address_sk, ca.ca_city, ca.ca_state, ca.ca_country, ac.level + 1
    FROM customer_address ca
    JOIN address_chain ac ON ca.ca_address_sk = ac.ca_address_sk
    WHERE ac.level < 5
),
demographic_summary AS (
    SELECT
        cd.cd_gender,
        COUNT(c.c_customer_sk) AS customer_count,
        SUM(COALESCE(cd.cd_purchase_estimate, 0)) AS total_purchase_estimate,
        AVG(cd.cd_dep_count) AS avg_dependent_count
    FROM customer_demographics cd
    LEFT JOIN customer c ON cd.cd_demo_sk = c.c_current_cdemo_sk
    GROUP BY cd.cd_gender
),
sales_summary AS (
    SELECT
        ss.ss_store_sk,
        SUM(ss.ss_net_paid) AS total_net_paid,
        COUNT(DISTINCT ss.ss_ticket_number) AS total_tickets
    FROM store_sales ss
    WHERE ss.ss_sold_date_sk BETWEEN 
          (SELECT MIN(d_date_sk) FROM date_dim WHERE d_year = 2023) AND 
          (SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = 2023)
    GROUP BY ss.ss_store_sk
),
windowed_sales AS (
    SELECT
        ws.web_site_sk,
        ws.ws_item_sk,
        ws.ws_sales_price,
        RANK() OVER (PARTITION BY ws.web_site_sk ORDER BY ws.ws_net_paid DESC) AS price_rank
    FROM web_sales ws
    WHERE ws.ws_ship_date_sk > 100
)
SELECT
    ac.level,
    ac.ca_city,
    ac.ca_state,
    ac.ca_country,
    ds.cd_gender,
    ds.customer_count,
    ds.total_purchase_estimate,
    ss.total_net_paid,
    ws.price_rank,
    COALESCE(ws.ws_sales_price * (1 - NULLIF(rd.r_discount, 0)), 0) AS adjusted_price
FROM address_chain ac
FULL OUTER JOIN demographic_summary ds ON ds.customer_count > 50
LEFT JOIN sales_summary ss ON ss.ss_store_sk = 1
LEFT JOIN web_site ws ON ws.web_site_sk = ss.ss_store_sk
LEFT JOIN (
    SELECT r.r_reason_sk, 
           CASE WHEN r.r_reason_desc IS NULL THEN 0 ELSE 1 END AS r_discount
    FROM reason r
) rd ON 1 = rd.r_reason_sk
WHERE ac.ca_country IN ('USA', 'Canada') 
  AND (ds.total_purchase_estimate IS NOT NULL OR ss.total_net_paid > 1000)
ORDER BY ac.ca_city, ds.cd_gender DESC, ss.total_net_paid;
