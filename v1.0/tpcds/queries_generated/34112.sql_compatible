
WITH RECURSIVE monthly_sales AS (
    SELECT 
        d.d_month_seq, 
        SUM(ws.ws_ext_sales_price) AS total_sales
    FROM 
        date_dim d 
    JOIN 
        web_sales ws ON d.d_date_sk = ws.ws_sold_date_sk
    WHERE 
        d.d_year = 2023
    GROUP BY 
        d.d_month_seq

    UNION ALL

    SELECT 
        ms.d_month_seq, 
        SUM(cs.cs_ext_sales_price) AS total_sales
    FROM 
        monthly_sales ms
    JOIN 
        catalog_sales cs ON ms.d_month_seq = cs.cs_sold_date_sk
    GROUP BY 
        ms.d_month_seq
),

customer_income AS (
    SELECT 
        c.c_customer_sk, 
        cd.cd_marital_status, 
        hd.hd_income_band_sk,
        COUNT(DISTINCT cs.cs_order_number) AS total_orders
    FROM 
        customer c
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN 
        household_demographics hd ON c.c_customer_sk = hd.hd_demo_sk
    LEFT JOIN 
        catalog_sales cs ON c.c_customer_sk = cs.cs_ship_customer_sk
    WHERE 
        cd.cd_marital_status IS NOT NULL AND 
        hd.hd_income_band_sk IS NOT NULL
    GROUP BY 
        c.c_customer_sk, cd.cd_marital_status, hd.hd_income_band_sk
)

SELECT 
    mi.hd_income_band_sk,
    cd.cd_marital_status,
    COUNT(DISTINCT ci.c_customer_sk) AS customer_count,
    SUM(ms.total_sales) AS total_sales
FROM 
    customer_income ci 
LEFT JOIN 
    monthly_sales ms ON ms.d_month_seq BETWEEN 1 AND 12 
LEFT JOIN 
    household_demographics mi ON ci.hd_income_band_sk = mi.hd_income_band_sk
LEFT JOIN 
    customer_demographics cd ON ci.cd_marital_status = cd.cd_marital_status 
GROUP BY 
    mi.hd_income_band_sk, cd.cd_marital_status
HAVING 
    COUNT(DISTINCT ci.c_customer_sk) > 10
ORDER BY 
    total_sales DESC;
