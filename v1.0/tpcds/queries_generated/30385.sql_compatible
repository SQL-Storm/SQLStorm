
WITH RECURSIVE address_hierarchy AS (
    SELECT ca_address_sk, ca_address_id, ca_city, ca_state, 1 AS level 
    FROM customer_address 
    WHERE ca_city IS NOT NULL
    UNION ALL
    SELECT ca.ca_address_sk, ca.ca_address_id, ca.ca_city, ca.ca_state, ah.level + 1 
    FROM customer_address ca 
    JOIN address_hierarchy ah ON ca.ca_state = ah.ca_state AND ca.ca_city <> ah.ca_city
), customer_summary AS (
    SELECT 
        c.c_customer_id,
        SUM(COALESCE(ws.ws_net_profit, 0)) AS total_profit,
        MAX(cd.cd_purchase_estimate) AS max_purchase_estimate,
        COUNT(DISTINCT c.c_customer_sk) AS total_customers
    FROM customer c
    LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    GROUP BY c.c_customer_id
), top_items AS (
    SELECT 
        ws.ws_item_sk, 
        SUM(ws.ws_quantity) AS total_quantity,
        SUM(ws.ws_net_profit) AS total_profit
    FROM web_sales ws
    GROUP BY ws.ws_item_sk
    HAVING SUM(ws.ws_quantity) > 100
), combined_data AS (
    SELECT 
        ah.ca_city,
        ah.ca_state,
        cs.c_customer_id,
        cs.total_profit,
        cs.max_purchase_estimate,
        ti.total_quantity,
        ti.total_profit AS item_profit
    FROM address_hierarchy ah
    JOIN customer_summary cs ON cs.total_profit > 0
    JOIN top_items ti ON ti.total_profit > 0
    WHERE ah.level < 3
)
SELECT 
    ca.ca_city,
    ca.ca_state,
    cd.cd_gender,
    ed.total_profit,
    ed.max_purchase_estimate,
    ROW_NUMBER() OVER (PARTITION BY ca.ca_state ORDER BY ed.total_profit DESC) AS profit_rank
FROM combined_data ed
JOIN customer c ON ed.c_customer_id = c.c_customer_id
LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
LEFT JOIN customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
WHERE cd.cd_gender = 'F' AND ed.total_profit IS NOT NULL
ORDER BY ca.ca_city, profit_rank;
