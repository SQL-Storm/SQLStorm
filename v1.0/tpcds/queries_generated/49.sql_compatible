
WITH CustomerSales AS (
    SELECT
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        SUM(ws.ws_net_paid) AS total_spent,
        COUNT(DISTINCT ws.ws_order_number) AS total_orders
    FROM
        customer c
    JOIN
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    WHERE
        ws.ws_sold_date_sk >= (SELECT MAX(d.d_date_sk) FROM date_dim d WHERE d.d_year = 2023)
    GROUP BY
        c.c_customer_sk, c.c_first_name, c.c_last_name
),
TopCustomers AS (
    SELECT
        cs.c_customer_sk,
        cs.c_first_name,
        cs.c_last_name,
        cs.total_spent,
        cs.total_orders,
        RANK() OVER (ORDER BY cs.total_spent DESC) AS rank
    FROM
        CustomerSales cs
),
ReturnStatistics AS (
    SELECT
        sr.s_return_customer_sk,
        SUM(CASE WHEN sr.s_returned_date_sk IS NOT NULL THEN sr.s_return_quantity ELSE 0 END) AS total_returns,
        SUM(CASE WHEN sr.s_returned_date_sk IS NOT NULL THEN sr.s_return_amt ELSE 0 END) AS total_returned_amount
    FROM
        store_returns sr
    GROUP BY
        sr.s_return_customer_sk
)
SELECT
    tc.c_first_name,
    tc.c_last_name,
    tc.total_spent,
    tc.total_orders,
    COALESCE(rs.total_returns, 0) AS total_returns,
    COALESCE(rs.total_returned_amount, 0) AS total_returned_amount
FROM
    TopCustomers tc
LEFT JOIN
    ReturnStatistics rs ON tc.c_customer_sk = rs.s_return_customer_sk
WHERE
    tc.rank <= 10
ORDER BY
    tc.rank;
