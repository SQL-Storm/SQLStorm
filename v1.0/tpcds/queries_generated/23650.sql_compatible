
WITH RECURSIVE income_bracket AS (
    SELECT ib_income_band_sk, ib_lower_bound, ib_upper_bound
    FROM income_band
    WHERE ib_income_band_sk = 1
    UNION ALL
    SELECT ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound
    FROM income_band ib
    JOIN income_bracket ibr ON ibr.ib_income_band_sk + 1 = ib.ib_income_band_sk
), 

customer_info AS (
    SELECT 
        c.c_customer_id,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_purchase_estimate,
        COUNT(DISTINCT w.web_site_sk) AS web_visits,
        SUM(ws.ws_net_profit) AS total_profit,
        SUM(COALESCE(ws.ws_net_paid_inc_tax, 0)) AS total_paid_inc_tax
    FROM customer c
    LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    LEFT JOIN web_site w ON ws.ws_web_site_sk = w.web_site_sk
    WHERE cd.cd_purchase_estimate > 
        (SELECT AVG(cd_purchase_estimate) FROM customer_demographics)
    GROUP BY c.c_customer_id, cd.cd_gender, cd.cd_marital_status, cd.cd_purchase_estimate
),

sales_info AS (
    SELECT 
        s.ss_store_sk,
        COUNT(DISTINCT ss_ticket_number) AS total_sales,
        AVG(ss_net_profit) AS avg_net_profit,
        DENSE_RANK() OVER (PARTITION BY s.ss_store_sk ORDER BY AVG(ss_net_profit) DESC) AS profit_rank
    FROM store_sales s
    GROUP BY s.ss_store_sk
)

SELECT 
    ci.c_customer_id,
    ci.cd_gender,
    ci.cd_marital_status,
    ci.web_visits,
    ci.total_profit,
    COALESCE(r.r_reason_desc, 'No Reason') AS return_reason,
    CASE 
        WHEN ci.total_paid_inc_tax IS NULL THEN 'No Payment Information'
        ELSE 'Payment Received'
    END AS payment_status,
    SUM(si.total_sales) AS total_store_sales,
    COUNT(DISTINCT ib.ib_income_band_sk) AS income_band_count
FROM customer_info ci
LEFT JOIN store s ON ci.c_customer_id = s.s_store_id
LEFT JOIN sales_info si ON s.s_store_sk = si.ss_store_sk
LEFT JOIN reason r ON r.r_reason_sk = (
    SELECT cr_reason_sk 
    FROM catalog_returns 
    WHERE cr_returning_customer_sk = ci.c_customer_id 
    ORDER BY cr_returned_date_sk DESC 
    FETCH FIRST 1 ROW ONLY
)
LEFT JOIN income_bracket ib ON ci.cd_purchase_estimate BETWEEN ib.ib_lower_bound AND ib.ib_upper_bound
WHERE ci.total_profit > 0
GROUP BY ci.c_customer_id, ci.cd_gender, ci.cd_marital_status, ci.web_visits, ci.total_profit, r.r_reason_desc
ORDER BY total_store_sales DESC, ci.cd_marital_status DESC 
FETCH FIRST 100 ROWS ONLY;
