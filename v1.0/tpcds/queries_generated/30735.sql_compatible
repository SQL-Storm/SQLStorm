
WITH RECURSIVE customer_hierarchy AS (
    SELECT c_customer_sk, c_first_name, c_last_name, c_current_addr_sk, 1 AS level
    FROM customer
    WHERE c_current_addr_sk IS NOT NULL
    UNION ALL
    SELECT c.c_customer_sk, c.c_first_name, c.c_last_name, c.c_current_addr_sk, ch.level + 1
    FROM customer c
    JOIN customer_hierarchy ch ON c.c_current_addr_sk = ch.c_current_addr_sk
    WHERE ch.level < 5
),
total_sales AS (
    SELECT ws_bill_customer_sk AS customer_sk,
           SUM(ws_ext_sales_price) AS total_sales
    FROM web_sales
    GROUP BY ws_bill_customer_sk
),
customer_sales AS (
    SELECT c.c_customer_sk,
           c.c_first_name,
           c.c_last_name,
           COALESCE(ts.total_sales, 0) AS total_sales,
           DENSE_RANK() OVER (ORDER BY COALESCE(ts.total_sales, 0) DESC) AS sales_rank
    FROM customer c
    LEFT JOIN total_sales ts ON c.c_customer_sk = ts.customer_sk
),
high_value_customers AS (
    SELECT c_customer_sk,
           c_first_name,
           c_last_name,
           total_sales
    FROM customer_sales
    WHERE total_sales > 1000
)
SELECT ch.c_first_name AS customer_first_name,
       ch.c_last_name AS customer_last_name,
       cc.cc_name AS call_center_name,
       cc.cc_city AS call_center_city,
       hvc.total_sales AS high_value_sales,
       CASE WHEN hvc.total_sales IS NULL THEN 'No Sales' ELSE 'Has Sales' END AS sales_status
FROM customer_hierarchy ch
LEFT JOIN high_value_customers hvc ON ch.c_customer_sk = hvc.c_customer_sk
LEFT JOIN call_center cc ON ch.c_current_addr_sk = cc.cc_addr_sk
WHERE ch.level = 1
ORDER BY hvc.total_sales DESC NULLS LAST;
