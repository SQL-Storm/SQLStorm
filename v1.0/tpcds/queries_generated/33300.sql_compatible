
WITH RECURSIVE sales_cte AS (
    SELECT 
        ws_item_sk,
        SUM(ws_ext_sales_price) AS total_sales,
        ROW_NUMBER() OVER (PARTITION BY ws_item_sk ORDER BY ws_sold_date_sk DESC) AS rn
    FROM 
        web_sales
    WHERE 
        ws_sold_date_sk BETWEEN (SELECT d_date_sk FROM date_dim WHERE d_date = '2023-01-01') 
                            AND (SELECT d_date_sk FROM date_dim WHERE d_date = '2023-12-31')
    GROUP BY 
        ws_item_sk
),
customer_summary AS (
    SELECT 
        c.c_customer_sk,
        COALESCE(cd.cd_gender, 'UNKNOWN') AS gender,
        COUNT(DISTINCT ws.ws_order_number) AS total_orders,
        SUM(ws.ws_ext_sales_price) AS total_spent
    FROM 
        customer c
    LEFT JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    GROUP BY 
        c.c_customer_sk, cd.cd_gender
),
top_items AS (
    SELECT 
        item.i_item_id,
        item.i_item_desc,
        sales_cte.total_sales,
        ROW_NUMBER() OVER (ORDER BY sales_cte.total_sales DESC) AS rank
    FROM 
        sales_cte
    JOIN 
        item ON sales_cte.ws_item_sk = item.i_item_sk
)
SELECT 
    cs.c_customer_sk,
    cs.gender,
    COALESCE(ti.i_item_id, 'N/A') AS top_item_id,
    COALESCE(ti.i_item_desc, 'No Item Sold') AS top_item_desc,
    cs.total_orders,
    cs.total_spent,
    CASE 
        WHEN cs.total_spent > 1000 THEN 'High Roller'
        WHEN cs.total_spent BETWEEN 500 AND 1000 THEN 'Moderate Spender'
        ELSE 'Budget Buyer'
    END AS customer_segment
FROM 
    customer_summary cs
LEFT JOIN 
    top_items ti ON ti.rank = 1
WHERE 
    cs.total_orders > 0
ORDER BY 
    cs.total_spent DESC;
