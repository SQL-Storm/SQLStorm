
WITH RankedSales AS (
    SELECT 
        ws.web_site_sk,
        ws.web_site_id,
        ws.ws_order_number,
        ws.ws_sold_date_sk,
        ws.ws_sales_price,
        ROW_NUMBER() OVER (PARTITION BY ws.web_site_id ORDER BY ws.ws_sold_date_sk DESC) AS rn
    FROM 
        web_sales ws
    WHERE 
        ws.ws_sales_price IS NOT NULL
),
TopSellingItems AS (
    SELECT 
        ws.ws_item_sk,
        SUM(ws.ws_quantity) AS total_quantity,
        SUM(ws.ws_sales_price) AS total_sales,
        COUNT(DISTINCT ws.ws_order_number) AS order_count
    FROM 
        web_sales ws
    INNER JOIN 
        RankedSales rs ON ws.ws_order_number = rs.ws_order_number
    WHERE 
        rs.rn <= 10
    GROUP BY 
        ws.ws_item_sk
),
CustomerDemographics AS (
    SELECT 
        cd.cd_demo_sk,
        cd.cd_gender,
        cd.cd_marital_status,
        COUNT(DISTINCT c.c_customer_sk) AS customer_count
    FROM 
        customer c
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    GROUP BY 
        cd.cd_demo_sk, cd.cd_gender, cd.cd_marital_status
)
SELECT 
    cd.cd_gender,
    cd.cd_marital_status,
    COALESCE(MAX(ts.total_quantity), 0) AS max_quantity_sold,
    COALESCE(AVG(ts.total_sales), 0.0) AS avg_sales_per_item,
    COUNT(DISTINCT c.c_customer_sk) AS unique_customers,
    SUM(CASE WHEN c.c_birth_year IS NULL THEN 1 ELSE 0 END) AS null_birth_year_count,
    SUM(CASE WHEN c.c_preferred_cust_flag = 'Y' THEN 1 ELSE 0 END) AS preferred_customers
FROM 
    CustomerDemographics cd
LEFT JOIN 
    TopSellingItems ts ON cd.cd_demo_sk = ts.ws_item_sk
LEFT JOIN 
    customer c ON c.c_current_cdemo_sk = cd.cd_demo_sk
GROUP BY 
    cd.cd_gender, cd.cd_marital_status
ORDER BY 
    cd.cd_gender, cd.cd_marital_status;
