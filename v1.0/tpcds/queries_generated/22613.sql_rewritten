WITH RECURSIVE sales_data AS (
    SELECT 
        ss.sold_date_sk,
        ss.store_sk,
        SUM(ss.ext_sales_price) AS total_sales,
        COUNT(DISTINCT ss.customer_sk) AS customers_count,
        MAX(ss.ext_discount_amt) AS max_discount,
        MIN(ss.ext_tax) AS min_tax
    FROM 
        store_sales ss
    GROUP BY 
        ss.sold_date_sk, ss.store_sk
    HAVING 
        SUM(ss.ext_sales_price) > 10000
),
target_dates AS (
    SELECT 
        d.d_date_sk, 
        d.d_date 
    FROM 
        date_dim d
    WHERE 
        d.d_year = 2001
        AND d.d_dow IN (1, 2) 
),
customer_info AS (
    SELECT 
        c.c_customer_sk,
        c.c_current_cdemo_sk,
        cd.cd_gender,
        cd.cd_marital_status,
        COALESCE(hd.hd_income_band_sk, 0) AS income_band_sk,
        COUNT(DISTINCT CASE WHEN cd.cd_dep_employed_count > 0 THEN cd.cd_dep_count END) AS employed_dependent_count
    FROM 
        customer c
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN 
        household_demographics hd ON c.c_current_hdemo_sk = hd.hd_demo_sk
    GROUP BY 
        c.c_customer_sk, cd.cd_gender, cd.cd_marital_status, hd.hd_income_band_sk
),
sales_analysis AS (
    SELECT 
        td.d_date_sk,
        td.d_date,
        sd.total_sales,
        ci.cd_gender,
        ci.cd_marital_status,
        ci.income_band_sk,
        ci.customers_count,
        ROW_NUMBER() OVER (PARTITION BY ci.cd_gender ORDER BY sd.total_sales DESC) AS sales_rank
    FROM 
        target_dates td
    LEFT JOIN 
        sales_data sd ON td.d_date_sk = sd.sold_date_sk
    LEFT JOIN 
        customer_info ci ON ci.c_current_cdemo_sk = sd.store_sk
)
SELECT 
    sa.d_date,
    sa.cd_gender,
    sa.cd_marital_status,
    sa.income_band_sk,
    sa.total_sales,
    sa.customers_count,
    COALESCE(SUM(CASE WHEN sa.sales_rank < 5 THEN sa.total_sales END), 0) AS top_sales,
    AVG(sa.total_sales) OVER (PARTITION BY sa.cd_marital_status) AS avg_sales_by_marital_status,
    CASE 
        WHEN sa.customers_count IS NULL THEN 'No Customers'
        ELSE 'Customers Present' 
    END AS customer_status
FROM 
    sales_analysis sa
GROUP BY 
    sa.d_date, sa.cd_gender, sa.cd_marital_status, sa.income_band_sk, sa.total_sales, sa.customers_count
ORDER BY 
    sa.d_date, sa.cd_gender;