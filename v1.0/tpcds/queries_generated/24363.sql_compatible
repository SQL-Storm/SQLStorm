
WITH RECURSIVE RankedSales AS (
    SELECT
        ws.web_site_sk,
        SUM(ws.ws_quantity) AS total_quantity,
        RANK() OVER (PARTITION BY ws.web_site_sk ORDER BY SUM(ws.ws_net_profit) DESC) AS profit_rank,
        COUNT(DISTINCT ws.ws_order_number) AS total_orders
    FROM
        web_sales ws
    INNER JOIN
        web_site w ON ws.ws_web_site_sk = w.web_site_sk
    WHERE
        w.web_class IS NOT NULL
    GROUP BY
        ws.web_site_sk
), FilteredSales AS (
    SELECT
        r.web_site_sk,
        r.total_quantity,
        r.profit_rank,
        r.total_orders
    FROM
        RankedSales r
    WHERE
        r.profit_rank <= 5
), AddressSales AS (
    SELECT
        ca.ca_state,
        SUM(ws.ws_net_profit) AS total_profit
    FROM
        customer c
    LEFT JOIN
        customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
    LEFT JOIN
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY
        ca.ca_state
), SubquerySales AS (
    SELECT
        fs.web_site_sk,
        fs.total_quantity,
        COALESCE(as.total_profit, 0) AS total_profit
    FROM
        FilteredSales fs
    LEFT JOIN
        AddressSales as ON fs.web_site_sk = as.ca_state
)
SELECT
    ws.web_site_id,
    s.total_quantity,
    s.total_profit,
    CASE 
        WHEN s.total_profit > 1000 THEN 'High Profit'
        WHEN s.total_profit BETWEEN 500 AND 1000 THEN 'Medium Profit'
        ELSE 'Low Profit'
    END AS profit_category,
    (SELECT COUNT(*)
     FROM customer c
     WHERE 
         (SELECT COUNT(*) FROM web_sales ws WHERE c.c_customer_sk = ws.ws_bill_customer_sk) > 5) AS frequent_customers
FROM
    SubquerySales s
JOIN
    web_site ws ON s.web_site_sk = ws.web_site_sk
WHERE
    s.total_profit IS NOT NULL
    AND s.total_quantity > (SELECT AVG(total_quantity) FROM FilteredSales)
ORDER BY 
    s.total_profit DESC;
