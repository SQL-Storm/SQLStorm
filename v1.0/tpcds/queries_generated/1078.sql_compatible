
WITH RankedSales AS (
    SELECT 
        ss_store_sk,
        ss_sold_date_sk,
        SUM(ss_sales_price) AS total_sales,
        RANK() OVER (PARTITION BY ss_store_sk ORDER BY SUM(ss_sales_price) DESC) AS sales_rank
    FROM 
        store_sales
    GROUP BY 
        ss_store_sk, ss_sold_date_sk
),
DailySales AS (
    SELECT 
        d.d_date_sk,
        d.d_date,
        SUM(ws_ext_sales_price) AS total_web_sales,
        SUM(cs_ext_sales_price) AS total_catalog_sales
    FROM 
        date_dim d
    LEFT JOIN 
        web_sales ws ON d.d_date_sk = ws.ws_sold_date_sk
    LEFT JOIN 
        catalog_sales cs ON d.d_date_sk = cs.cs_sold_date_sk
    GROUP BY 
        d.d_date_sk, d.d_date
),
CombinedSales AS (
    SELECT 
        ds.d_date,
        ds.total_web_sales,
        ds.total_catalog_sales,
        COALESCE(ds.total_web_sales, 0) + COALESCE(ds.total_catalog_sales, 0) AS total_sales
    FROM 
        DailySales ds
)
SELECT 
    ca.c_city,
    ca.ca_state,
    COUNT(DISTINCT c.c_customer_id) AS customer_count,
    SUM(cs.total_sales) AS combined_sales,
    AVG(cs.total_sales) AS avg_sales_per_customer
FROM 
    customer_address ca 
JOIN 
    customer c ON ca.ca_address_sk = c.c_current_addr_sk
LEFT JOIN 
    CombinedSales cs ON cs.d_date BETWEEN DATE '2023-01-01' AND DATE '2023-12-31'
GROUP BY 
    ca.c_city, ca.ca_state
HAVING 
    SUM(cs.total_sales) > 1000000
ORDER BY 
    combined_sales DESC;
