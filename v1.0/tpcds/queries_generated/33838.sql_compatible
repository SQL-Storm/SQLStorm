
WITH RECURSIVE CustomerHierarchy AS (
    SELECT c_customer_sk, c_first_name, c_last_name, c_current_cdemo_sk, 
           CAST(c_first_name AS VARCHAR(100)) AS customer_path
    FROM customer
    WHERE c_current_cdemo_sk IS NOT NULL
    UNION ALL
    SELECT c.c_customer_sk, c.c_first_name, c.c_last_name, c.c_current_cdemo_sk, 
           CONCAT(ch.customer_path, ' -> ', c.c_first_name)
    FROM customer c
    JOIN CustomerHierarchy ch ON c.c_current_cdemo_sk = ch.c_current_cdemo_sk
),
SalesData AS (
    SELECT ws.ws_item_sk, SUM(ws.ws_quantity) AS total_quantity, 
           SUM(ws.ws_sales_price) AS total_sales
    FROM web_sales ws
    WHERE ws.ws_sold_date_sk IN (SELECT d_date_sk FROM date_dim WHERE d_year = 2023)
    GROUP BY ws.ws_item_sk
),
ReturnData AS (
    SELECT sr_item_sk, SUM(sr_return_quantity) AS total_returns
    FROM store_returns
    GROUP BY sr_item_sk
)
SELECT ch.c_first_name, ch.c_last_name, 
       COALESCE(sd.total_quantity, 0) AS total_sales_quantity, 
       COALESCE(sd.total_sales, 0) AS total_sales_value,
       COALESCE(rd.total_returns, 0) AS total_returns,
       CASE 
           WHEN COALESCE(rd.total_returns, 0) > 0 THEN 'Returned Products'
           ELSE 'No Returns'
       END AS return_status
FROM CustomerHierarchy ch
LEFT JOIN SalesData sd ON ch.c_current_cdemo_sk = sd.ws_item_sk
LEFT JOIN ReturnData rd ON sd.ws_item_sk = rd.sr_item_sk
WHERE ch.c_last_name LIKE 'S%'
GROUP BY ch.c_first_name, ch.c_last_name, sd.total_quantity, sd.total_sales, rd.total_returns
ORDER BY ch.c_first_name;
