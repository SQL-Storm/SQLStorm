
WITH CustomerSales AS (
    SELECT 
        c.c_customer_id,
        SUM(ws.ws_net_paid) AS total_online_sales,
        COUNT(DISTINCT ws.ws_order_number) AS total_orders,
        COUNT(DISTINCT ss.ss_ticket_number) AS total_store_sales,
        COALESCE(SUM(ss.ss_net_paid), 0) AS total_in_store_sales
    FROM 
        customer c
    LEFT JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    LEFT JOIN 
        store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    WHERE 
        c.c_birth_year >= 1970 
        AND c.c_birth_year <= 2000 
        AND (c.c_current_addr_sk IS NOT NULL OR c.c_current_hdemo_sk IS NOT NULL)
    GROUP BY 
        c.c_customer_id
), 
IncomeMetrics AS (
    SELECT 
        cd.cd_gender,
        ib.ib_income_band_sk,
        COUNT(DISTINCT cs.c_customer_id) AS customer_count,
        AVG(cs.total_online_sales) AS avg_online_sales,
        MAX(cs.total_orders) AS max_orders
    FROM 
        customer_demographics cd
    JOIN 
        household_demographics hd ON cd.cd_demo_sk = hd.hd_demo_sk
    JOIN 
        IncomeBand ib ON hd.hd_income_band_sk = ib.ib_income_band_sk
    LEFT JOIN 
        CustomerSales cs ON cs.c_customer_id IS NOT NULL
    WHERE 
        cd.cd_marital_status = 'M'
    GROUP BY 
        cd.cd_gender, ib.ib_income_band_sk
),
FinalMetrics AS (
    SELECT 
        im.cd_gender,
        im.ib_income_band_sk,
        im.customer_count,
        im.avg_online_sales,
        im.max_orders,
        ROW_NUMBER() OVER (PARTITION BY im.cd_gender ORDER BY im.avg_online_sales DESC) AS rank
    FROM 
        IncomeMetrics im
)
SELECT 
    f.cd_gender,
    f.ib_income_band_sk,
    f.customer_count,
    f.avg_online_sales,
    f.max_orders,
    (CASE 
        WHEN f.avg_online_sales IS NULL THEN 'No Sales'
        ELSE CONCAT('Sales: ', ROUND(f.avg_online_sales, 2)::VARCHAR)
    END) AS sales_status
FROM 
    FinalMetrics f
WHERE 
    f.rank <= 5
ORDER BY 
    f.cd_gender, f.avg_online_sales DESC;
