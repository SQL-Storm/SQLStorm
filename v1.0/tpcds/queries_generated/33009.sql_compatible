
WITH RECURSIVE sales_hierarchy AS (
    SELECT 
        s.s_store_sk,
        s.s_store_name,
        SUM(ss.ss_net_profit) AS total_net_profit
    FROM 
        store s
    LEFT JOIN 
        store_sales ss ON s.s_store_sk = ss.ss_store_sk
    WHERE 
        ss.ss_sold_date_sk >= (SELECT MAX(d.d_date_sk) 
                                FROM date_dim d 
                                WHERE d.d_year = 2023)
    GROUP BY 
        s.s_store_sk, s.s_store_name
  
    UNION ALL

    SELECT 
        s.s_store_sk,
        sh.s_store_name,
        sh.total_net_profit + COALESCE(SUM(ss.ss_net_profit), 0)
    FROM 
        sales_hierarchy sh
    JOIN 
        store s ON s.s_store_sk = sh.s_store_sk + 1
    LEFT JOIN 
        store_sales ss ON s.s_store_sk = ss.ss_store_sk 
    GROUP BY 
        s.s_store_sk, sh.s_store_name, sh.total_net_profit
),
customer_totals AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        COUNT(DISTINCT ws.ws_order_number) AS order_count,
        SUM(ws.ws_net_profit) AS total_spent
    FROM 
        customer c
    JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    WHERE 
        ws.ws_sold_date_sk >= (SELECT MAX(d.d_date_sk) 
                                FROM date_dim d 
                                WHERE d.d_year = 2023)
    GROUP BY 
        c.c_customer_sk, c.c_first_name, c.c_last_name
)
SELECT 
    c.c_first_name,
    c.c_last_name,
    COALESCE(s.total_net_profit, 0) AS store_profit,
    ct.order_count,
    ct.total_spent,
    CASE 
        WHEN ct.total_spent IS NULL THEN 'No Purchases'
        WHEN ct.total_spent < 500 THEN 'Low Value Customer'
        WHEN ct.total_spent BETWEEN 500 AND 1500 THEN 'Mid Value Customer'
        ELSE 'High Value Customer'
    END AS customer_segment
FROM 
    customer_totals ct
LEFT JOIN 
    sales_hierarchy s ON ct.order_count = s.total_net_profit
ORDER BY 
    store_profit DESC, total_spent DESC;
