
WITH RECURSIVE customer_hierarchy AS (
    SELECT c_customer_sk, c_first_name, c_last_name, c_current_cdemo_sk, 1 AS level
    FROM customer
    WHERE c_current_cdemo_sk IS NOT NULL
    UNION ALL
    SELECT c.c_customer_sk, c.c_first_name, c.c_last_name, c.c_current_cdemo_sk, ch.level + 1
    FROM customer c
    JOIN customer_hierarchy ch ON c.c_current_cdemo_sk = ch.c_current_cdemo_sk
),
sales_summary AS (
    SELECT 
        ws_bill_customer_sk,
        SUM(ws_quantity) AS total_quantity,
        SUM(ws_net_profit) AS total_net_profit,
        MAX(ws_sold_date_sk) AS last_purchase_date
    FROM web_sales
    GROUP BY ws_bill_customer_sk
),
customer_sales AS (
    SELECT 
        ch.c_customer_sk,
        ch.c_first_name,
        ch.c_last_name,
        ss.total_quantity,
        ss.total_net_profit,
        ss.last_purchase_date
    FROM customer_hierarchy ch
    LEFT JOIN sales_summary ss ON ch.c_customer_sk = ss.ws_bill_customer_sk
),
demographic_info AS (
    SELECT 
        cd.cd_demo_sk,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_education_status,
        cd.cd_purchase_estimate,
        ci.total_net_profit / NULLIF(ci.total_quantity, 0) AS avg_spent_per_item
    FROM customer_demographics cd
    JOIN customer_sales ci ON cd.cd_demo_sk = ci.c_current_cdemo_sk
)
SELECT 
    di.cd_gender,
    di.cd_marital_status,
    di.cd_education_status,
    COUNT(DISTINCT ci.c_customer_sk) AS customer_count,
    AVG(di.avg_spent_per_item) AS average_spent,
    SUM(ci.total_net_profit) AS total_profit,
    COUNT(CASE WHEN di.avg_spent_per_item IS NULL THEN 1 END) AS null_average_spent
FROM demographic_info di
JOIN customer_sales ci ON di.cd_demo_sk = ci.c_current_cdemo_sk
WHERE di.cd_purchase_estimate > 1000
GROUP BY 
    di.cd_gender, 
    di.cd_marital_status, 
    di.cd_education_status
ORDER BY total_profit DESC
LIMIT 10;
