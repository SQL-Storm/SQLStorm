
WITH RECURSIVE Address_CTE AS (
    SELECT ca_address_sk, 
           CONCAT(ca_street_number, ' ', ca_street_name, ' ', ca_street_type) AS Full_Address,
           ca_city, 
           ca_state, 
           1 AS Level
    FROM customer_address
    WHERE ca_state = 'CA'
    
    UNION ALL
    
    SELECT a.ca_address_sk, 
           CONCAT(a.ca_street_number, ' ', a.ca_street_name, ' ', a.ca_street_type) AS Full_Address,
           a.ca_city, 
           a.ca_state, 
           Level + 1
    FROM customer_address a
    JOIN Address_CTE cte ON a.ca_city = cte.ca_city AND a.ca_state = cte.ca_state
    WHERE a.ca_address_sk != cte.ca_address_sk
      AND Level < 5
), Customer_Demographics AS (
    SELECT cd_gender, 
           cd_marital_status, 
           cd_purchase_estimate, 
           cd_credit_rating, 
           cd_dep_count,
           ROW_NUMBER() OVER (PARTITION BY cd_gender ORDER BY cd_purchase_estimate DESC) AS rank
    FROM customer_demographics
    WHERE cd_purchase_estimate IS NOT NULL
), Sales_Metrics AS (
    SELECT ws.bill_customer_sk, 
           SUM(ws.net_profit) AS Total_Profit, 
           COUNT(DISTINCT ws.order_number) AS Total_Orders
    FROM web_sales ws 
    JOIN date_dim d ON ws.sold_date_sk = d.date_sk
    WHERE d.year = 2022 AND d.dow IN (6, 7) 
    GROUP BY ws.bill_customer_sk
), Final_Analysis AS (
    SELECT c.c_customer_id, 
           c.c_first_name, 
           c.c_last_name, 
           d.Full_Address,
           CASE 
               WHEN cd.rank = 1 THEN 'Top Spender'
               WHEN cd.rank <= 5 THEN 'High Spender'
               ELSE 'Regular Spender' 
           END AS Spending_Category,
           sm.Total_Profit,
           sm.Total_Orders
    FROM customer c
    JOIN Address_CTE d ON c.c_current_addr_sk = d.ca_address_sk
    LEFT JOIN Customer_Demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN Sales_Metrics sm ON c.c_customer_sk = sm.bill_customer_sk
)
SELECT FA.c_customer_id, 
       FA.c_first_name, 
       FA.c_last_name, 
       FA.Full_Address,
       COALESCE(FA.Spending_Category, 'No Data') AS Spending_Category,
       COALESCE(FA.Total_Profit, 0) AS Total_Profit,
       COALESCE(FA.Total_Orders, 0) AS Total_Orders
FROM Final_Analysis FA
ORDER BY FA.Total_Profit DESC, FA.c_last_name ASC
LIMIT 100;
