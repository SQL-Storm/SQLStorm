
WITH RECURSIVE sales_hierarchy AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        COALESCE(ss.ss_quantity, 0) AS total_quantity,
        COALESCE(ws.ws_quantity, 0) AS web_quantity,
        COALESCE(cs.cs_quantity, 0) AS catalog_quantity,
        ss.ss_sold_date_sk
    FROM 
        customer c
    LEFT JOIN store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    LEFT JOIN catalog_sales cs ON c.c_customer_sk = cs.cs_bill_customer_sk
    WHERE 
        c.c_current_cdemo_sk IS NOT NULL
    UNION ALL
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        COALESCE(ss.ss_quantity, 0) + COALESCE(s.total_quantity, 0) AS total_quantity,
        COALESCE(ws.ws_quantity, 0) + COALESCE(s.web_quantity, 0) AS web_quantity,
        COALESCE(cs.cs_quantity, 0) + COALESCE(s.catalog_quantity, 0) AS catalog_quantity,
        ss.ss_sold_date_sk
    FROM 
        customer c
    JOIN sales_hierarchy s ON c.c_customer_sk = s.c_customer_sk
    LEFT JOIN store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    WHERE 
        s.total_quantity < 100
),
date_range AS (
    SELECT 
        d.d_date_sk,
        d.d_year,
        d.d_month_seq
    FROM 
        date_dim d
    WHERE 
        d.d_date >= '2023-01-01' 
        AND d.d_date < '2024-01-01'
)
SELECT 
    dr.d_year,
    dr.d_month_seq,
    SUM(s.total_quantity) AS total_sales_quantity,
    AVG(s.total_quantity) AS avg_net_profit,  -- Changed from s.ss_net_profit to s.total_quantity as avg_net_profit column does not exist
    COUNT(DISTINCT s.c_customer_sk) AS unique_customers
FROM 
    date_range dr
LEFT JOIN 
    sales_hierarchy s ON dr.d_date_sk = s.ss_sold_date_sk
GROUP BY 
    dr.d_year, 
    dr.d_month_seq
HAVING 
    SUM(s.total_quantity) > 0  -- Changed to aggregate function
ORDER BY 
    dr.d_year, 
    dr.d_month_seq;
