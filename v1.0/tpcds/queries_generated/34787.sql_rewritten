WITH RECURSIVE Date_Hierarchy AS (
    SELECT d_date_sk, d_date, d_year, d_quarter_seq, 1 AS lvl
    FROM date_dim
    WHERE d_date = cast('2002-10-01' as date)
    UNION ALL
    SELECT d.d_date_sk, d.d_date, d.d_year, d.d_quarter_seq, lvl + 1
    FROM date_dim d
    INNER JOIN Date_Hierarchy dh ON d.d_date_sk = dh.d_date_sk - 1
    WHERE dh.lvl < 10
), Customer_Sales AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        SUM(ws.ws_ext_sales_price) AS total_sales,
        COUNT(DISTINCT ws.ws_order_number) AS order_count
    FROM customer c
    LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY c.c_customer_sk, c.c_first_name, c.c_last_name
), Best_Customers AS (
    SELECT c.*, ROW_NUMBER() OVER (ORDER BY total_sales DESC) AS rank
    FROM Customer_Sales c
), Sales_Analysis AS (
    SELECT
        b.c_first_name,
        b.c_last_name,
        b.total_sales,
        dh.d_quarter_seq,
        b.rank
    FROM Best_Customers b
    CROSS JOIN Date_Hierarchy dh
    WHERE b.rank <= 10 AND (dh.d_quarter_seq = 2 OR dh.d_quarter_seq = 4)
)
SELECT 
    s.c_first_name || ' ' || s.c_last_name AS full_name,
    s.total_sales,
    'Quarter ' || s.d_quarter_seq AS sales_quarter,
    CASE 
        WHEN s.total_sales IS NULL THEN 'No Sales'
        ELSE TO_CHAR(s.total_sales, 'FM$999,999.00')
    END AS formatted_sales,
    COALESCE((SELECT COUNT(*) FROM web_returns wr WHERE wr.wr_returning_customer_sk = s.c_customer_sk), 0) AS return_count
FROM Sales_Analysis s
LEFT JOIN customer_demographics cd ON cd.cd_demo_sk = (SELECT c.c_current_cdemo_sk FROM customer c WHERE c.c_customer_sk = s.c_customer_sk)
WHERE cd.cd_gender = 'M' OR cd.cd_marital_status = 'S'
ORDER BY s.total_sales DESC;