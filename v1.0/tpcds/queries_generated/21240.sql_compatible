
WITH RankedSales AS (
    SELECT 
        ws.bill_customer_sk, 
        ws.ship_date_sk,
        SUM(ws.quantity) AS total_quantity,
        RANK() OVER (PARTITION BY ws.bill_customer_sk ORDER BY SUM(ws.quantity) DESC) AS rank_quantity
    FROM 
        web_sales ws
    WHERE 
        ws.ship_date_sk >= (SELECT MAX(d_date_sk) - 365 FROM date_dim)
    GROUP BY 
        ws.bill_customer_sk, 
        ws.ship_date_sk
),
CustomerReturns AS (
    SELECT 
        wr.returning_customer_sk,
        SUM(wr.return_quantity) AS total_return_quantity,
        SUM(wr.return_amt) AS total_return_amt,
        COUNT(DISTINCT wr.order_number) AS total_returns
    FROM 
        web_returns wr
    WHERE 
        wr.returned_date_sk IN (SELECT d_date_sk FROM date_dim WHERE d_year = 2023)
    GROUP BY 
        wr.returning_customer_sk
),
CustomerDemographics AS (
    SELECT 
        cd.cd_demo_sk,
        cd.cd_gender AS gender,
        cd.cd_marital_status AS marital_status,
        cd.cd_purchase_estimate,
        CASE 
            WHEN cd.cd_purchase_estimate > 5000 THEN 'High'
            WHEN cd.cd_purchase_estimate BETWEEN 1000 AND 5000 THEN 'Medium'
            ELSE 'Low'
        END AS purchase_segment
    FROM 
        customer_demographics cd
)
SELECT 
    ca.ca_address_id,
    cd.gender,
    cd.marital_status,
    cc.total_quantity AS total_sold_items,
    cr.total_return_quantity,
    cr.total_return_amt,
    cd.purchase_segment
FROM 
    customer_address ca
LEFT JOIN 
    customer c ON ca.ca_address_sk = c.c_current_addr_sk
LEFT JOIN 
    RankedSales cc ON c.c_customer_sk = cc.bill_customer_sk AND cc.rank_quantity = 1
LEFT JOIN 
    CustomerReturns cr ON c.c_customer_sk = cr.returning_customer_sk
LEFT JOIN
    CustomerDemographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
WHERE 
    ca.ca_country IS NOT NULL
    AND (cr.total_return_quantity IS NULL OR cr.total_return_quantity < 5)
ORDER BY 
    total_sold_items DESC, 
    purchase_segment ASC
LIMIT 50;
