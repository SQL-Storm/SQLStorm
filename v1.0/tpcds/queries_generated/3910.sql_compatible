
WITH RankedSales AS (
    SELECT 
        w.warehouse_id,
        i.i_item_id,
        SUM(ws.ws_quantity) AS total_quantity,
        SUM(ws.ws_net_paid) AS total_sales,
        ROW_NUMBER() OVER (PARTITION BY w.warehouse_id ORDER BY SUM(ws.ws_net_paid) DESC) AS sales_rank
    FROM 
        web_sales ws
    JOIN 
        warehouse w ON ws.ws_warehouse_sk = w.w_warehouse_sk
    JOIN 
        item i ON ws.ws_item_sk = i.i_item_sk
    WHERE 
        ws.ws_sold_date_sk BETWEEN (SELECT MIN(d_date_sk) FROM date_dim) AND (SELECT MAX(d_date_sk) FROM date_dim)
    GROUP BY 
        w.warehouse_id, i.i_item_id
),
TopSales AS (
    SELECT 
        warehouse_id,
        i_item_id,
        total_quantity,
        total_sales
    FROM 
        RankedSales
    WHERE 
        sales_rank <= 10
)
SELECT 
    c.c_customer_id,
    cd.cd_gender,
    cd.cd_marital_status,
    ts.total_sales,
    ts.total_quantity,
    CASE 
        WHEN ts.total_sales > 10000 THEN 'High Value'
        WHEN ts.total_sales IS NULL THEN 'No Sales'
        ELSE 'Other'
    END AS customer_value_category
FROM 
    TopSales ts
LEFT JOIN 
    customer c ON ts.total_quantity = (SELECT MAX(ts2.total_quantity) FROM TopSales ts2 WHERE ts2.warehouse_id = ts.warehouse_id)
LEFT JOIN 
    customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
WHERE 
    cd.cd_gender = 'F' 
    AND cd.cd_marital_status IN ('M', 'S')
ORDER BY 
    ts.total_sales DESC
FETCH FIRST 100 ROWS ONLY;
