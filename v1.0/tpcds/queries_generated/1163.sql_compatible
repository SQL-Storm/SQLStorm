
WITH ranked_sales AS (
    SELECT 
        ws.web_site_id,
        ws.ws_order_number,
        ws.ws_sales_price,
        ws.ws_quantity,
        RANK() OVER (PARTITION BY ws.web_site_id ORDER BY ws.ws_net_profit DESC) AS rank_sales
    FROM 
        web_sales ws
    INNER JOIN 
        web_site w ON ws.ws_web_site_sk = w.web_site_sk
    WHERE 
        ws.ws_sold_date_sk >= (SELECT MAX(d_date_sk) - 30 FROM date_dim)
),
customer_metrics AS (
    SELECT 
        cd.cd_demo_sk,
        COUNT(DISTINCT c.c_customer_sk) AS total_customers,
        AVG(cd.cd_purchase_estimate) AS avg_purchase_estimate,
        SUM(CASE WHEN cd.cd_gender = 'F' THEN 1 ELSE 0 END) AS female_count,
        SUM(CASE WHEN cd.cd_gender = 'M' THEN 1 ELSE 0 END) AS male_count
    FROM 
        customer_demographics cd
    LEFT JOIN 
        customer c ON cd.cd_demo_sk = c.c_current_cdemo_sk
    GROUP BY 
        cd.cd_demo_sk
),
sales_summary AS (
    SELECT 
        rs.rank_sales,
        cm.total_customers,
        cm.avg_purchase_estimate,
        SUM(rs.ws_sales_price * rs.ws_quantity) AS total_sales_value,
        COUNT(DISTINCT rs.ws_order_number) AS total_orders
    FROM 
        ranked_sales rs
    JOIN 
        customer_metrics cm ON rs.web_site_id = cm.cd_demo_sk
    GROUP BY 
        rs.rank_sales, cm.total_customers, cm.avg_purchase_estimate
)
SELECT 
    ss.rank_sales,
    ss.total_customers,
    ss.avg_purchase_estimate,
    ss.total_sales_value,
    ss.total_orders,
    (CASE 
        WHEN ss.total_sales_value > 10000 THEN 'High Value'
        WHEN ss.total_sales_value BETWEEN 5000 AND 10000 THEN 'Medium Value'
        ELSE 'Low Value' 
    END) AS sales_category
FROM 
    sales_summary ss
ORDER BY 
    ss.rank_sales ASC, ss.total_sales_value DESC
LIMIT 10;
