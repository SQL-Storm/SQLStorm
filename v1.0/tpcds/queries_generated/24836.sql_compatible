
WITH RankedSales AS (
    SELECT 
        ws.web_site_sk,
        ws.ws_sold_date_sk,
        ws.ws_item_sk,
        ws.ws_sales_price,
        SUM(ws.ws_sales_price) OVER (PARTITION BY ws.web_site_sk ORDER BY ws.ws_sold_date_sk) AS cumulative_sales,
        ROW_NUMBER() OVER (PARTITION BY ws.web_site_sk ORDER BY ws.ws_sales_price DESC) AS sales_rank
    FROM 
        web_sales ws
    JOIN 
        date_dim dd ON ws.ws_sold_date_sk = dd.d_date_sk
    WHERE 
        dd.d_year >= 2021 AND dd.d_year <= 2023
),
FilteredCustomer AS (
    SELECT 
        c.c_customer_sk,
        cd.cd_gender,
        cd.cd_marital_status,
        CASE 
            WHEN cd.cd_purchase_estimate > 1000 THEN 'High Value'
            WHEN cd.cd_purchase_estimate BETWEEN 500 AND 1000 THEN 'Medium Value'
            ELSE 'Low Value'
        END AS customer_value
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    WHERE 
        cd.cd_credit_rating IS NOT NULL
), 
ItemSales AS (
    SELECT 
        is.item_sk,
        is.total_sales,
        AVG(is.total_sales) OVER (PARTITION BY is.item_sk) AS avg_item_sales
    FROM (
        SELECT 
            ws.ws_item_sk AS item_sk,
            SUM(ws.ws_quantity * ws.ws_sales_price) AS total_sales
        FROM 
            web_sales ws
        GROUP BY 
            ws.ws_item_sk
    ) is
)
SELECT 
    ca.ca_city,
    rc.cumulative_sales,
    f.c_customer_sk,
    f.cd_gender,
    f.customer_value,
    i.item_sk,
    i.avg_item_sales,
    CASE 
        WHEN rc.cumulative_sales > 5000 THEN 'Top Performer'
        ELSE 'Regular Performer'
    END AS performance_category
FROM 
    RankedSales rc
LEFT JOIN 
    FilteredCustomer f ON rc.web_site_sk IN (
        SELECT DISTINCT ws.web_site_sk 
        FROM web_sales ws 
        WHERE ws.ws_item_sk IN (
            SELECT is.item_sk 
            FROM ItemSales is 
            WHERE is.avg_item_sales = 
                (SELECT MAX(avg_item_sales) FROM ItemSales)
        )
    )
JOIN 
    inventory iv ON rc.ws_item_sk = iv.inv_item_sk
JOIN 
    customer_address ca ON f.c_customer_sk = ca.ca_address_sk
WHERE 
    ca.ca_state != 'NV' 
    AND (rc.cumulative_sales IS NOT NULL OR f.cd_marital_status = 'M')
GROUP BY 
    ca.ca_city, rc.cumulative_sales, f.c_customer_sk, f.cd_gender, f.customer_value, i.item_sk, i.avg_item_sales
ORDER BY 
    ca.ca_city, rc.cumulative_sales DESC
LIMIT 100;
