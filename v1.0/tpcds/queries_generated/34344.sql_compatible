
WITH RECURSIVE item_hierarchy AS (
    SELECT i_item_sk, i_item_id, i_product_name, i_category_id, 
           i_current_price, 1 AS level
    FROM item
    WHERE i_item_sk BETWEEN 1 AND 100 
    UNION ALL
    SELECT i.i_item_sk, i.i_item_id, i.i_product_name, i.i_category_id,
           i.i_current_price, ih.level + 1
    FROM item_hierarchy ih
    JOIN item i ON ih.i_category_id = i.i_category_id
    WHERE i.i_item_sk > ih.i_item_sk
),
customer_sales AS (
    SELECT c.c_customer_sk, SUM(ws.ws_net_paid) AS total_sales, 
           COUNT(DISTINCT ws.ws_order_number) AS order_count
    FROM customer c
    JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    WHERE ws.ws_sold_date_sk = (SELECT MAX(ws2.ws_sold_date_sk) 
                                 FROM web_sales ws2)
    GROUP BY c.c_customer_sk
),
sales_summary AS (
    SELECT cs.c_customer_sk, cs.total_sales, cs.order_count,
           CASE 
               WHEN cs.total_sales IS NULL THEN 'No Sales'
               WHEN cs.total_sales < 100 THEN 'Low Sales'
               WHEN cs.total_sales BETWEEN 100 AND 500 THEN 'Medium Sales'
               ELSE 'High Sales'
           END AS sales_band
    FROM customer_sales cs
)
SELECT c.c_customer_id, c.c_first_name, c.c_last_name,
       ss.total_sales, ss.order_count, ss.sales_band, 
       COUNT(DISTINCT ih.i_item_id) AS items_in_category
FROM sales_summary ss
JOIN customer c ON ss.c_customer_sk = c.c_customer_sk
LEFT JOIN item_hierarchy ih ON ih.i_item_id IN (
    SELECT i.i_item_id FROM item i WHERE i.i_item_sk = ANY (
        SELECT ws.ws_item_sk 
        FROM web_sales ws 
        WHERE ws.ws_bill_customer_sk = c.c_customer_sk
    )
)
GROUP BY c.c_customer_id, c.c_first_name, c.c_last_name, 
         ss.total_sales, ss.order_count, ss.sales_band
HAVING COALESCE(ss.total_sales, 0) > 0
ORDER BY ss.total_sales DESC;
