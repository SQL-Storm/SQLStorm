
WITH sales_data AS (
    SELECT 
        ws.ws_sold_date_sk,
        ws.ws_item_sk,
        SUM(ws.ws_quantity) AS total_quantity,
        SUM(ws.ws_net_paid) AS total_sales
    FROM 
        web_sales ws
    WHERE 
        ws.ws_sold_date_sk BETWEEN 2450000 AND 2450599
    GROUP BY 
        ws.ws_sold_date_sk, ws.ws_item_sk
),
inventory_data AS (
    SELECT 
        inv.inv_item_sk,
        SUM(inv.inv_quantity_on_hand) AS total_inventory
    FROM 
        inventory inv
    GROUP BY 
        inv.inv_item_sk
),
customer_data AS (
    SELECT 
        c.c_customer_sk,
        cd.cd_gender,
        cd.cd_income_band_sk
    FROM 
        customer c
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
),
return_data AS (
    SELECT 
        sr_item_sk,
        SUM(sr_return_quantity) AS total_returned_quantity,
        SUM(sr_return_amt) AS total_returned_amount
    FROM 
        store_returns 
    GROUP BY 
        sr_item_sk
),
final_report AS (
    SELECT 
        c.c_customer_sk,
        cd.cd_gender,
        ib.ib_lower_bound,
        ib.ib_upper_bound,
        COALESCE(sd.total_quantity, 0) AS sold_quantity,
        COALESCE(sd.total_sales, 0) AS total_sales,
        COALESCE(id.total_inventory, 0) AS on_hand_inventory,
        COALESCE(rd.total_returned_quantity, 0) AS returned_quantity,
        COALESCE(rd.total_returned_amount, 0) AS returned_amount
    FROM 
        customer_data c
    JOIN 
        income_band ib ON c.cd_income_band_sk = ib.ib_income_band_sk
    LEFT JOIN 
        sales_data sd ON c.c_customer_sk = sd.ws_item_sk
    LEFT JOIN 
        inventory_data id ON sd.ws_item_sk = id.inv_item_sk
    LEFT JOIN 
        return_data rd ON sd.ws_item_sk = rd.sr_item_sk
)
SELECT 
    f.c_customer_sk,
    f.cd_gender,
    f.ib_lower_bound,
    f.ib_upper_bound,
    f.sold_quantity,
    f.total_sales,
    f.on_hand_inventory,
    f.returned_quantity,
    f.returned_amount
FROM 
    final_report f
WHERE 
    (f.sold_quantity > 100 OR f.returned_quantity > 50)
    AND (f.returned_amount IS NULL OR f.returned_amount < 500)
ORDER BY 
    f.total_sales DESC
FETCH FIRST 100 ROWS ONLY;
