
WITH FilteredAddresses AS (
    SELECT 
        ca_address_sk, 
        CONCAT(ca_street_number, ' ', ca_street_name, ' ', ca_street_type) AS full_address,
        ca_city,
        ca_state,
        ca_zip
    FROM 
        customer_address
    WHERE 
        ca_city LIKE '%ville%'
),
CustomerStats AS (
    SELECT
        c.c_customer_sk,
        COUNT(DISTINCT cd.cd_demo_sk) AS demo_count,
        SUM(COALESCE(cd.cd_purchase_estimate, 0)) AS total_purchase_estimate,
        STRING_AGG(DISTINCT cd.cd_gender) AS unique_genders,
        STRING_AGG(DISTINCT cd.cd_marital_status) AS unique_marital_status
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    GROUP BY 
        c.c_customer_sk
),
SalesData AS (
    SELECT
        ws.ws_item_sk,
        SUM(ws.ws_quantity) AS total_quantity_sold,
        SUM(ws.ws_ext_sales_price) AS total_sales_value
    FROM 
        web_sales ws
    GROUP BY 
        ws.ws_item_sk
),
InventoryData AS (
    SELECT
        inv.inv_item_sk,
        SUM(inv.inv_quantity_on_hand) AS total_quantity_on_hand
    FROM 
        inventory inv
    GROUP BY 
        inv.inv_item_sk
)
SELECT
    fa.full_address,
    cs.demo_count,
    cs.total_purchase_estimate,
    cs.unique_genders,
    cs.unique_marital_status,
    sd.total_quantity_sold,
    sd.total_sales_value,
    id.total_quantity_on_hand
FROM 
    FilteredAddresses fa
JOIN 
    CustomerStats cs ON cs.c_customer_sk = (SELECT MIN(c_customer_sk) FROM customer WHERE c_current_addr_sk = fa.ca_address_sk)
LEFT JOIN 
    SalesData sd ON sd.ws_item_sk = cs.c_customer_sk
LEFT JOIN 
    InventoryData id ON id.inv_item_sk = cs.c_customer_sk
ORDER BY 
    fa.ca_city,
    fa.ca_state;
