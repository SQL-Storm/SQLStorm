
WITH CustomerInfo AS (
    SELECT 
        c.c_customer_id,
        CONCAT(c.c_first_name, ' ', c.c_last_name) AS full_name,
        cd.cd_gender,
        cd.cd_marital_status,
        ca.ca_city,
        ca.ca_state,
        ca.ca_country,
        CASE 
            WHEN cd.cd_purchase_estimate IS NULL THEN 'Unknown'
            WHEN cd.cd_purchase_estimate < 1000 THEN 'Low'
            WHEN cd.cd_purchase_estimate BETWEEN 1000 AND 5000 THEN 'Medium'
            ELSE 'High'
        END AS purchase_estimate_category
    FROM 
        customer c
    JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    JOIN customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
),
SalesData AS (
    SELECT 
        ws.ws_order_number,
        ws.ws_sales_price,
        ws.ws_net_profit,
        DENSE_RANK() OVER (PARTITION BY ws.ws_bill_cdemo_sk ORDER BY ws.ws_sales_price DESC) AS price_rank
    FROM 
        web_sales ws
)
SELECT 
    ci.full_name, 
    ci.ca_city,
    ci.ca_state,
    ci.purchase_estimate_category,
    SUM(sd.ws_sales_price) AS total_sales_value,
    AVG(sd.ws_net_profit) AS average_net_profit,
    COUNT(sd.ws_order_number) AS total_orders,
    MAX(sd.price_rank) AS highest_price_rank
FROM 
    CustomerInfo ci
LEFT JOIN 
    SalesData sd ON ci.c_customer_id = sd.ws_bill_cdemo_sk
GROUP BY 
    ci.full_name, 
    ci.ca_city,
    ci.ca_state,
    ci.purchase_estimate_category
ORDER BY 
    total_sales_value DESC
FETCH FIRST 100 ROWS ONLY;
