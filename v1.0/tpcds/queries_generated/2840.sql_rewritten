WITH ranked_sales AS (
    SELECT 
        ws.ws_item_sk,
        ws.ws_order_number,
        ws.ws_quantity,
        ws.ws_net_profit,
        ROW_NUMBER() OVER (PARTITION BY ws.ws_item_sk ORDER BY ws.ws_net_profit DESC) as rank_profit
    FROM 
        web_sales ws
    INNER JOIN 
        item i ON ws.ws_item_sk = i.i_item_sk
    WHERE 
        ws.ws_sold_date_sk = (
            SELECT MAX(d_date_sk) FROM date_dim d WHERE d.d_year = 2001
        )
),
top_sales AS (
    SELECT 
        i.i_item_id,
        i.i_item_desc,
        sales.ws_order_number,
        sales.ws_quantity,
        sales.ws_net_profit
    FROM 
        ranked_sales sales
    INNER JOIN 
        item i ON sales.ws_item_sk = i.i_item_sk
    WHERE 
        sales.rank_profit <= 5
),
sales_summary AS (
    SELECT 
        c.c_customer_id,
        c.c_first_name,
        c.c_last_name,
        COUNT(DISTINCT ts.ws_order_number) AS total_orders,
        SUM(ts.ws_net_profit) AS total_profit
    FROM 
        top_sales ts
    INNER JOIN 
        customer c ON c.c_customer_sk = ts.ws_bill_customer_sk
    GROUP BY 
        c.c_customer_id, c.c_first_name, c.c_last_name
)
SELECT 
    ss.c_customer_id,
    ss.c_first_name,
    ss.c_last_name,
    ss.total_orders,
    ss.total_profit,
    CASE 
        WHEN ss.total_profit > 1000 THEN 'High Profit'
        WHEN ss.total_profit BETWEEN 500 AND 1000 THEN 'Medium Profit'
        ELSE 'Low Profit'
    END AS profit_category
FROM 
    sales_summary ss
ORDER BY 
    ss.total_profit DESC;