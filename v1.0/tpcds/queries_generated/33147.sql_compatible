
WITH RECURSIVE Sales_CTE AS (
    SELECT 
        ws_item_sk,
        SUM(ws_net_profit) AS total_profit,
        1 AS level
    FROM 
        web_sales
    WHERE 
        ws_sold_date_sk >= (SELECT MIN(d_date_sk) FROM date_dim WHERE d_year = 2023)
    GROUP BY 
        ws_item_sk
    UNION ALL
    SELECT 
        cs.cs_item_sk,
        sc.total_profit + SUM(cs.cs_net_profit) AS total_profit,
        level + 1
    FROM 
        Sales_CTE sc
    JOIN 
        catalog_sales cs ON cs.cs_item_sk = sc.ws_item_sk
    GROUP BY 
        cs.cs_item_sk, sc.total_profit, level
),
Item_Sales AS (
    SELECT 
        ws.ws_item_sk,
        COALESCE(SUM(ws.ws_quantity), 0) AS web_sales_quantity,
        COALESCE(SUM(cs.cs_quantity), 0) AS catalog_sales_quantity,
        COALESCE(SUM(ss.ss_quantity), 0) AS store_sales_quantity
    FROM 
        web_sales ws
    FULL OUTER JOIN 
        catalog_sales cs ON ws.ws_item_sk = cs.cs_item_sk
    FULL OUTER JOIN 
        store_sales ss ON ws.ws_item_sk = ss.ss_item_sk
    GROUP BY 
        ws.ws_item_sk
),
Max_Sales AS (
    SELECT 
        ws_item_sk,
        MAX(ws_net_paid) AS max_net_paid
    FROM 
        web_sales
    GROUP BY 
        ws_item_sk
),
Final_Sales AS (
    SELECT 
        i.ws_item_sk,
        i.web_sales_quantity,
        i.catalog_sales_quantity,
        i.store_sales_quantity,
        COALESCE(ms.max_net_paid, 0) AS max_net_paid
    FROM 
        Item_Sales i
    LEFT JOIN 
        Max_Sales ms ON i.ws_item_sk = ms.ws_item_sk
)
SELECT 
    f.ws_item_sk,
    f.web_sales_quantity,
    f.catalog_sales_quantity,
    f.store_sales_quantity,
    f.max_net_paid,
    CASE 
        WHEN f.max_net_paid IS NULL THEN 'No Sales' 
        WHEN f.max_net_paid > 1000 THEN 'High Sales'
        ELSE 'Average Sales'
    END AS sales_category,
    ROW_NUMBER() OVER (ORDER BY f.max_net_paid DESC) AS sales_rank
FROM 
    Final_Sales f
WHERE 
    (f.web_sales_quantity + f.catalog_sales_quantity + f.store_sales_quantity) > 0
    AND f.max_net_paid IS NOT NULL
ORDER BY 
    f.max_net_paid DESC
FETCH FIRST 10 ROWS ONLY;
