
WITH RECURSIVE sales_hierarchy AS (
    SELECT 
        c.c_customer_sk,
        c.c_customer_id,
        c.c_first_name,
        c.c_last_name,
        0 AS level,
        SUM(ws.ws_net_profit) AS total_profit
    FROM 
        customer AS c
    JOIN 
        web_sales AS ws ON c.c_customer_sk = ws.ws_ship_customer_sk
    GROUP BY 
        c.c_customer_sk, c.c_customer_id, c.c_first_name, c.c_last_name
    UNION ALL
    SELECT 
        c.c_customer_sk,
        c.c_customer_id,
        c.c_first_name,
        c.c_last_name,
        sh.level + 1,
        SUM(ws.ws_net_profit) AS total_profit
    FROM 
        customer AS c
    JOIN 
        web_sales AS ws ON c.c_customer_sk = ws.ws_ship_customer_sk
    JOIN 
        sales_hierarchy AS sh ON c.c_customer_sk = sh.c_customer_sk
    GROUP BY 
        c.c_customer_sk, c.c_customer_id, c.c_first_name, c.c_last_name, sh.level
),
customer_demographics AS (
    SELECT 
        cd.cd_demo_sk,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_education_status,
        cd.cd_purchase_estimate
    FROM 
        customer_demographics AS cd
    WHERE 
        cd.cd_gender = 'F'
),
final_sales AS (
    SELECT 
        sh.c_customer_id,
        sh.c_first_name,
        sh.c_last_name,
        sh.total_profit,
        COALESCE(cd.cd_purchase_estimate, 0) AS purchase_estimate
    FROM 
        sales_hierarchy AS sh
    LEFT JOIN 
        customer_demographics AS cd ON sh.c_customer_sk = cd.cd_demo_sk
)
SELECT 
    f.c_customer_id,
    f.c_first_name,
    f.c_last_name,
    f.total_profit,
    f.purchase_estimate,
    CASE 
        WHEN f.total_profit > f.purchase_estimate THEN 'Above Average'
        WHEN f.total_profit IS NULL THEN 'No Sales'
        ELSE 'Below Average' 
    END AS sales_comparison
FROM 
    final_sales AS f
WHERE 
    f.total_profit IS NOT NULL
ORDER BY 
    f.total_profit DESC
FETCH FIRST 10 ROWS ONLY;
