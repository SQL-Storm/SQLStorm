
WITH RECURSIVE IncomeStats AS (
    SELECT ib_income_band_sk, ib_lower_bound, ib_upper_bound, 0 AS RecordCount
    FROM income_band
    WHERE ib_income_band_sk = 1
    UNION ALL
    SELECT ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound, COALESCE(is.RecordCount, 0) + COUNT(c.c_customer_sk) AS RecordCount
    FROM income_band ib
    LEFT JOIN customer c ON c.c_current_cdemo_sk = ib.ib_income_band_sk
    JOIN IncomeStats is ON ib.ib_income_band_sk = is.ib_income_band_sk + 1
    GROUP BY ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound
),
StoreSales AS (
    SELECT ss.ss_store_sk, SUM(ss.ss_net_profit) AS TotalProfit
    FROM store_sales ss
    GROUP BY ss.ss_store_sk
),
CustomerReturns AS (
    SELECT COALESCE(SUM(sr_return_amt_inc_tax), 0) AS TotalReturns, sr_store_sk
    FROM store_returns
    GROUP BY sr_store_sk
),
SalesSummary AS (
    SELECT s.s_store_sk, s.s_store_name, ss.TotalProfit, COALESCE(cr.TotalReturns, 0) AS TotalReturns,
           (ss.TotalProfit - COALESCE(cr.TotalReturns, 0)) AS NetProfit
    FROM store s
    LEFT JOIN StoreSales ss ON s.s_store_sk = ss.ss_store_sk
    LEFT JOIN CustomerReturns cr ON s.s_store_sk = cr.sr_store_sk
)
SELECT s.*, 
       CASE 
           WHEN s.NetProfit > 0 THEN 'Profitable' 
           ELSE 'Not Profitable' 
       END AS ProfitabilityStatus,
       ROW_NUMBER() OVER (PARTITION BY 
           CASE 
               WHEN s.NetProfit > 0 THEN 'Profitable' 
               ELSE 'Not Profitable' 
           END ORDER BY s.NetProfit DESC) AS Rank
FROM SalesSummary s
JOIN IncomeStats i ON i.ib_income_band_sk = (
    SELECT hd_income_band_sk FROM household_demographics 
    WHERE hd_demo_sk = s.c_current_hdemo_sk)
WHERE s.TotalProfit > i.ib_lower_bound
  AND s.TotalProfit < i.ib_upper_bound
ORDER BY s.NetProfit DESC;
