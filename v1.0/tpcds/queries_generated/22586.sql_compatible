
WITH RankedReturns AS (
    SELECT 
        sr_customer_sk,
        COUNT(DISTINCT sr_ticket_number) AS total_returns,
        SUM(sr_return_quantity) AS total_returned_quantity
    FROM store_returns
    WHERE sr_returned_date_sk >= (SELECT MAX(d_date_sk) - 30 FROM date_dim WHERE d_year = 2023)
    GROUP BY sr_customer_sk
),
CustomerDemographics AS (
    SELECT 
        cd_demo_sk,
        cd_gender,
        cd_marital_status,
        MAX(cd_purchase_estimate) AS max_purchase_estimate
    FROM customer_demographics
    GROUP BY cd_demo_sk, cd_gender, cd_marital_status
),
ReturnDemographics AS (
    SELECT 
        r.returning_customer_sk,
        cd.cd_demo_sk,
        cd.cd_gender,
        cd.cd_marital_status,
        COALESCE(rd.total_returns, 0) AS total_returns,
        COALESCE(rd.total_returned_quantity, 0) AS total_returned_quantity,
        ROW_NUMBER() OVER (PARTITION BY cd.cd_demo_sk ORDER BY COALESCE(rd.total_returns, 0) DESC) AS rnk
    FROM customer AS r
    LEFT JOIN RankedReturns rd ON r.c_customer_sk = rd.sr_customer_sk
    LEFT JOIN CustomerDemographics cd ON r.c_current_cdemo_sk = cd.cd_demo_sk
)
SELECT 
    cd_gender,
    cd_marital_status,
    SUM(total_returns) AS total_returns,
    SUM(total_returned_quantity) AS total_returned_quantity,
    COUNT(*) AS customer_count,
    AVG(total_returns) AS avg_returns_per_customer,
    SUM(CASE WHEN total_returns > 0 THEN 1 ELSE 0 END) AS customers_with_returns
FROM ReturnDemographics
WHERE rnk <= 5
GROUP BY cd_gender, cd_marital_status
HAVING SUM(total_returns) > 0
ORDER BY total_returns DESC, customer_count DESC;
