
WITH RankedSales AS (
    SELECT 
        cs_item_sk,
        cs_order_number,
        cs_net_profit,
        RANK() OVER (PARTITION BY cs_item_sk ORDER BY cs_net_profit DESC) AS profit_rank
    FROM catalog_sales
    WHERE cs_net_profit > 1000
), 
HighValueCustomers AS (
    SELECT 
        c_customer_sk,
        SUM(ws_net_paid) AS total_spent
    FROM customer c
    JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY c_customer_sk
    HAVING SUM(ws_net_paid) > 5000
), 
LastReturnedItems AS (
    SELECT 
        wr_item_sk,
        MAX(wr_returned_date_sk) AS last_returned_date,
        COUNT(*) AS return_count
    FROM web_returns
    GROUP BY wr_item_sk
    HAVING COUNT(*) > 2
), 
CustomerProfiles AS (
    SELECT 
        cd.cd_gender,
        COUNT(DISTINCT c.c_customer_id) AS customer_count,
        AVG(cd.cd_purchase_estimate) AS avg_purchase_estimate
    FROM customer c
    LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    WHERE cd.cd_marital_status IS NOT NULL
    GROUP BY cd.cd_gender
), 
ItemPromo AS (
    SELECT 
        p.p_promo_id,
        COUNT(*) AS usage_count,
        SUM(ws.ws_net_profit) AS total_profit
    FROM promotion p
    JOIN web_sales ws ON p.p_promo_sk = ws.ws_promo_sk
    WHERE p.p_discount_active = 'Y'
    GROUP BY p.p_promo_id
), 
WarehouseStock AS (
    SELECT 
        inv.inv_item_sk,
        SUM(inv.inv_quantity_on_hand) AS total_quantity
    FROM inventory inv
    JOIN warehouse w ON inv.inv_warehouse_sk = w.w_warehouse_sk
    GROUP BY inv.inv_item_sk
    HAVING SUM(inv.inv_quantity_on_hand) < 10
)
SELECT 
    c.c_first_name,
    c.c_last_name,
    cp.cd_gender,
    hvc.total_spent,
    (SELECT COUNT(*) FROM RankedSales rs WHERE rs.cs_item_sk IN 
        (SELECT ws.ws_item_sk FROM web_sales ws WHERE ws.ws_bill_customer_sk = c.c_customer_sk)
    ) AS item_sales_count,
    (SELECT COUNT(DISTINCT wb.w_warehouse_id) FROM WarehouseStock wb WHERE wb.inv_item_sk IN 
        (SELECT ws.ws_item_sk FROM web_sales ws WHERE ws.ws_bill_customer_sk = c.c_customer_sk)
    ) AS low_stock_count,
    p.p_promo_id
FROM customer c
LEFT JOIN CustomerProfiles cp ON c.c_current_cdemo_sk = cp.cd_gender
LEFT JOIN HighValueCustomers hvc ON c.c_customer_sk = hvc.c_customer_sk
LEFT JOIN ItemPromo p ON c.c_customer_sk IN 
    (SELECT DISTINCT wr_refunded_customer_sk FROM web_returns w WHERE w.wr_returned_date_sk IN 
        (SELECT lr.last_returned_date FROM LastReturnedItems lr)
    )
WHERE 
    (hvc.total_spent IS NOT NULL OR cp.customer_count IS NULL)
    AND (cp.avg_purchase_estimate BETWEEN 1000 AND 5000 OR hvc.total_spent > 10000)
    AND NOT EXISTS (SELECT 1 FROM store_returns sr WHERE sr.sr_customer_sk = c.c_customer_sk)
ORDER BY c.c_first_name, c.c_last_name;
