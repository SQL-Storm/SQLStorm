WITH RECURSIVE customer_hierarchy AS (
    SELECT c.c_customer_sk,
           c.c_first_name,
           c.c_last_name,
           c.c_preferred_cust_flag,
           CAST(NULL AS INTEGER) AS parent_customer_sk,
           0 AS level
    FROM customer c
    WHERE c.c_preferred_cust_flag = 'Y'

    UNION ALL

    SELECT c.c_customer_sk,
           c.c_first_name,
           c.c_last_name,
           c.c_preferred_cust_flag,
           ch.c_customer_sk AS parent_customer_sk,
           ch.level + 1
    FROM customer c
    JOIN customer_hierarchy ch ON c.c_current_cdemo_sk = ch.c_customer_sk
)
SELECT ca.ca_city,
       COUNT(DISTINCT ch.c_customer_sk) AS customer_count,
       AVG(cd.cd_purchase_estimate) AS avg_purchase_estimate,
       SUM(ws.ws_net_paid) AS total_net_paid,
       MAX(cd.cd_dep_count) AS max_dependents,
       CASE 
           WHEN AVG(cd.cd_dep_count) IS NULL THEN 'No Dependents'
           WHEN AVG(cd.cd_dep_count) < 1 THEN 'Few Dependents'
           ELSE 'Many Dependents'
       END AS dependent_status
FROM customer_hierarchy ch
LEFT JOIN customer_address ca ON ch.c_customer_sk = ca.ca_address_sk
LEFT JOIN customer_demographics cd ON ch.c_customer_sk = cd.cd_demo_sk
LEFT JOIN web_sales ws ON ch.c_customer_sk = ws.ws_bill_customer_sk
GROUP BY ca.ca_city
HAVING COUNT(DISTINCT ch.c_customer_sk) > 10
   OR MAX(cd.cd_buy_potential) IS NULL
ORDER BY total_net_paid DESC, dependent_status
FETCH FIRST 10 ROWS ONLY;