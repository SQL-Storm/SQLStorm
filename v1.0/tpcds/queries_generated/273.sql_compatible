
WITH RankedSales AS (
    SELECT 
        ws.bill_customer_sk,
        ws.ship_date_sk,
        ws.sales_price,
        RANK() OVER (PARTITION BY ws.bill_customer_sk ORDER BY ws.sales_price DESC) AS price_rank,
        DENSE_RANK() OVER (PARTITION BY ws.bill_customer_sk ORDER BY ws.ship_date_sk DESC) AS date_rank
    FROM 
        web_sales ws
    WHERE 
        ws.ship_date_sk BETWEEN 10000 AND 20000
),
CustomerReturns AS (
    SELECT 
        wr.returning_customer_sk,
        SUM(wr.return_amt) AS total_return_amount,
        COUNT(wr.return_order_number) AS return_count
    FROM 
        web_returns wr
    GROUP BY 
        wr.returning_customer_sk
),
HighValueCustomers AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_income_band_sk,
        ca.ca_city
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    JOIN 
        customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
    WHERE 
        cd.cd_purchase_estimate > 1000 AND cd.cd_credit_rating = 'Excellent'
),
SalesAndReturns AS (
    SELECT 
        r.bill_customer_sk,
        SUM(r.sales_price) AS total_sales,
        COALESCE(rt.total_return_amount, 0) AS total_returns,
        SUM(r.sales_price) - COALESCE(rt.total_return_amount, 0) AS net_profit
    FROM 
        RankedSales r
    LEFT JOIN 
        CustomerReturns rt ON r.bill_customer_sk = rt.returning_customer_sk
    GROUP BY 
        r.bill_customer_sk
)
SELECT 
    hvc.c_first_name,
    hvc.c_last_name,
    hvc.ca_city,
    sar.total_sales,
    sar.total_returns,
    sar.net_profit
FROM 
    HighValueCustomers hvc
JOIN 
    SalesAndReturns sar ON hvc.c_customer_sk = sar.bill_customer_sk
ORDER BY 
    sar.net_profit DESC
FETCH FIRST 10 ROWS ONLY;
