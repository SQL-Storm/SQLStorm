
WITH RECURSIVE sales_summary AS (
    SELECT
        ws_item_sk,
        SUM(ws_quantity) AS total_quantity,
        SUM(ws_net_paid) AS total_sales,
        ROW_NUMBER() OVER (PARTITION BY ws_item_sk ORDER BY SUM(ws_net_paid) DESC) AS sales_rank
    FROM
        web_sales
    GROUP BY
        ws_item_sk
), 
high_value_customers AS (
    SELECT
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        COUNT(ws.ws_order_number) AS order_count,
        SUM(ws.ws_net_paid) AS total_spent
    FROM
        customer c
    JOIN
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    JOIN
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    GROUP BY
        c.c_customer_sk, c.c_first_name, c.c_last_name, cd.cd_gender
    HAVING
        SUM(ws.ws_net_paid) > 1000
), 
store_inventory AS (
    SELECT
        inv.inv_item_sk,
        SUM(inv.inv_quantity_on_hand) AS total_inventory
    FROM
        inventory inv
    GROUP BY
        inv.inv_item_sk
)
SELECT
    hvc.c_customer_sk AS c_customer_id,
    hvc.c_first_name,
    hvc.c_last_name,
    hd.hd_income_band_sk,
    ib.ib_lower_bound,
    ib.ib_upper_bound,
    s.s_store_name,
    ss.total_quantity,
    ss.total_sales,
    COALESCE(si.total_inventory, 0) AS inventory_on_hand,
    CASE 
        WHEN si.total_inventory IS NULL THEN 'Out of Stock'
        WHEN si.total_inventory < 10 THEN 'Low Stock'
        ELSE 'In Stock'
    END AS stock_status
FROM
    high_value_customers hvc
JOIN
    household_demographics hd ON hvc.c_customer_sk = hd.hd_demo_sk
JOIN
    income_band ib ON hd.hd_income_band_sk = ib.ib_income_band_sk
JOIN
    store_sales ss ON hvc.c_customer_sk = ss.ss_customer_sk
JOIN
    store s ON ss.ss_store_sk = s.s_store_sk
LEFT JOIN
    store_inventory si ON ss.ss_item_sk = si.inv_item_sk
WHERE
    hvc.order_count > 5
ORDER BY
    hvc.total_spent DESC, ss.total_sales DESC
FETCH FIRST 10 ROWS ONLY;
