
WITH RECURSIVE customer_hierarchy AS (
    SELECT
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        c.c_email_address,
        0 AS level
    FROM customer c
    WHERE c.c_customer_sk IS NOT NULL

    UNION ALL

    SELECT
        c.c_current_cdemo_sk AS c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        c.c_email_address,
        ch.level + 1
    FROM customer c
    JOIN customer_hierarchy ch ON c.c_customer_sk = ch.c_customer_sk
    WHERE c.c_current_cdemo_sk IS NOT NULL
),
sales_summary AS (
    SELECT
        ws_bill_customer_sk,
        SUM(ws_net_profit) AS total_profit,
        COUNT(ws_order_number) AS total_orders,
        AVG(ws_sales_price) AS avg_item_price
    FROM web_sales
    GROUP BY ws_bill_customer_sk
),
promotion_data AS (
    SELECT
        p.p_promo_id,
        COUNT(ps.p_promo_id) AS promo_uses,
        SUM(ps.ws_sales_price) AS total_promo_sales
    FROM promotion p
    LEFT JOIN web_sales ps ON p.p_promo_sk = ps.ws_promo_sk
    GROUP BY p.p_promo_id
)
SELECT
    ch.c_customer_sk,
    ch.c_first_name,
    ch.c_last_name,
    ch.c_email_address,
    COALESCE(ss.total_profit, 0) AS total_profit,
    COALESCE(ss.total_orders, 0) AS total_orders,
    COALESCE(ss.avg_item_price, 0) AS avg_item_price,
    COALESCE(pd.total_promo_sales, 0) AS total_promo_sales,
    pd.promo_uses
FROM customer_hierarchy ch
LEFT JOIN sales_summary ss ON ch.c_customer_sk = ss.ws_bill_customer_sk
LEFT JOIN promotion_data pd ON pd.promo_uses > 0
WHERE (ch.c_last_name IS NOT NULL AND ch.c_first_name IS NOT NULL)
  AND (ch.c_email_address IS NULL OR ch.c_email_address LIKE '%@example.com')
  AND EXISTS (
      SELECT 1 
      FROM store s
      WHERE s.s_state IN ('CA', 'NY') 
      AND s.s_number_employees > (
          SELECT AVG(s2.s_number_employees)
          FROM store s2
      )
  )
ORDER BY total_profit DESC, total_orders ASC
LIMIT 100;
