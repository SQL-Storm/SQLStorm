
WITH CustomerReturns AS (
    SELECT 
        c.c_customer_id,
        COUNT(sr.ticket_number) AS total_store_returns,
        COUNT(wr.order_number) AS total_web_returns,
        SUM(sr.return_amt + COALESCE(sr.return_tax, 0)) AS total_store_return_amount,
        SUM(wr.return_amt + COALESCE(wr.return_tax, 0)) AS total_web_return_amount
    FROM customer c
    LEFT JOIN store_returns sr ON c.c_customer_sk = sr.sr_customer_sk
    LEFT JOIN web_returns wr ON c.c_customer_sk = wr.wr_returning_customer_sk
    GROUP BY c.c_customer_id
),
ReturnStatistics AS (
    SELECT
        c.c_customer_id AS customer_id,
        RANK() OVER (ORDER BY COALESCE(total_store_returns, 0) + COALESCE(total_web_returns, 0) DESC) AS return_rank,
        total_store_returns,
        total_web_returns,
        total_store_return_amount + total_web_return_amount AS total_return_amount
    FROM CustomerReturns c
),
HighReturnCustomers AS (
    SELECT 
        r.customer_id,
        r.return_rank,
        r.total_return_amount,
        DENSE_RANK() OVER (ORDER BY r.total_return_amount DESC) AS dense_return_rank
    FROM ReturnStatistics r
    WHERE r.total_return_amount > (SELECT AVG(total_return_amount) FROM ReturnStatistics)
),
CustomerDemographics AS (
    SELECT 
        cd.cd_gender,
        cd.cd_marital_status,
        h.hd_income_band_sk AS income_band_sk,
        COUNT(h.hd_demo_sk) AS income_count
    FROM household_demographics h
    JOIN customer_demographics cd ON h.hd_demo_sk = cd.cd_demo_sk
    GROUP BY cd.cd_gender, cd.cd_marital_status, h.hd_income_band_sk
),
FinalReport AS (
    SELECT 
        h.customer_id,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.income_band_sk,
        h.total_return_amount,
        h.return_rank,
        CASE 
            WHEN h.dense_return_rank <= 5 THEN 'Top 5 Returners'
            WHEN h.dense_return_rank <= 10 THEN 'Top 10 Returners'
            ELSE 'Regular Returners' 
        END AS return_category
    FROM HighReturnCustomers h
    JOIN CustomerDemographics cd ON cd.income_band_sk = (
        SELECT ib.ib_income_band_sk 
        FROM income_band ib
        WHERE ib.ib_lower_bound <= h.total_return_amount AND h.total_return_amount < ib.ib_upper_bound
    )
)
SELECT 
    fr.customer_id,
    fr.cd_gender,
    fr.cd_marital_status,
    fr.income_band_sk,
    fr.total_return_amount,
    fr.return_category,
    COUNT(DISTINCT w.web_page_sk) AS pages_visited,
    AVG(COALESCE(rs.return_amt_inc_tax, 0)) AS avg_return_amount,
    CASE 
        WHEN fr.return_category = 'Top 5 Returners' THEN 'High Priority'
        ELSE NULL 
    END AS priority_flag
FROM FinalReport fr
LEFT JOIN web_page w ON fr.customer_id = w.wp_customer_sk
LEFT JOIN web_returns rs ON fr.customer_id = rs.wr_returning_customer_sk
WHERE fr.total_return_amount IS NOT NULL AND fr.return_category IS NOT NULL
GROUP BY 
    fr.customer_id, 
    fr.cd_gender, 
    fr.cd_marital_status, 
    fr.income_band_sk, 
    fr.total_return_amount, 
    fr.return_category
HAVING 
    COUNT(DISTINCT w.web_page_sk) > 0 OR COUNT(w.web_page_sk) > 0
ORDER BY 
    fr.total_return_amount DESC;
