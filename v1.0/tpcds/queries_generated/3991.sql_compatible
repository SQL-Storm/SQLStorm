
WITH RankedSales AS (
    SELECT 
        c.c_customer_id,
        SUM(ws.ws_sales_price) AS total_sales,
        COUNT(ws.ws_order_number) AS order_count,
        DENSE_RANK() OVER (PARTITION BY c.c_customer_id ORDER BY SUM(ws.ws_sales_price) DESC) AS sales_rank
    FROM 
        customer c
    LEFT JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    JOIN 
        date_dim d ON ws.ws_sold_date_sk = d.d_date_sk
    WHERE 
        d.d_year = 2023
    GROUP BY 
        c.c_customer_id
),
TopCustomers AS (
    SELECT 
        r.c_customer_id,
        r.total_sales,
        r.order_count
    FROM 
        RankedSales r
    WHERE 
        r.sales_rank <= 10
),
CustomerDemographics AS (
    SELECT 
        cd.cd_gender,
        cd.cd_marital_status,
        COUNT(tc.c_customer_id) AS customer_count,
        AVG(tc.total_sales) AS avg_sales
    FROM 
        TopCustomers tc
    LEFT JOIN 
        customer_demographics cd ON tc.c_customer_id = cd.cd_demo_sk
    GROUP BY 
        cd.cd_gender, cd.cd_marital_status
)
SELECT 
    cd.cd_gender,
    cd.cd_marital_status,
    cd.customer_count,
    cd.avg_sales,
    CASE 
        WHEN cd.customer_count > 100 THEN 'High Volume'
        WHEN cd.customer_count BETWEEN 50 AND 100 THEN 'Medium Volume'
        ELSE 'Low Volume' 
    END AS volume_category
FROM 
    CustomerDemographics cd
ORDER BY 
    cd.customer_count DESC, cd.avg_sales DESC;
