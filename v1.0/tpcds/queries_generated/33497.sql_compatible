
WITH RECURSIVE sales_cte AS (
    SELECT 
        cs_item_sk,
        SUM(cs_net_profit) AS total_profit,
        COUNT(cs_order_number) AS total_sales
    FROM 
        catalog_sales
    WHERE 
        cs_sold_date_sk >= (SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = 2023) - 30
    GROUP BY 
        cs_item_sk
),
customer_returns AS (
    SELECT 
        sr_item_sk,
        SUM(sr_return_amount) AS total_returns,
        COUNT(sr_ticket_number) AS return_count
    FROM 
        store_returns
    GROUP BY 
        sr_item_sk
),
enhanced_sales AS (
    SELECT 
        c.c_customer_id,
        c.c_first_name,
        c.c_last_name,
        s.cs_item_sk,
        s.total_profit,
        COALESCE(r.total_returns, 0) AS total_returns,
        CASE 
            WHEN r.return_count > 0 THEN (s.total_profit / NULLIF(r.total_returns, 0)) 
            ELSE s.total_profit 
        END AS adjusted_profit
    FROM 
        sales_cte s
    LEFT JOIN 
        customer c ON c.c_customer_sk = (
            SELECT sr_customer_sk 
            FROM store_returns 
            WHERE sr_item_sk = s.cs_item_sk 
            LIMIT 1
        )
    LEFT JOIN 
        customer_returns r ON s.cs_item_sk = r.sr_item_sk
)
SELECT 
    e.c_customer_id,
    e.c_first_name,
    e.c_last_name,
    e.cs_item_sk,
    e.total_profit,
    e.total_returns,
    e.adjusted_profit,
    ROW_NUMBER() OVER (PARTITION BY e.c_customer_id ORDER BY e.adjusted_profit DESC) AS rn
FROM 
    enhanced_sales e
WHERE 
    e.adjusted_profit > 0
ORDER BY 
    e.adjusted_profit DESC
FETCH FIRST 100 ROWS ONLY;
