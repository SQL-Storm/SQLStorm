
WITH CustomerRanked AS (
    SELECT 
        c.c_customer_id,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_education_status,
        cd.cd_purchase_estimate,
        ROW_NUMBER() OVER (PARTITION BY cd.cd_gender ORDER BY cd.cd_purchase_estimate DESC) AS purchase_rank
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
),

TopCustomers AS (
    SELECT 
        c.c_customer_id AS customer_id,
        c.c_first_name AS first_name,
        c.c_last_name AS last_name,
        cd.cd_gender AS gender,
        cd.cd_marital_status AS marital_status,
        cd.cd_education_status AS education_status,
        cd.cd_purchase_estimate AS purchase_estimate
    FROM 
        CustomerRanked c
    WHERE 
        c.purchase_rank <= 5
),

ItemSales AS (
    SELECT 
        ws.ws_item_sk,
        SUM(ws.ws_quantity) AS total_quantity_sold,
        SUM(ws.ws_ext_sales_price) AS total_sales_value
    FROM 
        web_sales ws
    JOIN 
        TopCustomers tc ON ws.ws_bill_customer_sk = tc.customer_id
    GROUP BY 
        ws.ws_item_sk
),

ItemDetails AS (
    SELECT 
        i.i_item_id,
        i.i_item_desc,
        isales.total_quantity_sold,
        isales.total_sales_value
    FROM 
        item i
    JOIN 
        ItemSales isales ON i.i_item_sk = isales.ws_item_sk
    ORDER BY 
        isales.total_sales_value DESC
)

SELECT 
    id.i_item_id,
    id.i_item_desc,
    id.total_quantity_sold,
    id.total_sales_value
FROM 
    ItemDetails id
WHERE
    id.i_item_desc LIKE '%Luxury%'
FETCH FIRST 10 ROWS ONLY;
