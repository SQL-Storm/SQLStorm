
WITH RankedSales AS (
    SELECT 
        ws.ws_order_number,
        ws.ws_item_sk,
        ws.ws_sales_price,
        ROW_NUMBER() OVER (PARTITION BY ws.ws_order_number ORDER BY ws.ws_sales_price DESC) AS PriceRank
    FROM 
        web_sales ws
    WHERE 
        ws.ws_sales_price > (SELECT AVG(ws2.ws_sales_price) FROM web_sales ws2 WHERE ws2.ws_item_sk = ws.ws_item_sk)
), FilteredReturns AS (
    SELECT 
        sr_item_sk,
        SUM(sr_return_quantity) AS total_returned,
        COUNT(DISTINCT sr_ticket_number) AS return_count
    FROM 
        store_returns
    GROUP BY 
        sr_item_sk
    HAVING 
        SUM(sr_return_quantity) > (
            SELECT COUNT(*) / 2 FROM store_returns sr WHERE sr_item_sk = store_returns.sr_item_sk
        )
), CustomerStats AS (
    SELECT 
        c.c_customer_id,
        cd.cd_gender,
        COUNT(*) AS purchase_count,
        MAX(ws.ws_sales_price) AS max_purchase_amount
    FROM 
        customer c
    JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    GROUP BY 
        c.c_customer_id, cd.cd_gender
), ItemSales AS (
    SELECT 
        i.i_item_id,
        COALESCE(SUM(ss.ss_quantity), 0) AS total_store_sales,
        COALESCE(SUM(cs.cs_quantity), 0) AS total_catalog_sales
    FROM 
        item i
    LEFT JOIN 
        store_sales ss ON i.i_item_sk = ss.ss_item_sk
    LEFT JOIN 
        catalog_sales cs ON i.i_item_sk = cs.cs_item_sk
    GROUP BY 
        i.i_item_id
), OverallStats AS (
    SELECT 
        i.i_item_id,
        i.i_item_desc,
        SUM(fr.total_returned) AS total_returns,
        SUM(isales.total_store_sales) AS total_store_sales,
        SUM(isales.total_catalog_sales) AS total_catalog_sales
    FROM 
        ItemSales isales
    JOIN 
        FilteredReturns fr ON fr.sr_item_sk = isales.i_item_id
    JOIN 
        item i ON isales.i_item_id = i.i_item_id
    GROUP BY 
        i.i_item_id, i.i_item_desc
)
SELECT 
    cs.c_customer_id,
    cs.cd_gender,
    COALESCE(os.total_returns, 0) AS total_returns,
    os.total_store_sales,
    os.total_catalog_sales,
    SUM(rs.ws_sales_price) AS total_spend,
    STRING_AGG(DISTINCT i.i_item_desc, ', ') AS purchased_items
FROM 
    CustomerStats cs
LEFT JOIN 
    RankedSales rs ON rs.ws_order_number IN (SELECT ws_order_number FROM web_sales)
LEFT JOIN 
    OverallStats os ON os.i_item_id IN (SELECT DISTINCT ws.ws_item_sk FROM web_sales ws WHERE ws.ws_bill_customer_sk = cs.c_customer_id)
WHERE 
    cs.purchase_count > 2
GROUP BY 
    cs.c_customer_id, cs.cd_gender, os.total_returns, os.total_store_sales, os.total_catalog_sales
ORDER BY 
    total_spend DESC;
