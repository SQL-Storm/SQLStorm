WITH RECURSIVE sales_hierarchy AS (
    SELECT ws_item_sk, 
           ws_order_number, 
           ws_quantity,
           ws_ext_sales_price,
           ws_ext_discount_amt,
           ROW_NUMBER() OVER (PARTITION BY ws_item_sk ORDER BY ws_order_number) AS rn
    FROM web_sales
    WHERE ws_sales_price > 0
),
inventory_levels AS (
    SELECT inv.inv_item_sk, 
           SUM(inv.inv_quantity_on_hand) AS total_on_hand
    FROM inventory inv
    GROUP BY inv.inv_item_sk
),
customer_spending AS (
    SELECT c.c_customer_sk,
           SUM(COALESCE(ss.ss_net_paid, 0) + COALESCE(cs.cs_net_paid, 0)) AS total_spent
    FROM customer c
    LEFT JOIN store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    LEFT JOIN catalog_sales cs ON c.c_customer_sk = cs.cs_bill_customer_sk
    GROUP BY c.c_customer_sk
),
high_value_customers AS (
    SELECT cd.cd_demo_sk, 
           cd.cd_gender,
           cd.cd_marital_status,
           cs.total_spent,
           RANK() OVER (ORDER BY cs.total_spent DESC) AS spending_rank
    FROM customer_demographics cd
    JOIN customer_spending cs ON cd.cd_demo_sk = cs.c_cdemo_sk
    WHERE cs.total_spent > (SELECT AVG(total_spent) FROM customer_spending)
)

SELECT 
    s.s_store_id,
    NULLIF(SUM(ws.ws_quantity), 0) AS total_quantity_sold,
    AVG(COALESCE(ws.ws_ext_sales_price, 0)) AS average_sales_price,
    MAX(hl.total_on_hand) AS max_inventory,
    COUNT(DISTINCT hvc.cd_demo_sk) AS high_value_customer_count,
    CASE 
        WHEN AVG(ws.ws_ext_discount_amt) > 10 THEN 'High Discounts'
        ELSE 'Regular Discounts' 
    END AS discount_category
FROM web_sales ws
JOIN store s ON ws.ws_store_sk = s.s_store_sk
LEFT JOIN inventory_levels hl ON ws.ws_item_sk = hl.inv_item_sk
LEFT JOIN high_value_customers hvc ON ws.ws_bill_cdemo_sk = hvc.cd_demo_sk
WHERE ws.ws_sold_date_sk BETWEEN 2458825 AND 2458925 
GROUP BY s.s_store_id
HAVING COUNT(DISTINCT ws.ws_order_number) > 100
ORDER BY total_quantity_sold DESC
LIMIT 10;