
WITH RECURSIVE SalesCTE AS (
    SELECT
        ws.web_site_sk,
        ws.ws_sales_price,
        ws.ws_sold_date_sk,
        ROW_NUMBER() OVER (PARTITION BY ws.web_site_sk ORDER BY ws.ws_sold_date_sk DESC) AS rn
    FROM
        web_sales ws
    WHERE
        ws.ws_sold_date_sk BETWEEN '20220101' AND '20221231'
), 
InventoryCTE AS (
    SELECT 
        inv.inv_item_sk,
        SUM(inv.inv_quantity_on_hand) AS total_quantity
    FROM
        inventory inv
    GROUP BY 
        inv.inv_item_sk
), 
CustomerDemographics AS (
    SELECT 
        cd.cd_demo_sk,
        cd.cd_gender,
        cd.cd_marital_status,
        COUNT(DISTINCT c.c_customer_sk) AS num_customers
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    GROUP BY 
        cd.cd_demo_sk, cd.cd_gender, cd.cd_marital_status
)
SELECT 
    s.web_site_sk,
    SUM(s.ws_sales_price) AS total_sales,
    COALESCE(i.total_quantity, 0) AS inventory,
    cd.cd_gender,
    cd.cd_marital_status
FROM 
    SalesCTE s
LEFT JOIN 
    InventoryCTE i ON s.ws_item_sk = i.inv_item_sk
JOIN 
    CustomerDemographics cd ON s.web_site_sk = cd.cd_demo_sk
WHERE 
    s.rn = 1
GROUP BY 
    s.web_site_sk, cd.cd_gender, cd.cd_marital_status
HAVING 
    SUM(s.ws_sales_price) > (SELECT AVG(total_sales) FROM (
                                  SELECT SUM(ws_sales_price) AS total_sales 
                                  FROM web_sales 
                                  GROUP BY ws_web_site_sk) AS avg_sales)
ORDER BY 
    total_sales DESC
LIMIT 10;
