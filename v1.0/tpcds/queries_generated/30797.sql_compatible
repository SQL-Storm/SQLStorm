
WITH RECURSIVE CustomerReturns AS (
    SELECT 
        sr_returned_date_sk,
        sr_item_sk,
        sr_customer_sk,
        SUM(sr_return_quantity) AS total_returns
    FROM 
        store_returns
    GROUP BY 
        sr_returned_date_sk, sr_item_sk, sr_customer_sk
    UNION ALL
    SELECT 
        cr_returned_date_sk,
        cr_item_sk,
        cr_returning_customer_sk,
        SUM(cr_return_quantity) AS total_returns
    FROM 
        catalog_returns
    GROUP BY 
        cr_returned_date_sk, cr_item_sk, cr_returning_customer_sk
),
ItemSales AS (
    SELECT 
        ws_item_sk,
        SUM(ws_quantity) AS total_sales,
        SUM(ws_sales_price) AS total_revenue
    FROM 
        web_sales
    WHERE 
        ws_sold_date_sk BETWEEN 10000 AND 20000
    GROUP BY 
        ws_item_sk
),
ReturnAnalysis AS (
    SELECT 
        ir.ws_item_sk,
        COALESCE(cr.total_returns, 0) AS returns,
        is.total_sales,
        is.total_revenue,
        (COALESCE(cr.total_returns, 0) / NULLIF(is.total_sales, 0)) * 100 AS return_percentage
    FROM 
        ItemSales is
    LEFT JOIN 
        (SELECT sr_item_sk AS item_sk, SUM(total_returns) AS total_returns 
         FROM CustomerReturns 
         GROUP BY sr_item_sk) cr ON is.ws_item_sk = cr.item_sk
)
SELECT 
    ia.ws_item_sk,
    ia.returns,
    ia.total_sales,
    ia.total_revenue,
    ia.return_percentage,
    CASE 
        WHEN ia.return_percentage > 50 THEN 'High Return'
        WHEN ia.return_percentage BETWEEN 20 AND 50 THEN 'Moderate Return'
        ELSE 'Low Return'
    END AS return_category
FROM 
    ReturnAnalysis ia
WHERE 
    ia.return_percentage IS NOT NULL
ORDER BY 
    ia.return_percentage DESC
LIMIT 100;
