
WITH RECURSIVE SalesHierarchy AS (
    SELECT c.c_customer_sk, 
           c.c_first_name, 
           c.c_last_name, 
           s.ss_sold_date_sk, 
           SUM(s.ss_net_profit) AS total_profit
    FROM customer c
    JOIN store_sales s ON c.c_customer_sk = s.ss_customer_sk
    GROUP BY c.c_customer_sk, c.c_first_name, c.c_last_name, s.ss_sold_date_sk

    UNION ALL

    SELECT c.c_customer_sk, 
           c.c_first_name, 
           c.c_last_name, 
           s.ss_sold_date_sk,
           SUM(s.ss_net_profit)
    FROM customer c
    JOIN store_sales s ON c.c_customer_sk = s.ss_customer_sk
    JOIN SalesHierarchy sh ON c.c_customer_sk = sh.c_customer_sk
    WHERE s.ss_sold_date_sk = sh.ss_sold_date_sk
    GROUP BY c.c_customer_sk, c.c_first_name, c.c_last_name, s.ss_sold_date_sk
),
AggregatedSales AS (
    SELECT c.c_customer_sk, 
           c.c_first_name, 
           c.c_last_name, 
           sh.ss_sold_date_sk,
           SUM(sh.total_profit) AS aggregated_profit
    FROM customer c
    JOIN SalesHierarchy sh ON c.c_customer_sk = sh.c_customer_sk
    GROUP BY c.c_customer_sk, c.c_first_name, c.c_last_name, sh.ss_sold_date_sk
),
RankedSales AS (
    SELECT a.c_customer_sk, 
           a.c_first_name, 
           a.c_last_name, 
           a.ss_sold_date_sk, 
           a.aggregated_profit, 
           RANK() OVER (PARTITION BY a.ss_sold_date_sk ORDER BY a.aggregated_profit DESC) AS sales_rank
    FROM AggregatedSales AS a
)
SELECT ra.c_customer_sk, 
       ra.c_first_name, 
       ra.c_last_name, 
       d.d_date_id, 
       ra.aggregated_profit, 
       ra.sales_rank
FROM RankedSales ra
JOIN date_dim d ON d.d_date_sk = ra.ss_sold_date_sk
WHERE ra.sales_rank <= 10
  AND d.d_year = (SELECT MAX(d_year) FROM date_dim)
ORDER BY d.d_date_id, ra.sales_rank;
