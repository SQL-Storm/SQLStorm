WITH RECURSIVE sales_growth AS (
    SELECT 
        d_year,
        SUM(ws_net_paid) AS total_sales,
        LAG(SUM(ws_net_paid), 1, 0) OVER (ORDER BY d_year) AS previous_year_sales
    FROM 
        web_sales
    JOIN 
        date_dim ON ws_sold_date_sk = d_date_sk
    GROUP BY 
        d_year
), 
sales_analysis AS (
    SELECT 
        d_year,
        total_sales,
        previous_year_sales,
        CASE 
            WHEN previous_year_sales = 0 THEN NULL
            ELSE ((total_sales - previous_year_sales) / previous_year_sales) * 100 
        END AS growth_percentage
    FROM 
        sales_growth
),
customer_income AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        hd.hd_income_band_sk,
        ib.ib_lower_bound,
        ib.ib_upper_bound
    FROM 
        customer c
    JOIN 
        household_demographics hd ON c.c_current_hdemo_sk = hd.hd_demo_sk
    JOIN 
        income_band ib ON hd.hd_income_band_sk = ib.ib_income_band_sk
)
SELECT 
    ia.d_year,
    ia.growth_percentage,
    ci.c_first_name,
    ci.c_last_name,
    ci.ib_lower_bound,
    ci.ib_upper_bound,
    COALESCE(COUNT(DISTINCT ws.ws_order_number), 0) AS total_orders
FROM 
    sales_analysis ia
LEFT JOIN 
    web_sales ws ON ia.d_year = YEAR(ws.ws_sold_date_sk)  
LEFT JOIN 
    customer_income ci ON ws.ws_bill_customer_sk = ci.c_customer_sk
WHERE 
    ia.growth_percentage IS NOT NULL
GROUP BY 
    ia.d_year, ia.growth_percentage, ci.c_first_name, ci.c_last_name, ci.ib_lower_bound, ci.ib_upper_bound
ORDER BY 
    ia.d_year DESC;