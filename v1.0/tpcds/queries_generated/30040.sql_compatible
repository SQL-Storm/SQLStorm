
WITH RECURSIVE SubCategory AS (
    SELECT 
        i_category_id,
        i_category,
        1 AS lvl
    FROM 
        item
    WHERE 
        i_rec_start_date <= DATE '2002-10-01' AND 
        (i_rec_end_date IS NULL OR i_rec_end_date > DATE '2002-10-01')
    
    UNION ALL
    
    SELECT 
        i.category_id AS i_category_id,
        i.category AS i_category,
        sc.lvl + 1
    FROM 
        item i
    INNER JOIN 
        SubCategory sc ON i.category_id = sc.i_category_id 
    WHERE 
        i.rec_start_date <= DATE '2002-10-01' AND 
        (i.rec_end_date IS NULL OR i.rec_end_date > DATE '2002-10-01')
),
AggregatedSales AS (
    SELECT 
        CASE 
            WHEN cs_sold_date_sk IS NOT NULL THEN 'Catalog Sales'
            WHEN ws_sold_date_sk IS NOT NULL THEN 'Web Sales'
            WHEN ss_sold_date_sk IS NOT NULL THEN 'Store Sales'
            ELSE 'Other'
        END AS Sales_Type,
        SUM(COALESCE(cs_ext_sales_price, 0) + COALESCE(ws_ext_sales_price, 0) + COALESCE(ss_ext_sales_price, 0)) AS Total_Sales,
        AVG(COALESCE(cs_net_profit, 0) + COALESCE(ws_net_profit, 0) + COALESCE(ss_net_profit, 0)) AS Avg_Net_Profit,
        cs.c_customer_sk  -- Added to Group By
    FROM 
        catalog_sales cs
    FULL OUTER JOIN 
        web_sales ws ON cs.cs_order_number = ws.ws_order_number
    FULL OUTER JOIN 
        store_sales ss ON cs.cs_order_number = ss.ss_ticket_number
    WHERE 
        (cs_sold_date_sk >= (SELECT MIN(d_date_sk) FROM date_dim) AND cs_sold_date_sk <= (SELECT MAX(d_date_sk) FROM date_dim))
        OR (ws_sold_date_sk >= (SELECT MIN(d_date_sk) FROM date_dim) AND ws_sold_date_sk <= (SELECT MAX(d_date_sk) FROM date_dim))
        OR (ss_sold_date_sk >= (SELECT MIN(d_date_sk) FROM date_dim) AND ss_sold_date_sk <= (SELECT MAX(d_date_sk) FROM date_dim))
    GROUP BY 
        Sales_Type, cs.c_customer_sk  -- Ensure all grouped columns are included
),
CustomerSales AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        a.Total_Sales,
        a.Avg_Net_Profit
    FROM 
        customer c
    LEFT JOIN 
        AggregatedSales a ON c.c_customer_sk = a.c_customer_sk
)
SELECT 
    cs.c_first_name,
    cs.c_last_name,
    SUM(COALESCE(cs.Total_Sales, 0)) AS Total_Sales,
    AVG(COALESCE(cs.Avg_Net_Profit, 0)) AS Avg_Net_Profit,
    COUNT(DISTINCT cs.c_customer_sk) AS Customer_Count,
    STRING_AGG(DISTINCT CONCAT(i.i_category_id, ':', i.i_category), ', ') AS Categories
FROM 
    CustomerSales cs
LEFT JOIN 
    item i ON cs.c_customer_sk = i.i_item_sk 
GROUP BY 
    cs.c_first_name, cs.c_last_name
HAVING 
    SUM(COALESCE(cs.Total_Sales, 0)) > 1000
ORDER BY 
    Total_Sales DESC;
