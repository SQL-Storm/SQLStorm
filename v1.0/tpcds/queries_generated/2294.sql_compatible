
WITH sales_data AS (
    SELECT 
        item.i_item_id,
        SUM(COALESCE(ss.ss_quantity, 0) + COALESCE(cs.cs_quantity, 0) + COALESCE(ws.ws_quantity, 0)) AS total_quantity,
        SUM(COALESCE(ss.ss_net_paid, 0) + COALESCE(cs.cs_net_paid, 0) + COALESCE(ws.ws_net_paid, 0)) AS total_revenue,
        SUM(COALESCE(ss.ss_net_profit, 0) + COALESCE(cs.cs_net_profit, 0) + COALESCE(ws.ws_net_profit, 0)) AS total_profit
    FROM item
    LEFT JOIN store_sales ss ON item.i_item_sk = ss.ss_item_sk
    LEFT JOIN catalog_sales cs ON item.i_item_sk = cs.cs_item_sk
    LEFT JOIN web_sales ws ON item.i_item_sk = ws.ws_item_sk
    GROUP BY item.i_item_id
),
top_sales AS (
    SELECT 
        i_item_id,
        total_quantity,
        total_revenue,
        total_profit,
        RANK() OVER (ORDER BY total_quantity DESC) AS sales_rank
    FROM sales_data
),
customer_info AS (
    SELECT 
        c.c_customer_id,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_purchase_estimate,
        COUNT(DISTINCT CASE WHEN cd.cd_gender = 'M' THEN c.c_customer_id END) AS male_customers,
        COUNT(DISTINCT CASE WHEN cd.cd_gender = 'F' THEN c.c_customer_id END) AS female_customers
    FROM customer c
    JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    GROUP BY c.c_customer_id, cd.cd_gender, cd.cd_marital_status, cd.cd_purchase_estimate
)
SELECT 
    ts.i_item_id,
    ts.total_quantity,
    ts.total_revenue,
    ts.total_profit,
    ci.male_customers,
    ci.female_customers,
    ci.cd_marital_status,
    ci.cd_purchase_estimate
FROM top_sales ts
LEFT JOIN customer_info ci ON ts.i_item_id = (SELECT i_item_id FROM sales_data WHERE total_quantity = (SELECT MAX(total_quantity) FROM sales_data))
WHERE ts.sales_rank <= 10 OR ci.cd_marital_status IS NOT NULL
ORDER BY ts.total_revenue DESC
FETCH FIRST 50 ROWS ONLY;
