
WITH RECURSIVE CustomerReturns AS (
    SELECT 
        sr_returned_date_sk,
        sr_return_time_sk,
        sr_item_sk,
        sr_customer_sk,
        sr_return_quantity,
        sr_return_amt,
        1 AS tier
    FROM store_returns
    WHERE sr_returned_date_sk >= 20210101 
    UNION ALL
    SELECT 
        sr.returned_date_sk,
        sr.return_time_sk,
        sr.item_sk,
        sr.customer_sk,
        sr.return_quantity,
        sr.return_amt,
        cr.tier + 1
    FROM store_returns sr
    JOIN CustomerReturns cr ON sr.customer_sk = cr.sr_customer_sk
    WHERE cr.tier < 5
),
SalesData AS (
    SELECT 
        ws.ws_item_sk,
        SUM(ws.ws_quantity) AS total_quantity_sold,
        SUM(ws.ws_ext_sales_price) AS total_sales,
        DENSE_RANK() OVER (ORDER BY SUM(ws.ws_ext_sales_price) DESC) AS sales_rank
    FROM web_sales ws
    GROUP BY ws.ws_item_sk
),
ReturnSummary AS (
    SELECT 
        cr.sr_item_sk,
        SUM(cr.sr_return_quantity) AS total_returned_quantity,
        SUM(cr.sr_return_amt) AS total_returned_amt,
        COUNT(DISTINCT cr.sr_customer_sk) AS unique_customers
    FROM CustomerReturns cr
    GROUP BY cr.sr_item_sk
)
SELECT 
    i.i_item_id,
    i.i_item_desc,
    COALESCE(sd.total_quantity_sold, 0) AS total_quantity_sold,
    COALESCE(sd.total_sales, 0) AS total_sales,
    COALESCE(rs.total_returned_quantity, 0) AS total_returned_quantity,
    COALESCE(rs.total_returned_amt, 0) AS total_returned_amt,
    COALESCE(rs.unique_customers, 0) AS unique_customers,
    CASE 
        WHEN COALESCE(sd.total_sales, 0) > 0 THEN 
            ROUND(COALESCE(rs.total_returned_amt, 0) / COALESCE(sd.total_sales, 0) * 100, 2)
        ELSE 
            NULL
    END AS return_rate_percentage
FROM item i
LEFT JOIN SalesData sd ON i.i_item_sk = sd.ws_item_sk
LEFT JOIN ReturnSummary rs ON i.i_item_sk = rs.sr_item_sk
WHERE 
    (COALESCE(rs.total_returned_quantity, 0) > 0 OR COALESCE(sd.total_sales, 0) > 0)
ORDER BY 
    return_rate_percentage DESC NULLS LAST
FETCH FIRST 100 ROWS ONLY;
