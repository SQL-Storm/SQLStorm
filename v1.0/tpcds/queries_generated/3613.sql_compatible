
WITH customer_returns AS (
    SELECT 
        wr_returning_customer_sk,
        COALESCE(SUM(wr_return_amt), 0) AS total_web_return_amt,
        COUNT(wr_order_number) AS total_web_returns
    FROM 
        web_returns
    GROUP BY 
        wr_returning_customer_sk
),
store_returns_summary AS (
    SELECT 
        sr_customer_sk,
        COALESCE(SUM(sr_return_amt), 0) AS total_store_return_amt,
        COUNT(sr_ticket_number) AS total_store_returns
    FROM 
        store_returns 
    GROUP BY 
        sr_customer_sk
),
sales_summary AS (
    SELECT 
        ws_bill_customer_sk AS customer_sk,
        SUM(ws_sales_price) AS total_sales_amt,
        COUNT(ws_order_number) AS total_sales
    FROM 
        web_sales
    GROUP BY 
        ws_bill_customer_sk
),
combined_returns AS (
    SELECT 
        c.c_customer_sk,
        COALESCE(cr.total_web_return_amt, 0) AS total_web_return_amt,
        COALESCE(sr.total_store_return_amt, 0) AS total_store_return_amt,
        COALESCE(s.total_sales_amt, 0) AS total_sales_amt,
        (COALESCE(cr.total_web_return_amt, 0) + COALESCE(sr.total_store_return_amt, 0)) AS total_return_amt
    FROM 
        customer c
    LEFT JOIN 
        customer_returns cr ON c.c_customer_sk = cr.wr_returning_customer_sk
    LEFT JOIN 
        store_returns_summary sr ON c.c_customer_sk = sr.sr_customer_sk
    LEFT JOIN 
        sales_summary s ON c.c_customer_sk = s.customer_sk
)
SELECT 
    cr.c_customer_sk,
    COALESCE(ca.ca_city, 'Unknown') AS city,
    c.c_first_name,
    c.c_last_name,
    CASE 
        WHEN total_return_amt / NULLIF(total_sales_amt, 0) > 0.1 THEN 'High Return Rate'
        ELSE 'Normal Return Rate'
    END AS return_rate_category,
    ROW_NUMBER() OVER (PARTITION BY cr.c_customer_sk ORDER BY total_return_amt DESC) AS row_num
FROM 
    combined_returns cr
JOIN 
    customer_address ca ON cr.c_customer_sk = ca.ca_address_sk
WHERE 
    cr.total_sales_amt > 1000
ORDER BY 
    return_rate_category, total_return_amt DESC
LIMIT 50;
