
WITH CustomerReturns AS (
    SELECT 
        sr_returned_date_sk, 
        COUNT(DISTINCT sr_returning_customer_sk) AS unique_customers,
        SUM(sr_return_quantity) AS total_returned_quantity,
        AVG(sr_return_amt_inc_tax) AS avg_return_amt_inc_tax
    FROM store_returns
    GROUP BY sr_returned_date_sk
),
SalesSummary AS (
    SELECT 
        ws_sold_date_sk,
        SUM(ws_sales_price) AS total_sales,
        SUM(ws_net_profit) AS total_net_profit
    FROM web_sales
    GROUP BY ws_sold_date_sk
),
DailyMetrics AS (
    SELECT 
        d.d_date_sk,
        d.d_date,
        COALESCE(cr.unique_customers, 0) AS unique_returning_customers,
        COALESCE(ss.total_sales, 0) AS total_sales_amount,
        COALESCE(ss.total_net_profit, 0) AS total_net_profit_amount
    FROM date_dim d
    LEFT JOIN CustomerReturns cr ON d.d_date_sk = cr.sr_returned_date_sk
    LEFT JOIN SalesSummary ss ON d.d_date_sk = ss.ws_sold_date_sk
)
SELECT 
    d.d_date,
    d.unique_returning_customers,
    d.total_sales_amount,
    d.total_net_profit_amount,
    SUM(d.total_sales_amount) OVER (ORDER BY d.d_date ROWS BETWEEN 6 PRECEDING AND CURRENT ROW) AS rolling_week_sales,
    (CASE 
        WHEN d.total_sales_amount = 0 THEN NULL
        ELSE ROUND(d.total_net_profit_amount / d.total_sales_amount, 4) 
     END) AS profit_margin,
    (SELECT COUNT(DISTINCT wr_returning_customer_sk) 
     FROM web_returns wr 
     WHERE wr_returned_date_sk = d.d_date_sk AND wr_return_amount > 0) AS distinct_web_returning_customers
FROM DailyMetrics d
WHERE d.d_date BETWEEN '2022-01-01' AND '2022-12-31'
ORDER BY d.d_date DESC;
