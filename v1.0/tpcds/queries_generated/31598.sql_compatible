
WITH RECURSIVE sales_summary AS (
    SELECT 
        s.s_store_sk,
        SUM(ss.ss_extent_sales_price) AS total_sales,
        COUNT(ss.ss_ticket_number) AS transaction_count,
        ROW_NUMBER() OVER (PARTITION BY s.s_store_sk ORDER BY SUM(ss.ss_ext_sales_price) DESC) AS sales_rank
    FROM 
        store_sales ss
    JOIN 
        store s ON ss.ss_store_sk = s.s_store_sk
    WHERE 
        ss.ss_sold_date_sk >= (SELECT MIN(d.d_date_sk) FROM date_dim d WHERE d.d_year = 2023)
    GROUP BY 
        s.s_store_sk
),
top_stores AS (
    SELECT 
        s.s_store_sk,
        s.s_store_name,
        ss.total_sales,
        ss.transaction_count,
        ROW_NUMBER() OVER (ORDER BY ss.total_sales DESC) AS rank
    FROM 
        sales_summary ss
    JOIN 
        store s ON ss.s_store_sk = s.s_store_sk
    WHERE 
        ss.transaction_count > 1000
),
customer_data AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        hd.hd_income_band_sk,
        CASE 
            WHEN hd.hd_income_band_sk IS NULL THEN 'Unknown'
            ELSE CONCAT(ib.ib_lower_bound, '-', ib.ib_upper_bound)
        END AS income_band
    FROM 
        customer c
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN 
        household_demographics hd ON c.c_customer_sk = hd.hd_demo_sk
    LEFT JOIN 
        income_band ib ON hd.hd_income_band_sk = ib.ib_income_band_sk
),
sales_per_customer AS (
    SELECT 
        w.ws_bill_customer_sk,
        SUM(w.ws_ext_sales_price) AS total_spent
    FROM 
        web_sales w
    GROUP BY 
        w.ws_bill_customer_sk
)
SELECT 
    ts.rank,
    ts.s_store_name,
    ts.total_sales,
    cd.c_first_name,
    cd.c_last_name,
    cd.cd_gender,
    COALESCE(sp.total_spent, 0) AS total_spent
FROM 
    top_stores ts
LEFT JOIN 
    customer_data cd ON cd.c_customer_sk IN (SELECT ws.ws_bill_customer_sk FROM web_sales ws WHERE ws.ws_ship_date_sk >= (SELECT MIN(d.d_date_sk) FROM date_dim d WHERE d.d_fy_year = 2023))
LEFT JOIN 
    sales_per_customer sp ON sp.ws_bill_customer_sk = cd.c_customer_sk
WHERE 
    ts.total_sales > (SELECT AVG(ts1.total_sales) FROM top_stores ts1)
ORDER BY 
    ts.total_sales DESC, cd.c_last_name ASC;
