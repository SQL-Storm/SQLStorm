
WITH CustomerSales AS (
    SELECT 
        c.c_customer_sk,
        COUNT(ss.ticket_number) AS total_store_sales,
        SUM(ss.net_paid) AS total_store_revenue,
        ROUND(AVG(ss.net_paid), 2) AS avg_store_sale,
        MIN(ss.net_paid) AS min_store_sale,
        MAX(ss.net_paid) AS max_store_sale
    FROM customer c
    LEFT JOIN store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    GROUP BY c.c_customer_sk
),
WebSales AS (
    SELECT 
        ws_bill_customer_sk AS customer_sk,
        COUNT(ws_order_number) AS total_web_sales,
        SUM(ws_net_paid) AS total_web_revenue
    FROM web_sales
    GROUP BY ws_bill_customer_sk
),
Demographics AS (
    SELECT 
        cd_gender,
        cd_marital_status,
        COUNT(DISTINCT c.c_customer_id) AS customer_count,
        ROUND(AVG(cd_purchase_estimate), 2) AS avg_purchase_estimate
    FROM customer c
    JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    GROUP BY cd_gender, cd_marital_status
),
AggregatedSales AS (
    SELECT 
        cs.c_customer_sk,
        cs.total_store_sales,
        cs.total_store_revenue,
        ws.total_web_sales,
        ws.total_web_revenue,
        COALESCE(cs.total_store_revenue, 0) + COALESCE(ws.total_web_revenue, 0) AS total_revenue
    FROM CustomerSales cs
    FULL OUTER JOIN WebSales ws ON cs.c_customer_sk = ws.customer_sk
),
FinalReport AS (
    SELECT 
        ags.c_customer_sk,
        ags.total_store_sales,
        ags.total_web_sales,
        (COALESCE(ags.total_store_revenue, 0) + COALESCE(ags.total_web_revenue, 0)) AS combined_revenue,
        CASE WHEN ags.total_store_sales > 0 THEN (ags.total_store_revenue / ags.total_store_sales) ELSE NULL END AS avg_store_revenue_per_sale,
        (SELECT cd.cd_gender 
         FROM Demographics cd 
         WHERE (ags.total_web_sales IS NULL OR ags.total_store_sales IS NULL) 
         LIMIT 1) AS demo_gender
    FROM AggregatedSales ags
)
SELECT 
    fr.c_customer_sk,
    fr.total_store_sales,
    fr.total_web_sales,
    fr.combined_revenue,
    fr.avg_store_revenue_per_sale,
    DENSE_RANK() OVER (ORDER BY fr.combined_revenue DESC) AS revenue_rank,
    (SELECT 
         COUNT(*) 
     FROM customer_address ca 
     WHERE ca.ca_state = 'CA' 
           AND (fr.combined_revenue IS NULL OR fr.combined_revenue > (SELECT MIN(combined_revenue) FROM FinalReport) + 1000)
    ) AS ca_address_count
FROM FinalReport fr
WHERE fr.combined_revenue IS NOT NULL 
  AND (fr.total_store_sales >= 5 OR fr.total_web_sales > ALL (SELECT total_web_sales FROM WebSales WHERE total_web_sales IS NOT NULL))
ORDER BY fr.combined_revenue DESC, fr.c_customer_sk ASC
LIMIT 50;
