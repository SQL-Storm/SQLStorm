
WITH RankedReturns AS (
    SELECT 
        wr_returned_date_sk,
        wr_return_time_sk,
        wr_item_sk,
        wr_returning_customer_sk,
        wr_return_quantity,
        ROW_NUMBER() OVER (PARTITION BY wr_item_sk ORDER BY wr_returned_date_sk DESC) AS rnk
    FROM web_returns
    WHERE wr_return_quantity > 0
), 
TotalReturns AS (
    SELECT 
        wr_item_sk, 
        SUM(wr_return_quantity) AS total_returned
    FROM RankedReturns
    WHERE rnk <= 5 
    GROUP BY wr_item_sk
),
CustomerReturns AS (
    SELECT 
        cr_item_sk, 
        COUNT(DISTINCT cr_returning_customer_sk) AS unique_customers_returned
    FROM catalog_returns
    GROUP BY cr_item_sk
),
DateFilter AS (
    SELECT 
        d_date_sk, 
        d_date 
    FROM date_dim 
    WHERE d_date >= '2000-01-01' AND d_date <= '2000-12-31'
    AND d_dow IN (0, 6) 
),
SalesAnalysis AS (
    SELECT 
        ws.ws_item_sk,
        SUM(ws.ws_sales_price * ws.ws_quantity) AS total_sales, 
        SUM(ws.ws_coupon_amt) AS total_coupons,
        COUNT(DISTINCT ws.ws_bill_customer_sk) AS unique_customers
    FROM web_sales ws
    JOIN DateFilter df ON ws.ws_sold_date_sk = df.d_date_sk
    GROUP BY ws.ws_item_sk
)
SELECT 
    sa.ws_item_sk,
    COALESCE(tr.total_returned, 0) AS total_returned,
    COALESCE(cr.unique_customers_returned, 0) AS unique_customers_returned,
    sa.total_sales,
    sa.total_coupons,
    (sa.total_sales - COALESCE(tr.total_returned, 0) * AVG(ws.ws_sales_price) OVER()) AS net_revenue,
    CASE 
        WHEN sa.total_sales > 0 THEN (COALESCE(tr.total_returned, 0) * 100.0) / sa.total_sales
        ELSE 0
    END AS return_percentage
FROM SalesAnalysis sa
LEFT JOIN TotalReturns tr ON sa.ws_item_sk = tr.wr_item_sk
LEFT JOIN CustomerReturns cr ON sa.ws_item_sk = cr.cr_item_sk
WHERE (sa.total_sales IS NOT NULL OR tr.total_returned IS NOT NULL)
  AND (sa.total_coupons > 0 OR (sa.total_coupons IS NULL AND cr.unique_customers_returned IS NOT NULL))
ORDER BY return_percentage DESC
LIMIT 10;
