WITH RECURSIVE date_range AS (
    SELECT d_date_sk, d_date
    FROM date_dim
    WHERE d_date >= '2001-01-01'
    UNION ALL
    SELECT d_date_sk + 1, DATEADD(day, 1, d_date)
    FROM date_range
    WHERE d_date < '2001-01-31'
),
customer_info AS (
    SELECT 
        c.c_customer_sk, 
        c.c_first_name, 
        c.c_last_name, 
        cd.cd_gender, 
        cd.cd_marital_status,
        cd.cd_purchase_estimate,
        ROW_NUMBER() OVER (PARTITION BY cd.cd_gender ORDER BY cd.cd_purchase_estimate DESC) AS purchase_rank
    FROM customer c
    JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
),
item_details AS (
    SELECT 
        i.i_item_sk, 
        i.i_item_desc, 
        i.i_current_price, 
        i.i_brand, 
        i.i_category
    FROM item i
    WHERE i.i_current_price IS NOT NULL
),
sale_summary AS (
    SELECT 
        ws.ws_sold_date_sk,
        SUM(ws.ws_quantity) AS total_quantity,
        SUM(ws.ws_net_profit) AS total_profit,
        SUM(ws.ws_net_paid) AS total_revenue
    FROM web_sales ws
    JOIN customer c ON ws.ws_bill_customer_sk = c.c_customer_sk
    GROUP BY ws.ws_sold_date_sk
    HAVING SUM(ws.ws_net_profit) > 10000
)
SELECT 
    d.d_date,
    c.c_first_name,
    c.c_last_name,
    ci.total_quantity,
    ci.total_profit,
    ci.total_revenue,
    i.i_item_desc, 
    i.i_current_price,
    CASE 
        WHEN ci.purchase_rank IS NULL THEN 'N/A'
        WHEN ci.purchase_rank <= 10 THEN 'Top Purchaser'
        ELSE 'Regular Customer'
    END AS customer_segment
FROM date_range d
LEFT JOIN sale_summary ci ON d.d_date_sk = ci.ws_sold_date_sk
LEFT JOIN customer_info c ON ci.ws_bill_customer_sk = c.c_customer_sk
LEFT JOIN item_details i ON ci.ws_item_sk = i.i_item_sk
ORDER BY d.d_date, ci.total_revenue DESC
LIMIT 50;