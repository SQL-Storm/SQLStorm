
WITH RECURSIVE customer_hierarchy AS (
    SELECT c.c_customer_sk, c.c_customer_id, c.c_first_name, c.c_last_name, 
           c.c_current_addr_sk, 0 AS level
    FROM customer c
    WHERE c.c_first_shipto_date_sk IS NOT NULL

    UNION ALL

    SELECT ch.c_customer_sk, ch.c_customer_id, ch.c_first_name, ch.c_last_name, 
           ch.c_current_addr_sk, ch.level + 1
    FROM customer_hierarchy ch
    JOIN customer c ON ch.c_current_addr_sk = c.c_current_addr_sk
    WHERE ch.c_customer_sk != c.c_customer_sk
)

SELECT ca.ca_city, ca.ca_state, 
    COUNT(DISTINCT c.c_customer_sk) AS total_customers,
    SUM(COALESCE(cd.cd_dep_count, 0)) AS total_dependents,
    AVG(COALESCE(cd.cd_purchase_estimate, 0)) AS avg_purchase_estimate,
    SUM(ws.ws_net_profit) AS total_web_sales_profit,
    MAX(cd.cd_credit_rating) AS max_credit_rating,
    STRING_AGG(DISTINCT CONCAT(c.c_first_name, ' ', c.c_last_name), ', ') AS customer_names,
    CASE 
        WHEN COUNT(DISTINCT c.c_customer_sk) > 100 THEN 'High'
        WHEN COUNT(DISTINCT c.c_customer_sk) BETWEEN 50 AND 100 THEN 'Medium'
        ELSE 'Low'
    END AS customer_density
FROM customer c
LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
LEFT JOIN customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
WHERE ca.ca_state IS NOT NULL
AND ca.ca_city IS NOT NULL
AND ca.ca_zip IS NOT NULL
GROUP BY ca.ca_city, ca.ca_state
HAVING AVG(COALESCE(cd.cd_age, 0)) > 30 
ORDER BY total_customers DESC
LIMIT 10;
