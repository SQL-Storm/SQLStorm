
WITH RECURSIVE customer_hierarchy AS (
    SELECT c_customer_sk, c_first_name, c_last_name, c_current_addr_sk,
           0 AS level
    FROM customer
    WHERE c_customer_sk IS NOT NULL

    UNION ALL

    SELECT ch.c_customer_sk, ch.c_first_name, ch.c_last_name, ch.c_current_addr_sk,
           ch.level + 1
    FROM customer_hierarchy ch
    JOIN customer c ON c.c_current_addr_sk = ch.c_current_addr_sk
    WHERE c.c_customer_sk <> ch.c_customer_sk
),
address_summary AS (
    SELECT ca_state, COUNT(DISTINCT c_customer_sk) AS customer_count,
           STRING_AGG(DISTINCT CONCAT(c_first_name, ' ', c_last_name), ', ') AS customer_names
    FROM customer c
    JOIN customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
    GROUP BY ca_state
    HAVING COUNT(DISTINCT c_customer_sk) > 5
),
sales_summary AS (
    SELECT ws_sold_date_sk, SUM(ws_sales_price) AS total_sales,
           AVG(ws_net_profit) AS avg_net_profit
    FROM web_sales
    WHERE ws_sold_date_sk IN (SELECT d_date_sk FROM date_dim WHERE d_year = 2023)
    GROUP BY ws_sold_date_sk
),
full_returns AS (
    SELECT sr_customer_sk AS customer_sk, SUM(sr_return_quantity) AS total_returns
    FROM store_returns
    GROUP BY sr_customer_sk

    UNION ALL

    SELECT wr_returning_customer_sk AS customer_sk, SUM(wr_return_quantity) AS total_returns
    FROM web_returns
    GROUP BY wr_returning_customer_sk
),
item_stats AS (
    SELECT i_item_sk, i_item_id, COUNT(*) AS total_sales,
           SUM(i_current_price) AS total_revenue
    FROM item
    JOIN web_sales ON i_item_sk = ws_item_sk
    GROUP BY i_item_sk, i_item_id
    HAVING SUM(ws_quantity) > 10
)
SELECT 
    a.ca_state,
    a.customer_count,
    a.customer_names,
    s.total_sales,
    s.avg_net_profit,
    COALESCE(r.total_returns, 0) AS total_item_returns,
    i.total_sales AS item_sales_count,
    i.total_revenue AS item_revenue
FROM address_summary a
LEFT OUTER JOIN sales_summary s ON TRUE
LEFT JOIN (
    SELECT customer_sk, SUM(total_returns) AS total_returns
    FROM full_returns
    GROUP BY customer_sk
) r ON r.customer_sk IN (SELECT c_customer_sk FROM customer WHERE c_current_addr_sk IN (SELECT ca_address_sk FROM customer_address WHERE ca_state = a.ca_state))
LEFT JOIN item_stats i ON i.i_item_id IN (
    SELECT DISTINCT ws_item_sk FROM web_sales
    WHERE ws_sold_date_sk = s.ws_sold_date_sk
)
WHERE a.customer_count > 10
ORDER BY a.ca_state, s.total_sales DESC
LIMIT 100 OFFSET (SELECT COUNT(*) FROM customer) / 2;
