
WITH RECURSIVE customer_rank AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        RANK() OVER (PARTITION BY cd.cd_gender ORDER BY c.c_birth_year DESC) AS gender_rank
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
), high_potential_customers AS (
    SELECT 
        cr.c_customer_sk,
        CASE 
            WHEN h.hd_income_band_sk IS NULL THEN 'No Income Data'
            ELSE CONCAT('Income Band: ', ib.ib_lower_bound::TEXT, ' - ', ib.ib_upper_bound::TEXT)
        END AS income_band,
        cr.c_first_name,
        cr.c_last_name,
        (SELECT COUNT(*) 
            FROM store_sales ss 
            WHERE ss.ss_customer_sk = cr.c_customer_sk 
              AND ss.ss_sold_date_sk = (SELECT MAX(ss1.ss_sold_date_sk) FROM store_sales ss1 WHERE ss1.ss_customer_sk = cr.c_customer_sk)
        ) AS last_purchase_count
    FROM 
        customer_rank cr
    LEFT JOIN 
        household_demographics h ON cr.c_customer_sk = h.hd_demo_sk
    LEFT JOIN 
        income_band ib ON h.hd_income_band_sk = ib.ib_income_band_sk
    WHERE 
        cr.gender_rank <= 5 
        AND cr.c_last_name IS NOT NULL
), recent_sales_data AS (
    SELECT 
        ws.ws_customer_sk,
        SUM(ws.ws_net_profit) AS total_net_profit,
        AVG(ws.ws_ext_sales_price) AS avg_sales_price,
        COUNT(DISTINCT ws.ws_order_number) AS unique_orders
    FROM 
        web_sales ws
    WHERE 
        ws.ws_sold_date_sk = (SELECT MAX(w2.ws_sold_date_sk) FROM web_sales w2)
    GROUP BY 
        ws.ws_customer_sk
)

SELECT 
    hpc.c_first_name,
    hpc.c_last_name,
    hpc.income_band,
    rs.total_net_profit,
    rs.avg_sales_price,
    rs.unique_orders
FROM 
    high_potential_customers hpc
JOIN 
    recent_sales_data rs ON hpc.c_customer_sk = rs.ws_customer_sk
WHERE 
    (hpc.income_band NOT LIKE 'No Income Data' AND rs.total_net_profit > 0)
    OR (hpc.income_band = 'No Income Data' AND rs.unique_orders > 5)
ORDER BY 
    hpc.c_last_name, 
    hpc.c_first_name DESC;
