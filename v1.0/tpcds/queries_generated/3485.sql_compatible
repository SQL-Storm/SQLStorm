
WITH ranked_sales AS (
    SELECT 
        w.warehouse_name, 
        i.i_item_desc,
        SUM(ws.ws_quantity) AS total_quantity_sold,
        SUM(ws.ws_net_profit) AS total_profit,
        DENSE_RANK() OVER (PARTITION BY w.warehouse_name ORDER BY SUM(ws.ws_net_profit) DESC) AS rank
    FROM 
        web_sales ws
    JOIN 
        item i ON ws.ws_item_sk = i.i_item_sk
    JOIN 
        warehouse w ON ws.ws_warehouse_sk = w.w_warehouse_sk
    WHERE 
        ws.ws_sold_date_sk BETWEEN 10000 AND 20000
    GROUP BY 
        w.warehouse_name, i.i_item_desc
),
customer_segment AS (
    SELECT 
        cd.cd_gender,
        COUNT(DISTINCT c.c_customer_sk) AS customer_count,
        SUM(ws.ws_net_profit) AS total_spending
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY 
        cd.cd_gender
),
returns_summary AS (
    SELECT 
        COALESCE(SUM(sr_return_quantity), 0) AS total_returns,
        COALESCE(SUM(sr_return_amt), 0) AS total_return_amount
    FROM 
        store_returns sr
    WHERE 
        sr.returned_date_sk BETWEEN 10000 AND 20000
)
SELECT 
    r.warehouse_name,
    r.i_item_desc,
    r.total_quantity_sold,
    r.total_profit,
    cs.cd_gender,
    cs.customer_count,
    cs.total_spending,
    rs.total_returns,
    rs.total_return_amount
FROM 
    ranked_sales r
JOIN 
    customer_segment cs ON cs.customer_count IS NOT NULL
JOIN 
    returns_summary rs ON 1=1  
WHERE 
    (r.total_profit > 10000 OR r.total_quantity_sold > 500)
ORDER BY 
    r.warehouse_name, r.total_profit DESC;
