
WITH RECURSIVE sales_summary AS (
    SELECT 
        ws_item_sk,
        SUM(ws_quantity) AS total_quantity,
        SUM(ws_net_profit) AS total_net_profit,
        ROW_NUMBER() OVER (PARTITION BY ws_item_sk ORDER BY ws_sold_date_sk) AS rn
    FROM web_sales
    GROUP BY ws_item_sk
),
customer_incomes AS (
    SELECT 
        cd_demo_sk,
        COUNT(c_customer_sk) AS num_customers,
        MIN(hd_income_band_sk) AS min_income_band,
        MAX(hd_income_band_sk) AS max_income_band
    FROM customer 
    LEFT JOIN household_demographics 
        ON c_current_hdemo_sk = hd_demo_sk
    GROUP BY cd_demo_sk
),
customer_purchases AS (
    SELECT 
        c.c_customer_sk,
        SUM(ws.net_paid_inc_ship) AS total_spent,
        SUM(ws.ws_quantity) AS total_items 
    FROM customer c
    JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    WHERE ws.ws_ship_date_sk IS NOT NULL
    GROUP BY c.c_customer_sk
)
SELECT 
    c.c_customer_sk,
    c.c_first_name,
    c.c_last_name,
    COALESCE(cp.total_spent, 0) AS total_spent,
    cu.total_quantity,
    cu.total_net_profit,
    cd.num_customers,
    CASE 
        WHEN cd.num_customers > 10 THEN 'High Value'
        WHEN cd.num_customers BETWEEN 5 AND 10 THEN 'Medium Value'
        ELSE 'Low Value'
    END AS customer_segment
FROM customer c
LEFT JOIN customer_purchases cp ON c.c_customer_sk = cp.c_customer_sk
LEFT JOIN sales_summary cu ON cp.total_items = cu.total_quantity
LEFT JOIN customer_incomes cd ON cd.cd_demo_sk = c.c_current_cdemo_sk
WHERE (c.c_birth_year IS NULL OR (c.c_birth_year < 1980 AND c.c_birth_month < 12))
    AND (c.c_first_name LIKE 'A%' OR c.c_last_name LIKE 'B%')
ORDER BY c.c_last_name, c.c_first_name;
