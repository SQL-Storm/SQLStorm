
WITH ranked_sales AS (
    SELECT 
        ws.ws_item_sk,
        ws.ws_sales_price,
        ws.ws_quantity,
        RANK() OVER (PARTITION BY ws.ws_item_sk ORDER BY ws.ws_sales_price DESC) AS price_rank
    FROM 
        web_sales ws
    WHERE 
        ws.ws_sold_date_sk BETWEEN (SELECT d_date_sk FROM date_dim WHERE d_date = '2023-01-01') 
        AND (SELECT d_date_sk FROM date_dim WHERE d_date = '2023-12-31')
),
customer_info AS (
    SELECT 
        c.c_customer_id,
        cd.cd_gender,
        cd.cd_marital_status,
        SUM(ws.ws_quantity) AS total_quantity,
        SUM(ws.ws_net_profit) AS total_profit
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_ship_customer_sk
    GROUP BY 
        c.c_customer_id, cd.cd_gender, cd.cd_marital_status
),
item_sales AS (
    SELECT 
        i.i_item_id,
        SUM(ws.ws_quantity) AS total_sales,
        COUNT(ws.ws_order_number) AS order_count
    FROM 
        item i
    JOIN 
        web_sales ws ON i.i_item_sk = ws.ws_item_sk
    GROUP BY 
        i.i_item_id
)
SELECT 
    ci.c_customer_id,
    ci.cd_gender,
    ci.cd_marital_status,
    isales.i_item_id,
    isales.total_sales,
    isales.order_count,
    (CASE 
        WHEN ci.total_profit IS NULL THEN 'No Sales' 
        ELSE 'Active'
    END) AS customer_status,
    (SELECT 
        COUNT(*) 
     FROM 
        ranked_sales rs 
     WHERE 
        rs.ws_item_sk = isales.i_item_id 
        AND rs.price_rank = 1) AS top_price_sales
FROM 
    customer_info ci
JOIN 
    item_sales isales ON ci.total_quantity > 50
LEFT JOIN 
    inventory inv ON isales.i_item_id = inv.inv_item_sk
WHERE 
    inv.inv_quantity_on_hand < (SELECT AVG(inv_quantity_on_hand) 
                                  FROM inventory)
    AND ci.cd_marital_status IS NOT NULL 
ORDER BY 
    ci.total_profit DESC, isales.total_sales ASC
LIMIT 100;
