WITH RankedSales AS (
    SELECT 
        ws_sold_date_sk,
        ws_item_sk,
        ws_quantity,
        ws_sales_price,
        DENSE_RANK() OVER (PARTITION BY ws_item_sk ORDER BY ws_sold_date_sk DESC) AS rank_date
    FROM 
        web_sales
    WHERE 
        ws_sales_price > 0
), 
CustomerReturns AS (
    SELECT 
        wr.returning_customer_sk,
        SUM(wr_return_quantity) AS total_returned,
        SUM(wr_return_amt) AS total_return_amount
    FROM 
        web_returns wr
    GROUP BY 
        wr.returning_customer_sk
),
ActiveCustomers AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_purchase_estimate,
        cd.cd_credit_rating
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    WHERE 
        c.c_birth_year >= (YEAR(cast('2002-10-01' as date)) - 18)
)
SELECT 
    ac.c_customer_sk,
    ac.c_first_name,
    ac.c_last_name,
    ac.cd_gender,
    ac.cd_marital_status,
    COALESCE(SUM(rs.ws_quantity), 0) AS total_quantity_sold,
    COALESCE(SUM(rs.ws_sales_price), 0) AS total_sales_amount,
    COALESCE(cr.total_returned, 0) AS total_returns,
    COALESCE(cr.total_return_amount, 0) AS return_amount,
    CASE 
        WHEN SUM(rs.ws_quantity) - COALESCE(cr.total_returned, 0) < 0 THEN 'Negative Sales'
        ELSE 'Positive Sales'
    END AS sales_status
FROM 
    ActiveCustomers ac
LEFT JOIN 
    RankedSales rs ON ac.c_customer_sk = rs.ws_bill_customer_sk AND rs.rank_date = 1
LEFT JOIN 
    CustomerReturns cr ON ac.c_customer_sk = cr.returning_customer_sk
GROUP BY 
    ac.c_customer_sk, ac.c_first_name, ac.c_last_name, ac.cd_gender, ac.cd_marital_status, cr.total_returned, cr.total_return_amount
ORDER BY 
    total_sales_amount DESC, total_quantity_sold DESC;