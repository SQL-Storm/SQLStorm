
WITH CustomerReturns AS (
    SELECT
        sr_customer_sk,
        SUM(sr_return_quantity) AS total_returned_quantity,
        SUM(sr_return_amt) AS total_returned_amount
    FROM store_returns
    GROUP BY sr_customer_sk
),
SalesData AS (
    SELECT
        ws.bill_customer_sk,
        SUM(ws.net_paid) AS total_sales,
        COUNT(DISTINCT ws.order_number) AS order_count
    FROM web_sales ws
    GROUP BY ws.bill_customer_sk
),
SalesWithReturns AS (
    SELECT
        sd.bill_customer_sk,
        COALESCE(sd.total_sales, 0) AS total_sales,
        COALESCE(cr.total_returned_quantity, 0) AS total_returned_quantity,
        COALESCE(cr.total_returned_amount, 0) AS total_returned_amount,
        (COALESCE(sd.total_sales, 0) - COALESCE(cr.total_returned_amount, 0)) AS net_sales
    FROM SalesData sd
    LEFT JOIN CustomerReturns cr ON sd.bill_customer_sk = cr.sr_customer_sk
),
RankedCustomers AS (
    SELECT
        customer.c_customer_sk,
        customer.c_first_name,
        customer.c_last_name,
        swr.total_sales,
        swr.total_returned_quantity,
        swr.total_returned_amount,
        swr.net_sales,
        ROW_NUMBER() OVER (ORDER BY swr.net_sales DESC) AS sales_rank
    FROM store AS customer
    JOIN SalesWithReturns AS swr ON customer.c_customer_sk = swr.bill_customer_sk
)

SELECT
    rc.c_customer_sk,
    rc.c_first_name,
    rc.c_last_name,
    rc.total_sales,
    rc.total_returned_quantity,
    rc.total_returned_amount,
    rc.net_sales,
    CASE
        WHEN rc.total_sales > 10000 THEN 'High Value'
        WHEN rc.total_sales BETWEEN 5000 AND 10000 THEN 'Medium Value'
        ELSE 'Low Value'
    END AS customer_value_segment
FROM RankedCustomers AS rc
WHERE rc.sales_rank <= 100
ORDER BY rc.net_sales DESC;
