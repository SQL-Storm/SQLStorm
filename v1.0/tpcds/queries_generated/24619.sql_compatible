
WITH RankedSales AS (
    SELECT 
        ws.ws_item_sk,
        SUM(ws.ws_quantity) AS total_sales_quantity,
        SUM(ws.ws_net_paid) AS total_net_paid,
        ROW_NUMBER() OVER (PARTITION BY ws.ws_item_sk ORDER BY SUM(ws.ws_net_paid) DESC) AS rank
    FROM 
        web_sales ws
    JOIN 
        item i ON ws.ws_item_sk = i.i_item_sk
    WHERE 
        ws.ws_ship_date_sk > 0 
        AND i.i_current_price IS NOT NULL
    GROUP BY 
        ws.ws_item_sk
),
CustomerReturns AS (
    SELECT 
        sr.sr_item_sk,
        COUNT(sr.sr_ticket_number) AS total_returns,
        SUM(sr.sr_return_amt) AS total_return_amt
    FROM 
        store_returns sr
    GROUP BY 
        sr.sr_item_sk
),
BestSellingItems AS (
    SELECT 
        rs.ws_item_sk,
        rs.total_sales_quantity,
        rs.total_net_paid,
        cr.total_returns,
        cr.total_return_amt
    FROM 
        RankedSales rs
    LEFT JOIN 
        CustomerReturns cr ON rs.ws_item_sk = cr.sr_item_sk
    WHERE 
        rs.rank <= 10
    ORDER BY 
        rs.total_net_paid DESC
)
SELECT 
    bi.ws_item_sk,
    bi.total_sales_quantity,
    bi.total_net_paid,
    COALESCE(bi.total_returns, 0) AS total_returns,
    COALESCE(bi.total_return_amt, 0.00) AS total_return_amt,
    CASE 
        WHEN bi.total_net_paid > 1000 THEN 'High Value'
        WHEN bi.total_net_paid BETWEEN 500 AND 1000 THEN 'Medium Value'
        ELSE 'Low Value'
    END AS sales_value_category,
    CASE 
        WHEN bi.total_returns IS NULL THEN 'No Returns' 
        ELSE 'Returns Exist'
    END AS return_status
FROM 
    BestSellingItems bi
WHERE 
    bi.total_sales_quantity > (SELECT AVG(total_sales_quantity) FROM RankedSales)
    AND bi.total_net_paid IS NOT NULL
ORDER BY 
    bi.total_net_paid DESC
LIMIT 5
UNION ALL
SELECT 
    NULL AS ws_item_sk,
    COUNT(*) AS total_sales_quantity,
    SUM(ws.ws_net_paid) AS total_net_paid,
    COALESCE(SUM(sr.sr_return_amt), 0.00) AS total_return_amt 
FROM 
    web_sales ws
LEFT JOIN 
    store_returns sr ON ws.ws_item_sk = sr.sr_item_sk 
WHERE 
    ws.ws_sold_date_sk BETWEEN (SELECT MIN(d_date_sk) FROM date_dim WHERE d_year = 2022) 
                      AND (SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = 2022)
    AND (ws.ws_bill_customer_sk IS NULL OR ws.ws_bill_customer_sk NOT IN (SELECT c_customer_sk FROM customer WHERE c_birth_year = 2000));
