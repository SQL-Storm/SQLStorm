
WITH RECURSIVE CustomerReturns AS (
    SELECT 
        wr_returning_customer_sk,
        SUM(wr_return_quantity) AS total_returns,
        SUM(wr_return_amt_inc_tax) AS total_return_amt
    FROM web_returns
    GROUP BY wr_returning_customer_sk
    HAVING SUM(wr_return_quantity) > 0
), 
CumulativeReturns AS (
    SELECT 
        *,
        SUM(total_returns) OVER (ORDER BY total_returns DESC) AS cum_returns
    FROM CustomerReturns
),
MixedSalesReturns AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        COALESCE(sr.total_returns, 0) AS store_returns,
        COALESCE(wr.total_returns, 0) AS web_returns,
        (COALESCE(sr.total_returns, 0) + COALESCE(wr.total_returns, 0)) AS total_returns_combined
    FROM customer c
    LEFT JOIN (
        SELECT sr_customer_sk, SUM(sr_return_quantity) AS total_returns
        FROM store_returns 
        GROUP BY sr_customer_sk
    ) sr ON c.c_customer_sk = sr.sr_customer_sk
    LEFT JOIN (
        SELECT wr_returning_customer_sk, SUM(wr_return_quantity) AS total_returns
        FROM web_returns 
        GROUP BY wr_returning_customer_sk
    ) wr ON c.c_customer_sk = wr.wr_returning_customer_sk
),
FinalAnalysis AS (
    SELECT 
        m.c_customer_sk,
        m.c_first_name,
        m.c_last_name,
        m.store_returns,
        m.web_returns,
        m.total_returns_combined,
        CASE 
            WHEN m.total_returns_combined = 0 THEN 'No Returns'
            WHEN m.total_returns_combined > 10 THEN 'High Returns'
            WHEN m.total_returns_combined BETWEEN 1 AND 10 THEN 'Moderate Returns'
            ELSE 'No Returns'
        END AS return_category
    FROM MixedSalesReturns m
)
SELECT 
    f.*,
    d.d_year,
    COUNT(DISTINCT f.c_customer_sk) OVER (PARTITION BY f.return_category) AS num_customers_in_category,
    ROW_NUMBER() OVER (PARTITION BY f.return_category ORDER BY f.total_returns_combined DESC) AS rank_in_category
FROM FinalAnalysis f
JOIN date_dim d ON d.d_date_sk = (
    SELECT d_date_sk 
    FROM date_dim 
    WHERE d_date = DATE '2002-10-01'
)
WHERE f.store_returns IS NOT NULL 
AND (f.web_returns IS NOT NULL OR f.total_returns_combined > 5)
ORDER BY f.return_category, f.total_returns_combined DESC;
