
WITH RECURSIVE sales_hierarchy AS (
    SELECT 
        s_store_sk,
        s_store_name,
        NULL AS parent_store_sk,
        COUNT(ss.ticket_number) AS total_sales,
        SUM(ss.net_profit) AS total_profit
    FROM store s
    LEFT JOIN store_sales ss ON s.s_store_sk = ss.ss_store_sk
    GROUP BY s_store_sk, s_store_name
    
    UNION ALL
    
    SELECT 
        s_sub.s_store_sk,
        s_sub.s_store_name,
        sh.s_store_sk AS parent_store_sk,
        COUNT(ss_sub.ticket_number) AS total_sales,
        SUM(ss_sub.net_profit) AS total_profit
    FROM store s_sub
    JOIN sales_hierarchy sh ON sh.s_store_sk = s_sub.s_store_sk
    LEFT JOIN store_sales ss_sub ON s_sub.s_store_sk = ss_sub.ss_store_sk
    GROUP BY s_sub.s_store_sk, s_sub.s_store_name, sh.s_store_sk
), 
customer_sales AS (
    SELECT 
        c.c_customer_sk,
        COUNT(ws.ws_order_number) AS web_sales_count,
        SUM(ws.ws_net_profit) AS total_web_profit
    FROM customer c
    LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_ship_customer_sk
    GROUP BY c.c_customer_sk
),
sales_summary AS (
    SELECT 
        sh.s_store_name,
        sh.total_sales,
        sh.total_profit,
        COALESCE(cs.web_sales_count, 0) AS total_web_sales,
        cs.total_web_profit
    FROM sales_hierarchy sh
    LEFT JOIN customer_sales cs ON cs.c_customer_sk IS NOT NULL 
)
SELECT 
    s_store_name,
    total_sales,
    total_profit,
    total_web_sales,
    total_web_profit
FROM sales_summary
WHERE total_profit > (SELECT AVG(total_profit) FROM sales_summary) 
ORDER BY total_profit DESC
FETCH FIRST 10 ROWS ONLY;
