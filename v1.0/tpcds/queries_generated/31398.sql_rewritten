WITH RECURSIVE sales_hierarchy AS (
    SELECT 
        s_store_sk,
        s_store_name,
        s_manager,
        s_supervisor,
        1 AS level
    FROM 
        store
    WHERE 
        s_manager IS NOT NULL
    UNION ALL
    SELECT 
        s.store_sk,
        s.s_store_name,
        s.manager,
        sh.level + 1
    FROM 
        store s
    INNER JOIN 
        sales_hierarchy sh ON s.supervisor = sh.s_manager
),
customer_last_visit AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        MAX(DISTINCT d.d_date) AS last_visit_date
    FROM 
        customer c
    LEFT JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_ship_customer_sk
    LEFT JOIN 
        date_dim d ON ws.ws_sold_date_sk = d.d_date_sk
    GROUP BY 
        c.c_customer_sk, c.c_first_name, c.c_last_name
),
sales_summary AS (
    SELECT 
        s.s_store_sk,
        SUM(ws.ws_net_profit) AS total_net_profit,
        COUNT(DISTINCT ws.ws_order_number) AS total_orders,
        SUM(ws.ws_quantity) AS total_quantity_sold
    FROM 
        store s
    LEFT JOIN 
        web_sales ws ON s.s_store_sk = ws.ws_warehouse_sk
    GROUP BY 
        s.s_store_sk
)
SELECT 
    sh.s_store_name,
    sh.s_manager,
    COALESCE(cs.c_first_name || ' ' || cs.c_last_name, 'Unknown Customer') AS customer_name,
    cs.last_visit_date,
    ss.total_net_profit,
    ss.total_orders,
    ss.total_quantity_sold,
    RANK() OVER (PARTITION BY sh.s_store_name ORDER BY ss.total_net_profit DESC) AS profit_rank
FROM 
    sales_hierarchy sh
LEFT JOIN 
    customer_last_visit cs ON sh.s_store_sk = cs.c_customer_sk 
LEFT JOIN 
    sales_summary ss ON sh.s_store_sk = ss.s_store_sk
WHERE 
    (ss.total_net_profit IS NOT NULL AND ss.total_net_profit > 0) OR
    (cs.last_visit_date IS NULL OR cs.last_visit_date < cast('2002-10-01 12:34:56' as timestamp) - INTERVAL '1 YEAR')
ORDER BY 
    sh.s_store_name, profit_rank;