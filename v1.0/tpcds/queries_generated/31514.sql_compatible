
WITH RECURSIVE sales_hierarchy AS (
    SELECT 
        s_store_sk,
        s_store_name,
        s_number_employees,
        s_floor_space,
        s_sales AS total_sales,
        1 AS level
    FROM 
        store s
    INNER JOIN 
        store_sales ss ON s.s_store_sk = ss.ss_store_sk
    GROUP BY 
        s_store_sk, s_store_name, s_number_employees, s_floor_space, s_sales

    UNION ALL

    SELECT 
        s.s_store_sk,
        sh.store_name,
        s.s_number_employees,
        s.s_floor_space,
        sh.total_sales + COALESCE(ss.cs_ext_sales_price, 0) AS total_sales,
        sh.level + 1
    FROM 
        sales_hierarchy sh
    LEFT JOIN 
        store s ON sh.s_store_sk = s.s_store_sk
    LEFT JOIN 
        catalog_sales ss ON s.s_store_sk = ss.cs_ship_mode_sk
)
SELECT 
    c.c_country,
    COUNT(DISTINCT c.c_customer_id) AS customer_count,
    SUM(ss.ss_net_paid) AS total_sales,
    AVG(t.t_hour) OVER (PARTITION BY c.c_country) AS avg_hour_sales,
    STRING_AGG(DISTINCT ss.ss_ticket_number, ', ') AS ticket_numbers
FROM 
    customer c
LEFT JOIN 
    store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
LEFT JOIN 
    date_dim d ON ss.ss_sold_date_sk = d.d_date_sk
LEFT JOIN 
    sales_hierarchy sh ON ss.ss_store_sk = sh.s_store_sk
WHERE 
    d.d_year = 2023
    AND (c.c_birth_country IS NOT NULL OR c.c_preferred_cust_flag = 'Y')
GROUP BY 
    c.c_country
HAVING 
    SUM(ss.ss_net_profit) > 10000
ORDER BY 
    customer_count DESC
LIMIT 10;
