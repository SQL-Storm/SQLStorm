
WITH RECURSIVE SalesCTE AS (
    SELECT 
        ws_sold_date_sk, 
        ws_item_sk, 
        ws_sales_price, 
        ws_quantity, 
        ws_ext_sales_price, 
        ws_ext_tax,
        ROW_NUMBER() OVER (PARTITION BY ws_item_sk ORDER BY ws_sold_date_sk DESC) AS rank 
    FROM web_sales
    WHERE ws_sold_date_sk BETWEEN '2020-01-01' AND '2020-12-31'
),
SalesAggregates AS (
    SELECT 
        ws_item_sk,
        SUM(ws_quantity) AS total_quantity,
        SUM(ws_ext_sales_price) AS total_sales,
        SUM(ws_ext_tax) AS total_tax
    FROM SalesCTE
    WHERE rank <= 10
    GROUP BY ws_item_sk
),
CustomerSaleInfo AS (
    SELECT 
        c.c_customer_id,
        c.c_first_name,
        c.c_last_name,
        COALESCE(d.d_year, 0) AS purchase_year, 
        sa.total_quantity, 
        sa.total_sales,
        sa.total_tax,
        sa.ws_item_sk
    FROM customer c
    LEFT JOIN SalesAggregates sa ON c.c_customer_sk = sa.ws_item_sk
    LEFT JOIN date_dim d ON d.d_date_sk = sa.ws_item_sk
),
TopCustomers AS (
    SELECT 
        csi.c_customer_id,
        csi.c_first_name,
        csi.c_last_name,
        RANK() OVER (ORDER BY csi.total_sales DESC) AS sales_rank
    FROM CustomerSaleInfo csi
    WHERE csi.total_sales > 1000
)
SELECT 
    tc.c_customer_id,
    tc.c_first_name,
    tc.c_last_name,
    tc.sales_rank,
    (SELECT COUNT(*) 
     FROM web_returns wr 
     WHERE wr.returning_customer_sk = c.c_customer_sk 
       AND wr.return_quantity > 0) AS return_count
FROM TopCustomers tc
JOIN customer c ON tc.c_customer_id = c.c_customer_id
WHERE tc.sales_rank <= 50
ORDER BY tc.sales_rank;
