
WITH RECURSIVE top_customers AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        SUM(ws.ws_net_paid) AS total_spent
    FROM 
        customer c
    LEFT JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY 
        c.c_customer_sk, c.c_first_name, c.c_last_name
    HAVING 
        SUM(ws.ws_net_paid) IS NOT NULL
    ORDER BY 
        total_spent DESC
    LIMIT 10
),
customer_info AS (
    SELECT 
        cc.c_customer_sk,
        ca.ca_city,
        ca.ca_state,
        cd.cd_marital_status,
        cd.cd_income_band_sk,
        ROW_NUMBER() OVER (PARTITION BY cd.cd_marital_status ORDER BY tc.total_spent DESC) AS rank
    FROM 
        customer c
    JOIN 
        customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    JOIN 
        top_customers tc ON c.c_customer_sk = tc.c_customer_sk
),
sales_summary AS (
    SELECT 
        ws.ws_item_sk,
        SUM(ws.ws_quantity) AS total_quantity,
        SUM(ws.ws_net_paid) AS total_revenue,
        w.w_warehouse_name,
        ROW_NUMBER() OVER (PARTITION BY ws.ws_item_sk ORDER BY SUM(ws.ws_net_paid) DESC) AS item_rank
    FROM 
        web_sales ws
    JOIN 
        warehouse w ON ws.ws_warehouse_sk = w.w_warehouse_sk
    GROUP BY 
        ws.ws_item_sk, w.w_warehouse_name
)
SELECT 
    ci.c_first_name,
    ci.c_last_name,
    ci.ca_city,
    ci.ca_state,
    s.total_quantity,
    s.total_revenue
FROM 
    customer_info ci
INNER JOIN 
    sales_summary s ON ci.rank = s.item_rank
WHERE 
    (ci.cd_income_band_sk IS NULL OR ci.cd_income_band_sk NOT IN 
        (SELECT ib.ib_income_band_sk 
         FROM income_band ib 
         WHERE ib.ib_upper_bound >= 50000))
OR 
    EXISTS(SELECT 1 FROM store_returns sr 
           WHERE sr.sr_customer_sk = ci.c_customer_sk AND sr.sr_return_quantity > 0)
ORDER BY 
    s.total_revenue DESC;
