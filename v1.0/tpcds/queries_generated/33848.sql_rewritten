WITH RECURSIVE sales_cte AS (
    SELECT 
        ws_sold_date_sk,
        ws_item_sk,
        SUM(ws_quantity) AS total_sales,
        ROW_NUMBER() OVER (PARTITION BY ws_item_sk ORDER BY SUM(ws_quantity) DESC) AS rank
    FROM web_sales
    GROUP BY ws_sold_date_sk, ws_item_sk
),
customer_data AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        d.d_year,
        cd.cd_marital_status,
        COUNT(DISTINCT cd.cd_demo_sk) AS demo_count
    FROM customer c
    JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    JOIN date_dim d ON c.c_first_sales_date_sk = d.d_date_sk
    GROUP BY c.c_customer_sk, c.c_first_name, c.c_last_name, d.d_year, cd.cd_marital_status
), 
promotions_active AS (
    SELECT 
        DISTINCT p.p_item_sk,
        p.p_promo_name,
        CASE 
            WHEN cast('2002-10-01' as date) BETWEEN d.d_date AND d2.d_date THEN 'Active'
            ELSE 'Inactive'
        END AS status
    FROM promotion p
    JOIN date_dim d ON p.p_start_date_sk = d.d_date_sk
    JOIN date_dim d2 ON p.p_end_date_sk = d2.d_date_sk
)
SELECT 
    cd.c_customer_sk,
    cd.c_first_name,
    cd.c_last_name,
    s.total_sales,
    pa.promo_name,
    pa.status,
    i.i_item_desc,
    CASE 
        WHEN pa.status = 'Active' THEN 'Discount Available'
        ELSE 'No Discount'
    END AS discount_status
FROM customer_data cd
LEFT JOIN sales_cte s ON cd.c_customer_sk = s.ws_item_sk
LEFT JOIN promotions_active pa ON s.ws_item_sk = pa.p_item_sk
LEFT JOIN item i ON s.ws_item_sk = i.i_item_sk
WHERE cd.demo_count > 1
  AND (s.total_sales IS NULL OR s.total_sales > 100)
  AND (pa.status = 'Active' OR pa.status IS NULL)
ORDER BY cd.c_first_name, cd.c_last_name;