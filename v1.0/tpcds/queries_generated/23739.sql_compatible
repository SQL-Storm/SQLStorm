
WITH CustomerReturns AS (
    SELECT 
        cr.returning_customer_sk,
        COUNT(DISTINCT cr.order_number) AS total_catalog_returns,
        SUM(cr.return_quantity) AS total_return_quantity,
        SUM(cr.return_amt) AS total_return_amount
    FROM catalog_returns cr
    GROUP BY cr.returning_customer_sk
),
WebReturns AS (
    SELECT 
        wr.returning_customer_sk,
        COUNT(DISTINCT wr.order_number) AS total_web_returns,
        SUM(wr.return_quantity) AS total_web_return_quantity,
        SUM(wr.return_amt) AS total_web_return_amount
    FROM web_returns wr
    GROUP BY wr.returning_customer_sk
),
AggregatedReturns AS (
    SELECT 
        COALESCE(cr.returning_customer_sk, wr.returning_customer_sk) AS customer_sk,
        COALESCE(cr.total_catalog_returns, 0) AS total_catalog_returns,
        COALESCE(wr.total_web_returns, 0) AS total_web_returns,
        (COALESCE(cr.total_return_quantity, 0) + COALESCE(wr.total_web_return_quantity, 0)) AS total_return_quantity,
        (COALESCE(cr.total_return_amount, 0) + COALESCE(wr.total_web_return_amount, 0)) AS total_return_amount
    FROM CustomerReturns cr
    FULL OUTER JOIN WebReturns wr ON cr.returning_customer_sk = wr.returning_customer_sk
),
CustomerDemographics AS (
    SELECT 
        c.c_customer_sk,
        c.c_birth_year,
        CASE 
            WHEN cd.cd_gender = 'M' THEN 'Male'
            WHEN cd.cd_gender = 'F' THEN 'Female'
            ELSE 'Unknown'
        END AS gender,
        cd.cd_marital_status,
        cd.cd_purchase_estimate,
        d.d_year AS birth_year,
        COALESCE(d.d_month, 0) AS birth_month
    FROM customer c
    JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    JOIN date_dim d ON c.c_birth_year = d.d_year
)
SELECT 
    dem.c_customer_sk AS customer_sk,
    dem.gender,
    dem.cd_marital_status,
    dem.cd_purchase_estimate,
    ar.total_catalog_returns,
    ar.total_web_returns,
    ar.total_return_quantity,
    ar.total_return_amount,
    CASE 
        WHEN ar.total_return_amount > 1000 THEN 'High Value'
        WHEN ar.total_return_amount BETWEEN 500 AND 1000 THEN 'Moderate Value'
        ELSE 'Low Value'
    END AS return_value_category
FROM CustomerDemographics dem
LEFT JOIN AggregatedReturns ar ON dem.c_customer_sk = ar.customer_sk
WHERE (ar.total_return_quantity IS NOT NULL OR dem.cd_purchase_estimate > 500)
  AND (dem.gender = 'Male' OR (dem.cd_marital_status IS NULL))
ORDER BY ar.total_return_quantity DESC, dem.cd_purchase_estimate DESC
LIMIT 100;
