
WITH RankedReturns AS (
    SELECT 
        sr_returned_date_sk,
        sr_return_time_sk,
        sr_item_sk,
        sr_customer_sk,
        ROW_NUMBER() OVER (PARTITION BY sr_item_sk ORDER BY sr_return_quantity DESC) AS rn
    FROM 
        store_returns
),
CustomerGenderStats AS (
    SELECT 
        cd_gender,
        COUNT(*) AS total_customers,
        AVG(cd_purchase_estimate) AS avg_purchase_estimate
    FROM 
        customer_demographics
    GROUP BY 
        cd_gender
),
SalesSummary AS (
    SELECT 
        ws_bill_customer_sk,
        SUM(ws_net_paid) AS total_spent,
        COUNT(*) AS total_purchases,
        MAX(ws_sold_date_sk) AS last_purchase_date
    FROM 
        web_sales
    GROUP BY 
        ws_bill_customer_sk
),
ItemDetails AS (
    SELECT 
        i_item_sk,
        i_item_desc,
        CASE 
            WHEN i_current_price IS NULL THEN 'Unknown Price'
            ELSE CAST(i_current_price AS VARCHAR)
        END AS formatted_price
    FROM 
        item
    WHERE 
        i_rec_end_date IS NULL
),
StoreItemReturns AS (
    SELECT 
        sr_item_sk,
        SUM(sr_return_quantity) AS total_returns
    FROM 
        store_returns
    GROUP BY 
        sr_item_sk
)
SELECT 
    ca.ca_address_id,
    ca.ca_city,
    ci.cd_gender,
    cs.total_spent,
    COALESCE(ir.total_returns, 0) AS total_returns,
    RANK() OVER (PARTITION BY ci.cd_gender ORDER BY cs.total_spent DESC) AS spending_rank,
    i.formatted_price
FROM 
    customer_address ca
JOIN 
    customer c ON ca.ca_address_sk = c.c_current_addr_sk
JOIN 
    CustomerGenderStats ci ON ci.cd_gender = 
        (SELECT cd_gender FROM customer_demographics WHERE cd_demo_sk = c.c_current_cdemo_sk)
LEFT JOIN 
    SalesSummary cs ON cs.ws_bill_customer_sk = c.c_customer_sk
LEFT JOIN 
    StoreItemReturns ir ON ir.sr_item_sk IN (SELECT i_item_sk FROM RankedReturns WHERE rn = 1)
LEFT JOIN 
    ItemDetails i ON i.i_item_sk = ir.sr_item_sk
WHERE 
    ca.ca_state <> 'NY' 
    AND ci.total_customers > 10
GROUP BY 
    ca.ca_address_id,
    ca.ca_city,
    ci.cd_gender,
    cs.total_spent,
    ir.total_returns,
    i.formatted_price
ORDER BY 
    spending_rank, total_returns DESC;
