
WITH RECURSIVE SalesCTE AS (
    SELECT 
        ws_order_number,
        ws_item_sk,
        ws_sales_price,
        ws_quantity,
        ws_net_profit,
        ROW_NUMBER() OVER (PARTITION BY ws_order_number ORDER BY ws_net_profit DESC) AS rn
    FROM 
        web_sales
    WHERE 
        ws_sold_date_sk BETWEEN 2451537 AND 2451547
), 
SalesSum AS (
    SELECT 
        ws_order_number,
        SUM(ws_net_profit) AS total_profit
    FROM 
        web_sales
    WHERE 
        ws_sold_date_sk BETWEEN 2451537 AND 2451547
    GROUP BY 
        ws_order_number
), 
TopItems AS (
    SELECT 
        ss_order_number,
        ss_item_sk,
        ss_net_profit,
        RANK() OVER (ORDER BY ss_net_profit DESC) AS item_rank
    FROM 
        store_sales
    WHERE 
        ss_sold_date_sk IN (SELECT ws_sold_date_sk FROM web_sales WHERE ws_net_profit IS NOT NULL)
), 
CustomerCTE AS (
    SELECT 
        c_customer_sk,
        c_customer_id,
        COALESCE(cd_demo_sk, hd_demo_sk) AS demographic_sk,
        c_current_addr_sk
    FROM 
        customer
    LEFT JOIN 
        customer_demographics ON c_current_cdemo_sk = cd_demo_sk
    LEFT JOIN 
        household_demographics ON c_current_hdemo_sk = hd_demo_sk
)
SELECT 
    ca.city AS customer_city,
    COUNT(DISTINCT c.customer_id) AS total_customers,
    SUM(p.promo_cost) AS total_promotion_cost,
    SUM(s.total_profit) AS total_sales_profit,
    AVG(CASE WHEN ti.item_rank <= 10 THEN s.ws_net_profit ELSE NULL END) AS avg_top_item_profit
FROM 
    CustomerCTE c
JOIN 
    SalesCTE s ON c.customer_id = s.ws_order_number
JOIN 
    promotion p ON s.ws_order_number = p.promo_sk
JOIN 
    customer_address ca ON ca.ca_address_sk = c.c_current_addr_sk
LEFT JOIN 
    TopItems ti ON ti.ss_order_number = s.ws_order_number
GROUP BY 
    ca.city, c.customer_id
HAVING 
    COUNT(DISTINCT c.customer_id) > 100
ORDER BY 
    total_sales_profit DESC
FETCH FIRST 50 ROWS ONLY;
