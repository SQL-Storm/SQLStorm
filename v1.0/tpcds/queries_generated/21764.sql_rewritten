WITH RankedStores AS (
    SELECT 
        s_store_sk,
        s_store_name,
        s_state,
        RANK() OVER (PARTITION BY s_state ORDER BY s_number_employees DESC) AS employee_rank
    FROM store
    WHERE s_state IS NOT NULL
), QualifiedReturns AS (
    SELECT
        sr_store_sk,
        SUM(sr_return_quantity) AS total_return_quantity,
        SUM(sr_return_amt_inc_tax) AS total_return_amt
    FROM store_returns
    GROUP BY sr_store_sk
    HAVING SUM(sr_return_quantity) IS NOT NULL AND SUM(sr_return_amt_inc_tax) <= 1000
), DateSales AS (
    SELECT 
        d_date_sk,
        d_year,
        SUM(ws_net_profit) AS total_profit
    FROM web_sales
    JOIN date_dim ON ws_sold_date_sk = d_date_sk
    GROUP BY d_date_sk, d_year
), LowIncomeCustomers AS (
    SELECT 
        c_customer_sk, 
        cd_demo_sk
    FROM customer 
    JOIN customer_demographics ON c_current_cdemo_sk = cd_demo_sk
    WHERE cd_purchase_estimate < 1000
), ItemPopularity AS (
    SELECT 
        ws_item_sk,
        COUNT(ws_order_number) AS popularity_count
    FROM web_sales
    GROUP BY ws_item_sk
), TrendAnalysis AS (
    SELECT 
        d_year,
        AVG(total_profit) AS avg_profit,
        (SELECT MAX(total_profit) FROM DateSales ds WHERE ds.d_year = d.d_year) AS peak_profit
    FROM DateSales d
    GROUP BY d_year
)
SELECT 
    r.s_store_name,
    r.s_state,
    q.total_return_quantity,
    q.total_return_amt,
    ti.ws_item_sk,
    ti.popularity_count,
    ta.avg_profit,
    ta.peak_profit
FROM RankedStores r
LEFT JOIN QualifiedReturns q ON r.s_store_sk = q.s_store_sk
JOIN ItemPopularity ti ON ti.ws_item_sk IN (
    SELECT i_item_sk FROM item
    WHERE i_current_price < 50
)
JOIN TrendAnalysis ta ON ta.d_year = EXTRACT(YEAR FROM cast('2002-10-01' as date))
WHERE r.employee_rank <= 5
  AND q.total_return_quantity IS NOT NULL
ORDER BY r.s_store_name ASC, ta.peak_profit DESC;