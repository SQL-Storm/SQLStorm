
WITH CustomerAnalysis AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_education_status,
        SUM(ss.ss_quantity) AS total_purchases,
        SUM(ss.ss_net_paid) AS total_spent,
        COUNT(DISTINCT ss.ss_ticket_number) AS purchase_count,
        MIN(ss.ss_sold_date_sk) AS first_purchase,
        MAX(ss.ss_sold_date_sk) AS last_purchase,
        DATE_PART('day', MAX(ss.ss_sold_date_sk) - MIN(ss.ss_sold_date_sk)) AS days_between_purchases
    FROM 
        customer c
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN 
        store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    WHERE 
        cd.cd_gender = 'M' AND 
        cd.cd_marital_status = 'S' AND 
        cd.cd_education_status IN ('Bachelors', 'Masters')
    GROUP BY 
        c.c_customer_sk, c.c_first_name, c.c_last_name, cd.cd_gender, cd.cd_marital_status, cd.cd_education_status
),
HighValueCustomers AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        ca.total_purchases,
        ca.total_spent,
        CASE 
            WHEN ca.total_spent > 1000 THEN 'High Value'
            WHEN ca.total_spent BETWEEN 500 AND 1000 THEN 'Medium Value'
            ELSE 'Low Value'
        END AS customer_value_segment
    FROM 
        CustomerAnalysis ca
    JOIN 
        customer c ON ca.c_customer_sk = c.c_customer_sk
)
SELECT 
    hvc.c_customer_sk, 
    hvc.c_first_name, 
    hvc.c_last_name,
    hvc.total_purchases, 
    hvc.total_spent, 
    hvc.customer_value_segment 
FROM 
    HighValueCustomers hvc
WHERE 
    hvc.customer_value_segment = 'High Value'
ORDER BY 
    hvc.total_spent DESC
FETCH FIRST 10 ROWS ONLY;
