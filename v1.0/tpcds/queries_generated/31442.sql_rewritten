WITH RECURSIVE sales_growth AS (
    SELECT 
        ws_sold_date_sk,
        COUNT(ws_order_number) AS total_orders,
        SUM(ws_sales_price) AS total_sales,
        YEAR(d_date) AS year,
        ROW_NUMBER() OVER (PARTITION BY YEAR(d_date) ORDER BY ws_sold_date_sk) AS rn
    FROM 
        web_sales
    JOIN 
        date_dim ON ws_sold_date_sk = d_date_sk
    GROUP BY 
        ws_sold_date_sk, YEAR(d_date)
    UNION ALL
    SELECT 
        s.ws_sold_date_sk,
        COUNT(s.ws_order_number) + sg.total_orders,
        SUM(s.ws_sales_price) + sg.total_sales,
        YEAR(d.d_date) AS year,
        ROW_NUMBER() OVER (PARTITION BY YEAR(d.d_date) ORDER BY s.ws_sold_date_sk) AS rn
    FROM 
        web_sales s
    JOIN 
        sales_growth sg ON s.ws_sold_date_sk = sg.ws_sold_date_sk + INTERVAL 1 YEAR
    JOIN 
        date_dim d ON s.ws_sold_date_sk = d.d_date_sk
    GROUP BY 
        s.ws_sold_date_sk
),
customer_sales AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        SUM(ws.ws_ext_sales_price) AS total_sales,
        COUNT(DISTINCT ws.ws_order_number) AS total_orders
    FROM 
        customer c
    JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY 
        c.c_customer_sk, c.c_first_name, c.c_last_name
),
top_customers AS (
    SELECT 
        cs.c_customer_sk,
        cs.c_first_name,
        cs.c_last_name,
        cs.total_sales,
        cs.total_orders,
        RANK() OVER (ORDER BY cs.total_sales DESC) AS sales_rank
    FROM 
        customer_sales cs
)
SELECT 
    tc.c_first_name,
    tc.c_last_name,
    tc.total_sales,
    tc.total_orders,
    sg.total_orders AS growth_orders,
    sg.total_sales AS growth_sales,
    CASE 
        WHEN tc.total_sales > 10000 THEN 'High Value'
        WHEN tc.total_sales BETWEEN 5000 AND 10000 THEN 'Medium Value'
        ELSE 'Low Value'
    END AS customer_value,
    COALESCE(CAST(tc.total_orders AS VARCHAR), 'No Orders') AS Order_Info
FROM 
    top_customers tc
LEFT JOIN 
    sales_growth sg ON YEAR(cast('2002-10-01' as date)) - 1 = sg.year 
WHERE 
    tc.sales_rank <= 10
ORDER BY 
    tc.total_sales DESC;