
WITH RECURSIVE SalesHierarchy AS (
    SELECT ss_store_sk,
           SUM(ss_net_paid) AS total_sales,
           ROW_NUMBER() OVER (PARTITION BY ss_store_sk ORDER BY SUM(ss_net_paid) DESC) AS sales_rank
    FROM store_sales
    GROUP BY ss_store_sk
    UNION ALL
    SELECT s.s_store_sk,
           sh.total_sales * 1.1 AS total_sales,  
           ROW_NUMBER() OVER (PARTITION BY s.s_store_sk ORDER BY sh.total_sales * 1.1 DESC) AS sales_rank
    FROM SalesHierarchy sh
    JOIN store s ON s.s_store_sk = sh.ss_store_sk
    WHERE sh.sales_rank <= 5
)
SELECT ca.city,
       COUNT(DISTINCT c.c_customer_sk) AS unique_customers,
       SUM(ws.ws_net_profit) AS total_profit,
       AVG(cd.cd_purchase_estimate) AS avg_purchase_estimate,
       MAX(ws.ws_sales_price) AS max_sales_price,
       COUNT(NULLIF(ws.ws_order_number, 0)) AS orders_with_items,
       STRING_AGG(DISTINCT c.c_email_address, '; ') AS customer_emails
FROM web_sales ws
LEFT JOIN customer c ON ws.ws_ship_customer_sk = c.c_customer_sk
LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
LEFT JOIN customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
LEFT JOIN SalesHierarchy sh ON sh.ss_store_sk = ws.ws_warehouse_sk
WHERE ws.ws_sold_date_sk BETWEEN (SELECT MIN(d_date_sk) FROM date_dim WHERE d_year = 2000)
                              AND (SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = 2001)
AND EXISTS (SELECT 1 FROM store s WHERE s.s_store_sk = ws.ws_warehouse_sk AND s.s_number_employees > 10)
GROUP BY ca.city
HAVING SUM(ws.ws_net_profit) > 10000
ORDER BY total_profit DESC
LIMIT 10;
