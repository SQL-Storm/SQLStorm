
WITH RecursiveTax AS (
    SELECT c_customer_sk,
           SUM(CASE
               WHEN ws_ext_tax > 0 THEN ws_ext_tax
               ELSE 0 END) AS total_tax,
           SUM(ws_net_profit) AS total_profit
    FROM web_sales
    GROUP BY c_customer_sk
),
FilteredReturns AS (
    SELECT sr_customer_sk,
           COUNT(sr_ticket_number) AS return_count,
           SUM(sr_return_amt) AS total_returned_amt,
           SUM(sr_return_tax) AS total_return_tax
    FROM store_returns
    WHERE sr_returned_date_sk BETWEEN 1 AND 30
    GROUP BY sr_customer_sk
)
SELECT ca.city AS address_city,
       ca.state AS address_state,
       COALESCE(rt.return_count, 0) AS return_count,
       COALESCE(rt.total_returned_amt, 0) AS total_returned_amt,
       COALESCE(rt.total_return_tax, 0) AS total_return_tax,
       CASE 
           WHEN tt.total_tax IS NULL THEN 'No Tax'
           ELSE 'Has Tax'
       END AS tax_status,
       tt.total_profit,
       ROW_NUMBER() OVER (PARTITION BY ca.city, ca.state ORDER BY tt.total_profit DESC) AS city_state_rank
FROM customer c
JOIN customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
LEFT JOIN RecursiveTax tt ON c.c_customer_sk = tt.c_customer_sk
LEFT JOIN FilteredReturns rt ON c.c_customer_sk = rt.sr_customer_sk
WHERE ca.city IS NOT NULL
  AND ca.state IN ('CA', 'NY')
  AND (tt.total_profit < 1000 OR tt.total_profit IS NULL)
  AND (rt.return_count >= 5 OR rt.return_count IS NULL)
ORDER BY ca.state, return_count DESC, total_returned_amt DESC;
