
WITH RECURSIVE SalesData AS (
    SELECT 
        ws_sold_date_sk,
        ws_item_sk,
        ws_order_number,
        SUM(ws_ext_sales_price) AS total_sales,
        ROW_NUMBER() OVER (PARTITION BY ws_item_sk ORDER BY ws_sold_date_sk DESC) AS sales_rank
    FROM web_sales
    WHERE ws_sold_date_sk >= (SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = 2023) - 30
    GROUP BY ws_sold_date_sk, ws_item_sk, ws_order_number
),
RankedSales AS (
    SELECT 
        item.i_item_id,
        item.i_product_name,
        sd.total_sales,
        sd.sales_rank
    FROM SalesData sd
    JOIN item ON sd.ws_item_sk = item.i_item_sk
    WHERE sd.sales_rank = 1
),
CustomerReturns AS (
    SELECT 
        cr_returning_customer_sk,
        SUM(cr_return_amount) AS total_return_amount,
        COUNT(DISTINCT cr_order_number) AS total_returned_items
    FROM catalog_returns
    GROUP BY cr_returning_customer_sk
),
TopCustomers AS (
    SELECT 
        c.c_customer_id,
        COUNT(DISTINCT w.ws_order_number) AS total_orders,
        COALESCE(SUM(cr.total_return_amount), 0) AS total_return_amount,
        NTILE(5) OVER (ORDER BY COUNT(DISTINCT w.ws_order_number)) AS income_band
    FROM customer c
    LEFT JOIN web_sales w ON c.c_customer_sk = w.ws_bill_customer_sk
    LEFT JOIN CustomerReturns cr ON c.c_customer_sk = cr.cr_returning_customer_sk
    GROUP BY c.c_customer_id
)
SELECT 
    r.i_product_name,
    SUM(s.total_sales) AS total_sales,
    tc.total_orders,
    tc.total_return_amount
FROM RankedSales r
LEFT JOIN TopCustomers tc ON r.i_item_id = tc.c_customer_id
WHERE (tc.total_return_amount IS NULL OR tc.total_return_amount < 1000)
GROUP BY r.i_product_name, tc.total_orders, tc.total_return_amount
ORDER BY total_sales DESC
LIMIT 10;
