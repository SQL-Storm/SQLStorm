
WITH customer_summary AS (
    SELECT 
        c.c_customer_sk,
        c.c_current_cdemo_sk,
        cd.cd_gender,
        cd.cd_marital_status,
        SUM(ws.ws_ext_sales_price) AS total_sales,
        COUNT(DISTINCT ws.ws_order_number) AS num_orders,
        COUNT(DISTINCT ws.ws_item_sk) AS unique_items_purchased
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    WHERE 
        ws.ws_sold_date_sk IN (SELECT d_date_sk FROM date_dim WHERE d_year = 2023)
    GROUP BY 
        c.c_customer_sk, c.c_current_cdemo_sk, cd.cd_gender, cd.cd_marital_status
), 
ranked_customers AS (
    SELECT 
        cs.c_customer_sk,
        cs.cd_gender,
        cs.cd_marital_status,
        cs.total_sales,
        cs.num_orders,
        RANK() OVER (PARTITION BY cs.cd_gender ORDER BY cs.total_sales DESC) AS sales_rank
    FROM 
        customer_summary cs
),
top_customers AS (
    SELECT 
        rc.*, 
        CASE 
            WHEN rc.sales_rank <= 10 THEN 'Top 10%'
            ELSE 'Other'
        END AS customer_category
    FROM 
        ranked_customers rc
)
SELECT 
    tc.c_customer_sk,
    tc.cd_gender,
    tc.cd_marital_status,
    tc.total_sales,
    tc.num_orders,
    tc.customer_category,
    COALESCE(SUM(sr.sr_return_quantity), 0) AS total_returns,
    AVG(ws.ws_net_profit) AS avg_net_profit
FROM 
    top_customers tc
LEFT JOIN 
    store_returns sr ON tc.c_customer_sk = sr.sr_customer_sk
LEFT JOIN 
    web_sales ws ON tc.c_customer_sk = ws.ws_bill_customer_sk
GROUP BY 
    tc.c_customer_sk, tc.cd_gender, tc.cd_marital_status, tc.total_sales, tc.num_orders, tc.customer_category
HAVING 
    total_sales > 1000 AND total_returns < 5
ORDER BY 
    tc.total_sales DESC;
