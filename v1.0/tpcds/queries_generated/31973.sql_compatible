
WITH RECURSIVE Sales_CTE AS (
    SELECT 
        ws_item_sk, 
        SUM(ws_ext_sales_price) AS total_sales, 
        COUNT(ws_order_number) AS order_count,
        ROW_NUMBER() OVER (PARTITION BY ws_item_sk ORDER BY SUM(ws_ext_sales_price) DESC) AS rn
    FROM 
        web_sales
    GROUP BY 
        ws_item_sk
    HAVING 
        SUM(ws_ext_sales_price) > 1000
), 
Item_Info AS (
    SELECT 
        i.i_item_id, 
        i.i_item_desc, 
        COALESCE(st.total_sales, 0) AS item_total_sales,
        COALESCE(st.order_count, 0) AS item_order_count
    FROM 
        item i
    LEFT JOIN 
        Sales_CTE st ON i.i_item_sk = st.ws_item_sk
)
SELECT 
    ii.i_item_id, 
    ii.i_item_desc, 
    ii.item_total_sales, 
    ii.item_order_count,
    dc.d_year,
    COUNT(DISTINCT cs.cs_order_number) AS catalog_sales_count,
    SUM(cs.cs_net_profit) AS total_catalog_profit,
    RANK() OVER (PARTITION BY ii.i_item_id ORDER BY ii.item_total_sales DESC) AS sales_rank
FROM 
    Item_Info ii
LEFT JOIN 
    catalog_sales cs ON ii.i_item_id = cs.cs_item_sk
JOIN 
    date_dim dc ON cs.cs_sold_date_sk = dc.d_date_sk
WHERE 
    dc.d_year = 2023
GROUP BY 
    ii.i_item_id, ii.i_item_desc, ii.item_total_sales, ii.item_order_count, dc.d_year
HAVING 
    ii.item_order_count > 5
ORDER BY 
    total_catalog_profit DESC
FETCH FIRST 10 ROWS ONLY;
