WITH SalesData AS (
    SELECT
        cs.cs_sold_date_sk,
        SUM(cs.cs_sales_price) AS total_sales,
        COUNT(DISTINCT cs.cs_order_number) AS order_count,
        SUM(CASE WHEN cs.cs_ext_discount_amt > 0 THEN cs.cs_ext_discount_amt ELSE 0 END) AS total_discount,
        SUM(COALESCE(ws.ws_net_profit, 0)) AS web_net_profit
    FROM
        catalog_sales cs
    LEFT JOIN
        web_sales ws ON cs.cs_order_number = ws.ws_order_number
    GROUP BY
        cs.cs_sold_date_sk
),
RankedSales AS (
    SELECT
        sd.cs_sold_date_sk,
        sd.total_sales,
        sd.order_count,
        sd.total_discount,
        RANK() OVER (ORDER BY sd.total_sales DESC) AS sales_rank
    FROM
        SalesData sd
),
CustomerInfo AS (
    SELECT
        c.c_customer_id,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_purchase_estimate,
        DENSE_RANK() OVER (PARTITION BY cd.cd_gender ORDER BY cd.cd_purchase_estimate DESC) AS gender_purchase_rank
    FROM
        customer c
    JOIN
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    WHERE
        cd.cd_purchase_estimate IS NOT NULL
        AND cd.cd_gender IS NOT NULL
)
SELECT
    r.sales_rank,
    ci.c_customer_id,
    ci.c_first_name,
    ci.c_last_name,
    ci.cd_gender,
    ci.cd_marital_status,
    r.total_sales,
    r.order_count,
    r.total_discount,
    COALESCE(MAX(e.web_net_profit), 0) AS max_web_profit,
    COUNT(DISTINCT e.c_customer_id) FILTER (WHERE e.cd_marital_status = 'M') AS married_customers
FROM
    RankedSales r
JOIN
    CustomerInfo ci ON r.sales_rank = (SELECT MIN(sales_rank) FROM RankedSales) 
LEFT JOIN
    (SELECT
        distinct ci.c_customer_id,
        ci.cd_marital_status,
        SUM(ws.ws_net_profit) AS web_net_profit
    FROM
        web_sales ws
    JOIN
        CustomerInfo ci ON ws.ws_bill_customer_sk = ci.c_customer_id
    WHERE
        ws.ws_net_profit IS NOT NULL
    GROUP BY
        ci.c_customer_id, ci.cd_marital_status) e ON ci.c_customer_id = e.c_customer_id
GROUP BY
    r.sales_rank, ci.c_customer_id, ci.c_first_name, ci.c_last_name, ci.cd_gender, ci.cd_marital_status, r.total_sales, r.order_count, r.total_discount
HAVING
    r.total_sales > (SELECT AVG(total_sales) FROM RankedSales)
ORDER BY
    r.sales_rank, ci.c_first_name;