
WITH RECURSIVE sales_data AS (
    SELECT 
        ws_sold_date_sk, 
        ws_item_sk, 
        ws_quantity, 
        ws_sales_price, 
        1 AS level
    FROM 
        web_sales
    WHERE 
        ws_sold_date_sk BETWEEN 
            (SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = 2022) - 30 
            AND (SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = 2022)
    UNION ALL
    SELECT 
        ws_sold_date_sk, 
        ws_item_sk, 
        ws_quantity, 
        ws_sales_price * 0.9 AS ws_sales_price, 
        level + 1
    FROM 
        web_sales
    JOIN 
        sales_data ON web_sales.ws_item_sk = sales_data.ws_item_sk
    WHERE 
        sales_data.level < 5
),
customer_data AS (
    SELECT 
        c.c_customer_sk,
        SUM(COALESCE(w.ws_net_paid, 0)) AS total_spent,
        COUNT(DISTINCT w.ws_order_number) AS order_count
    FROM 
        customer c
    LEFT JOIN 
        web_sales w ON c.c_customer_sk = w.ws_ship_customer_sk
    GROUP BY 
        c.c_customer_sk
),
sales_summary AS (
    SELECT 
        s.ws_item_sk,
        SUM(s.ws_quantity) AS total_quantity,
        SUM(s.ws_quantity * s.ws_sales_price) AS total_sales
    FROM 
        sales_data s
    GROUP BY 
        s.ws_item_sk
),
top_products AS (
    SELECT 
        i.i_item_id, 
        ps.total_quantity,
        ps.total_sales,
        RANK() OVER (ORDER BY ps.total_sales DESC) AS sales_rank
    FROM 
        sales_summary ps
    JOIN 
        item i ON ps.ws_item_sk = i.i_item_sk
)
SELECT 
    ca.ca_city,
    ca.ca_state,
    SUM(cd.total_spent) AS total_customer_spending,
    COUNT(DISTINCT cd.c_customer_sk) AS customer_count,
    tp.i_item_id,
    tp.total_sales
FROM 
    customer_data cd
JOIN 
    customer_address ca ON cd.c_customer_sk = ca.ca_customer_sk
JOIN 
    top_products tp ON tp.total_sales > 100000
WHERE 
    ca.ca_state IN ('CA', 'NY')
GROUP BY 
    ca.ca_city, 
    ca.ca_state, 
    tp.i_item_id
HAVING 
    SUM(cd.total_spent) > 10000
ORDER BY 
    total_customer_spending DESC, 
    tp.total_sales DESC;
