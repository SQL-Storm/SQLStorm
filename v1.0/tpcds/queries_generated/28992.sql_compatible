
WITH processed_addresses AS (
    SELECT
        ca_address_sk,
        CONCAT(ca_street_number, ' ', ca_street_name, ' ', ca_street_type) AS full_address,
        UPPER(ca_city) AS city_upper,
        LOWER(ca_state) AS state_lower,
        CONCAT(TRIM(ca_street_name), ' ', ca_suite_number) AS street_with_suite
    FROM
        customer_address
),
demographic_analysis AS (
    SELECT
        cd_gender,
        COUNT(DISTINCT c_customer_sk) AS customer_count,
        AVG(cd_purchase_estimate) AS avg_purchase_estimate
    FROM
        customer_demographics
    JOIN customer ON customer.c_current_cdemo_sk = customer_demographics.cd_demo_sk
    GROUP BY
        cd_gender
),
date_info AS (
    SELECT
        d_date,
        d_day_name,
        d_month_seq,
        d_year
    FROM
        date_dim
    WHERE
        d_date = '2002-10-01'
),
joint_analysis AS (
    SELECT
        a.ca_address_sk,
        a.full_address,
        a.city_upper,
        a.state_lower,
        d.avg_purchase_estimate,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cur.d_day_name,
        cur.d_month_seq,
        cur.d_year
    FROM
        processed_addresses a
    JOIN customer c ON a.ca_address_sk = c.c_current_addr_sk
    JOIN demographic_analysis cd ON cd.cd_gender = c.c_gender
    CROSS JOIN date_info cur
)
SELECT
    city_upper,
    COUNT(*) AS total_customers,
    AVG(avg_purchase_estimate) AS avg_purchase_per_city,
    STRING_AGG(CONCAT(c_first_name, ' ', c_last_name), ', ') AS customer_names
FROM
    joint_analysis
GROUP BY
    city_upper
ORDER BY
    total_customers DESC;
