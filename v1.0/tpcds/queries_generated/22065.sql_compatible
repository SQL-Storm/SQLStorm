
WITH RankedSales AS (
    SELECT 
        ws.ws_item_sk,
        ws.ws_order_number,
        ws.ws_sold_date_sk,
        ROW_NUMBER() OVER (PARTITION BY ws.ws_item_sk ORDER BY ws.ws_net_profit DESC) AS rn
    FROM 
        web_sales ws
    WHERE 
        ws.ws_net_profit > (SELECT AVG(ws2.ws_net_profit) FROM web_sales ws2)
),
CustomerReturns AS (
    SELECT 
        cr.refunded_customer_sk,
        SUM(cr.cr_return_amount) AS total_return_amount,
        COUNT(cr.cr_order_number) AS total_returns
    FROM 
        catalog_returns cr
    GROUP BY 
        cr.refunded_customer_sk
),
StoreSalesAggregate AS (
    SELECT 
        ss.ss_item_sk,  
        SUM(ss.ss_net_paid) AS total_net_paid,
        AVG(ss.ss_sales_price) AS avg_sales_price,
        MAX(ss.ss_net_profit) AS max_net_profit,
        MIN(ss.ss_net_paid) AS min_net_paid
    FROM 
        store_sales ss
    GROUP BY 
        ss.ss_item_sk
)
SELECT 
    ca.ca_address_id,
    cd.cd_gender,
    cs.total_net_paid,
    cr.total_returns,
    COALESCE(cr.total_returns, 0) AS total_returns_coalesced,
    DATE(DATE_ADD(DATE_ADD(d.d_date, INTERVAL w.w_gmt_offset HOUR), INTERVAL 1 SECOND)) AS adjusted_date,
    p.p_promo_name
FROM 
    customer c
LEFT JOIN 
    customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
LEFT JOIN 
    customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
LEFT JOIN 
    StoreSalesAggregate cs ON cs.ss_item_sk IN (SELECT DISTINCT rs.ws_item_sk FROM RankedSales rs WHERE rs.rn = 1)
LEFT JOIN 
    date_dim d ON d.d_date_sk = (SELECT MAX(d_date_sk) FROM date_dim WHERE d.d_date <= CURRENT_DATE)
LEFT JOIN 
    promotion p ON p.p_item_sk = cs.ss_item_sk AND p.p_discount_active = 'Y'
LEFT JOIN 
    warehouse w ON w.w_warehouse_sk = (SELECT MAX(w_warehouse_sk) FROM warehouse)
LEFT JOIN 
    CustomerReturns cr ON cr.refunded_customer_sk = c.c_customer_sk
WHERE 
    cs.total_net_paid IS NOT NULL
    AND (cd.cd_marital_status = 'M' OR cd.cd_marital_status IS NULL)
    AND (cd.cd_dep_count > 2 OR (cd.cd_dep_count IS NULL AND c.c_birth_month = 12))
ORDER BY 
    cs.total_net_paid DESC
LIMIT 100;
