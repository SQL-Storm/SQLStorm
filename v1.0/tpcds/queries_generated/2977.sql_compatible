
WITH customer_stats AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_purchase_estimate,
        COUNT(DISTINCT CASE WHEN sr_return_quantity IS NOT NULL THEN sr_ticket_number END) AS return_count,
        SUM(COALESCE(sr_return_amt, 0)) AS total_return_amt,
        COUNT(DISTINCT ws_order_number) AS web_order_count,
        SUM(ws_net_profit) AS web_total_profit
    FROM customer c
    JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN store_returns sr ON c.c_customer_sk = sr.sr_customer_sk
    LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    WHERE cd.cd_purchase_estimate > 1000
    GROUP BY c.c_customer_sk, c.c_first_name, c.c_last_name, cd.cd_gender, cd.cd_marital_status, cd.cd_purchase_estimate
),
item_ranks AS (
    SELECT 
        i.i_item_sk,
        i.i_item_id,
        i.i_product_name,
        RANK() OVER (PARTITION BY i.i_category ORDER BY i.i_current_price DESC) AS price_rank
    FROM item i
    WHERE i.i_rec_start_date IS NOT NULL AND i.i_rec_end_date IS NULL
),
top_items AS (
    SELECT 
        ir.i_item_sk,
        ir.i_item_id,
        ir.i_product_name
    FROM item_ranks ir
    WHERE ir.price_rank <= 10
)
SELECT 
    cs.c_customer_sk,
    cs.c_first_name,
    cs.c_last_name,
    cs.cd_gender,
    cs.cd_marital_status,
    cs.cd_purchase_estimate,
    cs.return_count,
    cs.total_return_amt,
    cs.web_order_count,
    cs.web_total_profit,
    ti.i_item_id,
    ti.i_product_name
FROM customer_stats cs
JOIN top_items ti ON cs.c_customer_sk = (SELECT c.c_customer_sk FROM customer c WHERE c.c_current_hdemo_sk IN (SELECT hd.hd_demo_sk FROM household_demographics hd WHERE hd.hd_income_band_sk IS NOT NULL))
WHERE cs.return_count > 2
ORDER BY cs.web_total_profit DESC
FETCH FIRST 50 ROWS ONLY;
