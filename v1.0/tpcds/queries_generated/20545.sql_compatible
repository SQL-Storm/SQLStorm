
WITH RankedStores AS (
    SELECT 
        s_store_id,
        s_store_name,
        ROW_NUMBER() OVER (PARTITION BY s_state ORDER BY s_number_employees DESC) AS employee_rank,
        SUM(ss_net_profit) OVER (PARTITION BY s_store_sk) AS total_net_profit
    FROM store
    LEFT JOIN store_sales ON s_store_sk = ss_store_sk AND ss_sold_date_sk = (
        SELECT MAX(ss_sold_date_sk)
        FROM store_sales
        WHERE ss_store_sk = s_store_sk
    )
    GROUP BY s_store_id, s_store_name, s_store_sk, s_state, s_number_employees
),
PreferentialCustomers AS (
    SELECT 
        c_customer_id,
        c_first_name,
        c_last_name,
        c_preferred_cust_flag,
        cd_gender,
        cd_marital_status,
        COUNT(DISTINCT ws_order_number) AS order_count,
        MAX(ws_net_paid_inc_tax) AS max_spent
    FROM customer
    JOIN customer_demographics ON c_current_cdemo_sk = cd_demo_sk
    LEFT JOIN web_sales ON ws_bill_customer_sk = c_customer_sk
    WHERE c_preferred_cust_flag = 'Y' OR (cd_gender = 'M' AND cd_marital_status = 'S')
    GROUP BY c_customer_id, c_first_name, c_last_name, c_preferred_cust_flag, cd_gender, cd_marital_status
    HAVING COUNT(DISTINCT ws_order_number) > 1 AND MAX(ws_net_paid_inc_tax) IS NOT NULL
),
SalesSummary AS (
    SELECT 
        d_year,
        COUNT(DISTINCT ws_order_number) AS total_orders,
        SUM(ws_net_profit) AS total_profit,
        AVG(ws_net_paid_inc_tax) AS avg_order_value
    FROM web_sales
    JOIN date_dim ON ws_sold_date_sk = d_date_sk
    GROUP BY d_year
)
SELECT 
    rs.s_store_id,
    rs.s_store_name,
    rs.total_net_profit,
    pc.c_customer_id,
    pc.c_first_name,
    pc.c_last_name,
    ss.d_year,
    ss.total_orders,
    ss.total_profit,
    ss.avg_order_value
FROM RankedStores rs
FULL OUTER JOIN PreferentialCustomers pc ON rs.employee_rank = 1 OR pc.order_count > 10
JOIN SalesSummary ss ON ss.total_profit > 0
WHERE (rs.total_net_profit IS NOT NULL OR pc.order_count IS NOT NULL) 
  AND COALESCE(pc.order_count, 0) BETWEEN 5 AND 20
ORDER BY rs.total_net_profit DESC, pc.max_spent DESC, ss.d_year DESC
LIMIT 100 OFFSET 10;
