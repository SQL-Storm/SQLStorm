
WITH AddressParts AS (
    SELECT 
        ca_address_id,
        TRIM(CONCAT(ca_street_number, ' ', ca_street_name, ' ', ca_street_type)) AS full_address,
        ca_city,
        ca_state,
        ca_zip,
        ca_country
    FROM 
        customer_address
),
Demographics AS (
    SELECT 
        cd_demo_sk,
        cd_gender,
        cd_marital_status,
        cd_education_status,
        cd_purchase_estimate,
        cd_credit_rating
    FROM 
        customer_demographics
),
Customers AS (
    SELECT 
        c_customer_sk,
        TRIM(CONCAT(c_first_name, ' ', c_last_name)) AS full_name,
        c_email_address,
        ca_address_id,
        cd_demo_sk
    FROM 
        customer 
    JOIN 
        AddressParts ON c_current_addr_sk = ca_address_sk
),
EnhancedCustomerInfo AS (
    SELECT 
        c.c_customer_sk,
        c.full_name,
        c.c_email_address,
        a.full_address,
        d.cd_gender,
        d.cd_marital_status,
        d.cd_education_status
    FROM 
        Customers c
    JOIN 
        Demographics d ON c.cd_demo_sk = d.cd_demo_sk
    JOIN 
        AddressParts a ON c.ca_address_id = a.ca_address_id
)
SELECT 
    e.full_name,
    e.c_email_address,
    e.full_address,
    e.cd_gender,
    e.cd_marital_status,
    e.cd_education_status,
    COUNT(ws_order_number) AS total_orders,
    SUM(ws_sales_price) AS total_spent,
    AVG(CASE WHEN ws_sales_price > 100 THEN ws_sales_price END) AS avg_high_value_order
FROM 
    EnhancedCustomerInfo e
LEFT JOIN 
    web_sales ws ON e.c_customer_sk = ws.ws_bill_customer_sk
GROUP BY 
    e.full_name,
    e.c_email_address,
    e.full_address,
    e.cd_gender,
    e.cd_marital_status,
    e.cd_education_status
ORDER BY 
    total_spent DESC
LIMIT 50;
