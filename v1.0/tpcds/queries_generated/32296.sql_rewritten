WITH RECURSIVE SalesHierarchy AS (
    SELECT c.c_customer_sk,
           c.c_first_name,
           c.c_last_name,
           COALESCE(ws_total.total_sales, 0) AS total_sales
    FROM customer c
    LEFT JOIN (
        SELECT ws_bill_customer_sk,
               SUM(ws_net_paid) AS total_sales
        FROM web_sales
        GROUP BY ws_bill_customer_sk
    ) ws_total ON c.c_customer_sk = ws_total.ws_bill_customer_sk

    UNION ALL

    SELECT c.c_customer_sk,
           c.c_first_name,
           c.c_last_name,
           COALESCE(ss_total.total_sales, 0) + sh.total_sales
    FROM customer c
    JOIN SalesHierarchy sh ON c.c_customer_sk = sh.c_customer_sk
    LEFT JOIN (
        SELECT ss_customer_sk,
               SUM(ss_net_paid) AS total_sales
        FROM store_sales
        GROUP BY ss_customer_sk
    ) ss_total ON c.c_customer_sk = ss_total.ss_customer_sk
)

SELECT ca.ca_city,
       ca.ca_state,
       SUM(sh.total_sales) AS total_sales_by_city_state,
       CDG.gender,
       COUNT(DISTINCT c.c_customer_sk) AS customer_count,
       AVG(CASE WHEN c.c_birth_year IS NOT NULL THEN EXTRACT(YEAR FROM cast('2002-10-01' as date)) - c.c_birth_year ELSE NULL END) AS avg_age,
       STRING_AGG(DISTINCT CONCAT(c.c_first_name, ' ', c.c_last_name), ', ') AS customer_names
FROM SalesHierarchy sh
JOIN customer c ON c.c_customer_sk = sh.c_customer_sk
JOIN customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
JOIN customer_demographics CDG ON c.c_current_cdemo_sk = CDG.cd_demo_sk
WHERE (sh.total_sales > 1000 OR sh.total_sales IS NULL)
  AND ca.ca_state IS NOT NULL
  AND sh.total_sales IS NOT NULL
GROUP BY ca.ca_city, ca.ca_state, CDG.gender
HAVING SUM(sh.total_sales) > 5000
ORDER BY total_sales_by_city_state DESC
LIMIT 10;