
WITH RankedSales AS (
    SELECT 
        ws_bill_customer_sk,
        ws_item_sk,
        ws_quantity,
        ws_sales_price,
        RANK() OVER (PARTITION BY ws_bill_customer_sk ORDER BY ws_sales_price DESC) AS sales_rank
    FROM web_sales
    WHERE ws_sold_date_sk IN (
        SELECT d_date_sk
        FROM date_dim
        WHERE d_year = 2022
    )
),
CustomerReturns AS (
    SELECT 
        wr_returning_customer_sk,
        SUM(wr_return_quantity) AS total_returned,
        SUM(wr_return_amt) AS total_return_amount
    FROM web_returns
    GROUP BY wr_returning_customer_sk
),
CustomerDemographics AS (
    SELECT 
        cd_demo_sk,
        cd_gender,
        cd_marital_status,
        (CASE 
            WHEN cd_purchase_estimate IS NULL THEN 'UNKNOWN'
            WHEN cd_purchase_estimate < 1000 THEN 'LOW'
            WHEN cd_purchase_estimate BETWEEN 1000 AND 5000 THEN 'MEDIUM'
            ELSE 'HIGH'
         END) AS purchase_estimate_band
    FROM customer_demographics
),
ItemWithReturns AS (
    SELECT 
        i.i_item_sk,
        i.i_item_id,
        COALESCE(SUM(sr.return_quantity), 0) AS total_returns,
        COUNT(DISTINCT wr.order_number) AS return_count
    FROM item i
    LEFT JOIN store_returns sr ON i.i_item_sk = sr.item_sk
    LEFT JOIN web_returns wr ON i.i_item_sk = wr.item_sk
    GROUP BY i.i_item_sk, i.i_item_id
)
SELECT 
    c.c_customer_id,
    cd.cd_gender,
    cd.cd_marital_status,
    SUM(ws.ws_quantity) AS total_quantity_sold,
    SUM(ws.ws_sales_price) AS total_sales,
    COALESCE(cr.total_returned, 0) AS total_returns,
    COALESCE(cr.total_return_amount, 0) AS total_return_amount,
    SUM(iwr.total_returns) AS total_item_returns,
    COUNT(DISTINCT iwr.i_item_id) AS distinct_items_returned,
    CASE 
        WHEN MAX(rs.sales_rank) <= 3 THEN 'Top Customer'
        ELSE 'Regular Customer'
    END AS customer_status
FROM customer c
JOIN CustomerDemographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
LEFT JOIN CustomerReturns cr ON c.c_customer_sk = cr.wr_returning_customer_sk
LEFT JOIN ItemWithReturns iwr ON ws.ws_item_sk = iwr.i_item_sk
LEFT JOIN RankedSales rs ON c.c_customer_sk = rs.ws_bill_customer_sk
WHERE 
    cd.cd_gender IS NOT NULL
    AND (cd.cd_marital_status = 'M' OR cd.cd_marital_status IS NULL)
GROUP BY 
    c.c_customer_id,
    cd.cd_gender,
    cd.cd_marital_status
HAVING 
    SUM(ws.ws_quantity) > 10
ORDER BY 
    total_sales DESC, 
    total_returns ASC;
