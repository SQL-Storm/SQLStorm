
WITH RECURSIVE sales_hierarchy AS (
    SELECT
        c_customer_sk,
        c_last_name,
        c_first_name,
        1 AS level
    FROM
        customer
    WHERE
        c_current_cdemo_sk IS NOT NULL

    UNION ALL

    SELECT
        c.c_customer_sk,
        c.c_last_name,
        c.c_first_name,
        sh.level + 1
    FROM
        customer c
    JOIN
        sales_hierarchy sh ON c.c_current_cdemo_sk = sh.c_customer_sk
),
sales_details AS (
    SELECT
        ws.ws_sold_date_sk,
        ws.ws_item_sk,
        ws.ws_quantity,
        ws.ws_net_paid,
        ca.ca_state AS customer's_region,
        RANK() OVER (PARTITION BY ws.ws_item_sk ORDER BY ws.ws_sold_date_sk DESC) AS item_rank
    FROM
        web_sales ws
    JOIN
        customer c ON ws.ws_bill_customer_sk = c.c_customer_sk
    LEFT JOIN
        (SELECT ca_address_sk, ca_state FROM customer_address) ca 
        ON c.c_current_addr_sk = ca.ca_address_sk 
    WHERE
        ws.ws_net_paid > 100
)
SELECT
    d.d_date_id,
    SUM(sd.ws_quantity) AS total_quantity,
    COUNT(DISTINCT sd.ws_item_sk) AS unique_items,
    SUM(sd.ws_net_paid) AS total_sales,
    COUNT(CASE WHEN sd.item_rank = 1 THEN 1 END) AS top_selling_items,
    AVG(sd.ws_net_paid) AS avg_sales,
    MAX(sd.ws_net_paid) AS max_sales
FROM
    date_dim d
LEFT JOIN
    sales_details sd ON d.d_date_sk = sd.ws_sold_date_sk
WHERE
    d.d_year = 2023
GROUP BY
    d.d_date_id
ORDER BY
    total_sales DESC
LIMIT 100;
