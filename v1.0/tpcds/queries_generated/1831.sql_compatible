
WITH CustomerReturnSummary AS (
    SELECT 
        c.c_customer_sk, 
        c.c_first_name, 
        c.c_last_name, 
        COUNT(DISTINCT wr.wr_return_number) AS total_web_returns,
        SUM(wr.wr_return_amt) AS total_web_return_amount,
        SUM(wr.wr_return_quantity) AS total_web_return_qty
    FROM 
        customer c
    LEFT JOIN 
        web_returns wr ON c.c_customer_sk = wr.wr_returning_customer_sk
    GROUP BY 
        c.c_customer_sk, c.c_first_name, c.c_last_name
),
SalesPatrons AS (
    SELECT 
        ws.ws_bill_customer_sk,
        SUM(ws.ws_ext_sales_price) AS total_web_sales,
        COUNT(ws.ws_order_number) AS total_orders
    FROM 
        web_sales ws
    GROUP BY 
        ws.ws_bill_customer_sk
),
JoinCandidates AS (
    SELECT 
        c.c_customer_sk,
        COALESCE(cr.total_web_returns, 0) AS web_returns_count,
        COALESCE(s.total_web_sales, 0) AS total_sales,
        COALESCE(s.total_orders, 0) AS total_orders,
        CASE 
            WHEN COALESCE(cr.total_web_returns, 0) > 0 THEN 'Returning'
            ELSE 'New'
        END AS customer_type
    FROM 
        customer c
    LEFT JOIN 
        CustomerReturnSummary cr ON c.c_customer_sk = cr.c_customer_sk
    LEFT JOIN 
        SalesPatrons s ON c.c_customer_sk = s.ws_bill_customer_sk
)
SELECT 
    jc.customer_type,
    COUNT(*) AS customer_count,
    AVG(jc.total_sales) AS avg_sales,
    SUM(jc.total_orders) AS total_orders
FROM 
    JoinCandidates jc
GROUP BY 
    jc.customer_type
HAVING 
    AVG(jc.total_sales) > 100
ORDER BY 
    customer_count DESC
