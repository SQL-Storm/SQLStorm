
WITH ranked_sales AS (
    SELECT 
        ws.ws_item_sk,
        ws.ws_order_number,
        ws.ws_sales_price,
        ROW_NUMBER() OVER (PARTITION BY ws.ws_item_sk ORDER BY ws.ws_sales_price DESC) AS price_rank
    FROM 
        web_sales ws
    WHERE 
        ws.ws_sold_date_sk >= (
            SELECT MIN(d.d_date_sk)
            FROM date_dim d
            WHERE d.d_year = 2023 AND d.d_holiday = 'Y'
        )
        AND ws.ws_ship_date_sk IS NOT NULL
),
customer_return_analysis AS (
    SELECT 
        wr.wr_returned_date_sk,
        wr.wr_item_sk,
        SUM(wr.wr_return_quantity) AS total_returned,
        SUM(wr.wr_return_amt) AS total_return_amt,
        COUNT(DISTINCT wr.wr_order_number) AS return_order_count
    FROM 
        web_returns wr
    JOIN 
        web_sales ws ON wr.wr_item_sk = ws.ws_item_sk AND wr.wr_returning_customer_sk = ws.ws_bill_customer_sk
    WHERE 
        ws.ws_sales_price > (
            SELECT AVG(ws_inner.ws_sales_price) 
            FROM web_sales ws_inner
            WHERE ws_inner.ws_item_sk = wr.wr_item_sk
        )
    GROUP BY 
        wr.wr_returned_date_sk, wr.wr_item_sk
),
final_analysis AS (
    SELECT 
        ca.ca_city,
        SUM(COALESCE(rsa.total_returned, 0)) AS total_returns,
        COUNT(DISTINCT rsa.wr_item_sk) AS distinct_returned_items,
        SUM(rsa.total_return_amt) AS sum_return_amt
    FROM 
        ranked_sales rs
    LEFT JOIN 
        customer_return_analysis rsa ON rs.ws_item_sk = rsa.wr_item_sk
    JOIN 
        customer c ON c.c_customer_sk = rs.ws_bill_customer_sk
    JOIN 
        customer_address ca ON ca.ca_address_sk = c.c_current_addr_sk
    GROUP BY 
        ca.ca_city
)
SELECT 
    fa.ca_city,
    fa.total_returns,
    fa.distinct_returned_items,
    COALESCE(ROUND(NULLIF(fa.sum_return_amt, 0) / NULLIF(fa.total_returns, 0), 2), 0.00) AS avg_return_amt_per_item
FROM 
    final_analysis fa
WHERE 
    fa.total_returns > 0
ORDER BY 
    fa.total_returns DESC;
