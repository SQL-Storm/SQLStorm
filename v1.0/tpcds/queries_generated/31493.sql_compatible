
WITH RECURSIVE customer_sales AS (
    SELECT c.c_customer_sk, c.c_customer_id, SUM(ws.ws_ext_sales_price) AS total_sales
    FROM customer c
    LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_ship_customer_sk
    GROUP BY c.c_customer_sk, c.c_customer_id
    UNION ALL
    SELECT c.c_customer_sk, c.c_customer_id, SUM(cs.cs_ext_sales_price)
    FROM customer c
    LEFT JOIN catalog_sales cs ON c.c_customer_sk = cs.cs_ship_customer_sk
    GROUP BY c.c_customer_sk, c_customer_id
),
address_info AS (
    SELECT ca.ca_address_sk, ca.ca_city, ca.ca_state, COUNT(c.c_customer_sk) AS customer_count
    FROM customer_address ca
    LEFT JOIN customer c ON ca.ca_address_sk = c.c_current_addr_sk
    GROUP BY ca.ca_address_sk, ca.ca_city, ca.ca_state
),
demographic_info AS (
    SELECT cd.cd_demo_sk, cd.cd_gender, cd.cd_marital_status, 
           (SELECT COUNT(*) FROM customer c WHERE c.c_current_cdemo_sk = cd.cd_demo_sk) AS demographic_count
    FROM customer_demographics cd
)
SELECT ci.c_customer_id, 
       COALESCE(cs.total_sales, 0) AS total_sales, 
       ai.customer_count,
       di.demographic_count,
       CASE 
           WHEN di.demographic_count > 500 THEN 'High' 
           WHEN di.demographic_count BETWEEN 200 AND 500 THEN 'Medium' 
           ELSE 'Low' 
       END AS demographic_category
FROM customer_sales cs
FULL OUTER JOIN address_info ai ON cs.c_customer_sk = ai.ca_address_sk
FULL OUTER JOIN demographic_info di ON cs.c_customer_sk = di.cd_demo_sk
WHERE (COALESCE(cs.total_sales, 0) > 1000 OR ai.customer_count > 50)
  AND di.cd_gender IS NOT NULL
  AND ai.ca_city LIKE '%Los Angeles%'
ORDER BY total_sales DESC, ai.customer_count DESC;
