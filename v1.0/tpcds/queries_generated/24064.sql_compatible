
WITH CustomerSales AS (
    SELECT 
        c.c_customer_sk AS customer_id,
        SUM(ws.ws_quantity) AS total_quantity_sold,
        SUM(ws.ws_ext_sales_price) AS total_sales,
        MAX(ws.ws_sold_date_sk) AS last_purchase_date,
        COUNT(DISTINCT ws.ws_order_number) AS order_count
    FROM customer c
    JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    WHERE c.c_birth_year IS NOT NULL 
    AND (c.c_birth_year % 2 = 0 OR c.c_birth_year < 1950) 
    GROUP BY c.c_customer_sk
),
CustomerDemographics AS (
    SELECT 
        cd.cd_demo_sk,
        cd.cd_gender,
        cd.cd_marital_status,
        ib.ib_income_band_sk,
        COALESCE(cd.cd_dep_count, 0) AS dependents,
        COALESCE(cd.cd_dep_college_count, 0) AS college_dependents
    FROM customer_demographics cd
    LEFT JOIN household_demographics hd ON cd.cd_demo_sk = hd.hd_demo_sk
    LEFT JOIN income_band ib ON hd.hd_income_band_sk = ib.ib_income_band_sk
),
ProductReturns AS (
    SELECT 
        sr_item_sk,
        SUM(sr_return_quantity) AS total_returned,
        SUM(sr_return_amt) AS total_return_amount
    FROM store_returns
    GROUP BY sr_item_sk
)
SELECT 
    cs.customer_id,
    cd.cd_gender,
    cd.cd_marital_status,
    cd.ib_income_band_sk,
    cs.total_quantity_sold,
    cs.total_sales,
    pr.total_returned,
    pr.total_return_amount,
    CASE 
        WHEN cs.order_count = 0 
        THEN 'No Orders' 
        WHEN cs.total_sales > 10000 
        THEN 'High Value Customer' 
        ELSE 'Regular Customer' 
    END AS customer_status,
    CASE 
        WHEN cs.last_purchase_date IS NULL THEN 'Never Purchased'
        ELSE (CASE 
            WHEN cs.last_purchase_date < (SELECT MAX(d.d_date_sk) FROM date_dim d WHERE d.d_year = 2001) 
            THEN 'Inactive'
            ELSE 'Active'
        END)
    END AS purchase_activity
FROM CustomerSales cs
JOIN CustomerDemographics cd ON cs.customer_id = cd.cd_demo_sk
LEFT JOIN ProductReturns pr ON cs.customer_id = pr.sr_item_sk
WHERE 
    (cd.cd_gender = 'F' AND cd.cd_marital_status = 'S') 
    OR (cd.cd_gender = 'M' AND cd.cd_marital_status IS NULL)
HAVING 
    (cs.total_sales IS NOT NULL AND cs.total_sales > 1000)
    OR (pr.total_returned IS NOT NULL AND pr.total_returned > 0)
ORDER BY cs.total_sales DESC
LIMIT 100;
