
WITH SalesData AS (
    SELECT 
        c.c_customer_id,
        c.c_first_name,
        c.c_last_name,
        SUM(ws.ws_ext_sales_price) AS total_sales,
        COUNT(DISTINCT ws.ws_order_number) AS order_count,
        AVG(ws.ws_net_profit) AS avg_profit,
        MAX(ws.ws_sold_date_sk) AS last_purchase_date,
        MIN(ws.ws_sold_date_sk) AS first_purchase_date,
        DATEDIFF(MAX(ws.ws_sold_date_sk), MIN(ws.ws_sold_date_sk)) AS purchase_duration_days,
        cd.cd_gender,
        cd.cd_marital_status,
        ib.ib_income_band_sk
    FROM 
        customer c
    JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN 
        household_demographics hd ON cd.cd_demo_sk = hd.hd_demo_sk
    LEFT JOIN 
        income_band ib ON hd.hd_income_band_sk = ib.ib_income_band_sk
    WHERE 
        ws.ws_sold_date_sk BETWEEN 1 AND 10000
    GROUP BY 
        c.c_customer_id, c.c_first_name, c.c_last_name, cd.cd_gender, cd.cd_marital_status, ib.ib_income_band_sk
),
RankedSales AS (
    SELECT 
        sd.*, 
        RANK() OVER (PARTITION BY sd.cd_gender ORDER BY sd.total_sales DESC) AS sales_rank
    FROM 
        SalesData sd
)
SELECT 
    rs.c_customer_id,
    rs.c_first_name,
    rs.c_last_name,
    rs.total_sales,
    rs.order_count,
    rs.avg_profit,
    rs.last_purchase_date,
    rs.first_purchase_date,
    rs.purchase_duration_days,
    rs.sales_rank,
    CASE 
        WHEN rs.total_sales > 5000 THEN 'High Value'
        WHEN rs.total_sales BETWEEN 1000 AND 5000 THEN 'Medium Value'
        ELSE 'Low Value'
    END AS customer_value
FROM 
    RankedSales rs
WHERE 
    rs.sales_rank <= 10
ORDER BY 
    rs.cd_gender, rs.total_sales DESC;
