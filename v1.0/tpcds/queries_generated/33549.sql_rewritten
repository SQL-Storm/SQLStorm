WITH RECURSIVE inventory_cte AS (
    SELECT 
        inv.item_sk,
        SUM(inv_quantity_on_hand) AS total_quantity,
        cast('2002-10-01' as date) AS calculation_date
    FROM 
        inventory inv
    WHERE 
        inv_date_sk BETWEEN (SELECT MIN(d_date_sk) FROM date_dim WHERE d_year = 2001) AND (SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = 2001)
    GROUP BY 
        inv.item_sk
    
    UNION ALL
    
    SELECT 
        i.item_sk,
        ic.total_quantity - COALESCE(sr.return_quantity, 0) AS total_quantity,
        cast('2002-10-01' as date)
    FROM 
        inventory_cte ic
    JOIN 
        store_returns sr ON ic.item_sk = sr.sr_item_sk
    JOIN 
        item i ON i.i_item_sk = ic.item_sk
    WHERE 
        sr.sr_returned_date_sk IS NOT NULL
),
sales_summary AS (
    SELECT 
        c.c_customer_id,
        SUM(ws.ws_net_paid) AS total_sales,
        COUNT(DISTINCT ws.ws_order_number) AS order_count,
        AVG(ws.ws_net_profit) OVER (PARTITION BY c.c_customer_id) AS avg_net_profit_per_order,
        COALESCE(cd.cd_gender, 'UNKNOWN') AS customer_gender,
        COALESCE(cd.cd_marital_status, 'N/A') AS marital_status
    FROM 
        web_sales ws
    JOIN 
        customer c ON ws.ws_bill_customer_sk = c.c_customer_sk
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    GROUP BY 
        c.c_customer_id, cd.cd_gender, cd.cd_marital_status
)
SELECT 
    ss.c_customer_id,
    ss.total_sales,
    ss.order_count,
    ss.avg_net_profit_per_order,
    COALESCE(ic.total_quantity, 0) AS inventory_quantity,
    (SELECT COUNT(*) FROM promotion p WHERE p.p_discount_active = 'Y') AS active_promotions,
    (SELECT COUNT(*) FROM web_page wp WHERE wp.wp_autogen_flag = 'Y') AS autogenerated_web_pages
FROM 
    sales_summary ss
LEFT JOIN 
    inventory_cte ic ON ss.order_count > 0
WHERE 
    ss.total_sales > (
        SELECT AVG(total_sales)
        FROM sales_summary
    )
ORDER BY 
    ss.total_sales DESC
LIMIT 10;