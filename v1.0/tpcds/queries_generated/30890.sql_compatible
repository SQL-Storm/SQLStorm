
WITH RECURSIVE sales_summary AS (
    SELECT c.c_customer_sk, 
           c.c_first_name, 
           c.c_last_name, 
           SUM(ws.ws_net_profit) AS total_profit
    FROM customer c
    JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    WHERE ws.ws_sold_date_sk >= (SELECT d_date_sk FROM date_dim WHERE d_date = '2023-01-01')
    GROUP BY c.c_customer_sk, c.c_first_name, c.c_last_name
    UNION ALL
    SELECT c.c_customer_sk, 
           c.c_first_name, 
           c.c_last_name, 
           ss.total_profit + SUM(cs.cs_net_profit) AS total_profit
    FROM customer c
    JOIN catalog_sales cs ON c.c_customer_sk = cs.cs_bill_customer_sk
    JOIN sales_summary ss ON c.c_customer_sk = ss.c_customer_sk
    WHERE cs.cs_sold_date_sk >= (SELECT d_date_sk FROM date_dim WHERE d_date = '2023-01-01')
    GROUP BY c.c_customer_sk, c.c_first_name, c.c_last_name, ss.total_profit
), inventory_summary AS (
    SELECT iw.inv_item_sk, 
           SUM(iw.inv_quantity_on_hand) AS total_quantity
    FROM inventory iw
    WHERE iw.inv_date_sk BETWEEN (SELECT d_date_sk FROM date_dim WHERE d_date >= '2023-01-01' AND d_date < '2023-02-01')
    GROUP BY iw.inv_item_sk
), promotional_summary AS (
    SELECT p.p_promo_id, 
           SUM(ws.ws_quantity) AS promo_quantity
    FROM promotion p
    JOIN web_sales ws ON p.p_promo_sk = ws.ws_promo_sk
    GROUP BY p.p_promo_id
)
SELECT ss.c_first_name, 
       ss.c_last_name, 
       ss.total_profit, 
       COALESCE(ip.total_quantity, 0) AS inventory_quantity, 
       COALESCE(ps.promo_quantity, 0) AS promo_quantity
FROM sales_summary ss
LEFT JOIN inventory_summary ip ON ss.c_customer_sk = ip.inv_item_sk
LEFT JOIN promotional_summary ps ON ss.c_customer_sk = ps.p_promo_id
WHERE ss.total_profit > (
    SELECT AVG(total_profit) 
    FROM sales_summary
) 
AND ss.c_last_name IS NOT NULL
ORDER BY ss.total_profit DESC
LIMIT 50;
