
WITH RecursiveAddress AS (
    SELECT ca_address_sk, ca_city, ca_state, 
           ROW_NUMBER() OVER (PARTITION BY ca_state ORDER BY ca_city) AS rn
    FROM customer_address
    WHERE ca_country = 'USA'
),
SalesSummary AS (
    SELECT 
        ws.web_site_id,
        COUNT(ws.ws_order_number) AS total_orders,
        SUM(ws.ws_sales_price) AS total_sales,
        AVG(ws.ws_list_price) AS avg_list_price,
        SUM(ws.ws_net_profit) / NULLIF(SUM(ws.ws_quantity), 0) AS avg_net_profit_per_item
    FROM web_sales ws
    JOIN web_site w ON ws.ws_web_site_sk = w.web_site_sk
    GROUP BY ws.web_site_id
),
ReturnSummary AS (
    SELECT 
        SUM(sr_return_quantity) AS total_returns,
        SUM(sr_return_amt_inc_tax) AS total_return_amount,
        cs.cs_item_sk
    FROM store_returns sr
    JOIN catalog_sales cs ON sr.sr_item_sk = cs.cs_item_sk
    WHERE sr_returned_date_sk IN (
        SELECT d_date_sk 
        FROM date_dim 
        WHERE d_year = 2001 AND d_dow IN (0, 6) 
    )
    GROUP BY cs.cs_item_sk
)
SELECT 
    a.ca_city,
    a.ca_state,
    ss.total_orders,
    ss.total_sales,
    ss.avg_list_price AS estimated_average_list_price,
    COALESCE(rs.total_returns, 0) AS weekend_returns,
    COALESCE(rs.total_return_amount, 0) AS weekend_return_value,
    COUNT(DISTINCT c.c_customer_id) FILTER (WHERE c.c_birth_year IN (SELECT DISTINCT d.d_year FROM date_dim d WHERE d.d_month_seq = 1)) AS specific_birth_year_customers
FROM RecursiveAddress a
LEFT JOIN SalesSummary ss ON a.rn = 1
LEFT JOIN ReturnSummary rs ON ss.total_orders = rs.total_returns
LEFT JOIN customer c ON c.c_current_addr_sk = a.ca_address_sk
WHERE (ss.total_sales > 10000 OR COALESCE(rs.total_returns, 0) > 50)
  AND (a.ca_city IS NOT NULL AND a.ca_state IS NOT NULL)
GROUP BY a.ca_city, a.ca_state, ss.total_orders, ss.total_sales, ss.avg_list_price, rs.total_returns, rs.total_return_amount
ORDER BY a.ca_state, a.ca_city;
