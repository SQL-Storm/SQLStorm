
WITH RankedSales AS (
    SELECT 
        ss.store_sk,
        s.s_store_name,
        ss.s_sold_date_sk,
        COUNT(ss.ss_ticket_number) AS total_tickets,
        SUM(ss.ss_sales_price) AS total_sales,
        SUM(ss.ss_net_profit) AS total_profit,
        RANK() OVER (PARTITION BY ss.store_sk ORDER BY SUM(ss.ss_sales_price) DESC) AS sales_rank
    FROM 
        store_sales ss
    JOIN 
        store s ON ss.ss_store_sk = s.s_store_sk
    GROUP BY 
        ss.store_sk, s.s_store_name, ss.s_sold_date_sk
),
TopStores AS (
    SELECT 
        store_sk,
        s_store_name
    FROM 
        RankedSales
    WHERE 
        sales_rank <= 5
),
CustomerReturns AS (
    SELECT 
        sr_customer_sk,
        COUNT(sr_ticket_number) AS total_returns,
        SUM(sr_return_amt_inc_tax) AS total_returned_amount
    FROM 
        store_returns
    GROUP BY 
        sr_customer_sk
),
CustomerDemographics AS (
    SELECT 
        cd.cd_demo_sk,
        cd.cd_gender,
        COUNT(DISTINCT c.c_customer_sk) AS customer_count,
        ROUND(AVG(cd.cd_purchase_estimate), 2) AS avg_purchase_estimate,
        SUM(cd.cd_dep_count) AS total_dependent_count
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    WHERE 
        c.c_birth_year IS NOT NULL 
        AND cd.cd_gender IN ('M', 'F') 
    GROUP BY 
        cd.cd_demo_sk, cd.cd_gender
),
SalesReturns AS (
    SELECT 
        ts.store_sk,
        COALESCE(cr.total_returns, 0) AS total_returns,
        COALESCE(cr.total_returned_amount, 0) AS total_returned_amount,
        COALESCE(cr.total_returned_amount, 0) - COALESCE(SUM(ws.ws_net_profit), 0) AS net_profit_after_returns
    FROM 
        TopStores ts
    LEFT JOIN 
        CustomerReturns cr ON ts.store_sk = cr.sr_customer_sk
    LEFT JOIN 
        web_sales ws ON ws.ws_customer_sk = cr.sr_customer_sk
    GROUP BY 
        ts.store_sk, cr.total_returns, cr.total_returned_amount
)
SELECT 
    ts.s_store_name,
    s.total_sales, 
    s.total_profit,
    sr.total_returns,
    sr.total_returned_amount,
    sr.net_profit_after_returns
FROM 
    TopStores ts
LEFT JOIN 
    RankedSales s ON ts.store_sk = s.store_sk
LEFT JOIN 
    SalesReturns sr ON ts.store_sk = sr.store_sk
WHERE 
    ts.store_sk IN (SELECT DISTINCT ss_store_sk FROM store_sales WHERE ss_sold_date_sk IN (SELECT d_date_sk FROM date_dim WHERE d_year = 2023))
ORDER BY 
    s.total_sales DESC, ts.s_store_name;
