
WITH ranked_sales AS (
    SELECT 
        w.w_warehouse_id, 
        i.i_item_id, 
        SUM(ws.ws_quantity) AS total_quantity,
        SUM(ws.ws_sales_price) AS total_sales,
        RANK() OVER (PARTITION BY w.w_warehouse_id ORDER BY SUM(ws.ws_sales_price) DESC) AS sales_rank
    FROM 
        web_sales ws
    JOIN 
        item i ON ws.ws_item_sk = i.i_item_sk
    JOIN 
        warehouse w ON ws.ws_warehouse_sk = w.w_warehouse_sk
    WHERE 
        ws.ws_sold_date_sk IN (SELECT d_date_sk FROM date_dim WHERE d_year = 2023)
    GROUP BY 
        w.w_warehouse_id, i.i_item_id
),
top_items AS (
    SELECT 
        w.w_warehouse_id AS warehouse_id, 
        i.i_item_id, 
        total_quantity, 
        total_sales 
    FROM 
        ranked_sales 
    WHERE 
        sales_rank <= 5
),
customer_sales AS (
    SELECT 
        c.c_customer_id, 
        SUM(ss.ss_quantity) AS customer_quantity,
        SUM(ss.ss_sales_price) AS customer_sales,
        COUNT(DISTINCT ss.ss_ticket_number) AS purchase_count
    FROM 
        customer c
    JOIN 
        store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    WHERE 
        c.c_current_addr_sk IS NOT NULL
    GROUP BY 
        c.c_customer_id
),
sales_summary AS (
    SELECT 
        ts.warehouse_id,
        ts.i_item_id,
        ts.total_quantity,
        ts.total_sales,
        cs.customer_quantity,
        cs.customer_sales,
        cs.purchase_count
    FROM 
        top_items ts
    LEFT JOIN 
        customer_sales cs ON cs.customer_quantity > 0
)
SELECT 
    s.warehouse_id,
    s.i_item_id,
    s.total_quantity,
    s.total_sales,
    COALESCE(s.customer_quantity, 0) AS customer_quantity,
    COALESCE(s.customer_sales, 0) AS customer_sales,
    COALESCE(s.purchase_count, 0) AS purchase_count,
    CASE 
        WHEN s.total_sales > 0 THEN ROUND((COALESCE(s.customer_sales, 0) / s.total_sales) * 100, 2)
        ELSE NULL 
    END AS customer_sales_percent
FROM 
    sales_summary s
ORDER BY 
    s.total_sales DESC;
