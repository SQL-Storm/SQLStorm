
WITH SalesSummary AS (
    SELECT 
        c.c_customer_id,
        COUNT(DISTINCT ws.ws_order_number) AS total_orders,
        SUM(ws.ws_net_paid_inc_tax) AS total_spent,
        COUNT(DISTINCT ws.ws_item_sk) AS unique_items,
        MAX(ws.ws_sold_date_sk) AS last_purchase_date
    FROM 
        customer c
    JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    WHERE 
        c.c_birth_year >= 1980
    GROUP BY 
        c.c_customer_id
),
DemographicStats AS (
    SELECT 
        cd.cd_gender,
        COUNT(DISTINCT ss.total_orders) AS customer_count,
        AVG(ss.total_spent) AS avg_spent
    FROM 
        SalesSummary ss
    JOIN 
        customer_demographics cd ON ss.c_customer_id = cd.cd_demo_sk
    GROUP BY 
        cd.cd_gender
),
StoreSalesData AS (
    SELECT 
        ss.ss_store_sk,
        SUM(ss.ss_net_profit) AS total_profit,
        COUNT(DISTINCT ss.ss_ticket_number) AS total_sales
    FROM 
        store_sales ss
    WHERE 
        ss.ss_sold_date_sk >= 
            (SELECT MAX(d.d_date_sk) FROM date_dim d WHERE d.d_year = 2000)
    GROUP BY 
        ss.ss_store_sk
)
SELECT 
    COALESCE(ds.cd_gender, 'Unknown') AS gender,
    ds.customer_count,
    ds.avg_spent,
    COALESCE(ssd.total_profit, 0) AS store_total_profit,
    s.store_name
FROM 
    DemographicStats ds
LEFT JOIN 
    StoreSalesData ssd ON ds.customer_count = ssd.total_sales
JOIN 
    store s ON s.s_store_sk = ssd.ss_store_sk
WHERE 
    ds.customer_count > 0
ORDER BY 
    ds.avg_spent DESC
LIMIT 10;
