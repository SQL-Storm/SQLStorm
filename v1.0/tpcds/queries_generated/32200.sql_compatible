
WITH RECURSIVE CategoryHierarchy AS (
    SELECT i_category_id, i_category, 1 AS level
    FROM item
    WHERE i_category_id IS NOT NULL
    UNION ALL
    SELECT i.category_id, i.category, ch.level + 1
    FROM item i
    JOIN CategoryHierarchy ch ON i.category_id = ch.i_category_id
)
SELECT 
    CONCAT(c.c_first_name, ' ', c.c_last_name) AS customer_name,
    a.ca_city,
    SUM(ss.ss_net_profit) AS total_net_profit,
    COUNT(DISTINCT ss.ss_ticket_number) AS total_sales_count,
    ROW_NUMBER() OVER (PARTITION BY a.ca_city ORDER BY SUM(ss.ss_net_profit) DESC) AS city_rank
FROM 
    customer c
JOIN 
    customer_address a ON c.c_current_addr_sk = a.ca_address_sk
LEFT JOIN 
    store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
LEFT JOIN 
    CategoryHierarchy ch ON ch.i_category_id IN (
        SELECT i_category_id FROM item WHERE i_category_id IS NOT NULL
    )
WHERE 
    a.ca_city IS NOT NULL 
    AND (c.c_birth_year BETWEEN 1970 AND 2000)
    AND ss.ss_sold_date_sk IN (
        SELECT d_date_sk 
        FROM date_dim 
        WHERE d_month_seq BETWEEN (SELECT d_month_seq FROM date_dim WHERE d_year = 2023 AND d_moy = 1)
                                  AND (SELECT d_month_seq FROM date_dim WHERE d_year = 2023 AND d_moy = 12)
    )
GROUP BY 
    c.c_first_name, c.c_last_name, a.ca_city
HAVING 
    SUM(ss.ss_net_profit) > (
        SELECT AVG(ss_net_profit) 
        FROM store_sales 
        WHERE ss_sold_date_sk IN (
            SELECT d_date_sk 
            FROM date_dim 
            WHERE d_year = 2023
        )
    )
ORDER BY 
    city_rank, total_net_profit DESC
LIMIT 10;
