
WITH RECURSIVE sales_hierarchy AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        SUM(ss.ss_net_profit) AS total_profit,
        1 AS level
    FROM 
        customer c
    LEFT JOIN 
        store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    GROUP BY 
        c.c_customer_sk, c.c_first_name, c.c_last_name
    
    UNION ALL
    
    SELECT 
        ch.c_customer_sk,
        ch.c_first_name,
        ch.c_last_name,
        SUM(ss.ss_net_profit) AS total_profit,
        sh.level + 1 AS level
    FROM 
        customer ch
    INNER JOIN 
        store_sales ss ON ch.c_customer_sk = ss.ss_customer_sk
    INNER JOIN 
        sales_hierarchy sh ON sh.c_customer_sk = ch.c_customer_sk
    GROUP BY 
        ch.c_customer_sk, ch.c_first_name, ch.c_last_name, sh.level
),
customer_details AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_buy_potential,
        ROW_NUMBER() OVER (PARTITION BY cd.cd_gender ORDER BY sh.total_profit DESC) AS rn
    FROM 
        customer c
    INNER JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    INNER JOIN 
        sales_hierarchy sh ON c.c_customer_sk = sh.c_customer_sk
    WHERE 
        sh.total_profit > 1000
),
total_returns AS (
    SELECT 
        SUM(sr_return_amt) AS total_return
    FROM 
        store_returns
    WHERE 
        sr_returned_date_sk > (SELECT MAX(d_date_sk) - 30 FROM date_dim)
)
SELECT 
    DISTINCT 
    cd.c_first_name,
    cd.c_last_name,
    cd.cd_gender,
    cd.cd_marital_status,
    sh.total_profit,
    tr.total_return
FROM 
    customer_details cd
LEFT JOIN 
    sales_hierarchy sh ON cd.c_customer_sk = sh.c_customer_sk
JOIN 
    total_returns tr ON tr.total_return IS NOT NULL
WHERE 
    cd.rn <= 10
ORDER BY 
    sh.total_profit DESC;
