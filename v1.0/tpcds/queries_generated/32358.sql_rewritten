WITH RECURSIVE customer_hierarchy AS (
    SELECT c_customer_sk, c_first_name, c_last_name, c_current_hdemo_sk
    FROM customer 
    WHERE c_current_hdemo_sk IS NOT NULL
    UNION ALL
    SELECT ch.c_customer_sk, c.c_first_name, c.c_last_name, c.c_current_hdemo_sk
    FROM customer_hierarchy ch
    JOIN customer c ON ch.c_current_hdemo_sk = c.c_current_hdemo_sk
    WHERE ch.c_customer_sk <> c.c_customer_sk
), 
sales_summary AS (
    SELECT 
        COALESCE(w.ws_web_page_sk, c.c_customer_sk) AS identifier,
        SUM(ws_ext_sales_price) AS total_sales,
        COUNT(DISTINCT ws_order_number) AS order_count
    FROM web_sales ws
    LEFT JOIN web_page w ON ws.ws_web_page_sk = w.wp_web_page_sk
    LEFT JOIN customer c ON ws.ws_bill_customer_sk = c.c_customer_sk
    GROUP BY identifier
), 
time_period AS (
    SELECT 
        d_year, 
        d_month, 
        d_week_seq, 
        SUM(ws_net_profit) AS total_net_profit
    FROM web_sales ws
    JOIN date_dim d ON ws.ws_sold_date_sk = d.d_date_sk
    GROUP BY d_year, d_month, d_week_seq
)
SELECT 
    ch.c_first_name,
    ch.c_last_name,
    COALESCE(ss.total_sales, 0) AS total_sales,
    COALESCE(ss.order_count, 0) AS total_orders,
    tp.total_net_profit,
    CASE 
        WHEN ch.c_current_hdemo_sk IS NULL THEN 'Unknown Income'
        ELSE (SELECT ib_lower_bound 
              FROM income_band ib 
              WHERE ch.c_current_hdemo_sk = ib.ib_income_band_sk LIMIT 1)
    END AS income_band
FROM customer_hierarchy ch
LEFT JOIN sales_summary ss ON ss.identifier = ch.c_customer_sk
LEFT JOIN time_period tp ON tp.d_year = EXTRACT(YEAR FROM cast('2002-10-01' as date)) 
    AND tp.d_month = EXTRACT(MONTH FROM cast('2002-10-01' as date))
ORDER BY total_sales DESC, total_orders DESC;