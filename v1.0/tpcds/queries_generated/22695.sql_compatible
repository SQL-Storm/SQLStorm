
WITH RankedSales AS (
    SELECT
        ws_item_sk,
        SUM(ws_sales_price) AS total_sales,
        COUNT(ws_order_number) AS total_orders,
        RANK() OVER (PARTITION BY ws_item_sk ORDER BY SUM(ws_sales_price) DESC) AS sales_rank
    FROM
        web_sales
    WHERE
        ws_sold_date_sk BETWEEN 2452049 AND 2452053
    GROUP BY
        ws_item_sk
),
ItemDetails AS (
    SELECT
        i.i_item_sk,
        i.i_item_desc,
        i.i_current_price,
        COALESCE(SUM(cr.return_quantity), 0) AS total_returns,
        COALESCE(SUM(sr.return_quantity), 0) AS total_store_returns
    FROM
        item i
    LEFT JOIN
        catalog_returns cr ON i.i_item_sk = cr.cr_item_sk
    LEFT JOIN
        store_returns sr ON i.i_item_sk = sr.sr_item_sk
    GROUP BY
        i.i_item_sk, i.i_item_desc, i.i_current_price
),
SalesWithReturns AS (
    SELECT
        s.ws_item_sk,
        s.total_sales,
        s.total_orders,
        i.i_item_desc,
        i.i_current_price,
        i.total_returns + i.total_store_returns AS total_returns,
        i.total_returns + i.total_store_returns -
        COALESCE(SUM(s.total_sales), 0) AS net_sales_after_returns
    FROM
        RankedSales s
    JOIN
        ItemDetails i ON s.ws_item_sk = i.i_item_sk
    GROUP BY
        s.ws_item_sk, s.total_sales, s.total_orders, 
        i.i_item_desc, i.i_current_price, i.total_returns
    HAVING
        net_sales_after_returns > 0
),
MultiSales AS (
    SELECT
        *,
        CASE WHEN total_orders > 1 THEN 'High Volume' ELSE 'Low Volume' END AS sales_category
    FROM
        SalesWithReturns
    WHERE
        sales_rank = 1
    ORDER BY
        total_sales DESC
)
SELECT
    ms.ws_item_sk,
    ms.i_item_desc,
    ms.total_sales,
    ms.total_orders,
    ms.sales_category,
    CASE 
        WHEN ms.total_returns = 0 THEN 'No Returns' 
        WHEN ms.total_returns BETWEEN 1 AND 5 THEN 'Few Returns' 
        ELSE 'Many Returns' 
    END AS return_category,
    CONCAT('Item: ', ms.i_item_desc, ' | Sales: ', ms.total_sales) AS item_sales_info
FROM
    MultiSales ms
LEFT JOIN
    customer_demographics cd ON ms.ws_item_sk = cd.cd_demo_sk
WHERE
    (cd.cd_gender = 'M' OR cd.cd_gender IS NULL)
    AND (cd.cd_marital_status = 'S' OR cd.cd_marital_status IS NULL)
ORDER BY
    ms.total_sales DESC
LIMIT 10;
