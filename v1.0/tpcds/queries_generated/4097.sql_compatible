
WITH RankedSales AS (
    SELECT 
        ws.web_site_id,
        ws.bill_customer_sk,
        SUM(ws.net_profit) AS total_profit,
        DENSE_RANK() OVER (PARTITION BY ws.web_site_id ORDER BY SUM(ws.net_profit) DESC) AS rank_profit
    FROM web_sales ws
    JOIN customer c ON ws.bill_customer_sk = c.c_customer_sk
    WHERE c.c_birth_year IS NOT NULL
    GROUP BY ws.web_site_id, ws.bill_customer_sk
),
CustomerReturns AS (
    SELECT 
        wr.returning_customer_sk, 
        COUNT(*) AS return_count,
        SUM(wr.return_amt) AS total_returned
    FROM web_returns wr
    GROUP BY wr.returning_customer_sk
),
ReturnAnalysis AS (
    SELECT 
        rs.web_site_id, 
        rs.bill_customer_sk,
        COALESCE(cr.return_count, 0) AS return_count,
        COALESCE(cr.total_returned, 0) AS total_returned,
        SUM(rs.total_profit) AS combined_profit
    FROM RankedSales rs
    LEFT JOIN CustomerReturns cr ON rs.bill_customer_sk = cr.returning_customer_sk
    GROUP BY rs.web_site_id, rs.bill_customer_sk
)
SELECT 
    ra.web_site_id,
    ra.bill_customer_sk,
    ra.return_count,
    ra.total_returned,
    ra.combined_profit,
    CASE 
        WHEN ra.combined_profit > 0 THEN 
            ROUND((ra.total_returned / ra.combined_profit) * 100, 2)
        ELSE 0 
    END AS return_rate_percentage
FROM ReturnAnalysis ra
WHERE ra.combined_profit > 1000
ORDER BY return_rate_percentage DESC;
