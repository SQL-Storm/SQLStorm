
WITH CustomerReturns AS (
    SELECT 
        wr_returning_customer_sk,
        COUNT(DISTINCT wr_order_number) AS total_orders_returned,
        SUM(wr_return_qty) AS total_returned_quantity,
        SUM(wr_return_amt_inc_tax) AS total_returned_amount,
        AVG(wr_return_quantity) OVER (PARTITION BY wr_returning_customer_sk) AS avg_returned_qty
    FROM 
        web_returns
    WHERE 
        wr_returned_date_sk IS NOT NULL
    GROUP BY 
        wr_returning_customer_sk
),
CustomerDemographics AS (
    SELECT 
        cd_demo_sk,
        cd_gender,
        cd_marital_status,
        cd_purchase_estimate,
        cd_credit_rating,
        CASE 
            WHEN cd_purchase_estimate BETWEEN 100 AND 500 THEN 'Low'
            WHEN cd_purchase_estimate > 500 AND cd_purchase_estimate <= 1000 THEN 'Medium'
            ELSE 'High'
        END AS purchase_band
    FROM 
        customer_demographics
),
HighReturnCustomers AS (
    SELECT 
        cr.wr_returning_customer_sk,
        cr.total_orders_returned,
        cd.cd_gender,
        cd.purchase_band,
        cr.avg_returned_qty,
        RANK() OVER (PARTITION BY cd.cd_gender ORDER BY cr.total_returned_amount DESC) AS gender_rank
    FROM 
        CustomerReturns cr
    JOIN 
        CustomerDemographics cd ON cr.wr_returning_customer_sk = cd.cd_demo_sk
    WHERE 
        cr.total_returned_quantity > (
            SELECT AVG(total_returned_quantity) FROM CustomerReturns
        )
)
SELECT 
    c.c_customer_id,
    c.c_first_name,
    c.c_last_name,
    COALESCE(hrc.total_orders_returned, 0) AS total_orders_returned,
    COALESCE(hrc.avg_returned_qty, 0) AS avg_returned_qty,
    cd.cd_gender,
    cd.purchase_band,
    CONCAT('Return Analysis of Customer ', c.c_customer_id) AS analysis_comment
FROM 
    customer c
LEFT JOIN 
    HighReturnCustomers hrc ON c.c_customer_sk = hrc.wr_returning_customer_sk
JOIN 
    CustomerDemographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
ORDER BY 
    hrc.gender_rank, c.c_customer_id
LIMIT 50;
