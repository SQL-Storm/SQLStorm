
WITH ranked_sales AS (
    SELECT 
        ws.web_site_id,
        SUM(ws.ws_sales_price) AS total_sales,
        RANK() OVER (PARTITION BY ws.web_site_id ORDER BY SUM(ws.ws_sales_price) DESC) AS sales_rank
    FROM 
        web_sales ws
    WHERE 
        ws.ws_sold_date_sk BETWEEN (SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = 2023) - 30 AND (SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = 2023)
    GROUP BY 
        ws.web_site_id
),
customer_data AS (
    SELECT 
        c.c_customer_sk,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_purchase_estimate,
        hd.hd_income_band_sk,
        COALESCE(hd.hd_dep_count, 0) AS dependent_count,
        COALESCE(hd.hd_vehicle_count, 0) AS vehicle_count
    FROM 
        customer c
    INNER JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN household_demographics hd ON c.c_customer_sk = hd.hd_demo_sk
),
item_summary AS (
    SELECT 
        i.i_item_sk,
        i.i_product_name,
        COALESCE(SUM(ws.ws_quantity), 0) AS total_quantity_sold,
        MAX(ws.ws_sales_price) AS max_sales_price
    FROM 
        item i
    LEFT JOIN web_sales ws ON i.i_item_sk = ws.ws_item_sk
    GROUP BY 
        i.i_item_sk, i.i_product_name
)
SELECT 
    cs.c_customer_sk,
    cs.cd_gender,
    cs.cd_marital_status,
    COALESCE(sel.total_sales, 0) AS total_sales,
    COALESCE(item.total_quantity_sold, 0) AS total_quantity_sold,
    item.max_sales_price,
    CASE
        WHEN cs.cd_purchase_estimate > 10000 THEN 'High Value'
        WHEN cs.cd_purchase_estimate BETWEEN 5000 AND 10000 THEN 'Medium Value'
        ELSE 'Low Value'
    END AS customer_value_category
FROM 
    customer_data cs
LEFT JOIN 
    ranked_sales sel ON cs.c_customer_sk = sel.web_site_id
LEFT JOIN 
    item_summary item ON item.total_quantity_sold > 10
WHERE 
    cs.cd_gender = 'F'
    AND EXISTS (
        SELECT 1
        FROM store_sales ss
        WHERE ss.ss_customer_sk = cs.c_customer_sk
        AND ss.ss_sold_date_sk IN (SELECT d_date_sk FROM date_dim WHERE d_year = 2023)
    )
ORDER BY 
    total_sales DESC, cs.c_customer_sk
LIMIT 100;
