
WITH RECURSIVE sales_trend AS (
    SELECT 
        ws_sold_date_sk,
        SUM(ws_sales_price) AS total_sales,
        ROW_NUMBER() OVER (ORDER BY ws_sold_date_sk) AS rn
    FROM 
        web_sales
    WHERE 
        ws_sold_date_sk BETWEEN (SELECT MIN(d_date_sk) FROM date_dim) AND (SELECT MAX(d_date_sk) FROM date_dim)
    GROUP BY 
        ws_sold_date_sk
    HAVING 
        SUM(ws_sales_price) > (
            SELECT AVG(ws_sales_price) * 0.9 
            FROM web_sales 
            WHERE ws_sold_date_sk IS NOT NULL
        )
), 
top_customers AS (
    SELECT 
        c.c_customer_id,
        c.c_first_name,
        c.c_last_name,
        COUNT(DISTINCT ws_order_number) AS order_count,
        RANK() OVER (ORDER BY COUNT(DISTINCT ws_order_number) DESC) AS order_rank
    FROM 
        customer c
    JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY 
        c.c_customer_id, c.c_first_name, c.c_last_name
    HAVING 
        COUNT(DISTINCT ws_order_number) > 5
), 
upcoming_events AS (
    SELECT 
        d.d_date,
        COUNT(p.p_promo_id) AS promo_count
    FROM 
        date_dim d
    LEFT JOIN 
        promotion p ON d.d_date_sk BETWEEN p.p_start_date_sk AND p.p_end_date_sk
    WHERE 
        d.d_date > '2002-10-01'
    GROUP BY 
        d.d_date
    HAVING 
        COUNT(p.p_promo_id) > 1
)
SELECT 
    c.c_customer_id,
    c.c_first_name,
    c.c_last_name,
    st.total_sales,
    tc.order_count,
    COALESCE(ue.promo_count, 0) AS upcoming_promotions
FROM 
    top_customers tc
JOIN 
    sales_trend st ON tc.order_rank <= 10
LEFT JOIN 
    upcoming_events ue ON ue.d_date = DATE('2002-10-01 12:34:56' + INTERVAL '1 DAY')
JOIN 
    customer c ON c.c_customer_id = tc.c_customer_id
WHERE 
    st.total_sales > (
        SELECT AVG(total_sales) FROM sales_trend
    )
ORDER BY 
    st.total_sales DESC,
    tc.order_count DESC;
