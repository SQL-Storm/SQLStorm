WITH CustomerCounts AS (
    SELECT 
        c.c_customer_sk, 
        COUNT(DISTINCT sr_ticket_number) AS total_returns,
        COUNT(DISTINCT wr_order_number) AS total_web_returns
    FROM 
        customer c
    LEFT JOIN 
        store_returns sr ON c.c_customer_sk = sr.sr_customer_sk
    LEFT JOIN 
        web_returns wr ON c.c_customer_sk = wr.wr_returning_customer_sk
    GROUP BY 
        c.c_customer_sk
),
StoreDetails AS (
    SELECT 
        s.s_store_id, 
        COUNT(DISTINCT ss_ticket_number) AS total_sales, 
        SUM(ss_net_paid) AS total_net_sales,
        AVG(ss_net_paid) AS avg_net_sales
    FROM 
        store s
    JOIN 
        store_sales ss ON s.s_store_sk = ss.ss_store_sk
    GROUP BY 
        s.s_store_id
),
DateAnalysis AS (
    SELECT 
        d.d_year,
        SUM(ws_ext_sales_price) AS total_web_sales
    FROM 
        web_sales ws
    JOIN 
        date_dim d ON ws.ws_sold_date_sk = d.d_date_sk
    WHERE 
        d.d_year IS NOT NULL
    GROUP BY 
        d.d_year
),
IncomeAnalysis AS (
    SELECT 
        ib.ib_income_band_sk,
        COUNT(DISTINCT cd_demo_sk) AS customer_count
    FROM 
        household_demographics hd
    JOIN 
        income_band ib ON hd.hd_income_band_sk = ib.ib_income_band_sk
    GROUP BY 
        ib.ib_income_band_sk
)
SELECT 
    cc.c_customer_sk,
    cc.total_returns,
    cc.total_web_returns,
    sd.total_sales,
    sd.total_net_sales,
    da.total_web_sales,
    ia.customer_count AS income_customers,
    CASE 
        WHEN cc.total_returns > 0 THEN 'Has Returns'
        ELSE 'No Returns'
    END AS return_status,
    CONVERT(varchar, GETDATE(), 120) AS cast('2002-10-01 12:34:56' as timestamp),
    ISNULL(
        (SELECT MAX(p.p_promo_name) 
         FROM promotion p 
         WHERE p.p_discount_active = 'Y'
           AND (p.p_start_date_sk <= (SELECT MAX(d.d_date_sk) FROM date_dim d WHERE d.d_current_year = 'Y')
                AND p.p_end_date_sk >= (SELECT MIN(d.d_date_sk) FROM date_dim d WHERE d.d_current_year = 'Y'))
         ), 'No Active Promotions') AS active_promotion
FROM 
    CustomerCounts cc
LEFT JOIN 
    StoreDetails sd ON cc.c_customer_sk = sd.s_store_id
LEFT JOIN 
    DateAnalysis da ON da.d_year = YEAR(GETDATE())
LEFT JOIN 
    IncomeAnalysis ia ON 1=1 
WHERE 
    (cc.total_returns IS NULL OR cc.total_returns <= 5) 
    AND (sd.avg_net_sales BETWEEN 100 AND 500 OR sd.total_sales IS NULL)
ORDER BY 
    cc.c_customer_sk, sd.total_net_sales DESC
OPTION (MAXRECURSION 0);