
WITH RankedSales AS (
    SELECT 
        ws.web_site_sk,
        ws_order_number,
        ws_quantity,
        ws_sales_price,
        ws_net_profit,
        ROW_NUMBER() OVER (PARTITION BY ws.web_site_sk ORDER BY ws_sales_price DESC) AS rn
    FROM web_sales ws
    WHERE ws_sales_price > (SELECT AVG(ws_sales_price) FROM web_sales)
),
TopSales AS (
    SELECT 
        web_site_sk, 
        SUM(ws_quantity) AS total_quantity,
        SUM(ws_net_profit) AS total_net_profit
    FROM RankedSales
    WHERE rn <= 10
    GROUP BY web_site_sk
),
TotalSales AS (
    SELECT 
        SUM(total_quantity) AS grand_total_quantity,
        SUM(total_net_profit) AS grand_total_net_profit
    FROM TopSales
),
CustomerData AS (
    SELECT 
        c.c_customer_sk,
        c.c_birth_year, 
        cd.cd_gender AS gender,
        DEMO_INCOME.hd_income_band_sk,
        CASE 
            WHEN c.c_birth_year IS NULL THEN 'Unknown'
            WHEN c.c_birth_year < 1980 THEN 'Before 1980'
            ELSE '1980 or later'
        END AS Age_Category
    FROM customer c
    LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN household_demographics DEMO_INCOME ON cd.cd_demo_sk = DEMO_INCOME.hd_demo_sk
    WHERE cd.cd_gender IS NOT NULL
),
FinalResults AS (
    SELECT 
        cd.c_birth_year,
        cd.gender,
        COUNT(DISTINCT cd.c_customer_sk) AS customer_count,
        COALESCE(SUM(ts.total_quantity), 0) AS total_quantity,
        COALESCE(SUM(ts.total_net_profit), 0) AS total_net_profit
    FROM CustomerData cd
    LEFT JOIN TopSales ts ON cd.hd_income_band_sk = ts.web_site_sk
    GROUP BY cd.c_birth_year, cd.gender
)
SELECT 
    fr.c_birth_year, 
    fr.gender,
    fr.customer_count,
    fr.total_quantity,
    fr.total_net_profit,
    t.grand_total_quantity,
    t.grand_total_net_profit
FROM FinalResults fr
CROSS JOIN TotalSales t
WHERE fr.total_quantity > 0 OR fr.total_net_profit > 0
ORDER BY fr.c_birth_year DESC, fr.gender;
