
WITH CustomerStats AS (
    SELECT 
        cd.cd_gender,
        COUNT(DISTINCT c.c_customer_sk) AS total_customers,
        AVG(cd.cd_purchase_estimate) AS avg_purchase_estimate,
        SUM(cd.cd_dep_count) AS total_dependents,
        SUM(cd.cd_dep_employed_count) AS employed_dependents,
        SUM(cd.cd_dep_college_count) AS college_dependents
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    GROUP BY 
        cd.cd_gender
),
SalesData AS (
    SELECT 
        d.d_year,
        SUM(ws.ws_ext_sales_price) AS total_sales,
        SUM(ws.ws_ext_discount_amt) AS total_discount,
        SUM(ws.ws_net_profit) AS total_profit
    FROM 
        web_sales ws
    JOIN 
        date_dim d ON ws.ws_sold_date_sk = d.d_date_sk
    GROUP BY 
        d.d_year
),
InventoryStatus AS (
    SELECT 
        i.i_item_id,
        SUM(inv.inv_quantity_on_hand) AS total_quantity,
        AVG(i.i_current_price) AS avg_price
    FROM 
        inventory inv
    JOIN 
        item i ON inv.inv_item_sk = i.i_item_sk
    GROUP BY 
        i.i_item_id
)
SELECT 
    cs.cd_gender,
    cs.total_customers,
    cs.avg_purchase_estimate,
    cs.total_dependents,
    cs.employed_dependents,
    cs.college_dependents,
    sd.d_year,
    sd.total_sales,
    sd.total_discount,
    sd.total_profit,
    is.i_item_id,
    is.total_quantity,
    is.avg_price
FROM 
    CustomerStats cs
JOIN 
    SalesData sd ON cs.total_customers > 1000 
JOIN 
    InventoryStatus is ON cs.total_dependents > 5 
ORDER BY 
    sd.d_year DESC, cs.cd_gender;
