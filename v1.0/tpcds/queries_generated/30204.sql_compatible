
WITH RECURSIVE sales_hierarchy AS (
    SELECT 
        ss_store_sk,
        SUM(ss_net_profit) AS total_net_profit,
        COUNT(ss_ticket_number) AS total_sales,
        RANK() OVER (PARTITION BY ss_store_sk ORDER BY SUM(ss_net_profit) DESC) AS profit_rank
    FROM store_sales
    WHERE ss_sold_date_sk BETWEEN 2450000 AND 2450600 
    GROUP BY ss_store_sk
),
customer_income AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        CASE 
            WHEN hd.hd_income_band_sk IS NOT NULL THEN CONCAT(ib.ib_lower_bound, ' - ', ib.ib_upper_bound) 
            ELSE 'Not Specified'
        END AS income_band,
        COUNT(DISTINCT ss.ss_ticket_number) AS total_purchases
    FROM customer c
    LEFT JOIN household_demographics hd ON c.c_current_hdemo_sk = hd.hd_demo_sk
    LEFT JOIN income_band ib ON hd.hd_income_band_sk = ib.ib_income_band_sk
    LEFT JOIN store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    GROUP BY c.c_customer_sk, c.c_first_name, c.c_last_name, hd.hd_income_band_sk
),
sales_summary AS (
    SELECT 
        sh.ss_store_sk,
        sh.total_net_profit,
        sh.total_sales,
        ci.income_band,
        ci.total_purchases
    FROM sales_hierarchy sh
    JOIN customer_income ci ON ci.total_purchases > 0
)
SELECT 
    s.s_store_name,
    ss.total_net_profit,
    ss.total_sales,
    ss.income_band,
    ss.total_purchases,
    COALESCE(NULLIF(ss.total_sales, 0), 0) * 1.0 / NULLIF(ss.total_sales, 0) AS purchase_per_sale_ratio,
    CASE 
        WHEN ss.total_net_profit > 10000 THEN 'High Performer'
        WHEN ss.total_net_profit BETWEEN 5000 AND 10000 THEN 'Moderate Performer'
        ELSE 'Low Performer'
    END AS performance_category
FROM store s
JOIN sales_summary ss ON s.s_store_sk = ss.ss_store_sk
ORDER BY ss.total_net_profit DESC, s.s_store_name;
