
WITH RECURSIVE income_summary AS (
    SELECT 
        hd_demo_sk,
        ib_income_band_sk,
        hd_buy_potential,
        hd_dep_count,
        hd_vehicle_count,
        ROW_NUMBER() OVER (PARTITION BY ib_income_band_sk ORDER BY hd_dep_count DESC) AS income_rank
    FROM household_demographics
    JOIN income_band ON household_demographics.hd_income_band_sk = income_band.ib_income_band_sk
),
customer_sales AS (
    SELECT 
        c.c_customer_sk,
        SUM(ws.ws_ext_sales_price) AS total_web_sales,
        SUM(ss.ss_ext_sales_price) AS total_store_sales,
        SUM(cs.cs_ext_sales_price) AS total_catalog_sales
    FROM customer c
    LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    LEFT JOIN store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    LEFT JOIN catalog_sales cs ON c.c_customer_sk = cs.cs_bill_customer_sk
    GROUP BY c.c_customer_sk
),
top_customers AS (
    SELECT 
        cs.c_customer_sk,
        cs.total_web_sales,
        cs.total_store_sales,
        cs.total_catalog_sales,
        RANK() OVER (ORDER BY (cs.total_web_sales + cs.total_store_sales + cs.total_catalog_sales) DESC) AS overall_rank
    FROM customer_sales cs
),
sales_analysis AS (
    SELECT 
        i.i_item_id,
        COUNT(DISTINCT ws.ws_order_number) AS total_orders,
        AVG(COALESCE(ws.ws_net_profit, 0)) AS avg_net_profit,
        COALESCE(SUM(ws.ws_ext_sales_price), 0) AS total_sales,
        COUNT(DISTINCT cs.c_customer_sk) AS unique_customers
    FROM item i
    LEFT JOIN web_sales ws ON i.i_item_sk = ws.ws_item_sk
    LEFT JOIN customer_sales cs ON ws.ws_bill_customer_sk = cs.c_customer_sk
    GROUP BY i.i_item_id
)
SELECT 
    u.ib_income_band_sk,
    u.hd_buy_potential,
    COALESCE(sa.total_orders, 0) AS total_orders,
    COALESCE(sa.avg_net_profit, 0) AS avg_net_profit,
    COALESCE(sa.total_sales, 0) AS total_sales,
    COALESCE(sa.unique_customers, 0) AS unique_customers,
    t.overall_rank
FROM 
    income_summary u
LEFT JOIN sales_analysis sa ON u.hd_demo_sk = sa.i_item_id
LEFT JOIN top_customers t ON u.hd_demo_sk = t.c_customer_sk
WHERE 
    u.income_rank <= 10 OR u.hd_buy_potential LIKE 'High%'
ORDER BY 
    u.ib_income_band_sk, t.overall_rank;
