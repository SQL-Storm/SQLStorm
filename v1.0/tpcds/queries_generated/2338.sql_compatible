
WITH RankedSales AS (
    SELECT
        ws.web_site_sk,
        SUM(ws.ws_ext_sales_price) AS total_sales,
        COUNT(DISTINCT ws.ws_order_number) AS total_orders,
        ROW_NUMBER() OVER (PARTITION BY ws.web_site_sk ORDER BY SUM(ws.ws_ext_sales_price) DESC) AS rank
    FROM
        web_sales ws
    JOIN
        date_dim dd ON ws.ws_sold_date_sk = dd.d_date_sk
    WHERE
        dd.d_year = 2023
    GROUP BY
        ws.web_site_sk
), CustomerReturns AS (
    SELECT
        wr.refunded_customer_sk,
        SUM(wr.wr_return_amt) AS total_returned
    FROM
        web_returns wr
    GROUP BY
        wr.refunded_customer_sk
), CTE_Sites AS (
    SELECT
        w.web_site_id,
        w.web_name,
        COALESCE(rs.total_sales, 0) AS total_sales,
        COALESCE(cr.total_returned, 0) AS total_returned,
        (COALESCE(rs.total_sales, 0) - COALESCE(cr.total_returned, 0)) AS net_revenue
    FROM
        web_site w
    LEFT JOIN
        RankedSales rs ON w.web_site_sk = rs.web_site_sk
    LEFT JOIN
        CustomerReturns cr ON cr.refunded_customer_sk = w.web_site_sk
)
SELECT
    site.web_site_id,
    site.web_name,
    site.total_sales,
    site.total_returned,
    site.net_revenue,
    CASE 
        WHEN site.net_revenue > 0 THEN 'Profitable'
        WHEN site.net_revenue < 0 THEN 'Loss'
        ELSE 'Break-even'
    END AS revenue_status
FROM
    CTE_Sites site
WHERE
    site.total_sales > 1000000
ORDER BY
    site.net_revenue DESC
FETCH FIRST 10 ROWS ONLY; 
