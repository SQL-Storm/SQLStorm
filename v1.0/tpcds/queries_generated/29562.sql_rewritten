WITH CustomerEnhanced AS (
    SELECT 
        c.c_customer_id,
        CONCAT(c.c_first_name, ' ', c.c_last_name) AS full_name,
        cd.cd_gender,
        cd.cd_marital_status,
        CONCAT(ca.ca_street_number, ' ', ca.ca_street_name, ' ', ca.ca_street_type) AS full_address,
        ca.ca_city,
        ca.ca_state,
        ca.ca_zip,
        CASE 
            WHEN cd.cd_purchase_estimate BETWEEN 0 AND 200 THEN 'Low'
            WHEN cd.cd_purchase_estimate BETWEEN 201 AND 500 THEN 'Medium'
            ELSE 'High'
        END AS purchase_estimate_band
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    JOIN 
        customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
),
ItemDetails AS (
    SELECT 
        i.i_item_id,
        i.i_product_name,
        i.i_current_price,
        i.i_brand,
        i.i_category
    FROM 
        item i
),
SalesData AS (
    SELECT 
        ws.ws_order_number,
        ws.ws_sold_date_sk,
        ws.ws_item_sk,
        ws.ws_quantity,
        ws.ws_ext_sales_price,
        ws.ws_net_profit
    FROM 
        web_sales ws
)
SELECT 
    ce.full_name,
    ce.purchase_estimate_band,
    id.i_product_name,
    SUM(sd.ws_quantity) AS total_quantity,
    SUM(sd.ws_ext_sales_price) AS total_sales,
    AVG(sd.ws_net_profit) AS avg_profit
FROM 
    CustomerEnhanced ce
JOIN 
    SalesData sd ON ce.c_customer_id = sd.ws_order_number  
JOIN 
    ItemDetails id ON sd.ws_item_sk = id.i_item_sk
GROUP BY 
    ce.full_name, 
    ce.purchase_estimate_band,
    id.i_product_name
ORDER BY 
    total_sales DESC, 
    total_quantity DESC
LIMIT 100;