
WITH RECURSIVE revenue_cte AS (
    SELECT ws_sold_date_sk, SUM(ws_ext_sales_price) AS total_revenue
    FROM web_sales
    GROUP BY ws_sold_date_sk
    UNION ALL
    SELECT cs_sold_date_sk, SUM(cs_ext_sales_price)
    FROM catalog_sales
    GROUP BY cs_sold_date_sk
),
customer_data AS (
    SELECT c.c_customer_sk, c.c_first_name, c.c_last_name, cd.cd_gender, 
           SUM(ws.ws_ext_sales_price) AS total_web_sales,
           SUM(cs.cs_ext_sales_price) AS total_catalog_sales
    FROM customer c 
    LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    LEFT JOIN catalog_sales cs ON c.c_customer_sk = cs.cs_bill_customer_sk
    GROUP BY c.c_customer_sk, c.c_first_name, c.c_last_name, cd.cd_gender
),
store_data AS (
    SELECT s_store_sk, SUM(ss_ext_sales_price) AS total_store_sales
    FROM store_sales
    GROUP BY s_store_sk
),
combined_sales AS (
    SELECT cd.c_customer_sk, 
           cd.c_first_name, 
           cd.c_last_name, 
           COALESCE(cd.total_web_sales, 0) AS web_sales,
           COALESCE(cd.total_catalog_sales, 0) AS catalog_sales,
           COALESCE(sd.total_store_sales, 0) AS store_sales
    FROM customer_data cd
    FULL OUTER JOIN store_data sd ON cd.c_customer_sk = sd.s_store_sk
)
SELECT cb.c_customer_sk, 
       cb.c_first_name, 
       cb.c_last_name,
       cb.web_sales,
       cb.catalog_sales,
       cb.store_sales,
       ROW_NUMBER() OVER (PARTITION BY cb.c_customer_sk ORDER BY cb.web_sales DESC) AS rank,
       CASE 
           WHEN cb.web_sales > cb.catalog_sales THEN 'Web Sales Dominant'
           WHEN cb.catalog_sales > cb.web_sales THEN 'Catalog Sales Dominant'
           ELSE 'Equal Contributions' 
       END AS sales_dominance,
       (SELECT COUNT(DISTINCT ws.web_site_sk) AS total_websites
        FROM web_site ws 
        WHERE ws.web_gmt_offset IS NOT NULL
          AND ws.web_close_date_sk IS NULL
        ) AS active_websites
FROM combined_sales cb
WHERE cb.web_sales IS NOT NULL 
  OR cb.catalog_sales IS NOT NULL 
  OR cb.store_sales IS NOT NULL
ORDER BY cb.store_sales DESC, cb.c_last_name ASC
LIMIT 50;
