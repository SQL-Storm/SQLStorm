
WITH RECURSIVE SalesCTE AS (
    SELECT 
        ws_order_number,
        ws_item_sk,
        ws_quantity,
        ws_sold_date_sk,
        ws_ship_date_sk,
        ROW_NUMBER() OVER (PARTITION BY ws_order_number ORDER BY ws_item_sk) AS rn
    FROM 
        web_sales
    WHERE 
        ws_sold_date_sk BETWEEN 20220101 AND 20221231
),
AggregateSales AS (
    SELECT 
        ws_order_number,
        SUM(ws_quantity) AS total_quantity,
        COUNT(DISTINCT ws_item_sk) AS unique_items,
        AVG(ws_quantity) AS avg_quantity_per_item
    FROM 
        SalesCTE
    GROUP BY 
        ws_order_number
),
CustomerReturns AS (
    SELECT 
        sr_item_sk,
        SUM(sr_return_quantity) AS total_returns
    FROM 
        store_returns
    GROUP BY 
        sr_item_sk
),
CustomerDetails AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_income_band_sk,
        hd.hd_income_band_sk
    FROM 
        customer c
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN 
        household_demographics hd ON c.c_current_hdemo_sk = hd.hd_demo_sk
)
SELECT 
    det.c_customer_sk,
    det.c_first_name,
    det.c_last_name,
    COALESCE(SUM(as.total_quantity), 0) AS total_quantity_sold,
    COALESCE(SUM(cr.total_returns), 0) AS total_returns,
    AVG(as.avg_quantity_per_item) AS average_quantity_per_order,
    CASE 
        WHEN COUNT(cr.total_returns) > 0 THEN 'Has Returns'
        ELSE 'No Returns'
    END AS return_status
FROM 
    CustomerDetails det
LEFT JOIN 
    AggregateSales as ON det.c_customer_sk = as.ws_order_number
LEFT JOIN 
    CustomerReturns cr ON as.ws_item_sk = cr.sr_item_sk
GROUP BY 
    det.c_customer_sk,
    det.c_first_name,
    det.c_last_name
HAVING 
    COALESCE(SUM(as.total_quantity), 0) > 50 OR 
    CASE 
        WHEN COUNT(cr.total_returns) > 0 THEN 'Has Returns'
        ELSE 'No Returns'
    END = 'Has Returns'
ORDER BY 
    total_quantity_sold DESC, 
    det.c_last_name, 
    det.c_first_name;
