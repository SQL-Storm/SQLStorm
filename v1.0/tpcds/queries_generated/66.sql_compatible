
WITH CustomerReturns AS (
    SELECT 
        sr_customer_sk,
        SUM(sr_return_quantity) AS total_returned,
        SUM(sr_return_amt) AS total_return_amt,
        COUNT(DISTINCT sr_ticket_number) AS total_tickets
    FROM 
        store_returns
    WHERE 
        sr_returned_date_sk >= (SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = 2023)
    GROUP BY 
        sr_customer_sk
),
CustomerDemographics AS (
    SELECT 
        cd_demo_sk,
        SUM(cd_dep_count) AS total_dependents,
        COUNT(*) AS total_customers 
    FROM 
        customer_demographics
    GROUP BY 
        cd_demo_sk
),
ReturnsWithDemographics AS (
    SELECT 
        cr.sr_customer_sk,
        cr.total_returned,
        cr.total_return_amt,
        cd.total_dependents,
        cd.total_customers
    FROM 
        CustomerReturns cr
    LEFT JOIN 
        CustomerDemographics cd 
    ON 
        cr.sr_customer_sk = cd.cd_demo_sk
),
ItemSales AS (
    SELECT 
        ws.ws_item_sk,
        SUM(ws.ws_quantity) AS total_sold,
        SUM(ws.ws_net_profit) AS total_net_profit,
        AVG(ws.ws_sales_price) AS avg_sales_price,
        MAX(ws.ws_sales_price) AS max_sales_price
    FROM 
        web_sales ws
    WHERE 
        ws.ws_sold_date_sk >= (SELECT MIN(d_date_sk) FROM date_dim WHERE d_year = 2023)
    GROUP BY 
        ws.ws_item_sk
)
SELECT 
    rwd.sr_customer_sk,
    rwd.total_returned,
    rwd.total_return_amt,
    rwd.total_dependents,
    rwd.total_customers,
    i.total_sold,
    i.total_net_profit,
    i.avg_sales_price,
    i.max_sales_price
FROM 
    ReturnsWithDemographics rwd
FULL OUTER JOIN 
    ItemSales i
ON 
    rwd.sr_customer_sk = (SELECT c_customer_sk FROM customer WHERE c_current_cdemo_sk = rwd.sr_customer_sk LIMIT 1)
WHERE 
    (rwd.total_returned IS NOT NULL AND rwd.total_returned > 0)
    OR 
    (i.total_sold IS NOT NULL AND i.total_sold > 0)
ORDER BY 
    rwd.total_return_amt DESC NULLS LAST, 
    i.total_net_profit DESC NULLS LAST;
