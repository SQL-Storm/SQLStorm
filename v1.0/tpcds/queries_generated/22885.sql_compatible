
WITH OrderDetails AS (
    SELECT 
        COALESCE(ws_bill_customer_sk, cs_bill_customer_sk, ss_customer_sk) AS customer_sk,
        COALESCE(ws_ship_customer_sk, cs_ship_customer_sk, ss_store_sk) AS ship_customer_sk,
        SUM(ws_net_profit) AS total_web_profit,
        SUM(cs_net_profit) AS total_catalog_profit,
        SUM(ss_net_profit) AS total_store_profit,
        COUNT(DISTINCT ws_order_number) AS total_web_orders,
        COUNT(DISTINCT cs_order_number) AS total_catalog_orders,
        COUNT(DISTINCT ss_ticket_number) AS total_store_tickets
    FROM 
        web_sales ws
    FULL OUTER JOIN catalog_sales cs ON ws.ws_item_sk = cs.cs_item_sk
    FULL OUTER JOIN store_sales ss ON ws.ws_item_sk = ss.ss_item_sk
    WHERE 
        COALESCE(ws_purchase_date_sk, cs_sold_date_sk, ss_sold_date_sk) >= (
            SELECT 
                MIN(d_date_sk) 
            FROM 
                date_dim 
            WHERE 
                d_year = 2023
        )
    GROUP BY 
        COALESCE(ws_bill_customer_sk, cs_bill_customer_sk, ss_customer_sk)
),
CustomerDemographics AS (
    SELECT 
        c.c_customer_sk,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_purchase_estimate,
        ROW_NUMBER() OVER (PARTITION BY cd.cd_gender ORDER BY c.c_customer_sk) AS rn,
        CASE 
            WHEN cd.cd_marital_status = 'S' THEN 'Single'
            WHEN cd.cd_marital_status = 'M' THEN 'Married'
            ELSE 'Unknown'
        END AS marital_status_desc
    FROM 
        customer c
    JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
)
SELECT 
    d.d_date AS sale_date,
    od.customer_sk,
    cd.cd_gender,
    cd.marital_status_desc,
    od.total_web_profit,
    od.total_catalog_profit,
    od.total_store_profit,
    (od.total_web_profit + od.total_catalog_profit + od.total_store_profit) AS total_profit,
    (od.total_web_orders + od.total_catalog_orders + od.total_store_tickets) AS total_unique_orders,
    DENSE_RANK() OVER (PARTITION BY cd.cd_gender ORDER BY (od.total_web_profit + od.total_catalog_profit + od.total_store_profit) DESC) AS profit_rank
FROM 
    OrderDetails od
JOIN 
    CustomerDemographics cd ON od.customer_sk = cd.c_customer_sk
JOIN 
    date_dim d ON d.d_date_sk = od.customer_sk
WHERE 
    (od.total_web_profit + od.total_catalog_profit + od.total_store_profit) > 
        (SELECT AVG(od2.total_web_profit + od2.total_catalog_profit + od2.total_store_profit) FROM OrderDetails od2) 
    AND cd.cd_purchase_estimate IS NOT NULL
ORDER BY 
    profit_rank, sale_date DESC
LIMIT 100 OFFSET 10;
