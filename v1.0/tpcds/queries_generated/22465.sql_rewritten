WITH RankedSales AS (
    SELECT 
        ws.ws_item_sk,
        ws.ws_order_number,
        ws.ws_sales_price,
        ws.ws_quantity,
        ROW_NUMBER() OVER (PARTITION BY ws.ws_item_sk ORDER BY ws.ws_sales_price DESC) AS rank_sales
    FROM 
        web_sales ws
    WHERE 
        ws.ws_sold_date_sk = (SELECT MAX(d_date_sk) FROM date_dim WHERE d_date = cast('2002-10-01' as date)) 
        AND ws.ws_quantity > 0
),
CustomerStats AS (
    SELECT 
        c.c_customer_sk,
        d.cd_gender,
        d.cd_marital_status,
        SUM(CASE WHEN ws.ws_sales_price IS NOT NULL THEN ws.ws_sales_price ELSE 0 END) AS total_spent,
        COUNT(ws.ws_order_number) AS total_orders,
        AVG(ws.ws_sales_price) AS avg_order_value
    FROM 
        customer c
    LEFT JOIN 
        customer_demographics d ON c.c_current_cdemo_sk = d.cd_demo_sk
    LEFT JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY 
        c.c_customer_sk, d.cd_gender, d.cd_marital_status
),
StoreDetails AS (
    SELECT 
        s.s_store_id,
        s.s_store_name,
        w.w_warehouse_name,
        s.s_state,
        COUNT(DISTINCT ss.ss_ticket_number) AS total_sales,
        SUM(ss.ss_net_profit) AS total_profit
    FROM 
        store s
    LEFT JOIN 
        warehouse w ON s.s_store_sk = w.w_warehouse_sk
    LEFT JOIN 
        store_sales ss ON s.s_store_sk = ss.ss_store_sk
    GROUP BY 
        s.s_store_id, s.s_store_name, w.w_warehouse_name, s.s_state
)
SELECT 
    cs.c_customer_sk,
    cs.cd_gender,
    cs.cd_marital_status,
    cs.total_spent,
    cs.total_orders,
    cs.avg_order_value,
    sd.s_store_name,
    sd.total_sales,
    sd.total_profit,
    CASE 
        WHEN cs.total_spent IS NULL AND sd.total_profit IS NOT NULL THEN 'Null Customer Spend'
        WHEN cs.total_spent > 1000 THEN 'High Value Customer'
        ELSE 'Regular Customer'
    END AS customer_type
FROM 
    CustomerStats cs
FULL OUTER JOIN 
    StoreDetails sd ON cs.c_customer_sk = sd.s_store_id
WHERE 
    (cs.total_orders > 5 OR sd.total_sales > 10)
    AND (cs.total_spent > 500 OR sd.total_profit > 200)
ORDER BY 
    customer_type DESC, cs.total_spent DESC NULLS LAST;