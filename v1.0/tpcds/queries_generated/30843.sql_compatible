
WITH RECURSIVE revenue_summary AS (
    SELECT 
        ws_ship_date_sk,
        ws_item_sk,
        SUM(ws_net_paid) AS total_revenue,
        COUNT(ws_order_number) AS total_orders,
        ROW_NUMBER() OVER (PARTITION BY ws_item_sk ORDER BY SUM(ws_net_paid) DESC) AS revenue_rank
    FROM 
        web_sales 
    GROUP BY 
        ws_ship_date_sk, ws_item_sk
),
customer_stats AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        SUM(ss.ss_ext_sales_price) AS total_store_sales,
        AVG(ss.ss_ext_sales_price) AS avg_store_sales,
        COUNT(ss.ss_ticket_number) AS total_store_orders,
        COUNT(DISTINCT ws.ws_order_number) AS total_web_orders,
        MAX(ss.ss_ext_sales_price) AS max_store_sale
    FROM 
        customer c
    LEFT JOIN 
        store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    LEFT JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_ship_customer_sk
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    GROUP BY 
        c.c_customer_sk, c.c_first_name, c.c_last_name, cd.cd_gender
),
holiday_sales AS (
    SELECT 
        d.d_date_sk,
        d.d_holiday,
        SUM(ws.ws_net_paid_inc_tax) AS total_web_sales
    FROM 
        web_sales ws
    JOIN 
        date_dim d ON ws.ws_sold_date_sk = d.d_date_sk
    WHERE 
        d.d_holiday = 'Y'
    GROUP BY 
        d.d_date_sk, d.d_holiday
)
SELECT 
    cs.c_first_name,
    cs.c_last_name,
    cs.cd_gender,
    cs.total_store_sales,
    cs.avg_store_sales,
    cs.total_store_orders,
    cs.total_web_orders,
    hs.total_web_sales,
    COALESCE(rs.total_revenue, 0) AS total_revenue_from_web,
    CASE 
        WHEN cs.total_store_orders > cs.total_web_orders THEN 'More store sales'
        ELSE 'More web sales'
    END AS sales_comparison
FROM 
    customer_stats cs
LEFT JOIN 
    holiday_sales hs ON cs.c_customer_sk = hs.d_date_sk
LEFT JOIN 
    revenue_summary rs ON rs.ws_item_sk = ANY(SELECT cs.ws_item_sk FROM web_sales cs)
WHERE 
    cs.total_store_sales IS NOT NULL
    AND cs.total_web_orders IS NOT NULL
ORDER BY 
    cs.total_store_sales DESC, cs.total_web_orders ASC;
