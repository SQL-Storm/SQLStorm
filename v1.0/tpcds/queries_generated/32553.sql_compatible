
WITH RECURSIVE SalesCTE AS (
    SELECT 
        ws_item_sk,
        SUM(ws_net_profit) AS total_profit,
        COUNT(DISTINCT ws_order_number) AS order_count,
        1 AS level
    FROM 
        web_sales
    WHERE 
        ws_sold_date_sk >= (SELECT MIN(d_date_sk) FROM date_dim WHERE d_year = 2023)
    GROUP BY 
        ws_item_sk
    UNION ALL
    SELECT 
        inv.inv_item_sk,
        SUM(ws.ws_net_profit) + SUM(ws.ws_net_profit) * 0.1 AS total_profit,
        COUNT(DISTINCT ws.ws_order_number) + COUNT(DISTINCT ws.ws_order_number) AS order_count,
        level + 1
    FROM 
        SalesCTE AS sales 
    JOIN 
        inventory AS inv ON inv.inv_item_sk = sales.ws_item_sk
    JOIN 
        web_sales AS ws ON ws.ws_item_sk = inv.inv_item_sk
    WHERE 
        inv.inv_quantity_on_hand > 0
    GROUP BY 
        inv.inv_item_sk, level
),
TopSales AS (
    SELECT 
        c.c_first_name,
        c.c_last_name,
        s.s_store_name,
        SUM(ss.ss_net_paid_inc_tax) AS total_sales,
        ROW_NUMBER() OVER (PARTITION BY s.s_store_sk ORDER BY SUM(ss.ss_net_paid_inc_tax) DESC) AS rank
    FROM 
        customer AS c
    JOIN 
        store_sales AS ss ON c.c_customer_sk = ss.ss_customer_sk
    JOIN 
        store AS s ON ss.ss_store_sk = s.s_store_sk
    GROUP BY 
        c.c_first_name, c.c_last_name, s.s_store_name
)
SELECT 
    ts.c_first_name,
    ts.c_last_name,
    ts.s_store_name,
    ts.total_sales,
    COALESCE(sal.total_profit, 0) AS total_profit,
    ts.rank
FROM 
    TopSales AS ts
LEFT JOIN 
    SalesCTE AS sal ON ts.rank = 1
ORDER BY 
    ts.total_sales DESC, total_profit DESC
FETCH FIRST 10 ROWS ONLY;
