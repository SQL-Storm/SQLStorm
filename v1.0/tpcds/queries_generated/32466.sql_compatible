
WITH RECURSIVE customer_hierarchy AS (
    SELECT c_customer_sk, c_first_name, c_last_name, c_current_cdemo_sk, 0 AS level
    FROM customer
    WHERE c_current_cdemo_sk IS NOT NULL
    
    UNION ALL
    
    SELECT c.c_customer_sk, c.c_first_name, c.c_last_name, c.c_current_cdemo_sk, ch.level + 1
    FROM customer c
    INNER JOIN customer_hierarchy ch ON c.c_current_cdemo_sk = ch.c_current_cdemo_sk
),
sales_summary AS (
    SELECT ws_bill_customer_sk, SUM(ws_net_paid) AS total_sales, COUNT(ws_order_number) AS order_count
    FROM web_sales
    GROUP BY ws_bill_customer_sk
),
address_info AS (
    SELECT ca_state, COUNT(*) AS customer_count
    FROM customer
    INNER JOIN customer_address ON c_current_addr_sk = ca_address_sk
    GROUP BY ca_state
),
high_value_customers AS (
    SELECT ch.c_customer_sk, ch.c_first_name, ch.c_last_name, ss.total_sales, ai.customer_count
    FROM customer_hierarchy ch
    LEFT JOIN sales_summary ss ON ch.c_customer_sk = ss.ws_bill_customer_sk
    LEFT JOIN address_info ai ON ai.ca_state IS NOT NULL
    WHERE ss.total_sales IS NOT NULL AND ss.total_sales > 1000
)
SELECT hvc.c_customer_sk, hvc.c_first_name, hvc.c_last_name, hvc.total_sales, hvc.customer_count, 
       ROW_NUMBER() OVER (ORDER BY hvc.total_sales DESC) AS sales_rank,
       CASE 
           WHEN hvc.total_sales IS NOT NULL THEN CONCAT('$', CAST(ROUND(hvc.total_sales, 2) AS VARCHAR))
           ELSE 'N/A' 
       END AS formatted_sales
FROM high_value_customers hvc
LEFT JOIN customer_demographics cd ON hvc.c_current_cdemo_sk = cd.cd_demo_sk
WHERE cd.cd_gender = 'M' 
  AND (hvc.customer_count IS NULL OR hvc.customer_count > 1)
ORDER BY hvc.total_sales DESC;
