WITH RECURSIVE SalesCTE AS (
    SELECT 
        ws_item_sk,
        SUM(ws_ext_sales_price) AS total_sales_price,
        COUNT(DISTINCT ws_order_number) AS order_count,
        ROW_NUMBER() OVER (PARTITION BY ws_item_sk ORDER BY SUM(ws_ext_sales_price) DESC) AS rank
    FROM 
        web_sales
    GROUP BY 
        ws_item_sk
), LatestReturns AS (
    SELECT 
        cr_item_sk,
        SUM(cr_return_quantity) AS total_returned,
        COUNT(DISTINCT cr_order_number) AS return_count
    FROM 
        catalog_returns 
    WHERE 
        cr_returned_date_sk IN (
            SELECT DISTINCT d_date_sk
            FROM date_dim
            WHERE d_date >= cast('2002-10-01' as date) - INTERVAL '30 DAYS'
        )
    GROUP BY 
        cr_item_sk
), CustomerSpending AS (
    SELECT 
        c.c_customer_sk,
        SUM(ws_ext_sales_price) AS total_spent,
        COUNT(DISTINCT ws_order_number) AS order_count_last_30_days
    FROM 
        customer c
    JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    WHERE 
        ws.ws_sold_date_sk IN (
            SELECT d_date_sk 
            FROM date_dim 
            WHERE d_date >= cast('2002-10-01' as date) - INTERVAL '30 DAYS'
        )
    GROUP BY 
        c.c_customer_sk
)
SELECT 
    i.i_item_id,
    COALESCE(s.total_sales_price, 0) AS sales_price,
    COALESCE(r.total_returned, 0) AS total_returned,
    COALESCE(c.total_spent, 0) AS customer_spending,
    s.rank
FROM 
    item i
LEFT JOIN SalesCTE s ON i.i_item_sk = s.ws_item_sk
LEFT JOIN LatestReturns r ON i.i_item_sk = r.cr_item_sk
LEFT JOIN CustomerSpending c ON c.c_customer_sk IN (
    SELECT c_customer_sk 
    FROM customer 
    WHERE c_current_cdemo_sk IN (
        SELECT cd_demo_sk 
        FROM customer_demographics 
        WHERE cd_gender = 'F' AND cd_marital_status = 'M'
    )
)
WHERE 
    (s.rank IS NOT NULL AND s.rank <= 10)
ORDER BY 
    total_spent DESC, sales_price DESC;