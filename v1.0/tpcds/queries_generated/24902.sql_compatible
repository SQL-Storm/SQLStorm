
WITH RECURSIVE customer_hierarchy AS (
    SELECT c_customer_sk, c_first_name, c_last_name, c_current_cdemo_sk, 
           CAST(c_customer_id AS VARCHAR(100)) AS customer_path
    FROM customer
    WHERE c_customer_sk IS NOT NULL
    UNION ALL
    SELECT c.c_customer_sk, c.c_first_name, c.c_last_name, c.c_current_cdemo_sk,
           CONCAT(ch.customer_path, ' -> ', c.c_customer_id)
    FROM customer c
    JOIN customer_hierarchy ch ON c.c_current_cdemo_sk = ch.c_current_cdemo_sk
    WHERE ch.c_customer_sk IS NOT NULL
)
SELECT ca.ca_city, 
       COUNT(DISTINCT CASE WHEN cd.cd_gender = 'F' THEN c.c_customer_id END) AS female_customers,
       COUNT(DISTINCT CASE WHEN cd.cd_gender = 'M' THEN c.c_customer_id END) AS male_customers,
       AVG(COALESCE(cd.cd_purchase_estimate, 0)) AS avg_purchase_estimate,
       SUM(ws.ws_net_profit) + COALESCE(SUM(cs.cs_net_profit), 0) AS total_net_profit,
       STRING_AGG(DISTINCT ch.customer_path, '; ') AS customer_path_list
FROM customer_address ca
LEFT JOIN customer c ON c.c_current_addr_sk = ca.ca_address_sk
LEFT JOIN customer_demographics cd ON cd.cd_demo_sk = c.c_current_cdemo_sk
LEFT JOIN web_sales ws ON ws.ws_bill_customer_sk = c.c_customer_sk
LEFT JOIN catalog_sales cs ON cs.cs_bill_customer_sk = c.c_customer_sk
LEFT JOIN customer_hierarchy ch ON ch.c_customer_sk = c.c_customer_sk
WHERE ca.ca_city IS NOT NULL
  AND (cd.cd_marital_status = 'M' OR cd.cd_marital_status IS NULL)
  AND (SELECT COUNT(*) 
       FROM store s 
       WHERE s.s_state = ca.ca_state
         AND s.s_country = 'USA') > 0
GROUP BY ca.ca_city
HAVING COUNT(DISTINCT c.c_customer_sk) > 5 
   OR SUM(ws.ws_net_paid) > 1000
ORDER BY female_customers DESC, male_customers ASC;
