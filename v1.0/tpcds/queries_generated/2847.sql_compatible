
WITH sales_summary AS (
    SELECT 
        ws_item_sk,
        SUM(ws_quantity) AS total_quantity,
        SUM(ws_net_paid_inc_tax) AS total_sales,
        ROW_NUMBER() OVER (PARTITION BY ws_item_sk ORDER BY SUM(ws_net_paid_inc_tax) DESC) AS sales_rank
    FROM web_sales
    WHERE ws_sold_date_sk BETWEEN 2450000 AND 2450600
    GROUP BY ws_item_sk
),
customer_info AS (
    SELECT 
        c_customer_sk,
        cd_gender,
        cd_marital_status,
        cd_income_band_sk,
        ROW_NUMBER() OVER (PARTITION BY c_customer_sk ORDER BY c_first_name, c_last_name) AS rn
    FROM customer
    LEFT JOIN customer_demographics ON c_current_cdemo_sk = cd_demo_sk
),
top_customers AS (
    SELECT 
        ci.c_customer_sk,
        ci.cd_gender,
        ci.cd_marital_status,
        ss.total_quantity,
        ss.total_sales
    FROM customer_info ci
    JOIN sales_summary ss ON ci.c_customer_sk = ss.ws_item_sk
    WHERE ss.sales_rank <= 10
),
inventory_stats AS (
    SELECT 
        inv_item_sk,
        AVG(inv_quantity_on_hand) AS avg_inventory,
        MAX(inv_quantity_on_hand) AS max_inventory
    FROM inventory
    GROUP BY inv_item_sk
),
final_report AS (
    SELECT 
        tc.c_customer_sk,
        tc.cd_gender,
        tc.cd_marital_status,
        COALESCE(tc.total_quantity, 0) AS quantity_purchased,
        COALESCE(tc.total_sales, 0) AS total_spent,
        COALESCE(i.avg_inventory, 0) AS avg_inventory,
        COALESCE(i.max_inventory, 0) AS max_inventory
    FROM top_customers tc
    FULL OUTER JOIN inventory_stats i ON tc.c_customer_sk = i.inv_item_sk
)
SELECT 
    fr.c_customer_sk,
    fr.cd_gender,
    fr.cd_marital_status,
    fr.quantity_purchased,
    fr.total_spent,
    fr.avg_inventory,
    fr.max_inventory
FROM final_report fr
WHERE fr.total_spent > 1000 
AND fr.quantity_purchased IS NOT NULL
ORDER BY fr.total_spent DESC;
