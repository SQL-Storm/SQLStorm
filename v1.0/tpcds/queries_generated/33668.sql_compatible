
WITH RECURSIVE sales_hierarchy AS (
    SELECT 
        s.ss_item_sk,
        SUM(s.ss_quantity) AS total_quantity,
        ROW_NUMBER() OVER (PARTITION BY s.ss_item_sk ORDER BY SUM(s.ss_sales_price) DESC) AS rank
    FROM store_sales s
    WHERE s.ss_sold_date_sk >= (
        SELECT MAX(d.d_date_sk) - 30 
        FROM date_dim d 
        WHERE d.d_current_month = '1'
    )
    GROUP BY s.ss_item_sk
),
customer_stats AS (
    SELECT 
        c.c_customer_sk,
        COUNT(DISTINCT ws.ws_order_number) AS orders_count,
        SUM(ws.ws_net_profit) AS total_profit
    FROM customer c
    LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_ship_customer_sk
    JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    WHERE cd.cd_marital_status = 'M' AND cd.cd_gender = 'F'
    GROUP BY c.c_customer_sk
),
daily_sales AS (
    SELECT 
        d.d_date_id,
        SUM(ws.ws_ext_sales_price) AS daily_sales
    FROM web_sales ws
    JOIN date_dim d ON ws.ws_sold_date_sk = d.d_date_sk
    GROUP BY d.d_date_id
),
suspicious_returns AS (
    SELECT 
        sr.store_sk,
        sr.return_ticket_number,
        SUM(COALESCE(sr.return_quantity, 0)) AS total_returned
    FROM store_returns sr
    WHERE sr.returned_date_sk >= (
        SELECT MIN(d.d_date_sk) 
        FROM date_dim d 
        WHERE d.d_holiday = 'Y'
    )
    GROUP BY sr.store_sk, sr.return_ticket_number
    HAVING SUM(COALESCE(sr.return_quantity, 0)) > 5
)
SELECT 
    ca.ca_city,
    COUNT(DISTINCT cs.c_customer_sk) AS customers_count,
    COALESCE(SUM(d.daily_sales), 0) AS total_daily_sales,
    COALESCE(SUM(sh.total_quantity), 0) AS total_sold_quantity,
    (SELECT COUNT(DISTINCT sr.return_ticket_number) 
     FROM suspicious_returns sr 
     WHERE sr.store_sk = s.store_sk) AS returns_count
FROM customer_address ca
INNER JOIN customer c ON ca.ca_address_sk = c.c_current_addr_sk
LEFT JOIN customer_stats cs ON c.c_customer_sk = cs.c_customer_sk
LEFT JOIN daily_sales d ON TRUE
LEFT JOIN sales_hierarchy sh ON sh.ss_item_sk = c.c_current_hdemo_sk
LEFT JOIN store s ON c.c_current_addr_sk = s.store_sk
GROUP BY ca.ca_city
HAVING COUNT(DISTINCT cs.c_customer_sk) > 10
ORDER BY total_daily_sales DESC, returns_count ASC;
