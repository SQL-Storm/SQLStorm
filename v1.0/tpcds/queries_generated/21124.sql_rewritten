WITH RankedSales AS (
    SELECT 
        ws.ws_item_sk,
        SUM(ws.ws_quantity) AS total_sold,
        ROW_NUMBER() OVER (PARTITION BY ws.ws_item_sk ORDER BY SUM(ws.ws_quantity) DESC) AS rank_total,
        AVG(ws.ws_sales_price) AS avg_price
    FROM 
        web_sales ws
    JOIN 
        item i ON ws.ws_item_sk = i.i_item_sk
    WHERE 
        ws.ws_sold_date_sk BETWEEN (SELECT MAX(d.d_date_sk) FROM date_dim d WHERE d.d_year = 2001) - 30 
                                AND (SELECT MAX(d.d_date_sk) FROM date_dim d WHERE d.d_year = 2001)
        AND i.i_current_price IS NOT NULL
    GROUP BY 
        ws.ws_item_sk
),
CustomerInfo AS (
    SELECT 
        c.c_customer_sk,
        cd.cd_gender,
        hd.hd_income_band_sk,
        COALESCE(cd.cd_dep_count, 0) AS dep_count
    FROM 
        customer c
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN 
        household_demographics hd ON c.c_current_hdemo_sk = hd.hd_demo_sk
),
HighValueCustomers AS (
    SELECT 
        ci.c_customer_sk,
        SUM(ws.ws_sales_price * ws.ws_quantity) AS total_sales
    FROM 
        CustomerInfo ci
    JOIN 
        web_sales ws ON ci.c_customer_sk = ws.ws_ship_customer_sk
    GROUP BY 
        ci.c_customer_sk
    HAVING 
        SUM(ws.ws_sales_price * ws.ws_quantity) > 10000
)
SELECT 
    r.ws_item_sk,
    r.total_sold,
    r.avg_price,
    COALESCE(hv.total_sales, 0) AS high_value_customer_sales
FROM 
    RankedSales r
LEFT JOIN 
    HighValueCustomers hv ON r.ws_item_sk IN (
        SELECT 
            DISTINCT(ws.ws_item_sk) 
        FROM 
            web_sales ws 
        WHERE 
            ws.ws_ship_customer_sk IN (
                SELECT 
                    ci.c_customer_sk 
                FROM 
                    CustomerInfo ci 
                WHERE 
                    ci.dep_count > 0 
                    AND ci.cd_gender = 'F'
            )
    )
WHERE 
    r.rank_total = 1
ORDER BY 
    r.total_sold DESC;