
WITH CustomerReturns AS (
    SELECT 
        sr_customer_sk,
        SUM(sr_return_amt_inc_tax) AS Total_Return_Amount,
        COUNT(DISTINCT sr_ticket_number) AS Return_Count,
        AVG(sr_return_quantity) AS Avg_Return_Quantity
    FROM 
        store_returns
    GROUP BY 
        sr_customer_sk
),
TopCustomers AS (
    SELECT 
        cr.sr_customer_sk,
        cr.Total_Return_Amount,
        cr.Return_Count,
        cr.Avg_Return_Quantity,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_purchase_estimate
    FROM 
        CustomerReturns cr
    JOIN 
        customer_demographics cd ON cr.sr_customer_sk = cd.cd_demo_sk
    WHERE 
        cr.Total_Return_Amount > (
            SELECT 
                AVG(Total_Return_Amount)
            FROM 
                CustomerReturns
        )
),
ItemSales AS (
    SELECT 
        ws.ws_item_sk,
        SUM(ws.ws_quantity) AS Total_Sold,
        SUM(ws.ws_sales_price) AS Total_Sales_Amount
    FROM 
        web_sales ws
    GROUP BY 
        ws.ws_item_sk
),
HighProfitItems AS (
    SELECT 
        is.ws_item_sk,
        (is.Total_Sales_Amount - (is.Total_Sold * i.i_wholesale_cost)) AS Net_Profit
    FROM 
        ItemSales is
    JOIN 
        item i ON is.ws_item_sk = i.i_item_sk
    WHERE 
        (is.Total_Sales_Amount - (is.Total_Sold * i.i_wholesale_cost)) > 1000
)
SELECT 
    tc.sr_customer_sk AS CustomerID,
    tc.cd_gender AS Gender,
    tc.cd_marital_status AS MaritalStatus,
    COUNT(DISTINCT hp.ws_item_sk) AS High_Profit_Item_Count,
    SUM(hp.Net_Profit) AS Total_Net_Profit
FROM 
    TopCustomers tc
LEFT JOIN 
    HighProfitItems hp ON tc.sr_customer_sk = hp.ws_item_sk
GROUP BY 
    tc.sr_customer_sk, tc.cd_gender, tc.cd_marital_status
HAVING 
    SUM(hp.Net_Profit) IS NOT NULL
ORDER BY 
    Total_Net_Profit DESC
LIMIT 10;
