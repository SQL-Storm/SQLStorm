
WITH CustomerSales AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        SUM(ws.ws_ext_sales_price) AS total_sales,
        COUNT(ws.ws_order_number) AS order_count
    FROM customer AS c
    INNER JOIN web_sales AS ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    WHERE ws.ws_sold_date_sk >= (SELECT MAX(d.d_date_sk) FROM date_dim AS d WHERE d.d_year = 2001) - 90
    GROUP BY c.c_customer_sk, c.c_first_name, c.c_last_name
),
TopCustomers AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cs.total_sales,
        cs.order_count,
        RANK() OVER (ORDER BY cs.total_sales DESC) AS sales_rank
    FROM CustomerSales AS cs
    JOIN customer AS c ON cs.c_customer_sk = c.c_customer_sk
),
SalesByDate AS (
    SELECT 
        d.d_date,
        SUM(ws.ws_ext_sales_price) AS daily_sales
    FROM web_sales AS ws
    JOIN date_dim AS d ON ws.ws_sold_date_sk = d.d_date_sk
    WHERE d.d_year = 2001
    GROUP BY d.d_date
),
CustomerAgeGroup AS (
    SELECT 
        CASE 
            WHEN EXTRACT(YEAR FROM AGE(TO_DATE(CONCAT(c.c_birth_year, '-', c.c_birth_month, '-', c.c_birth_day), 'YYYY-MM-DD'))) < 30 THEN 'Under 30'
            WHEN EXTRACT(YEAR FROM AGE(TO_DATE(CONCAT(c.c_birth_year, '-', c.c_birth_month, '-', c.c_birth_day), 'YYYY-MM-DD'))) BETWEEN 30 AND 50 THEN '30-50'
            ELSE 'Above 50'
        END AS age_group,
        SUM(ws.ws_ext_sales_price) AS group_sales
    FROM customer AS c
    LEFT JOIN web_sales AS ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY age_group
)
SELECT 
    tc.c_first_name,
    tc.c_last_name,
    tc.total_sales,
    tc.order_count,
    sbd.d_date,
    sbd.daily_sales,
    cag.age_group,
    cag.group_sales
FROM TopCustomers AS tc
LEFT JOIN SalesByDate AS sbd ON sbd.daily_sales > 10000  
JOIN CustomerAgeGroup AS cag ON tc.c_customer_sk = cag.c_customer_sk
WHERE tc.sales_rank <= 10  
ORDER BY tc.total_sales DESC, sbd.d_date DESC;
