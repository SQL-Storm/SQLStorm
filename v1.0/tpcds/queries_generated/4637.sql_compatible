
WITH RankedSales AS (
    SELECT 
        ws.web_site_id,
        SUM(ws.ws_net_profit) AS total_net_profit,
        COUNT(DISTINCT ws.ws_order_number) AS total_orders,
        DENSE_RANK() OVER (PARTITION BY ws.web_site_id ORDER BY SUM(ws.ws_net_profit) DESC) AS profit_rank
    FROM 
        web_sales ws
    JOIN 
        date_dim dd ON ws.ws_sold_date_sk = dd.d_date_sk
    WHERE 
        dd.d_year BETWEEN 2020 AND 2022
    GROUP BY 
        ws.web_site_id
),
TopWebsites AS (
    SELECT 
        web_site_id,
        total_net_profit,
        total_orders
    FROM 
        RankedSales
    WHERE 
        profit_rank <= 5
),
CustomerReturns AS (
    SELECT 
        sr_returning_customer_sk,
        SUM(sr_return_amt) AS total_returned_amount,
        COUNT(sr_returning_customer_sk) AS total_returns
    FROM 
        store_returns
    GROUP BY 
        sr_returning_customer_sk
),
CustomerDetails AS (
    SELECT 
        c.c_customer_id,
        cd.cd_gender,
        COALESCE(cu.total_returned_amount, 0) AS total_returned_amount,
        COALESCE(cu.total_returns, 0) AS total_returns,
        COALESCE(cd.cd_marital_status, 'Unknown') AS marital_status
    FROM 
        customer c
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN 
        CustomerReturns cu ON c.c_customer_sk = cu.sr_returning_customer_sk
)
SELECT 
    wd.web_site_id,
    cd.c_customer_id,
    cd.cd_gender,
    cd.marital_status,
    wd.total_net_profit,
    wd.total_orders,
    cd.total_returns,
    cd.total_returned_amount
FROM 
    TopWebsites wd
LEFT JOIN 
    CustomerDetails cd ON wd.web_site_id = cd.c_customer_id
ORDER BY 
    wd.total_net_profit DESC,
    cd.total_returns DESC
FETCH FIRST 100 ROWS ONLY;
