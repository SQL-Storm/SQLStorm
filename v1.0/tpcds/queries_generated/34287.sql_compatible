
WITH RECURSIVE sales_hierarchy AS (
    SELECT 
        ss_store_sk,
        SUM(ss_sales_price) AS total_sales,
        1 AS level
    FROM 
        store_sales
    GROUP BY 
        ss_store_sk

    UNION ALL

    SELECT 
        s.s_store_sk,
        sh.total_sales + SUM(ss.ss_sales_price) AS total_sales,
        sh.level + 1 AS level
    FROM 
        sales_hierarchy sh
    JOIN 
        store s ON sh.ss_store_sk = s.s_store_sk
    JOIN 
        store_sales ss ON ss.ss_store_sk = s.s_store_sk
    WHERE 
        sh.level < 5
    GROUP BY 
        s.s_store_sk, sh.total_sales, sh.level
) 
SELECT 
    c.c_customer_id,
    c.c_first_name,
    c.c_last_name,
    d.d_date,
    COALESCE(SUM(ws.ws_net_profit), 0) AS total_profit,
    CASE 
        WHEN cd.cd_gender = 'M' THEN 'Male'
        WHEN cd.cd_gender = 'F' THEN 'Female'
        ELSE 'Other'
    END AS gender,
    RANK() OVER (PARTITION BY c.c_customer_id ORDER BY SUM(ws.ws_net_sales) DESC) AS sales_rank
FROM 
    customer c
LEFT JOIN 
    customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
LEFT JOIN 
    web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
LEFT JOIN 
    date_dim d ON ws.ws_sold_date_sk = d.d_date_sk
FULL OUTER JOIN 
    sales_hierarchy sh ON sh.ss_store_sk = c.c_current_addr_sk
WHERE 
    d.d_year = 2023 
    AND (cd.cd_marital_status = 'M' OR cd.cd_marital_status IS NULL)
GROUP BY 
    c.c_customer_id, 
    c.c_first_name, 
    c.c_last_name, 
    d.d_date, 
    cd.cd_gender
HAVING 
    SUM(ws.ws_net_profit) > 0
ORDER BY 
    total_profit DESC
LIMIT 100;
