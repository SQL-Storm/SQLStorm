
WITH RankedSales AS (
    SELECT 
        ws.web_site_id,
        ws_sold_date_sk,
        ws_item_sk,
        ws_quantity,
        ws_net_paid,
        ROW_NUMBER() OVER (PARTITION BY ws.web_site_id ORDER BY ws_net_paid DESC) AS sales_rank
    FROM web_sales ws
    JOIN web_site we ON ws.ws_web_site_sk = we.web_site_sk
    WHERE ws_sold_date_sk BETWEEN 20200101 AND 20201231
),
CustomerReturns AS (
    SELECT 
        sr.returning_customer_sk,
        COALESCE(SUM(sr.return_quantity), 0) AS total_returned,
        SUM(CASE WHEN sr.return_quantity > 0 THEN sr.return_quantity ELSE 0 END) AS positive_returns
    FROM store_returns sr
    GROUP BY sr.returning_customer_sk
),
HighReturnCustomers AS (
    SELECT 
        cr.returning_customer_sk
    FROM CustomerReturns cr
    WHERE cr.total_returned > (SELECT AVG(total_returned) FROM CustomerReturns)
)
SELECT 
    cs.c_customer_id,
    SUM(w.ws_net_paid) AS total_sales,
    COALESCE(SUM(sr.sr_return_quantity), 0) AS total_returns,
    COUNT(DISTINCT w.ws_order_number) AS orders_count,
    CASE 
        WHEN SUM(w.ws_net_paid) IS NULL THEN 'No Sales'
        ELSE CASE 
            WHEN SUM(w.ws_net_paid) > 1000 THEN 'High Value'
            WHEN SUM(w.ws_net_paid) BETWEEN 500 AND 1000 THEN 'Medium Value'
            ELSE 'Low Value' 
        END 
    END AS customer_value_category,
    MAX(CASE 
        WHEN cr.returning_customer_sk IS NOT NULL THEN 'High Return Customer' 
        ELSE 'Regular Customer' 
    END) AS customer_type
FROM customer cs
LEFT JOIN web_sales w ON cs.c_customer_sk = w.ws_bill_customer_sk
LEFT JOIN store_returns sr ON sr.sr_customer_sk = cs.c_customer_sk
LEFT JOIN HighReturnCustomers cr ON cs.c_customer_sk = cr.returning_customer_sk
WHERE cs.c_first_name IS NOT NULL AND cs.c_last_name IS NOT NULL
GROUP BY cs.c_customer_id
HAVING SUM(w.ws_net_paid) > 0
ORDER BY total_sales DESC
LIMIT 100;
