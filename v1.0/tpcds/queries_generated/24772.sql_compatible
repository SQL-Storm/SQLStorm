
WITH ranked_sales AS (
    SELECT 
        ws_item_sk,
        SUM(ws_quantity) AS total_sales_quantity,
        SUM(ws_net_profit) AS total_net_profit,
        DENSE_RANK() OVER (PARTITION BY ws_item_sk ORDER BY SUM(ws_net_profit) DESC) AS sales_rank
    FROM 
        web_sales
    GROUP BY 
        ws_item_sk
), 
high_performing_items AS (
    SELECT 
        item.i_item_id,
        item.i_current_price,
        ranked_sales.total_sales_quantity,
        ranked_sales.total_net_profit
    FROM 
        item
    JOIN
        ranked_sales ON item.i_item_sk = ranked_sales.ws_item_sk
    WHERE 
        ranked_sales.sales_rank = 1
), 
sales_summary AS (
    SELECT 
        COALESCE(SUM(cs_ext_sales_price), 0) AS total_catalog_sales,
        COALESCE(SUM(ss_ext_sales_price), 0) AS total_store_sales,
        COALESCE(SUM(ws_ext_sales_price), 0) AS total_web_sales
    FROM 
        catalog_sales cs
    FULL OUTER JOIN 
        store_sales ss ON cs.cs_sold_date_sk = ss.ss_sold_date_sk
    FULL OUTER JOIN 
        web_sales ws ON ws.ws_sold_date_sk = ss.ss_sold_date_sk
), 
demographics_stats AS (
    SELECT 
        cd_gender,
        COUNT(DISTINCT c_customer_sk) AS customer_count,
        AVG(cd_purchase_estimate) AS avg_purchase_estimate
    FROM 
        customer_demographics cd
    JOIN 
        customer c ON cd.cd_demo_sk = c.c_current_cdemo_sk
    GROUP BY 
        cd_gender
)
SELECT 
    hi.i_item_id,
    hi.i_current_price,
    ss.total_catalog_sales,
    ss.total_store_sales,
    ss.total_web_sales,
    dem.cd_gender,
    dem.customer_count,
    dem.avg_purchase_estimate
FROM 
    high_performing_items hi
JOIN 
    sales_summary ss ON ss.total_catalog_sales > 1000 OR ss.total_store_sales > 1000 OR ss.total_web_sales > 1000
JOIN 
    demographics_stats dem ON dem.cd_gender IN ('M', 'F')
WHERE 
    hi.total_net_profit IS NOT NULL AND 
    (hi.total_sales_quantity - COALESCE((SELECT SUM(sr_return_quantity) FROM store_returns WHERE sr_item_sk = hi.ws_item_sk), 0)) >= 0
ORDER BY 
    hi.total_net_profit DESC,
    hi.total_sales_quantity DESC
LIMIT 10;
