
WITH RECURSIVE CustomerReturns AS (
    SELECT
        sr_returning_customer_sk,
        SUM(sr_return_quantity) AS total_returned,
        SUM(sr_return_amt) AS total_return_amount,
        COUNT(*) AS total_returns
    FROM store_returns
    GROUP BY sr_returning_customer_sk
),
CustomerDetails AS (
    SELECT
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        c.c_email_address,
        COALESCE(d.cd_gender, 'U') AS gender,
        COALESCE(d.cd_marital_status, 'U') AS marital_status,
        COALESCE(d.cd_purchase_estimate, 0) AS purchase_estimate,
        COALESCE(d.cd_credit_rating, 'Not Rated') AS credit_rating
    FROM customer c
    LEFT JOIN customer_demographics d ON c.c_current_cdemo_sk = d.cd_demo_sk
),
SalesStats AS (
    SELECT 
        ws_ship_customer_sk,
        SUM(ws_net_profit) AS total_net_profit,
        COUNT(DISTINCT ws_order_number) AS total_orders,
        AVG(ws_net_paid_inc_tax) AS avg_payment
    FROM web_sales
    GROUP BY ws_ship_customer_sk
)
SELECT
    cd.c_first_name,
    cd.c_last_name,
    cd.c_email_address,
    cd.gender,
    cd.marital_status,
    cr.total_returned,
    cr.total_return_amount,
    COALESCE(ss.total_net_profit, 0) AS total_net_profit,
    COALESCE(ss.total_orders, 0) AS total_orders,
    COALESCE(ss.avg_payment, 0.00) AS avg_payment,
    CASE 
        WHEN cr.total_returned IS NULL THEN 'New Customer'
        WHEN cr.total_returned > 10 THEN 'Frequent Returner'
        WHEN cr.total_returned = 0 THEN 'No Returns'
        ELSE 'Irregular Returner'
    END AS return_behavior
FROM CustomerDetails cd
LEFT JOIN CustomerReturns cr ON cd.c_customer_sk = cr.sr_returning_customer_sk
LEFT JOIN SalesStats ss ON cd.c_customer_sk = ss.ws_ship_customer_sk
WHERE (cd.purchase_estimate > 500 AND cr.total_returned IS NOT NULL)
   OR (cd.gender = 'M' AND ss.total_net_profit > 1000)
   OR (cd.marital_status = 'S' AND cr.total_returned < 5)
ORDER BY cd.c_last_name, cd.c_first_name
LIMIT 100;
