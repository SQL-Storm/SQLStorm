
WITH RankedSales AS (
    SELECT 
        ws.web_site_sk,
        ws.order_number,
        ws.ws_sales_price,
        ROW_NUMBER() OVER (PARTITION BY ws.web_site_sk ORDER BY ws.ws_sales_price DESC) AS rank_sales
    FROM 
        web_sales ws
    WHERE 
        ws.ws_sales_price > (SELECT AVG(ws_sales_price) FROM web_sales WHERE ws_sold_date_sk BETWEEN 10000 AND 20000)
),
CustomerMetrics AS (
    SELECT 
        c.c_customer_sk,
        d.d_year,
        SUM(ws.ws_sales_price) AS total_spent,
        COUNT(DISTINCT ws.order_number) AS total_orders,
        COUNT(DISTINCT CASE WHEN cd.gender = 'M' THEN c.c_customer_sk END) AS male_customers,
        COUNT(DISTINCT CASE WHEN cd.gender = 'F' THEN c.c_customer_sk END) AS female_customers
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    JOIN 
        date_dim d ON ws.ws_sold_date_sk = d.d_date_sk
    GROUP BY 
        c.c_customer_sk, d.d_year
)
SELECT 
    cm.c_customer_sk,
    cm.d_year,
    COALESCE(SUM(rs.ws_sales_price), 0) AS total_sales_from_highest_rank,
    cm.total_spent,
    CASE 
        WHEN SUM(rs.ws_sales_price) > cm.total_spent THEN 'Above Average'
        WHEN SUM(rs.ws_sales_price) < cm.total_spent THEN 'Below Average'
        ELSE 'Average'
    END AS spending_category,
    (SELECT COUNT(*)
     FROM customer_address ca
     WHERE ca.ca_city IS NOT NULL AND ca.ca_state != 'CA') AS non_ca_address_count
FROM 
    CustomerMetrics cm
LEFT JOIN 
    RankedSales rs ON cm.c_customer_sk = rs.web_site_sk
GROUP BY 
    cm.c_customer_sk, cm.d_year, cm.total_spent
HAVING 
    COUNT(*) BETWEEN 1 AND (SELECT MAX(cd_dep_count) FROM customer_demographics WHERE cd_marital_status = 'M') 
ORDER BY 
    spending_category DESC, cm.total_spent DESC;
