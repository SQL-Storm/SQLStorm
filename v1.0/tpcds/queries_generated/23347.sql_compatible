
WITH RECURSIVE address_hierarchy AS (
    SELECT ca_address_sk, ca_city, ca_state, 1 AS level
    FROM customer_address
    WHERE ca_state IS NOT NULL
    UNION ALL
    SELECT ca.ca_address_sk, ca.ca_city, ca.ca_state, ah.level + 1
    FROM customer_address AS ca
    JOIN address_hierarchy AS ah ON ca.ca_state = ah.ca_state
    WHERE ca.ca_address_sk <> ah.ca_address_sk
),
customer_with_promo AS (
    SELECT c.c_customer_sk, 
           c.c_first_name, 
           c.c_last_name, 
           cd.cd_gender, 
           SUM(ws.ws_sales_price) AS total_spent,
           DENSE_RANK() OVER(PARTITION BY cd.cd_gender ORDER BY SUM(ws.ws_sales_price) DESC) AS rank
    FROM customer c
    LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_ship_customer_sk
    GROUP BY c.c_customer_sk, c.c_first_name, c.c_last_name, cd.cd_gender
),
high_value_customers AS (
    SELECT customer_with_promo.*, 
           CASE 
               WHEN cd.cd_marital_status = 'M' THEN 'Married'
               WHEN cd.cd_marital_status = 'S' THEN 'Single'
               ELSE 'Other'
           END AS marital_status,
           ROW_NUMBER() OVER (PARTITION BY cd.cd_gender ORDER BY total_spent DESC) AS rn
    FROM customer_with_promo
    JOIN customer_demographics cd ON customer_with_promo.c_customer_sk = cd.cd_demo_sk
    WHERE customer_with_promo.total_spent > (SELECT AVG(total_spent) FROM customer_with_promo)
),
warehouse_info AS (
    SELECT w.w_warehouse_sk, 
           w.w_warehouse_name, 
           SUM(inv.inv_quantity_on_hand) AS total_inventory
    FROM warehouse w
    LEFT JOIN inventory inv ON w.w_warehouse_sk = inv.inv_warehouse_sk
    GROUP BY w.w_warehouse_sk, w.w_warehouse_name
    HAVING SUM(inv.inv_quantity_on_hand) > 0
),
promo_summary AS (
    SELECT p.p_promo_name, 
           COUNT(DISTINCT ws.ws_order_number) AS order_count,
           SUM(ws.ws_sales_price) AS promo_sales
    FROM promotion p
    JOIN web_sales ws ON p.p_promo_sk = ws.ws_promo_sk
    WHERE (ws.ws_sales_price IS NOT NULL AND ws.ws_sales_price <> 0)
    GROUP BY p.p_promo_name
)
SELECT 
       hvc.c_customer_sk,
       hvc.c_first_name,
       hvc.c_last_name,
       hvc.marital_status,
       ah.ca_city,
       ah.ca_state,
       w.w_warehouse_name,
       COALESCE(ps.order_count, 0) AS total_orders,
       COALESCE(ps.promo_sales, 0) AS total_promo_sales
FROM high_value_customers hvc
JOIN address_hierarchy ah ON hvc.c_customer_sk = ah.ca_address_sk
LEFT JOIN warehouse_info w ON w.total_inventory > 0
LEFT JOIN promo_summary ps ON hvc.total_spent > 1000
WHERE hvc.rn < 10 AND w.w_warehouse_name IS NOT NULL
ORDER BY hvc.total_spent DESC, ah.ca_city;
