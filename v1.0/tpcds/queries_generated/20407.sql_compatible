
WITH RankedSales AS (
    SELECT 
        cs_item_sk,
        cs_order_number,
        cs_ext_sales_price,
        ROW_NUMBER() OVER (PARTITION BY cs_item_sk ORDER BY cs_order_number DESC) AS rank_order,
        SUM(cs_quantity) OVER (PARTITION BY cs_item_sk) AS total_quantity
    FROM 
        catalog_sales
    WHERE 
        cs_sold_date_sk = 
            (SELECT MAX(cs_sold_date_sk) 
             FROM catalog_sales 
             WHERE cs_sold_date_sk < (SELECT d_date_sk 
                                       FROM date_dim 
                                       WHERE d_date = '2002-10-01'))
),
FilteredReturns AS (
    SELECT 
        cr_item_sk,
        SUM(cr_return_quantity) AS return_quantity,
        SUM(cr_return_amount) AS total_return
    FROM 
        catalog_returns
    WHERE 
        cr_return_quantity > 0
    GROUP BY 
        cr_item_sk
),
CombinedSales AS (
    SELECT 
        s.cs_item_sk,
        s.cs_order_number,
        s.cs_ext_sales_price,
        COALESCE(r.return_quantity, 0) AS return_quantity,
        COALESCE(r.total_return, 0) AS total_return,
        s.total_quantity
    FROM 
        RankedSales s
    LEFT JOIN 
        FilteredReturns r ON s.cs_item_sk = r.cr_item_sk
    WHERE 
        s.rank_order = 1
)
SELECT 
    c.customer_id,
    SUM(cs.total_quantity) AS total_sales_quantity,
    AVG(cs.cs_ext_sales_price) AS avg_sales_price,
    SUM(cs.return_quantity) AS total_returned_quantity,
    SUM(cs.total_return) AS total_returned_amount,
    CASE 
        WHEN SUM(cs.total_return) > 0 THEN 'Returns Processed'
        ELSE 'No Returns'
    END AS return_status
FROM 
    CombinedSales cs
JOIN 
    web_sales ws ON cs.cs_item_sk = ws.ws_item_sk
JOIN 
    customer c ON ws.ws_bill_customer_sk = c.c_customer_sk
WHERE 
    c.c_birth_year IS NOT NULL
GROUP BY 
    c.customer_id
HAVING 
    SUM(cs.total_quantity) > 100
ORDER BY 
    avg_sales_price DESC 
LIMIT 100;
