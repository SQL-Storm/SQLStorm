
WITH SalesSummary AS (
    SELECT 
        ws_item_sk, 
        SUM(ws_quantity) AS total_quantity, 
        SUM(ws_sales_price) AS total_sales_price,
        ROW_NUMBER() OVER (PARTITION BY ws_item_sk ORDER BY SUM(ws_sales_price) DESC) AS sales_rank
    FROM web_sales
    WHERE ws_sold_date_sk BETWEEN (SELECT MIN(d_date_sk) FROM date_dim WHERE d_year = 2023)
                      AND (SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = 2023)
    GROUP BY ws_item_sk
),
TopSales AS (
    SELECT ss.ws_item_sk AS item_sk, ss.sales_rank, ss.total_quantity, ss.total_sales_price
    FROM SalesSummary ss
    WHERE ss.sales_rank <= 10
),
CustomerDemographics AS (
    SELECT cd.cd_demo_sk, cd.cd_gender, cd.cd_marital_status, 
           cd.cd_purchase_estimate, 
           CASE 
               WHEN cd.cd_purchase_estimate IS NULL THEN 'Unknown' 
               ELSE CAST(cd.cd_purchase_estimate AS CHAR) 
           END AS purchase_estimate_str
    FROM customer_demographics cd
),
ItemInfo AS (
    SELECT i.i_item_sk, i.i_product_name, i.i_brand 
    FROM item i
)
SELECT 
    t.item_sk, 
    i.i_product_name, 
    i.i_brand, 
    t.total_quantity, 
    t.total_sales_price, 
    cd.cd_gender, 
    cd.purchase_estimate_str
FROM TopSales t
JOIN ItemInfo i ON t.item_sk = i.i_item_sk
LEFT JOIN (
    SELECT c.c_customer_sk, cd.cd_gender, cd.cd_purchase_estimate 
    FROM customer c
    JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
) cd ON cd.c_customer_sk = t.item_sk
ORDER BY t.total_sales_price DESC;
