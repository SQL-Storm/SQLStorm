
WITH RECURSIVE CustomerReturns AS (
    SELECT 
        sr_returning_customer_sk,
        SUM(sr_return_quantity) AS total_return_quantity,
        SUM(sr_return_amt) AS total_return_amt
    FROM 
        store_returns 
    GROUP BY 
        sr_returning_customer_sk
    HAVING 
        SUM(sr_return_quantity) > 10
    UNION ALL
    SELECT 
        wr_returning_customer_sk,
        SUM(wr_return_quantity) AS total_return_quantity,
        SUM(wr_return_amt) AS total_return_amt
    FROM 
        web_returns 
    GROUP BY 
        wr_returning_customer_sk
    HAVING 
        SUM(wr_return_quantity) > 5
),
AddressRanked AS (
    SELECT 
        ca_address_sk,
        ca_city,
        ca_state,
        ROW_NUMBER() OVER (PARTITION BY ca_state ORDER BY ca_city) AS address_rank
    FROM 
        customer_address 
    WHERE 
        ca_country IS NULL OR ca_country = 'USA'
),
SalesData AS (
    SELECT 
        ws_bill_customer_sk,
        SUM(ws_sales_price) AS total_sales,
        COUNT(DISTINCT ws_order_number) AS order_count,
        DATE(d_date) AS sales_date
    FROM 
        web_sales 
    JOIN 
        date_dim ON ws_sold_date_sk = d_date_sk
    WHERE 
        d_year = 2023 AND 
        ws_sales_price > (SELECT AVG(ws_sales_price) FROM web_sales)
    GROUP BY 
        ws_bill_customer_sk, d_date
),
FinalSummary AS (
    SELECT 
        c.c_customer_id,
        COALESCE(cr.total_return_quantity, 0) AS total_return_quantity,
        COALESCE(cr.total_return_amt, 0) AS total_return_amt,
        COALESCE(sd.total_sales, 0) AS total_sales,
        sd.order_count,
        ar.address_rank
    FROM 
        customer c
    LEFT JOIN 
        CustomerReturns cr ON c.c_customer_sk = cr.sr_returning_customer_sk
    LEFT JOIN 
        SalesData sd ON c.c_customer_sk = sd.ws_bill_customer_sk
    LEFT JOIN 
        AddressRanked ar ON c.c_current_addr_sk = ar.ca_address_sk
)
SELECT 
    c_customer_id AS customer_id,
    total_return_quantity,
    total_return_amt,
    total_sales,
    order_count,
    address_rank
FROM 
    FinalSummary
WHERE 
    (total_sales > 0 AND order_count IS NOT NULL) OR 
    (total_return_quantity > 10 AND address_rank IS NOT NULL)
ORDER BY 
    total_sales DESC, total_return_quantity DESC;
