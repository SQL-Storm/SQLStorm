WITH RECURSIVE sales_hierarchy AS (
    SELECT 
        c.c_customer_id,
        d.d_year,
        COUNT(ws.ws_order_number) AS total_orders,
        SUM(ws.ws_net_profit) AS total_profit
    FROM customer c
    JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    JOIN date_dim d ON ws.ws_sold_date_sk = d.d_date_sk
    GROUP BY c.c_customer_id, d.d_year
    HAVING COUNT(ws.ws_order_number) > 5

    UNION ALL

    SELECT 
        c.c_customer_id,
        d.d_year,
        sh.total_orders + COUNT(ws.ws_order_number) AS total_orders,
        sh.total_profit + SUM(ws.ws_net_profit) AS total_profit
    FROM sales_hierarchy sh
    JOIN customer c ON sh.c_customer_id = c.c_customer_id
    JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    JOIN date_dim d ON ws.ws_sold_date_sk = d.d_date_sk
    WHERE d.d_year = sh.d_year + 1 
    GROUP BY c.c_customer_id, d.d_year
),

filtered_sales AS (
    SELECT 
        sh.c_customer_id,
        sh.d_year,
        sh.total_orders,
        sh.total_profit,
        ROW_NUMBER() OVER(PARTITION BY sh.c_customer_id ORDER BY sh.total_profit DESC) AS rn
    FROM sales_hierarchy sh
),

address_info AS (
    SELECT 
        ca.ca_address_id,
        ca.ca_city,
        ca.ca_state,
        COALESCE(AVG(ws.ws_net_profit), 0) AS avg_profits,
        COUNT(ws.ws_order_number) AS order_count
    FROM customer_address ca
    LEFT JOIN customer c ON c.c_current_addr_sk = ca.ca_address_sk
    LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY ca.ca_address_id, ca.ca_city, ca.ca_state
)

SELECT 
    fs.c_customer_id,
    fs.d_year,
    fs.total_orders,
    fs.total_profit,
    ai.ca_city,
    ai.ca_state,
    ai.avg_profits,
    ai.order_count
FROM filtered_sales fs
JOIN address_info ai ON fs.c_customer_id = ai.ca_address_id
WHERE fs.rn = 1 
  AND ai.avg_profits > 1000
ORDER BY fs.total_profit DESC
LIMIT 10;