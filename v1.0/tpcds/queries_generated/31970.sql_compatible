
WITH RECURSIVE sales_hierarchy AS (
    SELECT 
        ss_store_sk, 
        ss_sold_date_sk, 
        SUM(ss_net_paid) AS total_sales,
        ROW_NUMBER() OVER (PARTITION BY ss_store_sk ORDER BY SUM(ss_net_paid) DESC) AS rank
    FROM 
        store_sales 
    GROUP BY 
        ss_store_sk, 
        ss_sold_date_sk
), 
customer_details AS (
    SELECT 
        c.c_customer_sk, 
        c.c_first_name, 
        c.c_last_name, 
        cd.cd_gender, 
        cd.cd_marital_status,
        ib.ib_lower_bound, 
        ib.ib_upper_bound
    FROM 
        customer c
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN 
        household_demographics hd ON c.c_current_hdemo_sk = hd.hd_demo_sk
    LEFT JOIN 
        income_band ib ON hd.hd_income_band_sk = ib.ib_income_band_sk
)
SELECT 
    s.store_name,
    CAST(d.d_date AS DATE) AS sales_date,
    COALESCE(s.total_sales, 0) AS total_sales,
    COUNT(DISTINCT cd.c_customer_sk) AS unique_customers,
    AVG(cd.ib_upper_bound) AS avg_income_band_upper
FROM 
    sales_hierarchy s
JOIN 
    date_dim d ON s.ss_sold_date_sk = d.d_date_sk
LEFT JOIN 
    customer_details cd ON cd.c_customer_sk IN (SELECT ss_customer_sk FROM store_sales WHERE ss_store_sk = s.ss_store_sk)
WHERE 
    d.d_date BETWEEN '2023-01-01' AND '2023-12-31'
AND 
    s.rank <= 5
GROUP BY 
    s.store_name, 
    d.d_date
ORDER BY 
    total_sales DESC, 
    avg_income_band_upper DESC;
