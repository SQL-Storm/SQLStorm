
WITH RECURSIVE SalesHierarchy AS (
    SELECT 
        s.s_store_sk,
        s.s_store_name,
        SUM(ss.ss_quantity) AS total_quantity,
        SUM(ss.ss_net_paid) AS total_revenue,
        ROW_NUMBER() OVER (PARTITION BY s.s_store_sk ORDER BY SUM(ss.ss_net_paid) DESC) AS rank
    FROM 
        store s
    LEFT JOIN 
        store_sales ss ON s.s_store_sk = ss.ss_store_sk
    WHERE 
        ss.ss_sold_date_sk IN (SELECT d_date_sk FROM date_dim WHERE d_year = 2023)
    GROUP BY 
        s.s_store_sk, s.s_store_name
),
TopStores AS (
    SELECT 
        sh.s_store_sk,
        sh.s_store_name,
        sh.total_quantity,
        sh.total_revenue
    FROM 
        SalesHierarchy sh
    WHERE 
        sh.rank <= 5
),
CustomerReturns AS (
    SELECT 
        sr.sr_item_sk,
        COUNT(DISTINCT sr.sr_ticket_number) AS return_count,
        SUM(sr.sr_return_amt) AS total_return_amt
    FROM 
        store_returns sr
    WHERE 
        sr.sr_returned_date_sk IN (SELECT d_date_sk FROM date_dim WHERE d_year = 2023)
    GROUP BY 
        sr.sr_item_sk
),
SalesReturns AS (
    SELECT 
        ws.ws_item_sk,
        SUM(ws.ws_quantity) AS total_sold,
        COALESCE(cr.return_count, 0) AS total_returns,
        COALESCE(cr.total_return_amt, 0) AS total_return_amt
    FROM 
        web_sales ws
    LEFT JOIN 
        CustomerReturns cr ON ws.ws_item_sk = cr.sr_item_sk
    WHERE 
        ws.ws_sold_date_sk IN (SELECT d_date_sk FROM date_dim WHERE d_year = 2023)
    GROUP BY 
        ws.ws_item_sk
)
SELECT 
    ts.s_store_name,
    st.total_sold,
    st.total_returns,
    st.total_return_amt,
    (st.total_return_amt / NULLIF(st.total_sold, 0)) * 100 AS return_percentage
FROM 
    TopStores ts
JOIN 
    SalesReturns st ON ts.s_store_sk = ws.ws_item_sk
ORDER BY 
    return_percentage DESC;
