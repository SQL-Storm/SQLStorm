WITH customer_sales AS (
    SELECT 
        c.c_customer_id,
        SUM(ws.ws_sales_price) AS total_sales,
        COUNT(DISTINCT ws.ws_order_number) AS num_orders,
        COUNT(DISTINCT ws.ws_item_sk) AS distinct_items
    FROM 
        customer c 
    JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    WHERE 
        c.c_preferred_cust_flag = 'Y' 
        AND c.c_birth_month = MONTH(cast('2002-10-01' as date)) 
        AND (c.c_birth_year BETWEEN YEAR(cast('2002-10-01' as date)) - 30 AND YEAR(cast('2002-10-01' as date)) - 15)
    GROUP BY 
        c.c_customer_id
), 
subquery AS (
    SELECT 
        cd.cd_demo_sk,
        cd.cd_gender,
        cd.cd_marital_status,
        SUM(cs.total_sales) AS total_customer_sales
    FROM 
        customer_demographics cd 
    LEFT JOIN 
        customer_sales cs ON cs.c_customer_id IN (
            SELECT c.c_customer_id 
            FROM customer c 
            WHERE c.c_current_cdemo_sk = cd.cd_demo_sk
        )
    GROUP BY 
        cd.cd_demo_sk, cd.cd_gender, cd.cd_marital_status
), 
gender_income AS (
    SELECT 
        cd.cd_gender,
        SUM(CASE WHEN hd.hd_income_band_sk IS NULL THEN 1 ELSE 0 END) AS no_income_band,
        COUNT(*) AS total_demographics
    FROM 
        household_demographics hd 
    RIGHT JOIN 
        customer_demographics cd ON cd.cd_demo_sk = hd.hd_demo_sk
    GROUP BY 
        cd.cd_gender
)
SELECT 
    g.cd_gender,
    COALESCE(SUM(cs.total_customer_sales), 0) AS combined_sales,
    g.no_income_band,
    g.total_demographics,
    CASE 
        WHEN SUM(cs.total_customer_sales) IS NULL THEN 'No Sales'
        WHEN SUM(cs.total_customer_sales) > 10000 THEN 'High Value'
        ELSE 'Normal Value'
    END AS sales_category
FROM 
    subquery cs 
FULL OUTER JOIN 
    gender_income g ON cs.cd_gender = g.cd_gender
GROUP BY 
    g.cd_gender, g.no_income_band, g.total_demographics
HAVING 
    (COUNT(*) > 5 OR COALESCE(SUM(cs.total_customer_sales), 0) > 500)
    AND (no_income_band IS NOT NULL OR g.total_demographics > 0)
ORDER BY 
    combined_sales DESC, g.cd_gender;