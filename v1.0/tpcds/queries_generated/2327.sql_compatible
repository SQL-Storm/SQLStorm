
WITH CustomerReturns AS (
    SELECT 
        cr_returning_customer_sk,
        SUM(cr_return_quantity) AS total_returned_quantity,
        SUM(cr_return_amt) AS total_return_amount,
        COUNT(cr_order_number) AS total_returns
    FROM 
        catalog_returns
    GROUP BY 
        cr_returning_customer_sk
),
WebSalesStats AS (
    SELECT 
        ws_bill_customer_sk,
        SUM(ws_quantity) AS total_sold_quantity,
        SUM(ws_net_profit) AS total_net_profit,
        COUNT(ws_order_number) AS total_orders
    FROM 
        web_sales
    GROUP BY 
        ws_bill_customer_sk
),
AggregateData AS (
    SELECT 
        c.c_customer_sk,
        COALESCE(cr.total_returned_quantity, 0) AS total_returned_quantity,
        COALESCE(cr.total_return_amount, 0) AS total_return_amount,
        COALESCE(ws.total_sold_quantity, 0) AS total_sold_quantity,
        COALESCE(ws.total_net_profit, 0) AS total_net_profit,
        COALESCE(cr.total_returns, 0) AS total_returns,
        COALESCE(ws.total_orders, 0) AS total_orders
    FROM 
        customer AS c
    LEFT JOIN 
        CustomerReturns AS cr ON c.c_customer_sk = cr.cr_returning_customer_sk
    LEFT JOIN 
        WebSalesStats AS ws ON c.c_customer_sk = ws.ws_bill_customer_sk
)
SELECT 
    a.c_customer_sk,
    a.total_returned_quantity,
    a.total_return_amount,
    a.total_sold_quantity,
    a.total_net_profit,
    CASE 
        WHEN a.total_sold_quantity > 0 THEN a.total_net_profit / a.total_sold_quantity
        ELSE NULL 
    END AS avg_profit_per_item,
    CASE 
        WHEN a.total_returns > 0 THEN a.total_return_amount / a.total_returns
        ELSE NULL 
    END AS avg_return_amount_per_return
FROM 
    AggregateData AS a
WHERE 
    a.total_returned_quantity > 0
    OR a.total_sold_quantity > 0
ORDER BY 
    a.total_net_profit DESC
LIMIT 100;
