
WITH customer_sales AS (
    SELECT 
        c.c_customer_id,
        SUM(ws.ws_ext_sales_price) AS total_web_sales,
        COUNT(DISTINCT ws.ws_order_number) AS total_orders,
        COUNT(DISTINCT ws.ws_item_sk) AS unique_items_purchased
    FROM customer c
    JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    WHERE c.c_birth_year IS NOT NULL 
      AND (c.c_birth_month BETWEEN 1 AND 6 OR c.c_birth_year >= 1995)
      AND (c.c_email_address LIKE '%@example.com' OR c.c_email_address IS NULL)
    GROUP BY c.c_customer_id
),
store_sales AS (
    SELECT 
        c.c_customer_id,
        SUM(ss.ss_ext_sales_price) AS total_store_sales
    FROM customer c
    JOIN store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    WHERE ss.ss_sales_price > 0
    GROUP BY c.c_customer_id
),
combined_sales AS (
    SELECT 
        cs.c_customer_id,
        COALESCE(cs.total_web_sales, 0) + COALESCE(ss.total_store_sales, 0) AS total_sales,
        cs.total_orders,
        cs.unique_items_purchased
    FROM customer_sales cs
    FULL OUTER JOIN store_sales ss ON cs.c_customer_id = ss.c_customer_id
),
ranked_customers AS (
    SELECT 
        c.c_customer_id,
        cs.total_sales,
        cs.total_orders,
        cs.unique_items_purchased,
        DENSE_RANK() OVER (ORDER BY cs.total_sales DESC) AS sales_rank
    FROM combined_sales cs
    JOIN customer c ON cs.c_customer_id = c.c_customer_id
    WHERE cs.total_sales > 1000
)
SELECT 
    rc.c_customer_id,
    rc.total_sales,
    rc.total_orders,
    rc.unique_items_purchased,
    CASE 
        WHEN rc.sales_rank <= 10 THEN 'Top Customer'
        WHEN rc.sales_rank <= 100 THEN 'Regular Customer'
        ELSE 'Occasional Customer'
    END AS customer_category
FROM ranked_customers rc
WHERE EXISTS (
    SELECT 1 
    FROM customer_demographics cd 
    WHERE cd.cd_demo_sk = c.c_current_cdemo_sk 
      AND cd.cd_marital_status = 'M'
) 
ORDER BY rc.total_sales DESC, rc.unique_items_purchased ASC
LIMIT 50 OFFSET 10;
