
WITH RECURSIVE income_brackets AS (
    SELECT ib_income_band_sk, ib_lower_bound, ib_upper_bound
    FROM income_band
    WHERE ib_lower_bound IS NOT NULL
  UNION ALL
    SELECT ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound
    FROM income_band ib
    JOIN income_brackets ibr ON ib.ib_income_band_sk = ibr.ib_income_band_sk + 1
    WHERE ib.ib_lower_bound IS NOT NULL
),
customer_details AS (
    SELECT c.c_customer_sk, c.c_first_name, c.c_last_name, cd.cd_gender, cd.cd_marital_status,
           cd.cd_purchase_estimate, cd.cd_credit_rating, ib.ib_lower_bound, ib.ib_upper_bound,
           ROW_NUMBER() OVER (PARTITION BY cd.cd_gender ORDER BY cd.cd_purchase_estimate DESC) AS rank
    FROM customer c
    JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN household_demographics hd ON hd.hd_demo_sk = cd.cd_demo_sk
    LEFT JOIN income_brackets ib ON hd.hd_income_band_sk = ib.ib_income_band_sk
    WHERE cd.cd_marital_status IN ('M', 'S')
      AND cd.cd_purchase_estimate > (SELECT AVG(cd_purchase_estimate) FROM customer_demographics)
),
sales_data AS (
    SELECT 
        ws.ws_item_sk,
        SUM(ws.ws_quantity) AS total_quantity,
        SUM(ws.ws_net_profit) AS total_profit,
        COUNT(DISTINCT ws.ws_order_number) AS order_count,
        ROW_NUMBER() OVER (PARTITION BY ws.ws_item_sk ORDER BY SUM(ws.ws_net_profit) DESC) AS item_rank
    FROM web_sales ws
    GROUP BY ws.ws_item_sk
)
SELECT 
    cd.c_first_name,
    cd.c_last_name,
    cd.cd_gender,
    cd.cd_marital_status,
    ib.ib_lower_bound,
    ib.ib_upper_bound,
    COALESCE(sd.total_quantity, 0) AS total_quantity_sold,
    COALESCE(sd.total_profit, 0) AS total_profit,
    CASE 
        WHEN cd.rank = 1 THEN 'Top Customer' 
        ELSE 'Regular Customer' 
    END AS customer_status,
    RANK() OVER (ORDER BY COALESCE(sd.total_profit, 0) DESC) AS profitability_rank
FROM customer_details cd
LEFT JOIN sales_data sd ON cd.c_customer_sk = sd.ws_item_sk
LEFT JOIN income_brackets ib ON hd.hd_income_band_sk = ib.ib_income_band_sk
WHERE cd.rank <= 5
ORDER BY cd.cd_gender, customer_status, total_profit DESC
OFFSET 10 ROWS FETCH NEXT 10 ROWS ONLY;
