
WITH customer_summary AS (
    SELECT 
        c.c_customer_id,
        c.c_first_name,
        c.c_last_name,
        COALESCE(cd.cd_gender, 'U') AS gender,
        COALESCE(hd.hd_buy_potential, 'Unknown') AS buy_potential,
        SUM(COALESCE(ws.ws_net_profit, 0)) AS total_profit,
        COUNT(DISTINCT ws.ws_order_number) AS order_count,
        ROW_NUMBER() OVER (PARTITION BY COALESCE(cd.cd_gender, 'U') ORDER BY SUM(COALESCE(ws.ws_net_profit, 0)) DESC) AS rank_by_gender
    FROM customer c
    LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN household_demographics hd ON c.c_current_hdemo_sk = hd.hd_demo_sk
    LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY c.c_customer_id, c.c_first_name, c.c_last_name, cd.cd_gender, hd.hd_buy_potential
),
income_statistics AS (
    SELECT 
        ib.ib_income_band_sk,
        ib.ib_lower_bound,
        ib.ib_upper_bound,
        COUNT(DISTINCT hd.hd_demo_sk) AS demo_count
    FROM income_band ib
    LEFT JOIN household_demographics hd ON ib.ib_lower_bound <= hd.hd_income_band_sk AND hd.hd_income_band_sk <= ib.ib_upper_bound
    GROUP BY ib.ib_income_band_sk, ib.ib_lower_bound, ib.ib_upper_bound
),
top_customers AS (
    SELECT 
        cs.c_customer_id,
        cs.c_first_name,
        cs.c_last_name,
        cs.gender,
        cs.total_profit,
        RANK() OVER (ORDER BY cs.total_profit DESC) AS overall_rank
    FROM customer_summary cs
    WHERE cs.order_count > (
        SELECT AVG(order_count) FROM customer_summary
    )
    AND cs.total_profit IS NOT NULL
)
SELECT 
    t.c_customer_id,
    t.c_first_name,
    t.c_last_name,
    t.total_profit,
    COALESCE(i.ib_lower_bound, 'N/A') AS income_band,
    CASE 
        WHEN i.demo_count IS NULL THEN 'No Data'
        WHEN i.demo_count > 50 THEN 'Good'
        WHEN i.demo_count BETWEEN 10 AND 50 THEN 'Moderate'
        ELSE 'Low'
    END AS income_band_quality
FROM top_customers t
LEFT JOIN income_statistics i ON t.total_profit BETWEEN i.ib_lower_bound AND i.ib_upper_bound
WHERE t.overall_rank <= 10
ORDER BY t.total_profit DESC
OFFSET 0 ROWS FETCH NEXT 10 ROWS ONLY;
