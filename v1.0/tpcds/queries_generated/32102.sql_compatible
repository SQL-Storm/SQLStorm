
WITH RECURSIVE SalesHierarchy AS (
    SELECT ws_bill_customer_sk AS customer_sk, 
           SUM(ws_net_profit) AS total_profit, 
           1 AS level
    FROM web_sales
    GROUP BY ws_bill_customer_sk
    HAVING SUM(ws_net_profit) > 1000
    UNION ALL
    SELECT c.c_current_cdemo_sk, 
           sh.total_profit + COALESCE(SUM(ss.net_profit), 0) AS total_profit, 
           sh.level + 1
    FROM SalesHierarchy sh
    JOIN customer c ON sh.customer_sk = c.c_customer_sk
    LEFT JOIN store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    GROUP BY c.c_current_cdemo_sk, sh.total_profit, sh.level
)
SELECT ca.city, 
       COUNT(DISTINCT c.c_customer_id) AS unique_customers,
       SUM(ws.ws_net_profit) AS total_web_sales_profit,
       AVG(cd.cd_purchase_estimate) AS avg_purchase_estimate,
       MAX(inv.inventory_level) AS max_inventory_level
FROM customer c
LEFT JOIN customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
JOIN (
    SELECT inv_w.warehouse_sk, 
           SUM(inv.inv_quantity_on_hand) AS inventory_level
    FROM inventory inv
    JOIN warehouse inv_w ON inv.inv_warehouse_sk = inv_w.warehouse_sk
    WHERE inv.inv_date_sk = (SELECT MAX(inv2.inv_date_sk) FROM inventory inv2)
    GROUP BY inv_w.warehouse_sk
) AS inventory ON TRUE
LEFT JOIN SalesHierarchy shp ON c.c_customer_sk = shp.customer_sk
WHERE cd.cd_gender = 'F' 
  AND cd.cd_marital_status = 'M'
  AND (cd.cd_purchase_estimate > 500 OR cd.cd_credit_rating IS NULL)
GROUP BY ca.city, cd.cd_purchase_estimate
ORDER BY unique_customers DESC, total_web_sales_profit DESC
LIMIT 10;
