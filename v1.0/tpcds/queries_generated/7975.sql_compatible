
WITH CustomerPurchases AS (
    SELECT 
        c.c_customer_id,
        c.c_first_name,
        c.c_last_name,
        SUM(COALESCE(ws.ws_net_paid, 0)) AS total_web_sales,
        SUM(COALESCE(cs.cs_net_paid, 0)) AS total_catalog_sales,
        SUM(COALESCE(ss.ss_net_paid, 0)) AS total_store_sales
    FROM 
        customer c
    LEFT JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    LEFT JOIN 
        catalog_sales cs ON c.c_customer_sk = cs.cs_bill_customer_sk
    LEFT JOIN 
        store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    WHERE 
        c.c_current_cdemo_sk IS NOT NULL
    GROUP BY 
        c.c_customer_id, c.c_first_name, c.c_last_name
),
SalesByGender AS (
    SELECT 
        cd.cd_gender,
        COUNT(DISTINCT cp.c_customer_id) AS customer_count,
        SUM(cp.total_web_sales) AS total_web_sales,
        SUM(cp.total_catalog_sales) AS total_catalog_sales,
        SUM(cp.total_store_sales) AS total_store_sales,
        SUM(cp.total_web_sales + cp.total_catalog_sales + cp.total_store_sales) AS total_sales
    FROM 
        CustomerPurchases cp
    JOIN 
        customer_demographics cd ON cp.c_customer_id = (SELECT c.c_customer_id FROM customer c WHERE c.c_customer_sk = cp.c_customer_sk)
    GROUP BY 
        cd.cd_gender
),
SalesAnalysis AS (
    SELECT 
        cd.cd_gender,
        customer_count,
        total_web_sales,
        total_catalog_sales,
        total_store_sales,
        total_sales,
        RANK() OVER (ORDER BY total_sales DESC) AS sales_rank
    FROM 
        SalesByGender
)

SELECT 
    sa.*,
    CASE 
        WHEN sales_rank <= 3 THEN 'Top Sales'
        ELSE 'Other Sales'
    END AS sales_category
FROM 
    SalesAnalysis sa
ORDER BY 
    total_sales DESC;
