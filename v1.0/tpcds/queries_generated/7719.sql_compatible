
WITH CustomerReturnSummary AS (
    SELECT 
        cr_returning_customer_sk AS customer_sk,
        SUM(cr_return_quantity) AS total_returns,
        SUM(cr_return_amount) AS total_return_amount,
        COUNT(DISTINCT cr_order_number) AS return_count
    FROM 
        catalog_returns
    GROUP BY 
        cr_returning_customer_sk
),
CustomerDemographics AS (
    SELECT 
        cd_demo_sk,
        cd_gender,
        cd_income_band_sk,
        cd_marital_status
    FROM 
        customer_demographics
),
CustomerSales AS (
    SELECT 
        ws_bill_customer_sk AS customer_sk,
        SUM(ws_ext_sales_price) AS total_sales,
        COUNT(DISTINCT ws_order_number) AS sales_count
    FROM 
        web_sales
    GROUP BY 
        ws_bill_customer_sk
),
CustomerInfo AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        d.cd_gender,
        d.cd_income_band_sk,
        d.cd_marital_status,
        COALESCE(s.total_sales, 0) AS total_sales,
        COALESCE(r.total_returns, 0) AS total_returns,
        COALESCE(r.total_return_amount, 0) AS total_return_amount,
        s.sales_count
    FROM 
        customer AS c
    LEFT JOIN 
        CustomerDemographics d ON c.c_current_cdemo_sk = d.cd_demo_sk
    LEFT JOIN 
        CustomerSales s ON c.c_customer_sk = s.customer_sk
    LEFT JOIN 
        CustomerReturnSummary r ON c.c_customer_sk = r.customer_sk
)
SELECT 
    CASE 
        WHEN SUM(total_sales) > 0 THEN 'Active Customer'
        ELSE 'Inactive Customer'
    END AS customer_status,
    cd_gender,
    cd_income_band_sk,
    cd_marital_status,
    SUM(total_sales) AS total_sales,
    SUM(total_returns) AS total_returns,
    SUM(total_return_amount) AS total_return_amount,
    COUNT(*) AS customer_count
FROM 
    CustomerInfo
GROUP BY 
    CASE 
        WHEN SUM(total_sales) > 0 THEN 'Active Customer'
        ELSE 'Inactive Customer'
    END,
    cd_gender,
    cd_income_band_sk,
    cd_marital_status
ORDER BY 
    customer_status DESC,
    total_sales DESC;
