
WITH CustomerSales AS (
    SELECT
        c.c_customer_id,
        SUM(ws.ws_ext_sales_price) AS total_sales,
        COUNT(ws.ws_order_number) AS total_orders,
        COUNT(DISTINCT ws.ws_ship_date_sk) AS unique_ship_dates
    FROM
        customer c
    JOIN
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    WHERE
        ws.ws_sold_date_sk BETWEEN 1000 AND 2000
    GROUP BY
        c.c_customer_id
),
Demographics AS (
    SELECT
        cd.cd_demo_sk,
        cd.cd_gender,
        cd.cd_marital_status,
        ib.ib_income_band_sk,
        ib.ib_lower_bound,
        ib.ib_upper_bound
    FROM
        customer_demographics cd
    LEFT JOIN
        household_demographics hd ON cd.cd_demo_sk = hd.hd_demo_sk
    LEFT JOIN
        income_band ib ON hd.hd_income_band_sk = ib.ib_income_band_sk
),
RankedSales AS (
    SELECT
        cs.c_customer_id,
        cs.total_sales,
        cs.total_orders,
        cs.unique_ship_dates,
        RANK() OVER (ORDER BY cs.total_sales DESC) AS sales_rank
    FROM
        CustomerSales cs
)
SELECT
    ds.cd_gender,
    ds.cd_marital_status,
    COUNT(rs.c_customer_id) AS customer_count,
    AVG(rs.total_sales) AS avg_sales,
    SUM(rs.total_orders) AS total_orders,
    MIN(ds.ib_lower_bound) AS min_income_band,
    MAX(ds.ib_upper_bound) AS max_income_band
FROM
    RankedSales rs
JOIN
    Demographics ds ON rs.c_customer_id = ds.cd_demo_sk
GROUP BY
    ds.cd_gender,
    ds.cd_marital_status,
    ds.ib_lower_bound,
    ds.ib_upper_bound
HAVING
    COUNT(rs.c_customer_id) > 10
ORDER BY
    avg_sales DESC;
