
WITH RankedSales AS (
    SELECT 
        ws.web_site_sk,
        ws.ws_order_number,
        ws.ws_sold_date_sk,
        ws.ws_quantity,
        ws.ws_net_paid,
        ROW_NUMBER() OVER (PARTITION BY ws.web_site_sk ORDER BY ws.ws_net_paid DESC) AS sales_rank
    FROM 
        web_sales ws
    WHERE 
        ws.ws_sold_date_sk BETWEEN 2451007 AND 2451107 
),
CustomerSummary AS (
    SELECT 
        c.c_customer_sk,
        COUNT(DISTINCT ws.ws_order_number) AS total_orders,
        SUM(ws.ws_net_paid) AS total_spent
    FROM 
        customer c
    LEFT JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY 
        c.c_customer_sk
),
TopCustomers AS (
    SELECT 
        cs.c_customer_sk,
        cs.total_orders,
        cs.total_spent,
        RANK() OVER (ORDER BY cs.total_spent DESC) AS spending_rank
    FROM 
        CustomerSummary cs
    WHERE 
        cs.total_spent > 1000 
),
InventoryCheck AS (
    SELECT 
        i.i_item_sk,
        SUM(inv.inv_quantity_on_hand) AS total_inventory
    FROM 
        inventory inv
    JOIN 
        item i ON inv.inv_item_sk = i.i_item_sk
    GROUP BY 
        i.i_item_sk
)
SELECT 
    tc.c_customer_sk,
    tc.total_orders,
    tc.total_spent,
    COUNT(DISTINCT r.ws_order_number) AS return_count,
    SUM(r.ws_return_amt) AS total_return_amt,
    CASE 
        WHEN COUNT(DISTINCT r.ws_order_number) > 0 THEN 'Returned'
        ELSE 'No Returns'
    END AS return_status,
    COALESCE(s.sales_rank, 'N/A') AS sales_rank,
    COALESCE(i.total_inventory, 0) AS total_inventory
FROM 
    TopCustomers tc
LEFT JOIN 
    web_returns r ON tc.c_customer_sk = r.wr_returning_customer_sk
LEFT JOIN 
    RankedSales s ON tc.c_customer_sk = s.web_site_sk
LEFT JOIN 
    InventoryCheck i ON s.ws_order_number = i.i_item_sk
GROUP BY 
    tc.c_customer_sk, 
    tc.total_orders, 
    tc.total_spent, 
    s.sales_rank, 
    i.total_inventory
HAVING 
    SUM(COALESCE(r.ws_return_amt, 0)) < 500;
