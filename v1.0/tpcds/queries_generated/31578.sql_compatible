
WITH RECURSIVE sales_summary AS (
    SELECT 
        ws_cdemo_sk,
        SUM(ws_ext_sales_price) AS total_sales,
        COUNT(ws_order_number) AS order_count,
        ROW_NUMBER() OVER (PARTITION BY ws_cdemo_sk ORDER BY SUM(ws_ext_sales_price) DESC) AS sales_rank
    FROM 
        web_sales
    GROUP BY 
        ws_cdemo_sk
),
customer_info AS (
    SELECT 
        c.c_customer_id,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        ca.ca_city,
        COALESCE(s.total_sales, 0) AS total_sales,
        COALESCE(s.order_count, 0) AS order_count
    FROM 
        customer c
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN 
        customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
    LEFT JOIN 
        sales_summary s ON c.c_customer_sk = s.ws_cdemo_sk
),
top_customers AS (
    SELECT 
        ci.c_customer_id,
        ci.c_first_name,
        ci.c_last_name,
        ci.cd_gender,
        ci.cd_marital_status,
        ci.ca_city,
        ci.total_sales,
        ci.order_count,
        DENSE_RANK() OVER (ORDER BY ci.total_sales DESC) AS sales_rank
    FROM 
        customer_info ci
    WHERE 
        ci.total_sales > (
            SELECT AVG(total_sales) FROM sales_summary
        )
)
SELECT 
    tc.c_customer_id,
    tc.c_first_name,
    tc.c_last_name,
    tc.cd_gender,
    tc.cd_marital_status,
    tc.ca_city,
    tc.total_sales,
    tc.order_count,
    CASE 
        WHEN tc.cd_gender = 'F' AND tc.order_count > 10 
            THEN 'Frequent Female Shopper'
        WHEN tc.cd_gender = 'M' AND tc.order_count > 10 
            THEN 'Frequent Male Shopper'
        ELSE 'Occasional Shopper'
    END AS shopper_category
FROM 
    top_customers tc
WHERE 
    tc.sales_rank <= 10
ORDER BY 
    tc.total_sales DESC
FETCH FIRST 5 ROWS ONLY;
