
WITH RECURSIVE customer_chain AS (
    SELECT c.c_customer_sk, c.c_first_name, c.c_last_name, cd.cd_gender,
           cd.cd_marital_status, cd.cd_purchase_estimate, 
           hd.hd_income_band_sk, hd.hd_vehicle_count, 
           1 AS level
    FROM customer c
    JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN household_demographics hd ON c.c_customer_sk = hd.hd_demo_sk
    WHERE cd.cd_marital_status = 'M'
    
    UNION ALL
    
    SELECT c.c_customer_sk, c.c_first_name, c.c_last_name, 
           cd.cd_gender, cd.cd_marital_status, cd.cd_purchase_estimate, 
           hd.hd_income_band_sk, hd.hd_vehicle_count, 
           cc.level + 1
    FROM customer c
    JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    JOIN customer_chain cc ON cc.c_customer_sk = c.c_current_addr_sk
    LEFT JOIN household_demographics hd ON c.c_customer_sk = hd.hd_demo_sk
    WHERE cd.cd_marital_status IN ('M', 'S')
),
sales_summary AS (
    SELECT ws.ws_ship_date_sk, 
           SUM(ws.ws_net_profit) AS total_net_profit, 
           COUNT(ws.ws_order_number) AS order_count,
           ws.ws_ship_customer_sk
    FROM web_sales ws
    JOIN date_dim dd ON ws.ws_sold_date_sk = dd.d_date_sk
    WHERE dd.d_year = 2023
    GROUP BY ws.ws_ship_date_sk, ws.ws_ship_customer_sk
),
final_summary AS (
    SELECT c.c_first_name, c.c_last_name, cc.level,
           COALESCE(ss.total_net_profit, 0) AS total_sales,
           COUNT(DISTINCT ss.order_count) AS total_orders,
           COUNT(DISTINCT hd.hd_income_band_sk) AS income_bands
    FROM customer_chain cc
    LEFT JOIN sales_summary ss ON cc.c_customer_sk = ss.ws_ship_customer_sk
    LEFT JOIN household_demographics hd ON cc.hd_income_band_sk = hd.hd_income_band_sk
    GROUP BY c.c_first_name, c.c_last_name, cc.level
)

SELECT f.c_first_name, f.c_last_name, f.total_sales,
       f.total_orders, f.income_bands,
       CASE 
           WHEN f.total_sales > 1000 THEN 'High Value' 
           WHEN f.total_sales BETWEEN 500 AND 1000 THEN 'Medium Value'
           ELSE 'Low Value' 
       END AS customer_value 
FROM final_summary f
ORDER BY f.total_sales DESC
LIMIT 20;
