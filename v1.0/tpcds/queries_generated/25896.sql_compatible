
WITH AddressSummary AS (
    SELECT
        ca_city,
        ca_state,
        COUNT(*) AS total_addresses,
        STRING_AGG(ca_street_name, ', ') AS street_names,
        STRING_AGG(DISTINCT ca_street_type, '; ') AS street_types
    FROM customer_address
    GROUP BY ca_city, ca_state
),
DemographicSummary AS (
    SELECT
        cd_gender,
        cd_marital_status,
        COUNT(*) AS customer_count,
        AVG(cd_purchase_estimate) AS avg_purchase_estimate
    FROM customer_demographics
    GROUP BY cd_gender, cd_marital_status
),
SalesSummary AS (
    SELECT
        ws.web_site_id,
        SUM(ws.ws_quantity) AS total_quantity,
        SUM(ws.ws_ext_sales_price) AS total_sales,
        SUM(ws.ws_coupon_amt) AS total_coupons_used
    FROM web_sales ws
    GROUP BY ws.web_site_id
),
CombinedSummary AS (
    SELECT
        a.ca_city,
        a.ca_state,
        a.total_addresses,
        a.street_names,
        a.street_types,
        d.cd_gender,
        d.cd_marital_status,
        d.customer_count,
        d.avg_purchase_estimate,
        s.web_site_id,
        s.total_quantity,
        s.total_sales,
        s.total_coupons_used
    FROM AddressSummary a
    JOIN DemographicSummary d ON a.ca_state = d.cd_marital_status
    JOIN SalesSummary s ON s.total_quantity > 100
)
SELECT
    ca_city AS city,
    ca_state AS state,
    total_addresses,
    street_names,
    street_types,
    cd_gender,
    cd_marital_status,
    customer_count,
    avg_purchase_estimate,
    web_site_id,
    total_quantity,
    total_sales,
    total_coupons_used,
    ROW_NUMBER() OVER (PARTITION BY ca_state ORDER BY total_sales DESC) AS rank
FROM CombinedSummary
ORDER BY ca_state, total_sales DESC;
