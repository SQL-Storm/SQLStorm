
WITH RECURSIVE CustomerHierarchy AS (
    SELECT c.c_customer_sk, c.c_first_name, c.c_last_name, cd.cd_marital_status, 
           cd.cd_gender, cd.cd_dep_count, 1 AS level
    FROM customer c
    JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    WHERE cd.cd_marital_status = 'M'
    
    UNION ALL
    
    SELECT c.c_customer_sk, c.c_first_name, c.c_last_name, cd.cd_marital_status, 
           cd.cd_gender, cd.cd_dep_count, ch.level + 1
    FROM customer c
    JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    JOIN CustomerHierarchy ch ON c.c_customer_sk = ch.c_customer_sk
    WHERE cd.cd_dep_count > 0
),
SalesData AS (
    SELECT ws.ws_ship_date_sk, 
           SUM(ws.ws_net_profit) AS total_profit,
           COUNT(DISTINCT ws.ws_order_number) AS order_count,
           ROW_NUMBER() OVER (PARTITION BY ws.ws_ship_date_sk ORDER BY SUM(ws.ws_net_profit) DESC) AS rn
    FROM web_sales ws
    JOIN date_dim d ON ws.ws_sold_date_sk = d.d_date_sk
    WHERE d.d_year = 2023
    GROUP BY ws.ws_ship_date_sk
),
TopSales AS (
    SELECT ws.ws_ship_date_sk, total_profit, order_count
    FROM SalesData
    WHERE rn <= 10
)
SELECT ch.c_first_name, ch.c_last_name, ch.cd_marital_status,
       ch.cd_gender, ch.cd_dep_count, 
       COALESCE(ts.total_profit, 0) AS total_profit,
       COALESCE(ts.order_count, 0) AS order_count,
       CASE 
           WHEN ch.level = 1 THEN 'Primary'
           ELSE 'Dependent ' || CAST(ch.level AS VARCHAR)
       END AS relationship_level
FROM CustomerHierarchy ch
LEFT JOIN TopSales ts ON ch.c_customer_sk = ts.ws_ship_date_sk
ORDER BY total_profit DESC, order_count DESC;
