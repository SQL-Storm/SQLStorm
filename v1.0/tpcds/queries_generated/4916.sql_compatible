
WITH RankedSales AS (
    SELECT 
        ws_bill_customer_sk,
        ws_item_sk,
        ws_sold_date_sk,
        ws_quantity,
        ROW_NUMBER() OVER (PARTITION BY ws_bill_customer_sk ORDER BY ws_sold_date_sk DESC) AS rnk
    FROM 
        web_sales
    WHERE 
        ws_sold_date_sk >= (SELECT MAX(d_date_sk) - 30 FROM date_dim WHERE d_current_month = '1')
),
AggregatedReturns AS (
    SELECT 
        wr_returning_customer_sk,
        SUM(wr_return_quantity) AS total_return_qty,
        SUM(wr_return_amt_inc_tax) AS total_return_amt
    FROM 
        web_returns
    GROUP BY 
        wr_returning_customer_sk
),
CustomerStats AS (
    SELECT 
        c.c_customer_id,
        cd.cd_marital_status,
        cd.cd_gender,
        COALESCE(r.total_return_qty, 0) AS total_return_qty,
        COALESCE(r.total_return_amt, 0) AS total_return_amt,
        SUM(s.ws_sales_price) AS total_sales
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN 
        RankedSales s ON c.c_customer_sk = s.ws_bill_customer_sk
    LEFT JOIN 
        AggregatedReturns r ON c.c_customer_sk = r.wr_returning_customer_sk
    WHERE 
        cd.cd_gender = 'F' AND cd.cd_marital_status = 'M'
    GROUP BY 
        c.c_customer_id, cd.cd_marital_status, cd.cd_gender
)
SELECT 
    c.c_customer_id,
    cs.total_sales,
    cs.total_return_qty,
    cs.total_return_amt,
    DENSE_RANK() OVER (ORDER BY cs.total_sales DESC) AS sales_rank
FROM 
    CustomerStats cs
JOIN 
    customer c ON cs.c_customer_id = c.c_customer_id
LEFT JOIN 
    customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
WHERE 
    ca.ca_state = 'CA'
    AND cs.total_sales > 100
ORDER BY 
    sales_rank;
