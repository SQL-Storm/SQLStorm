
WITH RecursiveCTE AS (
    SELECT 
        c.c_customer_sk, 
        c.c_customer_id,
        cd.cd_gender,
        COUNT(*) OVER (PARTITION BY cd.cd_gender) AS gender_count,
        SUM(CASE WHEN c.c_birth_year IS NOT NULL THEN 1 ELSE 0 END) OVER (PARTITION BY cd.cd_gender) AS born_count,
        ROW_NUMBER() OVER (PARTITION BY cd.cd_gender ORDER BY c.c_birth_year DESC) AS rn
    FROM 
        customer AS c
    JOIN 
        customer_demographics AS cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    WHERE 
        c.c_birth_year IS NOT NULL
),
CustomerIncome AS (
    SELECT 
        ci.c_customer_sk, 
        hd.hd_income_band_sk,
        COUNT(*) AS customer_count,
        STRING_AGG(DISTINCT CASE WHEN cd.cd_marital_status = 'M' THEN 'Married' ELSE 'Single' END, ', ') AS marital_status
    FROM 
        (SELECT 
            c.c_customer_sk, 
            hd.hd_income_band_sk
         FROM 
            customer AS c
         LEFT JOIN 
            household_demographics AS hd ON c.c_current_hdemo_sk = hd.hd_demo_sk 
         WHERE 
            hd.hd_income_band_sk IS NOT NULL) AS ci
    JOIN 
        customer_demographics AS cd ON ci.c_customer_sk = cd.cd_demo_sk
    GROUP BY 
        ci.c_customer_sk, hd.hd_income_band_sk
),
SalesData AS (
    SELECT 
        ws.ws_item_sk, 
        ws.ws_quantity, 
        ws.ws_net_profit, 
        rho.r_reason_desc,
        ROW_NUMBER() OVER (PARTITION BY ws.ws_item_sk ORDER BY ws.ws_sold_date_sk DESC) AS latest_sale
    FROM 
        web_sales AS ws
    LEFT JOIN 
        web_returns AS wr ON ws.ws_item_sk = wr.wr_item_sk
    LEFT JOIN 
        reason AS rho ON wr.wr_reason_sk = rho.r_reason_sk
    WHERE 
        ws.ws_net_profit IS NOT NULL
        AND ws.ws_quantity > 0
),
AggregateSales AS (
    SELECT 
        sd.ws_item_sk,
        SUM(sd.ws_net_profit) AS total_profit,
        AVG(sd.ws_quantity) AS avg_quantity,
        COUNT(DISTINCT sd.latest_sale) AS unique_sales
    FROM 
        SalesData AS sd
    GROUP BY 
        sd.ws_item_sk
),
FinalOutput AS (
    SELECT 
        r.*, 
        ci.customer_count,
        SUM(a.total_profit) AS cumulative_profit 
    FROM 
        (SELECT * FROM RecursiveCTE WHERE rn <= 10) AS r
    LEFT JOIN 
        CustomerIncome AS ci ON r.c_customer_sk = ci.c_customer_sk
    LEFT JOIN 
        AggregateSales AS a ON a.ws_item_sk = r.c_customer_sk
    WHERE 
        (ci.hd_income_band_sk IS NOT NULL OR ci.customer_count > 0)
    GROUP BY 
        r.c_customer_sk, r.c_customer_id, cd.cd_gender, ci.customer_count
)
SELECT 
    c.c_customer_id,
    COUNT(DISTINCT f.c_customer_sk) AS unique_customers,
    SUM(COALESCE(f.cumulative_profit, 0)) AS total_cumulative_profit,
    MAX(f.gender_count) AS max_gender_count 
FROM 
    FinalOutput AS f
LEFT JOIN 
    customer AS c ON f.c_customer_sk = c.c_customer_sk
GROUP BY 
    c.c_customer_id
ORDER BY 
    total_cumulative_profit DESC
LIMIT 50;
