
WITH CustomerReturns AS (
    SELECT 
        sr_customer_sk,
        sr_items.returned_quantity,
        sr_items.return_amt,
        COALESCE(sr_items.return_tax, 0) AS return_tax,
        SUM(sr_items.return_amt_inc_tax) OVER (PARTITION BY sr_customer_sk) AS total_return_amt_inc_tax,
        ROW_NUMBER() OVER (PARTITION BY sr_customer_sk ORDER BY sr_returned_date_sk DESC) AS rn
    FROM 
        store_returns sr 
    JOIN 
        (SELECT 
             sr_item_sk, 
             SUM(sr_return_quantity) AS returned_quantity, 
             SUM(sr_return_amt) AS return_amt, 
             SUM(sr_return_tax) AS return_tax 
         FROM 
             store_returns 
         GROUP BY 
             sr_item_sk) sr_items ON sr.sr_item_sk = sr_items.sr_item_sk
),
WebReturns AS (
    SELECT 
        wr_returning_customer_sk AS customer_sk,
        wr_return_quantity AS web_return_qty,
        wr_return_amt AS web_return_amt,
        wr_return_tax AS web_return_tax,
        ROW_NUMBER() OVER (PARTITION BY wr_returning_customer_sk ORDER BY wr_returned_date_sk DESC) AS rn
    FROM 
        web_returns
),
CombinedReturns AS (
    SELECT 
        COALESCE(cust_returns.sr_customer_sk, web_returns.customer_sk) AS customer_sk,
        COALESCE(cust_returns.returned_quantity, 0) AS returned_quantity,
        COALESCE(web_returns.web_return_qty, 0) AS web_return_qty,
        COALESCE(cust_returns.return_amt, 0) + COALESCE(web_returns.web_return_amt, 0) AS total_return_amt,
        COALESCE(cust_returns.return_tax, 0) + COALESCE(web_returns.web_return_tax, 0) AS total_return_tax
    FROM 
        CustomerReturns cust_returns
    FULL OUTER JOIN 
        WebReturns web_returns ON cust_returns.sr_customer_sk = web_returns.customer_sk
)
SELECT 
    cust.c_customer_id,
    COALESCE(cr.total_return_amt, 0) AS total_return_amt,
    ROUND(COALESCE(cr.total_return_tax, 0), 2) AS total_return_tax,
    (CASE 
        WHEN ROUND(COALESCE(cr.total_return_amt, 0), 2) > 1000 THEN 'High Return'
        ELSE 'Low Return'
    END) AS return_category,
    ROW_NUMBER() OVER (ORDER BY COALESCE(cr.total_return_amt, 0) DESC) AS rank
FROM 
    customer cust
LEFT JOIN 
    CombinedReturns cr ON cust.c_customer_sk = cr.customer_sk
WHERE 
    cust.c_birth_year > 1980
GROUP BY 
    cust.c_customer_id, cr.total_return_amt, cr.total_return_tax
ORDER BY 
    rank
LIMIT 100;
