
WITH RECURSIVE date_range AS (
    SELECT d_date_sk, d_date
    FROM date_dim
    WHERE d_date >= '2001-01-01'
    UNION ALL
    SELECT d_date_sk + 1, DATE_ADD(d_date, INTERVAL '1 day')
    FROM date_range
    WHERE d_date_sk < (SELECT MAX(d_date_sk) FROM date_dim)
),
customer_sales AS (
    SELECT 
        c.c_customer_sk,
        SUM(ws.ws_net_profit) AS total_net_profit,
        COUNT(DISTINCT ws.ws_order_number) AS total_orders,
        COUNT(DISTINCT ws.ws_item_sk) AS unique_items_purchased,
        DENSE_RANK() OVER (PARTITION BY c.c_current_cdemo_sk ORDER BY SUM(ws.ws_net_profit) DESC) AS rank_by_profit
    FROM customer c
    JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY c.c_customer_sk, c.c_current_cdemo_sk
),
profit_summary AS (
    SELECT 
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_education_status,
        AVG(cs.total_net_profit) AS avg_net_profit,
        SUM(cs.total_orders) AS total_orders,
        SUM(cs.unique_items_purchased) AS total_unique_items
    FROM customer_sales cs
    JOIN customer_demographics cd ON cs.c_customer_sk = cd.cd_demo_sk
    GROUP BY cd.cd_gender, cd.cd_marital_status, cd.cd_education_status
)
SELECT 
    f.cd_gender,
    f.cd_marital_status,
    f.cd_education_status,
    f.avg_net_profit,
    f.total_orders,
    f.total_unique_items,
    ROW_NUMBER() OVER (ORDER BY f.avg_net_profit DESC) AS profit_rank
FROM profit_summary f
WHERE f.total_orders > 0
AND (f.avg_net_profit > (SELECT AVG(avg_net_profit) FROM profit_summary) OR f.total_unique_items > 5)
ORDER BY f.total_orders DESC;
