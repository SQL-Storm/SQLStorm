
WITH RECURSIVE SalesCTE AS (
    SELECT 
        ws_sold_date_sk,
        SUM(ws_ext_sales_price) AS total_sales,
        COUNT(ws_order_number) AS order_count,
        ws_item_sk
    FROM web_sales
    WHERE ws_sold_date_sk >= (SELECT MAX(d_date_sk) FROM date_dim) - INTERVAL '30 days'
    GROUP BY ws_item_sk, ws_sold_date_sk
    UNION ALL
    SELECT 
        d.d_date_sk,
        SUM(ws_ext_sales_price) AS total_sales,
        COUNT(ws_order_number) AS order_count,
        ws.item_sk
    FROM web_sales ws
    JOIN date_dim d ON ws.ws_sold_date_sk = d.d_date_sk
    WHERE d.d_date_sk < (SELECT MAX(ws_sold_date_sk) FROM web_sales)
    GROUP BY ws.item_sk, d.d_date_sk
),
AddressSales AS (
    SELECT 
        ca_state,
        SUM(total_sales) AS state_sales
    FROM customer 
    JOIN customer_address ON customer.c_current_addr_sk = customer_address.ca_address_sk
    JOIN SalesCTE ON SalesCTE.ws_item_sk = customer.c_customer_sk
    GROUP BY ca_state
),
TopStates AS (
    SELECT 
        ca_state, 
        state_sales,
        RANK() OVER (ORDER BY state_sales DESC) AS sales_rank
    FROM AddressSales
),
CustomerDemographics AS (
    SELECT 
        d.cd_gender,
        AVG(d.cd_purchase_estimate) AS avg_purchase_estimate
    FROM customer_demographics d
    JOIN customer c ON c.c_current_cdemo_sk = d.cd_demo_sk
    WHERE d.cd_gender IS NOT NULL
    GROUP BY d.cd_gender
)
SELECT 
    ts.ca_state,
    ts.state_sales,
    cd.cd_gender,
    cd.avg_purchase_estimate,
    COALESCE(SUM(ss.net_profit), 0) AS total_store_profit,
    COUNT(DISTINCT ws.ws_order_number) AS total_web_orders
FROM TopStates ts
LEFT JOIN CustomerDemographics cd ON cd.cd_gender = (CASE 
                                                        WHEN ts.sales_rank <= 3 THEN 'F' 
                                                        ELSE 'M' 
                                                     END)
LEFT JOIN store_sales ss ON ss.ss_sold_date_sk BETWEEN (SELECT MIN(d_date_sk) FROM date_dim WHERE d_year = 2023) AND (SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = 2023)
LEFT JOIN web_sales ws ON ws.ws_sold_date_sk = (SELECT MAX(d_date_sk) FROM date_dim) 
GROUP BY ts.ca_state, cd.cd_gender, cd.avg_purchase_estimate, ts.state_sales
HAVING ts.state_sales > (SELECT AVG(state_sales) FROM AddressSales)
ORDER BY ts.state_sales DESC;
