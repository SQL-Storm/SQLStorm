
WITH RankedReturns AS (
    SELECT 
        sr_returned_date_sk,
        sr_item_sk,
        sr_return_quantity,
        sr_return_amt,
        ROW_NUMBER() OVER (PARTITION BY sr_item_sk ORDER BY sr_returned_date_sk DESC) AS rn
    FROM store_returns
    WHERE sr_return_quantity IS NOT NULL
), 
CustomerStats AS (
    SELECT 
        c.c_customer_sk,
        COUNT(DISTINCT sr_ticket_number) AS total_returns,
        AVG(COALESCE(sr_return_amt, 0)) AS avg_return_amt
    FROM customer c
    LEFT JOIN store_returns sr ON c.c_customer_sk = sr.sr_customer_sk
    GROUP BY c.c_customer_sk
), 
IncomeAnalysis AS (
    SELECT 
        h.hd_income_band_sk,
        COUNT(DISTINCT c.c_customer_sk) AS customer_count,
        SUM(COALESCE(ws_ext_sales_price, 0)) AS total_sales
    FROM household_demographics h
    JOIN customer c ON h.hd_demo_sk = c.c_current_cdemo_sk
    LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY h.hd_income_band_sk
)

SELECT 
    ca.ca_city,
    COUNT(DISTINCT c.c_customer_sk) AS num_customers,
    SUM(COALESCE(IN.total_sales, 0)) AS total_income,
    SUM(COALESCE(RR.return_amount, 0)) AS total_return_amount,
    AVG(cs.total_returns) AS avg_customer_returns,
    MAX(RR.return_quantity) AS max_return_quantity
FROM customer_address ca
JOIN customer c ON ca.ca_address_sk = c.c_current_addr_sk
LEFT JOIN IncomeAnalysis IN ON c.c_current_cdemo_sk = IN.hd_demo_sk
LEFT JOIN CustomerStats cs ON c.c_customer_sk = cs.c_customer_sk
LEFT JOIN 
    (SELECT 
        sr_item_sk, 
        SUM(sr_return_amt) AS return_amount, 
        MAX(sr_return_quantity) AS return_quantity 
     FROM RankedReturns 
     WHERE rn = 1 
     GROUP BY sr_item_sk) RR ON c.c_current_addr_sk = RR.sr_item_sk 
WHERE ca.ca_state = 'CA'
GROUP BY ca.ca_city
HAVING COUNT(DISTINCT c.c_customer_sk) > 10
ORDER BY num_customers DESC;
