WITH RankedSales AS (
    SELECT
        ws.ws_item_sk,
        ws.ws_order_number,
        ws.ws_quantity,
        ws.ws_sales_price,
        ROW_NUMBER() OVER (PARTITION BY ws.ws_item_sk ORDER BY ws.ws_sales_price DESC) AS price_rank,
        SUM(ws.ws_quantity) OVER (PARTITION BY ws.ws_item_sk) AS total_quantity
    FROM web_sales ws
    INNER JOIN item i ON ws.ws_item_sk = i.i_item_sk
    WHERE ws.ws_sales_price IS NOT NULL
      AND i.i_rec_start_date <= cast('2002-10-01' as date)
      AND (i.i_rec_end_date IS NULL OR i.i_rec_end_date > cast('2002-10-01' as date))
)
, CustomerReturns AS (
    SELECT
        cr.cr_item_sk,
        SUM(cr.cr_return_quantity) AS total_returned,
        COUNT(DISTINCT cr.cr_returning_customer_sk) AS unique_returning_customers
    FROM catalog_returns cr
    WHERE cr.cr_return_quantity > 0
    GROUP BY cr.cr_item_sk
)
SELECT
    i.i_item_id,
    SUM(rs.ws_quantity) AS total_sold,
    COALESCE(SUM(cr.total_returned), 0) AS total_returned,
    rs.total_quantity AS total_quantity,
    COUNT(DISTINCT ws.ws_bill_customer_sk) AS unique_buyers,
    CASE 
        WHEN SUM(rs.ws_quantity) > COALESCE(SUM(cr.total_returned), 0) THEN 'Healthy Sales'
        WHEN SUM(rs.ws_quantity) = 0 THEN 'No Sales Recorded'
        ELSE 'Returns Exceed Sales'
    END AS sales_health
FROM RankedSales rs
LEFT JOIN CustomerReturns cr ON rs.ws_item_sk = cr.cr_item_sk
INNER JOIN item i ON rs.ws_item_sk = i.i_item_sk
LEFT JOIN store s ON s.s_store_sk IN (
    SELECT ss.ss_store_sk
    FROM store_sales ss
    WHERE ss.ss_item_sk = rs.ws_item_sk
    GROUP BY ss.ss_store_sk
    HAVING COUNT(ss.ss_ticket_number) > 10
)
WHERE rs.price_rank = 1
GROUP BY i.i_item_id, rs.total_quantity
HAVING total_quantity > 100
ORDER BY total_sold DESC;