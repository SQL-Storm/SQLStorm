
WITH SalesSummaries AS (
    SELECT 
        c.c_customer_id,
        SUM(ws.ws_quantity) AS total_quantity_sold,
        SUM(ws.ws_sales_price) AS total_sales,
        COUNT(DISTINCT ws.ws_order_number) AS total_orders,
        AVG(ws.ws_sales_price) AS avg_sales_price,
        EXTRACT(YEAR FROM dd.d_date) AS sales_year,
        dd.d_month_seq AS sales_month,
        dd.d_week_seq AS sales_week
    FROM 
        web_sales ws
    JOIN 
        customer c ON ws.ws_bill_customer_sk = c.c_customer_sk
    JOIN 
        date_dim dd ON ws.ws_sold_date_sk = dd.d_date_sk
    GROUP BY 
        c.c_customer_id, sales_year, sales_month, sales_week
),
CustomerDemographics AS (
    SELECT 
        cd.cd_demo_sk,
        cd.cd_gender,
        cd.cd_marital_status,
        ib.ib_income_band_sk,
        hd.hd_buy_potential
    FROM 
        customer_demographics cd
    LEFT JOIN 
        household_demographics hd ON cd.cd_demo_sk = hd.hd_demo_sk
    LEFT JOIN 
        income_band ib ON hd.hd_income_band_sk = ib.ib_income_band_sk
)
SELECT 
    cs.c_customer_id,
    cs.total_quantity_sold,
    cs.total_sales,
    cs.total_orders,
    cs.avg_sales_price,
    cd.cd_gender,
    cd.cd_marital_status,
    cd.ib_income_band_sk,
    cd.hd_buy_potential
FROM 
    SalesSummaries cs
JOIN 
    CustomerDemographics cd ON cs.c_customer_id = cd.cd_demo_sk
WHERE 
    cs.total_sales > 1000
ORDER BY 
    cs.total_sales DESC
FETCH FIRST 50 ROWS ONLY;
