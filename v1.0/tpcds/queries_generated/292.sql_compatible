
WITH RecentSales AS (
    SELECT 
        ws.ws_item_sk,
        SUM(ws.ws_quantity) AS total_quantity,
        SUM(ws.ws_net_paid) AS total_net_paid,
        ROW_NUMBER() OVER (PARTITION BY ws.ws_item_sk ORDER BY ws.ws_sold_date_sk DESC) AS rn
    FROM 
        web_sales ws
    WHERE 
        ws.ws_sold_date_sk > (SELECT MAX(d.d_date_sk) - 30 FROM date_dim d)
    GROUP BY 
        ws.ws_item_sk
),
CustomerReturns AS (
    SELECT 
        wr.wr_item_sk,
        COUNT(*) AS total_returns,
        SUM(wr.wr_return_amt) AS total_return_amount,
        ROW_NUMBER() OVER (PARTITION BY wr.wr_item_sk ORDER BY wr.wr_returned_date_sk DESC) AS rn
    FROM 
        web_returns wr
    WHERE 
        wr.wr_returned_date_sk IN (
            SELECT d.d_date_sk FROM date_dim d WHERE d.d_year = (SELECT MAX(d.d_year) FROM date_dim)
        )
    GROUP BY 
        wr.wr_item_sk
),
ItemStats AS (
    SELECT 
        i.i_item_sk,
        i.i_item_id,
        COALESCE(rs.total_quantity, 0) AS total_quantity,
        COALESCE(rs.total_net_paid, 0) AS total_net_paid,
        COALESCE(cr.total_returns, 0) AS total_returns,
        COALESCE(cr.total_return_amount, 0) AS total_return_amount
    FROM 
        item i
    LEFT JOIN RecentSales rs ON i.i_item_sk = rs.ws_item_sk AND rs.rn = 1
    LEFT JOIN CustomerReturns cr ON i.i_item_sk = cr.wr_item_sk AND cr.rn = 1
)
SELECT 
    is.i_item_id,
    is.total_quantity,
    is.total_net_paid,
    is.total_returns,
    is.total_return_amount,
    (CASE 
        WHEN is.total_net_paid = 0 THEN NULL 
        ELSE (is.total_return_amount / is.total_net_paid) * 100 
    END) AS return_percentage
FROM 
    ItemStats is
WHERE 
    is.total_net_paid > 0
ORDER BY 
    return_percentage DESC 
FETCH FIRST 10 ROWS ONLY;
