
WITH RankedSales AS (
    SELECT ws.ws_item_sk,
           ws.ws_order_number,
           ws.ws_quantity,
           ws.ws_sales_price,
           ROW_NUMBER() OVER (PARTITION BY ws.ws_item_sk ORDER BY ws.ws_sales_price DESC) AS rank_price,
           SUM(ws.ws_quantity) OVER (PARTITION BY ws.ws_item_sk) AS total_quantity
    FROM web_sales ws
    WHERE ws.ws_sales_price > 0
), 
CustomerInfo AS (
    SELECT c.c_customer_id,
           cd.cd_gender,
           cd.cd_marital_status,
           cd.cd_purchase_estimate,
           cd.cd_credit_rating,
           ca.ca_city,
           ca.ca_state,
           COUNT(DISTINCT cs.cs_order_number) AS total_orders
    FROM customer c
    JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    JOIN customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
    LEFT JOIN catalog_sales cs ON c.c_customer_sk = cs.cs_bill_customer_sk
    GROUP BY c.c_customer_id, cd.cd_gender, cd.cd_marital_status, cd.cd_purchase_estimate, cd.cd_credit_rating, ca.ca_city, ca.ca_state
)
SELECT ci.c_customer_id,
       ci.cd_gender,
       ci.cd_marital_status,
       ci.cd_purchase_estimate,
       ci.cd_credit_rating,
       ci.ca_city,
       ci.ca_state,
       COALESCE(rs.total_quantity, 0) AS total_quantity_sold,
       SUM(CASE WHEN rs.rank_price = 1 THEN rs.ws_sales_price * rs.ws_quantity ELSE 0 END) AS top_sales_revenue,
       COUNT(DISTINCT ci.total_orders) AS distinct_order_count
FROM CustomerInfo ci
LEFT JOIN RankedSales rs ON ci.c_customer_id = CAST(rs.ws_order_number AS VARCHAR)
WHERE ci.cd_marital_status = 'M' AND ci.cd_purchase_estimate > 1000
GROUP BY ci.c_customer_id, ci.cd_gender, ci.cd_marital_status, ci.cd_purchase_estimate, ci.cd_credit_rating, ci.ca_city, ci.ca_state
HAVING SUM(COALESCE(rs.ws_sales_price, 0)) > 5000
ORDER BY total_quantity_sold DESC, top_sales_revenue DESC;
