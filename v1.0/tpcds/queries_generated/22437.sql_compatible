
WITH RECURSIVE sales_summary AS (
    SELECT 
        c.c_customer_sk,
        COALESCE(SUM(ss.ss_sales_price), 0) AS total_store_sales,
        COALESCE(SUM(cs.cs_sales_price), 0) AS total_catalog_sales,
        COALESCE(SUM(ws.ws_sales_price), 0) AS total_web_sales,
        ROW_NUMBER() OVER (PARTITION BY c.c_customer_sk ORDER BY COALESCE(SUM(ss.ss_sales_price), 0) DESC) AS rn
    FROM 
        customer c
    LEFT JOIN 
        store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    LEFT JOIN 
        catalog_sales cs ON c.c_customer_sk = cs.cs_bill_customer_sk
    LEFT JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY 
        c.c_customer_sk
),
income_distribution AS (
    SELECT 
        d.ib_income_band_sk,
        COUNT(c.c_customer_sk) AS customer_count
    FROM 
        customer c
    JOIN 
        household_demographics h ON c.c_current_hdemo_sk = h.hd_demo_sk
    JOIN 
        income_band d ON h.hd_income_band_sk = d.ib_income_band_sk
    GROUP BY 
        d.ib_income_band_sk
),
target_sales AS (
    SELECT 
        s.c_customer_sk,
        SUM(s.total_store_sales + s.total_catalog_sales + s.total_web_sales) AS grand_total_sales
    FROM 
        sales_summary s
    WHERE 
        s.rn = 1 
        AND (s.total_store_sales > 1000 OR s.total_web_sales > 500) 
    GROUP BY 
        s.c_customer_sk
)
SELECT 
    t.ib_income_band_sk,
    SUM(ts.grand_total_sales) AS total_sales
FROM 
    target_sales ts
LEFT JOIN 
    income_distribution t ON ts.c_customer_sk = t.customer_count
GROUP BY 
    t.ib_income_band_sk
HAVING 
    SUM(ts.grand_total_sales) > (SELECT AVG(grand_total_sales) FROM target_sales)
ORDER BY 
    t.ib_income_band_sk DESC
LIMIT 5
UNION ALL 
SELECT 
    NULL AS ib_income_band_sk,
    COUNT(*) AS total_sales 
FROM 
    sales_summary 
WHERE 
    total_store_sales = 0
    AND total_catalog_sales = 0
    AND total_web_sales = 0;
