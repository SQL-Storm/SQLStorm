WITH customer_stats AS (
    SELECT 
        cd_demo_sk,
        cd_gender,
        COUNT(c_customer_sk) AS total_customers,
        SUM(CASE WHEN c_birth_year > 1990 THEN 1 ELSE 0 END) AS young_customers,
        AVG(cd_purchase_estimate) AS avg_purchase_estimate,
        AVG(hd_vehicle_count) AS avg_vehicle_count,
        SUM(CASE WHEN cd_credit_rating = 'High' THEN 1 ELSE 0 END) AS high_credit_customers
    FROM 
        customer 
    JOIN 
        customer_demographics ON c_current_cdemo_sk = cd_demo_sk
    JOIN 
        household_demographics ON hd_demo_sk = cd_demo_sk
    GROUP BY 
        cd_demo_sk, cd_gender
),
sales_data AS (
    SELECT 
        ws_item_sk,
        SUM(ws_quantity) AS total_quantity_sold,
        SUM(ws_sales_price) AS total_sales_value,
        AVG(ws_sales_price) AS avg_sales_price
    FROM 
        web_sales
    GROUP BY 
        ws_item_sk
),
item_sales AS (
    SELECT 
        i_item_sk,
        i_item_desc,
        COALESCE(SUM(total_quantity_sold), 0) AS total_quantity_sold,
        COALESCE(SUM(total_sales_value), 0) AS total_sales_value,
        COALESCE(AVG(avg_sales_price), 0) AS avg_sales_price
    FROM 
        item 
    LEFT JOIN 
        sales_data ON i_item_sk = ws_item_sk
    GROUP BY 
        i_item_sk, i_item_desc
),
final_report AS (
    SELECT 
        cs.cd_gender,
        cs.total_customers,
        cs.young_customers,
        cs.avg_purchase_estimate,
        cs.avg_vehicle_count,
        cs.high_credit_customers,
        is.item_desc,
        is.total_quantity_sold,
        is.total_sales_value,
        is.avg_sales_price
    FROM 
        customer_stats cs
    LEFT JOIN 
        item_sales is ON cs.cd_demo_sk = is.i_item_sk  
)
SELECT 
    cd_gender,
    SUM(total_customers) AS total_customers,
    SUM(young_customers) AS total_young_customers,
    AVG(avg_purchase_estimate) AS overall_avg_purchase_estimate,
    AVG(avg_vehicle_count) AS overall_avg_vehicle_count,
    SUM(high_credit_customers) AS total_high_credit_customers,
    SUM(total_quantity_sold) AS overall_total_quantity_sold,
    SUM(total_sales_value) AS overall_total_sales_value,
    AVG(avg_sales_price) AS overall_avg_sales_price
FROM 
    final_report
GROUP BY 
    cd_gender
ORDER BY 
    total_customers DESC;