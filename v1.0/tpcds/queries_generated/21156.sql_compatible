
WITH RECURSIVE item_hierarchy AS (
    SELECT 
        i_item_sk, 
        i_item_id, 
        i_item_desc, 
        i_current_price, 
        i_class_id, 
        i_category_id, 
        1 AS level
    FROM item
    WHERE i_item_sk IS NOT NULL
    UNION ALL
    SELECT 
        i.i_item_sk, 
        i.i_item_id, 
        i.i_item_desc, 
        i.i_current_price, 
        i.class_id, 
        i.category_id, 
        ih.level + 1
    FROM item i
    JOIN item_hierarchy ih ON i.class_id = ih.i_class_id
    WHERE ih.level < 5
), 
sales_data AS (
    SELECT 
        ws.ws_item_sk,
        SUM(ws.ws_sales_price) AS total_sales,
        COUNT(DISTINCT ws.ws_order_number) AS order_count,
        ROW_NUMBER() OVER (PARTITION BY ws.ws_item_sk ORDER BY SUM(ws.ws_sales_price) DESC) AS rank
    FROM web_sales ws
    WHERE ws.ws_sold_date_sk BETWEEN 1 AND 366
    GROUP BY ws.ws_item_sk
), 
store_sales_data AS (
    SELECT 
        ss.ss_item_sk,
        SUM(ss.ss_sales_price) AS store_total_sales,
        SUM(ss.ss_quantity) AS total_quantity,
        COUNT(DISTINCT ss.ss_ticket_number) AS store_order_count
    FROM store_sales ss
    WHERE ss.ss_sold_date_sk BETWEEN 1 AND 366
    GROUP BY ss.ss_item_sk
),
combined_sales AS (
    SELECT
        ih.i_item_sk,
        ih.i_item_desc,
        COALESCE(sd.total_sales, 0) AS online_sales,
        COALESCE(ssd.store_total_sales, 0) AS offline_sales,
        (COALESCE(sd.total_sales, 0) + COALESCE(ssd.store_total_sales, 0)) AS total,
        CASE 
            WHEN COALESCE(sd.total_sales, 0) = 0 THEN NULL 
            ELSE COALESCE(sd.total_sales, 0) / NULLIF((COALESCE(sd.total_sales, 0) + COALESCE(ssd.store_total_sales, 0)), 0) 
        END AS online_percentage
    FROM item_hierarchy ih
    LEFT JOIN sales_data sd ON ih.i_item_sk = sd.ws_item_sk
    LEFT JOIN store_sales_data ssd ON ih.i_item_sk = ssd.ss_item_sk
), 
ranked_items AS (
    SELECT 
        ih.i_item_sk, 
        ih.i_item_desc,
        online_sales, 
        offline_sales,
        total, 
        online_percentage,
        RANK() OVER (ORDER BY total DESC) AS sales_rank
    FROM combined_sales ih
)

SELECT 
    r.i_item_desc,
    r.online_sales,
    r.offline_sales,
    r.total,
    r.online_percentage,
    CASE 
        WHEN r.online_percentage IS NULL THEN 'N/A'
        WHEN r.online_percentage > 0.5 THEN 'High'
        WHEN r.online_percentage BETWEEN 0.2 AND 0.5 THEN 'Moderate'
        ELSE 'Low'
    END AS sales_segment,
    DENSE_RANK() OVER (ORDER BY r.total DESC) AS segment_rank
FROM ranked_items r
WHERE r.sales_rank <= 10
ORDER BY r.total DESC, r.online_sales DESC;
