WITH RankedStores AS (
    SELECT 
        s_store_sk, 
        s_store_name, 
        s_city, 
        s_state, 
        COUNT(ss_ticket_number) AS Total_Sales,
        RANK() OVER (PARTITION BY s_state ORDER BY COUNT(ss_ticket_number) DESC) AS Sales_Rank
    FROM 
        store 
    LEFT JOIN 
        store_sales ON store.s_store_sk = store_sales.ss_store_sk
    GROUP BY 
        s_store_sk, s_store_name, s_city, s_state
),
CustomerIncome AS (
    SELECT 
        c.c_customer_sk, 
        c.c_first_name, 
        c.c_last_name, 
        d.cd_marital_status, 
        d.cd_credit_rating,
        ib.ib_upper_bound,
        ib.ib_lower_bound
    FROM 
        customer c 
    JOIN 
        customer_demographics d ON c.c_current_cdemo_sk = d.cd_demo_sk
    LEFT JOIN 
        household_demographics hd ON d.cd_demo_sk = hd.hd_demo_sk
    LEFT JOIN 
        income_band ib ON hd.hd_income_band_sk = ib.ib_income_band_sk
),
MonthlySales AS (
    SELECT 
        DATE_TRUNC('month', d.d_date) AS Sales_Month, 
        COUNT(ws_order_number) AS Total_Orders,
        SUM(ws_net_profit) AS Total_Profit
    FROM 
        date_dim d 
    JOIN 
        web_sales ws ON d.d_date_sk = ws.ws_sold_date_sk
    GROUP BY 
        Sales_Month
)
SELECT 
    cs.Customer_Name,
    si.Store_Name,
    ms.Sales_Month,
    ms.Total_Orders,
    ms.Total_Profit,
    CASE 
        WHEN si.Total_Sales IS NULL THEN 'No Sales'
        ELSE 'Sales Exist'
    END AS Sales_Status
FROM 
    (SELECT CONCAT(c.c_first_name, ' ', c.c_last_name) AS Customer_Name, c.c_customer_sk 
     FROM CustomerIncome c) cs
LEFT JOIN 
    RankedStores si ON cs.c_customer_sk IN (SELECT sr_customer_sk FROM store_returns WHERE sr_store_sk = si.s_store_sk)
JOIN 
    MonthlySales ms ON DATE_PART('month', ms.Sales_Month) = DATE_PART('month', cast('2002-10-01' as date))
WHERE 
    cs.Customer_Name LIKE '%John%' 
    OR cs.Customer_Name LIKE '%Doe%'
ORDER BY 
    ms.Total_Profit DESC, cs.Customer_Name ASC;