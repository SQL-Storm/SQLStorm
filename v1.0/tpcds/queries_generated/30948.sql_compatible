
WITH RECURSIVE customer_hierarchy AS (
    SELECT c.c_customer_sk, c.c_first_name, c.c_last_name, c.c_current_cdemo_sk, 
           NULL AS parent_customer_sk
    FROM customer c
    WHERE c.c_current_cdemo_sk IS NOT NULL
    UNION ALL
    SELECT c.c_customer_sk, c.c_first_name, c.c_last_name, c.c_current_cdemo_sk, 
           ch.c_customer_sk
    FROM customer_hierarchy ch
    JOIN customer c ON ch.c_current_cdemo_sk = c.c_current_cdemo_sk
)
SELECT ca.ca_city, ca.ca_state, 
       COUNT(DISTINCT c.c_customer_sk) AS total_customers, 
       AVG(cd.cd_purchase_estimate) AS avg_purchase_estimate,
       SUM(ws.ws_sales_price) - SUM(ws.ws_ext_discount_amt) AS total_sales,
       ROW_NUMBER() OVER (PARTITION BY ca.ca_state ORDER BY SUM(ws.ws_sales_price) DESC) AS sales_rank
FROM customer_address ca
LEFT JOIN customer c ON ca.ca_address_sk = c.c_current_addr_sk
LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_ship_customer_sk
WHERE ca.ca_state IS NOT NULL
  AND (ws.ws_sales_price IS NOT NULL OR ws.ws_sales_price IS NOT NULL)
  AND EXTRACT(YEAR FROM d.d_date) = (SELECT MAX(d.d_year) 
                                      FROM date_dim d 
                                      WHERE d.d_current_year = 'Y')
GROUP BY ca.ca_city, ca.ca_state
HAVING COUNT(DISTINCT c.c_customer_sk) > 0
ORDER BY total_sales DESC
LIMIT 10;
