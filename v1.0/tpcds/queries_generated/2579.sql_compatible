
WITH RankedReturns AS (
    SELECT
        sr.customer_sk,
        sr.returned_date_sk,
        sr.return_time_sk,
        sr.return_quantity,
        sr.return_amt,
        ROW_NUMBER() OVER (PARTITION BY sr.customer_sk ORDER BY sr.returned_date_sk DESC) AS rn
    FROM
        store_returns sr
),
TopReturns AS (
    SELECT
        rr.customer_sk,
        rr.returned_date_sk,
        SUM(rr.return_quantity) AS total_returned_quantity,
        SUM(rr.return_amt) AS total_returned_amt
    FROM
        RankedReturns rr
    WHERE
        rr.rn <= 5
    GROUP BY 
        rr.customer_sk, rr.returned_date_sk
),
CustomerStats AS (
    SELECT
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        COALESCE(tr.total_returned_quantity, 0) AS total_returned_quantity,
        COALESCE(tr.total_returned_amt, 0) AS total_returned_amt
    FROM
        customer c
    LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN TopReturns tr ON c.c_customer_sk = tr.customer_sk
)
SELECT
    cs.c_customer_sk,
    cs.c_first_name,
    cs.c_last_name,
    cs.cd_gender,
    cs.cd_marital_status,
    SUM(CASE WHEN cs.total_returned_quantity > 0 THEN 1 ELSE 0 END) AS non_zero_return_count,
    AVG(CASE WHEN cs.total_returned_quantity > 0 THEN cs.total_returned_amt END) AS average_return_amt,
    COUNT(DISTINCT w.w_warehouse_sk) AS total_warehouses_used,
    MAX(w.w_warehouse_name) AS latest_warehouse_used
FROM
    CustomerStats cs
LEFT JOIN web_sales ws ON cs.c_customer_sk = ws.ws_ship_customer_sk
LEFT JOIN inventory i ON ws.ws_item_sk = i.inv_item_sk
LEFT JOIN warehouse w ON i.inv_warehouse_sk = w.w_warehouse_sk
GROUP BY
    cs.c_customer_sk, cs.c_first_name, cs.c_last_name, cs.cd_gender, cs.cd_marital_status
HAVING
    SUM(CASE WHEN cs.total_returned_quantity > 0 THEN 1 ELSE 0 END) > 0
ORDER BY
    cs.c_last_name ASC, cs.c_first_name ASC
FETCH FIRST 100 ROWS ONLY;
