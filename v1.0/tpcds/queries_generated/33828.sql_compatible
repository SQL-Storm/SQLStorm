
WITH RECURSIVE SalesSummary AS (
    SELECT 
        ws_item_sk,
        SUM(ws_quantity) AS total_quantity,
        SUM(ws_sales_price) AS total_sales
    FROM web_sales
    WHERE ws_sold_date_sk >= (SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = 2001) - 30 
    GROUP BY ws_item_sk
    UNION ALL
    SELECT 
        cs_item_sk,
        SUM(cs_quantity) AS total_quantity,
        SUM(cs_sales_price) AS total_sales
    FROM catalog_sales
    WHERE cs_sold_date_sk >= (SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = 2001) - 30
    GROUP BY cs_item_sk
),
CustomerDemographics AS (
    SELECT 
        cd_demo_sk,
        cd_gender,
        cd_marital_status,
        cd_income_band_sk,
        cd_purchase_estimate
    FROM customer_demographics
    WHERE cd_purchase_estimate > 10000
),
ItemDetails AS (
    SELECT 
        i_item_sk,
        i_item_desc,
        i_current_price,
        i_brand
    FROM item
    WHERE i_rec_start_date <= DATE '2002-10-01' AND (i_rec_end_date IS NULL OR i_rec_end_date >= DATE '2002-10-01')
),
SalesWithDemographics AS (
    SELECT 
        ss.ws_item_sk,
        SUM(COALESCE(ss.total_quantity, 0)) AS total_quantity,
        SUM(ss.total_sales) AS total_sales,
        cd.cd_gender,
        cd.cd_marital_status,
        id.i_item_desc,
        id.i_current_price,
        id.i_brand
    FROM SalesSummary ss
    LEFT JOIN CustomerDemographics cd 
        ON cd.cd_demo_sk = (SELECT c_current_cdemo_sk FROM customer WHERE c_customer_sk = ss.ws_item_sk) 
    LEFT JOIN ItemDetails id 
        ON id.i_item_sk = ss.ws_item_sk
    GROUP BY ss.ws_item_sk, cd.cd_gender, cd.cd_marital_status, id.i_item_desc, id.i_current_price, id.i_brand
)
SELECT 
    swd.cd_gender,
    swd.cd_marital_status,
    swd.i_item_desc,
    swd.i_brand,
    COUNT(*) AS number_of_sales,
    AVG(swd.total_sales) AS avg_sales,
    SUM(swd.total_quantity) AS total_quantity_sold,
    CASE 
        WHEN AVG(swd.total_sales) > 20000 THEN 'High Performer'
        ELSE 'Regular'
    END AS performance_category
FROM SalesWithDemographics swd
GROUP BY swd.cd_gender, swd.cd_marital_status, swd.i_item_desc, swd.i_brand
HAVING SUM(swd.total_quantity) > 500
ORDER BY total_quantity_sold DESC;
