
WITH RECURSIVE address_cte AS (
    SELECT ca_address_sk, ca_city, ca_state, ca_zip,
           CASE 
               WHEN ca_city IS NOT NULL THEN ca_city
               ELSE 'Unknown' 
           END AS city_label
    FROM customer_address
    UNION ALL
    SELECT ca_address_sk, CONCAT('CONCATENATED_', ca_city), ca_state, ca_zip
    FROM customer_address
    WHERE ca_zip IS NOT NULL
), filtered_sales AS (
    SELECT ws_item_sk, SUM(ws_quantity) AS total_quantity, 
           SUM(ws_net_profit) AS total_net_profit,
           ROW_NUMBER() OVER (PARTITION BY ws_item_sk ORDER BY SUM(ws_net_paid) DESC) AS rank
    FROM web_sales
    WHERE ws_net_paid > 0
    GROUP BY ws_item_sk
), high_profit_sales AS (
    SELECT ws.ws_item_sk, ws.ws_net_paid, fs.total_net_profit
    FROM web_sales ws
    JOIN filtered_sales fs ON ws.ws_item_sk = fs.ws_item_sk
    WHERE fs.rank = 1 AND fs.total_net_profit > 1000
), inventory_report AS (
    SELECT inv.inv_item_sk, SUM(inv.inv_quantity_on_hand) AS stock_count 
    FROM inventory inv
    GROUP BY inv.inv_item_sk 
)
SELECT ca.city_label, hs.ws_item_sk, hs.total_net_profit, ir.stock_count,
       CASE
           WHEN ir.stock_count < 10 AND hs.total_net_profit IS NOT NULL THEN 'LOW STOCK'
           WHEN ir.stock_count >= 10 THEN 'Sufficient Stock'
           ELSE 'Stock Unknown'
       END AS stock_status
FROM address_cte ca
LEFT OUTER JOIN high_profit_sales hs ON ca.ca_address_sk = hs.ws_item_sk
LEFT JOIN inventory_report ir ON hs.ws_item_sk = ir.inv_item_sk
WHERE ca.ca_state = 'NY'
AND (ir.stock_count IS NULL OR (ir.stock_count < 100 AND hs.total_net_profit > 500))
ORDER BY ca.city_label, hs.total_net_profit DESC;
