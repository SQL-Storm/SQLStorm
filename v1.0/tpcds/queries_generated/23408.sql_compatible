
WITH RankedSales AS (
    SELECT 
        ws.ws_item_sk, 
        ws.ws_order_number, 
        ws.ws_sales_price, 
        ws.ws_net_profit, 
        RANK() OVER (PARTITION BY ws.ws_item_sk ORDER BY ws.ws_net_profit DESC) AS profit_rank
    FROM web_sales ws
    WHERE ws.ws_sales_price IS NOT NULL AND ws.ws_net_profit > 0
),
StoreSalesSummary AS (
    SELECT 
        ss.s_store_sk,
        SUM(ss.ss_net_profit) AS total_net_profit,
        AVG(ss.ss_quantity) AS avg_quantity_sold,
        COUNT(DISTINCT ss.ss_ticket_number) AS unique_sales_count
    FROM store_sales ss
    WHERE ss.ss_sold_date_sk = (SELECT MAX(ss2.ss_sold_date_sk) FROM store_sales ss2)
    GROUP BY ss.s_store_sk
),
ItemReturnDetails AS (
    SELECT 
        sr.sr_item_sk,
        SUM(sr.sr_return_qty) AS total_returned,
        SUM(sr.sr_return_amt) AS total_return_amount,
        COUNT(sr.sr_ticket_number) AS return_transaction_count
    FROM store_returns sr
    WHERE sr.sr_return_quantity > 0
    GROUP BY sr.sr_item_sk
),
CustomerDemographics AS (
    SELECT 
        c.c_customer_sk, 
        cd.cd_gender, 
        cd.cd_marital_status, 
        COUNT(DISTINCT ws.ws_order_number) AS purchase_count
    FROM customer c
    LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN web_sales ws ON ws.ws_bill_customer_sk = c.c_customer_sk
    GROUP BY c.c_customer_sk, cd.cd_gender, cd.cd_marital_status
),
FinalReport AS (
    SELECT 
        cs.c_customer_sk,
        cs.cd_gender,
        cs.cd_marital_status,
        COALESCE(rs.ws_item_sk, -1) AS item_sk,
        COALESCE(rs.ws_order_number, -1) AS order_number,
        COALESCE(rs.ws_sales_price, 0) AS sales_price,
        COALESCE(rs.ws_net_profit, 0) AS net_profit,
        sss.total_net_profit,
        sss.avg_quantity_sold,
        sss.unique_sales_count,
        COALESCE(ir.total_returned, 0) AS total_returned,
        COALESCE(ir.total_return_amount, 0) AS total_return_amount,
        COALESCE(ir.return_transaction_count, 0) AS return_transaction_count
    FROM CustomerDemographics cs
    LEFT JOIN RankedSales rs ON cs.purchase_count > 5 AND (rs.profit_rank = 1 OR rs.ws_item_sk IS NULL)
    LEFT JOIN StoreSalesSummary sss ON sss.s_store_sk = 1 
    LEFT JOIN ItemReturnDetails ir ON ir.sr_item_sk = rs.ws_item_sk
)
SELECT 
    f.cd_gender,
    f.cd_marital_status,
    COUNT(*) AS customer_count,
    AVG(f.total_net_profit) AS avg_profit_per_customer,
    SUM(f.total_return_amount) AS total_return_amount,
    SUM(f.net_profit) AS total_net_profit
FROM FinalReport f
WHERE f.item_sk NOT IN (SELECT i.i_item_sk FROM item i WHERE i.i_current_price < (SELECT AVG(i2.i_current_price) FROM item i2))
GROUP BY f.cd_gender, f.cd_marital_status
HAVING SUM(f.net_profit) > 1000
ORDER BY f.cd_gender, f.cd_marital_status;
