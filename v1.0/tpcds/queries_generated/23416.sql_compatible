
WITH Ranked_Customers AS (
    SELECT 
        c.c_customer_sk, 
        c.c_first_name, 
        c.c_last_name, 
        cd.cd_gender, 
        ROW_NUMBER() OVER (PARTITION BY cd.cd_gender ORDER BY cd.cd_purchase_estimate DESC) AS rn
    FROM customer c 
    JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
), 
Sales_Data AS (
    SELECT 
        ws.ws_bill_customer_sk, 
        ws.ws_quantity, 
        ws.ws_ext_sales_price, 
        ws.ws_net_profit,
        DENSE_RANK() OVER (PARTITION BY ws.ws_bill_customer_sk ORDER BY ws.ws_net_profit DESC) AS profit_rank
    FROM web_sales ws
    WHERE ws.ws_sold_date_sk IN (SELECT d_date_sk FROM date_dim WHERE d_year = 2023)
), 
Combined_Sales AS (
    SELECT 
        rc.c_first_name, 
        rc.c_last_name, 
        COALESCE(sd.ws_quantity, 0) AS total_quantity, 
        COALESCE(sd.ws_net_profit, 0) AS total_profit
    FROM Ranked_Customers rc
    LEFT JOIN Sales_Data sd ON rc.c_customer_sk = sd.ws_bill_customer_sk
    WHERE rc.rn <= 10
), 
Final_Results AS (
    SELECT 
        c.c_first_name, 
        c.c_last_name, 
        SUM(cs.cs_quantity) AS catalog_quantity, 
        SUM(cs.cs_ext_sales_price) AS catalog_sales,
        SUM(ss.ss_quantity) AS store_quantity, 
        SUM(ss.ss_ext_sales_price) AS store_sales,
        SUM(ws.ws_quantity) AS web_quantity, 
        SUM(ws.ws_ext_sales_price) AS web_sales,
        c.c_customer_sk
    FROM Combined_Sales c 
    LEFT JOIN catalog_sales cs ON cs.cs_bill_customer_sk = c.c_customer_sk 
    LEFT JOIN store_sales ss ON ss.ss_customer_sk = c.c_customer_sk 
    LEFT JOIN web_sales ws ON ws.ws_bill_customer_sk = c.c_customer_sk 
    GROUP BY c.c_first_name, c.c_last_name, c.c_customer_sk
)
SELECT 
    f.c_first_name, 
    f.c_last_name, 
    (f.catalog_sales + f.store_sales + f.web_sales) AS total_sales,
    CASE 
        WHEN (f.catalog_quantity + f.store_quantity + f.web_quantity) = 0 THEN NULL 
        ELSE (f.catalog_sales + f.store_sales + f.web_sales) / (f.catalog_quantity + f.store_quantity + f.web_quantity)
    END AS avg_sale_per_item
FROM Final_Results f
WHERE EXISTS (
    SELECT 1 
    FROM customer c 
    WHERE c.c_customer_sk = f.c_customer_sk 
    AND c.c_birth_month BETWEEN 1 AND 3
)
ORDER BY total_sales DESC 
FETCH FIRST 5 ROWS ONLY;
