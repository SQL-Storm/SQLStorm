
WITH RECURSIVE SalesCTE AS (
    SELECT 
        ws_sold_date_sk, 
        ws_item_sk, 
        SUM(ws_sales_price) AS total_sales,
        COUNT(ws_order_number) AS order_count
    FROM 
        web_sales
    WHERE 
        ws_sold_date_sk BETWEEN 20200101 AND 20211231
    GROUP BY 
        ws_sold_date_sk, ws_item_sk
    UNION ALL
    SELECT 
        cs_sold_date_sk, 
        cs_item_sk, 
        SUM(cs_sales_price) AS total_sales,
        COUNT(cs_order_number) AS order_count
    FROM 
        catalog_sales
    WHERE 
        cs_sold_date_sk BETWEEN 20200101 AND 20211231
    GROUP BY 
        cs_sold_date_sk, cs_item_sk
),
ItemSales AS (
    SELECT 
        item.i_item_id, 
        item.i_item_desc,
        COALESCE(SUM(cte.total_sales), 0) AS total_sales,
        COALESCE(SUM(cte.order_count), 0) AS order_count
    FROM 
        item 
    LEFT JOIN SalesCTE cte
    ON item.i_item_sk = cte.ws_item_sk OR item.i_item_sk = cte.cs_item_sk
    GROUP BY 
        item.i_item_id, item.i_item_desc
),
CustomerReturns AS (
    SELECT 
        cr_item_sk, 
        SUM(cr_return_quantity) AS total_returns
    FROM 
        catalog_returns
    WHERE 
        cr_returned_date_sk BETWEEN 20200101 AND 20211231
    GROUP BY 
        cr_item_sk
),
SalesReturns AS (
    SELECT 
        is.i_item_id, 
        is.i_item_desc,
        COALESCE(is.total_sales, 0) AS total_sales,
        COALESCE(is.order_count, 0) AS order_count,
        COALESCE(cr.total_returns, 0) AS total_returns,
        (COALESCE(is.total_sales, 0) - COALESCE(cr.total_returns, 0)) AS net_sales
    FROM 
        ItemSales is
    LEFT JOIN CustomerReturns cr
    ON is.i_item_id = cr.cr_item_sk
)
SELECT 
    sr.i_item_id,
    sr.i_item_desc,
    sr.total_sales,
    sr.order_count,
    sr.total_returns,
    sr.net_sales,
    CASE 
        WHEN sr.net_sales < 0 THEN 'Negative Sales'
        WHEN sr.total_sales = 0 THEN 'No Sales'
        ELSE 'Positive Sales'
    END AS sales_status,
    ROW_NUMBER() OVER (PARTITION BY 
        CASE 
            WHEN sr.net_sales < 0 THEN 'Negative Sales'
            WHEN sr.total_sales = 0 THEN 'No Sales'
            ELSE 'Positive Sales'
        END 
        ORDER BY sr.net_sales DESC) AS row_num
FROM 
    SalesReturns sr
WHERE 
    sr.net_sales IS NOT NULL
ORDER BY 
    sales_status, net_sales DESC;
