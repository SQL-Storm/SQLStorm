
WITH customer_sales AS (
    SELECT 
        c.c_customer_id,
        SUM(ws.ws_sales_price) AS total_sales,
        COUNT(ws.ws_order_number) AS total_orders,
        AVG(ws.ws_sales_price) AS avg_order_value
    FROM 
        customer AS c
    JOIN 
        web_sales AS ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    JOIN 
        date_dim AS d ON ws.ws_sold_date_sk = d.d_date_sk
    WHERE 
        d.d_year = 2023
    GROUP BY 
        c.c_customer_id
), 
income_analysis AS (
    SELECT 
        cd.cd_income_band_sk,
        COUNT(DISTINCT cs.c_customer_id) AS unique_customers,
        SUM(cs.total_sales) AS total_income
    FROM 
        customer_demographics AS cd
    JOIN 
        customer_sales AS cs ON cd.cd_demo_sk = cs.c_customer_id
    GROUP BY 
        cd.cd_income_band_sk
),
promotion_performance AS (
    SELECT 
        p.p_promo_id,
        COUNT(DISTINCT ws.ws_order_number) AS total_orders_with_promotion,
        SUM(ws.ws_net_profit) AS total_profit
    FROM 
        promotion AS p
    JOIN 
        web_sales AS ws ON p.p_promo_sk = ws.ws_promo_sk
    WHERE 
        ws.ws_ship_date_sk IS NOT NULL
    GROUP BY 
        p.p_promo_id
)
SELECT 
    ia.cd_income_band_sk,
    ia.unique_customers,
    ia.total_income,
    pp.total_orders_with_promotion,
    pp.total_profit,
    CASE 
        WHEN ia.total_income > 100000 THEN 'High'
        WHEN ia.total_income BETWEEN 50000 AND 100000 THEN 'Medium'
        ELSE 'Low'
    END AS income_segment
FROM 
    income_analysis AS ia
LEFT JOIN 
    promotion_performance AS pp ON ia.cd_income_band_sk = pp.p_promo_id
ORDER BY 
    ia.total_income DESC;
