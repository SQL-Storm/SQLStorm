
WITH sales_summary AS (
    SELECT 
        ws.ws_item_sk,
        ws.ws_order_number,
        ws.ws_sales_price,
        ws.ws_net_profit,
        ROW_NUMBER() OVER (PARTITION BY ws.ws_item_sk ORDER BY ws.ws_order_number DESC) AS rn
    FROM web_sales ws
    WHERE ws.ws_sales_price > 100
),
customer_info AS (
    SELECT 
        c.c_customer_sk,
        cd.cd_gender,
        d.d_year,
        COUNT(ss.ss_ticket_number) AS total_sales,
        SUM(ss.ss_net_profit) AS profit
    FROM customer c
    JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    JOIN date_dim d ON ss.ss_sold_date_sk = d.d_date_sk
    WHERE cd.cd_marital_status = 'M'
    GROUP BY c.c_customer_sk, cd.cd_gender, d.d_year
),
profit_analysis AS (
    SELECT 
        ci.c_customer_sk,
        ci.cd_gender,
        ci.d_year,
        COALESCE(ci.total_sales, 0) AS total_sales,
        COALESCE(ci.profit, 0) AS total_profit,
        CASE 
            WHEN COALESCE(ci.total_sales, 0) > 100 THEN 'High'
            WHEN COALESCE(ci.total_sales, 0) BETWEEN 50 AND 100 THEN 'Medium'
            ELSE 'Low' 
        END AS sales_category
    FROM customer_info ci
    RIGHT JOIN customer c ON ci.c_customer_sk = c.c_customer_sk
)
SELECT 
    p.c_customer_sk,
    p.cd_gender,
    p.d_year,
    p.total_sales,
    p.total_profit,
    p.sales_category,
    SUM(i.i_current_price) AS total_inventory_value
FROM profit_analysis p
LEFT JOIN inventory i ON i.inv_item_sk IN (SELECT DISTINCT ws.ws_item_sk FROM sales_summary ws WHERE ws.rn = 1)
GROUP BY p.c_customer_sk, p.cd_gender, p.d_year, p.total_sales, p.total_profit, p.sales_category
HAVING SUM(i.i_current_price) IS NOT NULL AND p.total_profit > 0
ORDER BY p.total_profit DESC;
