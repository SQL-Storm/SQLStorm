
WITH RankedSales AS (
    SELECT 
        c.c_customer_id, 
        c.c_first_name, 
        c.c_last_name,
        s.ss_sold_date_sk,
        SUM(s.ss_net_paid) AS total_sales,
        RANK() OVER (PARTITION BY c.c_customer_id ORDER BY SUM(s.ss_net_paid) DESC) AS rnk
    FROM 
        customer c
    JOIN 
        store_sales s ON c.c_customer_sk = s.ss_customer_sk
    GROUP BY 
        c.c_customer_id, c.c_first_name, c.c_last_name, s.ss_sold_date_sk
),
TopSales AS (
    SELECT 
        c_customer_id AS customer_id, 
        c_first_name, 
        c_last_name, 
        total_sales
    FROM 
        RankedSales 
    WHERE 
        rnk = 1
)
SELECT 
    ts.customer_id, 
    ts.c_first_name || ' ' || ts.c_last_name AS full_name,
    COALESCE((
        SELECT 
            SUM(cr.cr_return_amount)
        FROM 
            catalog_returns cr
        WHERE 
            cr.cr_returning_customer_sk = c.c_customer_sk
    ), 0) AS total_catalog_returns,
    CASE 
        WHEN ts.total_sales > 1000 THEN 'High Value'
        WHEN ts.total_sales > 500 THEN 'Medium Value'
        ELSE 'Low Value'
    END AS customer_value_category
FROM 
    TopSales ts
JOIN 
    customer c ON c.c_customer_id = ts.customer_id
LEFT JOIN 
    warehouse w ON (ts.customer_value_category = 'High Value' AND w.w_warehouse_id IS NOT NULL)
    OR (ts.customer_value_category != 'High Value' AND w.w_warehouse_id IS NULL)
ORDER BY 
    customer_value_category DESC,
    total_catalog_returns DESC
LIMIT 10;
