WITH RECURSIVE CustomerHierarchy AS (
    SELECT 
        c.c_customer_sk, 
        c.c_first_name, 
        c.c_last_name, 
        cd.cd_marital_status, 
        cd.cd_gender, 
        cd.cd_purchase_estimate,
        0 AS level
    FROM customer c
    JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    WHERE cd.cd_marital_status = 'M'
    
    UNION ALL
    
    SELECT 
        c.c_customer_sk, 
        c.c_first_name, 
        c.c_last_name, 
        cd.cd_marital_status, 
        cd.cd_gender, 
        cd.cd_purchase_estimate,
        ch.level + 1
    FROM customer c
    JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    JOIN CustomerHierarchy ch ON ch.c_customer_sk = c.c_customer_sk
)
SELECT 
    addr.ca_city,
    COUNT(DISTINCT ch.c_customer_sk) AS total_customers,
    AVG(ch.cd_purchase_estimate) AS avg_purchase_estimate,
    SUM(CASE WHEN ch.cd_gender = 'F' THEN 1 ELSE 0 END) AS female_count,
    SUM(CASE WHEN ch.cd_gender = 'M' THEN 1 ELSE 0 END) AS male_count,
    SUM(CASE WHEN ch.cd_gender IS NULL THEN 1 ELSE 0 END) AS unknown_gender_count,
    ROUND(AVG(ch.cd_purchase_estimate) * 1.1, 2) AS inflated_avg_purchase_estimate
FROM CustomerHierarchy ch
LEFT JOIN customer_address addr ON addr.ca_address_sk = ch.c_current_addr_sk
WHERE addr.ca_state = 'CA'
GROUP BY addr.ca_city
HAVING COUNT(DISTINCT ch.c_customer_sk) > 10
ORDER BY total_customers DESC
LIMIT 5;