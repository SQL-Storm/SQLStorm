
WITH CustomerReturns AS (
    SELECT 
        wr.refunded_customer_sk,
        SUM(wr.return_quantity) AS total_returned_quantity,
        SUM(wr.return_amt) AS total_return_amount,
        COUNT(DISTINCT wr.return_order_number) AS total_returns
    FROM 
        web_returns wr
    GROUP BY 
        wr.refunded_customer_sk
),
SalesInfo AS (
    SELECT 
        ws.bill_customer_sk,
        SUM(ws.ws_quantity) AS total_sold_quantity,
        SUM(ws.ws_net_paid_inc_tax) AS total_sales
    FROM 
        web_sales ws
    GROUP BY 
        ws.bill_customer_sk
),
CombinedInfo AS (
    SELECT 
        c.c_customer_sk,
        COALESCE(cr.total_returned_quantity, 0) AS total_returned_quantity,
        COALESCE(cr.total_return_amount, 0) AS total_return_amount,
        COALESCE(si.total_sold_quantity, 0) AS total_sold_quantity,
        COALESCE(si.total_sales, 0) AS total_sales
    FROM 
        customer c
    LEFT JOIN 
        CustomerReturns cr ON c.c_customer_sk = cr.refunded_customer_sk
    LEFT JOIN 
        SalesInfo si ON c.c_customer_sk = si.bill_customer_sk
)
SELECT 
    cb.c_customer_sk,
    cb.total_returned_quantity,
    cb.total_return_amount,
    cb.total_sold_quantity,
    cb.total_sales,
    CASE 
        WHEN cb.total_sales > 0 THEN ROUND(cb.total_return_amount / cb.total_sales * 100, 2)
        ELSE NULL 
    END AS return_percentage,
    ROW_NUMBER() OVER (ORDER BY cb.total_sold_quantity DESC) AS sales_rank
FROM 
    CombinedInfo cb
WHERE 
    cb.total_returned_quantity > 0 OR cb.total_sales > 0
ORDER BY 
    return_percentage DESC
FETCH FIRST 10 ROWS ONLY;
