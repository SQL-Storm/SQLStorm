
WITH RECURSIVE sales_data AS (
    SELECT 
        cs_item_sk,
        cs_order_number,
        SUM(cs_ext_sales_price) AS total_sales,
        COUNT(*) AS order_count
    FROM 
        catalog_sales
    GROUP BY 
        cs_item_sk, cs_order_number
),
customer_info AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_purchase_estimate,
        ROW_NUMBER() OVER (PARTITION BY c.c_customer_sk ORDER BY cd.cd_purchase_estimate DESC) AS rn
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
),
item_info AS (
    SELECT 
        i.i_item_sk,
        i.i_item_id,
        i.i_current_price,
        CASE WHEN i.i_current_price IS NULL THEN 0 ELSE i.i_current_price END AS adjusted_price
    FROM 
        item i
    WHERE 
        i.i_rec_start_date <= DATE '2002-10-01' AND (i.i_rec_end_date IS NULL OR i.i_rec_end_date >= DATE '2002-10-01')
),
daily_sales AS (
    SELECT 
        d.d_date,
        SUM(ws_ext_sales_price) AS daily_revenue,
        COUNT(ws_order_number) AS order_count,
        SUM(ws_ext_discount_amt) AS total_discount
    FROM 
        web_sales 
    JOIN 
        date_dim d ON d.d_date_sk = ws_sold_date_sk
    GROUP BY 
        d.d_date
),
ranked_sales AS (
    SELECT 
        ds.d_date,
        ds.daily_revenue,
        ds.order_count,
        ds.total_discount,
        RANK() OVER (ORDER BY ds.daily_revenue DESC) AS revenue_rank
    FROM 
        daily_sales ds
)
SELECT 
    ci.c_first_name,
    ci.c_last_name,
    si.i_item_id,
    SUM(sd.total_sales) AS total_item_sales,
    di.daily_revenue,
    di.order_count,
    di.total_discount,
    CASE 
        WHEN di.daily_revenue > 10000 THEN 'High Revenue'
        WHEN di.daily_revenue BETWEEN 5000 AND 10000 THEN 'Medium Revenue'
        ELSE 'Low Revenue'
    END AS revenue_category
FROM 
    sales_data sd
JOIN 
    customer_info ci ON ci.rn = 1 
LEFT JOIN 
    item_info si ON sd.cs_item_sk = si.i_item_sk
JOIN 
    ranked_sales di ON di.revenue_rank <= 5
WHERE 
    sd.total_sales > 0
GROUP BY 
    ci.c_first_name, ci.c_last_name, si.i_item_id, di.daily_revenue, di.order_count, di.total_discount
HAVING 
    SUM(sd.total_sales) > 500
ORDER BY 
    ci.c_last_name, di.daily_revenue DESC;
