
WITH CustomerReturns AS (
    SELECT 
        c.c_customer_sk, 
        COUNT(DISTINCT sr_ticket_number) AS total_store_returns,
        SUM(sr_return_qty) AS total_return_quantity
    FROM 
        customer c 
    LEFT JOIN 
        store_returns sr ON c.c_customer_sk = sr.sr_customer_sk
    GROUP BY 
        c.c_customer_sk
),
WebReturns AS (
    SELECT 
        wr_returning_customer_sk AS customer_sk,
        COUNT(DISTINCT wr_order_number) AS total_web_returns,
        SUM(wr_return_quantity) AS total_web_return_quantity
    FROM 
        web_returns 
    GROUP BY 
        wr_returning_customer_sk
),
ReturnSummary AS (
    SELECT 
        COALESCE(cr.c_customer_sk, wr.customer_sk) AS customer_sk,
        COALESCE(cr.total_store_returns, 0) AS total_store_returns,
        COALESCE(wr.total_web_returns, 0) AS total_web_returns,
        (COALESCE(cr.total_store_returns, 0) + COALESCE(wr.total_web_returns, 0)) AS total_returns
    FROM 
        CustomerReturns cr
    FULL OUTER JOIN 
        WebReturns wr ON cr.c_customer_sk = wr.customer_sk
),
CustomerDetails AS (
    SELECT 
        c.c_customer_sk, 
        c.c_first_name, 
        c.c_last_name, 
        cd.cd_gender, 
        cd.cd_marital_status,
        CASE 
            WHEN cd.cd_eduband IS NULL OR cd.cd_eduband <> 'Graduate' THEN 'Non-Graduate' 
            ELSE 'Graduate' 
        END AS education_status,
        CASE
            WHEN COALESCE(rs.total_returns, 0) > 5 THEN 'High Return' 
            ELSE 'Low Return' 
        END AS return_category
    FROM 
        customer c
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN 
        ReturnSummary rs ON c.c_customer_sk = rs.customer_sk
)
SELECT 
    cd.c_first_name, 
    cd.c_last_name, 
    cd.cd_gender, 
    cd.education_status,
    cd.return_category,
    RANK() OVER (PARTITION BY cd.return_category ORDER BY cd.c_last_name) AS rank_within_category
FROM 
    CustomerDetails cd
WHERE 
    cd.cd_gender IN ('M', 'F') AND 
    (cd.return_category = 'High Return' OR cd.return_category IS NULL)
ORDER BY 
    cd.return_category, rank_within_category;
