
WITH RankedSales AS (
    SELECT 
        ws.ws_order_number,
        ws.ws_item_sk,
        ws.ws_quantity,
        ws.ws_sales_price,
        ws.ws_net_profit,
        RANK() OVER (PARTITION BY ws.ws_item_sk ORDER BY ws.ws_net_profit DESC) AS rank,
        c.c_first_name,
        c.c_last_name,
        ca.ca_city,
        ca.ca_state
    FROM 
        web_sales ws
    JOIN 
        customer c ON ws.ws_bill_customer_sk = c.c_customer_sk
    JOIN 
        customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
    WHERE 
        ws.ws_sold_date_sk IN (SELECT d.d_date_sk FROM date_dim d WHERE d.d_year = 2023)
),
TopSales AS (
    SELECT 
        rs.ws_order_number,
        rs.ws_item_sk,
        rs.ws_quantity,
        rs.ws_sales_price,
        rs.ws_net_profit,
        rs.c_first_name,
        rs.c_last_name,
        rs.ca_city,
        rs.ca_state
    FROM 
        RankedSales rs
    WHERE 
        rs.rank = 1
)
SELECT 
    t.ws_order_number,
    t.ws_item_sk,
    t.ws_quantity,
    t.ws_sales_price,
    t.ws_net_profit,
    CONCAT(t.c_first_name, ' ', t.c_last_name) AS customer_name,
    t.ca_city,
    t.ca_state,
    (SELECT COUNT(*) FROM store_sales ss WHERE ss.ss_item_sk = t.ws_item_sk) AS total_store_sales,
    (SELECT AVG(ss_ss.net_profit) 
     FROM store_sales ss_ss 
     WHERE ss_ss.ss_item_sk = t.ws_item_sk) AS avg_store_net_profit,
    CASE 
        WHEN MAX(t.ws_sales_price) IS NULL THEN 'No Sales'
        ELSE 'Sales Exists'
    END AS sales_status
FROM 
    TopSales t
LEFT JOIN 
    store_returns sr ON t.ws_order_number = sr.sr_ticket_number AND t.ws_item_sk = sr.sr_item_sk
GROUP BY 
    t.ws_order_number, 
    t.ws_item_sk, 
    t.ws_quantity, 
    t.ws_sales_price, 
    t.ws_net_profit, 
    t.c_first_name, 
    t.c_last_name, 
    t.ca_city, 
    t.ca_state
ORDER BY 
    t.ws_net_profit DESC
LIMIT 100;
