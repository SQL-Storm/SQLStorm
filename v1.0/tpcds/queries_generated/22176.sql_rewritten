WITH RankedSales AS (
    SELECT 
        ws.web_site_id,
        ws_sold_date_sk,
        ws_item_sk,
        ws_quantity,
        ws_net_paid,
        RANK() OVER (PARTITION BY ws.web_site_id ORDER BY ws_net_paid DESC) AS sales_rank,
        DATEADD(day, -1 * ROW_NUMBER() OVER (PARTITION BY ws.web_site_id ORDER BY ws_sold_date_sk DESC), cast('2002-10-01' as date)) AS sales_reporting_date
    FROM 
        web_sales ws
    JOIN 
        web_site w ON ws.ws_web_site_sk = w.web_site_sk
    WHERE 
        ws_sold_date_sk > (SELECT MAX(d_date_sk) - 30 FROM date_dim) 
    AND 
        w.web_open_date_sk IS NOT NULL
),
CustomerSummary AS (
    SELECT 
        c.c_customer_id,
        COUNT(DISTINCT ws.ws_order_number) AS total_orders,
        SUM(ws.ws_net_paid) AS total_spent,
        AVG(ws.ws_net_paid) AS avg_order_value,
        MAX(ws.ws_net_paid) AS max_order_value
    FROM 
        customer c
    LEFT JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY 
        c.c_customer_id
),
ReturnCalculations AS (
    SELECT 
        cr_refunded_customer_sk,
        SUM(cr_return_amount) AS total_return_amount,
        COUNT(cr_order_number) AS return_count
    FROM 
        catalog_returns
    GROUP BY 
        cr_refunded_customer_sk
    HAVING 
        SUM(cr_return_amount) > 0
),
FinalReport AS (
    SELECT 
        cs.c_customer_id,
        rs.web_site_id,
        cs.total_orders,
        cs.total_spent,
        rc.total_return_amount,
        rc.return_count,
        CASE 
            WHEN cs.total_spent IS NULL THEN 'No Purchases'
            WHEN rc.return_count > 5 THEN 'High Return Customer'
            ELSE 'Regular Customer'
        END AS customer_classification,
        rs.sales_reporting_date
    FROM 
        CustomerSummary cs
    LEFT JOIN 
        ReturnCalculations rc ON cs.c_customer_id = rc.cr_refunded_customer_sk
    JOIN 
        RankedSales rs ON cs.total_orders > 0
)
SELECT 
    *,
    CASE 
        WHEN total_orders IS NULL THEN 'No Orders'
        WHEN total_spent / NULLIF(total_orders, 0) > 100 THEN 'High Value Customer'
        ELSE 'Standard Customer'
    END AS customer_value_classification
FROM 
    FinalReport
ORDER BY 
    sales_reporting_date DESC, 
    total_spent DESC
LIMIT 100;