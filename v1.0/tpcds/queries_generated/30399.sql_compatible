
WITH RECURSIVE sales_data AS (
    SELECT 
        ss.ss_item_sk,
        SUM(ss.ss_quantity) AS total_quantity,
        SUM(ss.ss_net_paid) AS total_net_paid,
        DENSE_RANK() OVER (PARTITION BY ss.ss_item_sk ORDER BY SUM(ss.ss_net_paid) DESC) AS rank
    FROM store_sales ss
    WHERE ss.ss_sold_date_sk >= 2450000 
    GROUP BY ss.ss_item_sk
),
customer_info AS (
    SELECT 
        c.c_customer_sk,
        cd.cd_gender,
        cd.cd_marital_status,
        hd.hd_income_band_sk,
        ROW_NUMBER() OVER (PARTITION BY cd.cd_gender, cd.cd_marital_status ORDER BY c.c_customer_sk) AS row_num
    FROM customer c
    JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN household_demographics hd ON c.c_customer_sk = hd.hd_demo_sk
),
sales_report AS (
    SELECT 
        s.ss_sold_date_sk,
        s.ss_item_sk,
        s.total_quantity,
        s.total_net_paid,
        ci.cd_gender,
        ci.cd_marital_status,
        ci.hd_income_band_sk
    FROM sales_data s
    JOIN customer_info ci ON ci.row_num <= 5
)
SELECT 
    dr.d_date,
    COUNT(DISTINCT sr.ss_item_sk) AS unique_items_sold,
    SUM(sr.total_net_paid) AS total_sales,
    AVG(sr.total_quantity) AS average_quantity_per_item,
    ci.cd_gender,
    ci.hd_income_band_sk
FROM sales_report sr
JOIN date_dim dr ON sr.ss_sold_date_sk = dr.d_date_sk
JOIN customer_info ci ON sr.ss_item_sk = ci.c_customer_sk 
WHERE ci.hd_income_band_sk IS NOT NULL
GROUP BY dr.d_date, ci.cd_gender, ci.hd_income_band_sk
ORDER BY dr.d_date, total_sales DESC
FETCH FIRST 100 ROWS ONLY;
