
WITH RankedSales AS (
    SELECT 
        ws.web_site_sk,
        ws.web_sales_price,
        ws.ws_order_number,
        ROW_NUMBER() OVER (PARTITION BY ws.web_site_sk ORDER BY ws.ws_net_profit DESC) AS SaleRank
    FROM 
        web_sales ws
    JOIN 
        customer c ON ws.ws_bill_customer_sk = c.c_customer_sk
    WHERE 
        c.c_birth_year BETWEEN 1980 AND 1995
        AND ws.ws_sales_price IS NOT NULL
),
CustomerReturns AS (
    SELECT 
        wr_returned_date_sk,
        wr_item_sk,
        COUNT(*) AS total_returns,
        SUM(wr_return_amt) AS total_return_amount
    FROM 
        web_returns
    GROUP BY 
        wr_returned_date_sk, wr_item_sk
),
TopItems AS (
    SELECT 
        ir.i_item_id,
        ir.i_item_desc,
        COALESCE(SR.total_returns, 0) AS total_returns,
        COALESCE(SR.total_return_amount, 0.00) AS total_return_amount,
        R.web_sales_price
    FROM 
        item ir
    LEFT JOIN 
        CustomerReturns SR ON ir.i_item_sk = SR.wr_item_sk
    JOIN 
        RankedSales R ON R.ws_order_number IN (
            SELECT ws_order_number 
            FROM RankedSales
            WHERE SaleRank <= 5
        )
)
SELECT 
    T.i_item_id, 
    T.i_item_desc,
    SUM(ws.web_sales_price) AS total_sales,
    AVG(T.total_return_amount) AS avg_return_amount,
    COUNT(T.total_returns) AS return_count,
    STRING_AGG(DISTINCT CONCAT(c.c_first_name, ' ', c.c_last_name) ORDER BY c.c_last_name) AS customers_involved
FROM 
    TopItems T
JOIN 
    web_sales ws ON ws.ws_item_sk = T.i_item_sk
JOIN 
    customer c ON ws.ws_bill_customer_sk = c.c_customer_sk
WHERE 
    T.total_returns > 0 OR T.total_return_amount > 100.00
GROUP BY 
    T.i_item_id, T.i_item_desc
ORDER BY 
    total_sales DESC
LIMIT 10;
