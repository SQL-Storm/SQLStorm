
WITH ranked_sales AS (
    SELECT 
        ws.ws_item_sk,
        ws.ws_order_number,
        ws.ws_sales_price,
        ws.ws_quantity,
        RANK() OVER (PARTITION BY ws.ws_item_sk ORDER BY ws.ws_sales_price DESC) AS price_rank
    FROM 
        web_sales ws
    WHERE 
        ws.ws_sales_price IS NOT NULL
),
customer_return_analysis AS (
    SELECT 
        cr.refunded_customer_sk,
        SUM(cr.cr_return_amount) AS total_refunded_amount,
        COUNT(cr.cr_returning_customer_sk) AS total_returns
    FROM 
        catalog_returns cr
    WHERE 
        cr.cr_return_quantity > 0
    GROUP BY 
        cr.refunded_customer_sk
),
total_income_band AS (
    SELECT 
        hd.hd_income_band_sk,
        SUM(hd.hd_dep_count) AS total_dep_count
    FROM 
        household_demographics hd
    GROUP BY 
        hd.hd_income_band_sk
)
SELECT 
    c.c_customer_id,
    c.c_first_name,
    c.c_last_name,
    COALESCE(ra.total_refunded_amount, 0) AS total_returned_amount,
    COALESCE(ra.total_returns, 0) AS return_count,
    COALESCE(b.total_dep_count, 0) AS total_dependency_count,
    CONCAT(c.c_first_name, ' ', c.c_last_name) AS full_name,
    CASE 
        WHEN COALESCE(b.total_dep_count, 0) >= 3 THEN 'High Dependency'
        WHEN COALESCE(b.total_dep_count, 0) = 2 THEN 'Moderate Dependency'
        ELSE 'Low Dependency'
    END AS dependency_status
FROM 
    customer c 
LEFT JOIN 
    customer_return_analysis ra ON c.c_customer_sk = ra.refunded_customer_sk
LEFT JOIN 
    total_income_band b ON c.c_current_hdemo_sk = b.hd_income_band_sk
WHERE 
    EXISTS (
        SELECT 1 
        FROM ranked_sales rs 
        WHERE rs.ws_item_sk IN (SELECT i.i_item_sk FROM item i WHERE i.i_current_price > 20)
        AND c.c_customer_sk IN (SELECT ws.ws_bill_customer_sk FROM web_sales ws WHERE ws.ws_quantity > 5)
    )
ORDER BY 
    total_returned_amount DESC, 
    dependency_status;
