WITH customer_summary AS (
    SELECT 
        c.c_customer_id,
        COALESCE(c.c_first_name || ' ' || c.c_last_name, 'Unknown') AS full_name,
        cd.cd_gender,
        cd.cd_marital_status,
        MAX(cd.cd_purchase_estimate) AS max_purchase_estimate,
        SUM(COALESCE(cd.cd_dep_count, 0)) AS total_dependencies,
        DENSE_RANK() OVER (PARTITION BY cd.cd_gender ORDER BY MAX(cd.cd_purchase_estimate) DESC) AS purchase_rank
    FROM 
        customer c
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    GROUP BY 
        c.c_customer_id, c.c_first_name, c.c_last_name, cd.cd_gender, cd.cd_marital_status
),
item_performance AS (
    SELECT 
        i.i_item_id,
        (SUM(ws.ws_quantity) / NULLIF(COUNT(DISTINCT ws.ws_order_number), 0)) AS avg_sales_quantity,
        (SUM(ws.ws_ext_sales_price) / NULLIF(SUM(ws.ws_quantity), 0)) AS avg_sales_price,
        RANK() OVER (ORDER BY SUM(ws.ws_quantity) DESC) AS sales_rank
    FROM 
        item i
    JOIN 
        web_sales ws ON i.i_item_sk = ws.ws_item_sk
    WHERE 
        i.i_rec_start_date <= cast('2002-10-01' as date) AND (i.i_rec_end_date IS NULL OR i.i_rec_end_date >= cast('2002-10-01' as date))
    GROUP BY 
        i.i_item_id
),
return_summary AS (
    SELECT 
        sr.returned_date,
        COUNT(*) AS total_returns,
        SUM(sr.return_amt) AS total_returned_amount,
        COUNT(DISTINCT sr.returning_customer_sk) AS unique_returning_customers
    FROM (
        SELECT 
            cr_returned_date_sk AS returned_date,
            cr_return_amount AS return_amt,
            cr_returning_customer_sk
        FROM 
            catalog_returns
        UNION ALL
        SELECT 
            wr_returned_date_sk AS returned_date,
            wr_return_amt AS return_amt,
            wr_returning_customer_sk
        FROM 
            web_returns
    ) AS sr
    GROUP BY 
        returned_date
)
SELECT 
    cs.full_name,
    cs.max_purchase_estimate,
    cs.purchase_rank,
    ip.average_sales_quantity,
    ip.avg_sales_price,
    rs.total_returns,
    rs.total_returned_amount,
    COALESCE(rs.unique_returning_customers, 0) AS unique_returning_customers
FROM 
    customer_summary cs
LEFT JOIN 
    item_performance ip ON cs.c_customer_id = ip.i_item_id /* Assuming customer_id maps to item_id for the purpose of this example */
LEFT JOIN 
    return_summary rs ON rs.returned_date = cast('2002-10-01' as date)
WHERE 
    cs.purchase_rank <= 10
ORDER BY 
    cs.max_purchase_estimate DESC NULLS LAST
FETCH FIRST 100 ROWS ONLY;