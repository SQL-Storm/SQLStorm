
WITH SalesData AS (
    SELECT 
        w.warehouse_name,
        SUM(ws.ws_sales_price) AS total_sales,
        COUNT(DISTINCT ws.ws_order_number) AS order_count,
        AVG(ws.ws_quantity) AS average_quantity
    FROM 
        web_sales ws
    JOIN 
        warehouse w ON ws.ws_warehouse_sk = w.w_warehouse_sk
    WHERE 
        ws.ws_sold_date_sk BETWEEN (SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = 2022) AND (SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = 2023)
    GROUP BY 
        w.warehouse_name
),
CustomerReturns AS (
    SELECT 
        c.c_customer_id,
        COUNT(wr.wr_return_number) AS total_returns,
        SUM(wr.wr_return_amt_inc_tax) AS return_amount
    FROM 
        customer c
    LEFT JOIN 
        web_returns wr ON c.c_customer_sk = wr.wr_returning_customer_sk
    WHERE 
        c.c_current_cdemo_sk IS NOT NULL
    GROUP BY 
        c.c_customer_id
),
ReturnRates AS (
    SELECT 
        sd.warehouse_name,
        sd.total_sales,
        COALESCE(cr.total_returns, 0) AS total_returns,
        COALESCE(cr.return_amount, 0) AS return_amount,
        CASE 
            WHEN sd.total_sales > 0 THEN COALESCE(cr.total_returns, 0) * 1.0 / sd.total_sales 
            ELSE 0 
        END AS return_rate
    FROM 
        SalesData sd
    LEFT JOIN 
        (SELECT ws.warehouse_name, SUM(cr.return_amount) AS return_amount 
         FROM CustomerReturns cr 
         JOIN web_sales ws ON cr.c_customer_id = ws.ws_bill_customer_sk 
         GROUP BY ws.warehouse_name) cr
        ON sd.warehouse_name = cr.warehouse_name
)
SELECT 
    rr.*, 
    CASE 
        WHEN rr.return_rate > 0.05 THEN 'High Return Rate'
        WHEN rr.return_rate BETWEEN 0.02 AND 0.05 THEN 'Moderate Return Rate'
        ELSE 'Low Return Rate'
    END AS return_rate_category
FROM 
    ReturnRates rr
WHERE 
    rr.total_sales > 10000
ORDER BY 
    rr.return_rate DESC;
