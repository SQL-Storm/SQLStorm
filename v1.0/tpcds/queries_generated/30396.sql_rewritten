WITH RECURSIVE sales_summary AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        SUM(ws.ws_ext_sales_price) AS total_sales,
        COUNT(ws.ws_order_number) AS total_orders,
        RANK() OVER (ORDER BY SUM(ws.ws_ext_sales_price) DESC) AS sales_rank
    FROM 
        customer c
    JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_ship_customer_sk
    GROUP BY 
        c.c_customer_sk, c.c_first_name, c.c_last_name
),

qualified_customers AS (
    SELECT 
        ss.c_customer_sk,
        ss.c_first_name,
        ss.c_last_name,
        ss.total_sales,
        ss.total_orders,
        d.d_year,
        d.d_month_seq
    FROM 
        sales_summary ss
    JOIN 
        date_dim d ON d.d_date_sk = (SELECT MAX(d2.d_date_sk) 
                                      FROM date_dim d2 
                                      WHERE d2.d_date <= cast('2002-10-01' as date))
    WHERE 
        ss.sales_rank <= 100  
),

customer_details AS (
    SELECT 
        qc.c_customer_sk,
        qc.c_first_name,
        qc.c_last_name,
        qc.total_sales,
        qc.total_orders,
        COALESCE(hd.hd_buy_potential, 'No Data') AS buy_potential,
        COALESCE(CASE WHEN hd.hd_income_band_sk IS NULL THEN 'Unknown' 
                      ELSE ib.ib_upper_bound END, 'Unknown') AS income_upper_bound
    FROM 
        qualified_customers qc
    LEFT JOIN 
        household_demographics hd ON qc.c_customer_sk = hd.hd_demo_sk
    LEFT JOIN 
        income_band ib ON hd.hd_income_band_sk = ib.ib_income_band_sk
)

SELECT 
    CONCAT(cd.c_first_name, ' ', cd.c_last_name) AS full_name,
    cd.total_sales,
    cd.total_orders,
    cd.buy_potential,
    cd.income_upper_bound,
    CASE 
        WHEN cd.total_sales > 1000 THEN 'High Value'
        WHEN cd.total_sales BETWEEN 500 AND 1000 THEN 'Medium Value'
        ELSE 'Low Value'
    END AS customer_value
FROM 
    customer_details cd
ORDER BY 
    cd.total_sales DESC
LIMIT 50
OFFSET 10 
```