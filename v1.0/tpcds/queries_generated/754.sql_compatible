
WITH RankedSales AS (
    SELECT 
        ws.ws_item_sk,
        ws.ws_order_number,
        ws.ws_sales_price,
        ws.ws_quantity,
        ROW_NUMBER() OVER (PARTITION BY ws.ws_item_sk ORDER BY ws.ws_sales_price DESC) AS SalesRank
    FROM 
        web_sales ws
    WHERE 
        ws.ws_sales_price > 0
),
TopSales AS (
    SELECT 
        rs.ws_item_sk,
        SUM(rs.ws_quantity) AS TotalQuantity,
        SUM(rs.ws_sales_price * rs.ws_quantity) AS TotalSales
    FROM 
        RankedSales rs
    WHERE 
        rs.SalesRank <= 3
    GROUP BY 
        rs.ws_item_sk
),
Customers AS (
    SELECT 
        c.c_customer_sk,
        d.d_date,
        cd.cd_gender,
        cd.cd_marital_status,
        SUM(ws.ws_sales_price) AS TotalSpent
    FROM 
        customer c
    JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    JOIN 
        date_dim d ON ws.ws_sold_date_sk = d.d_date_sk
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    WHERE 
        d.d_date BETWEEN '2022-01-01' AND '2022-12-31'
    GROUP BY 
        c.c_customer_sk, d.d_date, cd.cd_gender, cd.cd_marital_status
),
SalesAndReturns AS (
    SELECT 
        ws.ws_item_sk AS Item_SK,
        SUM(ws.ws_quantity) AS TotalSales,
        COALESCE(SUM(sr.return_quantity), 0) AS TotalReturns
    FROM 
        web_sales ws
    LEFT JOIN 
        store_returns sr ON ws.ws_item_sk = sr.sr_item_sk AND ws.ws_order_number = sr.sr_ticket_number
    GROUP BY 
        ws.ws_item_sk
)
SELECT 
    c.c_customer_sk AS c_customer_id,
    c.TotalSpent,
    s.Item_SK,
    s.TotalSales,
    s.TotalReturns,
    (s.TotalSales - s.TotalReturns) AS NetSales,
    CASE 
        WHEN cd.cd_gender = 'F' AND cd.cd_marital_status = 'M' THEN 'Married Female'
        WHEN cd.cd_gender = 'F' AND cd.cd_marital_status = 'S' THEN 'Single Female'
        WHEN cd.cd_gender = 'M' AND cd.cd_marital_status = 'M' THEN 'Married Male'
        ELSE 'Single Male'
    END AS CustomerCategory
FROM 
    Customers c
JOIN 
    SalesAndReturns s ON c.c_customer_sk = s.Item_SK
JOIN 
    TopSales ts ON s.Item_SK = ts.ws_item_sk
ORDER BY 
    c.c_customer_sk, NetSales DESC
LIMIT 100;
