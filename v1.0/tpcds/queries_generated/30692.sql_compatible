
WITH RECURSIVE sales_rank AS (
    SELECT 
        ws.bill_customer_sk,
        SUM(ws.net_profit) AS total_profit,
        RANK() OVER (PARTITION BY ws.bill_customer_sk ORDER BY SUM(ws.net_profit) DESC) AS rank
    FROM web_sales AS ws
    WHERE ws.sold_date_sk IN (
        SELECT d_date_sk 
        FROM date_dim 
        WHERE d_year = 2023
    )
    GROUP BY ws.bill_customer_sk
),
high_value_customers AS (
    SELECT 
        c.c_customer_id, 
        cd.cd_gender, 
        cd.cd_marital_status, 
        ca.ca_city,
        ca.ca_state,
        sr.return_date,
        sr.return_time,
        sr.return_amount
    FROM customer AS c
    JOIN customer_demographics AS cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    JOIN customer_address AS ca ON c.c_current_addr_sk = ca.ca_address_sk
    LEFT JOIN (
        SELECT 
            wr_returning_customer_sk AS customer_sk,
            CAST(wr_returned_date_sk AS DATE) AS return_date,
            CAST(wr_returned_time_sk AS TIME) AS return_time,
            SUM(wr_return_amt) AS return_amount
        FROM web_returns
        GROUP BY wr_returning_customer_sk, wr_returned_date_sk, wr_returned_time_sk
    ) AS sr ON c.c_customer_sk = sr.customer_sk
    WHERE c.c_customer_sk IN (
        SELECT bill_customer_sk 
        FROM sales_rank 
        WHERE rank = 1
    )
    AND (cd.cd_marital_status = 'M' OR cd.cd_gender = 'F')
),
item_sales AS (
    SELECT 
        i.i_item_id,
        SUM(ws.ws_quantity) AS total_quantity_sold,
        SUM(ws.ws_net_profit) AS total_net_profit
    FROM item AS i
    JOIN web_sales AS ws ON i.i_item_sk = ws.ws_item_sk
    GROUP BY i.i_item_id
)
SELECT 
    h.c_customer_id,
    h.ca_city,
    h.ca_state,
    COUNT(DISTINCT i.i_item_id) AS unique_items_returned,
    SUM(i.total_quantity_sold) AS total_quantity_sold,
    AVG(i.total_net_profit) AS avg_net_profit
FROM high_value_customers AS h
JOIN item_sales AS i ON h.c_customer_id = i.i_item_id
GROUP BY h.c_customer_id, h.ca_city, h.ca_state
HAVING COUNT(DISTINCT i.i_item_id) > 0
ORDER BY total_quantity_sold DESC
FETCH FIRST 10 ROWS ONLY;
