
WITH RecursiveSales AS (
    SELECT
        ws_item_sk,
        SUM(ws_quantity) AS total_quantity,
        SUM(ws_ext_sales_price) AS total_sales,
        ROW_NUMBER() OVER (PARTITION BY ws_item_sk ORDER BY ws_sold_date_sk DESC) AS rn
    FROM
        web_sales
    GROUP BY
        ws_item_sk
),
TopItems AS (
    SELECT
        item.i_item_sk,
        item.i_item_desc,
        COALESCE(SUM(ws.total_quantity), 0) AS total_quantity,
        COALESCE(SUM(ws.total_sales), 0) AS total_sales
    FROM
        item
    LEFT JOIN
        RecursiveSales ws ON item.i_item_sk = ws.ws_item_sk AND ws.rn = 1
    GROUP BY
        item.i_item_sk, item.i_item_desc
),
CustomerReturns AS (
    SELECT
        sr_customer_sk,
        COUNT(DISTINCT sr_ticket_number) AS total_returns,
        SUM(sr_return_amt_inc_tax) AS total_return_value
    FROM
        store_returns
    GROUP BY
        sr_customer_sk
),
CombinedData AS (
    SELECT
        ti.i_item_sk,
        ti.i_item_desc,
        ti.total_quantity,
        ti.total_sales,
        COALESCE(cr.total_returns, 0) AS total_returns,
        COALESCE(cr.total_return_value, 0) AS total_return_value,
        CASE 
            WHEN ti.total_sales > 0 THEN (COALESCE(cr.total_return_value, 0) / ti.total_sales) * 100
            ELSE 0
        END AS return_rate_percentage
    FROM
        TopItems ti
    LEFT JOIN
        CustomerReturns cr ON ti.i_item_sk = cr.sr_customer_sk
)
SELECT 
    cd.c_customer_id,
    ca.ca_city,
    ci.i_item_desc,
    ci.total_sales,
    ci.total_returns,
    ci.return_rate_percentage
FROM 
    CombinedData ci
JOIN 
    customer cd ON cd.c_customer_sk = ci.total_returns
JOIN 
    customer_address ca ON cd.c_current_addr_sk = ca.ca_address_sk
WHERE 
    ci.return_rate_percentage > 10 AND 
    (ca.ca_state IS NULL OR ca.ca_state = 'CA')
ORDER BY 
    ci.total_sales DESC
LIMIT 100;
