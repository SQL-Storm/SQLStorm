
WITH customer_info AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_purchase_estimate,
        cd.cd_credit_rating,
        hd.hd_income_band_sk,
        CASE 
            WHEN cd.cd_dep_count IS NULL THEN 'No Dependents'
            WHEN cd.cd_dep_count = 0 THEN 'No Dependents'
            ELSE 'Has Dependents'
        END AS dependent_status
    FROM 
        customer c
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN 
        household_demographics hd ON c.c_current_hdemo_sk = hd.hd_demo_sk
),
sales_summary AS (
    SELECT 
        ws_bill_customer_sk,
        SUM(ws_ext_sales_price) AS total_sales,
        COUNT(ws_order_number) AS number_of_orders,
        MAX(ws_net_profit) AS max_profit,
        MIN(ws_net_profit) AS min_profit
    FROM 
        web_sales
    GROUP BY 
        ws_bill_customer_sk
),
comparison AS (
    SELECT 
        ci.c_customer_sk,
        ci.c_first_name,
        ci.c_last_name,
        ci.cd_gender,
        ci.dependent_status,
        COALESCE(ss.total_sales, 0) AS total_sales,
        COALESCE(ss.number_of_orders, 0) AS number_of_orders,
        CASE 
            WHEN ss.total_sales IS NOT NULL AND ss.total_sales > 10000 THEN 'High Spender'
            ELSE 'Regular Spender'
        END AS customer_category
    FROM 
        customer_info ci
    LEFT JOIN 
        sales_summary ss ON ci.c_customer_sk = ss.ws_bill_customer_sk
)
SELECT 
    ci.c_first_name,
    ci.c_last_name,
    ci.cd_gender,
    ci.dependent_status,
    ci.total_sales,
    ci.number_of_orders,
    ci.customer_category,
    (SELECT 
         COUNT(*) 
     FROM 
         web_returns wr 
     WHERE 
         wr.returning_customer_sk = ci.c_customer_sk) AS total_returns,
    DENSE_RANK() OVER (ORDER BY ci.total_sales DESC) AS sales_rank,
    ROW_NUMBER() OVER (PARTITION BY ci.cd_gender ORDER BY ci.total_sales DESC) AS gender_sales_rank,
    CASE 
        WHEN ci.total_sales IS NULL THEN 'Unknown Total'
        WHEN ci.total_sales > (SELECT AVG(total_sales) FROM sales_summary) THEN 'Above Average Sales'
        WHEN ci.total_sales < (SELECT AVG(total_sales) FROM sales_summary) THEN 'Below Average Sales'
        ELSE 'Average Sales'
    END AS sales_performance_category
FROM 
    comparison ci
WHERE 
    ci.cd_gender IS NOT NULL AND ci.dependent_status <> 'No Dependents'
ORDER BY 
    ci.total_sales DESC
FETCH FIRST 100 ROWS ONLY;
