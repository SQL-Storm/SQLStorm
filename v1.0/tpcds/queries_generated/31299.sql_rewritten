WITH RECURSIVE item_hierarchy AS (
    SELECT i_item_sk, i_item_id, i_item_desc, i_current_price, i_brand 
    FROM item
    WHERE i_current_price IS NOT NULL
    UNION ALL
    SELECT i.i_item_sk, i.i_item_id, i.i_item_desc, i.i_current_price, i.i_brand
    FROM item i
    JOIN item_hierarchy ih ON i.i_item_sk = ih.i_item_sk - 1  
),
sales_summary AS (
    SELECT 
        ws_item_sk,
        SUM(ws_quantity) AS total_quantity,
        SUM(ws_ext_sales_price) AS total_sales,
        AVG(ws_sales_price) AS avg_price
    FROM web_sales
    GROUP BY ws_item_sk
),
return_summary AS (
    SELECT 
        wr_item_sk,
        SUM(wr_return_quantity) AS total_returns,
        SUM(wr_return_amt_inc_tax) AS total_return_amt
    FROM web_returns
    GROUP BY wr_item_sk
),
combined_sales AS (
    SELECT 
        ii.i_item_id,
        ss.total_quantity,
        ss.total_sales,
        ss.avg_price,
        COALESCE(rs.total_returns, 0) AS total_returns,
        COALESCE(rs.total_return_amt, 0) AS total_return_amt,
        CASE 
            WHEN ss.total_sales > 0 THEN (COALESCE(rs.total_return_amt, 0) / ss.total_sales) * 100
            ELSE 0
        END AS return_percentage
    FROM item_hierarchy ii
    LEFT JOIN sales_summary ss ON ii.i_item_sk = ss.ws_item_sk
    LEFT JOIN return_summary rs ON ii.i_item_sk = rs.wr_item_sk
)
SELECT 
    i_item_id,
    total_quantity,
    total_sales,
    avg_price,
    total_returns,
    total_return_amt,
    return_percentage,
    CASE 
        WHEN return_percentage > 15 THEN 'High Return'
        WHEN return_percentage BETWEEN 5 AND 15 THEN 'Moderate Return'
        ELSE 'Low Return'
    END AS return_category
FROM combined_sales
WHERE total_quantity > 10
ORDER BY total_sales DESC
LIMIT 100;