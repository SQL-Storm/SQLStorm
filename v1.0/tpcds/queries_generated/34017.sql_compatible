
WITH RECURSIVE sales_trends AS (
    SELECT 
        ws_sold_date_sk,
        ws_item_sk,
        SUM(ws_sales_price) AS total_sales,
        ROW_NUMBER() OVER(PARTITION BY ws_item_sk ORDER BY ws_sold_date_sk DESC) AS rn
    FROM 
        web_sales
    GROUP BY 
        ws_sold_date_sk, ws_item_sk
),
top_sales AS (
    SELECT 
        st.ws_item_sk,
        SUM(st.total_sales) AS total_web_sales,
        MAX(d.d_year) AS last_year
    FROM 
        sales_trends st
    JOIN 
        date_dim d ON st.ws_sold_date_sk = d.d_date_sk
    WHERE 
        st.rn <= 5
    GROUP BY 
        st.ws_item_sk
),
customer_purchases AS (
    SELECT 
        c.c_customer_sk,
        COUNT(DISTINCT ws.ws_order_number) AS total_orders,
        SUM(ws.ws_sales_price) AS total_spent,
        cd.cd_gender,
        cd.cd_marital_status
    FROM 
        customer c
    JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    GROUP BY 
        c.c_customer_sk, cd.cd_gender, cd.cd_marital_status
)
SELECT 
    ca.ca_city,
    COUNT(DISTINCT cp.c_customer_sk) AS total_customers,
    COALESCE(SUM(top.total_web_sales), 0) AS total_sales_value,
    AVG(cp.total_spent) AS average_spent,
    MAX(cp.total_orders) AS max_orders,
    MIN(cp.total_orders) AS min_orders,
    CASE 
        WHEN SUM(CASE WHEN cp.cd_gender = 'F' THEN 1 ELSE 0 END) > 
             SUM(CASE WHEN cp.cd_gender = 'M' THEN 1 ELSE 0 END) 
        THEN 'More Female Customers' 
        ELSE 'More Male Customers' 
    END AS gender_dominance
FROM 
    customer_address ca
LEFT JOIN 
    customer c ON ca.ca_address_sk = c.c_current_addr_sk
LEFT JOIN 
    customer_purchases cp ON c.c_customer_sk = cp.c_customer_sk
LEFT JOIN 
    top_sales top ON cp.c_customer_sk IN (
        SELECT c.c_customer_sk 
        FROM customer c 
        WHERE c.c_current_cdemo_sk IN (
            SELECT cd.cd_demo_sk 
            FROM customer_demographics cd 
            WHERE cd.cd_gender = 'F' OR cd.cd_marital_status = 'M'
        )
    )
WHERE 
    ca.ca_city IS NOT NULL
GROUP BY 
    ca.ca_city
ORDER BY 
    total_sales_value DESC
FETCH FIRST 10 ROWS ONLY;
