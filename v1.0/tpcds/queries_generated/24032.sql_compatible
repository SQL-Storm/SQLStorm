
WITH RankedSales AS (
    SELECT 
        ws_bill_customer_sk,
        SUM(ws_ext_sales_price) AS total_sales,
        COUNT(ws_order_number) AS total_orders,
        ROW_NUMBER() OVER (PARTITION BY ws_bill_customer_sk ORDER BY SUM(ws_ext_sales_price) DESC) AS rank_sales
    FROM 
        web_sales 
    GROUP BY 
        ws_bill_customer_sk
), 
CustomerDetails AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_income_band_sk
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
), 
CustomerSales AS (
    SELECT 
        cd.c_customer_sk,
        cd.c_first_name,
        cd.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        rs.total_sales,
        rs.total_orders
    FROM 
        CustomerDetails cd
    LEFT JOIN 
        RankedSales rs ON cd.c_customer_sk = rs.ws_bill_customer_sk
    WHERE 
        (rs.total_sales IS NOT NULL AND rs.total_sales > 10000) 
        OR (rs.total_orders IS NULL AND cd.cd_marital_status = 'S')
), 
SaleStatistics AS (
    SELECT 
        AVG(total_sales) AS avg_sales,
        MAX(total_sales) AS max_sales,
        MIN(total_sales) AS min_sales,
        COUNT(*) AS num_customers
    FROM 
        CustomerSales
)
SELECT 
    cs.c_customer_sk,
    cs.c_first_name,
    cs.c_last_name,
    cs.cd_gender,
    cs.cd_marital_status,
    COALESCE(cs.total_sales, 0) AS total_sales,
    COALESCE(cs.total_orders, 0) AS total_orders,
    CASE 
        WHEN cs.total_sales > (SELECT avg_sales FROM SaleStatistics) THEN 'Above Average'
        WHEN cs.total_sales < (SELECT avg_sales FROM SaleStatistics) THEN 'Below Average'
        ELSE 'Average'
    END AS sales_category,
    CASE 
        WHEN cs.cd_gender IS NULL THEN 'Unknown'
        ELSE cs.cd_gender
    END AS gender_category
FROM 
    CustomerSales cs 
FULL OUTER JOIN 
    store s ON s.s_store_sk = (
        SELECT s_store_sk 
        FROM store_sales ss 
        WHERE ss.ss_customer_sk = cs.c_customer_sk 
        ORDER BY ss.ss_sold_date_sk DESC 
        LIMIT 1
    )
WHERE 
    (cs.total_sales IS NOT NULL AND cs.total_orders > 5) 
    OR (cs.total_sales IS NULL AND s.s_closed_date_sk IS NOT NULL)
ORDER BY 
    sales_category, total_sales DESC;
