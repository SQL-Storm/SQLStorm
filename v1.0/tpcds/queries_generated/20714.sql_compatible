
WITH RankedReturns AS (
    SELECT 
        sr_item_sk,
        COUNT(sr_return_quantity) AS total_returns,
        AVG(sr_return_amt) AS avg_return_amt,
        ROW_NUMBER() OVER (PARTITION BY sr_item_sk ORDER BY COUNT(sr_return_quantity) DESC) AS rn
    FROM 
        store_returns
    GROUP BY 
        sr_item_sk
),
CustomerDemographics AS (
    SELECT 
        cd_demo_sk,
        cd_gender,
        CASE 
            WHEN cd_marital_status = 'M' THEN 'Married'
            ELSE 'Single'
        END AS marital_status,
        cd_purchase_estimate,
        DENSE_RANK() OVER (ORDER BY cd_purchase_estimate DESC) AS purchase_rank
    FROM 
        customer_demographics
),
ReturnShipModes AS (
    SELECT 
        sr_ship_mode_sk,
        COUNT(*) AS returns_count
    FROM 
        store_returns sr
    LEFT JOIN 
        ship_mode sm ON sr.ship_mode_sk = sm.sm_ship_mode_sk
    GROUP BY 
        sr_ship_mode_sk
    HAVING 
        COUNT(*) > 5
),
SalesSummary AS (
    SELECT 
        ws_item_sk,
        SUM(ws_quantity) AS total_quantity_sold,
        SUM(ws_sales_price) AS total_sales,
        SUM(ws_net_profit) AS total_profit
    FROM 
        web_sales
    WHERE 
        ws_sold_date_sk > (SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = 2022)
    GROUP BY 
        ws_item_sk
)
SELECT 
    cs.ws_item_sk AS i_item_id,
    cs.total_sales,
    cs.total_quantity_sold,
    rr.total_returns,
    rr.avg_return_amt,
    cd.marital_status,
    cd.purchase_rank,
    CASE 
        WHEN rr.total_returns IS NULL THEN 'No Returns'
        ELSE 'Returned'
    END AS return_status,
    sm.sm_type,
    SUM(CASE WHEN ws_ext_discount_amt > 0 THEN 1 ELSE 0 END) AS discount_count
FROM 
    SalesSummary cs
LEFT JOIN 
    RankedReturns rr ON cs.ws_item_sk = rr.sr_item_sk AND rr.rn = 1
LEFT JOIN 
    CustomerDemographics cd ON cs.ws_item_sk IN (SELECT DISTINCT sr_item_sk FROM store_returns)
LEFT JOIN 
    ReturnShipModes sm ON sm.sr_ship_mode_sk = (
        SELECT MIN(sr_ship_mode_sk)
        FROM store_returns
        WHERE sr_item_sk = cs.ws_item_sk
    )
WHERE 
    cs.total_sales IS NOT NULL AND cs.total_sales > 1000
GROUP BY 
    cs.ws_item_sk, cs.total_sales, cs.total_quantity_sold, rr.total_returns, rr.avg_return_amt, cd.marital_status, cd.purchase_rank, sm.sm_type
ORDER BY 
    cs.total_sales DESC, cd.purchase_rank ASC;
