
WITH ranked_sales AS (
    SELECT 
        ws.web_site_id,
        ws.ws_order_number,
        ws.ws_item_sk,
        ws.ws_sales_price,
        ROW_NUMBER() OVER (PARTITION BY ws.web_site_id ORDER BY ws.ws_sales_price DESC) AS price_rank
    FROM 
        web_sales ws
    JOIN 
        item i ON ws.ws_item_sk = i.i_item_sk
    WHERE 
        ws.ws_sold_date_sk BETWEEN 2458849 AND 2458957 
),
customer_data AS (
    SELECT 
        c.c_customer_sk,
        cd.cd_gender,
        cd.cd_income_band_sk,
        SUM(ws.ws_quantity) AS total_quantity,
        AVG(ws.ws_sales_price) AS avg_price
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY 
        c.c_customer_sk, 
        cd.cd_gender, 
        cd.cd_income_band_sk
),
profit_analysis AS (
    SELECT 
        ss.ss_item_sk,
        SUM(ss.ss_net_profit) AS total_profit,
        COUNT(DISTINCT ss.ss_ticket_number) AS unique_sales
    FROM 
        store_sales ss
    WHERE 
        ss.ss_sold_date_sk IS NOT NULL
    GROUP BY 
        ss.ss_item_sk
)
SELECT 
    ca.ca_city,
    ca.ca_state,
    SUM(rs.ws_sales_price) AS total_sales,
    COUNT(DISTINCT c.c_customer_sk) AS unique_customers,
    COALESCE(SUM(pa.total_profit), 0) AS total_store_profit,
    COUNT(DISTINCT r.r_reason_sk) AS reasons_for_returns
FROM 
    customer_address ca
JOIN 
    customer c ON ca.ca_address_sk = c.c_current_addr_sk
LEFT JOIN 
    ranked_sales rs ON c.c_customer_sk = rs.ws_order_number
LEFT JOIN 
    profit_analysis pa ON rs.ws_item_sk = pa.ss_item_sk
LEFT JOIN 
    store_returns sr ON c.c_customer_sk = sr.sr_customer_sk
LEFT JOIN 
    reason r ON sr.sr_reason_sk = r.r_reason_sk
WHERE 
    ca.ca_city IS NOT NULL
    AND (ca.ca_state = 'CA' OR ca.ca_state IS NULL)
GROUP BY 
    ca.ca_city, 
    ca.ca_state
HAVING 
    SUM(rs.ws_sales_price) > 5000
ORDER BY 
    total_sales DESC;
