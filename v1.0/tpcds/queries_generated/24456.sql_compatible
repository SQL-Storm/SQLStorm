
WITH RankedReturns AS (
    SELECT 
        sr_returning_customer_sk,
        COUNT(sr_return_quantity) AS total_returns,
        SUM(sr_return_amt_inc_tax) AS total_return_amount,
        DENSE_RANK() OVER (PARTITION BY sr_returning_customer_sk ORDER BY SUM(sr_return_amt_inc_tax) DESC) AS return_rank
    FROM 
        store_returns
    WHERE 
        sr_return_quantity IS NOT NULL
    GROUP BY 
        sr_returning_customer_sk
),
HighValueReturns AS (
    SELECT 
        r.sr_returning_customer_sk AS returning_customer_sk,
        r.total_returns,
        r.total_return_amount
    FROM 
        RankedReturns r
    WHERE 
        r.return_rank <= 5
),
HighValueItems AS (
    SELECT 
        wr.wr_item_sk,
        SUM(wr.wr_return_quantity) AS total_returned,
        SUM(wr.wr_return_amt_inc_tax) AS total_return_value
    FROM 
        web_returns wr
    WHERE 
        wr_return_quantity > 2
    GROUP BY 
        wr.wr_item_sk
),
CrossJoinData AS (
    SELECT 
        hvr.returning_customer_sk,
        hvi.wr_item_sk,
        COALESCE(hvi.total_returned, 0) AS item_returned_count,
        COALESCE(hvi.total_return_value, 0) AS item_returned_value
    FROM 
        HighValueReturns hvr
    CROSS JOIN 
        HighValueItems hvi
)
SELECT 
    c.c_customer_id,
    ca.ca_city,
    SUM(cj.item_returned_count) AS total_items_returned,
    CASE 
        WHEN SUM(cj.item_returned_value) IS NULL THEN 'No Returns'
        ELSE CONCAT('$', FORMAT(SUM(cj.item_returned_value), 2))
    END AS total_return_value
FROM 
    CrossJoinData cj
JOIN 
    customer c ON c.c_customer_sk = cj.returning_customer_sk
JOIN 
    customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
WHERE 
    ca.ca_city LIKE 'San%' 
    AND c.c_first_shipto_date_sk IS NOT NULL
GROUP BY 
    c.c_customer_id, ca.ca_city
HAVING 
    SUM(cj.item_returned_count) > 0
ORDER BY 
    total_items_returned DESC, c.c_customer_id
FETCH FIRST 10 ROWS ONLY;
