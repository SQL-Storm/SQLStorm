
WITH SalesData AS (
    SELECT 
        ws.ws_order_number,
        ws.ws_ship_date_sk,
        ws.ws_quantity,
        ws.ws_sales_price,
        COALESCE(NULLIF(ws.ws_net_paid_inc_tax, 0), NULLIF(ws.ws_net_paid, 0)) AS net_revenue,
        DATEADD(day, -1 * (ROW_NUMBER() OVER (PARTITION BY ws.ws_order_number ORDER BY ws.ws_ship_date_sk DESC)), d.d_date) AS adjusted_order_date,
        ROW_NUMBER() OVER (PARTITION BY ws.ws_order_number ORDER BY ws.ws_sales_price DESC) AS sales_rank
    FROM 
        web_sales ws
    JOIN 
        date_dim d ON ws.ws_ship_date_sk = d.d_date_sk
    WHERE 
        d.d_year = 2023 
        AND d.d_weekend = 'Y' 
        AND (ws.ws_quantity > 0 OR ws.ws_sales_price IS NOT NULL)
),
ReturnData AS (
    SELECT 
        wr.wr_order_number,
        SUM(wr.wr_return_quantity) AS total_returned_quantity,
        SUM(wr.wr_return_amt) AS total_returned_amt,
        COUNT(DISTINCT wr.wr_item_sk) AS distinct_items_returned
    FROM 
        web_returns wr
    GROUP BY 
        wr.wr_order_number
)
SELECT 
    sd.ws_order_number,
    sd.adjusted_order_date,
    sd.net_revenue,
    COALESCE(rd.total_returned_quantity, 0) AS total_returned_quantity,
    COALESCE(rd.total_returned_amt, 0) AS total_returned_amt,
    COALESCE(rd.distinct_items_returned, 0) AS distinct_items_returned,
    CASE 
        WHEN COALESCE(rd.total_returned_quantity, 0) = 0 THEN 'No Returns'
        WHEN COALESCE(rd.total_returned_quantity, 0) > 10 THEN 'High Returns'
        ELSE 'Normal Returns'
    END AS return_status,
    MAX(sd.sales_rank) OVER (PARTITION BY sd.ws_order_number) AS max_sales_rank
FROM 
    SalesData sd
LEFT JOIN 
    ReturnData rd ON sd.ws_order_number = rd.wr_order_number
WHERE 
    sd.net_revenue IS NOT NULL
GROUP BY 
    sd.ws_order_number,
    sd.adjusted_order_date,
    sd.net_revenue,
    total_returned_quantity,
    total_returned_amt,
    distinct_items_returned
ORDER BY 
    sd.net_revenue DESC,
    sd.adjusted_order_date ASC
OFFSET 20 ROWS FETCH NEXT 100 ROWS ONLY;
