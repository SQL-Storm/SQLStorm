
WITH RECURSIVE SalesData AS (
    SELECT 
        ws.web_site_sk,
        ws.ws_order_number,
        ws.ws_sold_date_sk,
        ws.ws_sales_price,
        ws.ws_quantity,
        RANK() OVER (PARTITION BY ws.web_site_sk ORDER BY ws.ws_net_profit DESC) AS rank_profit
    FROM web_sales ws
    WHERE ws.ws_quantity > 0
),
CustomerAggregates AS (
    SELECT 
        c.c_customer_sk,
        COALESCE(SUM(ws.ws_net_profit), 0) AS total_net_profit,
        COUNT(DISTINCT ws.ws_order_number) AS number_of_orders
    FROM customer c
    LEFT JOIN SalesData sd ON c.c_customer_sk = sd.ws_bill_customer_sk
    LEFT JOIN web_sales ws ON sd.ws_order_number = ws.ws_order_number
    GROUP BY c.c_customer_sk
),
TopCustomers AS (
    SELECT 
        ca.c_customer_sk,
        ca.total_net_profit,
        ca.number_of_orders,
        ROW_NUMBER() OVER (ORDER BY ca.total_net_profit DESC) AS customer_rank
    FROM CustomerAggregates ca
    WHERE ca.total_net_profit > 1000
),
InventoryDetails AS (
    SELECT 
        i.i_item_id,
        inv.inv_quantity_on_hand,
        COALESCE(SUM(ws.ws_quantity), 0) AS total_sold
    FROM item i
    JOIN inventory inv ON i.i_item_sk = inv.inv_item_sk
    LEFT JOIN web_sales ws ON i.i_item_sk = ws.ws_item_sk
    GROUP BY i.i_item_id, inv.inv_quantity_on_hand
)
SELECT 
    tc.c_customer_sk,
    tc.total_net_profit,
    tc.number_of_orders,
    id.i_item_id,
    id.inv_quantity_on_hand,
    id.total_sold,
    (CASE 
        WHEN id.inv_quantity_on_hand IS NULL THEN 'No Inventory'
        WHEN id.inv_quantity_on_hand = 0 THEN 'Out of Stock' 
        ELSE 'Available' 
    END) AS inventory_status
FROM TopCustomers tc
JOIN InventoryDetails id ON MOD(tc.c_customer_sk, 10) = MOD(id.i_item_id, 10) 
WHERE tc.customer_rank <= 10
ORDER BY tc.total_net_profit DESC, id.inv_quantity_on_hand DESC;
