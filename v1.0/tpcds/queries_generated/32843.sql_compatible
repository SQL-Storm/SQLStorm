
WITH RECURSIVE sales_data AS (
    SELECT 
        ws_item_sk,
        SUM(ws_quantity) AS total_quantity,
        SUM(ws_net_paid) AS total_sales,
        DENSE_RANK() OVER (PARTITION BY ws_item_sk ORDER BY SUM(ws_net_paid) DESC) AS sales_rank
    FROM 
        web_sales
    GROUP BY 
        ws_item_sk
),
address_data AS (
    SELECT 
        ca_address_sk,
        ca_city,
        ca_state,
        ca_country,
        COUNT(DISTINCT c_customer_sk) AS customer_count
    FROM 
        customer_address
    LEFT JOIN 
        customer ON customer.c_current_addr_sk = customer_address.ca_address_sk
    GROUP BY 
        ca_address_sk, ca_city, ca_state, ca_country
),
date_range AS (
    SELECT 
        MAX(d_date) AS max_date,
        MIN(d_date) AS min_date
    FROM 
        date_dim
    WHERE 
        d_year = 2023
),
sales_summary AS (
    SELECT 
        dd.d_year,
        dd.d_month_seq,
        SUM(ws.total_sales) AS monthly_sales,
        COUNT(DISTINCT ws.ws_item_sk) AS unique_items_sold,
        ad.ca_city AS city,
        ad.ca_state AS state
    FROM 
        sales_data ws
    JOIN 
        date_dim dd ON dd.d_date_sk = ws.ws_item_sk
    LEFT JOIN 
        address_data ad ON ad.customer_count > 100
    WHERE 
        dd.d_date BETWEEN (SELECT min_date FROM date_range) AND (SELECT max_date FROM date_range)
    GROUP BY 
        dd.d_year, dd.d_month_seq, ad.ca_city, ad.ca_state
)
SELECT 
    ss.city,
    ss.state,
    SUM(ss.monthly_sales) AS total_monthly_sales,
    COUNT(DISTINCT ss.unique_items_sold) AS total_unique_items_sold,
    MAX(ss.monthly_sales) OVER (PARTITION BY ss.state ORDER BY SUM(ss.monthly_sales) DESC) AS best_monthly_sales
FROM 
    sales_summary ss
GROUP BY 
    ss.city, ss.state
HAVING 
    SUM(ss.monthly_sales) > 10000
ORDER BY 
    total_monthly_sales DESC;
