
WITH RECURSIVE customer_sales AS (
    SELECT 
        c.c_customer_id,
        SUM(ws.ws_ext_sales_price) AS total_sales,
        COUNT(ws.ws_order_number) AS order_count
    FROM 
        customer c
    LEFT JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY 
        c.c_customer_id
), address_info AS (
    SELECT 
        ca.ca_address_id,
        ca.ca_city,
        ca.ca_state,
        ca.ca_country,
        DENSE_RANK() OVER (PARTITION BY ca.ca_city ORDER BY ca.ca_state) AS city_rank
    FROM 
        customer_address ca
), demographic_info AS (
    SELECT 
        cd.cd_demo_sk,
        cd.cd_gender,
        COUNT(hd.hd_demo_sk) AS household_count
    FROM 
        customer_demographics cd
    LEFT JOIN 
        household_demographics hd ON cd.cd_demo_sk = hd.hd_demo_sk
    WHERE 
        (cd.cd_marital_status = 'M' OR cd.cd_demo_sk > 0)
    GROUP BY 
        cd.cd_demo_sk, 
        cd.cd_gender
), sales_summary AS (
    SELECT 
        cs.c_customer_id,
        ai.ca_city,
        ai.ca_country,
        ds.year,
        SUM(cs.total_sales) AS year_sales
    FROM 
        customer_sales cs
    JOIN 
        address_info ai ON cs.c_customer_id = ai.ca_address_id
    JOIN 
        (SELECT 
            d_year AS year
         FROM 
            date_dim 
         WHERE 
            d_date BETWEEN '2022-01-01' AND '2023-12-31') ds
    ON 
        ds.year = cs.year_sales
    GROUP BY 
        cs.c_customer_id, ai.ca_city, ai.ca_country, ds.year
)
SELECT 
    s.*,
    (SELECT COUNT(*) FROM demographic_info di WHERE di.household_count > 2) AS wealthy_households,
    COUNT(DISTINCT st.s_store_sk) OVER (PARTITION BY s.ca_state) AS total_stores_in_state
FROM 
    sales_summary s
LEFT JOIN 
    store st ON s.ca_state = st.s_state
FULL OUTER JOIN 
    reason r ON s.year_sales IS NULL AND r.r_reason_sk < 10
WHERE 
    (s.year_sales IS NOT NULL AND s.year_sales > 1000 OR r.r_reason_desc IS NOT NULL)
ORDER BY 
    s.year_sales DESC NULLS LAST;
