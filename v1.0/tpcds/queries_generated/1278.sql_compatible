
WITH RankedSales AS (
    SELECT 
        ws.web_site_id,
        ws_sold_date_sk,
        SUM(ws_sales_price) AS total_sales,
        COUNT(ws_order_number) AS order_count,
        RANK() OVER (PARTITION BY ws.web_site_id ORDER BY SUM(ws_sales_price) DESC) AS sales_rank
    FROM web_sales ws
    JOIN item i ON ws.ws_item_sk = i.i_item_sk
    JOIN customer c ON ws.ws_bill_customer_sk = c.c_customer_sk
    WHERE c.c_current_addr_sk IS NOT NULL
    GROUP BY ws.web_site_id, ws_sold_date_sk
),
SalesDetails AS (
    SELECT
        w.warehouse_id,
        COALESCE(d.d_year, 0) AS sales_year,
        SUM(ws.ws_sales_price) AS total_sales,
        SUM(ws.ws_net_profit) AS total_profit,
        COUNT(DISTINCT ws.ws_order_number) AS total_orders
    FROM web_sales ws
    JOIN warehouse w ON ws.ws_warehouse_sk = w.w_warehouse_sk
    LEFT JOIN date_dim d ON ws.ws_sold_date_sk = d.d_date_sk
    GROUP BY w.warehouse_id, d.d_year
),
TopSales AS (
    SELECT 
        rd.web_site_id,
        sd.sales_year,
        SUM(sd.total_sales) AS total_sales,
        SUM(sd.total_profit) AS total_profit,
        SUM(sd.total_orders) AS total_orders
    FROM RankedSales rd
    JOIN SalesDetails sd ON rd.web_site_id = sd.warehouse_id
    WHERE rd.sales_rank <= 3
    GROUP BY rd.web_site_id, sd.sales_year
)
SELECT 
    ts.web_site_id,
    ts.sales_year,
    ts.total_sales,
    ts.total_profit,
    ts.total_orders,
    CASE 
        WHEN ts.total_sales > 10000 THEN 'High Sales'
        WHEN ts.total_sales BETWEEN 5000 AND 10000 THEN 'Medium Sales'
        ELSE 'Low Sales'
    END AS sales_category,
    (SELECT COUNT(DISTINCT c.c_customer_id) 
     FROM customer c 
     JOIN store_sales ss ON c.c_customer_sk = ss.ss_customer_sk 
     WHERE ss.ss_sold_date_sk BETWEEN (SELECT MIN(ws_sold_date_sk) FROM web_sales) AND (SELECT MAX(ws_sold_date_sk) FROM web_sales)
    ) AS unique_customers
FROM TopSales ts
ORDER BY ts.total_sales DESC;
