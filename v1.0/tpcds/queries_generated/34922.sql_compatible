
WITH RECURSIVE SalesAggregation AS (
    SELECT 
        ws_item_sk,
        SUM(ws_quantity) AS total_quantity,
        SUM(ws_sales_price) AS total_sales,
        SUM(ws_ext_tax) AS total_tax,
        ROW_NUMBER() OVER (PARTITION BY ws_item_sk ORDER BY ws_sold_date_sk) AS rn
    FROM web_sales
    WHERE ws_sold_date_sk >= (SELECT MIN(d_date_sk) FROM date_dim WHERE d_year = 2001)
    GROUP BY ws_item_sk
    UNION ALL
    SELECT 
        sa.ws_item_sk,
        sa.total_quantity + COALESCE(wr.total_quantity, 0) AS total_quantity,
        sa.total_sales + COALESCE(wr.total_sales, 0) AS total_sales,
        sa.total_tax + COALESCE(wr.total_tax, 0) AS total_tax,
        ROW_NUMBER() OVER (PARTITION BY sa.ws_item_sk ORDER BY sa.total_sales DESC) AS rn
    FROM SalesAggregation sa
    LEFT JOIN (
        SELECT 
            wr_item_sk,
            SUM(wr_return_quantity) AS total_quantity,
            SUM(wr_return_amt_inc_tax) AS total_sales,
            SUM(wr_return_tax) AS total_tax
        FROM web_returns
        GROUP BY wr_item_sk
    ) wr ON sa.ws_item_sk = wr.wr_item_sk
    WHERE sa.rn < 5
)
SELECT 
    i.i_item_id,
    i.i_item_desc,
    COALESCE(sa.total_quantity, 0) AS total_sold_quantity,
    COALESCE(sa.total_sales, 0) AS total_sales_value,
    COALESCE(sa.total_tax, 0) AS total_tax_collected
FROM item i
LEFT JOIN SalesAggregation sa ON i.i_item_sk = sa.ws_item_sk
WHERE i.i_current_price > 20.00
ORDER BY total_sales_value DESC
LIMIT 10;
