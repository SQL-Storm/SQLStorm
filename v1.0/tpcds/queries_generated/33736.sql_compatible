
WITH RECURSIVE SalesCTE AS (
    SELECT 
        ws_bill_customer_sk AS customer_sk,
        SUM(ws_ext_sales_price) AS total_sales,
        COUNT(ws_order_number) AS total_orders
    FROM 
        web_sales
    WHERE 
        ws_sold_date_sk BETWEEN 1 AND 1000
    GROUP BY 
        ws_bill_customer_sk
    UNION ALL
    SELECT 
        c_customer_sk AS customer_sk,
        COALESCE(SUM(cs_ext_sales_price), 0) AS total_sales,
        COALESCE(COUNT(cs_order_number), 0) AS total_orders
    FROM 
        catalog_sales
    JOIN 
        SalesCTE ON cs_bill_customer_sk = customer_sk
    GROUP BY 
        c_customer_sk
),
CustomerMetrics AS (
    SELECT 
        c.c_customer_id,
        COALESCE(s.total_sales, 0) AS total_sales,
        COALESCE(s.total_orders, 0) AS total_orders,
        RANK() OVER (ORDER BY COALESCE(s.total_sales, 0) DESC) AS sales_rank
    FROM 
        customer c
    LEFT JOIN 
        SalesCTE s ON c.c_customer_sk = s.customer_sk
),
TopCustomers AS (
    SELECT 
        cm.c_customer_id,
        cm.total_sales,
        cm.total_orders
    FROM 
        CustomerMetrics cm
    WHERE 
        cm.sales_rank <= 10
)
SELECT 
    t.c_customer_id,
    t.total_sales,
    t.total_orders,
    DENSE_RANK() OVER (ORDER BY t.total_sales DESC) AS dense_sales_rank,
    COALESCE(web.web_gmt_offset, store.s_gmt_offset) AS timezone_offset,
    CASE 
        WHEN t.total_orders = 0 THEN 'No Orders'
        ELSE 'Orders Made'
    END AS order_status
FROM 
    TopCustomers t
LEFT JOIN 
    web_site web ON t.c_customer_id = web.web_site_id
LEFT JOIN 
    store store ON t.total_orders = store.s_number_employees
WHERE 
    (web.web_closed_date_sk IS NULL OR store.s_closed_date_sk IS NULL)
ORDER BY 
    t.total_sales DESC;
