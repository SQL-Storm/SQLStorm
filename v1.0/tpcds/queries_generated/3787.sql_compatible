
WITH RankedSales AS (
    SELECT 
        ws.ws_item_sk,
        ws.ws_order_number,
        ws.ws_sales_price,
        SUM(ws.ws_sales_price) OVER (PARTITION BY ws.ws_item_sk ORDER BY ws.ws_order_number ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS total_sales,
        ROW_NUMBER() OVER (PARTITION BY ws.ws_item_sk ORDER BY ws.ws_sales_price DESC) AS rank_sales
    FROM 
        web_sales ws
),
TopItems AS (
    SELECT 
        rs.ws_item_sk,
        rs.total_sales
    FROM 
        RankedSales rs
    WHERE 
        rs.rank_sales <= 10
),
MonthlyReturns AS (
    SELECT 
        d.d_year,
        SUM(cr.cr_return_amount) AS total_return
    FROM 
        catalog_returns cr
    JOIN 
        date_dim d ON cr.cr_returned_date_sk = d.d_date_sk
    GROUP BY 
        d.d_year
)
SELECT 
    ca.ca_city,
    COUNT(DISTINCT c.c_customer_id) AS customer_count,
    SUM(ws.ws_sales_price) AS total_sales,
    COALESCE(mr.total_return, 0) AS total_returns,
    (SUM(ws.ws_sales_price) - COALESCE(mr.total_return, 0)) AS net_sales,
    CASE 
        WHEN COUNT(DISTINCT c.c_customer_id) = 0 THEN NULL
        ELSE (SUM(ws.ws_sales_price) - COALESCE(mr.total_return, 0)) / COUNT(DISTINCT c.c_customer_id)
    END AS average_sales_per_customer
FROM 
    customer_address ca
JOIN 
    customer c ON ca.ca_address_sk = c.c_current_addr_sk
JOIN 
    web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
LEFT JOIN 
    MonthlyReturns mr ON mr.d_year = EXTRACT(YEAR FROM DATE '2002-10-01')
WHERE 
    ca.ca_state = 'CA'
GROUP BY 
    ca.ca_city
ORDER BY 
    net_sales DESC
LIMIT 10;
