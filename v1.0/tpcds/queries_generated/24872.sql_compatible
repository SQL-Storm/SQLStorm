
WITH customer_stats AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        COUNT(DISTINCT ws.ws_order_number) AS total_orders,
        SUM(ws.ws_ext_sales_price) AS total_spent,
        AVG(ws.ws_net_paid) AS avg_spent,
        CASE
            WHEN COUNT(DISTINCT ws.ws_order_number) > 0 THEN SUM(ws.ws_ext_sales_price) / COUNT(DISTINCT ws.ws_order_number)
            ELSE 0
        END AS avg_order_value
    FROM 
        customer c
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY 
        c.c_customer_sk, c.c_first_name, c.c_last_name, cd.cd_gender, cd.cd_marital_status
),
item_popularity AS (
    SELECT 
        ws.ws_item_sk, 
        COUNT(ws.ws_order_number) AS order_count
    FROM 
        web_sales ws
    GROUP BY 
        ws.ws_item_sk
),
top_items AS (
    SELECT 
        ip.ws_item_sk,
        RANK() OVER (ORDER BY ip.order_count DESC) AS item_rank
    FROM 
        item_popularity ip
)
SELECT 
    cs.c_customer_sk, 
    cs.c_first_name, 
    cs.c_last_name,
    cs.total_orders,
    cs.total_spent,
    cs.avg_order_value,
    t.ws_item_sk,
    i.i_item_desc,
    COALESCE(t.item_rank, 0) AS rank
FROM 
    customer_stats cs
LEFT JOIN 
    top_items t ON cs.c_customer_sk = (
        SELECT c.c_customer_sk
        FROM web_sales ws JOIN customer c ON ws.ws_bill_customer_sk = c.c_customer_sk
        WHERE ws.ws_item_sk = t.ws_item_sk
        ORDER BY ws.ws_net_paid DESC
        LIMIT 1
    )
LEFT JOIN 
    item i ON t.ws_item_sk = i.i_item_sk
WHERE 
    (cs.total_orders > 10 OR cs.avg_spent > 1000)
    AND (cs.cd_gender IS NULL OR cs.cd_marital_status <> 'S')
ORDER BY 
    cs.total_spent DESC
LIMIT 50
UNION ALL
SELECT 
    NULL AS c_customer_sk,
    NULL AS c_first_name,
    NULL AS c_last_name,
    NULL AS total_orders,
    SUM(cs.total_spent) AS total_spent,
    NULL AS avg_order_value,
    NULL AS ws_item_sk,
    NULL AS i_item_desc,
    NULL AS rank
FROM 
    customer_stats cs
WHERE 
    cs.total_orders IS NOT NULL
GROUP BY 
    cs.total_orders;
