
WITH CustomerSales AS (
    SELECT 
        c.c_customer_sk,
        c.c_customer_id,
        SUM(ws.ws_sales_price) AS total_web_sales,
        SUM(cs.cs_sales_price) AS total_catalog_sales,
        SUM(ss.ss_sales_price) AS total_store_sales,
        COALESCE(SUM(ws.ws_sales_price), 0) + COALESCE(SUM(cs.cs_sales_price), 0) + COALESCE(SUM(ss.ss_sales_price), 0) AS total_sales,
        DENSE_RANK() OVER (ORDER BY COALESCE(SUM(ws.ws_sales_price), 0) + COALESCE(SUM(cs.cs_sales_price), 0) + COALESCE(SUM(ss.ss_sales_price), 0) DESC) AS sales_rank
    FROM 
        customer c
    LEFT JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    LEFT JOIN 
        catalog_sales cs ON c.c_customer_sk = cs.cs_bill_customer_sk
    LEFT JOIN 
        store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    GROUP BY 
        c.c_customer_sk, c.c_customer_id
), 
SalesAnalysis AS (
    SELECT 
        cs.c_customer_id,
        cs.total_sales,
        CASE 
            WHEN cs.total_sales = 0 THEN 'No Sales'
            WHEN cs.total_sales > 1000 THEN 'High Roller'
            ELSE 'Average Joe'
        END AS customer_category,
        ROW_NUMBER() OVER (PARTITION BY CASE 
                                            WHEN cs.total_sales = 0 THEN 'No Sales'
                                            WHEN cs.total_sales > 1000 THEN 'High Roller'
                                            ELSE 'Average Joe'
                                        END ORDER BY cs.total_sales DESC) AS row_num
    FROM 
        CustomerSales cs
)

SELECT 
    sa.c_customer_id,
    sa.total_sales,
    sa.customer_category,
    COALESCE(ROUND((sa.total_sales / NULLIF(MAX(sa.total_sales) OVER (PARTITION BY sa.customer_category), 0) * 100), 2), 0) AS sales_percentage,
    CASE 
        WHEN sa.row_num = 1 THEN 'Top Performer'
        ELSE NULL
    END AS performance_indicator,
    CASE 
        WHEN sa.total_sales IS NULL THEN 'Missing Sales Data'
        ELSE 'Data Present'
    END AS data_status
FROM 
    SalesAnalysis sa
WHERE 
    sa.customer_category <> 'No Sales' OR sa.sales_percentage IS NULL
ORDER BY 
    sa.customer_category, sales_percentage DESC
OFFSET 10 ROWS FETCH NEXT 5 ROWS ONLY;
