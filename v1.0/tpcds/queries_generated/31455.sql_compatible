
WITH RECURSIVE CategoryHierarchy AS (
    SELECT i_category_id, i_category, i_manufact_id, i_product_name 
    FROM item 
    WHERE i_category IS NOT NULL
   
    UNION ALL

    SELECT 
        i.category_id, 
        i.category, 
        i.manufact_id, 
        i.product_name 
    FROM item i 
    JOIN CategoryHierarchy ch ON i.category_id = ch.i_category_id
), CustomerSales AS (
    SELECT 
        c.c_customer_sk, 
        SUM(ss.net_paid) AS total_net_paid,
        COUNT(DISTINCT ss.ticket_number) AS total_sales,
        RANK() OVER (PARTITION BY c.c_customer_sk ORDER BY SUM(ss.net_paid) DESC) AS sales_rank
    FROM customer c 
    LEFT JOIN store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    GROUP BY c.c_customer_sk
), HighSpenders AS (
    SELECT c.c_customer_sk, cs.total_net_paid
    FROM CustomerSales cs
    JOIN customer c ON cs.c_customer_sk = c.c_customer_sk
    WHERE cs.total_net_paid > (
        SELECT AVG(total_net_paid) FROM CustomerSales
    )
)
SELECT 
    ca.ca_city, 
    ca.ca_state,
    COUNT(DISTINCT hs.c_customer_sk) AS high_spender_count,
    AVG(cs.total_net_paid) AS average_spending
FROM customer_address ca
JOIN HighSpenders hs ON ca.ca_address_sk = (SELECT c_current_addr_sk FROM customer WHERE c_customer_sk = hs.c_customer_sk)
LEFT JOIN CustomerSales cs ON hs.c_customer_sk = cs.c_customer_sk
WHERE ca.ca_state IN ('CA', 'TX')
GROUP BY ca.ca_city, ca.ca_state
ORDER BY high_spender_count DESC
LIMIT 10;
