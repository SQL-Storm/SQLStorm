
WITH RECURSIVE sales_hierarchy AS (
    SELECT
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        c.c_birth_year,
        COUNT(DISTINCT ws.ws_order_number) AS total_orders,
        SUM(ws.ws_net_paid_inc_tax) AS total_spent
    FROM
        customer c
    LEFT JOIN
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY
        c.c_customer_sk, c.c_first_name, c.c_last_name, c.c_birth_year
    HAVING
        COUNT(DISTINCT ws.ws_order_number) > 0
), 
high_value_customers AS (
    SELECT
        *,
        DENSE_RANK() OVER (ORDER BY total_spent DESC) AS spend_rank
    FROM
        sales_hierarchy
    WHERE
        total_spent IS NOT NULL
), 
location_data AS (
    SELECT
        ca.ca_address_sk,
        ca.ca_city,
        ca.ca_state,
        COUNT(DISTINCT c.c_customer_sk) AS customer_count
    FROM
        customer_address ca
    JOIN
        customer c ON c.c_current_addr_sk = ca.ca_address_sk
    GROUP BY
        ca.ca_address_sk, ca.ca_city, ca.ca_state
), 
spending_by_location AS (
    SELECT
        ld.ca_city,
        ld.ca_state,
        SUM(hv.total_spent) AS total_spending,
        AVG(hv.total_spent) AS avg_spending,
        MAX(hv.total_spent) AS max_spending
    FROM
        location_data ld
    JOIN
        high_value_customers hv ON hv.c_customer_sk IN (
            SELECT
                c.c_customer_sk
            FROM
                customer c
            WHERE
                c.c_current_addr_sk IS NOT NULL
        )
    GROUP BY
        ld.ca_city, ld.ca_state
)
SELECT
    sl.ca_city,
    sl.ca_state,
    sl.total_spending,
    sl.avg_spending,
    sl.max_spending,
    COALESCE((SELECT COUNT(*) FROM store WHERE s_state = sl.ca_state), 0) AS store_count,
    (SELECT STRING_AGG(DISTINCT i.i_category, ', ') 
     FROM item i 
     WHERE EXISTS (
         SELECT 1 
         FROM web_sales ws 
         WHERE ws.ws_item_sk = i.i_item_sk 
         AND ws.ws_net_paid_inc_tax > (SELECT AVG(ws2.ws_net_paid_inc_tax) FROM web_sales ws2)
     )
    ) AS popular_categories
FROM
    spending_by_location sl
WHERE
    sl.total_spending > (SELECT AVG(total_spending) FROM spending_by_location)
ORDER BY
    sl.avg_spending DESC
FETCH FIRST 10 ROW ONLY;
