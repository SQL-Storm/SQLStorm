
WITH RECURSIVE DateHierarchy AS (
    SELECT d_date_sk, d_date, d_year
    FROM date_dim 
    WHERE d_date = '2023-10-01'
    UNION ALL
    SELECT dd.d_date_sk, dd.d_date, dd.d_year
    FROM date_dim dd
    JOIN DateHierarchy dh ON dd.d_date_sk = dh.d_date_sk + 1
    WHERE dd.d_year = dh.d_year
),
CustomerStats AS (
    SELECT
        c.c_customer_sk,
        COUNT(DISTINCT ws.ws_order_number) AS total_orders,
        SUM(ws.ws_net_profit) AS total_profit,
        AVG(ws.ws_sales_price) AS avg_sales_price
    FROM customer c
    LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    WHERE c.c_birth_year BETWEEN 1980 AND 2000
    GROUP BY c.c_customer_sk
),
WarehouseInventory AS (
    SELECT 
        w.w_warehouse_id,
        SUM(i.inv_quantity_on_hand) AS total_inventory,
        COUNT(DISTINCT i.i_item_sk) AS unique_items
    FROM warehouse w
    JOIN inventory i ON w.w_warehouse_sk = i.inv_warehouse_sk
    GROUP BY w.w_warehouse_id
),
SalesPerformance AS (
    SELECT 
        s.s_store_id,
        SUM(ss.ss_net_profit) AS store_profit,
        COUNT(DISTINCT ss.ss_ticket_number) AS total_transactions
    FROM store s
    JOIN store_sales ss ON s.s_store_sk = ss.ss_store_sk
    WHERE ss.ss_sold_date_sk IN (SELECT d_date_sk FROM DateHierarchy)
    GROUP BY s.s_store_id
)

SELECT 
    w.w_warehouse_id,
    w.total_inventory,
    cs.total_orders,
    cs.total_profit,
    cs.avg_sales_price,
    sp.store_profit,
    sp.total_transactions
FROM WarehouseInventory w
FULL OUTER JOIN CustomerStats cs ON cs.c_customer_sk = (SELECT c.c_customer_sk FROM customer c ORDER BY RANDOM() LIMIT 1)
FULL OUTER JOIN SalesPerformance sp ON sp.s_store_id = (SELECT s.s_store_id FROM store s ORDER BY RANDOM() LIMIT 1)
WHERE w.total_inventory IS NOT NULL OR cs.total_orders IS NOT NULL OR sp.store_profit IS NOT NULL
ORDER BY 
    COALESCE(w.total_inventory, 0) DESC, 
    COALESCE(cs.total_profit, 0) DESC, 
    COALESCE(sp.store_profit, 0) DESC
LIMIT 50;
