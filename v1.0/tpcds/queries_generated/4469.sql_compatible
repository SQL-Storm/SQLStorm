
WITH RankedSales AS (
    SELECT
        ws.ws_order_number,
        ws.ws_item_sk,
        ws.ws_sales_price,
        ws.ws_quantity,
        ROW_NUMBER() OVER (PARTITION BY ws.ws_order_number ORDER BY ws.ws_sales_price DESC) AS rnk
    FROM web_sales ws
    JOIN item i ON ws.ws_item_sk = i.i_item_sk
    WHERE i.i_current_price IS NOT NULL
),
TotalSales AS (
    SELECT 
        ws.ws_order_number,
        SUM(ws.ws_sales_price * ws.ws_quantity) AS total_sales_value
    FROM web_sales ws
    GROUP BY ws.ws_order_number
),
CustomerReturns AS (
    SELECT 
        sr.sr_customer_sk,
        SUM(sr.sr_return_amt) AS total_return_amt,
        COUNT(*) AS return_count
    FROM store_returns sr
    GROUP BY sr.sr_customer_sk
)
SELECT 
    ca.ca_city,
    COUNT(DISTINCT c.c_customer_sk) AS total_customers,
    SUM(COALESCE(tr.total_return_amt, 0)) AS total_return_amount,
    AVG(COALESCE(ts.total_sales_value, 0)) AS avg_sales_value,
    STRING_AGG(DISTINCT i.i_item_desc) AS items_sold
FROM customer c
LEFT JOIN customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
LEFT JOIN CustomerReturns tr ON c.c_customer_sk = tr.sr_customer_sk
LEFT JOIN TotalSales ts ON ts.ws_order_number IN (
    SELECT 
        ws_order_number FROM RankedSales WHERE rnk <= 5
)
LEFT JOIN item i ON i.i_item_sk IN (
    SELECT ws_item_sk FROM RankedSales WHERE rnk <= 5 
)
WHERE ca.ca_state = 'CA' AND c.c_birth_year < 1970
GROUP BY ca.ca_city
HAVING COUNT(DISTINCT c.c_customer_sk) > 10
ORDER BY total_customers DESC;
