
WITH RECURSIVE sales_hierarchy AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        0 AS level,
        NULL AS parent_customer_sk
    FROM 
        customer c
    WHERE 
        c.c_customer_sk IS NOT NULL
    
    UNION ALL
    
    SELECT 
        sh.c_customer_sk,
        sh.c_first_name,
        sh.c_last_name,
        sh.level + 1,
        s.c_customer_sk AS parent_customer_sk
    FROM 
        sales_hierarchy sh
    JOIN 
        customer s ON sh.c_customer_sk = s.c_current_cdemo_sk
)
SELECT 
    ca.ca_city,
    SUM(ws.ws_net_paid) AS total_sales,
    MAX(ws.ws_sales_price) AS max_price,
    COUNT(DISTINCT c.c_customer_sk) AS unique_customers,
    AVG(ws.ws_net_paid) OVER (PARTITION BY ca.ca_city) AS avg_sales_per_city
FROM 
    web_sales ws
JOIN 
    customer_address ca ON ws.ws_ship_addr_sk = ca.ca_address_sk
JOIN 
    customer c ON ws.ws_bill_customer_sk = c.c_customer_sk
LEFT JOIN 
    sales_hierarchy sh ON c.c_customer_sk = sh.c_customer_sk
WHERE 
    ws.ws_sold_date_sk BETWEEN 2458852 AND 2458896 
    AND (c.c_birth_year BETWEEN 1950 AND 2000 OR c.c_first_name IS NULL)
GROUP BY 
    ca.ca_city,
    MAX(ws.ws_sales_price),
    COUNT(DISTINCT c.c_customer_sk)
HAVING 
    SUM(ws.ws_net_paid) > (
        SELECT 
            AVG(total_sales)
        FROM (
            SELECT 
                SUM(ws_inner.ws_net_paid) AS total_sales
            FROM 
                web_sales ws_inner
            INNER JOIN 
                customer_address ca_inner ON ws_inner.ws_ship_addr_sk = ca_inner.ca_address_sk
            GROUP BY 
                ca_inner.ca_city
        ) AS avg_sales_subquery
    )
ORDER BY 
    total_sales DESC
LIMIT 10;
