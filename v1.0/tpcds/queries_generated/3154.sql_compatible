
WITH CustomerReturns AS (
    SELECT 
        c.c_customer_id,
        SUM(COALESCE(sr.sr_return_quantity, 0)) AS total_returned_quantity,
        SUM(COALESCE(sr.sr_return_amt_inc_tax, 0)) AS total_returned_amount
    FROM customer c
    LEFT JOIN store_returns sr ON c.c_customer_sk = sr.sr_customer_sk
    GROUP BY c.c_customer_id
),
SalesSummary AS (
    SELECT 
        ws.ws_bill_customer_sk,
        SUM(ws.ws_quantity) AS total_quantity_sold,
        SUM(ws.ws_net_paid_inc_tax) AS total_sales_amount,
        COUNT(DISTINCT ws.ws_order_number) AS total_orders
    FROM web_sales ws
    GROUP BY ws.ws_bill_customer_sk
),
CustomerDemographics AS (
    SELECT 
        cd.cd_demo_sk,
        cd.cd_gender,
        COUNT(c.c_customer_sk) AS customer_count
    FROM customer c
    JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    GROUP BY cd.cd_demo_sk, cd.cd_gender
)
SELECT 
    cr.c_customer_id,
    COALESCE(ss.total_quantity_sold, 0) AS total_quantity_sold,
    COALESCE(ss.total_sales_amount, 0) AS total_sales_amount,
    cr.total_returned_quantity,
    cr.total_returned_amount,
    cd.cd_gender,
    cd.customer_count,
    CASE 
        WHEN cr.total_returned_quantity > 0 THEN 'High Return'
        WHEN COALESCE(ss.total_sales_amount, 0) > 1000 THEN 'High Spending'
        ELSE 'Average Customer' 
    END AS customer_category
FROM CustomerReturns cr
FULL OUTER JOIN SalesSummary ss ON cr.c_customer_id = ss.ws_bill_customer_sk
LEFT JOIN CustomerDemographics cd ON cr.c_customer_id = cd.cd_demo_sk
WHERE (cr.total_returned_quantity > 5 OR COALESCE(ss.total_sales_amount, 0) > 500)
    AND cd.customer_count > 10
ORDER BY customer_category, total_sales_amount DESC;
