
WITH RECURSIVE customer_hierarchy AS (
    SELECT c_customer_sk, c_first_name, c_last_name, c_current_cdemo_sk, 
           0 AS level
    FROM customer
    WHERE c_customer_sk IS NOT NULL
    UNION ALL
    SELECT c.c_customer_sk, c.c_first_name, c.c_last_name, c.c_current_cdemo_sk, 
           ch.level + 1
    FROM customer c
    JOIN customer_hierarchy ch ON c.c_current_cdemo_sk = ch.c_current_cdemo_sk
), demographic_stats AS (
    SELECT cd.cd_gender, cd.cd_marital_status, 
           COUNT(DISTINCT c.c_customer_sk) AS customer_count,
           AVG(COALESCE(cd.cd_purchase_estimate, 0)) AS avg_purchase_estimate
    FROM customer c
    JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    GROUP BY cd.cd_gender, cd.cd_marital_status
), return_stats AS (
    SELECT sr_item_sk, SUM(COALESCE(sr_return_quantity, 0)) AS total_returned,
           SUM(COALESCE(sr_return_amt, 0)) AS total_return_amount, 
           COUNT(DISTINCT sr_ticket_number) AS return_count,
           sr_customer_sk
    FROM store_returns
    GROUP BY sr_item_sk, sr_customer_sk
)
SELECT 
    ch.c_customer_sk,
    ch.c_first_name,
    ch.c_last_name,
    ds.cd_gender,
    ds.cd_marital_status,
    ds.customer_count, 
    ds.avg_purchase_estimate,
    COALESCE(rs.total_returned, 0) AS total_returned,
    COALESCE(rs.total_return_amount, 0) AS total_return_amount,
    COALESCE(rs.return_count, 0) AS return_count
FROM customer_hierarchy ch
LEFT JOIN demographic_stats ds ON ch.c_current_cdemo_sk = ds.cd_gender
LEFT JOIN return_stats rs ON ch.c_customer_sk = rs.sr_customer_sk
WHERE ds.customer_count > 1 AND 
      ds.avg_purchase_estimate > (SELECT AVG(cd.cd_purchase_estimate) FROM customer_demographics cd) 
ORDER BY ch.level, ds.customer_count DESC
LIMIT 100;
