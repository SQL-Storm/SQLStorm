
WITH RankedSales AS (
    SELECT 
        ws_ship_date_sk,
        w_wharehouse_name,
        SUM(ws_net_paid_inc_tax) AS total_net_sales,
        ROW_NUMBER() OVER (PARTITION BY ws_ship_date_sk ORDER BY SUM(ws_net_paid_inc_tax) DESC) AS rank
    FROM 
        web_sales 
    JOIN 
        warehouse ON ws_warehouse_sk = w_warehouse_sk
    GROUP BY 
        ws_ship_date_sk, w_warehouse_name
),
CustomerReturns AS (
    SELECT 
        sr_store_sk,
        COUNT(DISTINCT sr_ticket_number) AS return_count,
        SUM(sr_return_amt_inc_tax) AS total_return_value
    FROM 
        store_returns 
    GROUP BY 
        sr_store_sk
),
FinalMetrics AS (
    SELECT 
        r.ws_ship_date_sk,
        r.w_warehouse_name,
        COALESCE(s.return_count, 0) AS return_count,
        COALESCE(s.total_return_value, 0) AS total_return_value,
        r.total_net_sales,
        CASE 
            WHEN COALESCE(s.total_return_value, 0) = 0 THEN NULL
            ELSE ROUND((COALESCE(s.total_return_value, 0) / r.total_net_sales) * 100, 2) 
        END AS return_percentage
    FROM 
        RankedSales r
    LEFT JOIN 
        CustomerReturns s ON r.rank = 1 AND r.ws_ship_date_sk = s.sr_store_sk
    WHERE 
        r.total_net_sales > 1000
)
SELECT 
    f.ws_ship_date_sk,
    f.w_warehouse_name,
    f.return_count,
    f.total_return_value,
    f.total_net_sales,
    f.return_percentage,
    CASE 
        WHEN f.return_percentage IS NOT NULL AND f.return_percentage > 10 THEN 'High Return Rate'
        WHEN f.return_percentage IS NULL THEN 'No Returns'
        ELSE 'Normal Return Rate'
    END AS return_rate_category
FROM 
    FinalMetrics f
ORDER BY 
    f.total_net_sales DESC
LIMIT 10;
