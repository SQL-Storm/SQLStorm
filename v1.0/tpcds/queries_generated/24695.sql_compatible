
WITH CustomerSales AS (
    SELECT 
        c.c_customer_id,
        SUM(COALESCE(ws.ws_net_profit, 0) + COALESCE(cs.cs_net_profit, 0) + COALESCE(ss.ss_net_profit, 0)) AS total_profit,
        COUNT(DISTINCT ws.ws_order_number) AS web_order_count,
        COUNT(DISTINCT cs.cs_order_number) AS catalog_order_count,
        COUNT(DISTINCT ss.ss_ticket_number) AS store_order_count
    FROM customer c
    LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    LEFT JOIN catalog_sales cs ON c.c_customer_sk = cs.cs_bill_customer_sk
    LEFT JOIN store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    WHERE c.c_birth_year IS NOT NULL
    GROUP BY c.c_customer_id
),
SalesRanked AS (
    SELECT 
        c.c_customer_id,
        cs.total_profit,
        DENSE_RANK() OVER (ORDER BY cs.total_profit DESC) AS profit_rank,
        cs.web_order_count,
        cs.catalog_order_count,
        cs.store_order_count
    FROM CustomerSales cs
    JOIN customer c ON cs.c_customer_id = c.c_customer_id
)
SELECT 
    s.c_customer_id,
    s.total_profit,
    s.profit_rank,
    s.web_order_count,
    s.catalog_order_count,
    s.store_order_count,
    CASE 
        WHEN s.profit_rank <= 10 THEN 'Top 10 Customers'
        WHEN s.profit_rank > 10 AND s.profit_rank <= 50 THEN 'Top 50 Customers'
        ELSE 'Other Customers'
    END AS customer_segment
FROM SalesRanked s
WHERE (s.web_order_count IS NOT NULL OR s.catalog_order_count IS NOT NULL OR s.store_order_count IS NOT NULL)
  AND (s.total_profit > (SELECT AVG(total_profit) FROM CustomerSales) 
       OR s.c_customer_id IN (SELECT DISTINCT sr_returning_customer_sk 
                               FROM web_returns 
                               WHERE wr_return_quantity > 0))
ORDER BY s.total_profit DESC, s.c_customer_id
LIMIT 100;
