WITH sales_summary AS (
    SELECT
        ws_bill_customer_sk,
        COUNT(DISTINCT ws_order_number) AS total_orders,
        SUM(ws_ext_sales_price) AS total_sales,
        SUM(ws_net_profit) AS total_profit,
        MAX(ws_sold_date_sk) AS last_purchase
    FROM
        web_sales
    WHERE
        ws_sold_date_sk BETWEEN 2459509 AND 2459817 
    GROUP BY
        ws_bill_customer_sk
),
customer_info AS (
    SELECT
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_purchase_estimate
    FROM
        customer c
    JOIN
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
),
top_customers AS (
    SELECT
        cs.c_customer_sk,
        cs.c_first_name,
        cs.c_last_name,
        cs.cd_gender,
        cs.cd_marital_status,
        ss.total_sales,
        ss.total_profit
    FROM
        customer_info cs
    JOIN
        sales_summary ss ON cs.c_customer_sk = ss.ws_bill_customer_sk
    WHERE
        ss.total_orders > 5
    ORDER BY
        ss.total_profit DESC
    LIMIT 10
)
SELECT
    tc.c_customer_sk,
    tc.c_first_name,
    tc.c_last_name,
    tc.cd_gender,
    tc.cd_marital_status,
    COALESCE(tc.total_sales, 0) AS sales,
    COALESCE(tc.total_profit, 0) AS profit,
    CASE 
        WHEN tc.cd_gender = 'M' AND tc.total_profit > 1000 THEN 'High Value Male'
        WHEN tc.cd_gender = 'F' AND tc.total_profit > 1000 THEN 'High Value Female'
        ELSE 'Regular Customer'
    END AS customer_segment,
    (SELECT
        COUNT(DISTINCT wr.order_number)
     FROM
        web_returns wr
     WHERE
        wr.returning_customer_sk = tc.c_customer_sk) AS return_count,
    (SELECT
        AVG(sr_return_quantity)
     FROM
        store_returns sr
     INNER JOIN
        store s ON sr.s_store_sk = s.s_store_sk
     WHERE
        sr.returning_customer_sk = tc.c_customer_sk) AS avg_store_return_quantity,
    ROW_NUMBER() OVER (PARTITION BY tc.cd_marital_status ORDER BY tc.total_profit DESC) AS rank_by_marital_status
FROM
    top_customers tc
LEFT JOIN
    warehouse w ON EXISTS (
        SELECT 1 
        FROM inventory i 
        WHERE i.inv_quantity_on_hand > 0
        AND i.inv_warehouse_sk = w.w_warehouse_sk
    )
WHERE
    (tc.cd_marital_status IS NULL OR tc.cd_marital_status IN ('S', 'M', 'W')) 
ORDER BY
    tc.total_profit DESC, 
    COALESCE(tc.total_sales, 0) DESC;