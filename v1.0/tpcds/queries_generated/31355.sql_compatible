
WITH RECURSIVE sales_ranked AS (
    SELECT ws_item_sk, 
           SUM(ws_ext_sales_price) AS total_sales,
           RANK() OVER (PARTITION BY ws_item_sk ORDER BY SUM(ws_ext_sales_price) DESC) AS sales_rank
    FROM web_sales
    GROUP BY ws_item_sk
),
high_income_customers AS (
    SELECT DISTINCT c.c_customer_sk
    FROM customer c
    JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    JOIN household_demographics hd ON hd.hd_demo_sk = cd.cd_demo_sk
    JOIN income_band ib ON hd.hd_income_band_sk = ib.ib_income_band_sk
    WHERE ib.ib_upper_bound > 100000
),
regional_sales AS (
    SELECT s.s_city,
           SUM(ws.ws_ext_sales_price) AS city_sales,
           COUNT(DISTINCT ws.ws_order_number) AS order_count
    FROM store s
    JOIN web_sales ws ON s.s_store_sk = ws.ws_warehouse_sk
    JOIN customer_address ca ON ca.ca_address_sk = s.s_store_sk
    WHERE s.s_state = 'CA'
    GROUP BY s.s_city
),
store_return_statistics AS (
    SELECT sr_store_sk,
           COUNT(sr_ticket_number) AS return_count,
           SUM(sr_return_amt) AS total_return_amount
    FROM store_returns
    GROUP BY sr_store_sk
)
SELECT s.s_store_name,
       rs.city_sales,
       rs.order_count,
       COALESCE(srs.return_count, 0) AS return_count,
       COALESCE(srs.total_return_amount, 0) AS total_return_amount,
       sr.total_sales,
       customers.high_income_count
FROM store s
LEFT JOIN regional_sales rs ON s.s_city = rs.s_city
LEFT JOIN store_return_statistics srs ON s.s_store_sk = srs.sr_store_sk
LEFT JOIN (
    SELECT COUNT(*) AS high_income_count, 
           ws.ws_warehouse_sk AS s_store_sk
    FROM sales_ranked sr
    JOIN web_sales ws ON sr.ws_item_sk = ws.ws_item_sk
    JOIN high_income_customers hic ON ws.ws_ship_customer_sk = hic.c_customer_sk
    GROUP BY ws.ws_warehouse_sk
) AS customers ON s.s_store_sk = customers.s_store_sk
ORDER BY rs.city_sales DESC, return_count DESC;
