
WITH RECURSIVE customer_hierarchy AS (
    SELECT c_customer_sk, c_first_name, c_last_name, c_current_cdemo_sk, 
           CONCAT(c_first_name, ' ', c_last_name) AS full_name, 
           0 AS level
    FROM customer
    WHERE c_current_cdemo_sk IS NOT NULL

    UNION ALL

    SELECT c.c_customer_sk, c.c_first_name, c.c_last_name, c.c_current_cdemo_sk, 
           CONCAT(c.c_first_name, ' ', c.c_last_name) AS full_name,
           ch.level + 1
    FROM customer c
    JOIN customer_hierarchy ch ON c.c_current_cdemo_sk = ch.c_current_cdemo_sk
),
sales_summary AS (
    SELECT 
        c.c_customer_sk, 
        COALESCE(SUM(ss.ss_net_paid), 0) AS total_sales,
        COUNT(DISTINCT ss.ss_ticket_number) AS sales_count
    FROM customer c
    LEFT JOIN store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    GROUP BY c.c_customer_sk
),
demographics AS (
    SELECT 
        cd.cd_demo_sk,
        cd.cd_gender,
        CASE 
            WHEN cd.cd_marital_status = 'M' THEN 'Married' 
            ELSE 'Single' 
        END AS marital_status,
        hd.hd_income_band_sk,
        hd.BUY_POTENTIAL,
        COUNT(DISTINCT c.c_customer_sk) AS customer_count
    FROM customer_demographics cd
    LEFT JOIN household_demographics hd ON cd.cd_demo_sk = hd.hd_demo_sk
    LEFT JOIN customer c ON c.c_current_cdemo_sk = cd.cd_demo_sk
    GROUP BY cd.cd_demo_sk, cd.cd_gender, marital_status, hd.hd_income_band_sk, hd.BUY_POTENTIAL
)
SELECT
    ch.c_customer_sk,
    ch.full_name,
    SUM(ss.total_sales) AS total_sales,
    d.cd_gender,
    d.marital_status,
    d.hd_income_band_sk,
    d.BUY_POTENTIAL,
    RANK() OVER (PARTITION BY d.hd_income_band_sk ORDER BY SUM(ss.total_sales) DESC) AS sales_rank
FROM customer_hierarchy ch
LEFT JOIN sales_summary ss ON ch.c_customer_sk = ss.c_customer_sk
LEFT JOIN demographics d ON ch.c_current_cdemo_sk = d.cd_demo_sk
WHERE ss.total_sales > 0
GROUP BY ch.c_customer_sk, ch.full_name, d.cd_gender, d.marital_status, d.hd_income_band_sk, d.BUY_POTENTIAL
HAVING COUNT(ch.c_customer_sk) > 1
ORDER BY sales_rank, total_sales DESC
LIMIT 100;
