WITH RankedReturns AS (
    SELECT
        sr_customer_sk,
        sr_item_sk,
        sr_return_quantity,
        ROW_NUMBER() OVER (PARTITION BY sr_customer_sk ORDER BY sr_returned_date_sk DESC) AS return_rank
    FROM
        store_returns
    WHERE
        sr_return_quantity > (SELECT AVG(sr_return_quantity) FROM store_returns WHERE sr_item_sk IS NOT NULL)
),
CustomerDemographics AS (
    SELECT
        cd_demo_sk,
        cd_gender,
        cd_marital_status,
        COALESCE(NULLIF(cd_education_status, ''), 'Unknown') AS education_status,
        cd_purchase_estimate
    FROM
        customer_demographics
),
SalesData AS (
    SELECT
        ws_bill_customer_sk,
        ws_item_sk,
        SUM(ws_sales_price) as total_sales,
        COUNT(ws_order_number) as order_count,
        MAX(ws_ship_date_sk) as last_order_date
    FROM
        web_sales
    GROUP BY
        ws_bill_customer_sk,
        ws_item_sk
)
SELECT
    c.c_customer_id,
    ca.ca_city,
    cd.gender,
    COALESCE(cr.return_count, 0) AS return_count,
    COALESCE(sd.total_sales, 0) AS total_sales,
    CASE
        WHEN sd.total_sales > 1000 THEN 'High Value'
        WHEN sd.total_sales BETWEEN 500 AND 1000 THEN 'Medium Value'
        ELSE 'Low Value'
    END AS customer_value,
    DATEDIFF(cast('2002-10-01' as date), cd_purchase_estimate) AS days_since_last_purchase
FROM
    customer c
LEFT JOIN
    customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
LEFT JOIN
    CustomerDemographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
LEFT JOIN (
    SELECT
        sr_customer_sk,
        COUNT(*) AS return_count
    FROM
        RankedReturns
    WHERE
        return_rank = 1
    GROUP BY
        sr_customer_sk
) cr ON cr.sr_customer_sk = c.c_customer_sk
LEFT JOIN 
    SalesData sd ON sd.ws_bill_customer_sk = c.c_customer_sk
WHERE
    (cd_gender = 'F' OR cd_gender IS NULL)
    AND ca.ca_city NOT IN ('Unknown', 'N/A')
    AND (days_since_last_purchase IS NULL OR days_since_last_purchase > 30)
ORDER BY
    customer_value DESC, c.c_customer_id
LIMIT 100;