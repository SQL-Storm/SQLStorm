
WITH CustomerStats AS (
    SELECT 
        c.c_customer_id,
        cd.cd_gender,
        cd.cd_marital_status,
        COUNT(DISTINCT sr.ticket_number) AS total_returns,
        SUM(sr.return_amt) AS total_return_amount,
        AVG(sr.return_quantity) AS avg_return_quantity
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN 
        store_returns sr ON c.c_customer_sk = sr.sr_customer_sk
    GROUP BY 
        c.c_customer_id, cd.cd_gender, cd.cd_marital_status
), DateStats AS (
    SELECT 
        d.d_date,
        SUM(ws.net_profit) AS total_net_profit,
        COUNT(DISTINCT ws.order_number) AS total_sales_orders
    FROM 
        web_sales ws
    JOIN 
        date_dim d ON ws.ws_sold_date_sk = d.d_date_sk
    GROUP BY 
        d.d_date
), TopProducts AS (
    SELECT 
        i.item_id,
        SUM(ws.net_profit) AS total_profit,
        COUNT(DISTINCT ws.order_number) AS total_sales_orders
    FROM 
        item i
    JOIN 
        web_sales ws ON i.i_item_sk = ws.ws_item_sk
    GROUP BY 
        i.item_id
    ORDER BY 
        total_profit DESC
    LIMIT 10
), FinalReport AS (
    SELECT 
        cs.c_customer_id,
        cs.cd_gender,
        cs.cd_marital_status,
        ds.total_net_profit,
        ds.total_sales_orders,
        tp.item_id,
        tp.total_profit,
        tp.total_sales_orders AS product_sales_orders
    FROM 
        CustomerStats cs
    CROSS JOIN 
        DateStats ds  
    CROSS JOIN 
        TopProducts tp  
)
SELECT 
    f.c_customer_id,
    f.cd_gender,
    f.cd_marital_status,
    f.total_net_profit,
    f.total_sales_orders,
    f.item_id,
    f.total_profit,
    f.product_sales_orders
FROM 
    FinalReport f
ORDER BY 
    f.total_net_profit DESC, f.total_profit DESC
LIMIT 100;
