
WITH RankedCustomers AS (
    SELECT 
        c.c_customer_id,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        ROW_NUMBER() OVER (PARTITION BY cd.cd_gender ORDER BY cd.cd_purchase_estimate DESC) AS rnk
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
),
HighValueReturns AS (
    SELECT 
        sr.sr_customer_sk,
        SUM(sr.sr_return_amt) AS total_return_amt,
        COUNT(sr.sr_return_quantity) AS total_returned_items
    FROM 
        store_returns sr
    GROUP BY 
        sr.sr_customer_sk
    HAVING 
        SUM(sr.sr_return_amt) > 500
),
RecentPurchases AS (
    SELECT 
        ws_bill_customer_sk, 
        SUM(ws_net_profit) AS total_profit,
        COUNT(ws_order_number) AS total_orders
    FROM 
        web_sales
    WHERE 
        ws_sold_date_sk > (SELECT MAX(d_date_sk) - 30 FROM date_dim)
    GROUP BY 
        ws_bill_customer_sk
)
SELECT 
    rc.c_customer_id,
    rc.c_first_name,
    rc.c_last_name,
    rc.cd_gender,
    hvr.total_return_amt,
    r.total_profit,
    COALESCE(r.total_orders, 0) AS total_orders,
    CASE 
        WHEN hvr.total_return_amt IS NOT NULL THEN 'Returned Customer'
        ELSE 'Regular Customer'
    END AS customer_type
FROM 
    RankedCustomers rc
LEFT JOIN 
    HighValueReturns hvr ON rc.c_customer_id = hvr.sr_customer_sk
LEFT JOIN 
    RecentPurchases r ON rc.c_customer_id = r.ws_bill_customer_sk
WHERE 
    rc.rnk <= 10
GROUP BY 
    rc.c_customer_id,
    rc.c_first_name,
    rc.c_last_name,
    rc.cd_gender,
    hvr.total_return_amt,
    r.total_profit
ORDER BY 
    rc.cd_gender, 
    hvr.total_return_amt DESC;
