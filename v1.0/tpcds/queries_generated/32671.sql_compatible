
WITH RECURSIVE customer_hierarchy AS (
    SELECT c.c_customer_sk, c.c_first_name, c.c_last_name, c.c_current_cdemo_sk, 0 AS level
    FROM customer c
    WHERE c.c_current_cdemo_sk IS NOT NULL
    
    UNION ALL
    
    SELECT c.c_customer_sk, c.c_first_name, c.c_last_name, c.c_current_cdemo_sk, ch.level + 1
    FROM customer c
    JOIN customer_hierarchy ch ON c.c_current_cdemo_sk = ch.c_current_cdemo_sk
)

SELECT 
    ca.ca_state,
    COUNT(DISTINCT c.c_customer_sk) AS number_of_customers,
    SUM(ws.ws_sales_price) AS total_sales,
    AVG(cd.cd_purchase_estimate) AS average_purchase_estimate,
    MAX(ws.ws_net_profit) AS max_net_profit,
    MIN(ws.ws_net_profit) AS min_net_profit,
    STRING_AGG(DISTINCT CONCAT(c.c_first_name, ' ', c.c_last_name), ', ') AS customer_names
FROM 
    customer_address ca
LEFT JOIN 
    customer c ON c.c_current_addr_sk = ca.ca_address_sk
LEFT JOIN 
    customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
LEFT JOIN 
    web_sales ws ON c.c_customer_sk = ws.ws_ship_customer_sk
LEFT JOIN 
    time_dim t ON ws.ws_sold_date_sk = t.d_date_sk
INNER JOIN 
    (
        SELECT 
            c.c_current_cdemo_sk, 
            MAX(ws.ws_net_profit) AS max_net_profit
        FROM 
            web_sales ws
        JOIN 
            customer c ON c.c_customer_sk = ws.ws_ship_customer_sk
        GROUP BY 
            c.c_current_cdemo_sk
    ) AS profits ON c.c_current_cdemo_sk = profits.c_current_cdemo_sk
WHERE 
    ca.ca_state IS NOT NULL 
    AND (cd.cd_credit_rating = 'Great' OR cd.cd_marital_status = 'M')
    AND (ws.ws_sold_date_sk BETWEEN 20200101 AND 20201231 OR ws.ws_sold_date_sk IS NULL)
GROUP BY 
    ca.ca_state,
    AVG(cd.cd_purchase_estimate),
    MAX(ws.ws_net_profit),
    MIN(ws.ws_net_profit)
HAVING 
    COUNT(DISTINCT c.c_customer_sk) > 10 
    AND SUM(ws.ws_sales_price) > 1000
ORDER BY 
    total_sales DESC;
