
WITH RECURSIVE customer_data AS (
    SELECT c.c_customer_sk,
           c.c_first_name,
           c.c_last_name,
           cd.cd_demo_sk,
           cd.cd_gender,
           cd.cd_marital_status,
           cd.cd_credit_rating,
           cd.cd_purchase_estimate,
           COALESCE(cd.cd_dep_count, 0) AS dependency_count,
           COALESCE(cd.cd_dep_college_count, 0) AS college_count
    FROM customer c
    LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
),
sales_summary AS (
    SELECT ws.ws_bill_customer_sk,
           SUM(ws.ws_net_profit) AS total_net_profit,
           AVG(ws.ws_list_price) AS avg_list_price
    FROM web_sales ws
    WHERE ws.ws_sold_date_sk BETWEEN 20000101 AND 20231231
    GROUP BY ws.ws_bill_customer_sk
),
item_sales AS (
    SELECT ws.ws_item_sk,
           COUNT(ws.ws_order_number) AS order_count,
           SUM(ws.ws_quantity) AS total_quantity,
           SUM(ws.ws_net_profit) AS total_profit
    FROM web_sales ws
    GROUP BY ws.ws_item_sk
    HAVING SUM(ws.ws_quantity) > 0
),
ranked_items AS (
    SELECT is.*, 
           RANK() OVER (PARTITION BY is.ws_item_sk ORDER BY is.total_profit DESC) AS profit_rank
    FROM item_sales is
),
country_counts AS (
    SELECT ca.ca_country, 
           COUNT(DISTINCT ca.ca_address_sk) AS address_count
    FROM customer_address ca
    GROUP BY ca.ca_country
    HAVING COUNT(DISTINCT ca.ca_address_sk) > 5
)
SELECT cd.c_first_name, 
       cd.c_last_name, 
       cd.cd_gender, 
       ss.total_net_profit, 
       ss.avg_list_price, 
       r.item_rank,
       cc.address_count,
       CASE 
           WHEN cc.address_count IS NOT NULL THEN 'Active'
           ELSE 'Inactive'
       END AS status
FROM customer_data cd
LEFT JOIN sales_summary ss ON cd.c_customer_sk = ss.ws_bill_customer_sk
LEFT JOIN (SELECT ri.*, RANK() OVER (ORDER BY ri.total_profit DESC) AS item_rank 
           FROM ranked_items ri) r ON r.ws_item_sk = ss.ws_item_sk
LEFT JOIN country_counts cc ON cc.ca_country = (SELECT ca.ca_country
                                                FROM customer_address ca
                                                WHERE ca.ca_address_sk = cd.c_current_addr_sk)
WHERE (cd.cd_purchase_estimate IS NULL OR cd.cd_purchase_estimate > 1000 OR cd.cd_credit_rating = 'Good')
AND (cd.cd_gender IS NOT NULL AND cd.cd_gender = 'F')
ORDER BY ss.total_net_profit DESC, cd.c_last_name
LIMIT 100 OFFSET (SELECT COUNT(*) FROM customer_data) / 2;
