WITH RECURSIVE sales_hierarchy AS (
    SELECT 
        s_store_sk,
        s_store_name,
        s_number_employees,
        s_floor_space,
        s_market_id,
        1 AS level
    FROM 
        store
    WHERE 
        s_store_id = 'S1'
    
    UNION ALL
    
    SELECT 
        s.s_store_sk,
        s.s_store_name,
        s.s_number_employees,
        s.s_floor_space,
        s.s_market_id,
        sh.level + 1
    FROM 
        store s
    JOIN 
        sales_hierarchy sh ON s.s_market_id = sh.s_market_id
    WHERE 
        sh.level < 3 
),

customer_sales AS (
    SELECT 
        c.c_customer_sk,
        SUM(ws.ws_net_profit) AS total_profit,
        COUNT(DISTINCT ws.ws_order_number) AS total_orders
    FROM 
        customer c
    LEFT JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_ship_customer_sk
    GROUP BY 
        c.c_customer_sk
),

top_customers AS (
    SELECT 
        c.c_customer_sk,
        cd.cd_gender,
        cd.cd_marital_status,
        cs.total_profit,
        RANK() OVER (PARTITION BY cd.cd_gender, cd.cd_marital_status ORDER BY cs.total_profit DESC) AS customer_rank
    FROM 
        customer_sales cs
    JOIN 
        customer c ON cs.c_customer_sk = c.c_customer_sk
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
)

SELECT 
    sh.s_store_name,
    sh.s_number_employees,
    sh.s_floor_space,
    tc.cd_gender,
    tc.cd_marital_status,
    tc.total_profit,
    tc.total_orders
FROM 
    sales_hierarchy sh
LEFT JOIN 
    top_customers tc ON tc.total_profit > 1000 
WHERE 
    sh.level = 2 
ORDER BY 
    sh.s_store_name, tc.total_profit DESC;