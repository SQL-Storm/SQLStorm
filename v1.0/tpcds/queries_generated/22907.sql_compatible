
WITH RankedSales AS (
    SELECT 
        ws.web_site_sk,
        ws_net_profit,
        RANK() OVER (PARTITION BY ws.web_site_sk ORDER BY ws_net_profit DESC) AS profit_rank,
        SUM(ws_quantity) OVER (PARTITION BY ws.web_site_sk) AS total_quantity,
        SUM(ws_net_paid) OVER (PARTITION BY ws.web_site_sk) AS total_net_paid
    FROM 
        web_sales ws
    WHERE 
        ws_sales_price IS NOT NULL
),
CustomerReturns AS (
    SELECT 
        wr_refunded_customer_sk,
        COUNT(DISTINCT wr_order_number) AS total_returns,
        SUM(wr_return_amt) AS total_returned_amount
    FROM 
        web_returns
    GROUP BY 
        wr_refunded_customer_sk
),
CustomerData AS (
    SELECT 
        c.c_customer_id,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_purchase_estimate,
        ca.ca_city,
        COALESCE(NULLIF(cd.cd_credit_rating, ''), 'Unknown') AS credit_rating,
        COALESCE(SUM(cr.cr_return_quantity), 0) AS return_count,
        COALESCE(SUM(cr.cr_return_amount), 0) AS return_amount
    FROM 
        customer c
    LEFT JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN 
        customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
    LEFT JOIN 
        catalog_returns cr ON c.c_customer_sk = cr.cr_returning_customer_sk
    GROUP BY 
        c.c_customer_id, cd.cd_gender, cd.cd_marital_status, cd.cd_purchase_estimate, ca.ca_city, cd.cd_credit_rating
),
HighValueCustomers AS (
    SELECT 
        cd.c_customer_id,
        cd.cd_gender,
        cd.cd_marital_status,
        rs.total_quantity,
        rs.total_net_paid,
        cd.return_count,
        cd.return_amount,
        RANK() OVER (ORDER BY rs.total_net_paid DESC) AS value_rank
    FROM 
        CustomerData cd
    JOIN 
        RankedSales rs ON cd.c_customer_id = rs.web_site_sk
    WHERE 
        rs.profit_rank = 1
)
SELECT 
    d.c_customer_id,
    d.cd_gender,
    d.cd_marital_status,
    d.return_count,
    d.return_amount,
    CASE 
        WHEN d.return_amount > 100 THEN 'High Return'
        WHEN d.return_amount BETWEEN 50 AND 100 THEN 'Medium Return'
        ELSE 'Low Return' 
    END AS return_category
FROM 
    HighValueCustomers d
WHERE 
    d.value_rank <= 10
ORDER BY 
    d.return_amount DESC
UNION ALL
SELECT 
    NULL AS c_customer_id,
    'Aggregate' AS cd_gender,
    'Aggregate' AS cd_marital_status,
    COUNT(*) AS return_count,
    SUM(return_amount) AS return_amount
FROM 
    HighValueCustomers
WHERE 
    return_amount IS NOT NULL
GROUP BY 
    NULL
HAVING 
    COUNT(*) > 0;
