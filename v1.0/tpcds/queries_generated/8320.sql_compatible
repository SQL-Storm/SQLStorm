
WITH CustomerOrders AS (
    SELECT 
        c.c_customer_id,
        SUM(CASE 
            WHEN ws.o_order_number IS NOT NULL THEN ws.ws_ext_sales_price 
            ELSE 0 
        END) AS total_web_sales,
        SUM(CASE 
            WHEN cs.o_order_number IS NOT NULL THEN cs.cs_ext_sales_price 
            ELSE 0 
        END) AS total_catalog_sales,
        COUNT(DISTINCT ws.ws_order_number) AS total_web_orders,
        COUNT(DISTINCT cs.cs_order_number) AS total_catalog_orders
    FROM 
        customer c
    LEFT JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    LEFT JOIN 
        catalog_sales cs ON c.c_customer_sk = cs.cs_bill_customer_sk
    GROUP BY 
        c.c_customer_id
),
CustomerDemographics AS (
    SELECT 
        cd.cd_demo_sk,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_education_status,
        cd.cd_purchase_estimate,
        c.c_customer_id
    FROM 
        customer_demographics cd
    INNER JOIN 
        customer c ON cd.cd_demo_sk = c.c_current_cdemo_sk
),
TotalSales AS (
    SELECT 
        co.c_customer_id,
        co.total_web_sales,
        co.total_catalog_sales,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_education_status
    FROM 
        CustomerOrders co
    JOIN 
        CustomerDemographics cd ON co.c_customer_id = cd.c_customer_id
)
SELECT 
    cs.cd_gender,
    cs.cd_marital_status,
    COUNT(DISTINCT cs.c_customer_id) AS customer_count,
    SUM(cs.total_web_sales) AS total_web_sales,
    SUM(cs.total_catalog_sales) AS total_catalog_sales
FROM 
    TotalSales cs
JOIN 
    income_band ib ON cs.total_web_sales BETWEEN ib.ib_lower_bound AND ib.ib_upper_bound
WHERE 
    cs.total_web_sales > 1000
GROUP BY 
    cs.cd_gender, 
    cs.cd_marital_status
ORDER BY 
    total_web_sales DESC, 
    total_catalog_sales DESC;
