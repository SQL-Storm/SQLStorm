
WITH CustomerStats AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_dependents_count,
        SUM(ss.ss_ext_sales_price) AS total_sales,
        AVG(ss.ss_sales_price) AS avg_sales_price,
        COUNT(DISTINCT ss.ss_ticket_number) AS purchase_count
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN 
        store_sales ss ON c.c_customer_sk = ss.ss_customer_sk
    GROUP BY 
        c.c_customer_sk, c.c_first_name, c.c_last_name, cd.cd_gender, cd.cd_marital_status, cd.cd_dependents_count
),
HighValueCustomers AS (
    SELECT 
        c.c_customer_sk,
        cs.total_sales,
        cs.avg_sales_price
    FROM 
        CustomerStats cs
    JOIN 
        customer c ON cs.c_customer_sk = c.c_customer_sk
    WHERE 
        cs.total_sales > (
            SELECT 
                AVG(total_sales)
            FROM 
                CustomerStats
        )
)
SELECT 
    c.c_customer_sk,
    c.c_first_name,
    c.c_last_name,
    cs.total_sales,
    cs.avg_sales_price,
    COALESCE(i.inv_quantity_on_hand, 0) AS inventory_on_hand,
    d.d_date AS purchase_date,
    COUNT(DISTINCT wr.wr_order_number) AS web_returns_count,
    COUNT(DISTINCT sr.sr_order_number) AS store_returns_count
FROM 
    HighValueCustomers hvc
LEFT JOIN 
    inventory i ON hvc.c_customer_sk = i.inv_item_sk
LEFT JOIN 
    web_returns wr ON hvc.c_customer_sk = wr.wr_returning_customer_sk
LEFT JOIN 
    store_returns sr ON hvc.c_customer_sk = sr.sr_customer_sk
JOIN 
    date_dim d ON d.d_date_sk = (SELECT MAX(d2.d_date_sk) FROM date_dim d2 WHERE d2.d_date <= '2002-10-01')
JOIN 
    store_sales ss ON hvc.c_customer_sk = ss.ss_customer_sk
GROUP BY 
    c.c_customer_sk, c.c_first_name, c.c_last_name, cs.total_sales, cs.avg_sales_price, i.inv_quantity_on_hand, d.d_date
ORDER BY 
    cs.total_sales DESC, c.c_last_name ASC;
