
WITH RankedSales AS (
    SELECT 
        ws.ws_item_sk,
        ws.ws_order_number,
        ws.ws_sales_price,
        ws.ws_quantity,
        ROW_NUMBER() OVER (PARTITION BY ws.ws_item_sk ORDER BY ws.ws_sales_price DESC) AS Rank
    FROM 
        web_sales ws
    WHERE 
        ws.ws_sold_date_sk >= 2451545 
),
SalesSummary AS (
    SELECT 
        r.ws_item_sk,
        SUM(r.ws_quantity) AS total_quantity,
        SUM(r.ws_sales_price) AS total_sales,
        AVG(r.ws_sales_price) AS avg_sales_price
    FROM 
        RankedSales r
    WHERE 
        r.Rank <= 10
    GROUP BY 
        r.ws_item_sk
),
CustomerReturns AS (
    SELECT 
        sr_returning_customer_sk,
        COUNT(DISTINCT sr_returned_date_sk) AS return_days,
        SUM(sr_return_quantity) AS total_returned
    FROM 
        store_returns
    WHERE 
        sr_returned_date_sk >= 2451545
    GROUP BY 
        sr_returning_customer_sk
)
SELECT 
    c.c_customer_id,
    COALESCE(cs.total_quantity, 0) AS total_purchased,
    COALESCE(cs.total_sales, 0) AS total_spent,
    COALESCE(cr.return_days, 0) AS return_days,
    COALESCE(cr.total_returned, 0) AS total_returned,
    CASE
        WHEN COALESCE(cr.total_returned, 0) = 0 THEN 'No Returns'
        WHEN COALESCE(cr.total_returned, 0) < 5 THEN 'Few Returns'
        ELSE 'Frequent Returns'
    END AS return_category
FROM 
    customer c
LEFT JOIN 
    SalesSummary cs ON c.c_customer_sk = cs.ws_item_sk
LEFT JOIN 
    CustomerReturns cr ON c.c_customer_sk = cr.sr_returning_customer_sk
WHERE 
    c.c_birth_year BETWEEN 1980 AND 1990
AND 
    c.c_current_cdemo_sk IS NOT NULL
ORDER BY 
    total_spent DESC
LIMIT 100;
