
WITH sales_summary AS (
    SELECT 
        i.i_item_id,
        SUM(ws.ws_quantity) AS total_quantity_sold,
        SUM(ws.ws_ext_sales_price) AS total_sales,
        AVG(ws.ws_sales_price) AS avg_sales_price,
        COUNT(DISTINCT ws.ws_order_number) AS order_count
    FROM 
        web_sales ws
    JOIN 
        item i ON ws.ws_item_sk = i.i_item_sk
    WHERE 
        ws.ws_sold_date_sk BETWEEN (SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = 2023) - 30 AND (SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = 2023)
    GROUP BY 
        i.i_item_id
),
demographics_summary AS (
    SELECT 
        cd.cd_gender,
        COUNT(DISTINCT c.c_customer_sk) AS customer_count,
        SUM(ss.total_quantity_sold) AS total_quantity,
        SUM(ss.total_sales) AS total_sales
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    JOIN 
        sales_summary ss ON c.c_customer_sk = ss.i_item_id
    GROUP BY 
        cd.cd_gender
)
SELECT 
    ds.cd_gender,
    ds.customer_count,
    ds.total_quantity,
    ds.total_sales,
    CASE WHEN ds.total_quantity > 0 THEN ds.total_sales / ds.total_quantity ELSE NULL END AS avg_sales_per_customer
FROM 
    demographics_summary ds
WHERE 
    ds.customer_count > 0
ORDER BY 
    ds.total_sales DESC
FETCH FIRST 10 ROWS ONLY;
