WITH CustomerSales AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        COALESCE(SUM(ws.ws_quantity), 0) AS total_quantity,
        COALESCE(SUM(ws.ws_net_paid), 0) AS total_spent,
        COUNT(DISTINCT ws.ws_order_number) AS total_orders
    FROM 
        customer c
    LEFT JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY 
        c.c_customer_sk, c.c_first_name, c.c_last_name
),
CustomerDemographics AS (
    SELECT 
        cd.cd_demo_sk,
        cd.cd_gender,
        CASE 
            WHEN cd.cd_marital_status = 'M' THEN 'Married'
            WHEN cd.cd_marital_status = 'S' THEN 'Single'
            ELSE 'Other' 
        END AS marital_status,
        cd.cd_purchase_estimate
    FROM 
        customer_demographics cd
),
AgedCustomers AS (
    SELECT 
        c.c_customer_sk,
        c.c_birth_year,
        EXTRACT(YEAR FROM cast('2002-10-01' as date)) - c.c_birth_year AS age,
        CASE 
            WHEN EXTRACT(YEAR FROM cast('2002-10-01' as date)) - c.c_birth_year < 18 THEN 'Under 18'
            WHEN EXTRACT(YEAR FROM cast('2002-10-01' as date)) - c.c_birth_year BETWEEN 18 AND 30 THEN '18-30'
            WHEN EXTRACT(YEAR FROM cast('2002-10-01' as date)) - c.c_birth_year BETWEEN 31 AND 50 THEN '31-50'
            ELSE 'Over 50'
        END AS age_group
    FROM 
        customer c
),
SalesAnalysis AS (
    SELECT 
        cs.c_customer_sk,
        cs.total_quantity,
        cd.cd_gender,
        cd.marital_status,
        ac.age_group,
        cs.total_spent,
        ROW_NUMBER() OVER (PARTITION BY cd.cd_gender ORDER BY cs.total_spent DESC) AS rank
    FROM 
        CustomerSales cs
    JOIN 
        customer_demographics cd ON cs.c_customer_sk = c.c_customer_sk
    JOIN 
        AgedCustomers ac ON cs.c_customer_sk = ac.c_customer_sk
)
SELECT 
    s.cd_gender,
    s.marital_status,
    s.age_group,
    AVG(s.total_spent) AS average_spent,
    SUM(s.total_quantity) AS total_quantity,
    COUNT(DISTINCT s.c_customer_sk) AS unique_customers
FROM 
    SalesAnalysis s
WHERE 
    s.rank <= 10
GROUP BY 
    s.cd_gender, s.marital_status, s.age_group
ORDER BY 
    s.cd_gender, average_spent DESC
UNION ALL
SELECT 
    'Total' AS cd_gender,
    NULL AS marital_status,
    NULL AS age_group,
    AVG(total_spent) AS average_spent,
    SUM(total_quantity) AS total_quantity,
    COUNT(DISTINCT c_customer_sk) AS unique_customers
FROM 
    SalesAnalysis
HAVING AVG(total_spent) > 1000
ORDER BY 
    CASE 
        WHEN cd_gender = 'Total' THEN 1 
        ELSE 0 
    END, average_spent DESC;