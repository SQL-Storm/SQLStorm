
WITH RECURSIVE Sales_CTE AS (
    SELECT 
        ws.ws_order_number,
        ws.ws_item_sk,
        ws.ws_quantity,
        ws.ws_ext_sales_price,
        ws.ws_sold_date_sk,
        ROW_NUMBER() OVER (PARTITION BY ws.ws_item_sk ORDER BY ws.ws_sold_date_sk DESC) AS rn
    FROM 
        web_sales ws
    WHERE 
        ws.ws_sold_date_sk BETWEEN 1000 AND 2000
),
Customer_Summary AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        SUM(ws.ws_ext_sales_price) AS total_sales,
        COUNT(DISTINCT ws.ws_order_number) AS order_count
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    WHERE 
        cd.cd_gender = 'F' AND
        c.c_birth_year >= 1985
    GROUP BY 
        c.c_customer_sk, c.c_first_name, c.c_last_name, cd.cd_gender
),
Sales_Analysis AS (
    SELECT 
        ss.ss_ticket_number,
        ss.ss_item_sk,
        SUM(ss.ss_ext_sales_price) AS store_sales,
        COUNT(DISTINCT ss.ss_customer_sk) AS unique_customers,
        COUNT(ss.ss_ticket_number) AS total_tickets
    FROM 
        store_sales ss
    JOIN 
        Sales_CTE sales ON ss.ss_item_sk = sales.ws_item_sk
    WHERE 
        ss.ss_sold_date_sk IN (SELECT DISTINCT ws_sold_date_sk FROM web_sales WHERE ws_sales_price > 50)
    GROUP BY 
        ss.ss_ticket_number, ss.ss_item_sk
)
SELECT 
    cs.c_first_name,
    cs.c_last_name,
    cs.total_sales,
    COALESCE(sa.store_sales, 0) AS store_sales,
    COALESCE(sa.unique_customers, 0) AS unique_customers,
    CASE 
        WHEN cs.order_count > 0 THEN 'Active Customer'
        ELSE 'Inactive Customer'
    END AS customer_status
FROM 
    Customer_Summary cs
LEFT JOIN 
    Sales_Analysis sa ON cs.c_customer_sk = sa.ss_customer_sk
ORDER BY 
    cs.total_sales DESC, customer_status;
