
WITH RecursiveSales AS (
    SELECT 
        ws.web_site_sk,
        SUM(ws.ws_quantity) AS total_sales,
        COUNT(*) AS order_count,
        ROW_NUMBER() OVER (PARTITION BY ws.web_site_sk ORDER BY SUM(ws.ws_sales_price) DESC) AS sales_rank
    FROM web_sales ws
    WHERE ws.ws_sold_date_sk IN (
        SELECT d_date_sk 
        FROM date_dim 
        WHERE d_year = 2023 AND d_month_seq BETWEEN 1 AND 6
    )
    GROUP BY ws.web_site_sk
),
CustomerOrderStats AS (
    SELECT 
        c.c_customer_id,
        c.c_first_name,
        c.c_last_name,
        COUNT(DISTINCT ws.ws_order_number) AS total_orders,
        COALESCE(SUM(ws.ws_ext_sales_price), 0) AS total_spent,
        ROW_NUMBER() OVER (ORDER BY COALESCE(SUM(ws.ws_ext_sales_price), 0) DESC) AS spend_rank,
        MAX(ws.ws_net_profit) AS max_profit
    FROM customer c
    LEFT JOIN web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY c.c_customer_id, c.c_first_name, c.c_last_name
),
TopCustomers AS (
    SELECT 
        c_customer_id,
        c_first_name,
        c_last_name,
        total_orders,
        total_spent,
        spend_rank
    FROM CustomerOrderStats
    WHERE spend_rank <= 10
),
WarehouseInventory AS (
    SELECT
        inv.inv_warehouse_sk,
        SUM(inv.inv_quantity_on_hand) AS total_inventory,
        w.w_warehouse_name
    FROM inventory inv
    JOIN warehouse w ON inv.inv_warehouse_sk = w.w_warehouse_sk
    GROUP BY inv.inv_warehouse_sk, w.w_warehouse_name
),
SalesByTime AS (
    SELECT
        d.d_week_seq,
        SUM(ws.ws_ext_sales_price) AS weekly_sales
    FROM web_sales ws
    JOIN date_dim d ON ws.ws_sold_date_sk = d.d_date_sk
    WHERE d.d_year = 2023
    GROUP BY d.d_week_seq
)
SELECT 
    tc.c_customer_id AS customer_id,
    tc.c_first_name,
    tc.c_last_name,
    ri.total_inventory,
    COALESCE(sbt.weekly_sales, 0) AS sales_this_week,
    rs.total_sales AS site_total_sales,
    CASE 
        WHEN ri.total_inventory < 100 THEN 'Low Inventory'
        WHEN rs.sales_rank < 5 THEN 'Top Seller'
        ELSE 'Regular'
    END AS customer_status
FROM TopCustomers tc
JOIN WarehouseInventory ri ON ri.inv_warehouse_sk = (
    SELECT inv.inv_warehouse_sk
    FROM inventory inv
    WHERE inv.inv_quantity_on_hand = (SELECT MAX(inv2.inv_quantity_on_hand) FROM inventory inv2)
    FETCH FIRST 1 ROW ONLY
)
LEFT JOIN RecursiveSales rs ON tc.c_customer_id = (
    SELECT c.c_customer_id 
    FROM customer c
    WHERE c.c_current_addr_sk = (
        SELECT ca.ca_address_sk
        FROM customer_address ca
        WHERE ca.ca_city = 'New York'
        FETCH FIRST 1 ROW ONLY
    )
)
LEFT JOIN SalesByTime sbt ON sbt.d_week_seq = (
    SELECT d.d_week_seq
    FROM date_dim d
    WHERE d.d_current_week = 'Y'
);
