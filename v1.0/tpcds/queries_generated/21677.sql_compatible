
WITH customer_sales AS (
    SELECT 
        c.c_customer_id,
        c.c_first_name,
        c.c_last_name,
        SUM(ws.ws_sales_price) AS total_sales,
        COUNT(ws.ws_order_number) AS order_count,
        ROW_NUMBER() OVER (PARTITION BY c.c_customer_id ORDER BY SUM(ws.ws_sales_price) DESC) AS sales_rank
    FROM 
        customer c
    LEFT JOIN 
        web_sales ws ON c.c_customer_sk = ws.ws_bill_customer_sk
    GROUP BY 
        c.c_customer_id, c.c_first_name, c.c_last_name
), 
customer_returns AS (
    SELECT 
        wr.returning_customer_sk,
        SUM(wr.wr_return_amt) AS total_returns,
        COUNT(wr.wr_order_number) AS return_count
    FROM 
        web_returns wr
    GROUP BY 
        wr.returning_customer_sk
), 
customer_summary AS (
    SELECT 
        cs.c_customer_id,
        cs.c_first_name,
        cs.c_last_name,
        cs.total_sales,
        cs.order_count,
        COALESCE(cr.total_returns, 0) AS total_returns,
        COALESCE(cr.return_count, 0) AS return_count,
        (COALESCE(cr.total_returns, 0) / NULLIF(cs.total_sales, 0)) * 100 AS return_rate
    FROM 
        customer_sales cs
    LEFT JOIN 
        customer_returns cr ON cs.c_customer_id = cr.returning_customer_sk
)
SELECT 
    cs.*,
    CASE 
        WHEN return_rate IS NULL THEN 'No Sales'
        WHEN return_rate > 50 THEN 'High Return Rate'
        WHEN return_rate BETWEEN 20 AND 50 THEN 'Moderate Return Rate'
        ELSE 'Low Return Rate'
    END AS return_category
FROM 
    customer_summary cs
WHERE 
    cs.total_sales > 1000
ORDER BY 
    cs.total_sales DESC
LIMIT 10;
