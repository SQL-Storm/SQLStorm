WITH ranked_sales AS (
    SELECT 
        ws.web_site_sk,
        SUM(ws.ws_sales_price) AS total_sales,
        COUNT(ws.ws_order_number) AS num_orders,
        RANK() OVER (PARTITION BY ws.web_site_sk ORDER BY SUM(ws.ws_sales_price) DESC) AS sales_rank
    FROM web_sales ws
    INNER JOIN date_dim dd ON ws.ws_sold_date_sk = dd.d_date_sk 
    WHERE dd.d_year = 2001 AND dd.d_month_seq IN (1, 2, 3) 
    GROUP BY ws.web_site_sk
),
customer_info AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        ca.ca_city,
        COALESCE(hd.hd_income_band_sk, 0) AS income_band
    FROM customer c
    LEFT JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
    LEFT JOIN household_demographics hd ON c.c_current_hdemo_sk = hd.hd_demo_sk
),
sales_summary AS (
    SELECT 
        ci.c_customer_sk,
        ci.c_first_name,
        ci.c_last_name,
        ci.cd_gender,
        ci.cd_marital_status,
        ci.ca_city,
        rs.total_sales,
        rs.num_orders,
        CASE
            WHEN rs.total_sales > 1000 THEN 'High'
            WHEN rs.total_sales BETWEEN 500 AND 1000 THEN 'Medium'
            ELSE 'Low'
        END AS sales_category
    FROM customer_info ci
    INNER JOIN ranked_sales rs ON ci.c_customer_sk = rs.web_site_sk
    WHERE rs.sales_rank = 1
)
SELECT 
    s.sales_category,
    COUNT(s.c_customer_sk) AS customer_count,
    AVG(s.total_sales) AS avg_sales
FROM sales_summary s
GROUP BY s.sales_category
ORDER BY FIELD(s.sales_category, 'High', 'Medium', 'Low');