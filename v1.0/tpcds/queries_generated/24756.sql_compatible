
WITH RankedSales AS (
    SELECT 
        ws_bill_customer_sk,
        SUM(ws_net_paid_inc_tax) AS total_spent,
        RANK() OVER (PARTITION BY ws_bill_customer_sk ORDER BY SUM(ws_net_paid_inc_tax) DESC) AS rank_total
    FROM 
        web_sales
    GROUP BY 
        ws_bill_customer_sk
),
HighValueCustomers AS (
    SELECT 
        c.c_customer_id,
        c.c_first_name,
        c.c_last_name,
        r.total_spent,
        CASE 
            WHEN cd.gender = 'M' THEN 'Mr. ' || c.c_first_name 
            WHEN cd.gender = 'F' THEN 'Ms. ' || c.c_first_name 
            ELSE c.c_first_name 
        END AS full_name
    FROM 
        customer c
        JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
        JOIN RankedSales r ON c.c_customer_sk = r.ws_bill_customer_sk
    WHERE r.rank_total = 1
),
StoreProductReturns AS (
    SELECT 
        sr_store_sk,
        SUM(sr_return_qty) AS total_returns,
        COALESCE(SUM(sr_return_qty), 0) AS adjusted_returns
    FROM 
        store_returns
    GROUP BY 
        sr_store_sk
),
WebSalesSummary AS (
    SELECT
        ws_web_page_sk,
        COUNT(DISTINCT ws_order_number) AS total_orders,
        AVG(ws_net_paid_inc_tax) AS avg_net_paid
    FROM 
        web_sales
    GROUP BY 
        ws_web_page_sk
),
CustomerWebPageData AS (
    SELECT 
        w.web_site_id,
        w.web_name,
        p.wp_web_page_id,
        p.wp_type,
        ws.total_orders,
        COALESCE(ws.avg_net_paid, 0) AS avg_payment,
        ROW_NUMBER() OVER (PARTITION BY p.wp_web_page_id ORDER BY ws.total_orders DESC) AS order_rank
    FROM 
        web_site w
        LEFT JOIN web_page p ON w.web_site_sk = p.wp_web_site_sk
        LEFT JOIN WebSalesSummary ws ON p.wp_web_page_sk = ws.ws_web_page_sk
)
SELECT 
    cvc.full_name,
    cvc.total_spent,
    sw.total_returns,
    cw.web_site_id,
    cw.web_name,
    cw.wp_web_page_id,
    cw.avg_payment
FROM 
    HighValueCustomers cvc
    LEFT JOIN StoreProductReturns sw ON cvc.c_customer_id = (
        SELECT COALESCE(c.c_customer_id, 'Unknown')
        FROM customer c
        WHERE c.c_customer_sk = cvc.c_customer_sk
        LIMIT 1
    )
    LEFT JOIN CustomerWebPageData cw ON cvc.c_customer_id = (
        SELECT COALESCE(c.c_customer_id, 'Unknown')
        FROM customer c
        WHERE c.c_current_cdemo_sk = cvc.c_current_cdemo_sk
        LIMIT 1
    )
WHERE 
    sw.adjusted_returns > 0
ORDER BY 
    cvc.total_spent DESC,
    cw.total_orders DESC;
