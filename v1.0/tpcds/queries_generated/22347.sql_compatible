
WITH CustomerReturns AS (
    SELECT 
        cr.returning_customer_sk AS returning_customer_id,
        SUM(cr.return_quantity) AS total_returned_qty,
        SUM(cr_return_amt_inc_tax) AS total_returned_amt 
    FROM 
        catalog_returns cr 
    JOIN 
        customer c ON cr.returning_customer_sk = c.c_customer_sk 
    WHERE 
        cr.returning_customer_sk IS NOT NULL 
        AND cr.returned_date_sk IN (SELECT d_date_sk FROM date_dim WHERE d_year = 2023)
    GROUP BY 
        cr.returning_customer_sk
), 
WarehouseInfo AS (
    SELECT 
        w.w_warehouse_id,
        SUM(i.inv_quantity_on_hand) AS total_inventory,
        w.w_country 
    FROM 
        inventory i 
    JOIN 
        warehouse w ON i.inv_warehouse_sk = w.w_warehouse_sk 
    GROUP BY 
        w.w_warehouse_id, w.w_country
), 
SalesAggregation AS (
    SELECT 
        ws_ship_mode_sk,
        SUM(ws_quantity) AS total_sales_qty,
        AVG(ws_sales_price) AS average_sales_price,
        COUNT(DISTINCT ws_order_number) AS distinct_orders
    FROM 
        web_sales 
    WHERE 
        ws_sold_date_sk >= (SELECT MIN(d_date_sk) FROM date_dim WHERE d_year = 2023)
        AND ws_sold_date_sk <= (SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = 2023)
    GROUP BY 
        ws_ship_mode_sk
)
SELECT 
    c.c_customer_id,
    COALESCE(cdr.total_returned_qty, 0) AS return_quantity,
    COALESCE(cdr.total_returned_amt, 0) AS return_amount,
    wi.total_inventory,
    sa.total_sales_qty,
    sa.average_sales_price,
    CASE 
        WHEN sa.total_sales_qty > 0 THEN 'Active Customer' 
        ELSE 'Inactive Customer' 
    END AS customer_status 
FROM 
    customer c 
LEFT JOIN 
    CustomerReturns cdr ON c.c_customer_sk = cdr.returning_customer_id 
LEFT JOIN 
    WarehouseInfo wi ON wi.w_country = (SELECT ca_country FROM customer_address WHERE ca_address_sk = c.c_current_addr_sk) 
LEFT JOIN 
    SalesAggregation sa ON sa.ws_ship_mode_sk = (SELECT sm_ship_mode_sk FROM ship_mode WHERE sm_code = 'STANDARD') 
WHERE 
    c.c_birth_year IS NOT NULL 
    AND c.c_birth_month < 6 
    AND c.c_preferred_cust_flag = 'Y'
ORDER BY 
    return_amount DESC, 
    return_quantity ASC
LIMIT 100;
