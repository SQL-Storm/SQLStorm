
WITH RECURSIVE SalesData AS (
    SELECT 
        ws_sold_date_sk,
        ws_item_sk,
        ws_quantity,
        ws_sales_price,
        ws_net_paid,
        ROW_NUMBER() OVER(PARTITION BY ws_item_sk ORDER BY ws_sold_date_sk DESC) AS rn
    FROM web_sales
    WHERE ws_sold_date_sk >= (SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = 2023) - INTERVAL '30 days'
),
TopSales AS (
    SELECT 
        item.i_item_id,
        item.i_product_name,
        SUM(sd.ws_quantity) AS total_quantity,
        SUM(sd.ws_sales_price) AS total_sales,
        SUM(sd.ws_net_paid) AS total_net_paid
    FROM SalesData sd
    JOIN item ON sd.ws_item_sk = item.i_item_sk
    WHERE sd.rn <= 5
    GROUP BY item.i_item_id, item.i_product_name
),
CustomerReturns AS (
    SELECT 
        sr_item_sk,
        COUNT(DISTINCT sr_ticket_number) AS return_count,
        SUM(sr_return_amt) AS total_return_amount
    FROM store_returns
    GROUP BY sr_item_sk
)
SELECT 
    ts.i_item_id,
    ts.i_product_name,
    ts.total_quantity,
    ts.total_sales,
    ts.total_net_paid,
    COALESCE(cr.return_count, 0) AS return_count,
    COALESCE(cr.total_return_amount, 0) AS total_return_amount,
    (ts.total_net_paid - COALESCE(cr.total_return_amount, 0)) AS net_profit_adjusted
FROM TopSales ts
LEFT JOIN CustomerReturns cr ON ts.i_item_id = cr.sr_item_sk
ORDER BY net_profit_adjusted DESC
LIMIT 10;
