
WITH CustomerReturns AS (
    SELECT 
        sr_customer_sk,
        SUM(sr_return_quantity) AS total_return_quantity,
        SUM(sr_return_amt_inc_tax) AS total_return_amt,
        COUNT(CASE WHEN sr_reason_sk IS NOT NULL THEN 1 END) AS reason_count
    FROM 
        store_returns 
    GROUP BY 
        sr_customer_sk
),
SalesSummary AS (
    SELECT 
        ws_bill_customer_sk,
        SUM(ws_quantity) AS total_quantity,
        SUM(ws_sales_price) AS total_sales_amt,
        DENSE_RANK() OVER (ORDER BY SUM(ws_sales_price) DESC) AS sales_rank
    FROM 
        web_sales 
    WHERE 
        ws_sold_date_sk BETWEEN 20220101 AND 20221231
    GROUP BY 
        ws_bill_customer_sk
),
ReturnAnalysis AS (
    SELECT 
        cs_bill_customer_sk,
        COALESCE(total_return_quantity, 0) AS total_return_quantity,
        COALESCE(total_return_amt, 0) AS total_return_amt,
        total_sales_amt,
        total_sales_amt - COALESCE(total_return_amt, 0) AS net_sales_amt,
        CASE 
            WHEN total_return_quantity > 0 THEN 'Returned'
            ELSE 'Non-Returned'
        END AS return_status
    FROM 
        SalesSummary 
    LEFT JOIN 
        CustomerReturns ON SalesSummary.ws_bill_customer_sk = CustomerReturns.sr_customer_sk
)
SELECT 
    c.c_first_name,
    c.c_last_name,
    ra.return_status,
    ra.total_sales_amt,
    ra.total_return_amt,
    ra.net_sales_amt,
    ROW_NUMBER() OVER (PARTITION BY ra.return_status ORDER BY ra.net_sales_amt DESC) AS rank_within_status
FROM 
    ReturnAnalysis ra
JOIN 
    customer c ON ra.cs_bill_customer_sk = c.c_customer_sk
WHERE 
    (ra.total_return_amt < 100) 
    AND c.c_birth_year BETWEEN 1980 AND 2000
ORDER BY 
    ra.return_status, rank_within_status;
