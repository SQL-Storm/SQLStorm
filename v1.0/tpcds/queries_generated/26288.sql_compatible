
WITH AddressSegments AS (
    SELECT 
        ca_address_sk,
        ca_street_number,
        ca_street_name,
        ca_street_type,
        ca_city,
        ca_state,
        CONCAT(ca_street_number, ' ', ca_street_name, ' ', ca_street_type, ', ', ca_city, ', ', ca_state) AS full_address
    FROM 
        customer_address
),
CustomerDetails AS (
    SELECT
        c.c_customer_id,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_education_status,
        ad.full_address
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    JOIN 
        AddressSegments ad ON c.c_current_addr_sk = ad.ca_address_sk
),
SalesData AS (
    SELECT
        ws.ws_order_number,
        ws.ws_sales_price,
        ws.ws_net_profit,
        c.c_customer_id,
        c.full_address
    FROM 
        web_sales ws
    JOIN 
        CustomerDetails c ON ws.ws_bill_customer_sk = c.c_customer_id
),
TotalSales AS (
    SELECT
        s.c_customer_id AS customer_id,
        COUNT(s.ws_order_number) AS total_orders,
        SUM(s.ws_sales_price) AS total_revenue,
        SUM(s.ws_net_profit) AS total_profit
    FROM 
        SalesData s
    GROUP BY 
        s.c_customer_id
)
SELECT 
    customer_id,
    total_orders,
    total_revenue,
    total_profit,
    CASE 
        WHEN total_revenue > 1000 THEN 'High Value'
        WHEN total_revenue BETWEEN 500 AND 1000 THEN 'Medium Value'
        ELSE 'Low Value'
    END AS customer_value_segment
FROM 
    TotalSales
ORDER BY 
    total_revenue DESC;
