
WITH RecursivePromotionCTE AS (
    SELECT p.promo_sk, p.promo_name, p.start_date_sk, p.end_date_sk, 
           ROW_NUMBER() OVER (PARTITION BY p.promo_name ORDER BY p.start_date_sk) AS promo_instance
    FROM promotion p
    WHERE p.discount_active = 'Y'
), AddressCTE AS (
    SELECT ca_address_sk, 
           COALESCE(NULLIF(ca_city, ''), 'Unknown') AS resolved_city,
           CASE 
               WHEN ca_state IS NULL THEN 'Undefined State' 
               ELSE ca_state 
           END AS resolved_state
    FROM customer_address
), CustomerDetails AS (
    SELECT c.c_customer_sk, c.c_first_name, c.c_last_name, 
           cd.cd_gender, cd.cd_marital_status,
           da.resolved_city, da.resolved_state,
           COUNT(DISTINCT wr.return_order_number) AS web_returns_count
    FROM customer c
    JOIN customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    LEFT JOIN AddressCTE da ON c.c_current_addr_sk = da.ca_address_sk
    LEFT JOIN web_returns wr ON c.c_customer_sk = wr.returning_customer_sk
    WHERE (cd.cd_purchase_estimate > 1000 AND cd.cd_marital_status <> 'D')
      OR (cd.cd_gender = 'F' AND da.resolved_city LIKE 'New%')
    GROUP BY c.c_customer_sk, c.c_first_name, c.c_last_name, 
             cd.cd_gender, cd.cd_marital_status, 
             da.resolved_city, da.resolved_state
), ItemSales AS (
    SELECT ws.ws_item_sk, SUM(ws.ws_quantity) AS total_sales,
           SUM(ws.ws_net_profit) AS total_profit
    FROM web_sales ws
    GROUP BY ws.ws_item_sk
), CustomerSales AS (
    SELECT cs.cs_bill_customer_sk, COALESCE(SUM(cs.cs_ext_sales_price), 0) AS total_spent
    FROM catalog_sales cs
    WHERE cs.cs_sold_date_sk BETWEEN 1 AND 365
    GROUP BY cs.cs_bill_customer_sk
), FinalAnalysis AS (
    SELECT cd.c_customer_sk, cd.c_first_name, cd.c_last_name, 
           cd.resolved_city, cd.resolved_state,
           COALESCE(cs.total_spent, 0) AS total_spent,
           COALESCE(SUM(is.total_profit), 0) AS total_profit_from_items
    FROM CustomerDetails cd
    LEFT JOIN CustomerSales cs ON cd.c_customer_sk = cs.cs_bill_customer_sk
    LEFT JOIN ItemSales is ON cd.c_customer_sk = is.ws_item_sk
    GROUP BY cd.c_customer_sk, cd.c_first_name, cd.c_last_name, 
             cd.resolved_city, cd.resolved_state
)
SELECT f.c_customer_sk, f.c_first_name, f.c_last_name, 
       f.resolved_city, f.resolved_state,
       f.total_spent, f.total_profit_from_items,
       LPAD(p.promo_name, 50) AS promotion_name
FROM FinalAnalysis f
LEFT JOIN RecursivePromotionCTE p ON f.total_spent > p.promo_instance * 1000
WHERE f.total_spent > 500
ORDER BY f.total_spent DESC, f.c_last_name ASC;
