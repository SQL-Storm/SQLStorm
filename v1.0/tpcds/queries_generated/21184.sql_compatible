
WITH sales_summary AS (
    SELECT 
        ws.ws_sold_date_sk,
        ws.ws_item_sk,
        SUM(ws.ws_quantity) AS total_sold,
        SUM(ws.ws_ext_sales_price) AS total_revenue,
        AVG(ws.ws_net_paid) AS avg_net_paid,
        ROW_NUMBER() OVER (PARTITION BY ws.ws_item_sk ORDER BY SUM(ws.ws_quantity) DESC) AS item_rank
    FROM 
        web_sales ws
    WHERE 
        ws.ws_sold_date_sk IN (SELECT d_date_sk FROM date_dim WHERE d_year = 2022)
    GROUP BY 
        ws.ws_sold_date_sk, ws.ws_item_sk
),

top_sales AS (
    SELECT 
        ws_sold_date_sk, 
        ws_item_sk, 
        total_sold, 
        total_revenue, 
        avg_net_paid,
        item_rank
    FROM 
        sales_summary 
    WHERE 
        item_rank <= 5
),

negative_returns AS (
    SELECT 
        sr_item_sk, 
        SUM(sr_return_quantity) AS total_returns
    FROM 
        store_returns 
    GROUP BY 
        sr_item_sk 
    HAVING 
        SUM(sr_return_quantity) < 0
),

final_report AS (
    SELECT 
        t.total_sold,
        t.total_revenue,
        COALESCE(n.total_returns, 0) AS total_negative_returns,
        (t.total_sold - COALESCE(n.total_returns, 0)) AS net_sales,
        CASE 
            WHEN (t.total_revenue - COALESCE(n.total_returns, 0)) < 0 
                THEN 'Negative Revenue' 
            ELSE 'Positive Revenue' 
        END AS revenue_status
    FROM 
        top_sales t
    LEFT JOIN 
        negative_returns n ON t.ws_item_sk = n.sr_item_sk
)

SELECT 
    r.ws_sold_date_sk, 
    AVG(r.net_sales) AS avg_net_sales,
    SUM(r.total_revenue) AS total_revenue,
    COUNT(CASE WHEN r.revenue_status = 'Negative Revenue' THEN 1 END) AS negative_revenue_count,
    MAX(CASE WHEN r.revenue_status = 'Positive Revenue' THEN r.total_revenue ELSE NULL END) AS max_positive_revenue
FROM 
    final_report r
JOIN 
    date_dim d ON r.ws_sold_date_sk = d.d_date_sk
WHERE 
    d.d_year = 2022 AND d.d_weekend = 'Y'
GROUP BY 
    r.ws_sold_date_sk
ORDER BY 
    r.ws_sold_date_sk DESC
FETCH FIRST 10 ROWS ONLY;
