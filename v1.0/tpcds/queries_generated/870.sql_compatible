
WITH RankedSales AS (
    SELECT 
        ws.web_site_id,
        SUM(ws.ws_sales_price) AS total_sales,
        DENSE_RANK() OVER (PARTITION BY ws.web_site_id ORDER BY SUM(ws.ws_sales_price) DESC) AS rank_sales
    FROM 
        web_sales ws
    JOIN 
        date_dim dd ON ws.ws_sold_date_sk = dd.d_date_sk
    WHERE 
        dd.d_year = 2023
    GROUP BY 
        ws.web_site_id
),
CustomerReturns AS (
    SELECT 
        wr.returning_customer_sk,
        COUNT(DISTINCT wr.wr_order_number) AS returns_count,
        AVG(wr.wr_return_amt) AS avg_return_amt
    FROM 
        web_returns wr
    GROUP BY 
        wr.returning_customer_sk
),
TopWebsites AS (
    SELECT 
        web_site_id,
        total_sales
    FROM 
        RankedSales
    WHERE 
        rank_sales <= 5
),
WebsiteSummary AS (
    SELECT 
        ws.web_site_id,
        ws.total_sales,
        COALESCE(cr.returns_count, 0) AS total_returns,
        COALESCE(cr.avg_return_amt, 0) AS avg_return
    FROM 
        TopWebsites ws
    LEFT JOIN 
        CustomerReturns cr ON cr.returning_customer_sk IN (
            SELECT 
                DISTINCT ws_bill_customer_sk 
            FROM 
                web_sales 
            WHERE 
                ws.web_site_id = ws.web_site_id
        )
)
SELECT 
    w.web_site_id,
    w.total_sales,
    w.total_returns,
    w.avg_return,
    CASE 
        WHEN w.avg_return > 0 THEN w.total_sales / NULLIF(w.total_returns, 0)
        ELSE 0
    END AS return_ratio
FROM 
    WebsiteSummary w
ORDER BY 
    w.total_sales DESC;
