
WITH RECURSIVE customer_hierarchy AS (
    SELECT 
        c.c_customer_sk,
        c.c_customer_id,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_purchase_estimate,
        1 AS level
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    WHERE 
        cd.cd_purchase_estimate > 1000

    UNION ALL

    SELECT 
        ch.c_customer_sk,
        ch.c_customer_id,
        ch.c_first_name,
        ch.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_purchase_estimate,
        ch.level + 1
    FROM 
        customer_hierarchy ch
    JOIN 
        customer c ON ch.c_customer_id = c.c_customer_id 
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    WHERE 
        cd.cd_purchase_estimate > 500
),
sales_data AS (
    SELECT 
        ws.web_site_sk,
        SUM(ws.ws_net_profit) AS total_net_profit,
        COUNT(ws.ws_order_number) AS order_count
    FROM 
        web_sales ws
    GROUP BY 
        ws.web_site_sk
),
top_sales AS (
    SELECT 
        sd.web_site_sk,
        sd.total_net_profit,
        RANK() OVER (ORDER BY sd.total_net_profit DESC) AS rank
    FROM 
        sales_data sd
)
SELECT 
    ch.c_customer_id,
    ch.c_first_name,
    ch.c_last_name,
    ch.cd_gender,
    ch.cd_marital_status,
    ts.total_net_profit,
    ts.rank
FROM 
    customer_hierarchy ch
LEFT JOIN 
    top_sales ts ON ch.c_customer_id = (SELECT c.c_customer_id FROM customer c WHERE c.c_current_cdemo_sk = ch.c_customer_sk)
WHERE 
    ts.rank <= 10
ORDER BY 
    ts.total_net_profit DESC, 
    ch.c_first_name ASC;
