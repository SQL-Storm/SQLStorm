
WITH RECURSIVE sales_cte AS (
    SELECT 
        ws_item_sk, 
        SUM(ws_quantity) AS total_quantity, 
        SUM(ws_ext_sales_price) AS total_sales, 
        ROW_NUMBER() OVER (PARTITION BY ws_item_sk ORDER BY SUM(ws_ext_sales_price) DESC) AS rank
    FROM 
        web_sales
    GROUP BY 
        ws_item_sk
), store_summary AS (
    SELECT 
        ss_store_sk, 
        SUM(ss_quantity) AS total_store_sales,
        COUNT(DISTINCT ss_customer_sk) AS customer_count
    FROM 
        store_sales
    GROUP BY 
        ss_store_sk
)

SELECT 
    ca.city AS delivery_city,
    SUM(ss.total_store_sales + COALESCE(wr.total_returned_amount, 0)) AS net_store_revenue,
    COUNT(DISTINCT c.c_customer_sk) AS total_customers,
    avg_income.income_band,
    RANK() OVER (ORDER BY SUM(ss.total_store_sales + COALESCE(wr.total_returned_amount, 0)) DESC) AS city_rank
FROM 
    customer c
JOIN 
    customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
LEFT JOIN (
    SELECT 
        wr_ship_customer_sk,
        SUM(wr_return_amt) AS total_returned_amount
    FROM 
        web_returns
    GROUP BY 
        wr_ship_customer_sk
) wr ON wr.wr_ship_customer_sk = c.c_customer_sk
JOIN store_summary ss ON ss.ss_store_sk = (SELECT s_store_sk FROM store WHERE s_city = ca.ca_city LIMIT 1)
JOIN (
    SELECT 
        h.hd_income_band_sk,
        CASE 
            WHEN h.hd_income_band_sk BETWEEN 1 AND 10000 THEN 'Low'
            WHEN h.hd_income_band_sk BETWEEN 10001 AND 30000 THEN 'Middle'
            ELSE 'High'
        END AS income_band
    FROM 
        household_demographics h
) avg_income ON c.c_current_hdemo_sk = avg_income.hd_income_band_sk
INNER JOIN sales_cte sc ON sc.ws_item_sk IN (
    SELECT i_item_sk 
    FROM item 
    WHERE i_current_price > 20.00 AND i_current_price < 100.00
)
GROUP BY 
    ca.city, 
    avg_income.income_band
HAVING 
    SUM(ss.total_store_sales + COALESCE(wr.total_returned_amount, 0)) > 50000
ORDER BY 
    city_rank;
