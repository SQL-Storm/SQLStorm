
WITH CustomerDetails AS (
    SELECT 
        c.c_customer_id,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_education_status,
        cd.cd_purchase_estimate,
        CONCAT(c.c_first_name, ' ', c.c_last_name) AS full_name,
        ca.ca_city,
        ca.ca_state,
        ca.ca_country,
        ca.ca_zip
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    JOIN 
        customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
),
OrderDetails AS (
    SELECT
        ws.ws_order_number,
        ws.ws_net_paid,
        ws.ws_ship_date_sk,
        EXTRACT(YEAR FROM d.d_date) AS order_year,
        EXTRACT(MONTH FROM d.d_date) AS order_month,
        d.d_date AS order_date
    FROM 
        web_sales ws
    JOIN 
        date_dim d ON ws.ws_sold_date_sk = d.d_date_sk
),
AggregatedOrders AS (
    SELECT
        cd.c_customer_id,
        cd.full_name,
        cd.ca_city,
        cd.ca_state,
        SUM(od.ws_net_paid) AS total_spent,
        COUNT(od.ws_order_number) AS order_count,
        CONCAT('Year:', od.order_year, ' Month:', od.order_month) AS order_period
    FROM 
        CustomerDetails cd
    LEFT JOIN 
        OrderDetails od ON cd.c_customer_id = od.ws_order_number
    GROUP BY 
        cd.c_customer_id, cd.full_name, cd.ca_city, cd.ca_state, od.order_year, od.order_month
)
SELECT 
    *,
    CASE 
        WHEN total_spent > 1000 THEN 'High Value Customer'
        WHEN total_spent BETWEEN 500 AND 1000 THEN 'Medium Value Customer'
        ELSE 'Low Value Customer'
    END AS customer_segment
FROM 
    AggregatedOrders
WHERE 
    total_spent IS NOT NULL
ORDER BY 
    total_spent DESC;
