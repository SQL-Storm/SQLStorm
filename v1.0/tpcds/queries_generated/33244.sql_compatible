
WITH RECURSIVE sales_summary AS (
    SELECT 
        s_store_sk,
        SUM(ss_sales_price) AS total_sales,
        COUNT(ss_ticket_number) AS transaction_count
    FROM store_sales
    GROUP BY s_store_sk
    UNION ALL
    SELECT 
        ws.s_store_sk,
        SUM(ws_sales_price),
        COUNT(ws_order_number)
    FROM web_sales AS ws
    JOIN store ON store.s_store_sk = ws.ws_sold_date_sk
    GROUP BY ws.s_store_sk
),
income_distribution AS (
    SELECT 
        hd_income_band_sk,
        COUNT(CASE WHEN cd_gender = 'M' THEN 1 END) AS male_count,
        COUNT(CASE WHEN cd_gender = 'F' THEN 1 END) AS female_count
    FROM household_demographics
    LEFT JOIN customer_demographics ON household_demographics.hd_demo_sk = customer_demographics.cd_demo_sk
    GROUP BY hd_income_band_sk
),
average_sales AS (
    SELECT 
        s.s_store_id,
        COALESCE(ss.total_sales, 0) AS total_sales,
        COALESCE(ss.transaction_count, 0) AS transaction_count,
        ROUND(COALESCE(ss.total_sales, 0) / NULLIF(COALESCE(ss.transaction_count, 1), 0), 2) AS avg_sales_per_transaction
    FROM store AS s
    LEFT JOIN sales_summary AS ss ON s.s_store_sk = ss.s_store_sk
)
SELECT 
    st.warehouse_name,
    COALESCE(avg.total_sales, 0) AS total_sales,
    avg.transaction_count,
    id.male_count,
    id.female_count,
    CONCAT('Total Sales: $', CAST(avg.total_sales AS CHAR)) AS sales_string
FROM average_sales AS avg
JOIN warehouse AS st ON st.w_warehouse_sk = (SELECT MIN(w_warehouse_sk) FROM warehouse)
LEFT JOIN income_distribution AS id ON id.hd_income_band_sk = (SELECT MAX(hd_income_band_sk) FROM household_demographics)
WHERE avg.total_sales > (
    SELECT AVG(total_sales) FROM average_sales
    WHERE transaction_count > 0
)
ORDER BY avg.avg_sales_per_transaction DESC
FETCH FIRST 10 ROWS ONLY;
