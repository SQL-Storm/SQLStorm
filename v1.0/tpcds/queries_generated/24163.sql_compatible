
WITH sales_summary AS (
    SELECT 
        w.w_warehouse_id,
        SUM(ws.ws_sales_price) AS total_sales,
        AVG(ws.ws_net_profit) AS avg_profit,
        COUNT(DISTINCT ws.ws_order_number) AS order_count
    FROM 
        web_sales ws
    JOIN 
        warehouse w ON ws.ws_warehouse_sk = w.w_warehouse_sk
    WHERE 
        ws.ws_sold_date_sk IS NOT NULL
    GROUP BY 
        w.w_warehouse_id
),
customer_info AS (
    SELECT 
        c.c_customer_id,
        d.d_year,
        cd.cd_marital_status,
        cd.cd_gender,
        COALESCE(cd.cd_purchase_estimate, 0) AS purchase_estimate
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    JOIN 
        date_dim d ON c.c_first_sales_date_sk = d.d_date_sk
    WHERE 
        cd.cd_marital_status IN ('M', 'S')
),
return_summary AS (
    SELECT 
        sr.returning_customer_sk AS customer_id,
        SUM(sr_return_quantity) AS total_returns,
        SUM(sr_return_amt) AS total_return_amt
    FROM 
        store_returns sr 
    GROUP BY 
        sr.returning_customer_sk
),
final_report AS (
    SELECT 
        ci.c_customer_id,
        ci.d_year,
        ci.cd_marital_status,
        ci.cd_gender,
        ss.total_sales,
        ss.avg_profit,
        COALESCE(rs.total_returns, 0) AS total_returns,
        COALESCE(rs.total_return_amt, 0) AS total_return_amt,
        CASE 
            WHEN ss.avg_profit > 0 THEN 'Profitable'
            ELSE 'Unprofitable'
        END AS profitability_status
    FROM 
        customer_info ci
    LEFT JOIN 
        sales_summary ss ON ci.d_year = DATEADD(year, -1, '2002-10-01') AND ci.c_customer_id = ss.w_warehouse_id
    LEFT JOIN 
        return_summary rs ON ci.c_customer_id = rs.customer_id
)
SELECT 
    fr.*, 
    ROW_NUMBER() OVER (PARTITION BY fr.d_year ORDER BY fr.total_sales DESC) AS sales_rank,
    CASE 
        WHEN fr.total_returns / NULLIF(fr.total_sales, 0) > 0.1 THEN 'High Return Rate'
        ELSE 'Normal Return Rate'
    END AS return_rate_status
FROM 
    final_report fr
WHERE 
    fr.total_sales > 10000 
    OR (fr.total_returns > 0 AND fr.profitability_status = 'Unprofitable')
ORDER BY 
    fr.d_year, sales_rank;
