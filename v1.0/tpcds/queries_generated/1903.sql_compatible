
WITH RankedSales AS (
    SELECT 
        ws.ws_order_number,
        ws.ws_item_sk,
        ws.ws_quantity,
        ws.ws_sales_price,
        ws.ws_net_paid,
        ROW_NUMBER() OVER (PARTITION BY ws.ws_order_number ORDER BY ws.ws_net_paid DESC) AS sales_rank
    FROM 
        web_sales ws
    WHERE 
        ws.ws_sold_date_sk >= (SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = 2022)
), CustomerReturns AS (
    SELECT 
        wr.wr_returning_customer_sk,
        SUM(wr.wr_return_amt) AS total_return_amt,
        COUNT(wr.wr_order_number) AS return_count
    FROM 
        web_returns wr
    GROUP BY 
        wr.wr_returning_customer_sk
), ReturnStats AS (
    SELECT 
        cr.returning_customer_sk,
        cr.total_return_amt,
        cr.return_count,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_credit_rating
    FROM 
        CustomerReturns cr
    JOIN 
        customer_demographics cd ON cr.returning_customer_sk = cd.cd_demo_sk
), FinalSales AS (
    SELECT 
        rs.ws_order_number,
        rs.ws_item_sk,
        SUM(rs.ws_net_paid) AS total_sales,
        COUNT(*) AS transaction_count
    FROM 
        RankedSales rs
    WHERE 
        rs.sales_rank = 1
    GROUP BY 
        rs.ws_order_number, rs.ws_item_sk
)
SELECT 
    fs.ws_order_number,
    fs.ws_item_sk,
    fs.total_sales,
    cr.total_return_amt AS total_returns,
    cr.return_count AS return_count,
    CASE 
        WHEN cr.total_return_amt IS NULL THEN 'No Returns' 
        ELSE 'Returns Present' 
    END AS return_status,
    cd.cd_gender,
    cd.cd_marital_status
FROM 
    FinalSales fs
LEFT JOIN 
    web_sales ws ON fs.ws_order_number = ws.ws_order_number AND fs.ws_item_sk = ws.ws_item_sk
LEFT JOIN 
    CustomerReturns cr ON ws.ws_bill_customer_sk = cr.returning_customer_sk
LEFT JOIN 
    customer_demographics cd ON ws.ws_bill_cdemo_sk = cd.cd_demo_sk
WHERE 
    fs.total_sales > (SELECT AVG(total_sales) FROM FinalSales)
ORDER BY 
    fs.total_sales DESC, cr.return_count ASC
FETCH FIRST 100 ROWS ONLY;
