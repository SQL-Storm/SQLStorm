
WITH RankedSales AS (
    SELECT
        ws.web_site_sk,
        SUM(ws.ws_ext_sales_price) AS total_sales,
        DENSE_RANK() OVER (PARTITION BY ws.web_site_sk ORDER BY SUM(ws.ws_net_profit) DESC) AS sales_rank,
        COUNT(DISTINCT ws.ws_order_number) AS order_count
    FROM
        web_sales ws
    GROUP BY
        ws.web_site_sk
),
TopSites AS (
    SELECT
        rs.web_site_sk,
        rs.total_sales,
        rs.order_count
    FROM
        RankedSales rs
    WHERE
        rs.sales_rank <= 5
),
SalesDetails AS (
    SELECT
        c.c_customer_id,
        SUM(ws.ws_ext_sales_price) AS customer_sales,
        COUNT(ws.ws_order_number) AS orders_count,
        MAX(ws.ws_sold_date_sk) AS last_purchase_date
    FROM
        web_sales ws
    JOIN
        customer c ON ws.ws_bill_customer_sk = c.c_customer_sk
    WHERE
        ws.ws_sold_date_sk >= (SELECT MAX(d.d_date) FROM date_dim d WHERE d.d_year = EXTRACT(YEAR FROM DATE '2002-10-01') - 1)
    GROUP BY
        c.c_customer_id
),
SaleSummary AS (
    SELECT
        ts.web_site_sk,
        sd.customer_sales,
        sd.orders_count,
        COALESCE(sd.last_purchase_date, DATE '1999-12-31') AS last_purchase_date
    FROM
        TopSites ts
    LEFT JOIN
        SalesDetails sd ON ts.web_site_sk = sd.c_customer_id
)
SELECT
    ss.web_site_sk,
    ss.customer_sales,
    ss.orders_count,
    ss.last_purchase_date,
    CASE 
        WHEN ss.orders_count > 10 THEN 'High Value Customer'
        WHEN ss.orders_count BETWEEN 5 AND 10 THEN 'Medium Value Customer'
        ELSE 'Low Value Customer'
    END AS customer_value_category
FROM
    SaleSummary ss
ORDER BY
    ss.customer_sales DESC
FETCH FIRST 10 ROWS ONLY;
