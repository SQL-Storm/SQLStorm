
WITH RECURSIVE SalesHistory AS (
    SELECT ws_customer_sk, 
           ws_order_number, 
           ws_item_sk, 
           ws_sold_date_sk, 
           ws_quantity, 
           ws_net_profit,
           ROW_NUMBER() OVER (PARTITION BY ws_customer_sk ORDER BY ws_sold_date_sk DESC) AS rn
    FROM web_sales
    WHERE ws_sold_date_sk >= (SELECT MAX(d_date_sk) FROM date_dim WHERE d_year = 2023)
),
TopCustomers AS (
    SELECT ws_customer_sk, 
           SUM(ws_net_profit) AS total_profit
    FROM web_sales
    GROUP BY ws_customer_sk
    HAVING SUM(ws_net_profit) > (
        SELECT AVG(total) 
        FROM (
            SELECT SUM(ws_net_profit) AS total 
            FROM web_sales 
            GROUP BY ws_customer_sk
        ) AS avg_table
    )
)
SELECT ca.ca_address_id,
       CONCAT(c.c_first_name, ' ', c.c_last_name) AS customer_name,
       SUM(CASE WHEN sh.rn <= 5 THEN sh.ws_net_profit ELSE 0 END) AS top_five_revenue,
       SUM(sh.ws_net_profit) AS total_revenue,
       COUNT(DISTINCT sh.ws_order_number) AS order_count,
       CASE 
           WHEN SUM(sh.ws_net_profit) IS NULL THEN 'No Sales'
           WHEN SUM(sh.ws_net_profit) > 1000 THEN 'High Customer Value'
           ELSE 'Standard Customer'
       END AS customer_value_category
FROM SalesHistory sh
JOIN customer c ON sh.ws_customer_sk = c.c_customer_sk
JOIN customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
JOIN TopCustomers tc ON c.c_customer_sk = tc.ws_customer_sk
GROUP BY ca.ca_address_id, c.c_first_name, c.c_last_name
ORDER BY total_revenue DESC
LIMIT 10;
