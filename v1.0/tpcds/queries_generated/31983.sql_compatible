
WITH RECURSIVE sales_item_hierarchy AS (
    SELECT 
        i.item_id,
        i.item_desc,
        NULL AS parent_item_id
    FROM item i
    WHERE i.i_item_sk IN (SELECT cs_item_sk FROM catalog_sales WHERE cs_sold_date_sk = 20230301)
  
    UNION ALL

    SELECT 
        i.item_id,
        i.item_desc,
        sf.parent_item_id
    FROM item i
    JOIN sales_item_hierarchy sf ON i.i_item_sk = sf.parent_item_id
)

SELECT 
    ca.ca_street_name,
    ca.ca_city,
    ca.ca_state,
    COUNT(DISTINCT cs.cs_order_number) AS total_orders,
    SUM(cs.cs_ext_sales_price) AS total_sales,
    AVG(cs.cs_ext_sales_price) AS average_sale,
    RANK() OVER (PARTITION BY ca.ca_city ORDER BY SUM(cs.cs_ext_sales_price) DESC) AS sales_rank,
    COUNT(DISTINCT wr.wr_order_number) AS total_web_returns,
    COALESCE(NULLIF(SUM(wr.wr_return_amt), 0), 0) AS total_web_return_amt,
    MAX(wr.wr_return_tax) AS max_return_tax
FROM customer_address ca
LEFT JOIN customer c ON ca.ca_address_sk = c.c_current_addr_sk
LEFT JOIN catalog_sales cs ON cs.cs_bill_customer_sk = c.c_customer_sk
LEFT JOIN web_returns wr ON wr.wr_returning_customer_sk = c.c_customer_sk
INNER JOIN sales_item_hierarchy sih ON cs.cs_item_sk = (SELECT MIN(i.i_item_sk) FROM item i WHERE i.i_item_id = sih.item_id)
WHERE ca.ca_state IS NOT NULL
GROUP BY ca.ca_street_name, ca.ca_city, ca.ca_state
HAVING COUNT(DISTINCT cs.cs_order_number) > 5
ORDER BY total_sales DESC;
