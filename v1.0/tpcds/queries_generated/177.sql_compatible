
WITH sales_summary AS (
    SELECT 
        ws_bill_customer_sk,
        SUM(ws_ext_sales_price) AS total_sales,
        COUNT(DISTINCT ws_order_number) AS order_count,
        RANK() OVER (ORDER BY SUM(ws_ext_sales_price) DESC) AS sales_rank
    FROM 
        web_sales
    GROUP BY 
        ws_bill_customer_sk
), 
customer_info AS (
    SELECT 
        c.c_customer_sk,
        c.c_first_name,
        c.c_last_name,
        cd.cd_gender,
        cd.cd_marital_status,
        cd.cd_income_band_sk,
        ca.ca_city,
        ca.ca_state
    FROM 
        customer c
    JOIN 
        customer_demographics cd ON c.c_current_cdemo_sk = cd.cd_demo_sk
    JOIN 
        customer_address ca ON c.c_current_addr_sk = ca.ca_address_sk
), 
income_distribution AS (
    SELECT 
        ib.ib_income_band_sk,
        COUNT(*) AS customer_count
    FROM 
        household_demographics hd 
    JOIN 
        income_band ib ON hd.hd_income_band_sk = ib.ib_income_band_sk
    GROUP BY 
        ib.ib_income_band_sk
)
SELECT 
    ci.c_first_name,
    ci.c_last_name,
    ci.ca_city,
    ci.ca_state,
    ss.total_sales,
    ss.order_count,
    COALESCE(id.customer_count, 0) AS customer_count,
    CASE 
        WHEN ss.sales_rank <= 10 THEN 'Top 10%'
        WHEN ss.sales_rank <= 100 THEN 'Top 100%'
        ELSE 'Below 100'
    END AS sales_segment
FROM 
    sales_summary ss
JOIN 
    customer_info ci ON ss.ws_bill_customer_sk = ci.c_customer_sk
LEFT JOIN 
    income_distribution id ON ci.cd_income_band_sk = id.ib_income_band_sk
WHERE 
    ss.total_sales > (SELECT AVG(total_sales) FROM sales_summary)
ORDER BY 
    ss.total_sales DESC;
