
WITH RECURSIVE sales_trend AS (
    SELECT ws_sold_date_sk, ws_item_sk, SUM(ws_quantity) AS total_quantity,
           ROW_NUMBER() OVER (PARTITION BY ws_item_sk ORDER BY ws_sold_date_sk) AS item_rank
    FROM web_sales
    GROUP BY ws_sold_date_sk, ws_item_sk
    HAVING SUM(ws_quantity) > 0
    
    UNION ALL
    
    SELECT ws_sold_date_sk, ws_item_sk, total_quantity + s.total_quantity,
           ROW_NUMBER() OVER (PARTITION BY ws_item_sk ORDER BY ws_sold_date_sk) AS item_rank
    FROM web_sales ws
    JOIN sales_trend s ON ws_sold_date_sk = s.ws_sold_date_sk + INTERVAL '1 day' AND ws_item_sk = s.ws_item_sk
)
SELECT ca.ca_state, 
       SUM(CASE WHEN cd.cd_gender = 'F' THEN ws.ws_net_profit ELSE 0 END) AS female_profit,
       SUM(CASE WHEN cd.cd_gender = 'M' THEN ws.ws_net_profit ELSE 0 END) AS male_profit,
       COUNT(DISTINCT c.c_customer_id) AS unique_customers,
       AVG(ws.ws_net_profit) AS avg_profit,
       MAX(ws.ws_net_profit) AS max_profit,
       MIN(ws.ws_net_profit) AS min_profit,
       ARRAY_AGG(DISTINCT ws.ws_order_number) AS order_numbers
FROM web_sales AS ws
JOIN customer AS c ON c.c_customer_sk = ws.ws_bill_customer_sk
LEFT JOIN customer_demographics AS cd ON cd.cd_demo_sk = c.c_current_cdemo_sk
JOIN customer_address AS ca ON ca.ca_address_sk = c.c_current_addr_sk
LEFT JOIN date_dim AS d ON d.d_date_sk = ws.ws_sold_date_sk
JOIN sales_trend AS st ON st.ws_item_sk = ws.ws_item_sk
WHERE d.d_year = 2023
  AND (c.c_birth_year < 1990 OR c.c_birth_country IS NULL)
GROUP BY ca.ca_state
HAVING SUM(ws.ws_net_paid_inc_tax) > 10000
ORDER BY ca.ca_state
