WITH RankedMovies AS (
    SELECT
        t.id AS movie_id,
        t.title,
        t.production_year,
        COUNT(DISTINCT kc.id) AS keyword_count,
        COUNT(DISTINCT ci.id) AS cast_count,
        ARRAY_AGG(DISTINCT a.name) AS actor_names
    FROM
        aka_title t
        JOIN movie_keyword mk ON t.id = mk.movie_id
        JOIN keyword kc ON mk.keyword_id = kc.id
        LEFT JOIN cast_info ci ON t.id = ci.movie_id
        LEFT JOIN aka_name a ON ci.person_id = a.person_id
    GROUP BY
        t.id, t.title, t.production_year
    HAVING
        COUNT(DISTINCT kc.id) > 3 
),
HighestRatedMovies AS (
    SELECT
        m.movie_id,
        m.title,
        m.production_year,
        m.keyword_count,
        m.actor_names,
        ROW_NUMBER() OVER (ORDER BY m.keyword_count DESC) AS rank
    FROM
        RankedMovies m
)
SELECT
    hr.movie_id,
    hr.title,
    hr.production_year,
    hr.keyword_count,
    hr.actor_names,
    AVG(pi.info_type_id) AS avg_info_type_id 
FROM
    HighestRatedMovies hr
    LEFT JOIN movie_info mi ON hr.movie_id = mi.movie_id
    LEFT JOIN info_type pi ON mi.info_type_id = pi.id
WHERE
    hr.rank <= 10 
GROUP BY
    hr.movie_id, hr.title, hr.production_year, hr.keyword_count, hr.actor_names
ORDER BY
    hr.keyword_count DESC;