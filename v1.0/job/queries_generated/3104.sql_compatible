
WITH RankedMovies AS (
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        COUNT(DISTINCT c.person_id) AS cast_count,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY COUNT(DISTINCT c.person_id) DESC) AS rank
    FROM 
        aka_title t
    JOIN 
        cast_info c ON t.id = c.movie_id
    WHERE 
        t.production_year IS NOT NULL
    GROUP BY 
        t.id, t.title, t.production_year
), 
MovieKeywords AS (
    SELECT 
        mk.movie_id,
        STRING_AGG(k.keyword, ', ') AS keywords
    FROM 
        movie_keyword mk
    JOIN 
        keyword k ON mk.keyword_id = k.id
    GROUP BY 
        mk.movie_id
),
HighRatedMovies AS (
    SELECT 
        m.id AS movie_id,
        m.title,
        AVG(CASE WHEN i.info_type_id = 1 THEN CAST(i.info AS FLOAT) ELSE NULL END) AS average_rating
    FROM 
        aka_title m
    LEFT JOIN 
        movie_info i ON m.id = i.movie_id
    WHERE 
        m.production_year > 2000
    GROUP BY 
        m.id, m.title
    HAVING 
        AVG(CASE WHEN i.info_type_id = 1 THEN CAST(i.info AS FLOAT) ELSE NULL END) IS NOT NULL
)
SELECT 
    rm.title,
    rm.production_year,
    rm.cast_count,
    mk.keywords,
    h.average_rating
FROM 
    RankedMovies rm
LEFT JOIN 
    MovieKeywords mk ON rm.movie_id = mk.movie_id
LEFT JOIN 
    HighRatedMovies h ON rm.movie_id = h.movie_id
WHERE 
    rm.rank <= 5
ORDER BY 
    rm.production_year DESC,
    rm.cast_count DESC;
