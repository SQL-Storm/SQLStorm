
WITH RankedMovies AS (
    SELECT 
        at.title,
        at.production_year,
        COUNT(ci.person_id) AS cast_count,
        ROW_NUMBER() OVER (PARTITION BY at.production_year ORDER BY COUNT(ci.person_id) DESC) AS rank
    FROM 
        aka_title at
    LEFT JOIN 
        cast_info ci ON at.id = ci.movie_id
    GROUP BY 
        at.title, at.production_year
), 
MoviesWithKeywords AS (
    SELECT 
        rm.title,
        rm.production_year,
        COALESCE(mk.keyword_count, 0) AS keyword_count,
        rm.cast_count
    FROM 
        RankedMovies rm
    LEFT JOIN (
        SELECT 
            mk.movie_id,
            COUNT(mk.keyword_id) AS keyword_count
        FROM 
            movie_keyword mk
        GROUP BY 
            mk.movie_id
    ) mk ON rm.title = (SELECT title FROM aka_title WHERE id = mk.movie_id)
)
SELECT 
    mw.title,
    mw.production_year,
    mw.cast_count,
    mw.keyword_count,
    CASE 
        WHEN mw.cast_count IS NULL THEN 'No Cast' 
        ELSE 'Has Cast' 
    END AS cast_status
FROM 
    MoviesWithKeywords mw
WHERE 
    mw.keyword_count > 5 
    OR mw.cast_count > 10
ORDER BY 
    mw.production_year DESC, mw.cast_count DESC
FETCH FIRST 10 ROWS ONLY
UNION ALL
SELECT 
    'N/A' AS title,
    EXTRACT(YEAR FROM DATE '2024-10-01') AS production_year,
    NULL AS cast_count,
    NULL AS keyword_count,
    'No Records Found' AS cast_status
WHERE NOT EXISTS (SELECT 1 FROM MoviesWithKeywords);
