
WITH RecursiveMovieCast AS (
    SELECT 
        ci.movie_id,
        ci.person_id,
        ca.name AS actor_name,
        ROW_NUMBER() OVER (PARTITION BY ci.movie_id ORDER BY ci.nr_order) AS role_rank
    FROM 
        cast_info ci
    JOIN 
        aka_name ca ON ci.person_id = ca.person_id
),
MovieKeywords AS (
    SELECT 
        mk.movie_id,
        STRING_AGG(CAST(mk.keyword_id AS TEXT), ', ') AS keywords
    FROM 
        movie_keyword mk
    GROUP BY 
        mk.movie_id
),
ProductionYearMovies AS (
    SELECT 
        title.id AS title_id,
        title.title,
        title.production_year
    FROM 
        title 
    WHERE 
        title.production_year > 2000
),
DetailedMovieInfo AS (
    SELECT 
        pmm.movie_id,
        pm.person_id,
        pm.info,
        pm.note
    FROM 
        movie_info pmm
    JOIN 
        person_info pm ON pmm.movie_id = pm.movie_id
    WHERE 
        pm.note IS NOT NULL
),
RankedMovies AS (
    SELECT
        tm.title,
        tm.production_year,
        COUNT(DISTINCT cm.person_id) AS total_actors,
        COALESCE(mk.keywords, 'No Keywords') AS keywords
    FROM 
        ProductionYearMovies tm
    LEFT JOIN 
        RecursiveMovieCast cm ON tm.title_id = cm.movie_id
    LEFT JOIN 
        MovieKeywords mk ON tm.title_id = mk.movie_id
    GROUP BY 
        tm.title, tm.production_year
    HAVING 
        COUNT(DISTINCT cm.person_id) > 5
)
SELECT 
    R.title,
    R.production_year,
    R.total_actors,
    R.keywords
FROM 
    RankedMovies R
ORDER BY 
    R.production_year DESC, R.total_actors DESC;
