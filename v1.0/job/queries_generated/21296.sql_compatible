
WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        1 AS hierarchy_level
    FROM 
        aka_title mt
    WHERE 
        mt.production_year > 2000
    UNION ALL
    SELECT 
        mk.linked_movie_id,
        mk.movie_link.title,
        mk.movie_link.production_year,
        mh.hierarchy_level + 1
    FROM 
        movie_link mk
    JOIN 
        MovieHierarchy mh ON mk.movie_id = mh.movie_id
),
CastRoles AS (
    SELECT 
        ci.movie_id,
        COUNT(DISTINCT ci.person_role_id) AS role_count,
        STRING_AGG(DISTINCT r.role, ', ') AS roles
    FROM 
        cast_info ci
    JOIN 
        role_type r ON ci.role_id = r.id
    GROUP BY 
        ci.movie_id
),
MovieKeywords AS (
    SELECT 
        mk.movie_id,
        STRING_AGG(DISTINCT k.keyword, ', ') AS keywords
    FROM 
        movie_keyword mk
    JOIN 
        keyword k ON mk.keyword_id = k.id
    GROUP BY 
        mk.movie_id
)
SELECT 
    mh.movie_id,
    mh.title,
    mh.production_year,
    COALESCE(cr.role_count, 0) AS total_roles,
    COALESCE(cr.roles, 'No roles assigned') AS role_details,
    COALESCE(mk.keywords, 'No keywords') AS movie_keywords,
    COUNT(DISTINCT ci.person_id) AS total_cast_members,
    SUM(CASE WHEN ci.note IS NOT NULL THEN 1 ELSE 0 END) AS NULL_notes_count
FROM 
    MovieHierarchy mh
LEFT JOIN 
    CastRoles cr ON mh.movie_id = cr.movie_id
LEFT JOIN 
    MovieKeywords mk ON mh.movie_id = mk.movie_id
LEFT JOIN 
    cast_info ci ON mh.movie_id = ci.movie_id
GROUP BY 
    mh.movie_id, mh.title, mh.production_year, cr.role_count, cr.roles, mk.keywords
ORDER BY 
    mh.production_year DESC, total_roles DESC
LIMIT 50;
