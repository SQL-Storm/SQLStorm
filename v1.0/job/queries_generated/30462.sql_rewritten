WITH RECURSIVE ActorHierarchy AS (
    SELECT 
        ca.person_id AS actor_id,
        CONCAT(ak.name, ' (', ct.kind, ')') AS actor_role,
        1 as level
    FROM 
        cast_info ca
    JOIN 
        aka_name ak ON ca.person_id = ak.person_id
    JOIN 
        comp_cast_type ct ON ca.person_role_id = ct.id
    WHERE 
        ak.name IS NOT NULL
    
    UNION ALL

    SELECT 
        ca.person_id,
        CONCAT(ah.actor_role, ' -> ', ak.name, ' (', ct.kind, ')'),
        ah.level + 1
    FROM 
        ActorHierarchy ah
    JOIN 
        cast_info ca ON ca.movie_id IN (
            SELECT movie_id FROM complete_cast WHERE subject_id = ah.actor_id
        )
    JOIN 
        aka_name ak ON ca.person_id = ak.person_id
    JOIN 
        comp_cast_type ct ON ca.person_role_id = ct.id
    WHERE 
        ak.name IS NOT NULL
)
SELECT 
    a.actor_role AS complete_hierarchy,
    COUNT(DISTINCT ca.movie_id) AS movie_count,
    AVG(CASE WHEN ct.kind = 'Actor' THEN ca.nr_order ELSE NULL END) AS avg_order,
    STRING_AGG(DISTINCT k.keyword, ', ') AS keywords
FROM 
    ActorHierarchy a 
LEFT JOIN 
    cast_info ca ON a.actor_id = ca.person_id
LEFT JOIN 
    movie_keyword mk ON ca.movie_id = mk.movie_id
LEFT JOIN 
    keyword k ON mk.keyword_id = k.id
LEFT JOIN 
    aka_title at ON ca.movie_id = at.id
LEFT JOIN 
    company_name cn ON ca.movie_id = (
        SELECT movie_id FROM movie_companies 
        WHERE company_id = cn.id 
        LIMIT 1
    )
WHERE 
    at.production_year IS NOT NULL
    AND at.production_year >= 2000
GROUP BY 
    a.actor_role
HAVING 
    COUNT(DISTINCT ca.movie_id) > 5
ORDER BY 
    movie_count DESC;