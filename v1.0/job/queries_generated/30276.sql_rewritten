WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        mt.id AS movie_id, 
        mt.title AS movie_title, 
        1 AS level
    FROM 
        aka_title mt
    WHERE 
        mt.production_year >= 2000 
    
    UNION ALL
    
    SELECT 
        m.id AS movie_id, 
        m.title AS movie_title, 
        mh.level + 1 AS level
    FROM 
        MovieHierarchy mh
    JOIN 
        movie_link ml ON ml.movie_id = mh.movie_id
    JOIN 
        aka_title m ON ml.linked_movie_id = m.id
    WHERE 
        mh.level < 5 
)

SELECT 
    a.name AS actor_name,
    t.title AS movie_title,
    t.production_year,
    STRING_AGG(DISTINCT d.info, ', ') AS additional_info,
    COUNT(DISTINCT cm.company_id) AS company_count,
    ROW_NUMBER() OVER (PARTITION BY a.name ORDER BY t.production_year DESC) AS rank
FROM 
    aka_name a
JOIN 
    cast_info ci ON a.person_id = ci.person_id
JOIN 
    aka_title t ON ci.movie_id = t.id
LEFT JOIN 
    movie_info mi ON t.id = mi.movie_id
LEFT JOIN 
    movie_companies mc ON t.id = mc.movie_id
LEFT JOIN 
    company_name cn ON mc.company_id = cn.id
LEFT JOIN 
    movie_info_idx d ON t.id = d.movie_id AND d.info_type_id IN (SELECT id FROM info_type WHERE info LIKE '%box office%')
LEFT JOIN 
    MovieHierarchy mh ON mh.movie_id = t.id
WHERE 
    t.production_year IS NOT NULL
    AND a.name IS NOT NULL
    AND t.kind_id IN (SELECT id FROM kind_type WHERE kind LIKE 'feature%')
    AND (cn.country_code IS NULL OR cn.country_code IN ('US', 'GB')) 
GROUP BY 
    a.name, t.title, t.production_year
HAVING 
    COUNT(DISTINCT ci.person_role_id) > 2 
ORDER BY 
    t.production_year DESC, actor_name;