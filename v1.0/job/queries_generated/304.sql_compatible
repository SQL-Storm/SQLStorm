
WITH RankedMovies AS (
    SELECT 
        t.title, 
        t.production_year, 
        COUNT(c.person_id) AS cast_count,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY COUNT(c.person_id) DESC) AS rn
    FROM 
        aka_title t
    LEFT JOIN 
        cast_info c ON t.id = c.movie_id
    GROUP BY 
        t.title, t.production_year
),
TopMovies AS (
    SELECT 
        rm.title, 
        rm.production_year 
    FROM 
        RankedMovies rm
    WHERE 
        rm.rn <= 5 
),
MovieKeywords AS (
    SELECT 
        t.id AS movie_id, 
        STRING_AGG(k.keyword, ', ') AS keywords
    FROM 
        aka_title t
    LEFT JOIN 
        movie_keyword mk ON t.id = mk.movie_id
    LEFT JOIN 
        keyword k ON mk.keyword_id = k.id
    GROUP BY 
        t.id
)
SELECT 
    tm.title,
    tm.production_year,
    COALESCE(mk.keywords, 'No Keywords') AS keywords,
    COALESCE(ci.role_id, 0) AS role_type,
    COUNT(c.person_id) AS total_cast,
    AVG(CASE WHEN pi.info IS NOT NULL THEN 1 ELSE 0 END) AS has_person_info
FROM 
    TopMovies tm
LEFT JOIN 
    MovieKeywords mk ON tm.title = mk.movie_id
LEFT JOIN 
    complete_cast cc ON cc.movie_id = tm.id
LEFT JOIN 
    cast_info c ON cc.subject_id = c.id
LEFT JOIN 
    person_info pi ON c.person_id = pi.person_id AND pi.info_type_id = (SELECT id FROM info_type WHERE info = 'Biography')
GROUP BY 
    tm.title, tm.production_year, mk.keywords, ci.role_id
ORDER BY 
    tm.production_year DESC, total_cast DESC;
