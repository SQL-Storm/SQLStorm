
WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        m.id AS movie_id, 
        m.title AS movie_title, 
        m.production_year, 
        0 AS hierarchy_level
    FROM 
        aka_title m
    WHERE 
        m.production_year >= 2000
    
    UNION ALL
    
    SELECT 
        m.id, 
        CONCAT(mh.movie_title, ' -> ', m.title) AS movie_title, 
        m.production_year, 
        mh.hierarchy_level + 1
    FROM 
        movie_link ml
    JOIN 
        aka_title m ON ml.linked_movie_id = m.id
    JOIN 
        MovieHierarchy mh ON ml.movie_id = mh.movie_id
)
SELECT 
    mh.movie_title,
    mh.production_year,
    COALESCE(ma.name, 'Unknown') AS actor_name,
    COUNT(DISTINCT ci.person_id) OVER (PARTITION BY mh.movie_id) AS actor_count,
    STRING_AGG(DISTINCT mk.keyword, ', ') AS keywords,
    AVG(mo.rating) OVER (PARTITION BY mh.movie_id) AS average_rating
FROM 
    MovieHierarchy mh
LEFT JOIN 
    complete_cast cc ON mh.movie_id = cc.movie_id
LEFT JOIN 
    cast_info ci ON cc.subject_id = ci.person_id
LEFT JOIN 
    aka_name ma ON ci.person_id = ma.person_id
LEFT JOIN 
    movie_keyword mk ON mh.movie_id = mk.movie_id
LEFT JOIN 
    (SELECT movie_id, AVG(rating) AS rating 
     FROM movie_info 
     WHERE info_type_id = (SELECT id FROM info_type WHERE info = 'rating') 
     GROUP BY movie_id) mo ON mh.movie_id = mo.movie_id
WHERE 
    mh.hierarchy_level = 0
GROUP BY 
    mh.movie_title, mh.production_year, ma.name, mh.movie_id
ORDER BY 
    mh.production_year DESC, actor_count DESC NULLS LAST
LIMIT 50;
