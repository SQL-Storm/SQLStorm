
WITH RECURSIVE MovieHierarchy AS (
    
    SELECT 
        mt.id AS movie_id,
        mt.title,
        1 AS level
    FROM 
        aka_title mt
    WHERE 
        mt.production_year > 2000

    UNION ALL

    SELECT 
        ml.linked_movie_id AS movie_id,
        mn.title,
        mh.level + 1 AS level
    FROM 
        movie_link ml
    JOIN 
        aka_title mn ON ml.linked_movie_id = mn.id
    JOIN 
        MovieHierarchy mh ON ml.movie_id = mh.movie_id
)
SELECT 
    ak.name AS actor_name,
    ci.role_id,
    mt.title AS movie_title,
    mt.production_year,
    COUNT(DISTINCT mc.company_id) AS company_count,
    RANK() OVER (PARTITION BY mt.production_year ORDER BY COUNT(DISTINCT mc.company_id) DESC) AS rank_by_company_count,
    STRING_AGG(DISTINCT mn.keyword, ', ' ORDER BY mn.keyword) AS keywords
FROM 
    aka_name ak
JOIN 
    cast_info ci ON ak.person_id = ci.person_id
JOIN 
    aka_title mt ON ci.movie_id = mt.id
LEFT JOIN 
    movie_companies mc ON mt.id = mc.movie_id
LEFT JOIN 
    movie_keyword mk ON mt.id = mk.movie_id
LEFT JOIN 
    keyword mn ON mk.keyword_id = mn.id
WHERE 
    ak.name IS NOT NULL
    AND mt.production_year IS NOT NULL
    AND ci.nr_order < 5
    AND (mt.kind_id = (SELECT id FROM kind_type WHERE kind = 'movie') OR mt.kind_id IS NULL)
GROUP BY 
    ak.name, ci.role_id, mt.title, mt.production_year
HAVING 
    COUNT(DISTINCT mc.company_id) > 0
ORDER BY 
    rank_by_company_count, mt.production_year DESC;
