
WITH RankedMovies AS (
    SELECT 
        a.title,
        a.production_year,
        COUNT(c.person_id) AS cast_count,
        ROW_NUMBER() OVER (PARTITION BY a.production_year ORDER BY COUNT(c.person_id) DESC) AS rank
    FROM 
        aka_title a
    LEFT JOIN 
        cast_info c ON a.id = c.movie_id
    GROUP BY 
        a.id, a.title, a.production_year
),
TopMovies AS (
    SELECT 
        title,
        production_year
    FROM 
        RankedMovies
    WHERE 
        rank <= 5
),
MovieDetails AS (
    SELECT 
        t.title,
        t.production_year,
        STRING_AGG(DISTINCT k.keyword, ', ') AS keywords,
        GROUP_CONCAT(DISTINCT co.name ORDER BY co.name) AS companies
    FROM 
        TopMovies t
    LEFT JOIN 
        movie_keyword mk ON t.title = mk.movie_id
    LEFT JOIN 
        keyword k ON mk.keyword_id = k.id
    LEFT JOIN 
        movie_companies mc ON t.title = mc.movie_id
    LEFT JOIN 
        company_name co ON mc.company_id = co.id
    GROUP BY 
        t.title, t.production_year
)
SELECT 
    md.title,
    md.production_year,
    md.keywords,
    md.companies,
    CASE 
        WHEN md.keywords IS NULL THEN 'No keywords'
        ELSE 'Keywords present'
    END AS keyword_status,
    CASE 
        WHEN EXISTS (SELECT 1 FROM complete_cast cc WHERE cc.movie_id = md.title) THEN 'Complete Cast Available'
        ELSE 'No Complete Cast'
    END AS cast_availability
FROM 
    MovieDetails md
ORDER BY 
    md.production_year DESC;
