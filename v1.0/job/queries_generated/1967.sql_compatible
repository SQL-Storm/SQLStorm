
WITH RankedTitles AS (
    SELECT 
        t.title AS movie_title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.title) AS title_rank
    FROM 
        aka_title t
    WHERE 
        t.production_year IS NOT NULL
),
MovieCompanies AS (
    SELECT 
        mc.movie_id,
        c.name AS company_name,
        ct.kind AS company_type,
        COUNT(*) OVER (PARTITION BY mc.movie_id) AS company_count
    FROM 
        movie_companies mc
    JOIN 
        company_name c ON mc.company_id = c.id
    JOIN 
        company_type ct ON mc.company_type_id = ct.id
),
MovieKeywords AS (
    SELECT 
        mk.movie_id,
        STRING_AGG(k.keyword, ', ') AS keywords
    FROM 
        movie_keyword mk
    JOIN 
        keyword k ON mk.keyword_id = k.id
    GROUP BY 
        mk.movie_id
),
CompleteCast AS (
    SELECT 
        cc.movie_id,
        STRING_AGG(CONCAT(a.name, ' as ', r.role), ', ') AS complete_cast
    FROM 
        complete_cast cc
    JOIN 
        cast_info ci ON cc.subject_id = ci.id
    JOIN 
        aka_name a ON ci.person_id = a.person_id
    JOIN 
        role_type r ON ci.role_id = r.id
    GROUP BY 
        cc.movie_id
)
SELECT 
    rt.movie_title,
    rt.production_year,
    mc.company_name,
    mc.company_type,
    mk.keywords,
    cc.complete_cast,
    CASE 
        WHEN mc.company_count > 5 THEN 'Large Production'
        WHEN mc.company_count IS NULL THEN 'No Production Companies'
        ELSE 'Moderate Production'
    END AS production_scale
FROM 
    RankedTitles rt
LEFT JOIN 
    MovieCompanies mc ON rt.movie_title = mc.movie_id
LEFT JOIN 
    MovieKeywords mk ON rt.movie_title = mk.movie_id
LEFT JOIN 
    CompleteCast cc ON rt.movie_title = cc.movie_id
WHERE 
    rt.title_rank <= 3
ORDER BY 
    rt.production_year DESC, 
    rt.movie_title;
