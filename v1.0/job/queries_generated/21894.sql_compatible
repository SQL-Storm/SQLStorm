
WITH ranked_movies AS (
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.title) AS title_rank,
        COUNT(*) OVER (PARTITION BY t.production_year) AS year_movie_count
    FROM 
        aka_title t
    WHERE 
        t.production_year IS NOT NULL
),
actor_movies AS (
    SELECT 
        c.movie_id,
        a.name AS actor_name,
        COUNT(ci.id) OVER (PARTITION BY c.movie_id) AS actor_count,
        ROW_NUMBER() OVER (PARTITION BY c.movie_id ORDER BY a.name) AS actor_rank
    FROM 
        cast_info c
    JOIN 
        aka_name a ON c.person_id = a.person_id
),
movie_company_info AS (
    SELECT 
        m.movie_id,
        STRING_AGG(DISTINCT cn.name, ', ') AS companies,
        MAX(mt.kind) AS company_type
    FROM 
        movie_companies m
    JOIN 
        company_name cn ON m.company_id = cn.id
    JOIN 
        company_type mt ON m.company_type_id = mt.id
    GROUP BY 
        m.movie_id
),
search_criteria AS (
    SELECT 
        title_id,
        COUNT(DISTINCT km.keyword_id) AS keyword_count
    FROM 
        movie_keyword km
    GROUP BY 
        title_id
)
SELECT 
    rm.title,
    rm.production_year,
    rm.title_rank,
    am.actor_name,
    am.actor_count,
    mci.companies,
    mci.company_type,
    sc.keyword_count
FROM 
    ranked_movies rm
LEFT JOIN 
    actor_movies am ON rm.movie_id = am.movie_id
LEFT JOIN 
    movie_company_info mci ON rm.movie_id = mci.movie_id
LEFT JOIN 
    search_criteria sc ON rm.movie_id = sc.title_id
WHERE 
    (rm.year_movie_count > 1 OR am.actor_count IS NULL)
    AND (mci.companies IS NOT NULL OR rm.production_year < 2000)
ORDER BY 
    rm.production_year DESC, 
    rm.title_rank
LIMIT 100;
