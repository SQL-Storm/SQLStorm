WITH RECURSIVE MovieHierarchy AS (
    
    SELECT 
        t.id AS movie_id,
        t.title AS movie_title,
        t.production_year,
        mt.kind AS movie_type,
        0 AS hierarchy_level
    FROM 
        aka_title t
    JOIN 
        kind_type mt ON t.kind_id = mt.id
    WHERE 
        t.production_year >= 2000 

    UNION ALL

    
    SELECT 
        ml.linked_movie_id AS movie_id,
        t.title AS movie_title,
        t.production_year,
        mt.kind AS movie_type,
        mh.hierarchy_level + 1
    FROM 
        movie_link ml
    JOIN 
        MovieHierarchy mh ON ml.movie_id = mh.movie_id
    JOIN 
        aka_title t ON ml.linked_movie_id = t.id
    JOIN 
        kind_type mt ON t.kind_id = mt.id
)

SELECT 
    mh.movie_title,
    mh.production_year,
    mh.movie_type,
    COUNT(ci.id) AS cast_count,
    AVG(pi.info_text_length) AS avg_info_length,
    SUM(CASE 
            WHEN c.note IS NULL THEN 1 
            ELSE 0 
        END) AS null_notes_count 
FROM 
    MovieHierarchy mh
LEFT JOIN 
    cast_info ci ON mh.movie_id = ci.movie_id
LEFT JOIN 
    person_info pi ON ci.person_id = pi.person_id 
LEFT JOIN 
    complete_cast cc ON mh.movie_id = cc.movie_id 
LEFT JOIN 
    aka_name an ON ci.person_id = an.person_id
LEFT JOIN 
    company_name cn ON an.id = cn.imdb_id 
LEFT JOIN 
    movie_info mi ON mh.movie_id = mi.movie_id 
LEFT JOIN 
    movie_keyword mk ON mh.movie_id = mk.movie_id 
LEFT JOIN 
    keyword k ON mk.keyword_id = k.id 
GROUP BY 
    mh.movie_title, mh.production_year, mh.movie_type
HAVING 
    COUNT(ci.id) > 5 
ORDER BY 
    mh.production_year DESC, 
    avg_info_length DESC;