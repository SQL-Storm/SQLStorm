
WITH RecursiveMovieCTE AS (
    
    SELECT 
        ml.movie_id,
        ml.linked_movie_id,
        1 AS link_depth
    FROM 
        movie_link ml
    WHERE 
        ml.link_type_id = (SELECT id FROM link_type WHERE link = 'remake')

    UNION ALL

    SELECT 
        ml.movie_id,
        ml.linked_movie_id,
        cte.link_depth + 1
    FROM 
        movie_link ml
    JOIN 
        RecursiveMovieCTE cte ON ml.movie_id = cte.linked_movie_id
    WHERE 
        ml.link_type_id = (SELECT id FROM link_type WHERE link = 'remake')
)

SELECT 
    t.title,
    t.production_year,
    a.name AS director_name,
    COUNT(DISTINCT kc.keyword) AS total_keywords,
    MAX(CASE WHEN mi.info_type_id = (SELECT id FROM info_type WHERE info = 'Box Office') THEN mi.info END) AS box_office_info,
    COUNT(DISTINCT ml.linked_movie_id) AS total_linked_remakes,
    SUM(CASE WHEN ci.note LIKE '%lead%' THEN 1 ELSE 0 END) AS lead_roles_count,
    RANK() OVER (PARTITION BY t.production_year ORDER BY COUNT(DISTINCT kc.keyword) DESC) AS keyword_rank
FROM 
    title t
LEFT JOIN 
    aka_title at ON at.movie_id = t.id
LEFT JOIN 
    cast_info ci ON ci.movie_id = t.id
LEFT JOIN 
    aka_name a ON a.person_id = ci.person_id
LEFT JOIN 
    movie_keyword mk ON mk.movie_id = t.id
LEFT JOIN 
    keyword kc ON kc.id = mk.keyword_id
LEFT JOIN 
    movie_info mi ON mi.movie_id = t.id
LEFT JOIN 
    RecursiveMovieCTE rec ON rec.movie_id = t.id
GROUP BY 
    t.title, 
    t.production_year, 
    a.name,
    keyword_rank
HAVING 
    COALESCE(SUM(CASE WHEN ci.note IS NULL THEN 1 ELSE 0 END), 0) < 2
ORDER BY 
    keyword_rank ASC,
    t.production_year DESC;
