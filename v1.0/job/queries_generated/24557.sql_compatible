
WITH RECURSIVE TitleHierarchy AS (
    SELECT 
        t.id AS title_id,
        t.title,
        t.production_year,
        t.kind_id,
        CAST(NULL AS VARCHAR(255)) AS link_type_name,
        CAST(NULL AS INTEGER) AS parent_id
    FROM title t
    WHERE t.production_year IS NOT NULL AND t.production_year >= 2000
    
    UNION ALL
    
    SELECT 
        l.linked_movie_id AS title_id,
        t.title,
        t.production_year,
        t.kind_id,
        lt.link AS link_type_name,
        t.id AS parent_id
    FROM title t
    JOIN movie_link ml ON t.id = ml.movie_id
    JOIN link_type lt ON ml.link_type_id = lt.id
    JOIN TitleHierarchy l ON l.title_id = ml.movie_id
    WHERE ml.link_type_id IN (SELECT id FROM link_type WHERE link LIKE '%Sequels%')
),
ActorInfo AS (
    SELECT 
        ak.name AS actor_name,
        t.title AS movie_title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY ak.id ORDER BY t.production_year DESC) AS rnk
    FROM aka_name ak
    JOIN cast_info ci ON ak.person_id = ci.person_id
    JOIN aka_title at ON ci.movie_id = at.movie_id
    JOIN title t ON at.movie_id = t.id
    WHERE ak.name IS NOT NULL
),
FilteredActorInfo AS (
    SELECT 
        actor_name,
        movie_title,
        production_year
    FROM ActorInfo
    WHERE rnk = 1
),
KeywordStats AS (
    SELECT 
        mk.movie_id,
        COUNT(DISTINCT k.keyword) AS keyword_count
    FROM movie_keyword mk
    JOIN keyword k ON mk.keyword_id = k.id
    GROUP BY mk.movie_id
),
FinalOutput AS (
    SELECT 
        th.title_id,
        th.title,
        th.production_year,
        th.link_type_name,
        COALESCE(fai.actor_name, 'Unknown Actor') AS leading_actor,
        COALESCE(ks.keyword_count, 0) AS associated_keywords
    FROM TitleHierarchy th
    LEFT JOIN FilteredActorInfo fai ON th.title_id = fai.movie_id
    LEFT JOIN KeywordStats ks ON th.title_id = ks.movie_id
)
SELECT 
    fo.title_id,
    fo.title,
    fo.production_year,
    fo.link_type_name,
    fo.leading_actor,
    fo.associated_keywords,
    COALESCE(
        CASE 
            WHEN fo.associated_keywords > 5 THEN 'Popular'
            WHEN fo.associated_keywords BETWEEN 1 AND 5 THEN 'Moderate'
            ELSE 'Unpopular'
        END,
        'No Keywords'
    ) AS keyword_popularity
FROM FinalOutput fo
WHERE fo.production_year BETWEEN 2000 AND 2023
ORDER BY fo.production_year DESC, fo.title ASC;
