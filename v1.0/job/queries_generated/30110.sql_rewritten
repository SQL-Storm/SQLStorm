WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        m.id AS movie_id,
        t.title AS movie_title,
        m.link_type_id,
        1 AS depth
    FROM 
        title t
    JOIN 
        movie_link ml ON t.id = ml.movie_id
    JOIN 
        link_type lt ON ml.link_type_id = lt.id
    WHERE 
        lt.link = 'sequel'
    UNION ALL
    SELECT 
        ml.linked_movie_id,
        t.title,
        ml.link_type_id,
        mh.depth + 1
    FROM 
        movie_hierarchy mh
    JOIN 
        movie_link ml ON mh.movie_id = ml.movie_id
    JOIN 
        title t ON ml.linked_movie_id = t.id
)
SELECT 
    m.movie_id,
    m.movie_title,
    COUNT(DISTINCT cac.person_id) AS cast_count,
    AVG(p.info_type_id = 1) AS avg_director_info,  
    STRING_AGG(DISTINCT k.keyword, ', ') AS keywords,
    ROW_NUMBER() OVER (PARTITION BY m.movie_id ORDER BY mh.depth DESC) AS movie_rank,
    COALESCE(c.name, 'Unknown Company') AS production_company
FROM 
    movie_hierarchy mh
JOIN 
    aka_title m ON mh.movie_id = m.movie_id
LEFT JOIN 
    cast_info cac ON m.movie_id = cac.movie_id
LEFT JOIN 
    movie_companies mc ON m.movie_id = mc.movie_id
LEFT JOIN 
    company_name c ON mc.company_id = c.id
LEFT JOIN 
    movie_keyword mk ON m.movie_id = mk.movie_id
LEFT JOIN 
    keyword k ON mk.keyword_id = k.id
LEFT JOIN 
    person_info p ON cac.person_id = p.person_id
GROUP BY 
    m.movie_id, m.movie_title, production_company
HAVING 
    COUNT(DISTINCT cac.person_id) > 0
ORDER BY 
    movie_rank, m.movie_title;