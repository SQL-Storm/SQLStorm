
WITH RankedTitles AS (
    SELECT 
        title.id AS title_id,
        title.title AS title_name,
        title.production_year,
        ROW_NUMBER() OVER (PARTITION BY title.production_year ORDER BY title.title) AS year_rank
    FROM 
        title
    WHERE 
        title.production_year IS NOT NULL
),
ProcessedCompanies AS (
    SELECT 
        movie_companies.movie_id,
        STRING_AGG(DISTINCT company_name.name, ', ') AS company_names,
        COUNT(DISTINCT company_name.id) AS total_companies
    FROM 
        movie_companies
    JOIN 
        company_name ON movie_companies.company_id = company_name.id
    WHERE 
        company_name.country_code IS NOT NULL
    GROUP BY 
        movie_companies.movie_id
),
FilteredCast AS (
    SELECT 
        cast_info.movie_id,
        ARRAY_AGG(DISTINCT aka_name.name) AS actor_names,
        COUNT(DISTINCT cast_info.person_id) AS actor_count
    FROM 
        cast_info
    JOIN 
        aka_name ON cast_info.person_id = aka_name.person_id
    WHERE 
        aka_name.name IS NOT NULL AND aka_name.name <> ''
    GROUP BY 
        cast_info.movie_id
)
SELECT 
    t.title_name,
    t.production_year,
    COALESCE(fc.actor_count, 0) AS number_of_actors,
    COALESCE(pc.total_companies, 0) AS number_of_companies,
    CASE 
        WHEN COALESCE(pc.total_companies, 0) = 0 THEN 'No Companies'
        WHEN COALESCE(pc.total_companies, 0) < 5 THEN 'Few Companies'
        ELSE 'Many Companies'
    END AS company_count_category,
    COUNT(DISTINCT ml.movie_id) AS related_movies_count,
    (SELECT COUNT(DISTINCT movie_link.linked_movie_id) 
     FROM movie_link 
     WHERE movie_link.movie_id = t.title_id) AS linked_movies_count,
    LEAST(t.year_rank, COALESCE(fc.actor_count, 0)) AS min_rank_actor_count
FROM 
    RankedTitles AS t
LEFT JOIN 
    ProcessedCompanies AS pc ON t.title_id = pc.movie_id
LEFT JOIN 
    FilteredCast AS fc ON t.title_id = fc.movie_id
LEFT JOIN 
    movie_link AS ml ON t.title_id = ml.movie_id
WHERE 
    t.production_year > 2000
GROUP BY 
    t.title_name, t.production_year, pc.total_companies, fc.actor_count, t.year_rank
ORDER BY 
    t.production_year DESC, number_of_actors DESC;
