
WITH RankedMovies AS (
    SELECT 
        t.title,
        t.production_year,
        kc.keyword,
        ROW_NUMBER() OVER (PARTITION BY t.id ORDER BY CAST(cast_info.nr_order AS INTEGER)) AS rank
    FROM 
        aka_title t
    LEFT JOIN 
        movie_keyword mk ON t.id = mk.movie_id
    LEFT JOIN 
        keyword kc ON mk.keyword_id = kc.id
    WHERE 
        t.production_year >= 2000
        AND t.kind_id IN (SELECT id FROM kind_type WHERE kind = 'movie')
),
ActorRoles AS (
    SELECT 
        ai.person_id,
        ai.note,
        COUNT(DISTINCT ai.movie_id) AS movie_count,
        STRING_AGG(DISTINCT t.title, ', ') AS movie_titles
    FROM 
        cast_info ai
    JOIN 
        aka_name an ON ai.person_id = an.person_id
    JOIN 
        title t ON ai.movie_id = t.id
    WHERE 
        an.name ILIKE '%John%'
    GROUP BY 
        ai.person_id, ai.note
),
MovieCompanyInfo AS (
    SELECT 
        mc.movie_id,
        COUNT(DISTINCT c.name) AS company_count,
        STRING_AGG(DISTINCT c.name, '; ') AS companies
    FROM 
        movie_companies mc
    JOIN 
        company_name c ON mc.company_id = c.id
    GROUP BY 
        mc.movie_id
)
SELECT 
    rm.title,
    rm.production_year,
    ar.person_id,
    ar.note AS actor_role,
    ar.movie_count,
    ar.movie_titles,
    mci.company_count,
    mci.companies
FROM 
    RankedMovies rm
LEFT JOIN 
    ActorRoles ar ON rm.title = ar.movie_titles
LEFT JOIN 
    MovieCompanyInfo mci ON rm.id = mci.movie_id
WHERE 
    rm.production_year BETWEEN 2000 AND 2023
    AND (mci.company_count IS NULL OR mci.company_count > 3)
    AND rm.rank = 1
ORDER BY 
    rm.production_year DESC, ar.movie_count DESC;
