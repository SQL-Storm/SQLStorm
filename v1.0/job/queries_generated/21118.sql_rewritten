WITH RankedMovies AS (
    SELECT 
        mt.title,
        mt.production_year,
        COUNT(cc.person_id) AS total_cast_members,
        ROW_NUMBER() OVER (PARTITION BY mt.production_year ORDER BY COUNT(cc.person_id) DESC) as rank
    FROM 
        aka_title mt
    JOIN 
        complete_cast cc ON mt.id = cc.movie_id
    GROUP BY 
        mt.title, mt.production_year
),
FilteredMovies AS (
    SELECT 
        title,
        production_year,
        total_cast_members
    FROM 
        RankedMovies
    WHERE 
        rank <= 5 
),
MovieKeywords AS (
    SELECT 
        mt.title,
        mk.keyword 
    FROM 
        aka_title mt
    LEFT JOIN 
        movie_keyword mk ON mt.id = mk.movie_id
)
SELECT 
    fm.title,
    fm.production_year,
    COALESCE(mk.keyword, 'No Keywords') AS keyword_info,
    fm.total_cast_members,
    CASE 
        WHEN fm.total_cast_members > 10 THEN 'Large'
        WHEN fm.total_cast_members BETWEEN 5 AND 10 THEN 'Medium'
        ELSE 'Small'
    END AS cast_size_category
FROM 
    FilteredMovies fm
LEFT JOIN 
    MovieKeywords mk ON fm.title = mk.title
ORDER BY 
    fm.production_year ASC, 
    fm.total_cast_members DESC
OFFSET 5 ROWS 
FETCH NEXT 10 ROWS ONLY;