WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        m.id AS movie_id,
        m.title,
        m.production_year,
        0 AS level,
        ARRAY[m.title] AS title_path
    FROM 
        aka_title m
    WHERE 
        m.production_year IS NOT NULL
    UNION ALL
    SELECT 
        linked.movie_id,
        l.title,
        l.production_year,
        mh.level + 1,
        mh.title_path || l.title
    FROM 
        movie_link ml
    JOIN 
        aka_title l ON ml.linked_movie_id = l.id
    JOIN 
        movie_hierarchy mh ON ml.movie_id = mh.movie_id
)
SELECT 
    mv.title AS linked_movie_title,
    mv.production_year AS linked_movie_year,
    ARRAY_TO_STRING(mh.title_path, ' -> ') AS full_title_path,
    STRING_AGG(DISTINCT ak.name, ', ') AS actor_names,
    COUNT(DISTINCT kc.id) AS keyword_count,
    ROW_NUMBER() OVER (PARTITION BY mv.production_year ORDER BY mv.title) AS year_order
FROM 
    movie_hierarchy mh
JOIN 
    aka_title mv ON mh.movie_id = mv.id
LEFT JOIN 
    cast_info ci ON ci.movie_id = mv.id
LEFT JOIN 
    aka_name ak ON ak.person_id = ci.person_id
LEFT JOIN 
    movie_keyword mk ON mk.movie_id = mv.id
LEFT JOIN 
    keyword kc ON kc.id = mk.keyword_id
WHERE 
    mv.production_year > 2000 
    AND mv.title IS NOT NULL
    AND (ak.name IS NOT NULL OR ak.id IS NULL) 
GROUP BY 
    mv.id, mv.title, mv.production_year, mh.level
HAVING 
    COUNT(DISTINCT ak.name) > 2
    OR COUNT(DISTINCT kc.keyword) > 5
ORDER BY 
    mv.production_year DESC, full_title_path;