
WITH RankedMovies AS (
    SELECT 
        t.title,
        t.production_year,
        COUNT(c.id) AS cast_count,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY COUNT(c.id) DESC) AS rn
    FROM 
        aka_title t
    LEFT JOIN 
        cast_info c ON t.id = c.movie_id
    GROUP BY 
        t.title, t.production_year
),
TopMovies AS (
    SELECT 
        title, 
        production_year 
    FROM 
        RankedMovies 
    WHERE 
        rn <= 10
),
MovieKeywords AS (
    SELECT 
        t.id AS movie_id,
        STRING_AGG(k.keyword, ', ') AS keywords
    FROM 
        aka_title t
    JOIN 
        movie_keyword mk ON t.id = mk.movie_id
    JOIN 
        keyword k ON mk.keyword_id = k.id
    GROUP BY 
        t.id
),
MovieDetails AS (
    SELECT 
        tm.title,
        tm.production_year,
        mk.keywords,
        COALESCE(COUNT(DISTINCT mc.company_id), 0) AS company_count
    FROM 
        TopMovies tm
    LEFT JOIN 
        MovieKeywords mk ON tm.title = mk.movie_id
    LEFT JOIN 
        movie_companies mc ON tm.title = mc.movie_id
    GROUP BY 
        tm.title, tm.production_year, mk.keywords
)

SELECT 
    md.title,
    md.production_year,
    md.keywords,
    md.company_count,
    CASE 
        WHEN md.company_count > 5 THEN 'Major Production'
        WHEN md.company_count BETWEEN 1 AND 5 THEN 'Independent'
        ELSE 'No Companies'
    END AS production_type
FROM 
    MovieDetails md
WHERE 
    md.production_year >= 2000
ORDER BY 
    md.production_year DESC, md.company_count DESC
LIMIT 
    100;
