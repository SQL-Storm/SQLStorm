
WITH RankedTitles AS (
    SELECT 
        a.title,
        a.production_year,
        ROW_NUMBER() OVER (PARTITION BY a.kind_id ORDER BY a.production_year DESC) AS rank
    FROM 
        aka_title a
)

SELECT 
    c.person_id,
    n.name AS person_name,
    COUNT(DISTINCT mc.movie_id) AS total_movies,
    AVG(m.production_year) AS average_production_year,
    STRING_AGG(DISTINCT rt.title, ', ') AS titles,
    CASE 
        WHEN AVG(m.production_year) IS NULL THEN 'No Data'
        WHEN AVG(m.production_year) < 2000 THEN 'Older Movies'
        ELSE 'Recent Movies'
    END AS movie_age_category

FROM 
    cast_info c
LEFT JOIN 
    name n ON c.person_id = n.imdb_id
INNER JOIN 
    movie_companies mc ON c.movie_id = mc.movie_id
LEFT JOIN 
    title m ON mc.movie_id = m.id
LEFT JOIN 
    RankedTitles rt ON m.id = rt.title AND rt.rank <= 3
WHERE 
    c.nr_order IS NOT NULL 
    AND n.gender IS NOT NULL
GROUP BY 
    c.person_id, n.name, AVG(m.production_year)
HAVING 
    COUNT(DISTINCT mc.movie_id) > 5
ORDER BY 
    total_movies DESC;
