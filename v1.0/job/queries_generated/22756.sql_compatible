
WITH movie_details AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        ARRAY_AGG(DISTINCT co.name ORDER BY co.name) AS companies,
        COUNT(DISTINCT ci.person_id) AS actor_count,
        AVG(COALESCE(ci.nr_order, 0)) AS avg_order,
        COALESCE(SUM(CASE WHEN mi.info_type_id = 1 THEN LENGTH(mi.info) ELSE 0 END), 0) AS total_info_length
    FROM 
        aka_title mt
    LEFT JOIN 
        movie_companies mc ON mt.movie_id = mc.movie_id
    LEFT JOIN 
        company_name co ON mc.company_id = co.id
    LEFT JOIN 
        complete_cast cc ON mt.movie_id = cc.movie_id
    LEFT JOIN 
        cast_info ci ON cc.subject_id = ci.id
    LEFT JOIN 
        movie_info mi ON mt.movie_id = mi.movie_id
    WHERE 
        mt.production_year BETWEEN 1990 AND 2000
        AND mt.title IS NOT NULL
    GROUP BY 
        mt.id, mt.title, mt.production_year
),
ranked_movies AS (
    SELECT 
        md.movie_id,
        md.title,
        md.production_year,
        md.companies,
        md.actor_count,
        md.avg_order,
        md.total_info_length,
        RANK() OVER (ORDER BY md.actor_count DESC, md.total_info_length DESC) AS movie_rank
    FROM 
        movie_details md
)

SELECT 
    rm.movie_id,
    rm.title,
    rm.production_year,
    rm.companies,
    rm.actor_count,
    rm.avg_order,
    rm.total_info_length,
    CASE 
        WHEN rm.actor_count > 10 THEN 'Highly Casted'
        WHEN rm.actor_count BETWEEN 5 AND 10 THEN 'Moderately Casted'
        ELSE 'Low Cast Count' 
    END AS casting_analysis,
    (SELECT COUNT(*) FROM aka_name an WHERE an.person_id IN (SELECT DISTINCT ci.person_id FROM cast_info ci WHERE ci.movie_id = rm.movie_id)) AS distinct_actors
FROM 
    ranked_movies rm
WHERE 
    rm.movie_rank <= 10
ORDER BY 
    rm.actor_count DESC, rm.production_year;
