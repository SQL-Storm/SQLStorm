
WITH RECURSIVE movie_hierarchy AS (
    SELECT
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        NULL AS parent_id
    FROM
        aka_title mt
    WHERE
        mt.kind_id = 1 

    UNION ALL

    SELECT
        mt.id,
        mt.title,
        mt.production_year,
        mh.movie_id
    FROM
        aka_title mt
    INNER JOIN
        movie_hierarchy mh ON mt.episode_of_id = mh.movie_id
),
actor_details AS (
    SELECT
        ka.id AS actor_id,
        ka.name AS actor_name,
        ka.person_id,
        ARRAY_AGG(DISTINCT k.keyword) AS keywords
    FROM
        aka_name ka
    JOIN
        cast_info ci ON ka.person_id = ci.person_id
    LEFT JOIN
        movie_keyword mk ON ci.movie_id = mk.movie_id
    LEFT JOIN
        keyword k ON mk.keyword_id = k.id
    GROUP BY
        ka.id, ka.name, ka.person_id
),
rated_movies AS (
    SELECT
        m.id AS movie_id,
        m.title,
        m.production_year,
        COALESCE(AVG(r.rating), 0) AS avg_rating
    FROM
        aka_title m
    LEFT JOIN
        movie_info mi ON m.id = mi.movie_id AND mi.info_type_id = (SELECT id FROM info_type WHERE info = 'rating')
    LEFT JOIN (
        SELECT
            movie_id,
            COALESCE(rating, 0) AS rating
        FROM (
            SELECT
                movie_id,
                ROW_NUMBER() OVER (PARTITION BY movie_id ORDER BY rating DESC) AS rn,
                rating
            FROM
                movie_info
            WHERE
                info_type_id IN (SELECT id FROM info_type WHERE info IN ('rating', 'average rating'))
        ) AS subquery
        WHERE
            rn = 1
    ) r ON m.id = r.movie_id
    GROUP BY
        m.id, m.title, m.production_year
)
SELECT
    mh.movie_id,
    mh.title,
    mh.production_year,
    ad.actor_name,
    ad.keywords,
    COALESCE(rm.avg_rating, 'Not Rated') AS average_rating
FROM
    movie_hierarchy mh
LEFT JOIN
    cast_info ci ON mh.movie_id = ci.movie_id
LEFT JOIN
    actor_details ad ON ci.person_id = ad.person_id
LEFT JOIN
    rated_movies rm ON mh.movie_id = rm.movie_id
WHERE
    mh.production_year BETWEEN 1990 AND 2023 
    AND (rm.avg_rating IS NULL OR rm.avg_rating >= 7) 
ORDER BY
    mh.production_year DESC, mh.title;
