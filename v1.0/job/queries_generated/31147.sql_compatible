
WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        1 AS level
    FROM
        aka_title mt
    WHERE
        mt.kind_id = (SELECT id FROM kind_type WHERE kind = 'movie')
    
    UNION ALL
    
    SELECT 
        ml.linked_movie_id,
        at.title,
        at.production_year,
        mh.level + 1
    FROM 
        movie_link ml
    JOIN 
        aka_title at ON ml.movie_id = at.id
    JOIN 
        movie_hierarchy mh ON ml.movie_id = mh.movie_id
)

SELECT 
    ak.name AS actor_name,
    mt.title AS movie_title,
    mt.production_year,
    COUNT(ki.keyword) AS keyword_count,
    AVG(pi.age) AS avg_actor_age,
    STRING_AGG(DISTINCT ct.kind, ', ') AS company_types,
    mh.level AS movie_level
FROM 
    cast_info ci
JOIN 
    aka_name ak ON ci.person_id = ak.person_id
JOIN 
    aka_title mt ON ci.movie_id = mt.id
JOIN 
    movie_keyword mk ON mk.movie_id = mt.id
JOIN 
    keyword ki ON mk.keyword_id = ki.id
LEFT JOIN 
    movie_companies mc ON mc.movie_id = mt.id
LEFT JOIN 
    company_type ct ON mc.company_type_id = ct.id
LEFT JOIN 
    person_info pi ON ci.person_id = pi.person_id AND pi.info_type_id = (SELECT id FROM info_type WHERE info = 'age')
LEFT JOIN 
    movie_hierarchy mh ON mh.movie_id = mt.id
WHERE 
    mt.production_year >= 2000
    AND ak.name IS NOT NULL
GROUP BY 
    ak.name, mt.title, mt.production_year, mh.level
HAVING 
    COUNT(ki.keyword) > 0
ORDER BY 
    mt.production_year DESC, ak.name;
