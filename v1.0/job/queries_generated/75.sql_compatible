
WITH RankedMovies AS (
    SELECT 
        t.title,
        t.production_year,
        COUNT(ci.person_id) AS actor_count,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY COUNT(ci.person_id) DESC) AS rn
    FROM 
        aka_title t
    JOIN 
        cast_info ci ON t.id = ci.movie_id
    GROUP BY 
        t.title, 
        t.production_year
),
TopMovies AS (
    SELECT 
        title, 
        production_year 
    FROM 
        RankedMovies 
    WHERE 
        rn <= 5
),
ActorDetails AS (
    SELECT 
        a.name AS actor_name, 
        t.title AS movie_title,
        COALESCE(pi.info, 'No info available') AS actor_info
    FROM 
        aka_name a
    JOIN 
        cast_info ci ON a.person_id = ci.person_id
    JOIN 
        TopMovies tm ON ci.movie_id = (SELECT id FROM aka_title WHERE title = tm.title AND production_year = tm.production_year)
    LEFT JOIN 
        person_info pi ON a.person_id = pi.person_id
)
SELECT 
    ad.actor_name,
    ad.movie_title,
    CASE 
        WHEN ad.actor_info IS NOT NULL THEN ad.actor_info 
        ELSE 'Not provided' 
    END AS info
FROM 
    ActorDetails ad
WHERE 
    ad.actor_name LIKE 'A%' 
    OR EXISTS (
        SELECT 1 
        FROM movie_keyword mk 
        JOIN keyword k ON mk.keyword_id = k.id 
        WHERE mk.movie_id IN (SELECT id FROM aka_title WHERE title = ad.movie_title)
        AND k.keyword LIKE '%Action%'
    )
ORDER BY 
    ad.movie_title, 
    ad.actor_name;
