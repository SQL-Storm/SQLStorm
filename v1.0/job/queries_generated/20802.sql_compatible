
WITH RankedTitles AS (
    SELECT 
        t.id AS title_id,
        t.title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.production_year DESC) AS rank_by_year
    FROM 
        aka_title t
    WHERE 
        t.kind_id IN (SELECT id FROM kind_type WHERE kind IN ('feature', 'short'))
),

ActorRoles AS (
    SELECT 
        a.person_id,
        a.movie_id,
        r.role,
        ROW_NUMBER() OVER (PARTITION BY a.person_id, a.movie_id ORDER BY a.nr_order) AS role_rank
    FROM 
        cast_info a
    JOIN 
        role_type r ON a.role_id = r.id
),

ZombieMovies AS (
    SELECT 
        m.id,
        m.title,
        m.production_year
    FROM 
        aka_title m
    JOIN 
        movie_keyword mk ON m.id = mk.movie_id
    JOIN 
        keyword k ON mk.keyword_id = k.id
    WHERE 
        k.keyword LIKE '%zombie%'
),

CompanyMovieStats AS (
    SELECT 
        mc.movie_id,
        COUNT(DISTINCT c.id) AS company_count,
        STRING_AGG(DISTINCT co.name, ', ') AS company_names
    FROM 
        movie_companies mc
    JOIN 
        company_name co ON mc.company_id = co.id
    GROUP BY 
        mc.movie_id
)

SELECT 
    rt.title,
    rt.production_year,
    COALESCE(ar.role, 'No role') AS actor_role,
    COALESCE(ZM.title, 'Non-Zombie') AS zombie_title,
    cms.company_count,
    cms.company_names
FROM 
    RankedTitles rt
LEFT JOIN 
    ActorRoles ar ON rt.title_id = ar.movie_id AND ar.role_rank = 1
LEFT JOIN 
    ZombieMovies ZM ON rt.title_id = ZM.id
LEFT JOIN 
    CompanyMovieStats cms ON rt.title_id = cms.movie_id
WHERE 
    rt.rank_by_year <= 5 
    AND (cms.company_count IS NULL OR cms.company_count > 1)
GROUP BY 
    rt.title,
    rt.production_year,
    ar.role,
    ZM.title,
    cms.company_count,
    cms.company_names
ORDER BY 
    rt.production_year DESC, rt.title;
