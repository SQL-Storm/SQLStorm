
WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        m.title,
        m.production_year,
        1 AS level,
        m.id AS movie_id
    FROM 
        aka_title m
    WHERE 
        m.kind_id IN (SELECT id FROM kind_type WHERE kind = 'movie')

    UNION ALL

    SELECT 
        m.title,
        m.production_year,
        mh.level + 1,
        m.id AS movie_id
    FROM 
        aka_title m
    JOIN 
        movie_link ml ON ml.movie_id = m.id
    JOIN 
        MovieHierarchy mh ON mh.movie_id = ml.linked_movie_id
)

SELECT 
    ak.name AS actor_name,
    at.title AS movie_title,
    COUNT(DISTINCT mc.company_id) AS production_company_count,
    AVG(CASE 
        WHEN mi.info_type_id IS NOT NULL THEN 1 
        ELSE 0 
    END) * 100 AS info_completion_rate,
    ROW_NUMBER() OVER(PARTITION BY ak.person_id ORDER BY at.production_year DESC) AS actor_movie_rank,
    MAX(CASE 
        WHEN ak.name IS NULL THEN 'Unknown' 
        ELSE ak.name 
    END) AS resolved_actor_name,
    COALESCE((
        SELECT 
            COUNT(*) 
        FROM 
            movie_info mi 
        WHERE 
            mi.movie_id = at.id
    ), 0) AS related_info_count
FROM 
    aka_name ak
JOIN 
    cast_info ci ON ak.person_id = ci.person_id
JOIN 
    aka_title at ON ci.movie_id = at.id
LEFT JOIN 
    movie_companies mc ON at.id = mc.movie_id
LEFT JOIN 
    movie_info mi ON at.id = mi.movie_id AND mi.info_type_id = (SELECT id FROM info_type WHERE info = 'tagline')
WHERE 
    ak.name ILIKE '%John%'
GROUP BY 
    ak.person_id, ak.name, at.title, at.production_year
HAVING 
    COUNT(DISTINCT ci.role_id) > 1
ORDER BY 
    at.production_year DESC, ak.name;
