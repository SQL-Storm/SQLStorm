
WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        0 AS level
    FROM 
        aka_title mt
    WHERE 
        mt.production_year IS NOT NULL

    UNION ALL

    SELECT 
        ml.linked_movie_id AS movie_id,
        m.title,
        m.production_year,
        mh.level + 1
    FROM 
        movie_link ml
    JOIN 
        aka_title m ON ml.linked_movie_id = m.id
    JOIN 
        MovieHierarchy mh ON ml.movie_id = mh.movie_id
),

CastRanking AS (
    SELECT 
        ci.movie_id,
        ci.person_id,
        c.name,
        ROW_NUMBER() OVER (PARTITION BY ci.movie_id ORDER BY ci.nr_order) AS role_order
    FROM 
        cast_info ci
    JOIN 
        aka_name c ON c.person_id = ci.person_id
),

MovieKeywords AS (
    SELECT 
        mk.movie_id,
        STRING_AGG(k.keyword, ', ') AS keywords
    FROM 
        movie_keyword mk
    JOIN 
        keyword k ON mk.keyword_id = k.id
    GROUP BY 
        mk.movie_id
),

MovieDetails AS (
    SELECT 
        mh.movie_id,
        mh.title,
        mh.production_year,
        COALESCE(cr.name, 'Unknown') AS director,
        COALESCE(mk.keywords, 'No Keywords') AS keywords,
        COUNT(cast_persons.person_id) AS cast_count
    FROM 
        MovieHierarchy mh
    LEFT JOIN 
        movie_companies mc ON mh.movie_id = mc.movie_id
    LEFT JOIN 
        aka_name cr ON mc.company_id = cr.person_id AND mc.company_type_id = (SELECT id FROM company_type WHERE kind = 'Director') 
    LEFT JOIN 
        CastRanking cast_persons ON mh.movie_id = cast_persons.movie_id
    LEFT JOIN 
        MovieKeywords mk ON mh.movie_id = mk.movie_id
    GROUP BY 
        mh.movie_id, mh.title, mh.production_year, cr.name, mk.keywords
)

SELECT 
    md.movie_id,
    md.title,
    md.production_year,
    md.director,
    md.keywords,
    md.cast_count,
    CASE 
        WHEN md.cast_count > 10 THEN 'Highly Casted'
        WHEN md.cast_count BETWEEN 5 AND 10 THEN 'Moderately Casted'
        ELSE 'Less Casted' 
    END AS casting_category
FROM 
    MovieDetails md
WHERE 
    md.keywords IS NOT NULL
    AND md.production_year >= 2000
ORDER BY 
    md.production_year DESC, md.cast_count DESC
LIMIT 100;
