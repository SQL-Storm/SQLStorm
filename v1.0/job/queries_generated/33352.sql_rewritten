WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        m.id AS movie_id,
        m.title,
        m.production_year,
        ml.linked_movie_id,
        1 AS level
    FROM 
        title m
    LEFT JOIN 
        movie_link ml ON m.id = ml.movie_id
    WHERE 
        m.production_year >= 2000

    UNION ALL

    SELECT 
        mh.movie_id,
        t.title,
        t.production_year,
        ml.linked_movie_id,
        mh.level + 1
    FROM 
        movie_hierarchy mh
    JOIN 
        movie_link ml ON mh.linked_movie_id = ml.movie_id
    JOIN 
        title t ON ml.linked_movie_id = t.id
)

SELECT 
    th.title AS related_movie_title,
    th.production_year AS related_movie_year,
    ak.name AS actor_name,
    pk.keyword AS movie_keyword,
    COUNT(DISTINCT ca.person_id) AS actor_count,
    SUM(CASE 
        WHEN ca.note IS NOT NULL THEN 1 
        ELSE 0 
    END) AS note_count,
    ROW_NUMBER() OVER (PARTITION BY th.id ORDER BY COUNT(DISTINCT ca.person_id) DESC) AS rank
FROM 
    movie_hierarchy mh
JOIN 
    title th ON mh.movie_id = th.id
LEFT JOIN 
    movie_keyword mk ON th.id = mk.movie_id
LEFT JOIN 
    keyword pk ON mk.keyword_id = pk.id
JOIN 
    complete_cast cc ON th.id = cc.movie_id
JOIN 
    cast_info ca ON cc.subject_id = ca.id
JOIN 
    aka_name ak ON ca.person_id = ak.person_id
WHERE 
    th.production_year IS NOT NULL
    AND (mh.level < 3 OR mh.level IS NULL)
GROUP BY 
    th.id, ak.name, pk.keyword
HAVING 
    COUNT(DISTINCT ca.person_id) > 1
ORDER BY 
    th.production_year DESC, rank
LIMIT 50;