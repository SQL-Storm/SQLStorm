
WITH RankedMovies AS (
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        RANK() OVER (PARTITION BY t.production_year ORDER BY COUNT(c.person_id) DESC) AS movie_rank,
        STRING_AGG(DISTINCT a.name, ', ') AS actor_names
    FROM 
        aka_title t
    LEFT JOIN 
        cast_info c ON t.movie_id = c.movie_id
    LEFT JOIN 
        aka_name a ON c.person_id = a.person_id
    GROUP BY 
        t.id, t.title, t.production_year
), ActorsInMultipleMovies AS (
    SELECT 
        a.id AS actor_id,
        a.name,
        COUNT(DISTINCT c.movie_id) AS movie_count
    FROM 
        aka_name a
    JOIN 
        cast_info c ON a.person_id = c.person_id
    GROUP BY 
        a.id, a.name
    HAVING 
        COUNT(DISTINCT c.movie_id) > 1
), RecentHighlyRatedMovies AS (
    SELECT 
        m.movie_id,
        m.title,
        m.production_year,
        COALESCE(mi.info, 'No Info') AS additional_info
    FROM 
        RankedMovies m
    LEFT JOIN 
        movie_info mi ON m.movie_id = mi.movie_id AND mi.info_type_id = (SELECT id FROM info_type WHERE info = 'Rating' LIMIT 1)
    WHERE 
        m.movie_rank <= 10
)

SELECT 
    rm.title,
    rm.production_year,
    rm.actor_names,
    COALESCE(ah.actor_id, -1) AS actor_id,
    ah.name AS actor_name,
    ah.movie_count AS total_movies_with_actor
FROM 
    RecentHighlyRatedMovies rm
FULL OUTER JOIN 
    ActorsInMultipleMovies ah ON rm.actor_names LIKE '%' || ah.name || '%'
WHERE 
    (ah.movie_count IS NOT NULL OR rm.production_year > 2018)
ORDER BY 
    rm.production_year DESC, 
    rm.title ASC
LIMIT 15
OFFSET 5;
