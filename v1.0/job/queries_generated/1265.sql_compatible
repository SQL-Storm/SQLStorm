
WITH RankedMovies AS (
    SELECT
        t.id AS movie_id,
        t.title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.title) AS title_rank,
        COUNT(DISTINCT mi.info) OVER (PARTITION BY t.id) AS info_count,
        COALESCE(GROUP_CONCAT(DISTINCT k.keyword), 'None') AS keywords
    FROM 
        title t
    LEFT JOIN 
        movie_info mi ON t.id = mi.movie_id
    LEFT JOIN 
        movie_keyword mk ON t.id = mk.movie_id
    LEFT JOIN 
        keyword k ON mk.keyword_id = k.id
    GROUP BY 
        t.id, t.title, t.production_year
),
MainCast AS (
    SELECT
        ci.movie_id,
        a.name AS actor_name,
        rt.role,
        ci.nr_order
    FROM
        cast_info ci
    JOIN
        aka_name a ON ci.person_id = a.person_id
    JOIN
        role_type rt ON ci.role_id = rt.id
),
MovieCompanies AS (
    SELECT
        mc.movie_id,
        GROUP_CONCAT(cn.name) AS company_names,
        COUNT(DISTINCT mc.company_id) AS company_count
    FROM
        movie_companies mc
    LEFT JOIN
        company_name cn ON mc.company_id = cn.id
    GROUP BY
        mc.movie_id
)
SELECT
    rm.movie_id,
    rm.title,
    rm.production_year,
    rm.title_rank,
    rm.info_count,
    rm.keywords,
    mc.company_names,
    mc.company_count,
    GROUP_CONCAT(DISTINCT CONCAT(ac.actor_name, ' as ', ac.role)) AS cast_list
FROM
    RankedMovies rm
LEFT JOIN
    MainCast ac ON rm.movie_id = ac.movie_id
LEFT JOIN
    MovieCompanies mc ON rm.movie_id = mc.movie_id
WHERE
    rm.production_year >= 2000
GROUP BY
    rm.movie_id, rm.title, rm.production_year, rm.title_rank, rm.info_count, mc.company_names, mc.company_count
ORDER BY
    rm.production_year DESC, rm.title;
