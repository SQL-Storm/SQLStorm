
WITH RankedMovies AS (
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        COUNT(DISTINCT c.person_id) OVER (PARTITION BY t.id) AS total_cast,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY COUNT(DISTINCT c.person_id) DESC) AS rank
    FROM 
        aka_title t
    LEFT JOIN 
        complete_cast cc ON t.id = cc.movie_id
    LEFT JOIN 
        cast_info c ON cc.subject_id = c.id
    WHERE 
        t.production_year IS NOT NULL
    GROUP BY 
        t.id, t.title, t.production_year
),
TopMovies AS (
    SELECT 
        movie_id, 
        title, 
        production_year,
        total_cast
    FROM 
        RankedMovies
    WHERE 
        rank <= 5
),
MovieDetails AS (
    SELECT 
        tm.movie_id,
        tm.title,
        tm.production_year,
        k.keyword,
        company.name AS company_name,
        pt.info AS person_info
    FROM 
        TopMovies tm
    LEFT JOIN 
        movie_keyword mk ON tm.movie_id = mk.movie_id
    LEFT JOIN 
        keyword k ON mk.keyword_id = k.id
    LEFT JOIN 
        movie_companies mc ON tm.movie_id = mc.movie_id
    LEFT JOIN 
        company_name company ON mc.company_id = company.id
    LEFT JOIN 
        complete_cast cc ON tm.movie_id = cc.movie_id
    LEFT JOIN 
        cast_info ci ON cc.subject_id = ci.id
    LEFT JOIN 
        person_info pt ON ci.person_id = pt.person_id
    WHERE 
        mc.company_type_id IS NOT NULL
        AND pt.info_type_id IS NOT NULL
    ORDER BY 
        tm.production_year DESC, total_cast DESC
)
SELECT 
    md.title,
    md.production_year,
    COUNT(DISTINCT md.keyword) AS number_of_keywords,
    STRING_AGG(DISTINCT md.company_name, ', ') AS companies_involved,
    COALESCE(STRING_AGG(DISTINCT md.person_info, '; '), 'No info available') AS person_info
FROM 
    MovieDetails md
GROUP BY 
    md.title, md.production_year
HAVING 
    COUNT(DISTINCT md.person_info) > 0
ORDER BY 
    md.production_year DESC;
