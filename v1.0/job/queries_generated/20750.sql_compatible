
WITH RankedMovies AS (
    SELECT
        t.id AS movie_id,
        t.title,
        t.production_year,
        RANK() OVER (PARTITION BY t.production_year ORDER BY COALESCE(mci.company_id, 0) DESC) AS rank_by_company
    FROM
        aka_title t
    LEFT JOIN
        movie_companies mci ON t.id = mci.movie_id
    WHERE
        t.production_year >= 2000
),
TopMovies AS (
    SELECT
        rm.movie_id,
        rm.title,
        rm.production_year
    FROM
        RankedMovies rm
    WHERE
        rm.rank_by_company <= 3
),
RoleCounts AS (
    SELECT
        ci.movie_id,
        COUNT(DISTINCT ci.person_id) AS distinct_role_count
    FROM
        cast_info ci
    WHERE
        ci.note IS NULL OR ci.note <> 'cameo'
    GROUP BY
        ci.movie_id
),
MovieDetails AS (
    SELECT
        tm.movie_id,
        tm.title,
        tm.production_year,
        COALESCE(rc.distinct_role_count, 0) AS role_count,
        CASE
            WHEN rc.distinct_role_count IS NULL THEN 'No roles'
            WHEN rc.distinct_role_count = 0 THEN 'Uncredited'
            ELSE 'Has roles'
        END AS role_status
    FROM
        TopMovies tm
    LEFT JOIN
        RoleCounts rc ON tm.movie_id = rc.movie_id
),
MovieInfo AS (
    SELECT
        md.movie_id,
        md.title,
        md.production_year,
        md.role_count,
        md.role_status,
        STRING_AGG(DISTINCT kw.keyword, ', ') AS keywords
    FROM
        MovieDetails md
    LEFT JOIN
        movie_keyword mk ON md.movie_id = mk.movie_id
    LEFT JOIN
        keyword kw ON mk.keyword_id = kw.id
    GROUP BY
        md.movie_id, md.title, md.production_year, md.role_count, md.role_status
)
SELECT
    mi.title AS movie_title,
    mi.production_year,
    mi.role_count,
    mi.role_status,
    CASE
        WHEN mi.role_count > 0 THEN 'Produced'
        ELSE 'Not produced'
    END AS production_status,
    CASE
        WHEN COUNT(mi.keywords) > 0 THEN mi.keywords
        ELSE 'No keywords available'
    END AS keywords_list
FROM
    MovieInfo mi
GROUP BY
    mi.title, mi.production_year, mi.role_count, mi.role_status
ORDER BY
    mi.production_year DESC,
    mi.role_count DESC;
