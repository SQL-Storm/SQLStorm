
WITH RankedMovies AS (
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        t.kind_id,
        ROW_NUMBER() OVER (PARTITION BY t.kind_id ORDER BY t.production_year DESC) AS rn,
        COUNT(*) OVER (PARTITION BY t.kind_id) AS kind_count
    FROM 
        aka_title t
    WHERE 
        t.production_year IS NOT NULL
),
ActorMovieCount AS (
    SELECT 
        ci.person_id,
        COUNT(DISTINCT ci.movie_id) AS movie_count
    FROM 
        cast_info ci
    JOIN 
        RankedMovies rm ON ci.movie_id = rm.movie_id
    WHERE 
        ci.nr_order IS NOT NULL
    GROUP BY 
        ci.person_id
),
RelatedMovies AS (
    SELECT 
        ml.movie_id,
        ml.linked_movie_id,
        lt.link AS link_type
    FROM 
        movie_link ml
    JOIN 
        link_type lt ON ml.link_type_id = lt.id
    WHERE 
        lt.link NOT LIKE '%trailer%'  
),
MovieCompanies AS (
    SELECT 
        mc.movie_id,
        COUNT(DISTINCT c.name) AS company_count
    FROM 
        movie_companies mc
    JOIN 
        company_name c ON mc.company_id = c.id
    WHERE 
        c.country_code IS NOT NULL
    GROUP BY 
        mc.movie_id
),
MoviesWithActors AS (
    SELECT 
        rm.movie_id,
        rm.title,
        rm.production_year,
        amc.movie_count,
        COALESCE(mk.keyword, 'No Keywords') AS keywords,
        COALESCE(mc.company_count, 0) AS company_count
    FROM 
        RankedMovies rm
    LEFT JOIN 
        ActorMovieCount amc ON rm.movie_id = amc.person_id
    LEFT JOIN 
        movie_keyword mk ON rm.movie_id = mk.movie_id
    LEFT JOIN 
        MovieCompanies mc ON rm.movie_id = mc.movie_id
    WHERE 
        rm.rn <= 5  
)
SELECT 
    m.title,
    m.production_year,
    m.movie_count,
    m.keywords,
    m.company_count,
    RANK() OVER (ORDER BY m.production_year DESC, m.movie_count DESC) AS rank
FROM 
    MoviesWithActors m
WHERE 
    m.company_count > 2  
AND 
    m.production_year BETWEEN 2000 AND 2023  
ORDER BY 
    m.production_year DESC, 
    m.movie_count DESC;
