WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        NULL::integer AS parent_movie_id,
        1 AS level
    FROM 
        aka_title mt 
    WHERE 
        mt.kind_id = (SELECT id FROM kind_type WHERE kind = 'movie')

    UNION ALL

    SELECT 
        ml.linked_movie_id,
        at.title,
        at.production_year,
        mh.movie_id,
        mh.level + 1
    FROM 
        movie_link ml
    JOIN 
        aka_title at ON ml.linked_movie_id = at.id
    JOIN 
        MovieHierarchy mh ON ml.movie_id = mh.movie_id
)

SELECT 
    ah.name AS actor_name,
    mh.title AS movie_title,
    mh.production_year,
    COALESCE(SUM(mci.note IS NOT NULL)::int, 0) AS total_companies,
    COUNT(DISTINCT mk.keyword) AS total_keywords,
    STRING_AGG(DISTINCT mk.keyword, ', ') AS keyword_list,
    ROW_NUMBER() OVER (PARTITION BY mh.movie_id ORDER BY ah.name) AS actor_rank
FROM 
    MovieHierarchy mh
JOIN 
    cast_info ci ON mh.movie_id = ci.movie_id
JOIN 
    aka_name ah ON ci.person_id = ah.person_id
LEFT JOIN 
    movie_companies mci ON mci.movie_id = mh.movie_id
LEFT JOIN 
    movie_keyword mk ON mk.movie_id = mh.movie_id
WHERE 
    mh.level <= 2
    AND (mh.production_year IS NULL OR mh.production_year >= 2000)
GROUP BY 
    ah.name, mh.title, mh.production_year
ORDER BY 
    mh.production_year DESC,
    total_keywords DESC,
    actor_rank;