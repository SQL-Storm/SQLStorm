WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        0 AS depth,
        mt.production_year
    FROM 
        aka_title mt
    WHERE 
        mt.production_year > 2000  

    UNION ALL

    SELECT 
        ml.linked_movie_id AS movie_id,
        at.title,
        mh.depth + 1 AS depth,
        at.production_year
    FROM 
        movie_link ml
    JOIN 
        aka_title at ON ml.linked_movie_id = at.id
    JOIN 
        MovieHierarchy mh ON mh.movie_id = ml.movie_id
)
, MovieCast AS (
    SELECT 
        c.movie_id,
        COUNT(c.person_id) AS num_cast,
        STRING_AGG(DISTINCT ak.name, ', ') AS cast_names
    FROM 
        cast_info c
    JOIN 
        aka_name ak ON c.person_id = ak.person_id
    GROUP BY 
        c.movie_id
)
SELECT 
    mh.movie_id,
    mh.title,
    mh.production_year,
    mh.depth,
    COALESCE(mc.num_cast, 0) AS num_cast,
    mc.cast_names,
    CASE 
        WHEN mh.depth = 0 THEN 'Original'
        WHEN mh.depth = 1 THEN 'Linked'
        ELSE 'Deep Link'
    END AS link_description
FROM 
    MovieHierarchy mh
LEFT JOIN 
    MovieCast mc ON mh.movie_id = mc.movie_id
ORDER BY 
    mh.production_year DESC, 
    mh.depth, 
    num_cast DESC
LIMIT 100;