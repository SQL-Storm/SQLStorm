
WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        mt.id AS movie_id, 
        mt.title AS movie_title,
        mt.production_year,
        1 AS level
    FROM aka_title mt
    WHERE mt.production_year >= 2000

    UNION ALL

    SELECT 
        ml.linked_movie_id AS movie_id, 
        at.title AS movie_title,
        at.production_year,
        mh.level + 1
    FROM MovieHierarchy mh
    JOIN movie_link ml ON mh.movie_id = ml.movie_id
    JOIN aka_title at ON ml.linked_movie_id = at.id
    WHERE at.production_year >= 2000
),
TopGenres AS (
    SELECT 
        ct.kind AS genre,
        COUNT(DISTINCT cc.movie_id) AS movie_count
    FROM movie_companies mc
    JOIN company_type ct ON mc.company_type_id = ct.id
    JOIN complete_cast cc ON mc.movie_id = cc.movie_id
    GROUP BY ct.kind
    HAVING COUNT(DISTINCT cc.movie_id) > 10
),
PersonRoles AS (
    SELECT 
        ak.name AS actor_name,
        ci.role_id,
        COUNT(DISTINCT ci.movie_id) AS movies_played
    FROM cast_info ci
    JOIN aka_name ak ON ci.person_id = ak.person_id
    GROUP BY ak.name, ci.role_id
    HAVING COUNT(DISTINCT ci.movie_id) > 5
),
TotalMovies AS (
    SELECT 
        m.movie_id, 
        m.movie_title,
        m.level,
        COALESCE(g.movie_count, 0) AS genre_count,
        COALESCE(r.movies_played, 0) AS role_count
    FROM MovieHierarchy m
    LEFT JOIN TopGenres g ON g.genre = (SELECT DISTINCT ct.kind FROM movie_companies mc JOIN company_type ct ON mc.company_type_id = ct.id WHERE mc.movie_id = m.movie_id LIMIT 1)
    LEFT JOIN PersonRoles r ON r.role_id = (SELECT DISTINCT ci.role_id FROM cast_info ci WHERE ci.movie_id = m.movie_id LIMIT 1)
    WHERE m.level <= 2
)
SELECT 
    movie_title,
    production_year,
    level,
    genre_count,
    role_count,
    ROW_NUMBER() OVER (PARTITION BY level ORDER BY production_year DESC) AS rn
FROM TotalMovies
WHERE genre_count > 2 OR role_count > 1
ORDER BY level, production_year DESC, movie_title;
