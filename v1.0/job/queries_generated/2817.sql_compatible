
WITH RankedMovies AS (
    SELECT 
        a.title, 
        a.production_year, 
        COUNT(DISTINCT c.person_id) AS cast_count,
        RANK() OVER (PARTITION BY a.production_year ORDER BY COUNT(DISTINCT c.person_id) DESC) AS rank_by_cast_count
    FROM aka_title a
    LEFT JOIN cast_info c ON a.id = c.movie_id
    WHERE a.production_year IS NOT NULL
    GROUP BY a.title, a.production_year
),
TopRatedMovies AS (
    SELECT 
        r.title, 
        r.production_year,
        COALESCE(m.info, 'No information') AS movie_info,
        CASE 
            WHEN r.rank_by_cast_count <= 5 THEN 'Top 5 in Year'
            ELSE 'Others'
        END AS ranking_category,
        RANK() OVER (ORDER BY r.production_year DESC, r.cast_count DESC) AS overall_rank
    FROM RankedMovies r
    LEFT JOIN movie_info m ON r.production_year = m.movie_id
)
SELECT 
    t.title, 
    t.production_year, 
    t.movie_info,
    t.ranking_category,
    ROW_NUMBER() OVER (PARTITION BY t.ranking_category ORDER BY t.overall_rank) AS row_in_category
FROM TopRatedMovies t
WHERE t.movie_info IS NOT NULL
ORDER BY t.production_year DESC, t.cast_count DESC
LIMIT 50;
