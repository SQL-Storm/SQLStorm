
WITH MovieDetails AS (
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        COUNT(cc.person_id) AS cast_count,
        COALESCE(SUM(CASE WHEN cc.note IS NOT NULL THEN 1 ELSE 0 END), 0) AS noted_cast_count,
        MIN(t.production_year) OVER (PARTITION BY t.kind_id) AS earliest_kind_year
    FROM 
        aka_title t
    LEFT JOIN 
        complete_cast cc ON t.id = cc.movie_id
    GROUP BY 
        t.id, t.title, t.production_year
),
KeywordStats AS (
    SELECT 
        mk.movie_id,
        STRING_AGG(k.keyword, ', ') AS keywords,
        COUNT(DISTINCT k.id) AS keyword_count
    FROM 
        movie_keyword mk
    JOIN 
        keyword k ON mk.keyword_id = k.id
    GROUP BY 
        mk.movie_id
),
CompanyStats AS (
    SELECT 
        mc.movie_id,
        STRING_AGG(DISTINCT cn.name, ', ') AS companies,
        COUNT(DISTINCT mc.company_id) AS company_count
    FROM 
        movie_companies mc
    JOIN 
        company_name cn ON mc.company_id = cn.id
    GROUP BY 
        mc.movie_id
)
SELECT 
    md.movie_id,
    md.title,
    md.production_year,
    md.cast_count,
    md.noted_cast_count,
    ks.keywords,
    ks.keyword_count,
    cs.companies,
    cs.company_count,
    CASE 
        WHEN md.production_year < md.earliest_kind_year THEN 'Older Production'
        ELSE 'Recent Production'
    END AS production_status
FROM 
    MovieDetails md
LEFT JOIN 
    KeywordStats ks ON md.movie_id = ks.movie_id
LEFT JOIN 
    CompanyStats cs ON md.movie_id = cs.movie_id
WHERE 
    md.production_year IS NOT NULL
    AND md.cast_count > 0
ORDER BY 
    md.production_year DESC, md.title;
