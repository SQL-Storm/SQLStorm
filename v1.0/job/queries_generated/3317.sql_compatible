
WITH RankedMovies AS (
    SELECT 
        m.title,
        m.production_year,
        COUNT(c.person_id) AS cast_count,
        ROW_NUMBER() OVER (PARTITION BY m.production_year ORDER BY COUNT(c.person_id) DESC) AS rank
    FROM 
        aka_title m
    LEFT JOIN 
        cast_info c ON m.id = c.movie_id
    GROUP BY 
        m.id, m.title, m.production_year
),
TopMovies AS (
    SELECT 
        title, 
        production_year 
    FROM 
        RankedMovies 
    WHERE 
        rank <= 5
),
MovieKeywords AS (
    SELECT 
        m.title, 
        k.keyword
    FROM 
        TopMovies tm
    JOIN 
        movie_keyword mk ON mk.movie_id = (SELECT id FROM aka_title WHERE title = tm.title LIMIT 1)
    JOIN 
        keyword k ON mk.keyword_id = k.id
),
MovieCompanies AS (
    SELECT 
        m.title, 
        c.name AS company_name,
        ct.kind AS company_type
    FROM 
        TopMovies tm
    LEFT JOIN 
        movie_companies mc ON mc.movie_id = (SELECT id FROM aka_title WHERE title = tm.title LIMIT 1)
    LEFT JOIN 
        company_name c ON mc.company_id = c.id
    LEFT JOIN 
        company_type ct ON mc.company_type_id = ct.id
),
FinalResults AS (
    SELECT 
        m.title, 
        m.production_year, 
        mk.keyword AS movie_keyword,
        mc.company_name,
        mc.company_type
    FROM 
        TopMovies m
    LEFT JOIN 
        MovieKeywords mk ON m.title = mk.title
    LEFT JOIN 
        MovieCompanies mc ON m.title = mc.title
)
SELECT 
    title, 
    production_year, 
    STRING_AGG(DISTINCT movie_keyword, ', ') AS keywords,
    STRING_AGG(DISTINCT company_name || ' (' || company_type || ')', ', ') AS companies
FROM 
    FinalResults
GROUP BY 
    title, 
    production_year
ORDER BY 
    production_year DESC, 
    title;
