WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        0 AS level
    FROM 
        aka_title t
    WHERE 
        t.kind_id = 1 
    
    UNION ALL

    SELECT 
        m.id AS movie_id,
        m.title,
        m.production_year,
        mh.level + 1
    FROM 
        movie_link ml
    JOIN 
        aka_title m ON ml.linked_movie_id = m.id
    JOIN 
        MovieHierarchy mh ON ml.movie_id = mh.movie_id
)
SELECT 
    ak.name AS actor_name,
    mt.title AS movie_title,
    COUNT(DISTINCT c.person_id) AS actor_count,
    AVG(mh.level) AS avg_hierarchy_level,
    SUM(mk.keyword IS NOT NULL) AS keyword_count,
    CASE 
        WHEN mt.production_year IS NULL THEN 'Year Unknown'
        ELSE CAST(mt.production_year AS TEXT)
    END AS production_year
FROM 
    cast_info c
JOIN 
    aka_name ak ON c.person_id = ak.person_id
JOIN 
    aka_title mt ON c.movie_id = mt.id
LEFT JOIN 
    movie_keyword mk ON mt.id = mk.movie_id
LEFT JOIN 
    MovieHierarchy mh ON mt.id = mh.movie_id
WHERE 
    ak.name IS NOT NULL
    AND mt.production_year >= 2000
    AND (ak.name LIKE '%Smith%' OR ak.name LIKE '%Johnson%')
GROUP BY 
    ak.name, mt.title, mt.production_year
HAVING 
    COUNT(DISTINCT c.person_id) > 1 
ORDER BY 
    actor_count DESC, avg_hierarchy_level ASC;