
WITH RECURSIVE MovieHierarchy AS (
    SELECT t.id AS movie_id, t.title, t.production_year, 0 AS depth
    FROM aka_title t
    WHERE t.kind_id IN (SELECT id FROM kind_type WHERE kind = 'movie')
    
    UNION ALL

    SELECT t.id AS movie_id, t.title, t.production_year, mh.depth + 1
    FROM aka_title t
    INNER JOIN movie_link ml ON t.id = ml.linked_movie_id
    INNER JOIN MovieHierarchy mh ON mh.movie_id = ml.movie_id
)
SELECT 
    mh.movie_id,
    mh.title,
    mh.production_year,
    mh.depth,
    COUNT(ci.id) AS number_of_cast,
    STRING_AGG(DISTINCT ak.name, ', ') AS cast_names,
    COALESCE(NULLIF(bi.info, ''), 'No box office info') AS box_office_info
FROM 
    MovieHierarchy mh
LEFT JOIN 
    complete_cast cc ON mh.movie_id = cc.movie_id
LEFT JOIN 
    cast_info ci ON cc.subject_id = ci.person_id
LEFT JOIN 
    aka_name ak ON ci.person_id = ak.person_id
LEFT JOIN 
    movie_info bi ON mh.movie_id = bi.movie_id AND bi.info_type_id = (SELECT id FROM info_type WHERE info = 'Box Office')
GROUP BY 
    mh.movie_id, mh.title, mh.production_year, mh.depth
HAVING 
    COUNT(ci.id) > 3 
ORDER BY 
    mh.production_year DESC,
    number_of_cast DESC;
