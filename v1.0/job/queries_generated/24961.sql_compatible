
WITH ranked_movies AS (
    SELECT 
        a.id AS movie_id,
        t.title,
        t.production_year,
        COUNT(DISTINCT ci.person_id) AS total_cast,
        SUM(CASE WHEN ci.note IS NOT NULL THEN 1 ELSE 0 END) AS cast_with_notes,
        MAX(CASE WHEN ci.nr_order IS NULL THEN 0 ELSE ci.nr_order END) AS max_order,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY COUNT(DISTINCT ci.person_id) DESC) AS rank
    FROM 
        aka_title t
    LEFT JOIN 
        complete_cast cc ON t.id = cc.movie_id
    LEFT JOIN 
        cast_info ci ON cc.subject_id = ci.person_id
    WHERE 
        t.production_year IS NOT NULL
    GROUP BY 
        a.id, t.title, t.production_year
),
actor_details AS (
    SELECT 
        ak.id AS actor_id,
        ak.name,
        ak.person_id,
        ak.imdb_index,
        ak.md5sum,
        COALESCE(NULLIF(pi.info, ''), 'No Info') AS actor_info
    FROM 
        aka_name ak
    LEFT JOIN 
        person_info pi ON ak.person_id = pi.person_id AND pi.info_type_id = (SELECT id FROM info_type WHERE info = 'bio')
    WHERE 
        ak.name IS NOT NULL
),
title_stats AS (
    SELECT 
        tm.title,
        tm.production_year,
        AVG(tm.total_cast) OVER (PARTITION BY tm.production_year) AS avg_cast_size,
        SUM(tm.cast_with_notes) AS total_notes,
        COUNT(DISTINCT tm.movie_id) AS unique_movies
    FROM 
        ranked_movies tm
    GROUP BY 
        tm.title, tm.production_year
)
SELECT 
    ts.title,
    ts.production_year,
    ts.avg_cast_size,
    ts.total_notes,
    ad.name AS actor_name,
    ad.actor_info,
    CASE 
        WHEN ts.total_notes = 0 THEN 'Watch without Info'
        WHEN ts.unique_movies > 5 THEN 'Popular' 
        ELSE 'Niche Movie' 
    END AS movie_category
FROM 
    title_stats ts
LEFT JOIN 
    actor_details ad ON ts.title LIKE '%' || ad.name || '%'
WHERE 
    ts.production_year BETWEEN 1990 AND 2023
ORDER BY 
    ts.production_year DESC, ts.total_notes DESC, ts.title;
