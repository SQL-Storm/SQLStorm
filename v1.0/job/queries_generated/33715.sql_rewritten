WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        m.id AS movie_id,
        m.title,
        m.production_year,
        1 AS depth
    FROM 
        aka_title m
    WHERE 
        m.production_year >= 2000 
    
    UNION ALL
    
    SELECT 
        m.id AS movie_id,
        m.title,
        m.production_year,
        mh.depth + 1
    FROM 
        aka_title m
    JOIN 
        movie_link ml ON ml.linked_movie_id = m.id
    JOIN 
        MovieHierarchy mh ON mh.movie_id = ml.movie_id
), 
KeywordCounts AS (
    SELECT 
        mk.movie_id,
        COUNT(mk.keyword_id) AS keyword_count
    FROM 
        movie_keyword mk
    GROUP BY 
        mk.movie_id
), 
RankedMovies AS (
    SELECT 
        mh.movie_id, 
        mh.title, 
        mh.production_year,
        kc.keyword_count,
        RANK() OVER (PARTITION BY mh.production_year ORDER BY kc.keyword_count DESC) AS keyword_rank
    FROM 
        MovieHierarchy mh
    LEFT JOIN 
        KeywordCounts kc ON mh.movie_id = kc.movie_id
)
SELECT 
    rm.*,
    COALESCE(a.name, 'Unknown Actor') AS lead_actor,
    ARRAY_AGG(DISTINCT c.kind) AS company_types,
    COUNT(DISTINCT ci.person_id) AS cast_count
FROM 
    RankedMovies rm
LEFT JOIN 
    movie_companies mc ON rm.movie_id = mc.movie_id
LEFT JOIN 
    company_type c ON mc.company_type_id = c.id
LEFT JOIN 
    cast_info ci ON rm.movie_id = ci.movie_id AND ci.nr_order = 1
LEFT JOIN 
    aka_name a ON ci.person_id = a.person_id
WHERE 
    rm.keyword_rank = 1 
GROUP BY 
    rm.movie_id, rm.title, rm.production_year, a.name
ORDER BY 
    rm.production_year DESC, 
    rm.keyword_count DESC
LIMIT 100;