
WITH MovieDetails AS (
    SELECT 
        t.title AS movie_title,
        t.production_year,
        STRING_AGG(DISTINCT ak.name, ', ') AS aka_names,
        STRING_AGG(DISTINCT k.keyword, ', ') AS keywords,
        ct.kind AS company_type,
        STRING_AGG(DISTINCT p.info, ', ') AS person_info
    FROM title t
    JOIN aka_title at ON t.id = at.movie_id
    JOIN aka_name ak ON ak.id = at.id
    JOIN movie_keyword mk ON mk.movie_id = t.id
    JOIN keyword k ON k.id = mk.keyword_id
    JOIN movie_companies mc ON mc.movie_id = t.id
    JOIN company_name cn ON cn.id = mc.company_id
    JOIN company_type ct ON ct.id = mc.company_type_id
    LEFT JOIN complete_cast cc ON cc.movie_id = t.id
    LEFT JOIN cast_info ci ON ci.movie_id = t.id
    LEFT JOIN person_info p ON p.person_id = ci.person_id
    WHERE t.production_year >= 2000
    GROUP BY t.id, t.title, t.production_year, ct.kind
),
PerformanceBenchmark AS (
    SELECT 
        MD.movie_title,
        MD.production_year,
        MD.aka_names,
        MD.keywords,
        MD.company_type,
        COUNT(DISTINCT p.person_id) AS total_actors,
        COUNT(DISTINCT t.id) AS total_movies
    FROM MovieDetails MD
    JOIN title t ON MD.movie_title = t.title
    LEFT JOIN complete_cast cc ON cc.movie_id = t.id
    LEFT JOIN cast_info ci ON ci.movie_id = t.id
    LEFT JOIN person_info p ON p.person_id = ci.person_id
    GROUP BY 
        MD.movie_title, 
        MD.production_year, 
        MD.aka_names, 
        MD.keywords, 
        MD.company_type
    ORDER BY total_actors DESC, MD.production_year ASC
)
SELECT * FROM PerformanceBenchmark
LIMIT 100;
