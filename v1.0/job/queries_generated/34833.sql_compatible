
WITH RECURSIVE movie_hierarchy AS (
    
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        0 AS level
    FROM 
        aka_title mt
    WHERE 
        mt.kind_id = (SELECT id FROM kind_type WHERE kind = 'movie') 

    UNION ALL

    
    SELECT 
        ml.linked_movie_id AS movie_id,
        at.title,
        at.production_year,
        mh.level + 1
    FROM 
        movie_link ml
    JOIN 
        aka_title at ON ml.movie_id = at.id
    JOIN 
        movie_hierarchy mh ON ml.movie_id = mh.movie_id
)

SELECT 
    a.name AS actor_name,
    mk.keyword AS movie_keyword,
    COUNT(DISTINCT mh.movie_id) AS movie_count,
    ARRAY_AGG(DISTINCT mt.title) AS movies,
    AVG(EXTRACT(YEAR FROM TIMESTAMP '2024-10-01 12:34:56') - mh.production_year) AS average_movie_age
FROM 
    movie_hierarchy mh
JOIN 
    complete_cast cc ON mh.movie_id = cc.movie_id
JOIN 
    aka_name a ON cc.subject_id = a.person_id
LEFT JOIN 
    movie_keyword mk ON mh.movie_id = mk.movie_id
GROUP BY 
    a.name, mk.keyword, mh.production_year
HAVING 
    COUNT(DISTINCT mh.movie_id) > 5
ORDER BY 
    average_movie_age DESC;
