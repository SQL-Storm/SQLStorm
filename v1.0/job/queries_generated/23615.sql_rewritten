WITH RankedMovies AS (
    SELECT 
        t.title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.production_year DESC) AS year_rank,
        COUNT(ci.id) OVER (PARTITION BY t.id) AS cast_count
    FROM 
        aka_title t
    LEFT JOIN 
        movie_companies mc ON t.id = mc.movie_id
    LEFT JOIN 
        cast_info ci ON t.id = ci.movie_id
    WHERE 
        t.production_year IS NOT NULL
        AND COALESCE(mc.company_id, -1) <> -1
),
CompanyStats AS (
    SELECT 
        mc.company_id,
        COUNT(DISTINCT ci.movie_id) AS total_movies,
        AVG(rc.cast_count) AS avg_cast_per_movie
    FROM 
        movie_companies mc
    JOIN 
        RankedMovies rc ON mc.movie_id = rc.id
    GROUP BY 
        mc.company_id
),
CombinedStats AS (
    SELECT 
        cs.company_id,
        cs.total_movies,
        cs.avg_cast_per_movie,
        COALESCE(NULLIF(cs.total_movies, 0), 1) AS adjusted_movies,
        cs.avg_cast_per_movie / NULLIF(cs.total_movies, 0) AS avg_cast_ratio
    FROM 
        CompanyStats cs
)
SELECT 
    cn.name AS company_name,
    cs.total_movies,
    ROUND(cs.avg_cast_per_movie, 2) AS avg_cast_per_movie,
    ROUND(cs.avg_cast_ratio, 2) AS avg_cast_ratio
FROM 
    CombinedStats cs
JOIN 
    company_name cn ON cs.company_id = cn.id
WHERE 
    cs.avg_cast_ratio > 1
    OR cs.avg_cast_per_movie > (SELECT AVG(avg_cast_per_movie) FROM CombinedStats)
ORDER BY 
    cs.total_movies DESC, 
    cs.avg_cast_ratio DESC;