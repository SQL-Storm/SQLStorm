
WITH ranked_movies AS (
    SELECT 
        mt.title, 
        mt.production_year, 
        COUNT(cc.id) AS cast_count,
        ROW_NUMBER() OVER (PARTITION BY mt.production_year ORDER BY COUNT(cc.id) DESC) AS rank
    FROM 
        aka_title mt
    LEFT JOIN 
        complete_cast cc ON mt.id = cc.movie_id
    GROUP BY 
        mt.title, mt.production_year
),
company_movies AS (
    SELECT 
        mc.movie_id, 
        co.name AS company_name, 
        ct.kind AS company_type,
        ROW_NUMBER() OVER (PARTITION BY mc.movie_id ORDER BY co.name) AS company_order
    FROM 
        movie_companies mc
    JOIN 
        company_name co ON mc.company_id = co.id
    JOIN 
        company_type ct ON mc.company_type_id = ct.id
),
highly_rated_movies AS (
    SELECT 
        r.title,
        r.production_year,
        CASE 
            WHEN r.rank <= 5 THEN 'Top Rated'
            ELSE 'Others'
        END AS rating_category
    FROM 
        ranked_movies r
    WHERE 
        r.cast_count > 0
)
SELECT 
    h.title,
    h.production_year,
    c.company_name,
    c.company_type,
    COALESCE(mi.info, 'No Info Available') AS movie_info,
    CASE 
        WHEN h.production_year IS NULL THEN 'Unknown Year'
        ELSE CAST(EXTRACT(YEAR FROM DATE '2024-10-01') - h.production_year AS VARCHAR)
    END AS years_since_release
FROM 
    highly_rated_movies h
LEFT JOIN 
    company_movies c ON h.title = c.movie_id
LEFT JOIN 
    movie_info mi ON h.title = mi.movie_id AND mi.info_type_id = (SELECT id FROM info_type WHERE info = 'Summary') 
WHERE 
    h.rating_category = 'Top Rated'
ORDER BY 
    h.production_year DESC, c.company_name ASC;
