
WITH RankedMovies AS (
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.id) AS rank
    FROM 
        title t
    WHERE 
        t.production_year IS NOT NULL
),
ActorCount AS (
    SELECT 
        ci.movie_id,
        COUNT(DISTINCT ci.person_id) AS actor_count
    FROM 
        cast_info ci
    GROUP BY 
        ci.movie_id
),
MovieDetails AS (
    SELECT 
        mt.movie_id,
        COALESCE(ac.actor_count, 0) AS actor_count,
        ARRAY_AGG(DISTINCT ak.name) AS actor_names
    FROM 
        aka_title mt
    LEFT JOIN 
        ActorCount ac ON mt.movie_id = ac.movie_id
    LEFT JOIN 
        cast_info ci ON mt.movie_id = ci.movie_id
    LEFT JOIN 
        aka_name ak ON ci.person_id = ak.person_id
    GROUP BY 
        mt.movie_id
),
FinalResults AS (
    SELECT 
        rm.movie_id,
        rm.title,
        rm.production_year,
        md.actor_count,
        md.actor_names,
        CASE 
            WHEN md.actor_count > 10 THEN 'Many Actors'
            WHEN md.actor_count > 0 THEN 'Few Actors'
            ELSE 'No Actors'
        END AS actor_label
    FROM 
        RankedMovies rm
    LEFT JOIN 
        MovieDetails md ON rm.movie_id = md.movie_id
)
SELECT 
    fr.title,
    fr.production_year,
    fr.actor_count,
    fr.actor_names,
    fr.actor_label
FROM 
    FinalResults fr
WHERE 
    fr.actor_label <> 'No Actors'
ORDER BY 
    fr.production_year DESC,
    fr.actor_count DESC
LIMIT 50;
