
WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        1 AS level,
        mt.production_year
    FROM 
        aka_title mt
    WHERE 
        mt.production_year >= 2000 
    UNION ALL
    SELECT 
        ml.linked_movie_id,
        at.title,
        mh.level + 1,
        at.production_year
    FROM 
        movie_link ml
    JOIN 
        aka_title at ON ml.linked_movie_id = at.id
    JOIN 
        MovieHierarchy mh ON ml.movie_id = mh.movie_id
)
SELECT 
    ak.name AS actor_name,
    mh.title AS movie_title,
    mh.production_year,
    COUNT(DISTINCT mc.company_id) AS production_company_count,
    MAX(mk.keyword) AS top_keyword,
    AVG(CASE 
            WHEN ca.note IS NOT NULL THEN 1 
            ELSE 0 
        END) AS cast_note_present
FROM 
    MovieHierarchy mh
JOIN 
    complete_cast cc ON mh.movie_id = cc.movie_id
JOIN 
    cast_info ca ON cc.subject_id = ca.person_id
JOIN 
    aka_name ak ON ca.person_id = ak.person_id
LEFT JOIN 
    movie_companies mc ON mh.movie_id = mc.movie_id
LEFT JOIN 
    movie_keyword mk ON mh.movie_id = mk.movie_id
WHERE 
    mh.level < 3 
GROUP BY 
    ak.name, mh.title, mh.production_year
HAVING 
    COUNT(DISTINCT mc.company_id) > 1 
ORDER BY 
    mh.production_year DESC, production_company_count DESC;
