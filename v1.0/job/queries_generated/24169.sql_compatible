
WITH RECURSIVE actor_hierarchy AS (
    SELECT 
        c.person_id,
        a.name AS actor_name,
        title.title,
        title.production_year,
        ROW_NUMBER() OVER (PARTITION BY c.person_id ORDER BY title.production_year DESC) AS rn,
        c.movie_id
    FROM 
        cast_info c
    JOIN 
        aka_name a ON c.person_id = a.person_id
    JOIN 
        aka_title title ON c.movie_id = title.movie_id
    WHERE 
        title.production_year IS NOT NULL
),
title_keywords AS (
    SELECT 
        tk.movie_id,
        STRING_AGG(k.keyword, ', ') AS keywords
    FROM 
        movie_keyword tk
    JOIN 
        keyword k ON tk.keyword_id = k.id
    GROUP BY 
        tk.movie_id
),
actor_awards AS (
    SELECT 
        h.actor_name,
        CASE 
            WHEN COUNT(DISTINCT a.id) > 0 THEN 'Wins'
            ELSE 'No Wins'
        END AS award_status
    FROM 
        actor_hierarchy h
    LEFT JOIN 
        movie_info m ON h.title = m.info AND h.production_year = m.production_year
    LEFT JOIN 
        company_name c ON c.id = (SELECT company_id FROM movie_companies mc WHERE mc.movie_id = m.movie_id LIMIT 1)
    LEFT JOIN 
        link_type lt ON lt.id = CAST(m.note AS INTEGER) 
    GROUP BY 
        h.actor_name
    HAVING 
        COUNT(DISTINCT m.id) > 10 
),
final_selection AS (
    SELECT 
        actor_name,
        production_year,
        keywords,
        award_status,
        ROW_NUMBER() OVER (PARTITION BY actor_name ORDER BY production_year DESC) AS movie_rank
    FROM 
        actor_hierarchy h
    JOIN 
        title_keywords tk ON h.movie_id = tk.movie_id
    JOIN 
        actor_awards a ON h.actor_name = a.actor_name
)

SELECT 
    actor_name, 
    production_year, 
    keywords, 
    award_status
FROM 
    final_selection
WHERE 
    movie_rank <= 5
AND 
    production_year >= (SELECT AVG(production_year) FROM title) 
ORDER BY 
    award_status DESC, 
    production_year DESC;
