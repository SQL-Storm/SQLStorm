WITH RECURSIVE movie_hierarchy AS (
    SELECT mt.movie_id,
           mt.title,
           mt.production_year,
           mt.kind_id,
           1 AS level
    FROM aka_title AS mt
    WHERE mt.kind_id IN (SELECT id FROM kind_type WHERE kind = 'movie')

    UNION ALL

    SELECT mt.movie_id,
           mt.title,
           mt.production_year,
           mt.kind_id,
           mh.level + 1 AS level
    FROM movie_link AS ml
    JOIN movie_hierarchy AS mh ON ml.movie_id = mh.movie_id
    JOIN aka_title AS mt ON ml.linked_movie_id = mt.id
    WHERE mh.level < 5  
),
actor_movie_info AS (
    SELECT a.name AS actor_name,
           at.title AS movie_title,
           at.production_year,
           COUNT(c.id) OVER(PARTITION BY a.id) AS role_count,
           ROW_NUMBER() OVER(PARTITION BY a.id ORDER BY at.production_year DESC) AS rank
    FROM aka_name AS a
    JOIN cast_info AS c ON a.person_id = c.person_id
    JOIN aka_title AS at ON c.movie_id = at.id
    WHERE a.name IS NOT NULL
      AND at.production_year IS NOT NULL
      AND a.md5sum IS NOT NULL
      AND (at.title ILIKE '%adventure%' OR at.title ILIKE '%action%')
),
distinct_roles AS (
    SELECT DISTINCT a.id AS actor_id,
                    c.role_id,
                    r.role
    FROM cast_info AS c
    JOIN aka_name AS a ON c.person_id = a.person_id
    JOIN role_type AS r ON c.role_id = r.id
),
keyword_count AS (
    SELECT m.movie_id,
           COUNT(mk.keyword_id) AS keyword_count
    FROM movie_keyword AS mk
    JOIN aka_title AS m ON mk.movie_id = m.id
    GROUP BY m.movie_id
),
final_results AS (
    SELECT m.movie_id,
           m.title,
           COALESCE(kc.keyword_count, 0) AS keyword_count,
           a.actor_name,
           a.movie_title,
           a.production_year,
           a.role_count
    FROM movie_hierarchy AS m
    LEFT JOIN keyword_count AS kc ON m.movie_id = kc.movie_id
    LEFT JOIN actor_movie_info AS a ON m.title = a.movie_title
    WHERE m.level IN (1,2,3) 
)

SELECT fr.movie_id,
       fr.title,
       fr.keyword_count,
       LISTAGG(fr.actor_name, ', ') WITHIN GROUP (ORDER BY fr.actor_name) AS actors
FROM final_results AS fr
GROUP BY fr.movie_id, fr.title, fr.keyword_count
HAVING COUNT(DISTINCT fr.actor_name) > 2 
ORDER BY fr.keyword_count DESC, fr.title ASC
LIMIT 50;