
WITH RankedMovies AS (
    SELECT 
        t.id AS movie_id, 
        t.title, 
        t.production_year, 
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.production_year DESC) AS year_rank
    FROM 
        aka_title t
    WHERE 
        t.production_year IS NOT NULL
),
ActorCount AS (
    SELECT 
        ci.movie_id, 
        COUNT(DISTINCT ci.person_id) AS actor_count
    FROM 
        cast_info ci
    GROUP BY 
        ci.movie_id
),
QualifiedMovies AS (
    SELECT 
        rm.movie_id, 
        rm.title, 
        rm.production_year, 
        ac.actor_count
    FROM 
        RankedMovies rm
    LEFT JOIN 
        ActorCount ac ON rm.movie_id = ac.movie_id
    WHERE 
        rm.year_rank <= 5 AND 
        (ac.actor_count IS NULL OR ac.actor_count < 5)
),
MovieKeywords AS (
    SELECT 
        mk.movie_id, 
        STRING_AGG(k.keyword, ', ') AS keywords
    FROM 
        movie_keyword mk
    JOIN 
        keyword k ON mk.keyword_id = k.id
    GROUP BY 
        mk.movie_id
),
CombinedResults AS (
    SELECT 
        qm.movie_id, 
        qm.title, 
        qm.production_year, 
        COALESCE(mk.keywords, 'No keywords') AS keywords
    FROM 
        QualifiedMovies qm
    LEFT JOIN 
        MovieKeywords mk ON qm.movie_id = mk.movie_id
)
SELECT 
    cr.movie_id,
    cr.title,
    cr.production_year,
    cr.keywords,
    COALESCE((
        SELECT 
            STRING_AGG(DISTINCT cn.name ORDER BY cn.name)
        FROM 
            company_name cn
        JOIN 
            movie_companies mc ON cn.id = mc.company_id
        WHERE 
            mc.movie_id = cr.movie_id
    ), 'Unknown Company') AS production_companies
FROM 
    CombinedResults cr
ORDER BY 
    cr.production_year DESC, 
    cr.movie_id
LIMIT 50;
