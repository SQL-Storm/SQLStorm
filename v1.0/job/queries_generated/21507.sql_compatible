
WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        m.id AS movie_id,
        t.title AS movie_title,
        t.production_year,
        COALESCE(c.kind, 'Not Specified') AS company_type,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.title) AS year_rank
    FROM 
        aka_title t
    LEFT JOIN 
        movie_companies mc ON mc.movie_id = t.id
    LEFT JOIN 
        company_type c ON mc.company_type_id = c.id
),
ActorRoles AS (
    SELECT 
        ak.name AS actor_name,
        m.id AS movie_id,
        m.title,
        m.production_year,
        r.role,
        ROW_NUMBER() OVER (PARTITION BY ak.person_id ORDER BY m.production_year DESC) AS actor_rank
    FROM 
        aka_name ak
    JOIN 
        cast_info ci ON ci.person_id = ak.person_id
    JOIN 
        aka_title m ON m.id = ci.movie_id
    JOIN 
        role_type r ON r.id = ci.role_id
    WHERE 
        ak.name IS NOT NULL
),
KeywordAggregation AS (
    SELECT 
        m.movie_id,
        STRING_AGG(k.keyword, ', ') AS keywords
    FROM 
        movie_keyword mk
    JOIN 
        keyword k ON mk.keyword_id = k.id
    JOIN 
        aka_title m ON m.id = mk.movie_id
    GROUP BY 
        m.movie_id
),
DetailedActorInfo AS (
    SELECT 
        a.actor_name,
        a.movie_id,
        a.title,
        a.production_year,
        a.role,
        COALESCE(ka.keywords, 'No Keywords') AS keywords,
        CASE 
            WHEN a.actor_rank <= 2 THEN 'Top Actor'
            ELSE 'Supporting Actor' 
        END AS actor_category
    FROM 
        ActorRoles a
    LEFT JOIN 
        KeywordAggregation ka ON a.movie_id = ka.movie_id
    WHERE 
        a.actor_rank <= 5
)
SELECT 
    mh.movie_title,
    mh.production_year,
    mh.company_type,
    dai.actor_name,
    dai.role,
    dai.keywords,
    dai.actor_category
FROM 
    MovieHierarchy mh
JOIN 
    DetailedActorInfo dai ON mh.movie_id = dai.movie_id
WHERE 
    mh.company_type <> 'Not Specified' 
    AND (mh.production_year >= 2000 OR mh.production_year IS NULL)
ORDER BY 
    mh.production_year DESC, 
    mh.movie_title;
