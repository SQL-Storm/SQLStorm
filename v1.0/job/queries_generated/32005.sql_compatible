
WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        m.id AS movie_id,
        t.title,
        m.production_year,
        1 AS level
    FROM 
        aka_title t
    JOIN 
        movie_companies mc ON t.id = mc.movie_id
    JOIN 
        company_name c ON mc.company_id = c.id
    WHERE 
        c.country_code = 'USA' AND 
        t.production_year >= 2000
    
    UNION ALL

    SELECT 
        mh.movie_id,
        t.title,
        m.production_year,
        mh.level + 1
    FROM 
        MovieHierarchy mh
    JOIN 
        movie_link ml ON mh.movie_id = ml.movie_id
    JOIN 
        aka_title t ON ml.linked_movie_id = t.id
    JOIN 
        movie_companies mc ON t.id = mc.movie_id
    JOIN 
        company_name c ON mc.company_id = c.id
    WHERE 
        c.country_code = 'USA'
)

SELECT 
    mh.title,
    mh.production_year,
    COUNT(DISTINCT c.person_id) AS distinct_cast_members,
    AVG(m.info_length) AS average_info_length,
    STRING_AGG(DISTINCT CAST(c.role_id AS text), ', ') AS roles,
    MAX(CASE WHEN p.gender = 'M' THEN 1 ELSE 0 END) AS male_cast_exists,
    MIN(mh.level) AS hierarchy_level
FROM 
    MovieHierarchy mh
LEFT JOIN 
    cast_info c ON mh.movie_id = c.movie_id
LEFT JOIN 
    title t ON mh.movie_id = t.id
LEFT JOIN 
    movie_info m ON mh.movie_id = m.movie_id
LEFT JOIN 
    person_info p ON c.person_id = p.person_id AND p.info_type_id = (SELECT id FROM info_type WHERE info = 'gender' LIMIT 1)
WHERE 
    t.kind_id IN (SELECT id FROM kind_type WHERE kind = 'feature')
GROUP BY 
    mh.title, mh.production_year
HAVING 
    COUNT(DISTINCT c.person_id) > 5
ORDER BY 
    mh.production_year DESC, distinct_cast_members DESC;
