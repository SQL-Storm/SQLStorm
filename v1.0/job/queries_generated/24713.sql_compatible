
WITH RankedMovies AS (
    SELECT 
        t.title,
        t.production_year,
        COUNT(c.id) AS cast_count,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY COUNT(c.id) DESC) AS rank
    FROM 
        aka_title t
        LEFT JOIN cast_info c ON t.id = c.movie_id
    GROUP BY 
        t.title, t.production_year
),
FilteredMovies AS (
    SELECT 
        title, 
        production_year,
        cast_count
    FROM 
        RankedMovies
    WHERE 
        rank <= 5
),
MovieDetails AS (
    SELECT 
        fm.title,
        fm.production_year,
        fm.cast_count,
        STRING_AGG(DISTINCT ak.name, ', ') AS actor_names,
        STRING_AGG(DISTINCT cn.name, ', ') AS company_names,
        COALESCE(MIN(mi.info), 'No additional info') AS additional_info,
        COUNT(DISTINCT mk.keyword) AS keyword_count
    FROM 
        FilteredMovies fm
        LEFT JOIN complete_cast cc ON fm.title = cc.title
        LEFT JOIN aka_name ak ON cc.subject_id = ak.person_id
        LEFT JOIN movie_companies mc ON mc.movie_id = fm.id
        LEFT JOIN company_name cn ON mc.company_id = cn.id
        LEFT JOIN movie_info mi ON fm.title = mi.title
        LEFT JOIN movie_keyword mk ON fm.title = mk.movie_id
    GROUP BY 
        fm.title, fm.production_year, fm.cast_count
)
SELECT 
    *,
    CASE 
        WHEN cast_count IS NULL THEN 'No Cast'
        WHEN cast_count > 10 THEN 'Large Cast'
        ELSE 'Small Cast'
    END AS cast_size,
    CASE 
        WHEN keyword_count > 0 THEN 'Has Keywords'
        ELSE 'No Keywords'
    END AS keyword_presence
FROM 
    MovieDetails
ORDER BY 
    production_year DESC,
    cast_count DESC
LIMIT 10;
