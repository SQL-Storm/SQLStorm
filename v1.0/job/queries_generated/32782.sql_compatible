
WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        m.id AS movie_id, 
        m.title AS movie_title, 
        1 AS level,
        COALESCE(t.production_year, 'Unknown') AS production_year
    FROM title m
    LEFT JOIN aka_title t ON m.id = t.movie_id
    WHERE t.kind_id = (
        SELECT id FROM kind_type WHERE kind = 'movie'
    )

    UNION ALL

    SELECT 
        m.id AS movie_id, 
        CONCAT('Sequel: ', m.title) AS movie_title, 
        mh.level + 1,
        COALESCE(t.production_year, 'Unknown') AS production_year
    FROM title m
    INNER JOIN movie_link ml ON m.id = ml.linked_movie_id
    INNER JOIN movie_hierarchy mh ON ml.movie_id = mh.movie_id
)

SELECT 
    ak.name AS actor_name,
    title.title AS movie_title,
    mh.production_year,
    COUNT(DISTINCT mb.id) AS total_movies,
    MAX(CASE WHEN ic.info IS NOT NULL THEN 1 ELSE 0 END) AS has_additional_info,
    STRING_AGG(DISTINCT k.keyword, ', ') AS keywords
FROM aka_name ak
JOIN cast_info ci ON ak.person_id = ci.person_id
JOIN title ON ci.movie_id = title.id
JOIN movie_info mi ON title.id = mi.movie_id
LEFT JOIN movie_keyword mk ON title.id = mk.movie_id
LEFT JOIN keyword k ON mk.keyword_id = k.id
JOIN movie_hierarchy mh ON title.id = mh.movie_id
LEFT JOIN movie_info_idx ic ON ic.movie_id = title.id AND ic.info_type_id = (
    SELECT id FROM info_type WHERE info = 'Summary'
)
GROUP BY ak.name, title.title, mh.production_year
ORDER BY total_movies DESC, mh.production_year DESC
LIMIT 10;
