
WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        m.id AS movie_id,
        m.title,
        m.production_year,
        COALESCE(SUM(ci.nr_order), 0) AS total_cast
    FROM 
        aka_title m
    LEFT JOIN 
        complete_cast cc ON m.id = cc.movie_id
    LEFT JOIN 
        cast_info ci ON cc.subject_id = ci.person_id
    GROUP BY 
        m.id, m.title, m.production_year
    UNION ALL
    SELECT 
        m.id AS movie_id,
        m.title,
        m.production_year,
        COALESCE(SUM(ci.nr_order), 0) AS total_cast
    FROM 
        movie_hierarchy mh
    JOIN 
        movie_link ml ON mh.movie_id = ml.movie_id
    JOIN 
        aka_title m ON ml.linked_movie_id = m.id
    LEFT JOIN 
        complete_cast cc ON m.id = cc.movie_id
    LEFT JOIN 
        cast_info ci ON cc.subject_id = ci.person_id
    GROUP BY 
        m.id, m.title, m.production_year
),
ranked_movies AS (
    SELECT 
        mh.movie_id,
        mh.title,
        mh.production_year,
        mh.total_cast,
        RANK() OVER (PARTITION BY mh.production_year ORDER BY mh.total_cast DESC) AS rank_within_year
    FROM 
        movie_hierarchy mh
)
SELECT 
    rm.title,
    rm.production_year,
    rm.total_cast,
    COALESCE(company.name, 'Unknown') AS production_company,
    COALESCE(GROUP_CONCAT(kw.keyword SEPARATOR ', '), 'No Keywords') AS keywords
FROM 
    ranked_movies rm
LEFT JOIN 
    movie_companies mc ON rm.movie_id = mc.movie_id
LEFT JOIN 
    company_name company ON mc.company_id = company.id
LEFT JOIN 
    movie_keyword mk ON rm.movie_id = mk.movie_id
LEFT JOIN 
    keyword kw ON mk.keyword_id = kw.id
WHERE 
    rm.rank_within_year <= 5 AND 
    rm.production_year >= 2000
GROUP BY 
    rm.movie_id, rm.title, rm.production_year, company.name
ORDER BY 
    rm.production_year DESC, 
    rm.total_cast DESC;
