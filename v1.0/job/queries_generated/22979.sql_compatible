
WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        0 AS level
    FROM 
        aka_title mt
    WHERE 
        mt.production_year IS NOT NULL
    UNION ALL
    SELECT 
        m.id,
        m.title,
        m.production_year,
        mh.level + 1
    FROM 
        movie_link ml
    JOIN 
        aka_title m ON ml.linked_movie_id = m.id
    JOIN 
        MovieHierarchy mh ON ml.movie_id = mh.movie_id
),
FilteredMovies AS (
    SELECT 
        mh.movie_id,
        mh.title,
        mh.production_year,
        COUNT(DISTINCT ci.person_id) AS total_cast
    FROM 
        MovieHierarchy mh
    LEFT JOIN 
        complete_cast cc ON mh.movie_id = cc.movie_id
    LEFT JOIN 
        cast_info ci ON cc.subject_id = ci.id
    GROUP BY 
        mh.movie_id, mh.title, mh.production_year
),
MovieCompaniesInfo AS (
    SELECT 
        mc.movie_id,
        STRING_AGG(DISTINCT c.name || ' (' || ct.kind || ')') AS companies
    FROM 
        movie_companies mc
    JOIN 
        company_name c ON mc.company_id = c.id
    JOIN 
        company_type ct ON mc.company_type_id = ct.id
    GROUP BY 
        mc.movie_id
),
MovieKeywords AS (
    SELECT 
        mk.movie_id,
        STRING_AGG(DISTINCT k.keyword) AS keywords
    FROM 
        movie_keyword mk
    JOIN 
        keyword k ON mk.keyword_id = k.id
    GROUP BY 
        mk.movie_id
)
SELECT 
    fm.movie_id,
    fm.title,
    fm.production_year,
    fm.total_cast,
    COALESCE(mci.companies, 'No Companies') AS companies,
    COALESCE(mki.keywords, 'No Keywords') AS keywords,
    CASE 
        WHEN fm.production_year > 2000 THEN 'Modern Era'
        WHEN fm.production_year BETWEEN 1980 AND 2000 THEN 'Classic Era'
        WHEN fm.production_year < 1980 THEN 'Golden Era'
        ELSE 'Unknown Era'
    END AS era_category
FROM 
    FilteredMovies fm
LEFT JOIN 
    MovieCompaniesInfo mci ON fm.movie_id = mci.movie_id
LEFT JOIN 
    MovieKeywords mki ON fm.movie_id = mki.movie_id
WHERE 
    fm.total_cast > 0
    AND (fm.production_year IS NULL OR fm.production_year >= 1900)
ORDER BY 
    fm.production_year DESC,
    fm.total_cast DESC
LIMIT 100
OFFSET 0;
