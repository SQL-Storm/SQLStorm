
WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        1 AS depth
    FROM 
        aka_title mt
    WHERE 
        mt.production_year >= 2000

    UNION ALL

    SELECT 
        ml.linked_movie_id,
        at.title,
        at.production_year,
        mh.depth + 1
    FROM 
        movie_link ml
    JOIN 
        aka_title at ON ml.linked_movie_id = at.id
    JOIN 
        MovieHierarchy mh ON ml.movie_id = mh.movie_id
)
SELECT 
    mv.movie_id,
    mv.title,
    mv.production_year,
    COUNT(DISTINCT cc.person_id) AS cast_count,
    ARRAY_AGG(DISTINCT ak.name) AS aka_names,
    MAX(CASE WHEN pi.info_type_id = 1 THEN pi.info END) AS birth_info,
    MIN(mk.keyword) AS first_keyword
FROM 
    MovieHierarchy mv
LEFT JOIN 
    complete_cast cc ON mv.movie_id = cc.movie_id
LEFT JOIN 
    aka_name ak ON cc.subject_id = ak.person_id
LEFT JOIN 
    movie_keyword mk ON mv.movie_id = mk.movie_id
LEFT JOIN 
    person_info pi ON cc.subject_id = pi.person_id
GROUP BY 
    mv.movie_id, mv.title, mv.production_year, mv.depth
HAVING 
    COUNT(DISTINCT cc.person_id) > 0
ORDER BY 
    mv.production_year DESC, depth ASC
LIMIT 100;
