WITH ranked_movies AS (
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        RANK() OVER (PARTITION BY t.production_year ORDER BY t.production_year DESC) AS rank_per_year,
        COUNT(DISTINCT mk.keyword_id) AS keyword_count
    FROM 
        aka_title t
    LEFT JOIN 
        movie_keyword mk ON t.id = mk.movie_id
    GROUP BY 
        t.id, t.title, t.production_year
),
actors_with_roles AS (
    SELECT 
        a.person_id,
        a.id AS aka_id,
        r.role AS role_name,
        COUNT(c.movie_id) AS movies_count
    FROM 
        aka_name a
    JOIN 
        cast_info c ON a.person_id = c.person_id
    JOIN 
        role_type r ON c.role_id = r.id
    GROUP BY 
        a.person_id, a.id, r.role
    HAVING 
        COUNT(c.movie_id) >= 5 
),
movie_company_info AS (
    SELECT 
        mc.movie_id,
        STRING_AGG(DISTINCT c.name, ', ') AS companies
    FROM 
        movie_companies mc
    JOIN 
        company_name c ON mc.company_id = c.id
    GROUP BY 
        mc.movie_id
),
complete_cast_with_status AS (
    SELECT 
        cc.movie_id,
        COUNT(cc.subject_id) AS total_cast,
        SUM(CASE WHEN cc.status_id = 1 THEN 1 ELSE 0 END) AS completed_cast
    FROM 
        complete_cast cc
    GROUP BY 
        cc.movie_id
),
combined_info AS (
    SELECT 
        rm.movie_id,
        rm.title,
        rm.production_year,
        rm.rank_per_year,
        awr.role_name,
        mw.companies,
        cc.total_cast,
        cc.completed_cast,
        COALESCE(mw.companies, 'Unknown') AS company_names,
        CASE 
            WHEN awr.movies_count IS NULL THEN 'Unassigned' 
            ELSE awr.role_name 
        END AS actor_role
    FROM 
        ranked_movies rm
    LEFT JOIN 
        actors_with_roles awr ON rm.movie_id IN (SELECT movie_id FROM cast_info WHERE person_role_id IN (SELECT id FROM role_type WHERE role = awr.role_name))
    LEFT JOIN 
        movie_company_info mw ON rm.movie_id = mw.movie_id
    LEFT JOIN 
        complete_cast_with_status cc ON rm.movie_id = cc.movie_id
)
SELECT 
    title,
    production_year,
    companies,
    total_cast,
    completed_cast,
    actor_role,
    CASE 
        WHEN rank_per_year = 1 THEN 'Top movie of the year'
        WHEN rank_per_year <= 3 THEN 'Notable movie'
        ELSE 'General release'
    END AS movie_category,
    NULLIF(total_cast, completed_cast) AS incomplete_cast,
    ROW_NUMBER() OVER (ORDER BY production_year DESC, title) AS movie_rank
FROM 
    combined_info
WHERE 
    production_year > 2000
ORDER BY 
    production_year DESC, title;