
WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        1 AS level,
        NULL AS parent_id
    FROM aka_title mt
    WHERE mt.kind_id = (SELECT id FROM kind_type WHERE kind = 'movie')
    
    UNION ALL
    
    SELECT 
        mt.id,
        mt.title,
        mt.production_year,
        mh.level + 1,
        mh.movie_id
    FROM aka_title mt
    JOIN movie_link ml ON mt.id = ml.linked_movie_id
    JOIN MovieHierarchy mh ON ml.movie_id = mh.movie_id
), RankedMovies AS (
    SELECT 
        mh.movie_id,
        mh.title,
        mh.production_year,
        mh.level,
        ROW_NUMBER() OVER (PARTITION BY mh.level ORDER BY mh.production_year DESC) AS rn
    FROM MovieHierarchy mh
), ExtendedCast AS (
    SELECT 
        ci.movie_id,
        a.name AS actor_name,
        ci.role_id,
        rc.role AS role_name,
        ci.nr_order,
        COALESCE(ci.note, 'No notes available') AS note_info
    FROM cast_info ci
    JOIN aka_name a ON ci.person_id = a.person_id
    LEFT JOIN role_type rc ON ci.role_id = rc.id
), MovieKeywords AS (
    SELECT 
        mk.movie_id,
        STRING_AGG(k.keyword, ', ') AS keywords
    FROM movie_keyword mk
    JOIN keyword k ON mk.keyword_id = k.id
    GROUP BY mk.movie_id
), MovieCompanies AS (
    SELECT 
        mc.movie_id,
        STRING_AGG(cn.name, ', ') AS companies
    FROM movie_companies mc
    JOIN company_name cn ON mc.company_id = cn.id
    GROUP BY mc.movie_id
)

SELECT 
    rm.movie_id,
    rm.title,
    rm.production_year,
    rm.level,
    ec.actor_name,
    ec.role_name,
    ec.note_info,
    mk.keywords,
    mc.companies,
    COUNT(ec.actor_name) OVER (PARTITION BY rm.movie_id) AS total_actors,
    CASE 
        WHEN (SELECT COUNT(*) FROM ExtendedCast) = 0 THEN 'No actors found'
        ELSE 'Actors found'
    END AS actor_status
FROM RankedMovies rm
LEFT JOIN ExtendedCast ec ON rm.movie_id = ec.movie_id
LEFT JOIN MovieKeywords mk ON rm.movie_id = mk.movie_id
LEFT JOIN MovieCompanies mc ON rm.movie_id = mc.movie_id
WHERE rm.production_year >= 2000
AND (ec.role_name IS NOT NULL OR ec.note_info IS NOT NULL)
GROUP BY 
    rm.movie_id, 
    rm.title, 
    rm.production_year, 
    rm.level, 
    ec.actor_name, 
    ec.role_name, 
    ec.note_info, 
    mk.keywords, 
    mc.companies
ORDER BY rm.production_year DESC, rm.level, rm.title;
