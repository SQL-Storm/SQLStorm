
WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        0 AS level
    FROM aka_title mt
    WHERE mt.production_year >= 2000

    UNION ALL

    SELECT 
        ml.linked_movie_id,
        m.title,
        m.production_year,
        level + 1
    FROM movie_link ml
    JOIN movie_hierarchy mh ON ml.movie_id = mh.movie_id
    JOIN aka_title m ON ml.linked_movie_id = m.id
)

SELECT 
    ak.name AS actor_name,
    mt.title AS movie_title,
    mh.level,
    COUNT(DISTINCT mc.company_id) AS production_company_count,
    AVG(CASE WHEN mr.info IS NOT NULL THEN CAST(mr.info AS FLOAT) END) AS average_rating
FROM aka_name ak
JOIN cast_info ci ON ak.person_id = ci.person_id
JOIN movie_hierarchy mh ON ci.movie_id = mh.movie_id
JOIN aka_title mt ON mh.movie_id = mt.id
LEFT JOIN movie_companies mc ON mt.id = mc.movie_id 
LEFT JOIN movie_info mr ON mt.id = mr.movie_id AND mr.info_type_id = (SELECT id FROM info_type WHERE info = 'rating')
WHERE 
    mt.production_year > 2010 
    AND (mt.kind_id IS NOT NULL OR mt.kind_id IN (SELECT id FROM kind_type WHERE kind = 'Feature'))
    AND ak.name IS NOT NULL
GROUP BY 
    ak.name, 
    mt.title, 
    mh.level
HAVING 
    COUNT(DISTINCT mc.company_id) > 0 
    AND AVG(CASE WHEN mr.info IS NOT NULL THEN CAST(mr.info AS FLOAT) END) IS NOT NULL
ORDER BY 
    average_rating DESC, 
    movie_title ASC;
