
WITH RecursiveTitleCTE AS (
    SELECT 
        t.id AS title_id, 
        t.title AS title, 
        t.production_year, 
        t.kind_id,
        CAST(NULL AS VARCHAR) AS parent_title,
        1 AS level
    FROM title t
    WHERE t.episode_of_id IS NULL
    
    UNION ALL
    
    SELECT 
        et.id AS title_id, 
        et.title AS title, 
        et.production_year, 
        et.kind_id,
        rt.title AS parent_title,
        rt.level + 1
    FROM title et
    JOIN RecursiveTitleCTE rt ON et.episode_of_id = rt.title_id
),
KeywordStats AS (
    SELECT 
        m.id AS movie_id,
        COUNT(DISTINCT k.id) AS keyword_count,
        STRING_AGG(DISTINCT k.keyword, ', ') AS keyword_list
    FROM aka_title m
    LEFT JOIN movie_keyword mk ON m.id = mk.movie_id
    LEFT JOIN keyword k ON mk.keyword_id = k.id
    WHERE m.production_year > 2000
    GROUP BY m.id
),
RoleStats AS (
    SELECT 
        ci.movie_id,
        COUNT(DISTINCT ci.id) AS cast_count,
        STRING_AGG(DISTINCT CAST(c.role_id AS VARCHAR), ', ') AS unique_roles
    FROM cast_info ci
    JOIN role_type c ON ci.role_id = c.id
    GROUP BY ci.movie_id 
),
MovieInfoSummary AS (
    SELECT 
        m.id AS movie_id,
        m.title AS movie_title,
        COALESCE(ks.keyword_count, 0) AS keyword_count,
        COALESCE(rs.cast_count, 0) AS cast_count,
        COALESCE(ks.keyword_list, '') AS keywords,
        COALESCE(rs.unique_roles, '') AS roles,
        ROW_NUMBER() OVER (PARTITION BY m.production_year ORDER BY m.id) AS rank
    FROM aka_title m
    LEFT JOIN KeywordStats ks ON m.id = ks.movie_id
    LEFT JOIN RoleStats rs ON m.id = rs.movie_id
)
SELECT 
    r.title,
    r.production_year,
    r.parent_title,
    CONCAT('Keywords: ', ms.keywords, '; Roles: ', ms.roles) AS details,
    ms.keyword_count,
    ms.cast_count,
    CASE 
        WHEN ms.keyword_count > 5 THEN 'Rich in Keywords'
        WHEN ms.cast_count > 10 THEN 'Star-studded'
        ELSE 'Average'
    END AS movie_summary
FROM RecursiveTitleCTE r
JOIN MovieInfoSummary ms ON r.title_id = ms.movie_id
WHERE r.level <= 2 
ORDER BY r.production_year DESC, r.level, r.title;
