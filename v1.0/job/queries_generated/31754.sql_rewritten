WITH RECURSIVE MovieHierarchy AS (
    
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        1 AS level
    FROM 
        title t
    WHERE 
        t.production_year IS NOT NULL

    UNION ALL

    
    SELECT 
        ml.linked_movie_id AS movie_id,
        t.title,
        t.production_year,
        mh.level + 1 
    FROM 
        MovieHierarchy mh
    JOIN 
        movie_link ml ON mh.movie_id = ml.movie_id
    JOIN 
        title t ON ml.linked_movie_id = t.id
)
, ActorDetails AS (
    
    SELECT 
        a.name,
        c.movie_id,
        rt.role,
        ROW_NUMBER() OVER (PARTITION BY c.movie_id ORDER BY a.name) AS actor_order
    FROM 
        cast_info c
    JOIN 
        aka_name a ON c.person_id = a.person_id
    JOIN 
        role_type rt ON c.role_id = rt.id
    WHERE 
        a.name IS NOT NULL
)
, MovieKeywords AS (
    
    SELECT 
        mk.movie_id,
        STRING_AGG(k.keyword, ', ') AS keywords
    FROM 
        movie_keyword mk
    JOIN 
        keyword k ON mk.keyword_id = k.id
    GROUP BY 
        mk.movie_id
)
SELECT 
    mh.title AS movie_title,
    mh.production_year,
    ad.name AS actor_name,
    ad.role AS actor_role,
    mk.keywords,
    COALESCE(ad.actor_order, 0) AS actor_order,
    (SELECT COUNT(*) FROM ActorDetails ad2 WHERE ad2.movie_id = mh.movie_id) AS total_actors
FROM 
    MovieHierarchy mh
LEFT JOIN 
    ActorDetails ad ON mh.movie_id = ad.movie_id
LEFT JOIN 
    MovieKeywords mk ON mh.movie_id = mk.movie_id
ORDER BY 
    mh.production_year DESC,
    mh.title,
    ad.actor_order
LIMIT 100;