
WITH RecursiveMovieCTE AS (
    SELECT 
        mt.id AS movie_id, 
        mt.title, 
        mt.production_year, 
        COUNT(DISTINCT ci.person_id) AS cast_count,
        ROW_NUMBER() OVER (PARTITION BY mt.production_year ORDER BY mt.production_year DESC) AS year_rank
    FROM 
        aka_title mt
    LEFT JOIN 
        complete_cast cc ON cc.movie_id = mt.id
    LEFT JOIN 
        cast_info ci ON ci.movie_id = cc.movie_id
    WHERE 
        mt.production_year IS NOT NULL
    GROUP BY 
        mt.id, mt.title, mt.production_year
), 
TitleCompanyCTE AS (
    SELECT 
        mt.title, 
        cn.name AS company_name, 
        mt.production_year
    FROM 
        aka_title mt
    JOIN 
        movie_companies mc ON mc.movie_id = mt.id
    JOIN 
        company_name cn ON cn.id = mc.company_id
    WHERE 
        cn.country_code = 'USA'
), 
KeywordCountCTE AS (
    SELECT 
        mt.title,
        COUNT(mk.keyword_id) AS keyword_count
    FROM 
        aka_title mt
    LEFT JOIN 
        movie_keyword mk ON mk.movie_id = mt.id
    GROUP BY 
        mt.title
)
SELECT 
    m.title,
    m.production_year,
    COALESCE(c.cast_count, 0) AS total_cast,
    kc.keyword_count,
    CASE 
        WHEN kc.keyword_count > 5 THEN 'Popular'
        ELSE 'Less Popular'
    END AS popularity,
    tc.company_name
FROM 
    RecursiveMovieCTE m
LEFT JOIN 
    KeywordCountCTE kc ON kc.title = m.title
LEFT JOIN 
    TitleCompanyCTE tc ON tc.title = m.title
WHERE 
    m.year_rank <= 10
ORDER BY 
    m.production_year DESC, total_cast DESC;
