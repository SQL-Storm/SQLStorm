
WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title AS movie_title,
        mt.production_year,
        1 AS level
    FROM 
        aka_title mt
    WHERE 
        mt.production_year >= 2000

    UNION ALL

    SELECT 
        ml.linked_movie_id,
        at.title,
        at.production_year,
        mh.level + 1
    FROM 
        movie_link ml
    JOIN 
        aka_title at ON ml.linked_movie_id = at.id
    JOIN 
        MovieHierarchy mh ON ml.movie_id = mh.movie_id
)

SELECT 
    ak.name AS actor_name,
    mt.movie_title,
    EXTRACT(YEAR FROM mh.production_year) AS movie_year,
    COUNT(DISTINCT ci.id) AS role_count,
    AVG(LENGTH(REGEXP_REPLACE(mk.keyword, '[^a-zA-Z]', ''))) AS average_keywords_length,
    ARRAY_AGG(DISTINCT ci.note) AS role_notes
FROM 
    aka_name ak
JOIN 
    cast_info ci ON ak.person_id = ci.person_id
JOIN 
    MovieHierarchy mh ON ci.movie_id = mh.movie_id
JOIN 
    movie_keyword mk ON mh.movie_id = mk.movie_id
LEFT JOIN 
    aka_title mt ON mh.movie_id = mt.id
WHERE 
    ak.name IS NOT NULL
    AND mh.level <= 2
GROUP BY 
    ak.name, mt.movie_title, mh.production_year
HAVING 
    COUNT(DISTINCT ci.id) > 1
ORDER BY 
    movie_year DESC, ak.actor_name ASC;
