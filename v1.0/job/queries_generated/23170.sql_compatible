
WITH RecursiveMovieCTE AS (
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.title) AS title_rank,
        COUNT(*) OVER (PARTITION BY t.production_year) AS total_movies
    FROM 
        aka_title t
    WHERE 
        t.production_year IS NOT NULL
),
CastInfoWithRoles AS (
    SELECT 
        c.movie_id,
        COUNT(c.id) AS cast_count,
        STRING_AGG(DISTINCT r.role ORDER BY r.role) AS roles
    FROM 
        cast_info c
    JOIN 
        role_type r ON c.role_id = r.id
    GROUP BY 
        c.movie_id
),
TitleWithCompanyCounts AS (
    SELECT 
        m.id AS movie_id,
        COUNT(DISTINCT mc.company_id) AS company_count
    FROM 
        aka_title m
    LEFT JOIN 
        movie_companies mc ON m.id = mc.movie_id
    GROUP BY 
        m.id
)
SELECT 
    r.movie_id,
    r.title,
    r.production_year,
    r.title_rank,
    r.total_movies,
    COALESCE(ci.cast_count, 0) AS cast_count,
    COALESCE(ci.roles, 'No Roles') AS roles,
    COALESCE(cc.company_count, 0) AS company_count
FROM 
    RecursiveMovieCTE r
LEFT JOIN 
    CastInfoWithRoles ci ON r.movie_id = ci.movie_id
LEFT JOIN 
    TitleWithCompanyCounts cc ON r.movie_id = cc.movie_id
WHERE 
    r.production_year >= (SELECT MAX(production_year) FROM aka_title WHERE production_year IS NOT NULL) - 5
    AND r.title LIKE '%' || (SELECT keyword FROM keyword WHERE id = (SELECT MIN(id) FROM keyword)) || '%'
ORDER BY 
    r.production_year DESC, 
    r.title_rank
OFFSET 0 ROWS FETCH NEXT 100 ROWS ONLY;
