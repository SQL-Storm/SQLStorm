
WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        1 AS level
    FROM 
        aka_title mt
    WHERE 
        mt.production_year >= 2000
    
    UNION ALL
    
    SELECT 
        ml.linked_movie_id AS movie_id,
        mt.title,
        mh.level + 1
    FROM 
        movie_link ml
    JOIN 
        movie_hierarchy mh ON ml.movie_id = mh.movie_id
    JOIN 
        aka_title mt ON ml.linked_movie_id = mt.id
)

SELECT 
    a.name AS actor_name,
    COUNT(DISTINCT mh.movie_id) AS total_movies,
    STRING_AGG(DISTINCT at.title, ', ') AS movies,
    MAX(CASE 
            WHEN ci.note IS NOT NULL THEN ci.note 
            ELSE 'No Note' 
        END) AS latest_note,
    AVG(CASE 
            WHEN mt.kind_id IS NOT NULL THEN mt.kind_id 
            ELSE NULL 
        END) AS avg_kind_id,
    SUM(CASE 
            WHEN ci.nr_order IS NULL THEN 0 
            ELSE ci.nr_order 
        END) AS total_order
FROM 
    aka_name a
JOIN 
    cast_info ci ON a.person_id = ci.person_id
LEFT JOIN 
    movie_hierarchy mh ON ci.movie_id = mh.movie_id
LEFT JOIN 
    aka_title at ON mh.movie_id = at.id
LEFT JOIN 
    kind_type kt ON at.kind_id = kt.id
WHERE 
    a.name IS NOT NULL 
    AND a.name <> ''
GROUP BY 
    a.name
HAVING 
    COUNT(DISTINCT mh.movie_id) > 5
ORDER BY 
    total_movies DESC;
