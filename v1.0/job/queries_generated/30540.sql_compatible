
WITH RECURSIVE ActorHierarchy AS (
    SELECT 
        c.person_id,
        a.name AS actor_name,
        1 AS level,
        ARRAY[a.name] AS path
    FROM 
        cast_info c
    JOIN 
        aka_name a ON c.person_id = a.person_id
    WHERE 
        c.movie_id IN (SELECT id FROM aka_title WHERE production_year >= 2000)
    
    UNION ALL
    
    SELECT 
        c.person_id,
        a.name,
        ah.level + 1,
        ah.path || a.name
    FROM 
        cast_info c
    JOIN 
        aka_name a ON c.person_id = a.person_id
    JOIN 
        ActorHierarchy ah ON c.movie_id IN (
            SELECT movie_id 
            FROM cast_info 
            WHERE person_id = ah.person_id
        )
    WHERE 
        c.movie_id IN (SELECT id FROM aka_title WHERE production_year >= 2000)
        AND ah.level < 3
)

SELECT 
    ah.actor_name,
    COUNT(DISTINCT c.movie_id) AS movie_count,
    ARRAY_AGG(DISTINCT t.title) AS titles,
    AVG(t.production_year) AS avg_production_year,
    STRING_AGG(DISTINCT COALESCE(k.keyword, 'N/A'), ', ') AS keywords,
    MAX(t.production_year) AS latest_movie_year
FROM 
    ActorHierarchy ah
JOIN 
    cast_info c ON ah.person_id = c.person_id
JOIN 
    aka_title t ON c.movie_id = t.id
LEFT JOIN 
    movie_keyword mk ON mk.movie_id = t.id
LEFT JOIN 
    keyword k ON mk.keyword_id = k.id
GROUP BY 
    ah.actor_name
HAVING 
    COUNT(DISTINCT c.movie_id) > 2
ORDER BY 
    movie_count DESC;
