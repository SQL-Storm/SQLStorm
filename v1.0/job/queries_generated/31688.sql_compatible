
WITH RECURSIVE ActorHierarchy AS (
    SELECT 
        c.person_id,
        a.name AS actor_name,
        1 AS level
    FROM cast_info c
    JOIN aka_name a ON c.person_id = a.person_id
    WHERE a.name IS NOT NULL

    UNION ALL

    SELECT 
        c.person_id,
        a.name AS actor_name,
        ah.level + 1
    FROM cast_info c
    JOIN aka_name a ON c.person_id = a.person_id
    JOIN ActorHierarchy ah ON c.movie_id = (SELECT ci.movie_id FROM cast_info ci WHERE ci.person_id = ah.person_id LIMIT 1)
    WHERE a.name IS NOT NULL AND ah.level < 5
),

MoviesWithKeywords AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        k.keyword
    FROM aka_title mt
    LEFT JOIN movie_keyword mk ON mt.id = mk.movie_id
    LEFT JOIN keyword k ON mk.keyword_id = k.id
    WHERE mt.production_year >= 2000
),

HighlightedMovies AS (
    SELECT 
        m.movie_id,
        m.title,
        COALESCE(w.rnk, 0) AS rank,
        COUNT(k.keyword) AS keyword_count
    FROM MoviesWithKeywords m
    LEFT JOIN (
        SELECT 
            movie_id,
            DENSE_RANK() OVER (ORDER BY COUNT(keyword) DESC) AS rnk
        FROM movie_keyword
        GROUP BY movie_id
    ) w ON m.movie_id = w.movie_id
    GROUP BY m.movie_id, m.title, w.rnk
),

Criteria AS (
    SELECT 
        h.movie_id,
        h.title,
        h.rank,
        h.keyword_count,
        ah.actor_name
    FROM HighlightedMovies h
    JOIN ActorHierarchy ah ON h.keyword_count > 2
)

SELECT 
    c.title AS movie_title,
    c.keyword_count,
    c.rank,
    a.actor_name
FROM Criteria c
JOIN aka_title a ON c.movie_id = a.id
LEFT JOIN movie_info mi ON c.movie_id = mi.movie_id AND mi.info_type_id = (SELECT id FROM info_type WHERE info = 'Genre')
WHERE (mi.info IS NOT NULL OR c.rank > 0)
ORDER BY c.rank DESC, c.keyword_count DESC
FETCH FIRST 100 ROWS ONLY;
