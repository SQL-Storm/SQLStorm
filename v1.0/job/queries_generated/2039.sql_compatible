
WITH RankedMovies AS (
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY COUNT(DISTINCT ci.person_id) DESC) AS actor_count_rank
    FROM 
        aka_title t
    LEFT JOIN 
        cast_info ci ON t.id = ci.movie_id
    GROUP BY 
        t.id, t.title, t.production_year
),
TopMovies AS (
    SELECT 
        movie_id, title, production_year
    FROM 
        RankedMovies
    WHERE 
        actor_count_rank <= 5
),
MovieInfo AS (
    SELECT 
        m.movie_id,
        m.title,
        COALESCE(mi.info, 'No Info') AS info
    FROM 
        TopMovies m
    LEFT JOIN 
        movie_info mi ON m.movie_id = mi.movie_id
),
KeywordCount AS (
    SELECT 
        mk.movie_id,
        COUNT(DISTINCT k.keyword) AS keyword_count
    FROM 
        movie_keyword mk
    JOIN 
        keyword k ON mk.keyword_id = k.id
    GROUP BY 
        mk.movie_id
)
SELECT 
    mi.title,
    mi.production_year,
    COALESCE(kc.keyword_count, 0) AS total_keywords,
    COUNT(DISTINCT cc.person_id) AS total_cast,
    STRING_AGG(DISTINCT an.name, ', ') AS actor_names
FROM 
    MovieInfo mi
LEFT JOIN 
    movie_companies mc ON mi.movie_id = mc.movie_id
LEFT JOIN 
    complete_cast cc ON mi.movie_id = cc.movie_id
LEFT JOIN 
    aka_name an ON cc.subject_id = an.person_id
LEFT JOIN 
    KeywordCount kc ON mi.movie_id = kc.movie_id
LEFT JOIN 
    movie_info_idx mii ON mi.movie_id = mii.movie_id
GROUP BY 
    mi.title, mi.production_year, kc.keyword_count
HAVING 
    COUNT(DISTINCT cc.person_id) > 0
ORDER BY 
    total_keywords DESC, mi.production_year DESC;
