
WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        m.id AS movie_id,
        m.title,
        m.production_year,
        1 AS level
    FROM 
        aka_title m
    WHERE 
        m.production_year >= 2000

    UNION ALL

    SELECT 
        m.id,
        m.title,
        m.production_year,
        mh.level + 1
    FROM 
        aka_title m
    JOIN 
        movie_link ml ON ml.linked_movie_id = m.id
    JOIN 
        movie_hierarchy mh ON mh.movie_id = ml.movie_id
),

cast_details AS (
    SELECT 
        ci.movie_id,
        ak.name AS actor_name,
        rt.role AS role_name,
        ROW_NUMBER() OVER (PARTITION BY ci.movie_id ORDER BY ci.nr_order) AS actor_order,
        COUNT(*) OVER (PARTITION BY ci.movie_id) AS total_actors
    FROM 
        cast_info ci
    JOIN 
        aka_name ak ON ak.person_id = ci.person_id
    JOIN 
        role_type rt ON rt.id = ci.role_id
),

movie_info_summary AS (
    SELECT 
        mh.movie_id,
        mh.title,
        mh.production_year,
        cd.actor_name,
        cd.role_name,
        cd.actor_order,
        cd.total_actors,
        (SELECT COUNT(*) FROM movie_keyword mk WHERE mk.movie_id = mh.movie_id) AS keyword_count,
        (SELECT STRING_AGG(DISTINCT mk.keyword, ', ') FROM movie_keyword mk JOIN keyword k ON mk.keyword_id = k.id WHERE mk.movie_id = mh.movie_id) AS keywords,
        (SELECT STRING_AGG(DISTINCT ci.note, '; ') FROM complete_cast cc JOIN movie_info mi ON mi.movie_id = mh.movie_id JOIN link_type lt ON lt.id = mi.info_type_id WHERE cc.movie_id = mh.movie_id AND lt.link = 'related') AS related_notes
    FROM 
        movie_hierarchy mh
    LEFT JOIN 
        cast_details cd ON cd.movie_id = mh.movie_id
)

SELECT 
    m.title,
    m.production_year,
    m.actor_name,
    m.role_name,
    m.actor_order,
    m.total_actors,
    COALESCE(m.keyword_count, 0) AS keyword_count,
    COALESCE(m.keywords, 'No keywords') AS keywords,
    COALESCE(m.related_notes, 'No related notes') AS related_notes
FROM 
    movie_info_summary m
ORDER BY 
    m.production_year DESC, 
    m.actor_order ASC;
