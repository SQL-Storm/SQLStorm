
WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        m.id AS movie_id,
        m.title,
        COALESCE(m.parent_id, 0) AS parent_id,
        0 AS depth
    FROM 
        title m
    WHERE 
        m.production_year >= 2000
    
    UNION ALL
    
    SELECT 
        m.id AS movie_id,
        m.title,
        COALESCE(m.parent_id, 0),
        mh.depth + 1
    FROM 
        title m
    JOIN 
        movie_hierarchy mh ON mh.movie_id = m.episode_of_id
)
, keyword_counts AS (
    SELECT 
        mk.movie_id,
        COUNT(mk.keyword_id) AS keyword_count
    FROM 
        movie_keyword mk
    GROUP BY 
        mk.movie_id
)
SELECT 
    t.title,
    t.production_year,
    ak.name AS actor_name,
    STRING_AGG(DISTINCT c.kind, ', ') AS company_kinds,
    COALESCE(kc.keyword_count, 0) AS total_keywords,
    ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.title) AS title_rank
FROM 
    title t
LEFT JOIN 
    cast_info ci ON ci.movie_id = t.id
LEFT JOIN 
    aka_name ak ON ak.person_id = ci.person_id
LEFT JOIN 
    movie_companies mc ON mc.movie_id = t.id
LEFT JOIN 
    company_type c ON c.id = mc.company_type_id
LEFT JOIN 
    keyword_counts kc ON kc.movie_id = t.id
WHERE 
    t.kind_id IN (SELECT id FROM kind_type WHERE kind IN ('movie', 'tv_series'))
    AND (t.production_year IS NOT NULL OR t.title IS NULL)
GROUP BY 
    t.title, t.production_year, ak.name, kc.keyword_count 
ORDER BY 
    t.production_year DESC, total_keywords DESC
LIMIT 100;
