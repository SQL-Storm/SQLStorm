
WITH RankedMovies AS (
    SELECT
        t.id AS movie_id,
        t.title,
        t.production_year,
        t.kind_id,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.title) AS rank
    FROM
        aka_title AS t
    WHERE
        t.production_year IS NOT NULL
),
ActorRoles AS (
    SELECT
        c.movie_id,
        COUNT(DISTINCT c.person_id) AS num_actors,
        STRING_AGG(DISTINCT CONCAT(ak.name, ' ', ak.surname_pcode) ORDER BY ak.name) AS actor_names
    FROM
        cast_info AS c
    JOIN
        aka_name AS ak ON c.person_id = ak.person_id
    GROUP BY
        c.movie_id
),
CompanyInfo AS (
    SELECT
        mc.movie_id,
        STRING_AGG(DISTINCT cn.name ORDER BY cn.name) AS companies,
        COUNT(DISTINCT mc.company_id) AS company_count
    FROM
        movie_companies AS mc
    JOIN
        company_name AS cn ON mc.company_id = cn.id
    GROUP BY
        mc.movie_id
),
MovieDetails AS (
    SELECT
        rm.movie_id,
        rm.title,
        rm.production_year,
        ar.num_actors,
        ar.actor_names,
        ci.companies,
        ci.company_count
    FROM
        RankedMovies AS rm
    LEFT JOIN
        ActorRoles AS ar ON rm.movie_id = ar.movie_id
    LEFT JOIN
        CompanyInfo AS ci ON rm.movie_id = ci.movie_id
)
SELECT
    md.title,
    md.production_year,
    md.num_actors,
    md.companies,
    md.company_count,
    CASE 
        WHEN md.num_actors IS NULL THEN 'No actors'
        WHEN md.num_actors = 0 THEN 'No actors listed'
        WHEN md.num_actors > 5 THEN 'Stellar cast!'
        ELSE 'Regular cast'
    END AS actor_description,
    COALESCE(md.companies, 'No companies associated') AS companies_associated
FROM
    MovieDetails AS md
WHERE
    md.production_year BETWEEN 2000 AND 2023
ORDER BY
    md.production_year DESC, md.title
FETCH FIRST 100 ROWS ONLY;
