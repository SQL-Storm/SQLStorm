WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        m.id as movie_id,
        m.title,
        m.production_year,
        ml.linked_movie_id,
        1 as level
    FROM 
        title m
    LEFT JOIN 
        movie_link ml ON m.id = ml.movie_id
    WHERE 
        m.production_year > 2000
    
    UNION ALL
    
    SELECT 
        mh.movie_id,
        t.title,
        t.production_year,
        ml.linked_movie_id,
        mh.level + 1
    FROM 
        MovieHierarchy mh
    JOIN 
        movie_link ml ON mh.linked_movie_id = ml.movie_id
    JOIN 
        title t ON ml.linked_movie_id = t.id
    WHERE 
        t.production_year > 2000
)

SELECT 
    mk.keyword,
    COUNT(DISTINCT m.id) AS movie_count,
    AVG(m.production_year) AS avg_production_year,
    STRING_AGG(DISTINCT ak.name, ', ') AS aka_names
FROM 
    movie_keyword mk
JOIN 
    title m ON mk.movie_id = m.id
LEFT JOIN 
    aka_title ak ON m.id = ak.movie_id
LEFT JOIN 
    cast_info ci ON m.id = ci.movie_id
WHERE 
    m.production_year BETWEEN 2000 AND 2023
    AND (ci.nr_order IS NULL OR ci.nr_order < 5)  
GROUP BY 
    mk.keyword
HAVING 
    COUNT(DISTINCT m.id) > 2  
ORDER BY 
    movie_count DESC;