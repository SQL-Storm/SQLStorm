WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        m.id AS movie_id,
        m.title AS movie_title,
        m.production_year,
        1 AS level
    FROM 
        aka_title m
    WHERE 
        m.production_year IS NOT NULL

    UNION ALL

    SELECT 
        ml.linked_movie_id AS movie_id,
        a.title AS movie_title,
        a.production_year,
        mh.level + 1 AS level
    FROM 
        movie_link ml
    JOIN 
        aka_title a ON ml.linked_movie_id = a.id
    JOIN 
        movie_hierarchy mh ON ml.movie_id = mh.movie_id
)

SELECT 
    h.movie_title,
    h.production_year,
    COUNT(c.id) AS cast_count,
    STRING_AGG(DISTINCT a.name, ', ') AS actors,
    AVG(CAST(mi.info AS FLOAT)) FILTER (WHERE mi.info_type_id = 1) AS average_rating,
    MAX(mi.info) FILTER (WHERE mi.info_type_id = 2) AS max_budget
FROM 
    movie_hierarchy h
LEFT JOIN 
    complete_cast cc ON h.movie_id = cc.movie_id
LEFT JOIN 
    cast_info c ON cc.subject_id = c.person_id
LEFT JOIN 
    aka_name a ON c.person_id = a.person_id
LEFT JOIN 
    movie_info mi ON h.movie_id = mi.movie_id
WHERE 
    h.production_year BETWEEN 2000 AND 2020
GROUP BY 
    h.movie_title, h.production_year
HAVING 
    COUNT(c.id) > 5
ORDER BY 
    h.production_year DESC,
    cast_count DESC
LIMIT 10;