
WITH RankedMovies AS (
    SELECT 
        a.id AS movie_id,
        t.title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY t.kind_id ORDER BY t.production_year DESC) AS rn
    FROM 
        aka_title t
    JOIN
        movie_keyword mk ON t.id = mk.movie_id
    JOIN 
        keyword k ON mk.keyword_id = k.id
    WHERE 
        k.keyword = 'Action'
),
CompanyDetails AS (
    SELECT 
        mc.movie_id,
        c.name AS company_name,
        ct.kind AS company_type,
        COUNT(DISTINCT c.id) AS total_companies
    FROM 
        movie_companies mc
    JOIN 
        company_name c ON mc.company_id = c.id
    JOIN 
        company_type ct ON mc.company_type_id = ct.id
    GROUP BY 
        mc.movie_id, c.name, ct.kind
),
MovieStats AS (
    SELECT 
        rm.movie_id,
        rm.title,
        rm.production_year,
        cd.company_name,
        cd.company_type,
        cd.total_companies,
        COUNT(DISTINCT ci.person_id) AS cast_count
    FROM 
        RankedMovies rm
    LEFT JOIN 
        complete_cast cc ON rm.movie_id = cc.movie_id
    LEFT JOIN 
        cast_info ci ON cc.subject_id = ci.id
    LEFT JOIN 
        CompanyDetails cd ON rm.movie_id = cd.movie_id
    WHERE 
        rm.rn = 1
    GROUP BY 
        rm.movie_id, rm.title, rm.production_year, cd.company_name, cd.company_type, cd.total_companies
)
SELECT 
    ms.movie_id,
    ms.title,
    ms.production_year,
    COALESCE(ms.company_name, 'Independent') AS company_name,
    COALESCE(ms.company_type, 'N/A') AS company_type,
    ms.total_companies,
    ms.cast_count,
    CASE 
        WHEN ms.cast_count IS NULL THEN 'No cast information'
        ELSE 'Cast is available'
    END AS cast_info
FROM 
    MovieStats ms
WHERE 
    ms.production_year >= 2000 
ORDER BY 
    ms.production_year DESC, ms.title;
