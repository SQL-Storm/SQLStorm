
WITH RECURSIVE title_hierarchy AS (
    SELECT
        t.id AS title_id,
        t.title,
        t.production_year,
        t.kind_id,
        t.episode_of_id,
        0 AS level
    FROM
        aka_title t
    WHERE
        t.episode_of_id IS NULL
    UNION ALL
    SELECT
        t.id,
        t.title,
        t.production_year,
        t.kind_id,
        t.episode_of_id,
        th.level + 1
    FROM
        aka_title t
    JOIN title_hierarchy th ON t.episode_of_id = th.title_id
),
most_popular_actor AS (
    SELECT
        ci.person_id,
        COUNT(DISTINCT ci.movie_id) AS movie_count
    FROM
        cast_info ci
    GROUP BY
        ci.person_id
    ORDER BY
        movie_count DESC
    LIMIT 1
),
actor_movies AS (
    SELECT
        t.title,
        t.production_year,
        a.name AS actor_name
    FROM
        aka_title t
    JOIN cast_info ci ON t.id = ci.movie_id
    JOIN aka_name a ON ci.person_id = a.person_id
    WHERE
        ci.person_id = (SELECT person_id FROM most_popular_actor)
),
movie_keywords AS (
    SELECT
        m.title,
        k.keyword
    FROM
        aka_title m
    JOIN movie_keyword mk ON m.id = mk.movie_id
    JOIN keyword k ON mk.keyword_id = k.id
),
final_results AS (
    SELECT
        th.title,
        th.production_year,
        a.actor_name,
        STRING_AGG(DISTINCT mk.keyword, ', ') AS keywords,
        COUNT(DISTINCT mk.keyword) OVER (PARTITION BY th.title_id) AS keyword_count,
        CASE 
            WHEN th.production_year >= 2000 THEN 'Modern'
            WHEN th.production_year BETWEEN 1980 AND 1999 THEN 'Classic'
            ELSE 'Old'
        END AS era
    FROM
        title_hierarchy th
    LEFT JOIN actor_movies a ON th.title = a.title AND th.production_year = a.production_year
    LEFT JOIN movie_keywords mk ON th.title = mk.title
    GROUP BY
        th.title_id, th.title, th.production_year, a.actor_name
)
SELECT
    title,
    production_year,
    actor_name,
    keywords,
    keyword_count,
    era
FROM
    final_results
WHERE
    keyword_count > 2 OR (actor_name IS NULL AND era = 'Classic')
ORDER BY
    production_year DESC,
    keyword_count DESC NULLS LAST;
