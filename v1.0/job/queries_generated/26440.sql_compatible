
WITH RankedMovies AS (
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        COUNT(c.person_id) AS cast_count,
        STRING_AGG(DISTINCT ak.name, ', ') AS aka_names,
        STRING_AGG(DISTINCT CONCAT(n.name, ' (', rt.role, ')'), ', ') AS cast_roles
    FROM 
        aka_title t
    INNER JOIN 
        cast_info c ON c.movie_id = t.movie_id
    INNER JOIN 
        aka_name ak ON ak.person_id = c.person_id
    INNER JOIN 
        role_type rt ON rt.id = c.role_id
    GROUP BY 
        t.id, t.title, t.production_year
),
EnhancedMovies AS (
    SELECT 
        rm.movie_id,
        rm.title,
        rm.production_year,
        rm.cast_count,
        rm.aka_names,
        rm.cast_roles,
        CASE 
            WHEN rm.cast_count >= 5 THEN 'Blockbuster'
            WHEN rm.cast_count BETWEEN 3 AND 4 THEN 'Popular'
            ELSE 'Niche'
        END AS movie_type
    FROM 
        RankedMovies rm
)
SELECT 
    em.title,
    em.production_year,
    em.cast_count,
    em.aka_names,
    em.cast_roles,
    em.movie_type,
    COUNT(DISTINCT mc.company_id) AS production_companies
FROM 
    EnhancedMovies em
LEFT JOIN 
    movie_companies mc ON mc.movie_id = em.movie_id
GROUP BY 
    em.title, em.production_year, em.cast_count, em.aka_names, em.cast_roles, em.movie_type
ORDER BY 
    em.production_year DESC, em.cast_count DESC;
