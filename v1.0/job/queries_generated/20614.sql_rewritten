WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        mt.kind_id,
        1 AS level
    FROM 
        aka_title mt
    WHERE 
        mt.kind_id IN (SELECT id FROM kind_type WHERE kind LIKE '%Feature%')
    
    UNION ALL 
    
    SELECT 
        ml.linked_movie_id,
        at.title,
        at.production_year,
        at.kind_id,
        mh.level + 1
    FROM 
        movie_link ml
    JOIN 
        movie_hierarchy mh ON ml.movie_id = mh.movie_id
    JOIN 
        aka_title at ON ml.linked_movie_id = at.id
)
SELECT 
    ak.name AS actor_name,
    at.title AS movie_title,
    mh.level,
    COUNT(DISTINCT mc.company_id) AS company_count,
    SUM(CASE WHEN keyword.keyword IS NOT NULL THEN 1 ELSE 0 END) AS keyword_count,
    ROW_NUMBER() OVER (PARTITION BY mh.movie_id ORDER BY ak.name) AS actor_order
FROM 
    cast_info c
JOIN 
    aka_name ak ON c.person_id = ak.person_id
JOIN 
    movie_companies mc ON c.movie_id = mc.movie_id
JOIN 
    movie_hierarchy mh ON c.movie_id = mh.movie_id
LEFT JOIN 
    movie_keyword mk ON mk.movie_id = mh.movie_id
LEFT JOIN 
    keyword ON mk.keyword_id = keyword.id
LEFT JOIN 
    aka_title at ON c.movie_id = at.id
WHERE 
    mh.level <= 3
    AND mh.production_year > 2000
    AND (at.title NOT LIKE '%Sequel%' OR at.title IS NULL)
GROUP BY 
    ak.name, at.title, mh.level
HAVING 
    COUNT(DISTINCT mc.company_id) >= 2
ORDER BY 
    mh.level, actor_name;