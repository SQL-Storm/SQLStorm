
WITH RankedMovies AS (
    SELECT 
        a.title, 
        a.production_year, 
        ROW_NUMBER() OVER (ORDER BY a.production_year DESC) AS title_rank,
        COUNT(DISTINCT c.person_id) AS total_cast_members
    FROM 
        aka_title a
    LEFT JOIN 
        cast_info c ON a.id = c.movie_id
    LEFT JOIN 
        movie_companies mc ON a.id = mc.movie_id
    LEFT JOIN 
        company_name cn ON mc.company_id = cn.id
    WHERE 
        a.production_year IS NOT NULL
    GROUP BY 
        a.id, a.title, a.production_year
    ORDER BY 
        a.production_year DESC,
        total_cast_members DESC
),
TopRankedMovies AS (
    SELECT 
        title, 
        production_year, 
        total_cast_members, 
        title_rank, 
        ROW_NUMBER() OVER (PARTITION BY production_year ORDER BY title_rank) AS rn
    FROM 
        RankedMovies
)
SELECT 
    t.title,
    t.production_year,
    COALESCE(mk.keyword, 'No Keyword') AS keyword,
    cn.name AS company_name,
    CASE 
        WHEN total_cast_members > 5 THEN 'Blockbuster'
        WHEN total_cast_members BETWEEN 3 AND 5 THEN 'Average'
        ELSE 'Low'
    END AS cast_size_category
FROM 
    TopRankedMovies t
LEFT JOIN 
    movie_keyword mk ON t.title = mk.movie_id
LEFT JOIN 
    movie_companies mc ON t.title = mc.movie_id
LEFT JOIN 
    company_name cn ON mc.company_id = cn.id
WHERE 
    t.rn <= 10
AND 
    (t.production_year > 2000 OR t.production_year IS NULL)
ORDER BY 
    t.production_year DESC;
