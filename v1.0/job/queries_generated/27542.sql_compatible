
WITH MovieDetails AS (
    SELECT 
        t.title AS movie_title,
        t.production_year,
        t.kind_id,
        STRING_AGG(DISTINCT ak.name, ', ') AS aliases,
        STRING_AGG(DISTINCT k.keyword, ', ') AS keywords,
        STRING_AGG(DISTINCT c.name, ', ') AS companies,
        STRING_AGG(DISTINCT p.info, ', ') AS person_info
    FROM 
        title t
    LEFT JOIN 
        aka_title ak ON t.id = ak.movie_id
    LEFT JOIN 
        movie_keyword mk ON t.id = mk.movie_id
    LEFT JOIN 
        keyword k ON mk.keyword_id = k.id
    LEFT JOIN 
        movie_companies mc ON t.id = mc.movie_id
    LEFT JOIN 
        company_name c ON mc.company_id = c.id
    LEFT JOIN 
        complete_cast cc ON t.id = cc.movie_id
    LEFT JOIN 
        person_info p ON cc.subject_id = p.person_id
    GROUP BY 
        t.id
),
RoleStats AS (
    SELECT 
        cc.movie_id,
        rt.role AS role_type,
        COUNT(cc.id) AS role_count
    FROM 
        complete_cast cc
    JOIN 
        role_type rt ON cc.role_id = rt.id
    GROUP BY 
        cc.movie_id, rt.role
),
FinalBenchmark AS (
    SELECT 
        md.movie_title,
        md.production_year,
        md.aliases,
        md.keywords,
        md.companies,
        MAX(rs.role_count) AS max_role_count,
        STRING_AGG(DISTINCT rs.role_type, ', ') AS role_types
    FROM 
        MovieDetails md
    LEFT JOIN 
        RoleStats rs ON md.kind_id = rs.movie_id
    GROUP BY 
        md.movie_title, md.production_year, md.aliases, md.keywords, md.companies
)
SELECT 
    *
FROM 
    FinalBenchmark
WHERE 
    production_year BETWEEN 2000 AND 2023
ORDER BY 
    max_role_count DESC, movie_title ASC;
