WITH RankedMovies AS (
    SELECT 
        a.title,
        t.production_year,
        COUNT(DISTINCT c.person_id) AS num_cast,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY COUNT(DISTINCT c.person_id) DESC) AS rank
    FROM 
        aka_title t
    JOIN 
        complete_cast cc ON t.id = cc.movie_id
    JOIN 
        cast_info c ON cc.subject_id = c.id
    WHERE 
        t.production_year >= 2000
    GROUP BY 
        a.title, t.production_year
),
CastDetails AS (
    SELECT 
        t.title,
        k.keyword,
        COUNT(*) AS keyword_count
    FROM 
        aka_title t
    LEFT JOIN 
        movie_keyword mk ON t.id = mk.movie_id
    LEFT JOIN 
        keyword k ON mk.keyword_id = k.id
    WHERE 
        t.kind_id IN (1, 2)  
    GROUP BY 
        t.title, k.keyword
)
SELECT 
    rm.title,
    rm.production_year,
    COALESCE(cd.keyword_count, 0) AS total_keywords,
    CASE 
        WHEN rm.num_cast > 10 THEN 'Large Cast'
        WHEN rm.num_cast BETWEEN 5 AND 10 THEN 'Medium Cast'
        ELSE 'Small Cast'
    END AS cast_size,
    DISTINCT (SELECT name FROM aka_name WHERE person_id IN (SELECT c.person_id FROM cast_info c WHERE c.movie_id = t.id)) AS actors
FROM 
    RankedMovies rm
LEFT JOIN 
    CastDetails cd ON rm.title = cd.title
WHERE 
    rm.rank <= 5
ORDER BY 
    rm.production_year DESC, total_keywords DESC;