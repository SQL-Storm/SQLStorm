WITH RECURSIVE movie_chain AS (
    
    SELECT 
        m.id AS movie_id,
        t.title AS movie_title,
        ml.linked_movie_id,
        1 AS level
    FROM title t
    JOIN movie_link ml ON t.id = ml.movie_id
    WHERE t.production_year >= 2000
      AND ml.link_type_id IN (SELECT id FROM link_type WHERE link = 'Sequel')

    UNION ALL

    SELECT 
        mc.movie_id,
        t.title AS movie_title,
        ml.linked_movie_id,
        mc.level + 1
    FROM movie_chain mc
    JOIN movie_link ml ON mc.linked_movie_id = ml.movie_id
    JOIN title t ON ml.linked_movie_id = t.id
    WHERE mc.level < 3  
)


SELECT 
    ak.name AS actor_name,
    t.title AS movie_title,
    cc.kind AS cast_kind,
    mc.movie_id AS connected_movie_id,
    COALESCE(cast_rank.rank, 0) AS cast_rank,
    COALESCE(k.keyword, 'No Keywords') AS keyword,
    COUNT(DISTINCT mc.movie_id) OVER (PARTITION BY ak.id) AS total_connected_movies,
    CASE 
        WHEN ik.info IS NULL THEN 'No Information Available'
        ELSE ik.info 
    END AS additional_movie_info
FROM aka_name ak
LEFT JOIN cast_info ci ON ak.person_id = ci.person_id
LEFT JOIN title t ON ci.movie_id = t.id
LEFT JOIN (SELECT DISTINCT movie_id, kind FROM comp_cast_type) cc ON ci.role_id = cc.id
LEFT JOIN movie_keyword mk ON t.id = mk.movie_id
LEFT JOIN keyword k ON mk.keyword_id = k.id
LEFT JOIN (SELECT 
                movie_id, 
                info 
            FROM movie_info 
            WHERE info_type_id = (SELECT id FROM info_type WHERE info = 'Plot')
          ) ik ON t.id = ik.movie_id
LEFT JOIN movie_chain mc ON t.id = mc.movie_id
WHERE ak.name IS NOT NULL
  AND t.production_year >= 1990
  AND (mc.level IS NULL OR mc.level > 1)
ORDER BY actor_name, movie_title;