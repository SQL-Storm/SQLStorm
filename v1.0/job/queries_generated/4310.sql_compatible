
WITH RankedMovies AS (
    SELECT 
        t.title, 
        t.production_year, 
        COUNT(c.person_id) AS actor_count,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY COUNT(c.person_id) DESC) AS rank
    FROM 
        aka_title t
    LEFT JOIN 
        cast_info c ON t.id = c.movie_id
    GROUP BY 
        t.id, t.title, t.production_year
), 
MoviesWithKeywords AS (
    SELECT 
        m.title,
        m.production_year,
        STRING_AGG(k.keyword, ', ') AS keywords
    FROM 
        RankedMovies m
    LEFT JOIN 
        movie_keyword mk ON m.title = mk.movie_id
    LEFT JOIN 
        keyword k ON mk.keyword_id = k.id
    GROUP BY 
        m.title, m.production_year
), 
FilteredMovies AS (
    SELECT 
        mwk.title,
        mwk.production_year,
        mwk.keywords
    FROM 
        MoviesWithKeywords mwk
    WHERE 
        mwk.production_year >= 2000
        AND mwk.keywords IS NOT NULL
)
SELECT 
    f.title,
    f.production_year,
    f.keywords,
    (SELECT COUNT(*) 
     FROM complete_cast cc 
     WHERE cc.movie_id = (SELECT m.id FROM aka_title m WHERE m.title = f.title LIMIT 1)
    ) AS complete_cast_count,
    COALESCE((
        SELECT AVG(pi.info) 
        FROM person_info pi 
        WHERE pi.person_id IN (
            SELECT c.person_id 
            FROM cast_info c 
            WHERE c.movie_id = (SELECT m.id FROM aka_title m WHERE m.title = f.title LIMIT 1)
        )
    ), 0) AS avg_person_info
FROM 
    FilteredMovies f
LEFT JOIN 
    title t ON f.title = t.title
WHERE 
    EXISTS (
        SELECT 1 
        FROM movie_info mi 
        WHERE mi.movie_id = t.id 
        AND mi.info_type_id = (SELECT id FROM info_type WHERE info = 'plot' LIMIT 1)
    )
ORDER BY 
    f.production_year DESC, 
    complete_cast_count DESC;
