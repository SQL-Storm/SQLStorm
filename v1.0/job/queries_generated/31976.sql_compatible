
WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        mt.episode_of_id,
        1 AS level
    FROM 
        aka_title mt
    WHERE 
        mt.production_year >= 2000

    UNION ALL

    SELECT 
        ml.linked_movie_id AS movie_id,
        at.title,
        at.production_year,
        at.episode_of_id,
        mh.level + 1 AS level
    FROM 
        movie_link ml
    JOIN 
        aka_title at ON ml.linked_movie_id = at.id
    JOIN 
        movie_hierarchy mh ON ml.movie_id = mh.movie_id
)

SELECT 
    ak.name AS actor_name,
    COUNT(DISTINCT mh.movie_id) AS movie_count,
    AVG(mh.production_year) AS average_production_year,
    STRING_AGG(DISTINCT mw.keyword, ', ') AS keywords,
    ROW_NUMBER() OVER (PARTITION BY ak.name ORDER BY COUNT(DISTINCT mh.movie_id) DESC) AS row_num
FROM 
    aka_name ak
JOIN 
    cast_info ci ON ak.person_id = ci.person_id
JOIN 
    movie_hierarchy mh ON ci.movie_id = mh.movie_id
LEFT JOIN 
    movie_keyword mw ON mh.movie_id = mw.movie_id
WHERE 
    ak.surname_pcode IS NOT NULL
    AND (mh.production_year BETWEEN 2010 AND 2020 OR mh.episode_of_id IS NOT NULL)
GROUP BY 
    ak.name,
    average_production_year,
    movie_count
HAVING 
    COUNT(DISTINCT mh.movie_id) > 3
ORDER BY 
    average_production_year DESC, 
    movie_count DESC;
