WITH MovieWithKeywords AS (
    SELECT 
        t.title AS movie_title,
        t.production_year,
        STRING_AGG(DISTINCT k.keyword, ', ') AS keywords_list
    FROM 
        aka_title t
    LEFT JOIN 
        movie_keyword mk ON t.id = mk.movie_id
    LEFT JOIN 
        keyword k ON mk.keyword_id = k.id
    GROUP BY 
        t.id, t.title, t.production_year
),

RankedMovies AS (
    SELECT 
        mwk.movie_title,
        mwk.production_year,
        mwk.keywords_list,
        ROW_NUMBER() OVER (PARTITION BY mwk.production_year ORDER BY LENGTH(mwk.keywords_list) DESC) AS rank
    FROM 
        MovieWithKeywords mwk
),

ActorPerformance AS (
    SELECT 
        a.name AS actor_name,
        COUNT(DISTINCT c.movie_id) AS movie_count,
        SUM(CASE WHEN c.note IS NOT NULL THEN 1 ELSE 0 END) AS roles_with_notes
    FROM 
        aka_name a
    LEFT JOIN 
        cast_info c ON a.person_id = c.person_id
    GROUP BY 
        a.id
),

FilteredActors AS (
    SELECT 
        ap.actor_name,
        ap.movie_count,
        ap.roles_with_notes
    FROM 
        ActorPerformance ap
    WHERE 
        ap.roles_with_notes > 0
    AND 
        ap.movie_count > (
            SELECT 
                AVG(movie_count) 
            FROM 
                ActorPerformance 
            WHERE 
                roles_with_notes > 0
        )
)

SELECT 
    rm.movie_title,
    rm.production_year,
    ra.actor_name,
    IFNULL(ra.movie_count, 0) AS associated_movie_count,
    ra.roles_with_notes,
    rm.keywords_list
FROM 
    RankedMovies rm
LEFT JOIN 
    FilteredActors ra ON rm.rank = 1 
WHERE 
    rm.production_year IN (SELECT DISTINCT production_year FROM MovieWithKeywords WHERE keywords_list LIKE '%action%')
OR 
    rm.production_year IS NULL 
ORDER BY 
    rm.production_year DESC, associated_movie_count DESC;