WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        m.id AS movie_id,
        m.title,
        0 AS depth
    FROM 
        aka_title m 
    WHERE 
        m.production_year >= 2000
    
    UNION ALL
    
    SELECT 
        lm.linked_movie_id,
        lm.linked_movie_title,
        mh.depth + 1
    FROM 
        movie_link lm 
    JOIN 
        movie_hierarchy mh ON lm.movie_id = mh.movie_id
),
actor_statistics AS (
    SELECT 
        a.person_id,
        a.name,
        COUNT(DISTINCT c.movie_id) AS movie_count,
        AVG(COALESCE(m.production_year, 0)) AS avg_production_year
    FROM 
        aka_name a
    LEFT JOIN 
        cast_info c ON a.person_id = c.person_id
    LEFT JOIN 
        aka_title m ON c.movie_id = m.id
    GROUP BY 
        a.person_id, a.name
),
keyword_counts AS (
    SELECT 
        mk.movie_id,
        COUNT(DISTINCT k.keyword) AS keyword_count
    FROM 
        movie_keyword mk
    JOIN 
        keyword k ON mk.keyword_id = k.id
    GROUP BY 
        mk.movie_id
)
SELECT 
    mh.title AS linked_movie_title,
    a.name AS actor_name,
    a.movie_count,
    a.avg_production_year,
    kc.keyword_count,
    ROW_NUMBER() OVER (PARTITION BY mh.movie_id ORDER BY a.movie_count DESC) AS ranking
FROM 
    movie_hierarchy mh
JOIN 
    actor_statistics a ON mh.movie_id = a.person_id
LEFT JOIN 
    keyword_counts kc ON mh.movie_id = kc.movie_id
WHERE 
    a.movie_count > 5 AND kc.keyword_count IS NOT NULL
ORDER BY 
    mh.depth, a.movie_count DESC;