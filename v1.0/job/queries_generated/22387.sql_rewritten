WITH RankedMovies AS (
    SELECT 
        t.title,
        t.production_year,
        t.id AS movie_id,
        COUNT(DISTINCT c.person_id) OVER (PARTITION BY t.id) AS total_cast,
        COUNT(DISTINCT k.keyword) OVER (PARTITION BY t.id) AS total_keywords,
        ROW_NUMBER() OVER (ORDER BY t.production_year DESC) AS rn
    FROM 
        aka_title t
    LEFT JOIN 
        movie_keyword mk ON t.id = mk.movie_id
    LEFT JOIN 
        keyword k ON mk.keyword_id = k.id
    LEFT JOIN 
        complete_cast cc ON t.id = cc.movie_id
    LEFT JOIN 
        cast_info ci ON cc.subject_id = ci.id
),

ActorAwards AS (
    SELECT 
        ca.person_id,
        COUNT(DISTINCT ci.movie_id) AS awards_count
    FROM 
        cast_info ci
    JOIN 
        role_type rt ON ci.role_id = rt.id
    WHERE 
        rt.role ILIKE '%award%'
    GROUP BY 
        ca.person_id
),

TitleNotLinked AS (
    SELECT 
        t.title,
        COUNT(DISTINCT ml.linked_movie_id) AS linked_count
    FROM 
        aka_title t
    LEFT JOIN 
        movie_link ml ON t.id = ml.movie_id
    GROUP BY 
        t.title
    HAVING 
        COUNT(DISTINCT ml.linked_movie_id) = 0
)

SELECT 
    rm.title,
    rm.production_year,
    COALESCE(aaw.awards_count, 0) AS awards_count,
    CASE WHEN ln.linked_count IS NULL THEN 'Not Linked' ELSE 'Linked' END AS link_status
FROM 
    RankedMovies rm
LEFT JOIN 
    ActorAwards aaw ON rm.movie_id = aaw.person_id
LEFT JOIN 
    TitleNotLinked ln ON rm.title = ln.title
WHERE 
    rm.total_cast > 5 
    AND (rm.production_year >= 2000 OR rm.total_keywords > 3)
ORDER BY 
    rm.production_year DESC, 
    rm.title;