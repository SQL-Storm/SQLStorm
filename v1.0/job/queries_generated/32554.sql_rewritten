WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        1 AS level
    FROM 
        aka_title mt
    WHERE 
        mt.production_year >= 2000 

    UNION ALL

    SELECT 
        ml.linked_movie_id,
        at.title,
        at.production_year,
        mh.level + 1
    FROM 
        movie_link ml
    JOIN 
        aka_title at ON ml.linked_movie_id = at.id
    JOIN 
        movie_hierarchy mh ON ml.movie_id = mh.movie_id
)

SELECT 
    a.name AS actor_name,
    m.title AS movie_title,
    m.production_year,
    COUNT(c.id) AS number_of_roles,
    STRING_AGG(DISTINCT k.keyword, ', ') AS keywords,
    MAX(pi.info) AS person_info,
    ROW_NUMBER() OVER (PARTITION BY a.person_id ORDER BY m.production_year DESC) AS role_rank
FROM 
    aka_name a
JOIN 
    cast_info c ON c.person_id = a.person_id
JOIN 
    movie_hierarchy m ON c.movie_id = m.movie_id
LEFT JOIN 
    movie_keyword mk ON mk.movie_id = m.movie_id
LEFT JOIN 
    keyword k ON mk.keyword_id = k.id
LEFT JOIN 
    person_info pi ON pi.person_id = a.person_id AND pi.info_type_id IN (SELECT id FROM info_type WHERE info LIKE '%birth%')
WHERE 
    a.name IS NOT NULL
GROUP BY 
    a.name, m.title, m.production_year
HAVING 
    COUNT(c.id) > 1
ORDER BY 
    m.production_year DESC, number_of_roles DESC;