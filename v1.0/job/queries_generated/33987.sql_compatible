
WITH RECURSIVE ActorHierarchy AS (
    SELECT
        ci.person_id,
        1 AS level,
        a.name AS actor_name
    FROM
        cast_info ci
    JOIN
        aka_name a ON ci.person_id = a.person_id
    WHERE
        ci.movie_id IN (SELECT id FROM aka_title WHERE production_year = 2023)

    UNION ALL

    SELECT
        ci.person_id,
        ah.level + 1,
        a.name AS actor_name
    FROM
        cast_info ci
    JOIN
        ActorHierarchy ah ON ci.movie_id IN (
            SELECT
                movie_id FROM cast_info WHERE person_id = ah.person_id
        )
    JOIN
        aka_name a ON ci.person_id = a.person_id
    WHERE
        ah.level < 3  
),
MovieInfo AS (
    SELECT
        m.id AS movie_id,
        at.title,
        MIN(mk.keyword) AS primary_keyword,
        STRING_AGG(DISTINCT ct.kind, ', ') AS company_types,
        ROW_NUMBER() OVER (PARTITION BY m.id ORDER BY m.production_year DESC) AS rn
    FROM
        aka_title at
    JOIN
        movie_keyword mk ON at.id = mk.movie_id
    JOIN
        movie_companies mc ON at.id = mc.movie_id
    JOIN
        company_type ct ON mc.company_type_id = ct.id
    JOIN
        title m ON at.id = m.id
    WHERE
        m.production_year IS NOT NULL
    GROUP BY
        m.id, at.title
),
ActorCounts AS (
    SELECT
        ah.actor_name,
        COUNT(DISTINCT mi.movie_id) AS movie_count
    FROM
        ActorHierarchy ah
    JOIN
        MovieInfo mi ON ah.person_id = mi.movie_id
    GROUP BY
        ah.actor_name
)
SELECT
    ac.actor_name,
    ac.movie_count,
    mi.title,
    mi.primary_keyword,
    mi.company_types
FROM
    ActorCounts ac
JOIN
    MovieInfo mi ON ac.movie_count > 0
WHERE
    ac.movie_count > 1
ORDER BY
    ac.movie_count DESC,
    mi.title ASC;
