WITH RECURSIVE actor_hierarchy AS (
    SELECT 
        c.id AS cast_id,
        a.name AS actor_name,
        t.title AS movie_title,
        t.production_year,
        1 AS level
    FROM 
        cast_info c
    JOIN 
        aka_name a ON c.person_id = a.person_id
    JOIN 
        aka_title t ON c.movie_id = t.movie_id
    WHERE 
        t.production_year >= 2000
    
    UNION ALL

    SELECT 
        c.id AS cast_id,
        a.name AS actor_name,
        t.title AS movie_title,
        t.production_year,
        ah.level + 1
    FROM 
        cast_info c
    JOIN 
        aka_name a ON c.person_id = a.person_id
    JOIN 
        aka_title t ON c.movie_id = t.movie_id
    JOIN 
        actor_hierarchy ah ON c.movie_id = ah.cast_id
    WHERE 
        t.production_year >= 2000 AND ah.level < 3
)

SELECT 
    ah.actor_name,
    ah.movie_title,
    ah.production_year,
    COUNT(DISTINCT ah.cast_id) OVER (PARTITION BY ah.actor_name) AS movie_count,
    MAX(ah.production_year) OVER (PARTITION BY ah.actor_name) AS last_movie_year,
    CASE 
        WHEN MAX(ah.production_year) OVER (PARTITION BY ah.actor_name) IS NULL 
        THEN 'No movies found' 
        ELSE 'Movies found' 
    END AS movie_availability,
    COALESCE(SUM(CASE WHEN c.person_role_id IS NOT NULL THEN 1 ELSE 0 END) OVER (PARTITION BY ah.actor_name), 0) AS roles_played
FROM 
    actor_hierarchy ah
LEFT JOIN 
    cast_info c ON ah.cast_id = c.movie_id
WHERE 
    ah.movie_title IS NOT NULL
ORDER BY 
    movie_count DESC, last_movie_year DESC
LIMIT 10;