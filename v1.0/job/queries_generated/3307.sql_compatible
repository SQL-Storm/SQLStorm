
WITH MovieStats AS (
    SELECT 
        t.id AS title_id,
        t.title,
        t.production_year,
        COUNT(DISTINCT c.person_id) AS actor_count,
        COUNT(DISTINCT mc.company_id) AS company_count,
        STRING_AGG(DISTINCT k.keyword, ', ') AS keywords
    FROM 
        aka_title t
    LEFT JOIN 
        complete_cast cc ON t.id = cc.movie_id
    LEFT JOIN 
        cast_info c ON cc.subject_id = c.id
    LEFT JOIN 
        movie_companies mc ON t.id = mc.movie_id
    LEFT JOIN 
        movie_keyword mk ON t.id = mk.movie_id
    LEFT JOIN 
        keyword k ON mk.keyword_id = k.id
    WHERE 
        t.production_year IS NOT NULL
    GROUP BY 
        t.id, t.title, t.production_year
),
ActorRoles AS (
    SELECT 
        c.person_id,
        r.role,
        COUNT(*) AS role_count
    FROM 
        cast_info c
    JOIN 
        role_type r ON c.role_id = r.id
    GROUP BY 
        c.person_id, r.role
),
RankedRoles AS (
    SELECT 
        person_id,
        role,
        role_count,
        RANK() OVER (PARTITION BY person_id ORDER BY role_count DESC) AS role_rank
    FROM 
        ActorRoles
)
SELECT 
    ms.title_id,
    ms.title,
    ms.production_year,
    ms.actor_count,
    ms.company_count,
    COALESCE(ms.keywords, 'No keywords') AS keywords,
    ar.role,
    ar.role_count
FROM 
    MovieStats ms
LEFT JOIN 
    RankedRoles ar ON ms.actor_count > 5 AND ar.role_rank = 1
ORDER BY 
    ms.production_year DESC, 
    ms.actor_count DESC;
