
WITH movie_data AS (
    SELECT 
        t.title AS movie_title,
        t.production_year,
        k.keyword,
        cn.company_id,
        r.role,
        a.name AS actor_name,
        COUNT(DISTINCT mi.id) AS info_count
    FROM 
        aka_title t
    JOIN 
        movie_keyword mk ON t.id = mk.movie_id
    JOIN 
        keyword k ON mk.keyword_id = k.id
    LEFT JOIN 
        movie_companies mc ON t.id = mc.movie_id
    LEFT JOIN 
        company_name cn ON mc.company_id = cn.id
    LEFT JOIN 
        cast_info ci ON t.id = ci.movie_id
    LEFT JOIN 
        aka_name a ON ci.person_id = a.person_id
    LEFT JOIN 
        role_type r ON ci.role_id = r.id
    LEFT JOIN 
        movie_info mi ON t.id = mi.movie_id
    WHERE 
        t.production_year > 2000 
        AND (cn.country_code IS NULL OR cn.country_code != 'USA') 
        AND (k.keyword LIKE '%Action%' OR k.keyword LIKE '%Drama%')
    GROUP BY 
        t.id, t.title, t.production_year, k.keyword, cn.company_id, r.role, a.name
),
ranked_movies AS (
    SELECT 
        md.movie_title,
        md.production_year,
        md.keyword,
        RANK() OVER (PARTITION BY md.production_year ORDER BY md.info_count DESC) AS rank
    FROM 
        movie_data md
)
SELECT 
    r.movie_title,
    r.production_year,
    r.keyword,
    r.rank,
    CASE 
        WHEN r.rank <= 5 THEN 'Top 5 Movies' 
        ELSE 'Other Movies' 
    END AS rank_category
FROM 
    ranked_movies r
WHERE 
    r.rank <= 10
ORDER BY 
    r.production_year DESC, r.rank;
