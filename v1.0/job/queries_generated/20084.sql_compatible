
WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        m.id AS movie_id,
        m.title,
        m.production_year,
        0 AS depth
    FROM title AS m
    WHERE m.production_year >= 2000
    
    UNION ALL
    
    SELECT 
        ml.linked_movie_id AS movie_id,
        t.title,
        t.production_year,
        mh.depth + 1
    FROM movie_link AS ml
    JOIN title AS t ON ml.linked_movie_id = t.id
    JOIN movie_hierarchy AS mh ON ml.movie_id = mh.movie_id
),
actor_movies AS (
    SELECT 
        c.person_id,
        t.title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY c.person_id ORDER BY t.production_year DESC) AS recent_movie_num
    FROM cast_info AS c
    JOIN title AS t ON c.movie_id = t.id
    WHERE c.person_role_id IN (SELECT id FROM role_type WHERE role LIKE '%actor%')
),
keyword_movies AS (
    SELECT 
        mk.movie_id,
        k.keyword,
        COUNT(mk.keyword_id) AS keyword_count
    FROM movie_keyword AS mk
    JOIN keyword AS k ON mk.keyword_id = k.id
    GROUP BY mk.movie_id, k.keyword
),
casts_with_keywords AS (
    SELECT 
        am.person_id,
        am.title AS movie_title,
        am.production_year,
        km.keyword,
        km.keyword_count,
        ROW_NUMBER() OVER (PARTITION BY am.person_id ORDER BY am.production_year DESC) AS rnk
    FROM actor_movies AS am
    LEFT JOIN keyword_movies AS km ON am.title = km.movie_title
    WHERE km.keyword_count IS NOT NULL OR am.production_year IS NULL
),
final_actors AS (
    SELECT 
        ak.id AS actor_id,
        ak.name,
        COALESCE(SUM(cwk.keyword_count), 0) AS total_keywords,
        MAX(cwk.production_year) AS latest_movie_year
    FROM aka_name AS ak
    LEFT JOIN casts_with_keywords AS cwk ON ak.person_id = cwk.person_id
    GROUP BY ak.id, ak.name
    HAVING COUNT(cwk.movie_title) > 0 AND 
           (MAX(cwk.production_year) IS NULL OR MAX(cwk.production_year) > 2015)
)
SELECT 
    fa.actor_id,
    fa.name,
    fa.total_keywords,
    mv.movie_id,
    mv.title AS movie_title,
    mv.production_year AS movie_year,
    mv.depth
FROM final_actors AS fa
JOIN movie_hierarchy AS mv ON mv.movie_id IN (
    SELECT movie_id FROM actor_movies WHERE person_id = fa.actor_id
)
WHERE fa.total_keywords >= 5
ORDER BY fa.total_keywords DESC, fa.name;
