WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        1 AS level
    FROM 
        aka_title mt
    WHERE 
        mt.kind_id IN (SELECT id FROM kind_type WHERE kind = 'movie')

    UNION ALL

    SELECT 
        ml.linked_movie_id AS movie_id,
        at.title,
        at.production_year,
        mh.level + 1
    FROM 
        movie_link ml
    JOIN 
        aka_title at ON ml.linked_movie_id = at.id
    JOIN 
        MovieHierarchy mh ON ml.movie_id = mh.movie_id
)

SELECT 
    mk.keyword,
    COUNT(DISTINCT mk.movie_id) AS keyword_count,
    AVG(COALESCE(mb.budget, 0)) AS avg_budget,
    MAX(mk.production_year) AS latest_year
FROM 
    movie_keyword mk
LEFT JOIN 
    (SELECT 
         m.id AS movie_id,
         mi.info AS budget
     FROM 
         title m
     LEFT JOIN 
         movie_info mi ON mi.movie_id = m.id 
     WHERE 
         mi.info_type_id = (SELECT id FROM info_type WHERE info = 'budget')
    ) mb ON mk.movie_id = mb.movie_id
LEFT JOIN 
    MovieHierarchy mh ON mk.movie_id = mh.movie_id
WHERE 
    mh.level = 1 AND
    mk.keyword IS NOT NULL
GROUP BY 
    mk.keyword
ORDER BY 
    keyword_count DESC
LIMIT 10;