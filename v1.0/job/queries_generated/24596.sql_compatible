
WITH RankedMovies AS (
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        COUNT(DISTINCT c.person_id) AS total_cast,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY COUNT(DISTINCT c.person_id) DESC) AS rnk
    FROM 
        aka_title t
    LEFT JOIN 
        cast_info c ON t.id = c.movie_id
    WHERE 
        t.production_year IS NOT NULL
    GROUP BY 
        t.id, t.title, t.production_year
),
HighCastMovies AS (
    SELECT 
        rm.movie_id,
        rm.title,
        rm.production_year,
        rm.total_cast
    FROM 
        RankedMovies rm
    WHERE 
        rm.rnk <= 10
),
ActorInfo AS (
    SELECT 
        a.person_id,
        a.name,
        a.surname_pcode,
        ci.note AS role_note,
        COUNT(DISTINCT c.movie_id) AS movies_count
    FROM 
        aka_name a
    JOIN 
        cast_info ci ON a.person_id = ci.person_id
    LEFT JOIN 
        cast_info c ON c.person_id = a.person_id
    GROUP BY 
        a.person_id, a.name, a.surname_pcode, ci.note
)
SELECT 
    hcm.title,
    hcm.production_year,
    ai.name,
    ai.surname_pcode,
    ai.role_note,
    COALESCE(ai.movies_count, 0) AS movies_count,
    CASE 
        WHEN ai.movies_count IS NULL THEN 'No Movies'
        WHEN ai.movies_count > 5 THEN 'Veteran Actor'
        ELSE 'Emerging Actor'
    END AS actor_status
FROM 
    HighCastMovies hcm
LEFT JOIN 
    ActorInfo ai ON ai.person_id IN (
         SELECT DISTINCT c.person_id 
         FROM cast_info c 
         WHERE c.movie_id = hcm.movie_id
    )
ORDER BY 
    hcm.production_year DESC, 
    hcm.title ASC;
