
WITH RECURSIVE cast_hierarchy AS (
    SELECT 
        ci.id,
        ci.movie_id,
        ci.person_id,
        ci.person_role_id,
        1 AS level
    FROM 
        cast_info ci
    WHERE
        ci.person_role_id = (SELECT id FROM role_type WHERE role = 'Director') 

    UNION ALL

    SELECT 
        ci.id,
        ci.movie_id,
        ci.person_id,
        ci.person_role_id,
        ch.level + 1
    FROM 
        cast_info ci
    JOIN cast_hierarchy ch ON ci.movie_id = ch.movie_id 
    WHERE 
        ci.person_role_id IS NOT NULL  
)

SELECT 
    ak.name AS actor_name,
    at.title AS movie_title,
    at.production_year,
    COUNT(DISTINCT ch.person_id) AS total_cast,
    SUM(CASE WHEN ci.note IS NOT NULL THEN 1 ELSE 0 END) AS notes_count,
    STRING_AGG(DISTINCT k.keyword, ', ') AS keywords,
    RANK() OVER (PARTITION BY at.production_year ORDER BY COUNT(DISTINCT ch.person_id) DESC) AS year_rank
FROM 
    aka_name ak
JOIN 
    cast_info ci ON ak.person_id = ci.person_id
JOIN 
    aka_title at ON ci.movie_id = at.movie_id
LEFT JOIN 
    keyword k ON k.id IN (SELECT movie_keyword.keyword_id FROM movie_keyword WHERE movie_keyword.movie_id = at.movie_id)
LEFT JOIN 
    (SELECT 
         movie_id, 
         COUNT(*) AS cast_count 
     FROM 
         cast_info 
     GROUP BY 
         movie_id) AS movie_cast_count ON at.movie_id = movie_cast_count.movie_id
LEFT JOIN 
    cast_hierarchy ch ON ch.movie_id = at.movie_id
WHERE 
    ak.name IS NOT NULL 
    AND at.production_year IS NOT NULL
    AND at.production_year >= 2000 
GROUP BY 
    ak.name, at.title, at.production_year
HAVING 
    COUNT(DISTINCT ch.person_id) > 2
ORDER BY 
    year_rank, total_cast DESC;
