
WITH RECURSIVE MovieHierarchy AS (
    SELECT
        id AS movie_id,
        title,
        production_year,
        episode_of_id,
        season_nr,
        episode_nr,
        1 AS level
    FROM title
    WHERE episode_of_id IS NULL
    
    UNION ALL
    
    SELECT
        t.id,
        t.title,
        t.production_year,
        t.episode_of_id,
        t.season_nr,
        t.episode_nr,
        mh.level + 1
    FROM title t
    JOIN MovieHierarchy mh ON t.episode_of_id = mh.movie_id
),
RankedMovies AS (
    SELECT
        mh.movie_id,
        mh.title,
        mh.production_year,
        mh.level,
        ROW_NUMBER() OVER (PARTITION BY mh.level ORDER BY mh.production_year DESC) AS rank,
        COUNT(*) OVER (PARTITION BY mh.level) AS total_count
    FROM MovieHierarchy mh
),
MovieDetails AS (
    SELECT
        m.movie_id,
        m.title,
        m.production_year,
        r.rank,
        r.total_count,
        COALESCE(a.name, 'Unknown') AS actor_name,
        COALESCE(c.kind, 'Unknown') AS company_type
    FROM RankedMovies r
    LEFT JOIN cast_info ci ON r.movie_id = ci.movie_id
    LEFT JOIN aka_name a ON ci.person_id = a.person_id
    LEFT JOIN movie_companies mc ON r.movie_id = mc.movie_id
    LEFT JOIN company_type c ON mc.company_type_id = c.id
)
SELECT
    md.title,
    md.production_year,
    md.level,
    md.rank,
    md.total_count,
    md.actor_name,
    md.company_type
FROM MovieDetails md
WHERE md.production_year >= 2000
ORDER BY md.level, md.rank;
