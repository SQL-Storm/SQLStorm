
WITH RankedMovies AS (
    SELECT 
        t.title,
        t.production_year,
        COUNT(c.person_id) AS cast_count,
        ROW_NUMBER() OVER(PARTITION BY t.production_year ORDER BY COUNT(c.person_id) DESC) AS rank
    FROM 
        aka_title t
    LEFT JOIN 
        cast_info c ON t.id = c.movie_id
    GROUP BY 
        t.title, t.production_year
),
TopMovies AS (
    SELECT 
        title, 
        production_year 
    FROM 
        RankedMovies 
    WHERE 
        rank <= 3
),
MovieDetails AS (
    SELECT 
        tm.title,
        tm.production_year,
        COALESCE(cn.note, 'No Company Info') AS company_note,
        ARRAY_AGG(DISTINCT k.keyword) AS keywords
    FROM 
        TopMovies tm
    LEFT JOIN 
        movie_companies mc ON tm.title = (SELECT title FROM aka_title WHERE id = mc.movie_id LIMIT 1)
    LEFT JOIN 
        company_name cn ON mc.company_id = cn.id
    LEFT JOIN 
        movie_keyword mk ON tm.production_year = mk.movie_id
    LEFT JOIN 
        keyword k ON mk.keyword_id = k.id
    LEFT JOIN 
        movie_info mi ON tm.production_year = mi.movie_id
    LEFT JOIN 
        info_type it ON mi.info_type_id = it.id
    LEFT JOIN 
        complete_cast cc ON tm.production_year = cc.movie_id
    GROUP BY 
        tm.title, tm.production_year, cn.note
)
SELECT 
    md.title,
    md.production_year,
    md.company_note,
    md.keywords,
    CASE 
        WHEN md.keywords IS NULL OR ARRAY_LENGTH(md.keywords, 1) = 0 THEN 'No Keywords'
        ELSE 'Keywords Present'
    END AS keyword_status
FROM 
    MovieDetails md
ORDER BY 
    md.production_year DESC,
    md.title;
