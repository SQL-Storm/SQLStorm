
WITH MovieDetails AS (
    SELECT 
        t.title,
        t.production_year,
        a.name AS actor_name,
        r.role AS role_name,
        mk.keyword AS movie_keyword,
        ROW_NUMBER() OVER (PARTITION BY t.id ORDER BY a.name) AS actor_order
    FROM 
        aka_title t
    JOIN 
        cast_info ci ON t.id = ci.movie_id
    JOIN 
        aka_name a ON ci.person_id = a.person_id
    JOIN 
        role_type r ON ci.role_id = r.id
    LEFT JOIN 
        movie_keyword mk ON t.id = mk.movie_id
    WHERE 
        t.production_year BETWEEN 2000 AND 2023
),

CompanyDetails AS (
    SELECT 
        mc.movie_id,
        c.name AS company_name,
        ct.kind AS company_type,
        COUNT(*) OVER (PARTITION BY mc.movie_id) AS company_count
    FROM 
        movie_companies mc
    JOIN 
        company_name c ON mc.company_id = c.id
    JOIN 
        company_type ct ON mc.company_type_id = ct.id
),

CombinedDetails AS (
    SELECT 
        md.title,
        md.production_year,
        md.actor_name,
        md.role_name,
        md.movie_keyword,
        cd.company_name,
        cd.company_type,
        cd.company_count,
        COALESCE(md.actor_order, 0) AS actor_order
    FROM 
        MovieDetails md
    FULL OUTER JOIN 
        CompanyDetails cd ON md.title = cd.movie_id
)

SELECT 
    title,
    production_year,
    STRING_AGG(DISTINCT actor_name || ' (' || role_name || ')', ', ') AS actors,
    STRING_AGG(DISTINCT company_name || ' (' || company_type || ')', ', ') AS companies,
    MAX(company_count) AS total_companies
FROM 
    CombinedDetails
WHERE 
    title IS NOT NULL
GROUP BY 
    title, production_year
HAVING 
    MAX(company_count) > 2
ORDER BY 
    production_year DESC, title;
