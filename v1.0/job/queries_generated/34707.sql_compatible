
WITH RECURSIVE RecursiveMovieCTE AS (
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        t.kind_id,
        1 AS level
    FROM 
        aka_title t 
    WHERE 
        t.production_year >= 2000

    UNION ALL

    SELECT 
        ml.linked_movie_id AS movie_id,
        at.title,
        at.production_year,
        at.kind_id,
        rct.level + 1
    FROM 
        movie_link ml
    JOIN 
        aka_title at ON ml.movie_id = at.id
    JOIN 
        RecursiveMovieCTE rct ON rct.movie_id = ml.movie_id
)

SELECT 
    r.movie_id,
    r.title,
    r.production_year,
    k.keyword,
    COALESCE(GROUP_CONCAT(DISTINCT cn.name), 'No Companies') AS companies,
    COUNT(DISTINCT ci.person_id) AS num_cast_members,
    AVG(COALESCE(ci.nr_order, 0)) AS avg_order,
    DENSE_RANK() OVER (PARTITION BY r.production_year ORDER BY r.production_year DESC) AS year_rank
FROM 
    RecursiveMovieCTE r
LEFT JOIN 
    movie_companies mc ON mc.movie_id = r.movie_id
LEFT JOIN 
    company_name cn ON cn.id = mc.company_id
LEFT JOIN 
    cast_info ci ON ci.movie_id = r.movie_id
LEFT JOIN 
    movie_keyword mk ON mk.movie_id = r.movie_id
LEFT JOIN 
    keyword k ON k.id = mk.keyword_id
WHERE 
    (r.kind_id IN (1, 2)) 
    AND r.production_year >= 2000
GROUP BY 
    r.movie_id, r.title, r.production_year, k.keyword
ORDER BY 
    r.production_year DESC, num_cast_members DESC;
