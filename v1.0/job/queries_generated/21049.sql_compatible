
WITH RecursiveFilmography AS (
    SELECT 
        a.person_id,
        a.id AS aka_id,
        t.title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY a.person_id ORDER BY t.production_year DESC) AS rn
    FROM 
        aka_name a
    JOIN 
        cast_info c ON a.person_id = c.person_id
    JOIN 
        aka_title t ON c.movie_id = t.movie_id
    WHERE 
        c.nr_order IS NOT NULL
        AND t.production_year IS NOT NULL
),
RecentMovies AS (
    SELECT 
        person_id,
        title,
        production_year,
        rn
    FROM 
        RecursiveFilmography
    WHERE 
        rn <= 5
),
ActorsWithKeywords AS (
    SELECT 
        a.person_id,
        k.keyword
    FROM 
        aka_name a
    JOIN 
        cast_info c ON a.person_id = c.person_id
    JOIN 
        movie_keyword mk ON c.movie_id = mk.movie_id
    JOIN 
        keyword k ON mk.keyword_id = k.id
)
SELECT 
    rm.person_id,
    a.name AS actor_name,
    STRING_AGG(DISTINCT rm.title, ', ' ORDER BY rm.production_year DESC) AS recent_titles,
    COUNT(DISTINCT ak.keyword) AS keyword_count,
    AVG(CASE WHEN rm.production_year > 2000 THEN 1 ELSE 0 END) AS post_2000_ratio,
    MAX(rm.production_year) AS latest_movie_year,
    MIN(NULLIF(rm.production_year, 0)) AS first_year
FROM 
    RecentMovies rm
JOIN 
    aka_name a ON rm.person_id = a.person_id
LEFT JOIN 
    ActorsWithKeywords ak ON ak.person_id = rm.person_id
GROUP BY 
    rm.person_id, a.name
HAVING 
    COUNT(DISTINCT rm.title) > 2
    AND AVG(rm.production_year) IS NOT NULL
    AND MAX(rm.production_year) IS NOT NULL
ORDER BY 
    latest_movie_year DESC, 
    keyword_count DESC;
