
WITH RECURSIVE ActorHierarchy AS (
    SELECT 
        ci.person_id,
        a.name AS actor_name,
        1 AS level
    FROM 
        cast_info ci
    JOIN 
        aka_name a ON ci.person_id = a.person_id
    WHERE 
        ci.movie_id = (SELECT id FROM aka_title WHERE title ILIKE 'The Matrix%' LIMIT 1) 
    UNION ALL
    SELECT 
        ci.person_id,
        a.name AS actor_name,
        ah.level + 1
    FROM 
        cast_info ci
    JOIN 
        aka_name a ON ci.person_id = a.person_id
    JOIN 
        ActorHierarchy ah ON ci.movie_id = (SELECT id FROM aka_title WHERE title ILIKE 'The Matrix%' LIMIT 1)
    WHERE 
        ci.person_id <> ah.person_id
),
MovieDetails AS (
    SELECT 
        at.title,
        at.production_year,
        STRING_AGG(DISTINCT a.actor_name, ', ') AS actors,
        COUNT(DISTINCT kc.keyword) AS keyword_count,
        COALESCE(SUM(CASE WHEN mc.note IS NOT NULL THEN 1 ELSE 0 END), 0) AS company_linked_count
    FROM 
        aka_title at
    LEFT JOIN 
        cast_info ci ON at.id = ci.movie_id
    LEFT JOIN 
        aka_name a ON ci.person_id = a.person_id
    LEFT JOIN 
        movie_keyword mk ON at.id = mk.movie_id
    LEFT JOIN 
        keyword kc ON mk.keyword_id = kc.id
    LEFT JOIN 
        movie_companies mc ON at.id = mc.movie_id
    WHERE 
        at.production_year >= 2000
    GROUP BY 
        at.id, at.title, at.production_year
)
SELECT 
    md.title,
    md.production_year,
    md.actors,
    md.keyword_count,
    ah.actor_name AS hierarchy_actor,
    ah.level,
    md.company_linked_count
FROM 
    MovieDetails md
LEFT JOIN 
    ActorHierarchy ah ON ah.person_id IN (SELECT ci.person_id FROM cast_info ci WHERE ci.movie_id = md.id)
ORDER BY 
    md.production_year DESC, 
    md.keyword_count DESC
LIMIT 10;
