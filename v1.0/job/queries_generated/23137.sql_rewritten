WITH RecursiveMovieCTE AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        COALESCE(k.keyword, 'No Keyword') AS movie_keyword,
        COUNT(DISTINCT cc.person_id) AS cast_count,
        RANK() OVER (PARTITION BY mt.production_year ORDER BY COUNT(DISTINCT cc.person_id) DESC) AS rank_within_year
    FROM aka_title mt
    LEFT JOIN movie_keyword mk ON mk.movie_id = mt.id
    LEFT JOIN keyword k ON k.id = mk.keyword_id
    LEFT JOIN complete_cast cc ON cc.movie_id = mt.id
    WHERE mt.kind_id IN (
        SELECT id FROM kind_type WHERE kind LIKE 'feature%'
    )
    GROUP BY mt.id, mt.title, mt.production_year, k.keyword
),

BizarreCasting AS (
    SELECT 
        ca.movie_id,
        COALESCE(an.name, 'Unknown Actor') AS actor_name,
        ROW_NUMBER() OVER (PARTITION BY ca.movie_id ORDER BY ca.nr_order) AS actor_order
    FROM cast_info ca
    LEFT JOIN aka_name an ON an.person_id = ca.person_id
),

FilteredMovies AS (
    SELECT 
        m.movie_id,
        m.title,
        m.production_year,
        m.movie_keyword,
        m.cast_count
    FROM RecursiveMovieCTE m
    WHERE m.rank_within_year <= 3 
      AND m.production_year > (
          SELECT AVG(production_year) FROM aka_title
      )
)

SELECT 
    fm.title,
    fm.production_year,
    fm.movie_keyword,
    fm.cast_count,
    b.actor_name,
    b.actor_order
FROM FilteredMovies fm
LEFT JOIN BizarreCasting b ON b.movie_id = fm.movie_id
ORDER BY fm.production_year DESC, fm.title ASC;