
WITH RECURSIVE ActorHierarchy AS (
    SELECT 
        ci.person_id,
        ARRAY[ai.name] AS full_name,
        1 AS level,
        ci.movie_id
    FROM 
        cast_info ci
    JOIN
        aka_name ai ON ci.person_id = ai.person_id
    WHERE 
        ci.nr_order = 1
    
    UNION ALL
    
    SELECT 
        ci.person_id,
        ah.full_name || ARRAY[ai.name],
        ah.level + 1,
        ci.movie_id
    FROM 
        cast_info ci
    JOIN 
        ActorHierarchy ah ON ci.movie_id = ah.movie_id
    JOIN
        aka_name ai ON ci.person_id = ai.person_id
    WHERE 
        ci.nr_order > 1
),
MovieDetails AS (
    SELECT 
        t.title,
        t.production_year,
        k.keyword,
        ARRAY_AGG(DISTINCT c.kind) AS company_types,
        ROW_NUMBER() OVER (PARTITION BY t.id ORDER BY t.production_year DESC) AS rn,
        t.id
    FROM 
        title t
    LEFT JOIN 
        movie_keyword mk ON t.id = mk.movie_id
    LEFT JOIN 
        keyword k ON mk.keyword_id = k.id
    LEFT JOIN 
        movie_companies mc ON t.id = mc.movie_id
    LEFT JOIN 
        company_type c ON mc.company_type_id = c.id
    GROUP BY 
        t.id, t.title, t.production_year, k.keyword
)
SELECT
    mh.full_name AS actor_full_name,
    md.title AS movie_title,
    md.production_year,
    md.keyword AS associated_keyword,
    CASE 
        WHEN md.company_types IS NULL THEN 'Independent' 
        ELSE array_to_string(md.company_types, ', ') 
    END AS production_companies
FROM 
    ActorHierarchy mh
JOIN 
    cast_info ci ON mh.person_id = ci.person_id
JOIN 
    MovieDetails md ON ci.movie_id = md.id
WHERE 
    md.production_year >= 2000
    AND EXISTS (
        SELECT 1
        FROM movie_info mi 
        WHERE 
            mi.movie_id = md.id 
            AND mi.info_type_id IN (SELECT id FROM info_type WHERE info = 'BoxOffice')
            AND mi.info > 1000000
    )
ORDER BY 
    actor_full_name, movie_title;
