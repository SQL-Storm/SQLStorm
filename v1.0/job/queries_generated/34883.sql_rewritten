WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        1 AS depth
    FROM 
        aka_title mt
    WHERE 
        mt.production_year >= 2000

    UNION ALL

    SELECT 
        ml.linked_movie_id AS movie_id,
        at.title,
        at.production_year,
        mh.depth + 1
    FROM 
        movie_link ml
    JOIN 
        aka_title at ON ml.linked_movie_id = at.id
    JOIN 
        MovieHierarchy mh ON ml.movie_id = mh.movie_id
)

SELECT 
    a.id AS person_id,
    a.name,
    COUNT(DISTINCT c.movie_id) AS movie_count,
    SUM(CASE WHEN c.note IS NOT NULL THEN 1 ELSE 0 END) AS has_notes,
    ARRAY_AGG(DISTINCT CONCAT(mh.title, ' (', mh.production_year, ')')) AS linked_movies,
    RANK() OVER (PARTITION BY a.id ORDER BY COUNT(DISTINCT c.movie_id) DESC) AS actor_rank
FROM 
    aka_name a
LEFT JOIN 
    cast_info c ON a.person_id = c.person_id
LEFT JOIN 
    MovieHierarchy mh ON c.movie_id = mh.movie_id
GROUP BY 
    a.id, a.name
HAVING 
    COUNT(DISTINCT c.movie_id) > 5
ORDER BY 
    actor_rank, movie_count DESC;