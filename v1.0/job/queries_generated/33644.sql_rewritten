WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        0 AS level
    FROM 
        aka_title mt
    WHERE 
        mt.kind_id = 1  

    UNION ALL

    SELECT 
        ml.linked_movie_id AS movie_id,
        at.title,
        at.production_year,
        mh.level + 1
    FROM 
        movie_link ml
    JOIN 
        aka_title at ON ml.linked_movie_id = at.id
    JOIN 
        movie_hierarchy mh ON ml.movie_id = mh.movie_id
)

SELECT 
    COALESCE(ak.name, 'Unknown') AS actor_name,
    m.title AS movie_title,
    COUNT(*) FILTER (WHERE ci.role_id IS NOT NULL) AS num_roles,
    STRING_AGG(DISTINCT k.keyword, ', ') AS keywords,
    AVG(mi.info_length) AS avg_info_length,
    mh.level AS movie_level
FROM 
    movie_hierarchy mh
JOIN 
    complete_cast cc ON mh.movie_id = cc.movie_id
JOIN 
    cast_info ci ON cc.subject_id = ci.person_id
LEFT JOIN 
    aka_name ak ON ci.person_id = ak.person_id
LEFT JOIN 
    movie_keyword mk ON mh.movie_id = mk.movie_id
LEFT JOIN 
    keyword k ON mk.keyword_id = k.id
LEFT JOIN 
    movie_info mi ON mh.movie_id = mi.movie_id
GROUP BY 
    ak.name, m.title, mh.level
ORDER BY 
    movie_level DESC, num_roles DESC
FETCH FIRST 10 ROWS ONLY;