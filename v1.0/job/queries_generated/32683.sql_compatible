
WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        1 AS depth
    FROM 
        aka_title mt
    WHERE 
        mt.production_year >= 2000

    UNION ALL

    SELECT 
        ml.linked_movie_id,
        m.title,
        m.production_year,
        mh.depth + 1
    FROM 
        MovieHierarchy mh
    JOIN 
        movie_link ml ON mh.movie_id = ml.movie_id
    JOIN 
        aka_title m ON ml.linked_movie_id = m.id
)

SELECT 
    ak.name AS actor_name,
    ak.id AS actor_id,
    a.title AS movie_title,
    mh.depth AS movie_depth,
    COUNT(DISTINCT mk.keyword) AS total_keywords,
    STRING_AGG(DISTINCT k.keyword, ', ') AS keywords_list,
    AVG(mi.info_type_id) AS avg_info_type
FROM 
    cast_info ci
JOIN 
    aka_name ak ON ci.person_id = ak.person_id
JOIN 
    aka_title a ON ci.movie_id = a.id
LEFT JOIN 
    movie_keyword mk ON a.id = mk.movie_id
LEFT JOIN 
    keyword k ON mk.keyword_id = k.id
LEFT JOIN 
    MovieHierarchy mh ON a.id = mh.movie_id
LEFT JOIN 
    movie_info mi ON a.id = mi.movie_id
WHERE 
    ak.name IS NOT NULL
    AND a.production_year > 2010
    AND (ci.note IS NULL OR ci.note LIKE '%lead%')
    AND mh.depth <= 3
GROUP BY 
    ak.name, ak.id, a.title, mh.depth
HAVING 
    COUNT(DISTINCT mk.keyword) > 0
ORDER BY 
    total_keywords DESC, a.title ASC;
