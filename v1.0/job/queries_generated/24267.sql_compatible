
WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        1 AS level
    FROM 
        aka_title mt
    WHERE 
        mt.production_year >= 2000 

    UNION ALL

    SELECT 
        ml.linked_movie_id,
        at.title,
        at.production_year,
        mh.level + 1
    FROM 
        MovieHierarchy mh
    JOIN 
        movie_link ml ON mh.movie_id = ml.movie_id
    JOIN 
        aka_title at ON ml.linked_movie_id = at.id
    WHERE 
        at.production_year < 2000 AND mh.level < 5
),

NamedActors AS (
    SELECT 
        ak.id,
        ak.name,
        COUNT(DISTINCT ci.movie_id) AS movie_count,
        STRING_AGG(DISTINCT at.title, ', ' ORDER BY at.title) AS titles
    FROM 
        aka_name ak
    JOIN 
        cast_info ci ON ak.person_id = ci.person_id
    JOIN 
        aka_title at ON ci.movie_id = at.id
    WHERE 
        ak.name IS NOT NULL 
    GROUP BY 
        ak.id, ak.name
    HAVING 
        COUNT(DISTINCT ci.movie_id) > 3
)

SELECT 
    mh.movie_id,
    mh.title,
    mh.production_year,
    na.name AS actor_name,
    na.movie_count,
    na.titles,
    COUNT(DISTINCT mc.company_id) AS production_company_count,
    COUNT(DISTINCT mi.info_type_id) AS info_type_count,
    ROUND(AVG(CASE WHEN ci.note IS NOT NULL THEN 1 ELSE 0 END), 2) AS note_presence_ratio
FROM 
    MovieHierarchy mh
LEFT JOIN 
    complete_cast cc ON mh.movie_id = cc.movie_id
LEFT JOIN 
    movie_companies mc ON mh.movie_id = mc.movie_id
LEFT JOIN 
    NamedActors na ON cc.subject_id = na.id
LEFT JOIN 
    movie_info mi ON mh.movie_id = mi.movie_id
LEFT JOIN 
    aka_title at ON mh.movie_id = at.id
WHERE 
    (mh.production_year > 2000 OR mh.production_year IS NULL)
    AND (na.movie_count IS NOT NULL AND na.movie_count >= 2)
GROUP BY 
    mh.movie_id, mh.title, mh.production_year, na.name, na.movie_count, na.titles
ORDER BY 
    mh.production_year DESC, na.movie_count DESC, mh.title
LIMIT 50;
