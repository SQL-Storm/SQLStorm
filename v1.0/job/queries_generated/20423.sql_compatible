
WITH RecursiveMovies AS (
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        COALESCE(mk.keyword, 'No Keywords') AS keyword,
        ROW_NUMBER() OVER (PARTITION BY t.id ORDER BY t.production_year DESC) AS rn
    FROM 
        aka_title t
    LEFT JOIN 
        movie_keyword mk ON t.id = mk.movie_id
    WHERE 
        t.production_year IS NOT NULL
        AND t.kind_id IN (SELECT id FROM kind_type WHERE kind LIKE '%Drama%')
),

ActorDetails AS (
    SELECT 
        a.id AS actor_id,
        a.name,
        p.info AS person_info,
        ROW_NUMBER() OVER (PARTITION BY a.id ORDER BY p.info_type_id) AS rn
    FROM 
        aka_name a
    JOIN 
        person_info p ON a.person_id = p.person_id
    WHERE 
        p.info_type_id IN (SELECT id FROM info_type WHERE info LIKE '%awards%')
),

MovieCompaniesInfo AS (
    SELECT 
        mc.movie_id,
        c.name AS company_name,
        ct.kind AS company_type,
        COALESCE(SUM(cast_info.nr_order), 0) AS total_cast
    FROM 
        movie_companies mc
    JOIN 
        company_name c ON mc.company_id = c.id
    JOIN 
        company_type ct ON mc.company_type_id = ct.id
    LEFT JOIN 
        cast_info ON mc.movie_id = cast_info.movie_id
    GROUP BY 
        mc.movie_id, c.name, ct.kind
)

SELECT 
    rm.movie_id,
    rm.title,
    rm.production_year,
    rm.keyword,
    ad.name AS actor_name,
    ad.person_info,
    COALESCE(mc.total_cast, 0) AS company_cast_count
FROM 
    RecursiveMovies rm
LEFT JOIN 
    ActorDetails ad ON rm.movie_id = (SELECT ci.movie_id FROM cast_info ci WHERE ci.person_role_id = ad.actor_id LIMIT 1)
LEFT JOIN 
    MovieCompaniesInfo mc ON rm.movie_id = mc.movie_id
WHERE 
    rm.rn = 1 
    AND (ad.rn IS NULL OR ad.rn = 1)
ORDER BY 
    rm.production_year DESC, 
    rm.movie_id DESC
LIMIT 50;
