
WITH MovieDetails AS (
    SELECT
        t.id AS movie_id,
        t.title,
        t.production_year,
        k.keyword,
        ROW_NUMBER() OVER (PARTITION BY t.id ORDER BY k.keyword) AS keyword_rank
    FROM
        aka_title t
    LEFT JOIN movie_keyword mk ON t.id = mk.movie_id
    LEFT JOIN keyword k ON mk.keyword_id = k.id
    WHERE
        t.production_year >= 2000
),
CastDetails AS (
    SELECT
        c.movie_id,
        a.name AS actor_name,
        COUNT(DISTINCT c.person_id) AS total_actors
    FROM
        cast_info c
    JOIN aka_name a ON c.person_id = a.person_id
    GROUP BY
        c.movie_id, a.name
),
CompanyDetails AS (
    SELECT
        mc.movie_id,
        COALESCE(cn.name, 'Unknown') AS company_name,
        ct.kind AS company_type
    FROM
        movie_companies mc
    JOIN company_name cn ON mc.company_id = cn.id
    LEFT JOIN company_type ct ON mc.company_type_id = ct.id
),
MovieKeywords AS (
    SELECT
        movie_id,
        STRING_AGG(keyword, ', ') AS keywords
    FROM
        MovieDetails
    WHERE
        keyword_rank <= 3
    GROUP BY
        movie_id
)
SELECT
    m.id AS movie_id,
    m.title,
    m.production_year,
    COALESCE(cd.total_actors, 0) AS total_actors,
    COALESCE(md.keywords, 'No keywords') AS keywords,
    cc.company_name,
    cc.company_type
FROM
    aka_title m
LEFT JOIN CastDetails cd ON m.id = cd.movie_id
LEFT JOIN CompanyDetails cc ON m.id = cc.movie_id
LEFT JOIN MovieKeywords md ON m.id = md.movie_id
WHERE
    m.production_year IS NOT NULL
    AND (m.kind_id IN (1, 2, 3) OR m.production_year BETWEEN 2010 AND 2020)
ORDER BY
    m.production_year DESC,
    m.title ASC;
