
WITH RECURSIVE movie_hierarchy AS (
    SELECT
        mt.id AS movie_id,
        mt.title AS movie_title,
        mt.production_year,
        1 AS level
    FROM
        aka_title mt
    WHERE
        mt.production_year >= 2000

    UNION ALL

    SELECT
        ml.linked_movie_id,
        at.title,
        at.production_year,
        mh.level + 1
    FROM
        movie_link ml
    JOIN
        aka_title at ON at.id = ml.linked_movie_id
    JOIN
        movie_hierarchy mh ON mh.movie_id = ml.movie_id
    WHERE
        mh.level < 3 
)
SELECT
    ak.name AS actor_name,
    mt.movie_title,
    mt.production_year,
    COUNT(DISTINCT mk.keyword) AS keyword_count,
    COALESCE(MAX(mki.info), 'No Info Available') AS movie_info,
    ARRAY_AGG(DISTINCT c.kind) AS company_types
FROM
    cast_info ci
JOIN
    aka_name ak ON ak.person_id = ci.person_id
JOIN
    movie_companies mc ON mc.movie_id = ci.movie_id
JOIN
    company_type c ON c.id = mc.company_type_id
JOIN
    movie_keyword mk ON mk.movie_id = ci.movie_id
JOIN
    movie_hierarchy mt ON mt.movie_id = ci.movie_id
LEFT JOIN
    movie_info mki ON mki.movie_id = ci.movie_id AND mki.info_type_id = (
        SELECT id FROM info_type WHERE info = 'Budget'
    )
GROUP BY
    ak.name,
    mt.movie_title,
    mt.production_year
HAVING
    COUNT(DISTINCT mk.keyword) > 3
ORDER BY
    mt.production_year DESC,
    ak.name;
