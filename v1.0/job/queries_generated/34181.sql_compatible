
WITH RECURSIVE MoviesCTE AS (
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        t.kind_id,
        1 AS depth
    FROM 
        aka_title t
    WHERE 
        t.production_year >= 2000
    UNION ALL
    SELECT 
        t.id,
        t.title,
        t.production_year,
        t.kind_id,
        m.depth + 1
    FROM 
        aka_title t
    INNER JOIN MoviesCTE m ON t.episode_of_id = m.movie_id
), 
AggregatedMovies AS (
    SELECT 
        m.movie_id,
        m.title,
        m.production_year,
        COUNT(DISTINCT mc.company_id) AS company_count,
        AVG(ti.info_type_id) AS average_info_type
    FROM 
        MoviesCTE m
    LEFT JOIN 
        movie_companies mc ON m.movie_id = mc.movie_id
    LEFT JOIN 
        movie_info mi ON m.movie_id = mi.movie_id
    LEFT JOIN 
        info_type ti ON mi.info_type_id = ti.id
    GROUP BY 
        m.movie_id, m.title, m.production_year
),
RankedMovies AS (
    SELECT 
        am.movie_id,
        am.title,
        am.production_year,
        am.company_count,
        am.average_info_type,
        RANK() OVER (PARTITION BY am.production_year ORDER BY am.company_count DESC) AS rank_by_company
    FROM 
        AggregatedMovies am
)
SELECT 
    ak.name AS actor_name,
    am.title AS movie_title,
    am.production_year,
    am.company_count,
    am.average_info_type,
    rm.rank_by_company
FROM 
    cast_info ci
JOIN 
    aka_name ak ON ci.person_id = ak.person_id
JOIN 
    RankedMovies am ON ci.movie_id = am.movie_id
LEFT JOIN 
    movie_info mi ON am.movie_id = mi.movie_id
WHERE 
    ak.name IS NOT NULL 
    AND am.company_count > 2 
    AND (mi.note IS NULL OR mi.note NOT LIKE '%deleted%')
ORDER BY 
    am.production_year DESC,
    rm.rank_by_company ASC;
