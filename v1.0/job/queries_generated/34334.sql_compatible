
WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        1 AS level
    FROM 
        aka_title mt
    WHERE 
        mt.kind_id = (SELECT id FROM kind_type WHERE kind = 'movie')

    UNION ALL

    SELECT 
        ml.linked_movie_id,
        mt.title,
        mt.production_year,
        mh.level + 1
    FROM 
        movie_link ml
    JOIN 
        aka_title mt ON ml.linked_movie_id = mt.id
    JOIN 
        MovieHierarchy mh ON ml.movie_id = mh.movie_id
)
SELECT 
    ak.name AS actor_name,
    at.title AS movie_title,
    mh.level AS hierarchy_level,
    COUNT(DISTINCT mw.keyword_id) AS keyword_count,
    COUNT(DISTINCT mc.company_id) AS company_count,
    ROW_NUMBER() OVER (PARTITION BY ak.name ORDER BY mh.level ASC) AS actor_rank
FROM 
    cast_info ci
JOIN 
    aka_name ak ON ci.person_id = ak.person_id
JOIN 
    aka_title at ON ci.movie_id = at.id
LEFT JOIN 
    movie_keyword mw ON at.id = mw.movie_id
LEFT JOIN 
    movie_companies mc ON at.id = mc.movie_id
LEFT JOIN 
    MovieHierarchy mh ON at.id = mh.movie_id
WHERE 
    ak.name IS NOT NULL
    AND at.production_year BETWEEN 2000 AND 2023
    AND ak.name NOT LIKE '%Unknown%'
GROUP BY 
    ak.name, at.title, mh.level
HAVING 
    COUNT(DISTINCT mw.keyword_id) > 2
ORDER BY 
    mh.level, actor_rank DESC;
