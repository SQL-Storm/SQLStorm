
WITH RankedTitles AS (
    SELECT 
        t.id AS title_id,
        t.title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.production_year DESC) AS year_rank
    FROM 
        aka_title t
    WHERE 
        t.production_year IS NOT NULL
),
ActorMovies AS (
    SELECT 
        c.movie_id,
        a.name AS actor_name,
        COUNT(*) AS role_count
    FROM 
        cast_info c
    JOIN 
        aka_name a ON c.person_id = a.person_id
    GROUP BY 
        c.movie_id, a.name
),
HighProfileActors AS (
    SELECT 
        actor_name
    FROM 
        ActorMovies
    WHERE 
        role_count > 2
),
MoviesWithActors AS (
    SELECT 
        t.title,
        t.production_year,
        a.actor_name
    FROM 
        RankedTitles t
    LEFT JOIN 
        cast_info c ON t.title_id = c.movie_id
    LEFT JOIN 
        aka_name a ON c.person_id = a.person_id
)

SELECT 
    m.title AS movie_title,
    m.production_year,
    COALESCE(m.actor_name, 'Unknown Actor') AS actor_name,
    CASE 
        WHEN m.production_year < 2000 THEN 'Classic'
        WHEN m.production_year < 2010 THEN 'Modern'
        ELSE 'Recent'
    END AS era,
    COUNT(DISTINCT k.keyword) AS keyword_count
FROM 
    MoviesWithActors m
LEFT JOIN 
    movie_keyword mk ON m.title_id = mk.movie_id
LEFT JOIN 
    keyword k ON mk.keyword_id = k.id
WHERE 
    m.actor_name IN (SELECT actor_name FROM HighProfileActors)
GROUP BY 
    m.title, m.production_year, m.actor_name
HAVING 
    COUNT(DISTINCT k.keyword) > 1
ORDER BY 
    m.production_year DESC, m.title;
