WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        m.id AS movie_id,
        m.title,
        m.production_year,
        1 AS level
    FROM 
        aka_title m
    WHERE 
        m.kind_id = 1 

    UNION ALL

    SELECT 
        m.id AS movie_id,
        m.title,
        m.production_year,
        mh.level + 1
    FROM 
        movie_link ml
    JOIN 
        movie_hierarchy mh ON ml.movie_id = mh.movie_id
    JOIN 
        aka_title m ON ml.linked_movie_id = m.id
),
cast_with_roles AS (
    SELECT 
        a.name AS actor_name,
        m.title AS movie_title,
        r.role AS role,
        ROW_NUMBER() OVER (PARTITION BY a.person_id ORDER BY m.production_year DESC) AS rn
    FROM 
        cast_info c
    JOIN 
        aka_name a ON c.person_id = a.person_id
    JOIN 
        aka_title m ON c.movie_id = m.id
    LEFT JOIN 
        role_type r ON c.role_id = r.id
    WHERE 
        m.production_year >= 2000 AND m.production_year <= EXTRACT(YEAR FROM cast('2024-10-01' as date))
)
SELECT 
    mh.title AS linked_movie,
    mh.production_year AS linked_year,
    COALESCE(actors.actor_name, 'Unknown Actor') AS actor_name,
    COALESCE(roles.role, 'Unknown Role') AS role,
    COUNT(DISTINCT fields.linked_movie_id) AS total_linked_movies
FROM 
    movie_hierarchy mh
LEFT JOIN 
    movie_link ml ON ml.movie_id = mh.movie_id
LEFT JOIN 
    cast_with_roles actors ON ml.linked_movie_id = actors.movie_title
LEFT JOIN 
    (SELECT DISTINCT c.movie_id, r.role
     FROM cast_info c
     JOIN role_type r ON c.role_id = r.id) roles ON actors.movie_title = roles.movie_id
GROUP BY 
    mh.title, mh.production_year, actors.actor_name, roles.role
HAVING 
    COUNT(DISTINCT fields.linked_movie_id) > 1 
ORDER BY 
    mh.production_year DESC, linked_movie;