
WITH RankedMovies AS (
    SELECT 
        a.title,
        a.production_year,
        COUNT(c.person_id) AS cast_count,
        RANK() OVER (PARTITION BY a.production_year ORDER BY COUNT(c.person_id) DESC) AS rank_per_year
    FROM 
        aka_title a
    LEFT JOIN 
        cast_info c ON a.id = c.movie_id
    WHERE 
        a.kind_id IN (SELECT id FROM kind_type WHERE kind = 'movie')
    GROUP BY 
        a.title, a.production_year
),
TopMovies AS (
    SELECT 
        title,
        production_year
    FROM 
        RankedMovies
    WHERE 
        rank_per_year <= 5
),
MovieDetails AS (
    SELECT 
        t.title,
        mm.name AS main_actor,
        STRING_AGG(DISTINCT kw.keyword, ', ') AS keywords,
        COALESCE(mi.info, 'No additional info') AS additional_info
    FROM 
        TopMovies t
    LEFT JOIN 
        complete_cast cc ON t.title = cc.title
    LEFT JOIN 
        cast_info ci ON ci.movie_id = cc.movie_id
    LEFT JOIN 
        aka_name an ON an.person_id = ci.person_id
    LEFT JOIN 
        movie_keyword mk ON mk.movie_id = cc.movie_id
    LEFT JOIN 
        keyword kw ON kw.id = mk.keyword_id
    LEFT JOIN 
        movie_info mi ON mi.movie_id = cc.movie_id AND mi.info_type_id = (SELECT id FROM info_type WHERE info = 'note')
    LEFT JOIN 
        name mm ON mm.id = ci.person_id
    GROUP BY 
        t.title, mm.name, mi.info
)
SELECT 
    title,
    production_year,
    main_actor,
    keywords,
    additional_info
FROM 
    MovieDetails
WHERE 
    main_actor IS NOT NULL
ORDER BY 
    production_year DESC, title;
