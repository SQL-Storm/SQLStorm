
WITH RECURSIVE ActorHierarchy AS (
    SELECT 
        c.id AS cast_id,
        c.person_id,
        c.movie_id,
        1 AS level
    FROM 
        cast_info c
    WHERE 
        c.role_id = (SELECT id FROM role_type WHERE role = 'Lead Actor')
    
    UNION ALL
    
    SELECT 
        c.id AS cast_id,
        c.person_id,
        c.movie_id,
        ah.level + 1
    FROM 
        cast_info c
    JOIN 
        ActorHierarchy ah ON c.movie_id = ah.movie_id
    WHERE 
        c.role_id IN (SELECT id FROM role_type WHERE role IN ('Supporting Actor', 'Cameo'))
)

SELECT 
    a.name AS actor_name,
    t.title AS movie_title,
    t.production_year,
    SUM(CASE WHEN ah.level = 1 THEN 1 ELSE 0 END) AS lead_actor_count,
    COUNT(DISTINCT c.person_id) AS total_cast_count,
    COALESCE(SUM(mk.keyword_id), 0) AS keyword_count,
    STRING_AGG(DISTINCT mk.keyword, '; ') AS keywords,
    COUNT(DISTINCT COALESCE(mc.company_id, -1)) AS total_companies,
    ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY COUNT(c.person_id) DESC) AS rank_within_year
FROM 
    title t
LEFT JOIN 
    complete_cast cc ON t.id = cc.movie_id
LEFT JOIN 
    cast_info c ON cc.subject_id = c.id
LEFT JOIN 
    aka_name a ON c.person_id = a.person_id
LEFT JOIN 
    movie_keyword mk ON t.id = mk.movie_id
LEFT JOIN 
    movie_companies mc ON t.id = mc.movie_id
LEFT JOIN 
    ActorHierarchy ah ON c.id = ah.cast_id
WHERE 
    t.production_year IS NOT NULL AND
    t.title IS NOT NULL AND
    t.production_year > 2000
GROUP BY 
    a.name, t.title, t.production_year
HAVING 
    COUNT(DISTINCT c.person_id) > 5
ORDER BY 
    t.production_year DESC, lead_actor_count DESC;
