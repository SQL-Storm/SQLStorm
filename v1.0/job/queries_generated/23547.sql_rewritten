WITH ranked_movies AS (
    SELECT 
        m.id AS movie_id,
        m.title AS movie_title,
        m.production_year,
        COUNT(DISTINCT c.person_id) OVER (PARTITION BY m.id) AS total_cast,
        COALESCE(MAX(CASE WHEN k.keyword = 'Award' THEN 1 END), 0) AS has_award,
        ROW_NUMBER() OVER (PARTITION BY m.production_year ORDER BY COUNT(DISTINCT c.person_id) DESC) AS year_rank
    FROM 
        aka_title m
    LEFT JOIN 
        movie_companies mc ON m.id = mc.movie_id
    LEFT JOIN 
        company_name cn ON mc.company_id = cn.id
    LEFT JOIN 
        cast_info c ON c.movie_id = m.id
    LEFT JOIN 
        movie_keyword mk ON m.id = mk.movie_id
    LEFT JOIN 
        keyword k ON k.id = mk.keyword_id
    WHERE 
        m.production_year IS NOT NULL
    GROUP BY 
        m.id, m.title, m.production_year
),
award_movies AS (
    SELECT 
        movie_id,
        movie_title,
        production_year,
        total_cast,
        has_award,
        year_rank
    FROM 
        ranked_movies
    WHERE 
        has_award = 1
),
top_years AS (
    SELECT 
        production_year,
        MIN(year_rank) AS min_rank
    FROM 
        award_movies
    GROUP BY 
        production_year
)
SELECT 
    a.movie_id,
    a.movie_title,
    a.production_year,
    a.total_cast,
    CASE 
        WHEN t.min_rank IS NOT NULL THEN 'Top Movie'
        ELSE 'Not Top Movie'
    END AS movie_status
FROM 
    award_movies a
LEFT JOIN 
    top_years t ON a.production_year = t.production_year AND a.year_rank = t.min_rank
WHERE 
    a.total_cast > 5 OR a.has_award = 1
ORDER BY 
    a.production_year DESC, a.total_cast DESC;