
WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        m.id AS movie_id,
        m.title,
        m.production_year,
        1 AS level
    FROM 
        aka_title m
    WHERE 
        m.kind_id = (SELECT id FROM kind_type WHERE kind = 'movie')

    UNION ALL

    SELECT 
        m.id,
        m.title,
        m.production_year,
        mh.level + 1
    FROM 
        movie_link ml
    JOIN 
        aka_title m ON ml.linked_movie_id = m.id
    JOIN 
        MovieHierarchy mh ON ml.movie_id = mh.movie_id
)
SELECT 
    DISTINCT 
    m.title AS Movie_Title,
    m.production_year AS Production_Year,
    ak.name AS Actor_Name,
    ct.kind AS Cast_Type,
    STRING_AGG(DISTINCT kw.keyword, ', ') AS Keywords,
    COUNT(DISTINCT ml.linked_movie_id) AS Linked_Movies_Count,
    (SELECT COUNT(*) FROM complete_cast cc WHERE cc.movie_id = m.movie_id) AS Total_Cast,
    DENSE_RANK() OVER (PARTITION BY m.movie_id ORDER BY m.production_year DESC) AS rank_within_year,
    COALESCE((SELECT COUNT(DISTINCT actor_id) 
              FROM cast_info ci 
              WHERE ci.movie_id = m.movie_id 
              AND ci.person_role_id IS NOT NULL), 0) AS Non_Null_Cast_Roles
FROM 
    MovieHierarchy m
LEFT JOIN 
    cast_info ci ON m.movie_id = ci.movie_id
LEFT JOIN 
    aka_name ak ON ci.person_id = ak.person_id
LEFT JOIN 
    comp_cast_type ct ON ci.person_role_id = ct.id
LEFT JOIN 
    movie_keyword mw ON m.movie_id = mw.movie_id
LEFT JOIN 
    keyword kw ON mw.keyword_id = kw.id
LEFT JOIN 
    movie_link ml ON m.movie_id = ml.movie_id
WHERE 
    m.production_year IS NOT NULL
    AND ak.name IS NOT NULL
GROUP BY 
    m.movie_id, m.title, m.production_year, ak.name, ct.kind
ORDER BY 
    m.production_year DESC, Movie_Title;
