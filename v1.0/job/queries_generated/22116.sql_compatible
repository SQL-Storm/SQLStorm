
WITH RankedTitles AS (
    SELECT 
        t.title AS movie_title,
        t.production_year,
        RANK() OVER (PARTITION BY t.production_year ORDER BY t.title) AS title_rank,
        kt.keyword AS keyword,
        ARRAY_AGG(DISTINCT ci.person_id) AS cast_members
    FROM 
        aka_title AS t
    LEFT JOIN 
        movie_keyword AS mk ON mk.movie_id = t.id
    LEFT JOIN 
        keyword AS kt ON kt.id = mk.keyword_id
    LEFT JOIN 
        complete_cast AS cc ON cc.movie_id = t.id
    LEFT JOIN 
        cast_info AS ci ON ci.movie_id = t.id
    GROUP BY 
        t.id, t.title, t.production_year, kt.keyword
),
TopRankedTitles AS (
    SELECT 
        rt.movie_title,
        rt.production_year
    FROM 
        RankedTitles rt
    WHERE 
        rt.title_rank = 1
)

SELECT 
    COALESCE(a.name, c.name) AS actor_name,
    tt.movie_title,
    tt.production_year,
    COALESCE(CAST(ARRAY_LENGTH(cast_members) AS INTEGER), 'None') AS total_cast_members,
    CHAR_LENGTH(tt.movie_title) AS title_length,
    CASE 
        WHEN tt.production_year IS NOT NULL AND tt.production_year != 0 THEN 'Valid Year'
        ELSE 'Invalid Year'
    END AS year_status,
    STRING_AGG(DISTINCT kt.keyword, ', ') AS associated_keywords
FROM 
    TopRankedTitles tt
LEFT JOIN 
    cast_info ci ON ci.movie_id IN (SELECT id FROM aka_title WHERE title = tt.movie_title)
LEFT JOIN 
    aka_name a ON a.person_id = ci.person_id
LEFT JOIN 
    char_name c ON c.imdb_index = NULLIF(a.imdb_index, '')
LEFT JOIN 
    movie_keyword mk ON mk.movie_id = (SELECT id FROM aka_title WHERE title = tt.movie_title)
LEFT JOIN 
    keyword kt ON kt.id = mk.keyword_id
WHERE 
    tt.production_year IS NOT NULL
GROUP BY 
    a.name, c.name, tt.movie_title, tt.production_year
HAVING 
    COUNT(DISTINCT ci.person_id) > 1 OR SUM(CASE WHEN ci.note IS NOT NULL THEN 1 ELSE 0 END) > 0
ORDER BY 
    tt.production_year DESC, title_length DESC
LIMIT 50 OFFSET 0;
