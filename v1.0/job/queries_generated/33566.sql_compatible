
WITH RECURSIVE movie_hierarchy AS (
    SELECT mt.id AS movie_id, mt.title, mt.production_year, 0 AS level
    FROM aka_title mt
    WHERE mt.kind_id IS NULL OR mt.episode_of_id IS NULL
    
    UNION ALL
    
    SELECT at.id AS movie_id, at.title, at.production_year, mh.level + 1
    FROM aka_title at
    JOIN movie_link ml ON at.id = ml.linked_movie_id
    JOIN movie_hierarchy mh ON ml.movie_id = mh.movie_id
)
SELECT 
    m.movie_id, 
    m.title AS movie_title, 
    m.production_year, 
    (SELECT COUNT(*) FROM cast_info ci WHERE ci.movie_id = m.movie_id) AS num_cast_members,
    STRING_AGG(DISTINCT ak.name, ', ') AS actors, 
    COUNT(DISTINCT mk.keyword) AS num_keywords,
    COUNT(DISTINCT mc.company_id) AS num_production_companies,
    FIRST_VALUE(cp.kind) OVER (PARTITION BY m.movie_id ORDER BY cp.kind) AS primary_company_type,
    CASE 
        WHEN m.production_year IS NULL THEN 'Year Unknown'
        WHEN m.production_year < 2000 THEN 'Before 2000'
        ELSE 'After 2000'
    END AS production_period
FROM movie_hierarchy m
LEFT JOIN cast_info ci ON m.movie_id = ci.movie_id
LEFT JOIN aka_name ak ON ci.person_id = ak.person_id
LEFT JOIN movie_keyword mk ON m.movie_id = mk.movie_id
LEFT JOIN movie_companies mc ON m.movie_id = mc.movie_id
LEFT JOIN company_type cp ON mc.company_type_id = cp.id
WHERE m.production_year IS NOT NULL
GROUP BY m.movie_id, m.title, m.production_year
ORDER BY m.production_year DESC;
