WITH RECURSIVE MovieHierarchy AS (
    
    SELECT
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        0 AS depth
    FROM
        aka_title mt

    UNION ALL

    
    SELECT
        ml.linked_movie_id AS movie_id,
        mt.title,
        mt.production_year,
        mh.depth + 1
    FROM
        MovieHierarchy mh
    JOIN
        movie_link ml ON mh.movie_id = ml.movie_id
    JOIN
        aka_title mt ON ml.linked_movie_id = mt.id
)

SELECT 
    ak.name AS actor_name,
    mt.title AS movie_title,
    mt.production_year,
    MAX(mh.depth) AS max_link_depth,
    COUNT(DISTINCT mc.company_id) AS production_company_count,
    STRING_AGG(DISTINCT k.keyword, ', ') FILTER (WHERE k.keyword IS NOT NULL) AS keywords,
    COUNT(DISTINCT ci.person_role_id) AS unique_roles
FROM 
    movie_companies mc
JOIN 
    aka_title mt ON mc.movie_id = mt.id
JOIN 
    cast_info ci ON ci.movie_id = mt.id
JOIN 
    aka_name ak ON ci.person_id = ak.person_id
LEFT JOIN 
    movie_keyword mk ON mk.movie_id = mt.id
LEFT JOIN 
    keyword k ON mk.keyword_id = k.id
JOIN 
    MovieHierarchy mh ON mt.id = mh.movie_id
WHERE 
    mt.production_year >= 2000
    AND ak.name IS NOT NULL
GROUP BY 
    ak.name, mt.title, mt.production_year
ORDER BY 
    max_link_depth DESC, production_company_count DESC;