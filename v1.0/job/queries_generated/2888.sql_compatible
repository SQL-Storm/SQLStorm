
WITH RankedMovies AS (
    SELECT 
        t.title, 
        t.production_year,
        COUNT(ci.person_id) AS cast_count,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY COUNT(ci.person_id) DESC) AS rank
    FROM 
        aka_title t
    LEFT JOIN 
        cast_info ci ON t.movie_id = ci.movie_id
    GROUP BY 
        t.title, t.production_year
),
TopMovies AS (
    SELECT 
        title, 
        production_year 
    FROM 
        RankedMovies 
    WHERE 
        rank <= 5
),
MovieKeywords AS (
    SELECT 
        mk.movie_id, 
        STRING_AGG(k.keyword, ', ') AS keywords
    FROM 
        movie_keyword mk
    JOIN 
        keyword k ON mk.keyword_id = k.id
    GROUP BY 
        mk.movie_id
)
SELECT 
    tm.title,
    tm.production_year,
    COALESCE(mk.keywords, 'No keywords') AS keywords,
    CASE 
        WHEN tm.production_year < 2000 THEN 'Classic'
        WHEN tm.production_year BETWEEN 2000 AND 2010 THEN 'Modern'
        ELSE 'Recent'
    END AS era,
    (SELECT COUNT(DISTINCT ci.person_id) 
     FROM cast_info ci 
     JOIN aka_name an ON ci.person_id = an.person_id 
     WHERE ci.movie_id = (SELECT m.movie_id FROM aka_title m WHERE m.title = tm.title AND m.production_year = tm.production_year LIMIT 1)) AS unique_cast_members
FROM 
    TopMovies tm
LEFT JOIN 
    MovieKeywords mk ON tm.title = (SELECT m.title FROM aka_title m WHERE m.production_year = tm.production_year LIMIT 1)
ORDER BY 
    tm.production_year DESC, 
    tm.title;
