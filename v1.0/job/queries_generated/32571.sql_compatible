
WITH RECURSIVE MovieHierarchy AS (
    SELECT
        m.id AS movie_id,
        m.title,
        m.production_year,
        ARRAY[m.id] AS path
    FROM title m
    WHERE m.production_year >= 2000

    UNION ALL

    SELECT
        ml.linked_movie_id AS movie_id,
        t.title,
        t.production_year,
        mh.path || ml.linked_movie_id
    FROM movie_link ml
    JOIN MovieHierarchy mh ON ml.movie_id = mh.movie_id
    JOIN title t ON ml.linked_movie_id = t.id
)

SELECT
    ak.person_id,
    ak.name AS actor_name,
    m.title AS movie_title,
    m.production_year,
    STRING_AGG(DISTINCT kw.keyword, ', ') AS keywords,
    COUNT(DISTINCT c.id) AS total_movies,
    AVG(COALESCE(ci.nr_order, 0)) AS avg_order,
    MAX(COALESCE(ci.note, 'No Role')) AS last_role,
    COUNT(DISTINCT ml.linked_movie_id) AS linked_movies
FROM aka_name ak
JOIN cast_info ci ON ak.person_id = ci.person_id
JOIN title m ON ci.movie_id = m.id
LEFT JOIN movie_keyword mw ON mw.movie_id = m.id
LEFT JOIN keyword kw ON mw.keyword_id = kw.id
LEFT JOIN movie_link ml ON m.id = ml.movie_id
LEFT JOIN MovieHierarchy mh ON mh.movie_id = m.id
GROUP BY ak.person_id, ak.name, m.title, m.production_year
HAVING COUNT(DISTINCT c.id) > 5
ORDER BY COUNT(DISTINCT c.id) DESC, m.production_year DESC
LIMIT 100;
