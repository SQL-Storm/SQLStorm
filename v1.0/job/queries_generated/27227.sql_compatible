
WITH RankedMovies AS (
    SELECT 
        m.id AS movie_id,
        m.title,
        m.production_year,
        COUNT(DISTINCT c.person_id) AS total_cast,
        ARRAY_AGG(DISTINCT a.name) AS cast_names,
        ROW_NUMBER() OVER (ORDER BY m.production_year DESC, COUNT(DISTINCT c.person_id) DESC) AS rank
    FROM 
        title m
    JOIN 
        movie_companies mc ON mc.movie_id = m.id
    JOIN 
        company_name cn ON cn.id = mc.company_id
    JOIN 
        cast_info c ON c.movie_id = m.id
    JOIN 
        aka_name a ON a.person_id = c.person_id
    WHERE 
        m.production_year IS NOT NULL
    GROUP BY 
        m.id, m.title, m.production_year
),
TopMovies AS (
    SELECT 
        movie_id, 
        title, 
        production_year, 
        total_cast, 
        cast_names
    FROM 
        RankedMovies
    WHERE 
        rank <= 10
),
DetailedMovieInfo AS (
    SELECT 
        tm.movie_id,
        tm.title,
        tm.production_year,
        tm.total_cast,
        tm.cast_names,
        ARRAY_AGG(DISTINCT mk.keyword) AS keywords,
        ARRAY_AGG(DISTINCT mi.info) AS movie_info
    FROM 
        TopMovies tm
    LEFT JOIN 
        movie_keyword mk ON mk.movie_id = tm.movie_id
    LEFT JOIN 
        movie_info mi ON mi.movie_id = tm.movie_id
    GROUP BY 
        tm.movie_id, tm.title, tm.production_year, tm.total_cast, tm.cast_names
)

SELECT 
    dmi.movie_id,
    dmi.title,
    dmi.production_year,
    dmi.total_cast,
    dmi.cast_names,
    STRING_AGG(DISTINCT dmi.keywords, ', ') AS keywords,
    STRING_AGG(DISTINCT dmi.movie_info, ', ') AS additional_info
FROM 
    DetailedMovieInfo dmi
GROUP BY 
    dmi.movie_id, dmi.title, dmi.production_year, dmi.total_cast, dmi.cast_names
ORDER BY 
    dmi.production_year DESC, dmi.total_cast DESC;
