
WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        1 AS depth
    FROM 
        aka_title mt
    WHERE 
        mt.production_year >= 2000

    UNION ALL

    SELECT 
        ml.linked_movie_id AS movie_id,
        m.title,
        m.production_year,
        mh.depth + 1
    FROM 
        MovieHierarchy mh
    JOIN 
        movie_link ml ON mh.movie_id = ml.movie_id
    JOIN 
        aka_title m ON ml.linked_movie_id = m.id
)

SELECT 
    a.name AS actor_name,
    COUNT(DISTINCT ch.movie_id) AS total_movies,
    AVG(mh.depth) AS average_depth,
    STRING_AGG(DISTINCT k.keyword, ', ') AS keywords,
    COALESCE(c.company_name, 'Independent') AS production_company
FROM 
    cast_info ci
JOIN 
    aka_name a ON ci.person_id = a.person_id
JOIN 
    complete_cast cc ON ci.movie_id = cc.movie_id
JOIN 
    MovieHierarchy mh ON cc.movie_id = mh.movie_id
LEFT JOIN 
    movie_companies mc ON mh.movie_id = mc.movie_id
LEFT JOIN 
    company_name c ON mc.company_id = c.id
LEFT JOIN 
    movie_keyword mk ON mh.movie_id = mk.movie_id
LEFT JOIN 
    keyword k ON mk.keyword_id = k.id
WHERE 
    a.name IS NOT NULL
    AND a.name NOT LIKE '%Unknown%'
    AND mh.production_year > 1990
    AND NOT EXISTS (
        SELECT 1 
        FROM movie_info mi 
        WHERE mi.movie_id = mh.movie_id 
        AND mi.info_type_id = (SELECT id FROM info_type WHERE info = 'Banned')
    )
GROUP BY 
    a.name, c.company_name
ORDER BY 
    total_movies DESC, average_depth ASC
LIMIT 10;
