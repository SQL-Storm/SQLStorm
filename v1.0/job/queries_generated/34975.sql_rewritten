WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        m.id AS movie_id, 
        m.title, 
        0 AS level
    FROM 
        aka_title m
    WHERE 
        m.production_year BETWEEN 2000 AND 2010

    UNION ALL

    SELECT 
        ml.linked_movie_id AS movie_id, 
        at.title, 
        mh.level + 1
    FROM 
        movie_link ml
    JOIN 
        movie_hierarchy mh ON ml.movie_id = mh.movie_id
    JOIN 
        aka_title at ON ml.linked_movie_id = at.id
)

SELECT 
    ak.name AS actor_name,
    at.title AS movie_title,
    COALESCE(MAX(CASE WHEN pi.info_type_id = (SELECT id FROM info_type WHERE info = 'birthdate') THEN pi.info END), 'Unknown') AS birthdate,
    COALESCE(MAX(CASE WHEN pi.info_type_id = (SELECT id FROM info_type WHERE info = 'deathdate') THEN pi.info END), 'N/A') AS deathdate,
    COUNT(DISTINCT mh.movie_id) AS linked_movie_count,
    MAX(mh.level) AS maximum_depth
FROM 
    aka_name ak
JOIN 
    cast_info ci ON ak.person_id = ci.person_id
JOIN 
    aka_title at ON ci.movie_id = at.id
JOIN 
    person_info pi ON ak.person_id = pi.person_id
LEFT JOIN 
    movie_hierarchy mh ON at.id = mh.movie_id
WHERE 
    ak.name IS NOT NULL
    AND at.production_year IS NOT NULL
    AND (pi.info IS NOT NULL OR pi.note IS NOT NULL)
GROUP BY 
    ak.name,
    at.title
HAVING 
    COUNT(DISTINCT mh.movie_id) > 0
ORDER BY 
    actor_name, 
    movie_title;