
WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        m.id AS movie_id,
        m.title,
        m.production_year,
        1 AS level,
        m.title AS path
    FROM 
        aka_title m 
    WHERE 
        m.kind_id = (SELECT id FROM kind_type WHERE kind = 'movie')
    
    UNION ALL 
    
    SELECT 
        m.id,
        m.title,
        m.production_year,
        mh.level + 1,
        mh.path || ' -> ' || m.title
    FROM 
        movie_link ml 
    JOIN 
        aka_title m ON ml.linked_movie_id = m.id
    JOIN 
        movie_hierarchy mh ON ml.movie_id = mh.movie_id
)

SELECT 
    mh.path,
    COUNT(DISTINCT ca.person_id) AS actor_count,
    SUM(CASE WHEN ci.note IS NOT NULL THEN 1 ELSE 0 END) AS cast_notes,
    AVG(CHAR_LENGTH(mh.title)) AS avg_title_length,
    STRING_AGG(DISTINCT an.name, ', ') AS all_actors,
    MAX(mh.production_year) AS latest_production_year
FROM 
    movie_hierarchy mh
LEFT JOIN 
    complete_cast cc ON mh.movie_id = cc.movie_id
LEFT JOIN 
    cast_info ca ON cc.subject_id = ca.person_id
LEFT JOIN 
    aka_name an ON ca.person_id = an.person_id
LEFT JOIN 
    movie_info mi ON mh.movie_id = mi.movie_id AND mi.info_type_id = (SELECT id FROM info_type WHERE info = 'budget')
WHERE 
    mh.level < 5
GROUP BY 
    mh.path, mh.title, mh.production_year, mh.level
HAVING 
    COUNT(DISTINCT ca.person_id) > 2
ORDER BY 
    latest_production_year DESC;
