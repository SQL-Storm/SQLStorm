
WITH MovieStats AS (
    SELECT 
        t.title,
        t.production_year,
        COUNT(DISTINCT cc.person_id) AS actor_count,
        STRING_AGG(DISTINCT c.name, ', ') AS actors,
        COUNT(DISTINCT km.keyword) AS keyword_count,
        SUM(CASE WHEN mi.info IS NOT NULL THEN 1 ELSE 0 END) AS info_count
    FROM 
        aka_title AS t
    LEFT JOIN 
        complete_cast AS cc ON t.id = cc.movie_id
    LEFT JOIN 
        cast_info AS ci ON cc.subject_id = ci.id
    LEFT JOIN 
        aka_name AS c ON ci.person_id = c.person_id
    LEFT JOIN 
        movie_keyword AS mk ON t.id = mk.movie_id
    LEFT JOIN 
        keyword AS km ON mk.keyword_id = km.id
    LEFT JOIN 
        movie_info AS mi ON t.id = mi.movie_id
    WHERE 
        t.production_year BETWEEN 2000 AND 2023
        AND t.kind_id IN (SELECT id FROM kind_type WHERE kind IN ('movie', 'short'))
    GROUP BY 
        t.title, 
        t.production_year
), RankedMovies AS (
    SELECT 
        title,
        production_year,
        actor_count,
        actors,
        keyword_count,
        info_count,
        ROW_NUMBER() OVER (PARTITION BY production_year ORDER BY actor_count DESC) AS rank
    FROM 
        MovieStats
)
SELECT 
    r.title,
    r.production_year,
    r.actor_count,
    r.actors,
    r.keyword_count,
    r.info_count
FROM 
    RankedMovies r
WHERE 
    r.rank <= 5
ORDER BY 
    r.production_year, r.actor_count DESC
UNION ALL
SELECT 
    'Top Actor Count Movies' AS title,
    NULL AS production_year,
    COUNT(*) AS actor_count,
    NULL AS actors,
    NULL AS keyword_count,
    NULL AS info_count
FROM 
    RankedMovies
WHERE 
    actor_count = (SELECT MAX(actor_count) FROM RankedMovies);
