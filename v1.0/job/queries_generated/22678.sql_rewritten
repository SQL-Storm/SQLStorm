WITH RankedMovies AS (
    SELECT 
        t.id AS movie_id,
        t.title AS movie_title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.id) AS rn
    FROM 
        aka_title t
    WHERE 
        t.production_year IS NOT NULL
),
PersonRoles AS (
    SELECT 
        c.person_id,
        c.role_id,
        r.role,
        COUNT(*) AS role_count
    FROM 
        cast_info c
    JOIN 
        role_type r ON c.role_id = r.id
    GROUP BY 
        c.person_id, c.role_id, r.role
),
MovieCompanies AS (
    SELECT 
        mc.movie_id,
        STRING_AGG(DISTINCT cn.name, ', ') AS companies
    FROM 
        movie_companies mc
    JOIN 
        company_name cn ON mc.company_id = cn.id
    GROUP BY 
        mc.movie_id
),
CombinedData AS (
    SELECT 
        rm.movie_id,
        rm.movie_title,
        rm.production_year,
        pa.person_id,
        pr.role,
        pa.role_count,
        mc.companies,
        ROW_NUMBER() OVER (PARTITION BY rm.production_year ORDER BY pa.role_count DESC) AS movie_rank
    FROM 
        RankedMovies rm
    LEFT JOIN 
        PersonRoles pr ON rm.movie_id = pr.role_id
    LEFT JOIN 
        cast_info ci ON rm.movie_id = ci.movie_id
    LEFT JOIN 
        (SELECT 
            person_id, 
            role_id, 
            COUNT(*) AS role_count 
        FROM 
            cast_info 
        GROUP BY 
            person_id, role_id) pa ON ci.person_id = pa.person_id AND ci.role_id = pa.role_id
    LEFT JOIN 
        MovieCompanies mc ON rm.movie_id = mc.movie_id
)
SELECT 
    movie_title, 
    production_year,
    NULLIF(companies, '') AS production_companies,
    CASE 
        WHEN role_count > 5 THEN 'Frequent Actor'
        ELSE 'Casual Actor'
    END AS actor_category
FROM 
    CombinedData
WHERE 
    movie_rank <= 10
ORDER BY 
    production_year DESC, actor_category, movie_title;