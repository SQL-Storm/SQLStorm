WITH RECURSIVE movie_hierarchy AS (
    
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        t.kind_id,
        0 AS level
    FROM 
        title t
    UNION ALL
    
    SELECT 
        m.linked_movie_id AS movie_id,
        t.title,
        t.production_year,
        t.kind_id,
        mh.level + 1
    FROM 
        movie_link m
    JOIN 
        title t ON m.linked_movie_id = t.id
    JOIN 
        movie_hierarchy mh ON m.movie_id = mh.movie_id
), cast_with_roles AS (
    
    SELECT 
        c.movie_id,
        a.name AS actor_name,
        r.role AS role_description,
        ROW_NUMBER() OVER (PARTITION BY c.movie_id ORDER BY c.nr_order) AS role_order
    FROM 
        cast_info c
    JOIN 
        aka_name a ON c.person_id = a.person_id
    JOIN 
        role_type r ON c.role_id = r.id
), movies_with_keywords AS (
    
    SELECT 
        mh.movie_id,
        mh.title,
        mh.production_year,
        STRING_AGG(k.keyword, ', ') AS keywords
    FROM 
        movie_hierarchy mh
    LEFT JOIN 
        movie_keyword mk ON mh.movie_id = mk.movie_id
    LEFT JOIN 
        keyword k ON mk.keyword_id = k.id
    GROUP BY 
        mh.movie_id, mh.title, mh.production_year
)
SELECT 
    mwk.title,
    mwk.production_year,
    CAST(COALESCE(GROUP_CONCAT(DISTINCT cwr.actor_name SEPARATOR ', '), 'No Cast') AS CHAR) AS actors,
    mwk.keywords,
    CASE 
        WHEN mwk.production_year IS NULL THEN 'Unknown Year' 
        ELSE mwk.production_year 
    END AS production_year_label,
    COUNT(DISTINCT cwr.role_order) AS num_roles,
    COUNT(DISTINCT mwk.movie_id) AS total_movies
FROM 
    movies_with_keywords mwk
LEFT JOIN 
    cast_with_roles cwr ON mwk.movie_id = cwr.movie_id
GROUP BY 
    mwk.movie_id, mwk.title, mwk.production_year
ORDER BY 
    mwk.production_year DESC, mwk.title ASC
LIMIT 100;