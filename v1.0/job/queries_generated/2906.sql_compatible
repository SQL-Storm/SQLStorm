
WITH RankedMovies AS (
    SELECT 
        t.title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.title) AS rank_per_year
    FROM 
        aka_title t
    WHERE 
        t.kind_id = (SELECT id FROM kind_type WHERE kind = 'movie')
),
ActorCount AS (
    SELECT 
        ci.movie_id,
        COUNT(DISTINCT ci.person_id) AS actor_count
    FROM 
        cast_info ci
    GROUP BY 
        ci.movie_id
),
MovieDetails AS (
    SELECT 
        m.title,
        m.production_year,
        ac.actor_count,
        COALESCE(mk.keyword, 'No Keywords') AS keyword
    FROM 
        RankedMovies m
    LEFT JOIN 
        ActorCount ac ON m.id = ac.movie_id
    LEFT JOIN 
        movie_keyword mk ON mk.movie_id = m.id
)
SELECT 
    md.title,
    md.production_year,
    md.actor_count,
    CASE 
        WHEN md.actor_count > 5 THEN 'Feature'
        WHEN md.actor_count IS NULL THEN 'Information Missing'
        ELSE 'Short Film'
    END AS film_type,
    STRING_AGG(DISTINCT md.keyword, ', ') AS keywords
FROM 
    MovieDetails md
GROUP BY 
    md.title, md.production_year, md.actor_count
HAVING 
    md.production_year > 2000
ORDER BY 
    md.production_year DESC, md.title;
