WITH RECURSIVE movie_hierarchy AS (
    SELECT
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        mt.kind_id,
        1 AS level
    FROM
        aka_title mt
    WHERE
        mt.production_year >= 2000

    UNION ALL

    SELECT
        ml.linked_movie_id AS movie_id,
        at.title,
        at.production_year,
        at.kind_id,
        mh.level + 1
    FROM
        movie_link ml
    JOIN
        aka_title at ON ml.movie_id = at.id
    JOIN
        movie_hierarchy mh ON ml.movie_id = mh.movie_id
)

SELECT
    ak.name AS actor_name,
    mt.title AS movie_title,
    mt.production_year,
    cct.kind AS cast_type,
    COUNT(DISTINCT kc.keyword) AS keyword_count,
    SUM(CASE WHEN mi.info_type_id IS NOT NULL THEN 1 ELSE 0 END) AS info_count,
    ROW_NUMBER() OVER (PARTITION BY ak.id ORDER BY mt.production_year DESC) AS actor_movie_rank
FROM
    aka_name ak
JOIN
    cast_info ci ON ak.person_id = ci.person_id
JOIN
    movie_hierarchy mt ON ci.movie_id = mt.movie_id
LEFT JOIN
    comp_cast_type cct ON ci.person_role_id = cct.id
LEFT JOIN
    movie_keyword mk ON mt.movie_id = mk.movie_id
LEFT JOIN
    keyword kc ON mk.keyword_id = kc.id
LEFT JOIN
    movie_info mi ON mt.movie_id = mi.movie_id
WHERE
    ak.name IS NOT NULL
    AND ak.name <> ''
    AND cct.kind IS NOT NULL
GROUP BY
    ak.name,
    mt.title,
    mt.production_year,
    cct.kind,
    ak.id
HAVING
    COUNT(DISTINCT kc.keyword) > 2
ORDER BY
    actor_movie_rank ASC, mt.production_year DESC
LIMIT 50;