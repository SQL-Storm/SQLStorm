
WITH RECURSIVE movie_ratings AS (
    SELECT 
        title.id AS movie_id,
        title.title,
        COALESCE(AVG(rating.rating_value), 0) AS average_rating
    FROM 
        title
    LEFT JOIN 
        movie_info ON title.id = movie_info.movie_id 
    LEFT JOIN 
        (SELECT movie_id, AVG(rating_value) AS rating_value 
         FROM movie_info 
         WHERE info_type_id = (SELECT id FROM info_type WHERE info = 'rating')
         GROUP BY movie_id) AS rating ON title.id = rating.movie_id
    GROUP BY 
        title.id, title.title
), combined_cast AS (
    SELECT 
        c.movie_id,
        COUNT(c.person_id) AS cast_count,
        STRING_AGG(a.name, ', ') AS actor_names
    FROM 
        cast_info c
    JOIN 
        aka_name a ON c.person_id = a.person_id
    GROUP BY 
        c.movie_id
), detailed_movies AS (
    SELECT 
        t.title,
        t.production_year,
        m.cast_count,
        m.actor_names,
        r.average_rating
    FROM 
        title t
    LEFT JOIN 
        combined_cast m ON t.id = m.movie_id
    LEFT JOIN 
        movie_ratings r ON t.id = r.movie_id
)
SELECT 
    dm.title,
    dm.production_year,
    dm.cast_count,
    dm.actor_names,
    dm.average_rating,
    CASE 
        WHEN dm.average_rating IS NULL THEN 'No ratings yet'
        WHEN dm.average_rating >= 7 THEN 'High Rating'
        WHEN dm.average_rating < 4 THEN 'Low Rating'
        ELSE 'Average Rating'
    END AS rating_category
FROM 
    detailed_movies dm
WHERE 
    dm.production_year >= 2000 
AND 
    dm.cast_count > 0
ORDER BY 
    dm.average_rating DESC;
