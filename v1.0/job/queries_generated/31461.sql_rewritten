WITH RECURSIVE ActorHierarchy AS (
    SELECT ci.person_id, ci.movie_id, 1 AS level
    FROM cast_info ci
    WHERE ci.role_id = (SELECT id FROM role_type WHERE role = 'Director')  

    UNION ALL

    SELECT ci.person_id, ci.movie_id, ah.level + 1
    FROM cast_info ci
    INNER JOIN ActorHierarchy ah ON ci.movie_id = ah.movie_id
    WHERE ci.person_id != ah.person_id 
      AND ci.person_role_id IS NOT NULL
),
RankedMovies AS (
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        COUNT(DISTINCT ci.person_id) AS actor_count,
        ROW_NUMBER() OVER (PARTITION BY YEAR(t.production_year) ORDER BY COUNT(DISTINCT ci.person_id) DESC) AS rank
    FROM 
        aka_title t
    LEFT JOIN 
        cast_info ci ON t.id = ci.movie_id
    WHERE 
        t.production_year IS NOT NULL
    GROUP BY 
        t.id, t.title, t.production_year
),
FilteredMovies AS (
    SELECT 
        rm.movie_id,
        rm.title,
        rm.production_year
    FROM 
        RankedMovies rm
    WHERE 
        rm.rank <= 3  
)
SELECT 
    fm.title,
    fm.production_year,
    COALESCE(ak.name, 'Unknown Actor') AS main_actor,
    COUNT(DISTINCT mk.keyword) AS keyword_count,
    SUM(CASE WHEN mi.info IS NULL THEN 1 ELSE 0 END) AS null_info_count
FROM 
    FilteredMovies fm
LEFT JOIN 
    complete_cast cc ON fm.movie_id = cc.movie_id
LEFT JOIN 
    aka_name ak ON cc.subject_id = ak.person_id
LEFT JOIN 
    movie_keyword mk ON fm.movie_id = mk.movie_id
LEFT JOIN 
    movie_info mi ON fm.movie_id = mi.movie_id
GROUP BY 
    fm.title, fm.production_year, ak.name
ORDER BY 
    fm.production_year DESC, keyword_count DESC;