
WITH RecursiveMovieData AS (
    SELECT
        t.id AS movie_id,
        t.title,
        t.production_year,
        COALESCE(k.keyword, 'No Keyword') AS keyword,
        ROW_NUMBER() OVER (PARTITION BY t.id ORDER BY c.nr_order) AS cast_order,
        COUNT(DISTINCT mcf.id) OVER (PARTITION BY t.id) AS company_count
    FROM
        aka_title t
    LEFT JOIN
        movie_keyword mk ON t.id = mk.movie_id
    LEFT JOIN
        keyword k ON mk.keyword_id = k.id
    LEFT JOIN
        complete_cast cc ON t.id = cc.movie_id
    LEFT JOIN
        cast_info c ON c.movie_id = t.id
    LEFT JOIN
        movie_companies mcf ON mcf.movie_id = t.id
    WHERE
        t.production_year IS NOT NULL
    UNION ALL
    SELECT
        c.movie_id,
        'Aggregate for Movie' AS title,
        NULL AS production_year,
        'Multiple Keywords' AS keyword,
        NULL AS cast_order,
        NULL AS company_count
    FROM
        cast_info c
    GROUP BY
        c.movie_id
    HAVING
        COUNT(DISTINCT c.person_id) > 3
),
MovieInfo AS (
    SELECT
        r.movie_id,
        r.title,
        r.production_year,
        COALESCE(r.keyword, 'No Keyword') AS keyword,
        r.cast_order,
        r.company_count,
        MIN(ki.info) AS sample_info
    FROM
        RecursiveMovieData r
    LEFT JOIN
        movie_info ki ON r.movie_id = ki.movie_id AND ki.info_type_id = (SELECT MAX(id) FROM info_type)
    GROUP BY
        r.movie_id, r.title, r.production_year, r.keyword, r.cast_order, r.company_count
)
SELECT
    m.movie_id,
    m.title,
    m.production_year,
    m.keyword,
    m.cast_order,
    m.company_count,
    CASE
        WHEN m.company_count > 10 THEN 'Blockbuster'
        WHEN m.company_count BETWEEN 5 AND 10 THEN 'Mid-range'
        ELSE 'Indie'
    END AS company_classification,
    TRIM(m.sample_info) AS trimmed_sample_info
FROM
    MovieInfo m
WHERE
    m.production_year >= (SELECT MAX(production_year) - 10 FROM aka_title)
    OR (m.keyword IS NULL AND m.company_count = 0)
ORDER BY
    m.production_year DESC,
    company_classification;
