
WITH RankedTitles AS (
    SELECT 
        t.id AS title_id,
        t.title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.title) AS title_rank
    FROM 
        aka_title t
), 
MovieAndCast AS (
    SELECT 
        c.movie_id,
        c.person_id,
        c.role_id,
        r.role
    FROM 
        cast_info c
    LEFT JOIN 
        role_type r ON c.role_id = r.id
), 
Companies AS (
    SELECT 
        mc.movie_id,
        co.name AS company_name,
        ct.kind AS company_type,
        ROW_NUMBER() OVER (PARTITION BY mc.movie_id ORDER BY co.name) AS company_rank
    FROM 
        movie_companies mc
    JOIN 
        company_name co ON mc.company_id = co.id
    JOIN 
        company_type ct ON mc.company_type_id = ct.id
), 
FilteredInfo AS (
    SELECT 
        mi.movie_id,
        mi.info,
        COUNT(*) OVER (PARTITION BY mi.movie_id) AS info_count
    FROM 
        movie_info mi
    WHERE 
        mi.info_type_id IN (SELECT id FROM info_type WHERE info LIKE '%award%')
), 
UniqueKeywords AS (
    SELECT 
        mk.movie_id,
        STRING_AGG(DISTINCT k.keyword, ', ') AS keywords
    FROM 
        movie_keyword mk
    JOIN 
        keyword k ON mk.keyword_id = k.id
    GROUP BY 
        mk.movie_id
)

SELECT 
    rt.title,
    rt.production_year,
    COALESCE(CAST(cast.person_id AS VARCHAR), 'No Cast') AS person_id,
    COALESCE(cast.role, 'No Role Assigned') AS role,
    COALESCE(cmp.company_name, 'Independent') AS company_name,
    COALESCE(ki.keywords, 'No Keywords') AS keywords,
    CASE 
        WHEN fi.info_count > 0 THEN 'Has Awards Info' 
        ELSE 'No Awards Info' 
    END AS awards_info
FROM 
    RankedTitles rt
LEFT JOIN 
    MovieAndCast cast ON rt.title_id = cast.movie_id
LEFT JOIN 
    Companies cmp ON rt.title_id = cmp.movie_id AND cmp.company_rank = 1
LEFT JOIN 
    UniqueKeywords ki ON rt.title_id = ki.movie_id
LEFT JOIN 
    FilteredInfo fi ON rt.title_id = fi.movie_id
WHERE 
    rt.production_year < 2000
    AND (cast.role IS NOT NULL OR fi.info IS NOT NULL)
ORDER BY 
    rt.production_year DESC, 
    rt.title;
