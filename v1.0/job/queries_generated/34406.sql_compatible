
WITH RECURSIVE ActorMovies AS (
    SELECT 
        ca.person_id,
        ca.movie_id,
        t.title,
        t.production_year,
        1 AS depth
    FROM cast_info ca
    INNER JOIN title t ON ca.movie_id = t.id
    WHERE ca.person_role_id IN (
        SELECT id FROM role_type WHERE role LIKE '%actor%'
    )
    
    UNION ALL
    
    SELECT 
        ca.person_id,
        ml.linked_movie_id,
        tt.title,
        tt.production_year,
        am.depth + 1
    FROM ActorMovies am
    JOIN movie_link ml ON am.movie_id = ml.movie_id
    JOIN title tt ON ml.linked_movie_id = tt.id
    JOIN cast_info ca ON tt.id = ca.movie_id
    WHERE ca.person_role_id IN (
        SELECT id FROM role_type WHERE role LIKE '%actor%'
    )
)
SELECT 
    an.name AS actor_name,
    COUNT(DISTINCT am.movie_id) AS total_movies,
    STRING_AGG(DISTINCT t.title, ', ') AS movies_played_in,
    MAX(t.production_year) AS latest_movie_year,
    ARRAY_AGG(DISTINCT c.kind) AS company_types_involved,
    SUM(CASE 
            WHEN t.production_year >= EXTRACT(YEAR FROM DATE '2024-10-01') - 10 THEN 1 ELSE 0 
        END) AS recent_movies
FROM ActorMovies am
JOIN aka_name an ON am.person_id = an.person_id
JOIN title t ON am.movie_id = t.id
LEFT JOIN movie_companies mc ON t.id = mc.movie_id
LEFT JOIN company_type c ON mc.company_type_id = c.id
GROUP BY an.name
HAVING COUNT(DISTINCT am.movie_id) > 5
ORDER BY total_movies DESC
LIMIT 10;
