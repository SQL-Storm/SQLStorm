WITH Recursive ActorRoles AS (
    SELECT 
        ca.person_id,
        COUNT(DISTINCT ca.movie_id) AS movie_count
    FROM 
        cast_info ca
    INNER JOIN 
        aka_name an ON an.person_id = ca.person_id
    WHERE 
        an.name LIKE '%Smith%'
    GROUP BY 
        ca.person_id
    HAVING 
        COUNT(DISTINCT ca.movie_id) > 1
),
CriticalMovies AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        mk.keyword AS main_keyword,
        ROW_NUMBER() OVER (PARTITION BY mt.production_year ORDER BY mt.title) AS keyword_rank
    FROM 
        aka_title mt
    LEFT OUTER JOIN 
        movie_keyword mk ON mt.id = mk.movie_id
    WHERE 
        mt.production_year >= 2000
        AND mk.keyword IS NOT NULL
),
FilteredMovies AS (
    SELECT 
        cm.movie_id,
        cm.title,
        cm.production_year,
        cm.main_keyword
    FROM 
        CriticalMovies cm
    WHERE 
        cm.keyword_rank <= 3
)
SELECT 
    ar.person_id,
    COUNT(DISTINCT fm.movie_id) AS significant_movie_count,
    STRING_AGG(DISTINCT fm.title, ', ') AS movies,
    SUM(COALESCE(ci.nr_order, 0)) AS total_order
FROM 
    ActorRoles ar
LEFT JOIN 
    cast_info ci ON ar.person_id = ci.person_id
LEFT JOIN 
    FilteredMovies fm ON ci.movie_id = fm.movie_id
GROUP BY 
    ar.person_id
HAVING 
    COUNT(DISTINCT fm.movie_id) > 0
ORDER BY 
    significant_movie_count DESC,
    total_order ASC
LIMIT 10;