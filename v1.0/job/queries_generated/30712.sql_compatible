
WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        1 AS level
    FROM 
        aka_title mt
    WHERE 
        mt.production_year >= 2000
    
    UNION ALL
    
    SELECT 
        ml.linked_movie_id,
        m.title,
        mh.level + 1
    FROM 
        MovieHierarchy mh
    JOIN 
        movie_link ml ON mh.movie_id = ml.movie_id
    JOIN 
        aka_title m ON ml.linked_movie_id = m.id
)

SELECT 
    mt.title AS Movie_Title,
    ak.name AS Actor_Name,
    COUNT(DISTINCT k.id) AS Keyword_Count,
    AVG(CAST(mi.info AS INTEGER)) AS Avg_Movie_Info,
    ROW_NUMBER() OVER (PARTITION BY ak.name ORDER BY COUNT(DISTINCT k.id) DESC) AS Actor_Rank
FROM 
    aka_name ak
JOIN 
    cast_info ci ON ak.person_id = ci.person_id
JOIN 
    MovieHierarchy mh ON ci.movie_id = mh.movie_id
LEFT JOIN 
    movie_keyword mk ON mh.movie_id = mk.movie_id
LEFT JOIN 
    keyword k ON mk.keyword_id = k.id
LEFT JOIN 
    movie_info mi ON mh.movie_id = mi.movie_id AND mi.info_type_id = (SELECT id FROM info_type WHERE info = 'Budget')
WHERE 
    ak.name IS NOT NULL
    AND ak.name != ''
    AND (mh.level <= 3 OR mh.level IS NULL)
GROUP BY 
    mt.title, ak.name
HAVING 
    COUNT(DISTINCT k.id) > 2
ORDER BY 
    Actor_Rank;
