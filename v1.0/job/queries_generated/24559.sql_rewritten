WITH RECURSIVE actor_hierarchy AS (
    SELECT c.person_id, a.name AS actor_name, 1 AS depth
    FROM cast_info c
    JOIN aka_name a ON c.person_id = a.person_id
    WHERE c.movie_id IN (
        SELECT id FROM aka_title WHERE title LIKE '%Ghost%' 
        AND production_year >= 1990
    )
    
    UNION ALL

    SELECT c.person_id, a.name AS actor_name, h.depth + 1 AS depth
    FROM cast_info c
    JOIN aka_name a ON c.person_id = a.person_id
    JOIN actor_hierarchy h ON c.movie_id IN (
        SELECT m.movie_id FROM complete_cast m WHERE m.subject_id = h.person_id
    )
)

SELECT 
    a.actor_name,
    COUNT(DISTINCT c.movie_id) AS total_movies,
    STRING_AGG(DISTINCT k.keyword, ', ') FILTER (WHERE k.keyword IS NOT NULL) AS keywords,
    MIN(t.production_year) AS first_appearance,
    MAX(t.production_year) AS last_appearance,
    AVG(EXTRACT(YEAR FROM cast('2024-10-01' as date)) - t.production_year) AS avg_years_since_release,
    CASE
        WHEN AVG(t.production_year) IS NULL THEN 'No data'
        WHEN AVG(t.production_year) < 2000 THEN 'Classic Actor'
        ELSE 'Modern Actor'
    END AS actor_category
FROM actor_hierarchy a
JOIN cast_info c ON a.person_id = c.person_id
JOIN aka_title t ON c.movie_id = t.id
LEFT JOIN movie_keyword mk ON mk.movie_id = c.movie_id
LEFT JOIN keyword k ON mk.keyword_id = k.id
GROUP BY a.actor_name
HAVING COUNT(DISTINCT c.movie_id) > 5
ORDER BY avg_years_since_release DESC
LIMIT 10
OFFSET 0;