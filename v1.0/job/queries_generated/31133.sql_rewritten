WITH RECURSIVE ActorHierarchy AS (
    SELECT c.person_id, 
           a.name AS actor_name, 
           t.title AS movie_title,
           1 AS level
    FROM cast_info c
    JOIN aka_name a ON c.person_id = a.person_id
    JOIN aka_title t ON c.movie_id = t.movie_id
    WHERE t.production_year IS NOT NULL
    
    UNION ALL
    
    SELECT c.person_id, 
           a.name AS actor_name, 
           t.title AS movie_title,
           ah.level + 1
    FROM cast_info c
    JOIN aka_name a ON c.person_id = a.person_id
    JOIN aka_title t ON c.movie_id = t.movie_id
    JOIN ActorHierarchy ah ON c.movie_id = ah.movie_id
)
SELECT 
    a.actor_name,
    COUNT(DISTINCT t.id) AS movie_count,
    AVG(t.production_year) AS avg_production_year,
    STRING_AGG(DISTINCT t.title, ', ') AS movie_titles,
    MAX(ah.level) AS depth_of_collaboration
FROM ActorHierarchy ah
JOIN aka_name a ON ah.person_id = a.person_id
JOIN aka_title t ON ah.movie_title = t.title
LEFT JOIN movie_info mi ON t.id = mi.movie_id AND mi.info_type_id = (SELECT id FROM info_type WHERE info = 'Box Office' LIMIT 1)
WHERE mi.info IS NULL OR mi.info::numeric > 5000000
GROUP BY a.actor_name
HAVING COUNT(DISTINCT t.id) > 5
ORDER BY movie_count DESC, avg_production_year DESC
LIMIT 10;