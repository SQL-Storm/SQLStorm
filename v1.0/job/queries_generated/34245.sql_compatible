
WITH RECURSIVE movie_hierarchy AS (
    SELECT
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        1 AS level
    FROM
        aka_title mt
    WHERE
        mt.production_year >= 2000 

    UNION ALL

    SELECT
        ml.linked_movie_id,
        a.title,
        a.production_year,
        mh.level + 1
    FROM
        movie_link ml
    JOIN
        aka_title a ON ml.linked_movie_id = a.id
    JOIN
        movie_hierarchy mh ON ml.movie_id = mh.movie_id
), 

cast_details AS (
    SELECT
        ci.movie_id,
        ci.person_id,
        an.name AS actor_name,
        ct.kind AS role,
        ROW_NUMBER() OVER (PARTITION BY ci.movie_id ORDER BY ci.nr_order) AS role_order
    FROM
        cast_info ci
    LEFT JOIN
        aka_name an ON ci.person_id = an.person_id
    LEFT JOIN
        role_type ct ON ci.role_id = ct.id
), 

movie_info_extended AS (
    SELECT
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        COALESCE(mi.info, 'No Information') AS additional_info
    FROM
        aka_title mt
    LEFT JOIN
        movie_info mi ON mt.id = mi.movie_id
)

SELECT
    mh.movie_id,
    mh.title,
    mh.production_year,
    COALESCE(STRING_AGG(DISTINCT cd.actor_name, ', '), 'No Cast') AS cast_names,
    (SELECT COUNT(*) FROM movie_info_extended mie WHERE mie.movie_id = mh.movie_id) AS info_count
FROM
    movie_hierarchy mh
LEFT JOIN
    cast_details cd ON mh.movie_id = cd.movie_id
LEFT JOIN
    movie_info_extended mie ON mh.movie_id = mie.movie_id
WHERE
    mh.production_year >= 2010
GROUP BY
    mh.movie_id, mh.title, mh.production_year
HAVING
    COUNT(DISTINCT cd.person_id) > 1
ORDER BY
    mh.production_year DESC, mh.title;
