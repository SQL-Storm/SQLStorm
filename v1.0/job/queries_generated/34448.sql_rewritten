WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        ml.linked_movie_id,
        1 AS level
    FROM 
        aka_title mt
    LEFT JOIN 
        movie_link ml ON mt.id = ml.movie_id
    WHERE 
        mt.production_year >= 2000

    UNION ALL

    SELECT 
        mh.movie_id,
        m.title,
        m.production_year,
        ml.linked_movie_id,
        mh.level + 1
    FROM 
        movie_hierarchy mh
    JOIN 
        aka_title m ON mh.linked_movie_id = m.id
    LEFT JOIN 
        movie_link ml ON m.id = ml.movie_id
)

SELECT 
    ak.name AS actor_name,
    at.title AS movie_title,
    mh.level,
    COUNT(DISTINCT mc.company_id) AS production_companies,
    SUM(CASE WHEN ci.note IS NOT NULL THEN 1 ELSE 0 END) AS cast_notes_count,
    STRING_AGG(DISTINCT k.keyword, ', ') AS keywords,
    MAX(mi.info) AS additional_info
FROM 
    cast_info ci
JOIN 
    aka_name ak ON ci.person_id = ak.person_id
JOIN 
    movie_companies mc ON ci.movie_id = mc.movie_id
JOIN 
    aka_title at ON ci.movie_id = at.id
JOIN 
    movie_hierarchy mh ON at.id = mh.movie_id
LEFT JOIN 
    movie_keyword mk ON mk.movie_id = at.id
LEFT JOIN 
    keyword k ON mk.keyword_id = k.id
LEFT JOIN 
    movie_info mi ON mi.movie_id = at.id
WHERE 
    ak.name IS NOT NULL
    AND at.production_year IS NOT NULL
    AND mh.level <= 2
GROUP BY 
    ak.name, at.title, mh.level 
ORDER BY 
    production_companies DESC, actor_name ASC;