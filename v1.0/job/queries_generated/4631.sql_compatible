
WITH RankedMovies AS (
    SELECT 
        at.id AS movie_id,
        at.title,
        at.production_year,
        COUNT(DISTINCT ci.person_id) OVER (PARTITION BY at.id) AS cast_count,
        ROW_NUMBER() OVER (PARTITION BY at.production_year ORDER BY at.production_year DESC) AS rn
    FROM 
        aka_title at
    LEFT JOIN 
        complete_cast cc ON cc.movie_id = at.id
    LEFT JOIN 
        cast_info ci ON ci.movie_id = at.id
    WHERE 
        at.production_year IS NOT NULL
),
TopMovies AS (
    SELECT 
        movie_id,
        title,
        production_year,
        cast_count
    FROM 
        RankedMovies
    WHERE 
        rn <= 5  
),
ActorInfo AS (
    SELECT 
        a.name AS actor_name,
        at.title AS movie_title,
        at.production_year,
        COALESCE(mk.keyword, 'No Keywords') AS keyword
    FROM 
        aka_name a
    JOIN 
        cast_info ci ON ci.person_id = a.person_id
    JOIN 
        aka_title at ON at.id = ci.movie_id
    LEFT JOIN 
        movie_keyword mk ON mk.movie_id = at.id
)
SELECT 
    tm.title,
    tm.production_year,
    tm.cast_count,
    ai.actor_name,
    STRING_AGG(ai.keyword, ', ') AS keywords
FROM 
    TopMovies tm
LEFT JOIN 
    ActorInfo ai ON ai.movie_title = tm.title AND ai.production_year = tm.production_year
GROUP BY 
    tm.movie_id, tm.title, tm.production_year, tm.cast_count
ORDER BY 
    tm.production_year DESC, tm.cast_count DESC;
