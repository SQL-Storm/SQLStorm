
WITH RankedTitles AS (
    SELECT 
        t.id AS title_id,
        t.title,
        t.production_year,
        RANK() OVER (PARTITION BY t.production_year ORDER BY t.title) AS year_rank
    FROM title t
    WHERE t.production_year IS NOT NULL
),
ActorMovies AS (
    SELECT 
        c.person_id,
        tc.title_id,
        ROW_NUMBER() OVER (PARTITION BY c.person_id ORDER BY t.production_year) AS movie_rank
    FROM cast_info c
    JOIN title t ON c.movie_id = t.id
    INNER JOIN RankedTitles tc ON t.id = tc.title_id
    WHERE c.note IS NULL OR c.note NOT LIKE '%Cameo%'
)
SELECT 
    a.person_id,
    a.name,
    COUNT(DISTINCT am.title_id) AS movie_count,
    AVG(am.movie_rank) AS avg_movie_rank,
    MAX(am.movie_rank) AS max_movie_rank,
    STRING_AGG(DISTINCT am.title, ', ') AS titles
FROM aka_name a
LEFT JOIN ActorMovies am ON a.person_id = am.person_id
LEFT JOIN (
    SELECT 
        ca.person_id,
        COUNT(ca.movie_id) AS cameo_count
    FROM cast_info ca
    WHERE ca.note LIKE '%Cameo%'
    GROUP BY ca.person_id
) cameo ON a.person_id = cameo.person_id
WHERE a.name IS NOT NULL
GROUP BY a.person_id, a.name
HAVING COUNT(DISTINCT am.title_id) > 0 OR COALESCE(cameo.cameo_count, 0) > 2
ORDER BY movie_count DESC, a.person_id
LIMIT 50;
