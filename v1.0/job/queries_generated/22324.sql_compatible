
WITH RankedMovies AS (
    SELECT
        t.title,
        t.production_year,
        COUNT(cc.movie_id) AS cast_count,
        RANK() OVER (PARTITION BY t.production_year ORDER BY COUNT(cc.movie_id) DESC) AS rank_by_cast
    FROM
        aka_title t
    LEFT JOIN
        cast_info cc ON t.id = cc.movie_id
    GROUP BY
        t.id, t.title, t.production_year
),
FilteredMovies AS (
    SELECT
        rm.title,
        rm.production_year,
        rm.cast_count
    FROM
        RankedMovies rm
    WHERE
        rm.rank_by_cast <= 5
)
SELECT
    f.title,
    f.production_year,
    f.cast_count,
    COALESCE(cn.name, 'Unknown') AS company_name,
    CASE
        WHEN f.cast_count > 0 THEN (SELECT AVG(CAST(pi.info AS INTEGER))
                                     FROM person_info pi
                                     WHERE pi.person_id IN (SELECT ci.person_id FROM cast_info ci WHERE ci.movie_id IN (SELECT movie_id FROM aka_title WHERE title = f.title)))
        ELSE NULL
    END AS avg_person_info,
    STRING_AGG(DISTINCT k.keyword, ', ') AS keywords
FROM
    FilteredMovies f
LEFT JOIN 
    movie_companies mc ON mc.movie_id IN (SELECT t.id FROM aka_title t WHERE t.title = f.title)
LEFT JOIN 
    company_name cn ON mc.company_id = cn.id
LEFT JOIN 
    movie_keyword mk ON f.title = (SELECT title FROM aka_title WHERE id = mk.movie_id)
LEFT JOIN 
    keyword k ON mk.keyword_id = k.id
WHERE 
    f.production_year IS NOT NULL AND
    (f.cast_count IS NULL OR f.cast_count > 2)
GROUP BY 
    f.title, f.production_year, f.cast_count, cn.name
ORDER BY 
    f.production_year DESC, f.cast_count DESC;
