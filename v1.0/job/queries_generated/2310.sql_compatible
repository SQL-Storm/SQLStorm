
WITH RankedMovies AS (
    SELECT 
        t.id AS title_id,
        t.title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.title) AS rank
    FROM title t
    WHERE t.production_year >= 2000
),
ActorRoles AS (
    SELECT 
        a.person_id,
        a.name,
        COUNT(DISTINCT c.movie_id) AS movie_count,
        STRING_AGG(DISTINCT t.title, ', ') AS titles
    FROM aka_name a
    JOIN cast_info c ON a.person_id = c.person_id
    JOIN title t ON c.movie_id = t.id
    GROUP BY a.person_id, a.name
),
MoviesWithKeywords AS (
    SELECT 
        t.id AS movie_id,
        t.title,
        k.keyword
    FROM title t
    LEFT JOIN movie_keyword mk ON t.id = mk.movie_id
    LEFT JOIN keyword k ON mk.keyword_id = k.id
    WHERE k.keyword IS NOT NULL
),
CompanyDetails AS (
    SELECT 
        mc.movie_id,
        cn.name AS company_name,
        ct.kind AS company_type
    FROM movie_companies mc
    JOIN company_name cn ON mc.company_id = cn.id
    JOIN company_type ct ON mc.company_type_id = ct.id
)
SELECT 
    rm.title_id,
    rm.title,
    rm.production_year,
    ar.name AS actor_name,
    ar.movie_count,
    ar.titles,
    cd.company_name,
    cd.company_type
FROM RankedMovies rm
LEFT JOIN ActorRoles ar ON ar.movie_count > 5 AND EXISTS (
    SELECT 1
    FROM cast_info ci
    WHERE ci.movie_id = rm.title_id AND ci.person_id = ar.person_id
)
LEFT JOIN CompanyDetails cd ON cd.movie_id = rm.title_id
WHERE rm.rank <= 10
GROUP BY rm.title_id, rm.title, rm.production_year, ar.name, ar.movie_count, ar.titles, cd.company_name, cd.company_type
ORDER BY rm.production_year DESC, rm.title;
