
WITH RankedMovies AS (
    SELECT 
        at.title,
        at.production_year,
        at.kind_id,
        ROW_NUMBER() OVER (PARTITION BY at.production_year ORDER BY at.production_year DESC, CHAR_LENGTH(at.title) ASC) AS rn
    FROM 
        aka_title at
    WHERE 
        at.production_year IS NOT NULL
),
CastCount AS (
    SELECT 
        ci.movie_id,
        COUNT(ci.person_id) AS cast_member_count,
        SUM(CASE 
            WHEN ci.note IS NULL THEN 1 
            ELSE 0 
        END) AS null_note_count
    FROM 
        cast_info ci
    GROUP BY 
        ci.movie_id
),
MovieTags AS (
    SELECT 
        mk.movie_id,
        STRING_AGG(k.keyword, ', ') AS keywords
    FROM 
        movie_keyword mk
    JOIN 
        keyword k ON mk.keyword_id = k.id
    GROUP BY 
        mk.movie_id
),
CompanyDetails AS (
    SELECT 
        mc.movie_id,
        STRING_AGG(DISTINCT cn.name, ', ') AS company_names,
        STRING_AGG(DISTINCT ct.kind, ', ') AS company_types
    FROM 
        movie_companies mc
    JOIN 
        company_name cn ON mc.company_id = cn.id
    JOIN 
        company_type ct ON mc.company_type_id = ct.id
    GROUP BY 
        mc.movie_id
)
SELECT 
    rm.title,
    rm.production_year,
    cc.cast_member_count,
    cc.null_note_count,
    mt.keywords,
    cd.company_names,
    cd.company_types
FROM 
    RankedMovies rm
LEFT JOIN 
    CastCount cc ON rm.id = cc.movie_id
LEFT JOIN 
    MovieTags mt ON rm.id = mt.movie_id
LEFT JOIN 
    CompanyDetails cd ON rm.id = cd.movie_id
WHERE 
    rm.rn = 1 
    AND (cc.cast_member_count IS NULL OR cc.null_note_count < 5) 
    AND (rm.kind_id IN (SELECT id FROM kind_type WHERE kind LIKE '%Drama%'))
ORDER BY 
    rm.production_year DESC, rm.title;
