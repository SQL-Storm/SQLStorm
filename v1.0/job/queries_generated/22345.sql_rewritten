WITH RECURSIVE title_hierarchy AS (
    SELECT 
        t.id AS title_id,
        t.title,
        0 AS depth,
        t.production_year,
        ARRAY[t.title] AS title_path
    FROM 
        aka_title t
    WHERE 
        t.episode_of_id IS NULL
    UNION ALL
    SELECT 
        t.id AS title_id,
        t.title,
        th.depth + 1,
        t.production_year,
        th.title_path || t.title
    FROM 
        aka_title t
    JOIN 
        title_hierarchy th ON t.episode_of_id = th.title_id
    WHERE 
        th.depth < 5  
)

SELECT 
    th.title_path,
    th.production_year,
    COUNT(DISTINCT ci.person_id) AS actor_count,
    MAX(th.depth) AS max_depth,
    STRING_AGG(DISTINCT ck.keyword, ', ') AS keywords,
    CASE 
        WHEN MAX(th.production_year) IS NULL THEN 'No Production Year'
        ELSE MAX(th.production_year)::text
    END AS latest_production_year,
    SUM(CASE WHEN c.role_id IS NULL THEN 1 ELSE 0 END) AS null_role_count
FROM 
    title_hierarchy th
LEFT JOIN 
    complete_cast cc ON th.title_id = cc.movie_id
LEFT JOIN 
    cast_info ci ON cc.subject_id = ci.person_id
LEFT JOIN 
    movie_keyword mk ON mk.movie_id = th.title_id
LEFT JOIN 
    keyword ck ON mk.keyword_id = ck.id
LEFT JOIN 
    role_type c ON ci.role_id = c.id
GROUP BY 
    th.title_path, th.production_year
HAVING 
    COUNT(DISTINCT ci.person_id) > 3
ORDER BY 
    latest_production_year DESC NULLS LAST, max_depth ASC
LIMIT 10;