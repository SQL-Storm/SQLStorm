
WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        1 AS level,
        mt.title AS path
    FROM 
        aka_title mt
    WHERE 
        mt.production_year = 2023
    UNION ALL
    SELECT 
        ml.linked_movie_id,
        m.title,
        m.production_year,
        mh.level + 1,
        CONCAT(mh.path, ' > ', m.title) AS path
    FROM 
        movie_link ml
    JOIN 
        aka_title m ON ml.linked_movie_id = m.id
    JOIN 
        MovieHierarchy mh ON ml.movie_id = mh.movie_id
)
SELECT 
    mh.path,
    mh.title AS main_movie_title,
    mh.production_year AS main_movie_year,
    ARRAY_AGG(DISTINCT c.name) AS cast_names,
    COUNT(DISTINCT k.keyword) AS keyword_count,
    COUNT(DISTINCT mc.company_id) AS company_count,
    SUM(CASE WHEN mc.note IS NOT NULL THEN 1 ELSE 0 END) AS companies_with_notes
FROM 
    MovieHierarchy mh
LEFT JOIN 
    complete_cast cc ON mh.movie_id = cc.movie_id
LEFT JOIN 
    cast_info c ON cc.subject_id = c.person_id
LEFT JOIN 
    movie_keyword mk ON mh.movie_id = mk.movie_id
LEFT JOIN 
    keyword k ON mk.keyword_id = k.id
LEFT JOIN 
    movie_companies mc ON mh.movie_id = mc.movie_id
GROUP BY 
    mh.path, mh.title, mh.production_year
ORDER BY 
    mh.production_year DESC, mh.path;
