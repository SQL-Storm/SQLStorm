
WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        0 AS level,
        mt.production_year
    FROM 
        aka_title mt
    WHERE 
        mt.kind_id = 1 
    
    UNION ALL 
    
    SELECT 
        ml.linked_movie_id AS movie_id,
        at.title,
        mh.level + 1,
        at.production_year
    FROM 
        movie_link ml
    JOIN 
        aka_title at ON ml.linked_movie_id = at.id
    JOIN 
        MovieHierarchy mh ON ml.movie_id = mh.movie_id
)
SELECT 
    m.title AS MovieTitle,
    m.production_year AS ProductionYear,
    COUNT(DISTINCT c.person_id) FILTER (WHERE c.role_id IS NOT NULL) AS TotalCast,
    AVG(mi.rating) AS AverageRating,
    ARRAY_AGG(DISTINCT ak.name) AS AlternateNames,
    ARRAY_AGG(DISTINCT k.keyword) AS Keywords,
    ROW_NUMBER() OVER (ORDER BY m.production_year DESC) AS Rank
FROM 
    MovieHierarchy m
LEFT JOIN 
    complete_cast cc ON m.movie_id = cc.movie_id
LEFT JOIN 
    cast_info c ON c.movie_id = m.movie_id
LEFT JOIN 
    aka_name ak ON ak.person_id = c.person_id
LEFT JOIN 
    movie_info mi ON mi.movie_id = m.movie_id AND mi.info_type_id = (SELECT id FROM info_type WHERE info = 'rating') 
LEFT JOIN 
    movie_keyword mk ON mk.movie_id = m.movie_id
LEFT JOIN 
    keyword k ON k.id = mk.keyword_id
GROUP BY 
    m.movie_id, m.title, m.production_year
HAVING 
    COALESCE(AVG(mi.rating), 0) > 7.0 AND COUNT(DISTINCT c.person_id) > 5 
ORDER BY 
    m.production_year DESC;
