WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        mt.id AS movie_id, 
        mt.title, 
        mt.production_year,
        1 AS level
    FROM 
        aka_title mt
    WHERE 
        mt.kind_id = 1 
    
    UNION ALL
    
    SELECT 
        ml.linked_movie_id AS movie_id,
        at.title,
        at.production_year,
        mh.level + 1
    FROM 
        movie_link ml
    JOIN 
        aka_title at ON ml.linked_movie_id = at.id
    JOIN 
        movie_hierarchy mh ON ml.movie_id = mh.movie_id
)

SELECT 
    mk.keyword,
    COUNT(DISTINCT mk.movie_id) AS movie_count,
    AVG(CASE WHEN age(mh.production_year) < INTERVAL '10 years' THEN 1 ELSE NULL END) AS recent_movie_percentage,
    STRING_AGG(DISTINCT CONCAT(p.name, ' (', c.kind, ')'), '; ') AS top_cast
FROM 
    movie_keyword mk
JOIN 
    aka_title at ON mk.movie_id = at.id
LEFT JOIN 
    complete_cast cc ON at.id = cc.movie_id
LEFT JOIN 
    cast_info ci ON cc.subject_id = ci.person_id
LEFT JOIN 
    aka_name p ON ci.person_id = p.person_id
LEFT JOIN 
    comp_cast_type c ON ci.person_role_id = c.id
LEFT JOIN 
    movie_info mi ON at.id = mi.movie_id AND mi.info_type_id = 1 
LEFT JOIN 
    movie_hierarchy mh ON at.id = mh.movie_id
WHERE 
    mk.keyword IS NOT NULL
    AND at.production_year >= 1920
GROUP BY 
    mk.keyword
HAVING 
    COUNT(DISTINCT mk.movie_id) > 5
ORDER BY 
    movie_count DESC;