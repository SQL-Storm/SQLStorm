
WITH RankedMovies AS (
    SELECT 
        a.title, 
        a.production_year, 
        COUNT(c.id) AS cast_count,
        ROW_NUMBER() OVER (PARTITION BY a.production_year ORDER BY COUNT(c.id) DESC) AS rank
    FROM 
        aka_title a
    LEFT JOIN 
        cast_info c ON a.id = c.movie_id
    GROUP BY 
        a.title, a.production_year
),
TopMovies AS (
    SELECT 
        *
    FROM 
        RankedMovies
    WHERE 
        rank <= 5
),
CompanyMovies AS (
    SELECT 
        m.movie_id,
        co.name AS company_name,
        ct.kind AS company_type
    FROM 
        movie_companies m
    JOIN 
        company_name co ON m.company_id = co.id
    JOIN 
        company_type ct ON m.company_type_id = ct.id
),
MovieDetails AS (
    SELECT 
        t.title, 
        t.production_year, 
        COALESCE(c.company_name, 'Unknown') AS casting_company,
        k.keyword AS movie_keyword,
        COUNT(DISTINCT pc.id) AS person_count
    FROM 
        TopMovies t
    LEFT JOIN 
        CompanyMovies c ON t.id = c.movie_id
    LEFT JOIN 
        movie_keyword mk ON t.id = mk.movie_id
    LEFT JOIN 
        keyword k ON mk.keyword_id = k.id
    LEFT JOIN 
        cast_info ci ON t.id = ci.movie_id
    LEFT JOIN 
        aka_name an ON ci.person_id = an.person_id
    LEFT JOIN 
        person_info pi ON an.person_id = pi.person_id
    LEFT JOIN 
        role_type rt ON ci.role_id = rt.id
    GROUP BY 
        t.title, t.production_year, c.company_name, k.keyword
)
SELECT 
    md.title,
    md.production_year,
    COUNT(DISTINCT md.casting_company) AS distinct_production_companies,
    STRING_AGG(DISTINCT md.movie_keyword, ', ') AS keywords,
    AVG(NULLIF(md.person_count, 0)) AS avg_cast_per_movie
FROM 
    MovieDetails md
GROUP BY 
    md.title, md.production_year
ORDER BY 
    md.production_year DESC, 
    COUNT(md.title) DESC;
