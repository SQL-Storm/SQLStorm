
WITH RankedMovies AS (
    SELECT 
        t.title,
        t.production_year,
        COUNT(DISTINCT c.person_id) AS actor_count,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY COUNT(DISTINCT c.person_id) DESC) AS rank
    FROM 
        aka_title t
    LEFT JOIN 
        cast_info c ON t.id = c.movie_id
    GROUP BY 
        t.title, t.production_year
),
MoviesWithDetails AS (
    SELECT 
        rm.title,
        rm.production_year,
        rm.actor_count,
        COALESCE(mk.keyword, 'No Keywords') AS keyword,
        COALESCE(com.name, 'Independent') AS company_name
    FROM 
        RankedMovies rm
    LEFT JOIN 
        movie_keyword mk ON rm.title = mk.movie_id
    LEFT JOIN 
        movie_companies mc ON rm.title = mc.movie_id
    LEFT JOIN 
        company_name com ON mc.company_id = com.id
)
SELECT 
    mwd.title,
    mwd.production_year,
    mwd.actor_count,
    mwd.keyword,
    CASE 
        WHEN mwd.actor_count > 5 THEN 'Blockbuster'
        WHEN mwd.actor_count BETWEEN 3 AND 5 THEN 'Moderate'
        ELSE 'Indie'
    END AS movie_category
FROM 
    MoviesWithDetails mwd
WHERE 
    mwd.production_year BETWEEN 2000 AND 2023
    AND mwd.actor_count IS NOT NULL
ORDER BY 
    mwd.production_year DESC, 
    mwd.actor_count DESC
LIMIT 50;
