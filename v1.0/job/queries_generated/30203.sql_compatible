
WITH RECURSIVE movie_hierarchy AS (
    SELECT
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        1 AS level
    FROM
        aka_title mt
    WHERE
        mt.production_year >= 2000 
    UNION ALL
    SELECT
        ml.linked_movie_id,
        mt.title,
        mt.production_year,
        mh.level + 1
    FROM
        movie_link ml
    JOIN
        aka_title mt ON ml.movie_id = mt.id
    JOIN
        movie_hierarchy mh ON ml.movie_id = mh.movie_id
)
SELECT
    mh.title,
    mh.production_year,
    COUNT(DISTINCT cc.subject_id) AS cast_count,
    STRING_AGG(DISTINCT cn.name, ', ') AS cast_names,
    COALESCE(cn.gender, 'UNKNOWN') AS lead_gender,
    MAX(k.keyword) AS keywords,
    AVG(CASE WHEN mi.info IS NOT NULL THEN CAST(mii.note AS numeric) ELSE NULL END) AS average_info_note
FROM
    movie_hierarchy mh
LEFT JOIN
    complete_cast cc ON mh.movie_id = cc.movie_id
LEFT JOIN
    cast_info ci ON ci.movie_id = mh.movie_id
LEFT JOIN
    aka_name cn ON cc.subject_id = cn.person_id
LEFT JOIN
    movie_keyword mk ON mh.movie_id = mk.movie_id
LEFT JOIN
    keyword k ON mk.keyword_id = k.id
LEFT JOIN
    movie_info mi ON mh.movie_id = mi.movie_id
LEFT JOIN
    movie_info_idx mii ON mi.movie_id = mii.movie_id AND mi.info_type_id = mii.info_type_id
WHERE
    mh.level <= 2 
GROUP BY
    mh.movie_id, mh.title, mh.production_year, cn.gender
ORDER BY
    mh.production_year DESC, cast_count DESC
LIMIT 10;
