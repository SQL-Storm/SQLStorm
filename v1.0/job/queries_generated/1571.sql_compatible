
WITH RankedMovies AS (
    SELECT 
        mt.title,
        mt.production_year,
        COUNT(DISTINCT ci.person_id) AS total_cast,
        RANK() OVER (PARTITION BY mt.production_year ORDER BY COUNT(DISTINCT ci.person_id) DESC) AS rank_by_cast,
        CASE 
            WHEN mt.production_year >= 2000 THEN 'Modern'
            ELSE 'Classic'
        END AS era
    FROM 
        aka_title mt
    JOIN 
        complete_cast cc ON mt.id = cc.movie_id
    JOIN 
        cast_info ci ON cc.subject_id = ci.id
    WHERE 
        mt.production_year IS NOT NULL
    GROUP BY 
        mt.title, mt.production_year
),
FilteredMovies AS (
    SELECT 
        rm.title,
        rm.production_year,
        rm.total_cast,
        rm.era,
        rm.rank_by_cast
    FROM 
        RankedMovies rm
    WHERE 
        rm.rank_by_cast <= 5
),
MovieKeywords AS (
    SELECT 
        mt.title,
        STRING_AGG(mk.keyword, ', ') AS keywords
    FROM 
        aka_title mt
    JOIN 
        movie_keyword mk ON mt.id = mk.movie_id
    GROUP BY 
        mt.title
)

SELECT 
    fm.title,
    fm.production_year,
    fm.total_cast,
    fm.era,
    COALESCE(mk.keywords, 'No Keywords') AS keywords
FROM 
    FilteredMovies fm
LEFT JOIN 
    MovieKeywords mk ON fm.title = mk.title
WHERE 
    (fm.era = 'Modern' AND fm.production_year BETWEEN 2010 AND 2023)
    OR (fm.era = 'Classic' AND fm.production_year < 2000)
ORDER BY 
    fm.production_year DESC, fm.total_cast DESC;
