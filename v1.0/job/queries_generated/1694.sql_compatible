
WITH RankedMovies AS (
    SELECT 
        m.id AS movie_id, 
        m.title, 
        m.production_year, 
        ROW_NUMBER() OVER (PARTITION BY m.production_year ORDER BY m.production_year DESC) AS rank
    FROM title m
    WHERE m.production_year IS NOT NULL
),
ActorMovieCount AS (
    SELECT 
        c.person_id, 
        COUNT(DISTINCT c.movie_id) AS movie_count
    FROM cast_info c
    GROUP BY c.person_id
),
TopActors AS (
    SELECT 
        a.id, 
        ak.name AS actor_name, 
        COALESCE(amc.movie_count, 0) AS movie_count
    FROM aka_name ak
    LEFT JOIN ActorMovieCount amc ON ak.person_id = amc.person_id
    WHERE ak.person_id IS NOT NULL
),
MoviesWithRole AS (
    SELECT 
        t.title AS movie_title, 
        t.production_year, 
        r.role AS role,
        COUNT(DISTINCT c.id) AS number_of_cast
    FROM title t
    JOIN cast_info c ON t.id = c.movie_id
    JOIN role_type r ON c.role_id = r.id
    GROUP BY t.title, t.production_year, r.role
),
KeyMovies AS (
    SELECT 
        km.movie_id, 
        k.keyword 
    FROM movie_keyword km
    JOIN keyword k ON km.keyword_id = k.id
    WHERE k.keyword LIKE '%action%'
),
FinalResults AS (
    SELECT 
        ta.actor_name, 
        ta.movie_count, 
        mw.role,
        mw.number_of_cast,
        rm.title AS ranked_movie_title,
        rm.production_year
    FROM TopActors ta
    LEFT JOIN MoviesWithRole mw ON ta.movie_count > 5
    LEFT JOIN RankedMovies rm ON mw.production_year = rm.production_year
    WHERE ta.movie_count >= 10
)
SELECT 
    fr.actor_name, 
    fr.movie_count, 
    fr.role, 
    fr.number_of_cast, 
    fr.ranked_movie_title, 
    fr.production_year 
FROM FinalResults fr
ORDER BY fr.movie_count DESC, fr.production_year ASC
LIMIT 50 OFFSET 0;
