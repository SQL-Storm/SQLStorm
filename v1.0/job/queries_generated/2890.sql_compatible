
WITH MovieDetails AS (
    SELECT 
        t.id AS title_id,
        t.title,
        t.production_year,
        ARRAY_AGG(DISTINCT k.keyword) AS keywords,
        COUNT(DISTINCT c.person_id) AS cast_count
    FROM 
        aka_title t
    LEFT JOIN 
        movie_keyword mk ON t.id = mk.movie_id
    LEFT JOIN 
        keyword k ON mk.keyword_id = k.id
    LEFT JOIN 
        complete_cast cc ON t.id = cc.movie_id
    LEFT JOIN 
        cast_info c ON cc.subject_id = c.id
    GROUP BY 
        t.id, t.title, t.production_year
),
PersonRoles AS (
    SELECT
        c.person_id,
        c.movie_id,
        r.role,
        COUNT(r.role) OVER (PARTITION BY c.person_id ORDER BY c.nr_order) AS total_roles
    FROM 
        cast_info c
    JOIN 
        role_type r ON c.role_id = r.id
),
TopCast AS (
    SELECT 
        person_id,
        COUNT(*) AS role_count
    FROM 
        PersonRoles
    GROUP BY 
        person_id
    HAVING 
        COUNT(*) > 1
),
RankedMovies AS (
    SELECT 
        md.title_id,
        md.title,
        md.production_year,
        md.keywords,
        md.cast_count,
        RANK() OVER (ORDER BY md.production_year DESC, md.cast_count DESC) AS rank
    FROM 
        MovieDetails md
    WHERE 
        md.production_year IS NOT NULL
)
SELECT 
    rm.title,
    rm.production_year,
    COALESCE(tc.role_count, 0) AS top_cast_count,
    CASE 
        WHEN md.keywords IS NOT NULL THEN STRING_AGG(DISTINCT md.keywords, ', ')
        ELSE 'No Keywords'
    END AS keywords_list
FROM 
    RankedMovies rm
LEFT JOIN 
    TopCast tc ON rm.title_id IN (SELECT DISTINCT movie_id FROM cast_info WHERE person_id = tc.person_id)
LEFT JOIN 
    MovieDetails md ON rm.title_id = md.title_id
WHERE 
    rm.cast_count > 0
ORDER BY 
    rm.rank, rm.production_year DESC;
