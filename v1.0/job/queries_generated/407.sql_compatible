
WITH RankedMovies AS (
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        COUNT(DISTINCT c.person_id) OVER (PARTITION BY t.id) AS actor_count,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.production_year DESC) AS year_rank
    FROM 
        aka_title t
    LEFT JOIN 
        cast_info c ON t.id = c.movie_id
    WHERE 
        t.kind_id IN (SELECT id FROM kind_type WHERE kind LIKE '%movie%')
), 

CompanyInfo AS (
    SELECT 
        mc.movie_id, 
        cn.name AS company_name,
        ct.kind AS company_kind,
        COUNT(DISTINCT mc.company_id) AS company_count
    FROM 
        movie_companies mc
    JOIN 
        company_name cn ON mc.company_id = cn.id
    JOIN 
        company_type ct ON mc.company_type_id = ct.id
    GROUP BY 
        mc.movie_id, 
        cn.name,
        ct.kind
), 

MovieDetails AS (
    SELECT 
        rm.movie_id,
        rm.title,
        rm.production_year,
        COALESCE(ci.company_name, 'Independent') AS company_name,
        rm.actor_count,
        COALESCE(cm.company_count, 0) AS company_count
    FROM 
        RankedMovies rm
    LEFT JOIN 
        CompanyInfo ci ON rm.movie_id = ci.movie_id
    LEFT JOIN 
        (SELECT movie_id, COUNT(DISTINCT company_id) AS company_count FROM movie_companies GROUP BY movie_id) cm 
    ON rm.movie_id = cm.movie_id
)

SELECT 
    md.title AS movie_title,
    md.production_year,
    md.company_name,
    md.actor_count,
    CASE 
        WHEN md.actor_count > 10 THEN 'Blockbuster'
        WHEN md.actor_count BETWEEN 5 AND 10 THEN 'Moderate'
        ELSE 'Indie'
    END AS movie_type
FROM 
    MovieDetails md
WHERE 
    md.production_year >= 2000
ORDER BY 
    md.actor_count DESC, 
    md.production_year DESC;