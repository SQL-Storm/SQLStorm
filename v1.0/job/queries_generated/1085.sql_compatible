
WITH RankedMovies AS (
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.title) AS title_rank
    FROM 
        aka_title t
    WHERE 
        t.production_year IS NOT NULL
),
ActorMovieCount AS (
    SELECT 
        c.person_id,
        COUNT(DISTINCT c.movie_id) AS movie_count
    FROM 
        cast_info c
    JOIN 
        RankedMovies rm ON c.movie_id = rm.movie_id
    GROUP BY 
        c.person_id
),
TopActors AS (
    SELECT 
        a.id AS actor_id,
        ka.name,
        ac.movie_count
    FROM 
        aka_name ka
    JOIN 
        ActorMovieCount ac ON ka.person_id = ac.person_id
    WHERE 
        ac.movie_count = (SELECT MAX(movie_count) FROM ActorMovieCount)
)
SELECT 
    t.title,
    t.production_year,
    COALESCE(k.keyword, 'No Keywords') AS keyword,
    a.name AS actor_name,
    CASE
        WHEN t.production_year < 2000 THEN 'Old Movie'
        ELSE 'New Movie' 
    END AS movie_age,
    CASE
        WHEN a.name IS NULL THEN 'Unknown Actor'
        ELSE 'Known Actor' 
    END AS actor_status
FROM 
    RankedMovies t
LEFT JOIN 
    movie_keyword mk ON t.movie_id = mk.movie_id
LEFT JOIN 
    keyword k ON mk.keyword_id = k.id
LEFT JOIN 
    TopActors a ON a.actor_id IN (
        SELECT DISTINCT c.person_id
        FROM cast_info c
        WHERE c.movie_id = t.movie_id
    )
GROUP BY 
    t.title,
    t.production_year,
    k.keyword,
    a.name
ORDER BY 
    t.production_year DESC, 
    t.title;
