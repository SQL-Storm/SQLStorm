WITH RECURSIVE RecursiveMovies AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        ct.kind AS company_type,
        COALESCE(SUM(CASE WHEN ci.note IS NOT NULL THEN 1 ELSE 0 END), 0) AS cast_count,
        ROW_NUMBER() OVER (PARTITION BY mt.production_year ORDER BY mt.id) AS year_rank
    FROM 
        aka_title AS mt
    LEFT JOIN 
        movie_companies AS mc ON mt.id = mc.movie_id
    LEFT JOIN 
        company_name AS cn ON mc.company_id = cn.id
    LEFT JOIN 
        company_type AS ct ON mc.company_type_id = ct.id
    LEFT JOIN 
        complete_cast AS cc ON mt.id = cc.movie_id
    LEFT JOIN 
        cast_info AS ci ON cc.subject_id = ci.person_id
    WHERE 
        mt.production_year IS NOT NULL
    GROUP BY 
        mt.id, mt.title, mt.production_year, ct.kind
    HAVING 
        SUM(CASE WHEN ci.note IS NOT NULL THEN 1 ELSE 0 END) > 0
    ORDER BY 
        mt.production_year DESC
    LIMIT 10
),
MovieDetails AS (
    SELECT 
        rm.movie_id,
        rm.title,
        rm.production_year,
        rm.company_type,
        rm.cast_count,
        (SELECT COUNT(*) FROM movie_info WHERE movie_id = rm.movie_id) AS info_count,
        (SELECT STRING_AGG(DISTINCT mk.keyword, ', ') FROM movie_keyword AS mk WHERE mk.movie_id = rm.movie_id) AS keywords
    FROM 
        RecursiveMovies AS rm
)
SELECT 
    md.movie_id,
    md.title,
    md.production_year,
    COALESCE(md.company_type, 'Unknown') AS company_type,
    md.cast_count,
    md.info_count,
    COALESCE(md.keywords, 'No keywords') AS keywords
FROM 
    MovieDetails AS md
LEFT JOIN 
    title AS t ON md.movie_id = t.id
LEFT JOIN 
    aka_name AS an ON md.movie_id = an.person_id AND an.md5sum IS NULL
WHERE 
    (md.cast_count > 5 AND md.info_count BETWEEN 0 AND 10) 
    OR (md.production_year < 2000 AND md.keywords LIKE '%cult%')
ORDER BY 
    md.production_year DESC, md.cast_count DESC;