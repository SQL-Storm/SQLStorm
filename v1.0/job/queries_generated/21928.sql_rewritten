WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        COALESCE(mt.production_year, 'Unknown') AS production_year,
        0 AS level 
    FROM 
        aka_title mt
    WHERE 
        mt.kind_id IN (SELECT kt.id FROM kind_type kt WHERE kt.kind = 'feature')
    
    UNION ALL

    SELECT 
        ml.linked_movie_id AS movie_id,
        at.title,
        COALESCE(at.production_year, 'Unknown') AS production_year,
        mh.level + 1
    FROM 
        movie_link ml
    JOIN 
        aka_title at ON ml.movie_id = at.id
    JOIN 
        MovieHierarchy mh ON ml.movie_id = mh.movie_id
)

, CompanyInfo AS (
    SELECT 
        mc.movie_id,
        GROUP_CONCAT(DISTINCT cn.name ORDER BY cn.name) AS companies,
        COUNT(DISTINCT mc.company_id) AS num_companies
    FROM 
        movie_companies mc
    JOIN 
        company_name cn ON mc.company_id = cn.id
    GROUP BY 
        mc.movie_id
)

, ActorRoles AS (
    SELECT 
        ci.movie_id,
        ak.name,
        rt.role,
        RANK() OVER (PARTITION BY ci.movie_id ORDER BY ci.nr_order) AS actor_rank
    FROM 
        cast_info ci
    JOIN 
        aka_name ak ON ci.person_id = ak.person_id
    JOIN 
        role_type rt ON ci.role_id = rt.id
)

SELECT 
    mh.movie_id,
    mh.title,
    mh.production_year,
    ci.companies,
    ai.name AS actor_name,
    ar.role,
    ar.actor_rank,
    COUNT(DISTINCT a.movie_id) OVER (PARTITION BY a.movie_id) AS total_roles_played,
    CASE 
        WHEN ar.actor_rank = 1 THEN 'Lead Actor'
        WHEN ar.actor_rank < 5 THEN 'Supporting Actor'
        ELSE 'Background Actor' 
    END AS role_category,
    IIF(mh.production_year = 'Unknown', NULL, mh.production_year) AS normalized_year
FROM 
    MovieHierarchy mh
LEFT JOIN 
    CompanyInfo ci ON mh.movie_id = ci.movie_id
LEFT JOIN 
    ActorRoles ar ON mh.movie_id = ar.movie_id
LEFT JOIN 
    aka_name ai ON ar.name = ai.name
WHERE 
    mh.level < 3
    AND (ci.num_companies IS NULL OR ci.num_companies >= 1)
ORDER BY 
    mh.production_year DESC NULLS LAST, 
    mh.title ASC, 
    ar.actor_rank
LIMIT 100;