
WITH RankedMovies AS (
    SELECT
        t.id AS movie_id,
        t.title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.title) AS title_rank
    FROM
        aka_title t
    WHERE
        t.production_year IS NOT NULL
),
ActorRoles AS (
    SELECT
        c.movie_id,
        a.name AS actor_name,
        r.role AS role_name,
        COUNT(DISTINCT c.person_id) OVER (PARTITION BY c.movie_id) AS total_actors
    FROM
        cast_info c
    JOIN
        aka_name a ON c.person_id = a.person_id
    JOIN
        role_type r ON c.role_id = r.id
),
CompanyDetails AS (
    SELECT 
        mc.movie_id,
        cn.name AS company_name,
        ct.kind AS company_type
    FROM 
        movie_companies mc
    JOIN 
        company_name cn ON mc.company_id = cn.id
    JOIN 
        company_type ct ON mc.company_type_id = ct.id
),
FilteredMovies AS (
    SELECT 
        rm.movie_id,
        rm.title,
        rm.production_year,
        ar.actor_name,
        ar.role_name,
        cd.company_name,
        cd.company_type
    FROM 
        RankedMovies rm
    LEFT JOIN 
        ActorRoles ar ON rm.movie_id = ar.movie_id
    LEFT JOIN 
        CompanyDetails cd ON rm.movie_id = cd.movie_id
)
SELECT 
    f.movie_id,
    f.title,
    f.production_year,
    f.actor_name,
    f.role_name,
    COUNT(DISTINCT f.company_name) AS distinct_companies,
    SUM(CASE WHEN f.company_type = 'Distributor' THEN 1 ELSE 0 END) AS distributor_count
FROM 
    FilteredMovies f
GROUP BY 
    f.movie_id, f.title, f.production_year, f.actor_name, f.role_name
HAVING 
    COUNT(DISTINCT f.actor_name) > 3 OR COUNT(DISTINCT f.company_name) > 2
ORDER BY 
    f.production_year DESC, f.title ASC;
