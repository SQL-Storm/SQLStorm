
WITH ranked_movies AS (
    SELECT
        t.id AS movie_id,
        t.title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY COUNT(ci.person_id) DESC) AS rank_by_cast_count
    FROM
        aka_title t
        LEFT JOIN cast_info ci ON t.id = ci.movie_id
    GROUP BY
        t.id,
        t.title,
        t.production_year
),
popular_actors AS (
    SELECT
        ak.person_id,
        ak.name,
        COUNT(DISTINCT ci.movie_id) AS movies_count
    FROM
        aka_name ak
        JOIN cast_info ci ON ak.person_id = ci.person_id
    GROUP BY
        ak.person_id,
        ak.name
    HAVING
        COUNT(DISTINCT ci.movie_id) > 5
),
movie_details AS (
    SELECT
        rm.movie_id,
        rm.title,
        rm.production_year,
        pa.name AS popular_actor,
        COALESCE(mk.keyword, 'No keywords') AS keywords
    FROM
        ranked_movies rm
        LEFT JOIN popular_actors pa ON pa.movies_count > 5
        LEFT JOIN movie_keyword mk ON mk.movie_id = rm.movie_id
    WHERE
        rm.rank_by_cast_count <= 3
)
SELECT
    md.title,
    md.production_year,
    md.popular_actor,
    STRING_AGG(md.keywords, ', ') AS all_keywords
FROM
    movie_details md
GROUP BY
    md.title,
    md.production_year,
    md.popular_actor
ORDER BY
    md.production_year DESC, 
    md.title ASC;
