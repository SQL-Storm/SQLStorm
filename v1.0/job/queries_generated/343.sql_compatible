
WITH RankedTitles AS (
    SELECT 
        a.id AS aka_id,
        a.name,
        t.title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY a.person_id ORDER BY t.production_year DESC) AS rn
    FROM 
        aka_name a
    JOIN 
        cast_info c ON a.person_id = c.person_id
    JOIN 
        aka_title t ON c.movie_id = t.movie_id
    WHERE 
        a.name IS NOT NULL
),
FilteredTitles AS (
    SELECT 
        rt.aka_id,
        rt.name,
        rt.title,
        rt.production_year
    FROM 
        RankedTitles rt
    WHERE 
        rt.rn <= 3
),
MovieKeywords AS (
    SELECT 
        mk.movie_id,
        STRING_AGG(k.keyword, ', ' ORDER BY k.keyword) AS keywords
    FROM 
        movie_keyword mk
    JOIN 
        keyword k ON mk.keyword_id = k.id
    GROUP BY 
        mk.movie_id
)
SELECT 
    ft.name,
    ft.title,
    ft.production_year,
    COALESCE(mk.keywords, 'No Keywords') AS keywords,
    COUNT(DISTINCT ci.role_id) OVER (PARTITION BY ft.name ORDER BY ft.production_year) AS role_count,
    CASE 
        WHEN ft.production_year < 2000 THEN 'Classic'
        WHEN ft.production_year BETWEEN 2000 AND 2010 THEN 'Modern'
        ELSE 'Recent'
    END AS era
FROM 
    FilteredTitles ft
LEFT JOIN 
    MovieKeywords mk ON ft.title = mk.movie_id
JOIN 
    cast_info ci ON ci.movie_id = mk.movie_id
WHERE 
    ft.name LIKE 'A%' 
    AND ft.production_year IS NOT NULL
GROUP BY 
    ft.name, 
    ft.title, 
    ft.production_year, 
    mk.keywords
ORDER BY 
    ft.production_year DESC, ft.name;
