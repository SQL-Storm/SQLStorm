WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        0 AS level
    FROM 
        aka_title mt
    WHERE 
        mt.production_year >= 2000

    UNION ALL

    SELECT 
        ml.linked_movie_id,
        (SELECT title FROM aka_title WHERE id = ml.linked_movie_id) AS title,
        (SELECT production_year FROM aka_title WHERE id = ml.linked_movie_id) AS production_year,
        mh.level + 1
    FROM 
        movie_link ml
    JOIN 
        movie_hierarchy mh ON mh.movie_id = ml.movie_id
)

SELECT 
    ak.name AS actor_name,
    mt.title AS movie_title,
    mt.production_year,
    STRING_AGG(DISTINCT mk.keyword, ', ') AS keywords,
    COALESCE(COUNT(cc.id), 0) AS total_cast,
    RANK() OVER (PARTITION BY mt.id ORDER BY COUNT(cc.id) DESC) AS role_rank,
    mt.level AS movie_level
FROM 
    movie_hierarchy mt
LEFT JOIN 
    cast_info cc ON cc.movie_id = mt.movie_id
LEFT JOIN 
    aka_name ak ON ak.person_id = cc.person_id
LEFT JOIN 
    movie_keyword mk ON mk.movie_id = mt.movie_id
GROUP BY 
    ak.name, mt.id, mt.title, mt.production_year, mt.level
HAVING 
    COUNT(cc.id) > 1
ORDER BY 
    mt.production_year DESC, role_rank,
    actor_name;