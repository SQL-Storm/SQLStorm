
WITH RECURSIVE MovieHierarchy AS (
    SELECT m.id AS movie_id, m.title, m.production_year, 0 AS level
    FROM aka_title m
    WHERE m.kind_id = (SELECT id FROM kind_type WHERE kind = 'movie')
    
    UNION ALL
    
    SELECT m.id, m.title, m.production_year, mh.level + 1
    FROM aka_title m
    JOIN movie_link ml ON m.id = ml.linked_movie_id
    JOIN MovieHierarchy mh ON ml.movie_id = mh.movie_id
),
TopMovies AS (
    SELECT
        mh.title,
        mh.production_year,
        COUNT(cc.id) AS cast_count,
        ROW_NUMBER() OVER (PARTITION BY mh.production_year ORDER BY COUNT(cc.id) DESC) AS rank
    FROM MovieHierarchy mh
    LEFT JOIN complete_cast cc ON mh.movie_id = cc.movie_id
    GROUP BY mh.title, mh.production_year
),
PopularKeywords AS (
    SELECT
        mk.movie_id,
        k.keyword,
        COUNT(mk.id) AS keyword_count,
        RANK() OVER (PARTITION BY k.keyword ORDER BY COUNT(mk.id) DESC) AS keyword_rank
    FROM movie_keyword mk
    JOIN keyword k ON mk.keyword_id = k.id
    GROUP BY mk.movie_id, k.keyword
)
SELECT
    tm.title,
    tm.production_year,
    tm.cast_count,
    COALESCE(pk.keyword, 'No Keywords') AS popular_keyword,
    pk.keyword_count,
    COALESCE(NULLIF(tm.rank, 1), 0) AS non_top_movie_rank
FROM TopMovies tm
LEFT JOIN PopularKeywords pk ON tm.movie_id = pk.movie_id AND pk.keyword_rank = 1
WHERE tm.cast_count > 5
ORDER BY tm.production_year DESC, tm.cast_count DESC;
