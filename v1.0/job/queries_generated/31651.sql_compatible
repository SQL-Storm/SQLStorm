
WITH RECURSIVE ActorHierarchy AS (
    SELECT 
        c.person_id,
        a.name AS actor_name,
        1 AS levels,
        c.movie_id
    FROM 
        cast_info c
    JOIN 
        aka_name a ON c.person_id = a.person_id
    WHERE 
        c.movie_id IN (SELECT id FROM aka_title WHERE kind_id = 1) 

    UNION ALL

    SELECT 
        c.person_id,
        a.name AS actor_name,
        ah.levels + 1,
        c.movie_id
    FROM 
        cast_info c
    JOIN 
        aka_name a ON c.person_id = a.person_id
    JOIN 
        ActorHierarchy ah ON c.movie_id = ah.movie_id 
)

SELECT 
    ah.actor_name,
    t.title,
    t.production_year,
    c.kind AS company_type,
    COUNT(DISTINCT mw.id) AS movie_keyword_count,
    STRING_AGG(DISTINCT kw.keyword, ', ') AS keywords,
    AVG(mo.production_year - t.production_year) AS avg_year_difference,
    COUNT(DISTINCT c1.movie_id) FILTER (WHERE c1.nr_order IS NOT NULL) AS co_actor_count
FROM 
    ActorHierarchy ah
JOIN 
    cast_info c1 ON ah.person_id = c1.person_id
JOIN 
    aka_title t ON c1.movie_id = t.id
LEFT JOIN 
    movie_keyword mw ON t.id = mw.movie_id
LEFT JOIN 
    keyword kw ON mw.keyword_id = kw.id
LEFT JOIN 
    movie_companies mc ON t.id = mc.movie_id
LEFT JOIN 
    company_type c ON mc.company_type_id = c.id
JOIN 
    (SELECT 
         ci.person_id, MIN(at.production_year) AS first_movie_year
     FROM 
         cast_info ci
     JOIN 
         aka_title at ON ci.movie_id = at.id
     GROUP BY 
         ci.person_id
    ) AS first_movie ON ah.person_id = first_movie.person_id
WHERE 
    t.production_year >= 2000 
GROUP BY 
    ah.actor_name, t.title, t.production_year, c.kind
ORDER BY 
    avg_year_difference DESC, movie_keyword_count DESC
LIMIT 10;
