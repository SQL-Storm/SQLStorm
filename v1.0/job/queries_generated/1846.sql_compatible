
WITH RankedMovies AS (
    SELECT 
        a.title, 
        a.production_year, 
        ROW_NUMBER() OVER(PARTITION BY a.production_year ORDER BY COUNT(DISTINCT c.person_id) DESC) as actor_count_rank
    FROM 
        aka_title a
    LEFT JOIN 
        cast_info c ON a.id = c.movie_id 
    WHERE 
        a.production_year IS NOT NULL
    GROUP BY 
        a.title, a.production_year
), MovieInfo AS (
    SELECT 
        m.id AS movie_id,
        m.title,
        COALESCE(mk.keyword, 'No Keywords') AS keyword,
        CASE 
            WHEN ci.note IS NOT NULL THEN ci.note
            ELSE 'No Note Available'
        END AS cast_note
    FROM 
        title m
    LEFT JOIN 
        movie_keyword mk ON m.id = mk.movie_id
    LEFT JOIN 
        complete_cast cc ON m.id = cc.movie_id
    LEFT JOIN 
        cast_info ci ON cc.subject_id = ci.person_id AND ci.movie_id = m.id
    WHERE 
        m.kind_id = (SELECT id FROM kind_type WHERE kind = 'movie')
), CompanyDetails AS (
    SELECT 
        mc.movie_id,
        STRING_AGG(DISTINCT cn.name, ', ') AS companies
    FROM 
        movie_companies mc
    LEFT JOIN 
        company_name cn ON mc.company_id = cn.id
    GROUP BY 
        mc.movie_id
)
SELECT 
    rm.title, 
    rm.production_year, 
    mi.keyword,
    cd.companies,
    COUNT(DISTINCT ci.person_id) AS total_cast_members,
    MAX(CASE WHEN ci.role_id IS NULL THEN 'Unknown Role' ELSE rt.role END) AS lead_role
FROM 
    RankedMovies rm
JOIN 
    MovieInfo mi ON rm.title = mi.title AND rm.production_year = mi.production_year
LEFT JOIN 
    complete_cast cc ON rm.title = cc.subject_id
LEFT JOIN 
    cast_info ci ON cc.subject_id = ci.person_id 
LEFT JOIN 
    role_type rt ON ci.role_id = rt.id
LEFT JOIN 
    CompanyDetails cd ON rm.title = cd.movie_id
GROUP BY 
    rm.title, rm.production_year, mi.keyword, cd.companies
HAVING 
    COUNT(DISTINCT ci.person_id) > 5
ORDER BY 
    rm.production_year DESC, total_cast_members DESC;
