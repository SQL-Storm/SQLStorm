
WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        m.id AS movie_id,
        m.title,
        m.production_year,
        1 AS level
    FROM 
        aka_title m
    WHERE 
        m.kind_id = (SELECT id FROM kind_type WHERE kind = 'movie')
    UNION ALL
    SELECT 
        m.linked_movie_id AS movie_id,
        m.title,
        m.production_year,
        mh.level + 1 AS level
    FROM 
        movie_link ml
    JOIN 
        movie_hierarchy mh ON ml.movie_id = mh.movie_id
    JOIN 
        aka_title m ON ml.linked_movie_id = m.id
    WHERE 
        mh.level < 5
), actor_stats AS (
    SELECT 
        ci.person_id,
        a.name AS actor_name,
        COUNT(DISTINCT ci.movie_id) AS movie_count,
        AVG(EXTRACT(YEAR FROM DATE '2024-10-01') - a.production_year) AS avg_year_diff
    FROM 
        cast_info ci
    JOIN 
        aka_name a ON ci.person_id = a.person_id
    JOIN 
        aka_title t ON ci.movie_id = t.id
    JOIN 
        movie_hierarchy mh ON t.id = mh.movie_id
    GROUP BY 
        ci.person_id, a.name
), popular_genre AS (
    SELECT 
        k.keyword,
        COUNT(m.movie_id) AS genre_count
    FROM 
        movie_keyword mk
    JOIN 
        keyword k ON mk.keyword_id = k.id
    JOIN 
        aka_title m ON mk.movie_id = m.id
    GROUP BY 
        k.keyword
    HAVING 
        COUNT(m.movie_id) > 5
), title_stats AS (
    SELECT 
        t.id AS title_id,
        t.title,
        COALESCE(r.role, 'Unknown') AS role,
        SUM(CASE WHEN c.nr_order IS NOT NULL THEN 1 ELSE 0 END) AS total_cast
    FROM 
        aka_title t
    LEFT JOIN 
        cast_info c ON t.id = c.movie_id
    LEFT JOIN 
        role_type r ON c.person_role_id = r.id
    GROUP BY 
        t.id, t.title, r.role
)

SELECT 
    mh.title AS movie_title,
    mh.production_year,
    as.actor_name,
    as.movie_count AS actor_movies,
    as.avg_year_diff AS actor_year_diff,
    pg.keyword AS popular_genre,
    ts.title AS title_name,
    ts.role,
    ts.total_cast
FROM 
    movie_hierarchy mh
LEFT JOIN 
    actor_stats as ON mh.movie_id = as.person_id
LEFT JOIN 
    popular_genre pg ON mh.title ILIKE '%' || pg.keyword || '%' 
LEFT JOIN 
    title_stats ts ON mh.movie_id = ts.title_id
WHERE 
    mh.level = 1
    AND (as.avg_year_diff IS NULL OR as.avg_year_diff < 10)
ORDER BY 
    mh.production_year DESC NULLS LAST,
    as.movie_count DESC;
