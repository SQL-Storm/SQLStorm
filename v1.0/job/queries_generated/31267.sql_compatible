
WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        m.id AS movie_id,
        t.title AS movie_title,
        1 AS depth
    FROM 
        aka_title t
    JOIN 
        movie_link ml ON t.id = ml.movie_id
    JOIN 
        title m ON ml.linked_movie_id = m.id 
    WHERE 
        t.kind_id = 1 

    UNION ALL

    SELECT 
        m.id AS movie_id,
        t.title AS movie_title,
        mh.depth + 1
    FROM 
        movie_hierarchy mh
    JOIN 
        movie_link ml ON mh.movie_id = ml.movie_id
    JOIN 
        title m ON ml.linked_movie_id = m.id
    JOIN 
        aka_title t ON m.id = t.id
    WHERE 
        t.kind_id = 1
)

SELECT
    c.person_id,
    a.name AS actor_name,
    COUNT(DISTINCT ch.movie_id) AS movies_count,
    AVG(CASE WHEN mi2.info LIKE '%Award%' THEN 1 ELSE 0 END) AS avg_award_win,
    STRING_AGG(DISTINCT t.title, ', ') AS movie_titles,
    ROW_NUMBER() OVER (PARTITION BY c.person_id ORDER BY COUNT(DISTINCT ch.movie_id) DESC) AS actor_rank
FROM
    cast_info c
JOIN
    aka_name a ON c.person_id = a.person_id
LEFT JOIN
    complete_cast cc ON c.movie_id = cc.movie_id
LEFT JOIN
    movie_info mi ON c.movie_id = mi.movie_id AND mi.info_type_id = (SELECT id FROM info_type WHERE info = 'Awards')
LEFT JOIN
    movie_hierarchy ch ON c.movie_id = ch.movie_id
LEFT JOIN
    title t ON c.movie_id = t.id
WHERE
    a.name IS NOT NULL
    AND t.production_year >= 2000
    AND (mi.info IS NULL OR mi.info <> '') 
GROUP BY
    c.person_id,
    a.name
HAVING
    COUNT(DISTINCT ch.movie_id) > 3
ORDER BY
    movies_count DESC, avg_award_win DESC;
