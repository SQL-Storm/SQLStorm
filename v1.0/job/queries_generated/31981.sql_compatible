
WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        m.id AS movie_id,
        m.title,
        m.production_year,
        NULL AS parent_title,
        0 AS depth
    FROM 
        aka_title m
    WHERE 
        m.episode_of_id IS NULL

    UNION ALL

    SELECT 
        e.id AS movie_id,
        e.title,
        e.production_year,
        p.title AS parent_title,
        depth + 1
    FROM 
        aka_title e
    JOIN 
        aka_title p ON e.episode_of_id = p.id
)

SELECT 
    ak.id AS actor_id,
    ak.name AS actor_name,
    COUNT(DISTINCT mk.keyword) AS keyword_count,
    ARRAY_AGG(DISTINCT m.title) AS movie_titles,
    ROW_NUMBER() OVER (PARTITION BY ak.id ORDER BY COUNT(DISTINCT mk.keyword) DESC) AS rank
FROM 
    cast_info ci
JOIN 
    aka_name ak ON ak.person_id = ci.person_id
LEFT JOIN 
    movie_keyword mk ON mk.movie_id = ci.movie_id
LEFT JOIN 
    movie_hierarchy m ON m.movie_id = ci.movie_id
WHERE 
    ci.nr_order = 1 
    AND ak.name IS NOT NULL 
    AND ak.name <> ''
GROUP BY 
    ak.id, ak.name
HAVING 
    COUNT(DISTINCT mk.keyword) > 0
ORDER BY 
    rank, keyword_count DESC;
