WITH RankedMovies AS (
    SELECT 
        a.id AS aka_id,
        t.title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.title) AS title_rank,
        COUNT(mk.keyword_id) AS keyword_count
    FROM 
        aka_title t
    LEFT JOIN 
        movie_keyword mk ON t.movie_id = mk.movie_id
    GROUP BY 
        a.id, t.title, t.production_year
),

TopAkaNames AS (
    SELECT 
        n.id AS name_id,
        n.name,
        COUNT(ci.person_id) AS cast_count
    FROM 
        aka_name n
    LEFT JOIN 
        cast_info ci ON n.person_id = ci.person_id
    GROUP BY 
        n.id, n.name
    HAVING 
        COUNT(ci.person_id) > 5
    ORDER BY 
        cast_count DESC
    LIMIT 10
),

CompanyMovies AS (
    SELECT 
        mc.movie_id,
        cn.name AS company_name,
        ct.kind AS company_type
    FROM 
        movie_companies mc
    JOIN 
        company_name cn ON mc.company_id = cn.id
    JOIN 
        company_type ct ON mc.company_type_id = ct.id
    WHERE 
        cn.country_code = 'USA'
)

SELECT 
    tm.title,
    tm.production_year,
    tal.name,
    COALESCE(cm.company_name, 'Unknown') AS company_name,
    COALESCE(cm.company_type, 'N/A') AS company_type,
    CASE 
        WHEN rm.title_rank IS NOT NULL THEN rm.title_rank
        ELSE NULL
    END AS title_rank,
    tm.keyword_count,
    COALESCE((SELECT AVG(keyword_count) FROM RankedMovies), 0) AS average_keyword_count
FROM 
    RankedMovies rm
FULL OUTER JOIN 
    TopAkaNames tal ON rm.aka_id = tal.name_id
LEFT JOIN 
    CompanyMovies cm ON rm.movie_id = cm.movie_id
WHERE 
    (rm.production_year IS NOT NULL AND rm.production_year >= 2000)
    OR (tm.keyword_count > 3 AND tal.cast_count > 0)
ORDER BY 
    tm.production_year DESC,
    tal.cast_count DESC,
    COALESCE(cm.company_type, 'Unknown') ASC
LIMIT 50;