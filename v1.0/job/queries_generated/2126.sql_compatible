
WITH RankedMovies AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        RANK() OVER (PARTITION BY mt.production_year ORDER BY mt.production_year DESC, mt.title) AS rank_year,
        COALESCE(mk.keyword, 'No Keyword') AS keyword,
        COUNT(DISTINCT ci.person_id) AS cast_count
    FROM 
        aka_title mt
    LEFT JOIN 
        movie_keyword mk ON mt.id = mk.movie_id
    LEFT JOIN 
        cast_info ci ON mt.id = ci.movie_id
    WHERE 
        mt.production_year >= 2000
    GROUP BY 
        mt.id, mt.title, mt.production_year, mk.keyword
),
CompanyCounts AS (
    SELECT 
        mc.movie_id,
        COUNT(DISTINCT ca.id) AS company_count
    FROM 
        movie_companies mc
    JOIN 
        company_name ca ON mc.company_id = ca.id
    WHERE 
        ca.country_code IS NOT NULL
    GROUP BY 
        mc.movie_id
),
FinalResults AS (
    SELECT 
        rm.movie_id,
        rm.title,
        rm.production_year,
        rm.rank_year,
        rm.keyword,
        rm.cast_count,
        COALESCE(cc.company_count, 0) AS company_count
    FROM 
        RankedMovies rm
    LEFT JOIN 
        CompanyCounts cc ON rm.movie_id = cc.movie_id
)
SELECT 
    fr.title,
    fr.production_year,
    fr.rank_year,
    fr.keyword,
    fr.cast_count,
    fr.company_count,
    CASE 
        WHEN fr.cast_count > 10 THEN 'Highly Casted'
        WHEN fr.cast_count BETWEEN 5 AND 10 THEN 'Moderately Casted'
        ELSE 'Low Casted'
    END AS casting_category
FROM 
    FinalResults fr
WHERE 
    fr.production_year = (SELECT MAX(production_year) FROM FinalResults)
ORDER BY 
    fr.rank_year, fr.title;
