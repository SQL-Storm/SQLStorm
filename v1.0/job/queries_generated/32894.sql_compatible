
WITH RECURSIVE ActorHierarchy AS (
    SELECT 
        c.person_id,
        c.movie_id,
        1 AS depth
    FROM 
        cast_info c
    WHERE 
        c.person_role_id IS NOT NULL
    
    UNION ALL
    
    SELECT 
        c.person_id,
        c.movie_id,
        ah.depth + 1
    FROM 
        cast_info c
    JOIN 
        ActorHierarchy ah ON c.movie_id = ah.movie_id
    WHERE 
        c.person_id != ah.person_id
),
AggregatedRoles AS (
    SELECT 
        a.person_id,
        COUNT(c.id) AS total_movies,
        STRING_AGG(DISTINCT k.keyword ORDER BY k.keyword) AS keywords
    FROM 
        ActorHierarchy a
    JOIN 
        cast_info c ON a.person_id = c.person_id
    LEFT JOIN 
        movie_keyword mk ON c.movie_id = mk.movie_id
    LEFT JOIN 
        keyword k ON mk.keyword_id = k.id
    GROUP BY 
        a.person_id
),
MovieDetails AS (
    SELECT 
        m.title,
        m.production_year,
        ar.total_movies,
        ar.keywords
    FROM 
        aka_title m
    JOIN 
        AggregatedRoles ar ON m.id = ar.total_movies
)

SELECT 
    ak.person_id AS actor_id,
    ak.name,
    COALESCE(m.title, 'No Movies') AS movie_title,
    m.production_year,
    COALESCE(ar.total_movies, 0) AS total_movies,
    ar.keywords
FROM 
    aka_name ak
LEFT JOIN 
    cast_info c ON ak.person_id = c.person_id
LEFT JOIN 
    MovieDetails m ON c.movie_id = m.movie_id
LEFT JOIN 
    AggregatedRoles ar ON ak.person_id = ar.person_id
WHERE 
    (ar.total_movies > 5 OR m.production_year IS NULL)
ORDER BY 
    ak.name;
