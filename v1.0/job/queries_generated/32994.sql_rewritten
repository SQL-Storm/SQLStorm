WITH RECURSIVE movie_hierarchy AS (
    SELECT
        mt.id AS movie_id,
        mt.title AS movie_title,
        1 AS level
    FROM
        aka_title mt
    WHERE
        mt.production_year > 2000
    
    UNION ALL
    
    SELECT
        ml.linked_movie_id AS movie_id,
        at.title AS movie_title,
        mh.level + 1
    FROM
        movie_link ml
    JOIN
        aka_title at ON ml.linked_movie_id = at.id
    JOIN
        movie_hierarchy mh ON ml.movie_id = mh.movie_id
)

SELECT
    mh.movie_title,
    mh.level,
    COUNT(DISTINCT ci.person_id) AS total_cast,
    STRING_AGG(DISTINCT ak.name, ', ') AS cast_names,
    COALESCE(mt.note, 'No note') AS movie_note,
    AVG(CASE WHEN mi.info IS NOT NULL THEN 1 ELSE 0 END) AS has_info_type,
    ROW_NUMBER() OVER (PARTITION BY mh.level ORDER BY mh.movie_title) AS rank_within_level
FROM
    movie_hierarchy mh
LEFT JOIN
    complete_cast cc ON mh.movie_id = cc.movie_id
LEFT JOIN
    cast_info ci ON cc.subject_id = ci.person_id
LEFT JOIN
    aka_name ak ON ci.person_id = ak.person_id 
LEFT JOIN
    movie_info mi ON mh.movie_id = mi.movie_id AND mi.info_type_id IN (
        SELECT id FROM info_type WHERE info = 'Genre'
    )
LEFT JOIN
    aka_title mt ON mh.movie_id = mt.id 
GROUP BY
    mh.movie_title, mh.level, mt.note
HAVING 
    COUNT(DISTINCT ci.person_id) > 0 OR
    AVG(CASE WHEN mi.info IS NOT NULL THEN 1 ELSE 0 END) > 0
ORDER BY
    mh.level, total_cast DESC;