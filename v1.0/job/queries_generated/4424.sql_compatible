
WITH ranked_titles AS (
    SELECT 
        t.title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.production_year DESC, t.title) AS rank
    FROM 
        aka_title t
    WHERE
        t.production_year IS NOT NULL
),
movie_actor_info AS (
    SELECT 
        c.movie_id,
        a.name AS actor_name,
        r.role AS role_name,
        COUNT(*) OVER (PARTITION BY c.movie_id) AS actor_count
    FROM 
        cast_info c
    JOIN 
        aka_name a ON c.person_id = a.person_id
    JOIN 
        role_type r ON c.role_id = r.id
),
company_info AS (
    SELECT 
        mc.movie_id,
        cn.name AS company_name,
        ct.kind AS company_type
    FROM 
        movie_companies mc
    JOIN 
        company_name cn ON mc.company_id = cn.id
    JOIN 
        company_type ct ON mc.company_type_id = ct.id
),
movies_with_keywords AS (
    SELECT 
        m.id AS movie_id,
        STRING_AGG(DISTINCT k.keyword, ', ') AS keywords
    FROM 
        aka_title m
    LEFT JOIN 
        movie_keyword mk ON m.id = mk.movie_id
    LEFT JOIN 
        keyword k ON mk.keyword_id = k.id
    GROUP BY 
        m.id
)
SELECT 
    r.title,
    r.production_year,
    mai.actor_name,
    mai.role_name,
    ci.company_name,
    ci.company_type,
    mwk.keywords
FROM 
    ranked_titles r
LEFT JOIN 
    movie_actor_info mai ON r.id = mai.movie_id
LEFT JOIN 
    company_info ci ON r.id = ci.movie_id
LEFT JOIN 
    movies_with_keywords mwk ON r.id = mwk.movie_id
WHERE 
    mai.actor_name IS NOT NULL
    AND (ci.company_type IS NOT NULL OR mwk.keywords IS NOT NULL)
    AND (r.rank <= 5 AND r.production_year > 2000)
ORDER BY 
    r.production_year DESC, r.title;
