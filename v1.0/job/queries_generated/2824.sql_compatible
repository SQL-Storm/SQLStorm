
WITH MovieDetails AS (
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        ARRAY_AGG(DISTINCT c.name) AS cast_names,
        COUNT(DISTINCT kc.keyword) AS keyword_count
    FROM 
        aka_title t
    LEFT JOIN 
        complete_cast cc ON t.id = cc.movie_id
    LEFT JOIN 
        cast_info ci ON cc.subject_id = ci.id
    LEFT JOIN 
        aka_name c ON ci.person_id = c.person_id
    LEFT JOIN 
        movie_keyword mk ON t.id = mk.movie_id
    LEFT JOIN 
        keyword kc ON mk.keyword_id = kc.id
    WHERE 
        t.production_year IS NOT NULL
    GROUP BY 
        t.id, t.title, t.production_year
),
TopMovies AS (
    SELECT 
        md.movie_id,
        md.title,
        md.production_year,
        md.cast_names,
        md.keyword_count,
        RANK() OVER (ORDER BY md.keyword_count DESC) AS keyword_rank
    FROM 
        MovieDetails md
)
SELECT 
    tm.title,
    COALESCE(tm.production_year, 'Unknown') AS year,
    tm.cast_names,
    CASE 
        WHEN tm.keyword_count = 0 THEN 'No keywords available'
        ELSE CAST(tm.keyword_count AS VARCHAR) || ' keywords'
    END AS keyword_info,
    CASE 
        WHEN tm.keyword_rank <= 5 THEN 'Top Movie'
        ELSE 'Regular Movie'
    END AS movie_category
FROM 
    TopMovies tm
WHERE 
    tm.keyword_rank <= 10 OR tm.movie_id IN (
        SELECT movie_id 
        FROM movie_info 
        WHERE note IS NOT NULL
    )
ORDER BY 
    tm.keyword_rank;
