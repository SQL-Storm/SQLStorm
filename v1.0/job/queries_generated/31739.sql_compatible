
WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        1 AS level
    FROM 
        aka_title mt
    WHERE 
        mt.kind_id = 1 

    UNION ALL

    SELECT 
        ml.linked_movie_id AS movie_id,
        mt.title,
        mt.production_year,
        mh.level + 1
    FROM 
        MovieHierarchy mh
    JOIN movie_link ml ON mh.movie_id = ml.movie_id
    JOIN aka_title mt ON ml.linked_movie_id = mt.id
)

SELECT 
    ak.name AS actor_name,
    at.title AS movie_title,
    mh.production_year,
    COALESCE(ci.note, 'No role noted') AS role_note,
    SUM(mk.keyword) OVER (PARTITION BY ak.person_id ORDER BY mk.keyword) AS total_keywords,
    COUNT(DISTINCT mt.movie_id) OVER(PARTITION BY ak.person_id) AS unique_movie_count,
    STRING_AGG(mk.keyword, ', ') AS keywords
FROM 
    aka_name ak
INNER JOIN 
    cast_info ci ON ak.person_id = ci.person_id
INNER JOIN 
    aka_title at ON ci.movie_id = at.id
LEFT JOIN 
    movie_keyword mk ON at.id = mk.movie_id
LEFT JOIN 
    MovieHierarchy mh ON at.id = mh.movie_id
WHERE 
    ak.name ILIKE '%' || 'John' || '%'
    AND mh.production_year > 2000 
    AND (ci.note IS NOT NULL OR ci.nr_order IS NOT NULL) 
GROUP BY 
    ak.name, at.title, mh.production_year, ci.note, ak.person_id
ORDER BY 
    unique_movie_count DESC, 
    total_keywords DESC;
