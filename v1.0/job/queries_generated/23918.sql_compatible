
WITH RankedMovies AS (
    SELECT 
        t.title AS movie_title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.production_year DESC) AS rank_year,
        COUNT(DISTINCT ci.person_id) AS cast_count
    FROM 
        aka_title t
    INNER JOIN 
        complete_cast cc ON t.id = cc.movie_id
    INNER JOIN 
        cast_info ci ON cc.subject_id = ci.id
    WHERE 
        t.production_year IS NOT NULL
    GROUP BY 
        t.title, t.production_year
),
TopMovies AS (
    SELECT *
    FROM RankedMovies
    WHERE rank_year <= 5
),
MovieDetails AS (
    SELECT 
        m.movie_title,
        COALESCE(m.production_year, 'Unknown Year') AS production_year,
        STRING_AGG(DISTINCT ak.name, ', ') AS actor_names,
        STRING_AGG(DISTINCT cn.name, ', ') AS company_names,
        m.cast_count
    FROM 
        TopMovies m
    LEFT JOIN 
        cast_info ci ON ci.movie_id = m.movie_title
    LEFT JOIN 
        aka_name ak ON ci.person_id = ak.person_id
    LEFT JOIN 
        movie_companies mc ON mc.movie_id = m.movie_title
    LEFT JOIN 
        company_name cn ON mc.company_id = cn.id
    GROUP BY 
        m.movie_title, m.production_year, m.cast_count
)
SELECT 
    title.movie_title,
    title.production_year,
    title.actor_names,
    title.company_names,
    title.cast_count,
    (SELECT COUNT(*) 
     FROM movie_keyword mk 
     WHERE mk.movie_id = (SELECT id FROM aka_title WHERE title = title.movie_title LIMIT 1)) AS keyword_count,
    (SELECT MIN(NULLIF(mm.info, '')::INTEGER) 
     FROM movie_info mm 
     WHERE mm.movie_id = (SELECT id FROM aka_title WHERE title = title.movie_title LIMIT 1) 
     AND mm.info_type_id IN (SELECT id FROM info_type WHERE info = 'Budget')) AS min_budget
FROM 
    MovieDetails title
ORDER BY 
    title.production_year DESC, title.cast_count DESC
LIMIT 10;
