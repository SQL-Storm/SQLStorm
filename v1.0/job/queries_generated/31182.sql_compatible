
WITH RECURSIVE movie_hierarchy AS (
    
    SELECT
        m.id AS movie_id,
        m.title AS movie_title,
        0 AS level
    FROM
        title m
    WHERE
        m.production_year >= 2000  

    UNION ALL

    
    SELECT
        ml.linked_movie_id AS movie_id,
        t.title AS movie_title,
        mh.level + 1 AS level
    FROM
        movie_link ml
    JOIN
        title t ON ml.linked_movie_id = t.id
    JOIN
        movie_hierarchy mh ON ml.movie_id = mh.movie_id
    WHERE
        mh.level < 3  
)

SELECT
    a.name AS actor_name,
    t.title AS movie_title,
    t.production_year AS release_year,
    COUNT(DISTINCT kc.keyword) AS keyword_count,
    AVG(mi.info_length) AS avg_info_length,
    FIRST_VALUE(t.title) OVER (PARTITION BY a.id ORDER BY t.production_year DESC) AS last_movie_title,
    MAX(CASE WHEN mi.info LIKE '%Academy%' THEN 1 ELSE 0 END) AS academy_award_flag,
    COALESCE(cn.name, 'Unknown Company') AS company_name,
    COALESCE(NULLIF(t.production_year, 2023), 'Not Released This Year') AS year_info
FROM
    aka_name a
JOIN
    cast_info ci ON a.person_id = ci.person_id
JOIN
    title t ON ci.movie_id = t.id
LEFT JOIN 
    movie_keyword mk ON mk.movie_id = t.id
LEFT JOIN 
    keyword kc ON mk.keyword_id = kc.id
LEFT JOIN 
    movie_info mi ON mi.movie_id = t.id
LEFT JOIN 
    movie_companies mc ON mc.movie_id = t.id
LEFT JOIN 
    company_name cn ON mc.company_id = cn.id
WHERE
    a.name IS NOT NULL 
    AND (t.production_year IS NULL OR t.production_year > 1990) 
GROUP BY
    a.id, a.name, t.id, t.title, t.production_year, cn.name
HAVING
    COUNT(DISTINCT kc.keyword) > 2  
ORDER BY
    avg_info_length DESC, release_year DESC;
