WITH movie_details AS (
    SELECT 
        t.id AS title_id,
        t.title,
        t.production_year,
        k.keyword AS movie_keyword,
        ARRAY_AGG(DISTINCT c.character) AS cast_characters,
        COUNT(DISTINCT ci.person_id) AS cast_count
    FROM 
        aka_title t
    LEFT JOIN 
        movie_keyword mk ON t.id = mk.movie_id
    LEFT JOIN 
        keyword k ON mk.keyword_id = k.id
    LEFT JOIN 
        cast_info ci ON t.id = ci.movie_id
    LEFT JOIN 
        aka_name an ON ci.person_id = an.person_id
    GROUP BY 
        t.id, t.title, t.production_year
),
filtered_movies AS (
    SELECT 
        md.title_id,
        md.title,
        md.production_year,
        md.movie_keyword,
        md.cast_characters,
        md.cast_count
    FROM 
        movie_details md
    WHERE 
        md.production_year >= 2000 
        AND (md.movie_keyword IS NOT NULL OR md.cast_count > 5)
),
ranked_movies AS (
    SELECT 
        f.*,
        RANK() OVER (PARTITION BY f.production_year ORDER BY f.cast_count DESC) AS rank_within_year
    FROM 
        filtered_movies f
),
final_selection AS (
    SELECT 
        r.title_id, 
        r.title, 
        r.production_year, 
        r.movie_keyword, 
        r.cast_characters,
        r.cast_count
    FROM 
        ranked_movies r
    WHERE 
        r.rank_within_year <= 10
)
SELECT 
    f.title AS "Movie Title",
    CASE 
        WHEN f.movie_keyword IS NOT NULL THEN f.movie_keyword 
        ELSE 'No Keyword' 
    END AS "Keyword",
    f.production_year AS "Year",
    COALESCE(f.cast_count, 0) AS "Number of Cast",
    CASE 
        WHEN f.cast_count > 5 THEN 'Larger cast' 
        ELSE 'Smaller cast' 
    END AS "Cast Size",
    ARRAY_TO_STRING(f.cast_characters, ', ') AS "Cast Characters"
FROM 
    final_selection f
ORDER BY 
    f.production_year DESC, 
    f.cast_count DESC;