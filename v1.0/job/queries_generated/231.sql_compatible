
WITH RankedMovies AS (
    SELECT 
        t.title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY COUNT(c.person_id) DESC) AS rank,
        COUNT(c.person_id) AS actor_count
    FROM
        title t
    LEFT JOIN 
        cast_info c ON t.id = c.movie_id
    GROUP BY 
        t.title, t.production_year
),
CompanyCounts AS (
    SELECT 
        mc.movie_id,
        COUNT(DISTINCT m.id) AS company_count
    FROM 
        movie_companies mc
    JOIN 
        company_name m ON mc.company_id = m.id
    WHERE 
        m.country_code IS NOT NULL
    GROUP BY 
        mc.movie_id
),
MovieDetails AS (
    SELECT 
        rm.title,
        rm.production_year,
        COALESCE(cc.company_count, 0) AS companies,
        rm.actor_count
    FROM 
        RankedMovies rm
    LEFT JOIN 
        CompanyCounts cc ON rm.id = cc.movie_id
    WHERE 
        rm.rank <= 3
)
SELECT 
    md.title,
    md.production_year,
    md.companies,
    md.actor_count,
    CASE 
        WHEN md.actor_count > 10 AND md.companies > 5 THEN 'High'
        WHEN md.actor_count BETWEEN 5 AND 10 AND md.companies BETWEEN 2 AND 5 THEN 'Medium'
        ELSE 'Low'
    END AS classification
FROM 
    MovieDetails md
WHERE 
    md.companies IS NOT NULL
ORDER BY 
    md.production_year DESC, 
    md.actor_count DESC;
