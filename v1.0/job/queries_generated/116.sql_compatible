
WITH RankedMovies AS (
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        COUNT(ci.person_id) AS cast_count,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY COUNT(ci.person_id) DESC) AS rank
    FROM 
        aka_title t
    LEFT JOIN 
        cast_info ci ON t.id = ci.movie_id
    GROUP BY 
        t.id, t.title, t.production_year
),
TopYears AS (
    SELECT 
        production_year, 
        AVG(cast_count) AS avg_cast_count
    FROM 
        RankedMovies
    GROUP BY 
        production_year
),
HighCastMovies AS (
    SELECT 
        rm.movie_id,
        rm.title,
        rm.production_year,
        rm.cast_count 
    FROM 
        RankedMovies rm
    JOIN 
        TopYears ty ON rm.production_year = ty.production_year 
    WHERE 
        rm.cast_count > ty.avg_cast_count
)
SELECT 
    hm.movie_id,
    hm.title,
    hm.production_year,
    hm.cast_count,
    COALESCE(cn.name, 'Unknown') AS company_name,
    (SELECT STRING_AGG(DISTINCT k.keyword, ', ') 
     FROM movie_keyword mk 
     JOIN keyword k ON mk.keyword_id = k.id 
     WHERE mk.movie_id = hm.movie_id) AS keywords,
    (SELECT COUNT(DISTINCT c.person_role_id) 
     FROM complete_cast c 
     WHERE c.movie_id = hm.movie_id) AS unique_roles
FROM 
    HighCastMovies hm
LEFT JOIN 
    movie_companies mc ON hm.movie_id = mc.movie_id
LEFT JOIN 
    company_name cn ON mc.company_id = cn.id
WHERE 
    hm.production_year BETWEEN 2000 AND 2020 
    AND hm.cast_count IS NOT NULL
ORDER BY 
    hm.production_year DESC, 
    hm.cast_count DESC
LIMIT 50;
