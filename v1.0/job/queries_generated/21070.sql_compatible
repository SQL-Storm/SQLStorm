
WITH RECURSIVE movie_hierarchy AS (
    
    SELECT 
        mt.id AS movie_id, 
        mt.title, 
        mt.production_year, 
        ml.linked_movie_id AS related_movie_id, 
        1 AS hierarchy_level
    FROM 
        title mt
    LEFT JOIN 
        movie_link ml ON mt.id = ml.movie_id
    
    UNION ALL
    
    SELECT 
        mh.movie_id, 
        mt.title, 
        mt.production_year, 
        ml.linked_movie_id AS related_movie_id, 
        mh.hierarchy_level + 1
    FROM 
        movie_hierarchy mh
    JOIN 
        movie_link ml ON mh.related_movie_id = ml.movie_id
    JOIN 
        title mt ON ml.linked_movie_id = mt.id
)

SELECT 
    ak.name AS actor_name,
    COALESCE(COUNT(DISTINCT mc.movie_id), 0) AS movies_count,
    COUNT(DISTINCT mh.movie_id) AS total_related_movies,
    STRING_AGG(DISTINCT mh.title, ', ') AS related_movie_titles,
    MAX(mh.hierarchy_level) AS max_hierarchy_depth,
    AVG(m.production_year) AS avg_production_year,
    SUM(CASE 
            WHEN mt.kid IN (SELECT id FROM kind_type WHERE kind = 'feature') 
            THEN 1 
            ELSE 0 
        END) AS feature_count,
    SUM(CASE 
            WHEN mt.kid IN (SELECT id FROM kind_type WHERE kind = 'short') 
            THEN 1 
            ELSE 0 
        END) AS short_film_count,
    ROW_NUMBER() OVER (PARTITION BY ak.name ORDER BY COUNT(DISTINCT mc.movie_id) DESC) AS rn
FROM 
    aka_name ak
LEFT JOIN 
    cast_info ci ON ak.person_id = ci.person_id
LEFT JOIN 
    complete_cast cc ON ci.movie_id = cc.movie_id
LEFT JOIN 
    movie_companies mc ON cc.movie_id = mc.movie_id
LEFT JOIN 
    title mt ON mc.movie_id = mt.id 
LEFT JOIN 
    movie_hierarchy mh ON mt.id = mh.movie_id
WHERE 
    ak.name IS NOT NULL
GROUP BY 
    ak.name, ak.person_id
HAVING 
    COUNT(DISTINCT mc.movie_id) > 0
    OR MAX(mh.hierarchy_level) > 2
ORDER BY 
    feature_count DESC,
    short_film_count DESC,
    rn
LIMIT 100;
