WITH RankedMovies AS (
    SELECT 
        a.id AS movie_id,
        a.title,
        a.production_year,
        COALESCE(SUM(CASE WHEN r.role = 'Actor' THEN 1 ELSE 0 END), 0) AS actor_count,
        COALESCE(SUM(CASE WHEN r.role = 'Director' THEN 1 ELSE 0 END), 0) AS director_count,
        COALESCE(SUM(CASE WHEN r.role = 'Producer' THEN 1 ELSE 0 END), 0) AS producer_count
    FROM 
        aka_title a
    LEFT JOIN 
        cast_info c ON a.id = c.movie_id
    LEFT JOIN 
        role_type r ON c.role_id = r.id
    GROUP BY 
        a.id
),
MovieInfo AS (
    SELECT 
        m.movie_id,
        STRING_AGG(DISTINCT k.keyword, ', ') AS keywords,
        STRING_AGG(DISTINCT c.name, ', ') AS companies
    FROM 
        movie_keyword mk
    JOIN 
        keyword k ON mk.keyword_id = k.id
    JOIN 
        movie_companies mc ON mk.movie_id = mc.movie_id
    JOIN 
        company_name c ON mc.company_id = c.id
    GROUP BY 
        m.movie_id
)
SELECT 
    rm.movie_id,
    rm.title,
    rm.production_year,
    rm.actor_count,
    rm.director_count,
    rm.producer_count,
    mi.keywords,
    mi.companies,
    (SELECT STRING_AGG(DISTINCT p.info, '; ') 
     FROM person_info p 
     WHERE p.person_id IN (SELECT DISTINCT c.person_id 
                           FROM cast_info c 
                           WHERE c.movie_id = rm.movie_id)) AS person_info
FROM 
    RankedMovies rm
LEFT JOIN 
    MovieInfo mi ON rm.movie_id = mi.movie_id
WHERE 
    rm.production_year > 2000
ORDER BY 
    rm.production_year DESC, rm.title;