
WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        m.id AS movie_id,
        t.title,
        t.production_year,
        1 AS level
    FROM 
        aka_title t
    JOIN 
        movie_keyword mk ON t.id = mk.movie_id
    WHERE 
        mk.keyword_id IN (SELECT id FROM keyword WHERE keyword = 'Action')   

    UNION ALL

    SELECT 
        mh.movie_id,
        t.title,
        t.production_year,
        mh.level + 1
    FROM 
        MovieHierarchy mh
    JOIN 
        movie_link ml ON mh.movie_id = ml.movie_id
    JOIN 
        aka_title t ON ml.linked_movie_id = t.id
)
SELECT 
    ak.name AS actor_name,
    t.title AS movie_title,
    t.production_year,
    mh.level,
    COUNT(c.id) OVER (PARTITION BY ak.id) AS total_movies,
    STRING_AGG(DISTINCT kw.keyword, ', ') AS keywords
FROM 
    cast_info c
JOIN 
    aka_name ak ON c.person_id = ak.person_id
JOIN 
    aka_title t ON c.movie_id = t.id
JOIN 
    MovieHierarchy mh ON t.id = mh.movie_id
LEFT JOIN 
    movie_keyword mk ON t.id = mk.movie_id
LEFT JOIN 
    keyword kw ON mk.keyword_id = kw.id
WHERE 
    ak.name IS NOT NULL
    AND t.production_year BETWEEN 2000 AND 2023
GROUP BY 
    ak.id, ak.name, t.id, t.title, t.production_year, mh.level
HAVING 
    COUNT(c.id) > 1
ORDER BY 
    total_movies DESC, ak.name ASC;
