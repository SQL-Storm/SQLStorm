
WITH RECURSIVE ActorHierarchy AS (
    SELECT 
        c.person_id,
        p.name AS actor_name,
        1 AS level,
        c.movie_id
    FROM 
        cast_info c
    JOIN 
        aka_name p ON c.person_id = p.person_id
    WHERE 
        c.movie_id = (SELECT id FROM aka_title WHERE title = 'Inception' LIMIT 1)

    UNION ALL

    SELECT 
        c.person_id,
        p.name AS actor_name,
        ah.level + 1,
        c.movie_id
    FROM 
        cast_info c
    JOIN 
        aka_name p ON c.person_id = p.person_id
    JOIN 
        ActorHierarchy ah ON c.movie_id = ah.movie_id
)
SELECT 
    a.actor_name,
    COUNT(m.id) AS movies_count,
    ARRAY_AGG(DISTINCT k.keyword) AS keywords,
    COALESCE(SUM(CASE WHEN c.note IS NOT NULL THEN 1 ELSE 0 END), 0) AS has_notes_count,
    ROW_NUMBER() OVER (PARTITION BY a.actor_name ORDER BY COUNT(m.id) DESC) AS rank
FROM 
    ActorHierarchy a
JOIN 
    cast_info ci ON a.person_id = ci.person_id
JOIN 
    aka_title m ON ci.movie_id = m.movie_id
LEFT JOIN 
    movie_keyword mk ON m.id = mk.movie_id
LEFT JOIN 
    keyword k ON mk.keyword_id = k.id
LEFT JOIN 
    movie_info mi ON m.id = mi.movie_id AND mi.info_type_id = (SELECT id FROM info_type WHERE info = 'Genre' LIMIT 1)
LEFT JOIN 
    movie_companies mc ON m.id = mc.movie_id
LEFT JOIN 
    company_name cn ON mc.company_id = cn.id
LEFT JOIN 
    complete_cast cc ON ci.movie_id = cc.movie_id AND ci.person_id = cc.subject_id
WHERE 
    m.production_year >= 2000
GROUP BY 
    a.actor_name
HAVING 
    COUNT(m.id) > 5
ORDER BY 
    movies_count DESC
LIMIT 10;
