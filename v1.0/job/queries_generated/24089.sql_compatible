
WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        m.id AS movie_id,
        m.title,
        m.production_year,
        1 AS level,
        NULL AS parent_movie_id
    FROM 
        aka_title m
    WHERE 
        m.kind_id = (SELECT id FROM kind_type WHERE kind = 'movie')
    
    UNION ALL

    SELECT 
        m.id AS movie_id,
        m.title,
        m.production_year,
        mh.level + 1 AS level,
        mh.movie_id AS parent_movie_id
    FROM 
        aka_title m
    JOIN 
        movie_link ml ON ml.linked_movie_id = m.id
    JOIN 
        movie_hierarchy mh ON ml.movie_id = mh.movie_id
)
SELECT 
    a.name AS actor_name,
    GROUP_CONCAT(DISTINCT km.keyword) AS keywords,
    (SELECT COUNT(DISTINCT mh.movie_id) 
     FROM movie_hierarchy mh 
     WHERE mh.level <= 2) AS movies_in_hierarchy,
    COALESCE(CAST(mo.production_year AS CHAR), 'Unknown') AS production_year,
    COUNT(DISTINCT ci.id) AS role_count,
    SUM(CASE WHEN ci.note IS NULL THEN 1 ELSE 0 END) AS null_roles
FROM 
    aka_name a
JOIN 
    cast_info ci ON a.person_id = ci.person_id
JOIN 
    aka_title mo ON ci.movie_id = mo.id
LEFT JOIN 
    movie_keyword mk ON mo.id = mk.movie_id
LEFT JOIN 
    keyword km ON mk.keyword_id = km.id
LEFT JOIN 
    movie_info mi ON mo.id = mi.movie_id AND mi.info_type_id = (SELECT id FROM info_type WHERE info = 'Synopsis')
WHERE 
    a.name IS NOT NULL
GROUP BY 
    a.name, mo.production_year
HAVING 
    COUNT(DISTINCT ci.movie_id) > 3
ORDER BY 
    role_count DESC, actor_name
FETCH FIRST 10 ROWS ONLY;
