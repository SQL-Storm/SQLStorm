
WITH RECURSIVE related_movies AS (
    SELECT ml.linked_movie_id AS movie_id, 1 AS depth
    FROM movie_link ml
    WHERE ml.movie_id = (SELECT id FROM title WHERE title = 'Inception' LIMIT 1)
    
    UNION ALL
    
    SELECT ml.linked_movie_id, rm.depth + 1
    FROM movie_link ml
    JOIN related_movies rm ON ml.movie_id = rm.movie_id
    WHERE rm.depth < 3
),
movie_details AS (
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        ARRAY_AGG(DISTINCT k.keyword) AS keywords,
        COUNT(DISTINCT c.person_id) AS cast_count,
        AVG(LENGTH(mi.info)) AS average_info_length
    FROM title t
    LEFT JOIN movie_keyword mk ON t.id = mk.movie_id
    LEFT JOIN keyword k ON mk.keyword_id = k.id
    LEFT JOIN cast_info c ON t.id = c.movie_id
    LEFT JOIN movie_info mi ON t.id = mi.movie_id
    WHERE t.production_year BETWEEN 2000 AND 2023
    GROUP BY t.id, t.title, t.production_year
),
movie_company_info AS (
    SELECT 
        mc.movie_id, 
        cn.name AS company_name, 
        ct.kind AS company_type,
        COUNT(*) AS company_count
    FROM movie_companies mc
    JOIN company_name cn ON mc.company_id = cn.id
    JOIN company_type ct ON mc.company_type_id = ct.id
    GROUP BY mc.movie_id, cn.name, ct.kind
),
final_results AS (
    SELECT 
        md.movie_id,
        md.title,
        md.production_year,
        md.keywords,
        md.cast_count,
        md.average_info_length,
        STRING_AGG(DISTINCT CONCAT(mci.company_name, ' (', mci.company_type, ')'), ', ') AS companies,
        COALESCE(rm.depth, 0) AS related_depth
    FROM movie_details md
    LEFT JOIN movie_company_info mci ON md.movie_id = mci.movie_id
    LEFT JOIN related_movies rm ON md.movie_id = rm.movie_id
    GROUP BY md.movie_id, md.title, md.production_year, related_depth
)
SELECT *
FROM final_results
WHERE cast_count > 5
ORDER BY average_info_length DESC, related_depth ASC;
