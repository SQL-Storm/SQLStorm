
WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        m.id AS movie_id,
        m.title,
        m.production_year,
        1 AS level
    FROM 
        aka_title m
    WHERE 
        m.production_year > 2000

    UNION ALL

    SELECT 
        m.id AS movie_id,
        m.title,
        m.production_year,
        mh.level + 1
    FROM 
        aka_title m
    JOIN 
        MovieHierarchy mh ON m.episode_of_id = mh.movie_id
)

SELECT 
    t.title AS main_title,
    t.production_year AS main_year,
    ARRAY_AGG(DISTINCT a.name) AS actors_names,
    COUNT(DISTINCT c.person_id) AS actors_count,
    COALESCE(STRING_AGG(DISTINCT CONCAT_WS(' - ', co.name, ct.kind), '; '), 'No production company') AS production_companies,
    MAX(CASE WHEN mi.info_type_id = (SELECT id FROM info_type WHERE info = 'Budget') THEN mi.info END) AS budget,
    COUNT(DISTINCT k.keyword) AS keyword_count,
    SUM(CASE WHEN cm.kind = 'Producer' THEN 1 ELSE 0 END) AS producer_count,
    ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.title) AS year_order
FROM 
    title t
LEFT JOIN 
    cast_info c ON t.id = c.movie_id
LEFT JOIN 
    aka_name a ON c.person_id = a.person_id
LEFT JOIN 
    movie_companies mc ON t.id = mc.movie_id
LEFT JOIN 
    company_name co ON mc.company_id = co.id
LEFT JOIN 
    company_type ct ON mc.company_type_id = ct.id
LEFT JOIN 
    movie_info mi ON t.id = mi.movie_id
LEFT JOIN 
    movie_keyword mk ON t.id = mk.movie_id
LEFT JOIN 
    keyword k ON mk.keyword_id = k.id
LEFT JOIN 
    MovieHierarchy mh ON t.id = mh.movie_id
GROUP BY 
    t.id, t.title, t.production_year
HAVING 
    COUNT(DISTINCT c.person_id) > 5 AND 
    SUM(CASE WHEN co.country_code IS NULL THEN 1 ELSE 0 END) > 0
ORDER BY 
    main_year DESC, actors_count DESC;
