WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        m.id AS movie_id,
        t.title,
        t.production_year,
        1 AS level
    FROM 
        aka_title t
    JOIN 
        movie_companies mc ON t.id = mc.movie_id
    JOIN 
        company_name cn ON mc.company_id = cn.id
    WHERE 
        cn.country_code = 'USA'
    
    UNION ALL
    
    SELECT 
        mh.movie_id,
        mh.title,
        mh.production_year,
        mh.level + 1
    FROM 
        MovieHierarchy mh
    JOIN 
        movie_link ml ON mh.movie_id = ml.movie_id
    JOIN 
        aka_title t ON ml.linked_movie_id = t.id
)
, CastDetails AS (
    SELECT 
        c.person_id,
        c.movie_id,
        ARRAY_AGG(DISTINCT CONCAT(a.name, ' as ', r.role)) AS roles
    FROM 
        cast_info c
    JOIN 
        aka_name a ON c.person_id = a.person_id
    JOIN 
        role_type r ON c.role_id = r.id
    GROUP BY 
        c.person_id, c.movie_id
)
, MovieStats AS (
    SELECT 
        mh.movie_id,
        mh.title,
        mh.production_year,
        COUNT(DISTINCT cd.person_id) AS cast_count
    FROM 
        MovieHierarchy mh
    LEFT JOIN 
        CastDetails cd ON mh.movie_id = cd.movie_id
    GROUP BY 
        mh.movie_id, mh.title, mh.production_year
)
SELECT 
    ms.title,
    ms.production_year,
    ms.cast_count,
    CASE 
        WHEN ms.cast_count >= 10 THEN 'Ensemble Cast'
        WHEN ms.cast_count BETWEEN 5 AND 9 THEN 'Moderate Cast'
        ELSE 'Small Cast'
    END AS cast_size,
    ROW_NUMBER() OVER (ORDER BY ms.production_year DESC, ms.cast_count DESC) AS rank
FROM 
    MovieStats ms
WHERE 
    ms.cast_count IS NOT NULL
    AND ms.production_year IS NOT NULL
ORDER BY 
    ms.production_year DESC, ms.cast_count DESC
LIMIT 50;