WITH RankedMovies AS (
    SELECT
        t.title AS movie_title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY COALESCE(t.production_year, 0) DESC) as year_rank,
        COUNT(DISTINCT c.person_id) AS actor_count
    FROM
        aka_title t
    LEFT JOIN
        cast_info c ON t.id = c.movie_id
    GROUP BY
        t.id, t.title, t.production_year
),
FilteredMovies AS (
    SELECT 
        rm.movie_title,
        rm.production_year,
        rm.year_rank,
        rm.actor_count,
        CASE 
            WHEN rm.actor_count > 10 THEN 'Blockbuster'
            WHEN rm.actor_count BETWEEN 5 AND 10 THEN 'Moderate'
            ELSE 'Indie'
        END AS movie_category
    FROM
        RankedMovies rm
    WHERE
        rm.year_rank <= 5  
),
MoviesWithKeywords AS (
    SELECT 
        fm.movie_title,
        fm.production_year,
        fm.movie_category,
        STRING_AGG(k.keyword, ', ') AS keywords
    FROM 
        FilteredMovies fm
    LEFT JOIN 
        movie_keyword mk ON mk.movie_id = (SELECT id FROM aka_title WHERE title = fm.movie_title LIMIT 1)
    LEFT JOIN 
        keyword k ON mk.keyword_id = k.id 
    GROUP BY 
        fm.movie_title, fm.production_year, fm.movie_category
)
SELECT 
    mwk.movie_title,
    mwk.production_year,
    mwk.movie_category,
    mwk.keywords,
    CASE 
        WHEN mwk.keywords IS NULL THEN 'No Keywords'
        WHEN mwk.keywords LIKE '%Action%' THEN 'High Energy'
        ELSE 'Diverse'
    END AS keyword_infer,
    COALESCE(ai.average_age, 'N/A') AS avg_actor_age
FROM 
    MoviesWithKeywords mwk
LEFT JOIN (
    SELECT
        c.movie_id,
        AVG(pi.age) AS average_age
    FROM
        cast_info c
    JOIN
        person_info pi ON c.person_id = pi.person_id
    WHERE
        pi.info_type_id = (SELECT id FROM info_type WHERE info = 'age')
    GROUP BY
        c.movie_id
) ai ON ai.movie_id = (SELECT id FROM aka_title WHERE title = mwk.movie_title LIMIT 1)
WHERE 
    mwk.production_year > 2000
ORDER BY
    mwk.production_year DESC, 
    mwk.movie_title;