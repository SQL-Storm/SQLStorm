WITH RECURSIVE MovieHierarchy AS (
    SELECT
        m.id AS movie_id,
        m.title,
        m.production_year,
        1 AS level
    FROM
        aka_title m
    WHERE
        m.kind_id = 1 

    UNION ALL

    SELECT
        m.id,
        m.title,
        m.production_year,
        mh.level + 1
    FROM
        movie_link ml
    JOIN
        aka_title m ON ml.linked_movie_id = m.id
    JOIN
        MovieHierarchy mh ON ml.movie_id = mh.movie_id
)
SELECT 
    m.id AS movie_id,
    m.title,
    m.production_year,
    ak.name AS actor_name,
    COUNT(*) OVER (PARTITION BY m.id) AS total_cast,
    STRING_AGG(DISTINCT kw.keyword, ', ') FILTER (WHERE kw.keyword IS NOT NULL) AS keywords,
    CASE 
        WHEN (m.production_year IS NULL OR m.production_year < 2000) THEN 'Classic' 
        ELSE 'Modern' 
    END AS era,
    COALESCE(cn.name, 'Unknown Company') AS company_name
FROM 
    MovieHierarchy m
LEFT JOIN 
    cast_info ci ON m.movie_id = ci.movie_id
LEFT JOIN 
    aka_name ak ON ci.person_id = ak.person_id
LEFT JOIN 
    movie_companies mc ON m.movie_id = mc.movie_id
LEFT JOIN 
    company_name cn ON mc.company_id = cn.id
LEFT JOIN 
    movie_keyword mk ON m.movie_id = mk.movie_id
LEFT JOIN 
    keyword kw ON mk.keyword_id = kw.id
GROUP BY 
    m.id, ak.name, cn.name, m.production_year
HAVING 
    COUNT(*) > 1
ORDER BY 
    m.production_year DESC, m.title;