
WITH RankedMovies AS (
    SELECT 
        a.title,
        a.production_year,
        ROW_NUMBER() OVER (PARTITION BY a.production_year ORDER BY a.id) AS rank
    FROM aka_title a
    WHERE a.production_year IS NOT NULL
),
MovieStats AS (
    SELECT 
        m.title,
        COUNT(DISTINCT c.person_id) AS actor_count,
        COUNT(DISTINCT mc.company_id) AS company_count
    FROM RankedMovies m
    LEFT JOIN cast_info c ON m.id = c.movie_id
    LEFT JOIN movie_companies mc ON m.id = mc.movie_id
    GROUP BY m.title
),
TopMovies AS (
    SELECT 
        title,
        actor_count,
        company_count,
        RANK() OVER (ORDER BY actor_count DESC, company_count DESC) AS movie_rank
    FROM MovieStats
)
SELECT 
    m.title,
    m.actor_count,
    m.company_count,
    COALESCE(m.movie_rank, 0) AS rank,
    CASE 
        WHEN m.actor_count > 100 THEN 'Blockbuster'
        WHEN m.actor_count BETWEEN 50 AND 100 THEN 'Moderate'
        ELSE 'Indie'
    END AS classification
FROM TopMovies m
WHERE m.movie_rank <= 10
UNION ALL
SELECT 
    'Others' AS title,
    SUM(actor_count) AS actor_count,
    SUM(company_count) AS company_count,
    11 AS rank,
    'Other' AS classification
FROM TopMovies
WHERE movie_rank > 10
GROUP BY classification
ORDER BY rank;
