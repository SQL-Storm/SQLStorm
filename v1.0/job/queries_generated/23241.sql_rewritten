WITH RECURSIVE movie_hierarchy AS (
    SELECT
        m.id AS movie_id,
        t.title AS movie_title,
        t.production_year,
        1 AS level
    FROM
        aka_title t
    JOIN
        movie_companies mc ON t.id = mc.movie_id
    JOIN
        company_name cn ON mc.company_id = cn.id
    WHERE
        cn.country_code IS NOT NULL

    UNION ALL

    SELECT
        mh.movie_id,
        CONCAT(mh.movie_title, ' [Sequel]') AS movie_title,
        mh.production_year + 1 AS production_year,
        mh.level + 1
    FROM
        movie_hierarchy mh
    WHERE
        mh.level < 3  
)

SELECT
    m.movie_title,
    m.production_year,
    COALESCE(aka.name, 'Unknown') AS director_name,
    COUNT(DISTINCT ci.person_id) AS cast_count,
    AVG(mi.info IS NOT NULL) * 100 AS info_availability_percentage,
    STRING_AGG(DISTINCT kw.keyword, ', ') AS keywords,
    ROW_NUMBER() OVER (PARTITION BY m.production_year ORDER BY COUNT(DISTINCT ci.person_id) DESC) AS rank_by_cast

FROM
    movie_hierarchy m
LEFT JOIN
    complete_cast cc ON m.movie_id = cc.movie_id
LEFT JOIN
    cast_info ci ON cc.subject_id = ci.person_id
LEFT JOIN
    aka_name aka ON ci.person_id = aka.person_id AND aka.name IS NOT NULL
LEFT JOIN
    movie_info mi ON mi.movie_id = m.movie_id AND mi.info_type_id IN (SELECT id FROM info_type WHERE info = 'Overview')
LEFT JOIN
    movie_keyword kw ON kw.movie_id = m.movie_id
WHERE
    m.production_year >= 2000
    AND (ci.note IS NULL OR ci.note LIKE '%starring%')
GROUP BY
    m.movie_title, m.production_year, aka.name
HAVING
    COUNT(DISTINCT ci.person_id) >= 5
ORDER BY
    m.production_year DESC,
    COUNT(DISTINCT ci.person_id) DESC,
    COALESCE(aka.name, 'Unknown');