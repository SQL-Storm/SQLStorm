
WITH RECURSIVE ActorHierarchy AS (
    SELECT 
        ci.person_id, 
        ci.movie_id, 
        ci.nr_order,
        1 AS depth
    FROM 
        cast_info ci
    JOIN 
        complete_cast cc ON ci.movie_id = cc.movie_id
    JOIN 
        aka_name a ON ci.person_id = a.person_id
    WHERE 
        a.name ILIKE '%John%'
    UNION ALL
    SELECT 
        ci.person_id, 
        ci.movie_id,
        ci.nr_order,
        ah.depth + 1
    FROM 
        cast_info ci
    JOIN 
        ActorHierarchy ah ON ci.movie_id = ah.movie_id
    WHERE 
        ci.nr_order > ah.nr_order
),
MovieDetails AS (
    SELECT 
        t.title,
        t.production_year,
        COUNT(DISTINCT t.id) AS movie_count
    FROM 
        title t
    JOIN 
        movie_keyword mk ON t.id = mk.movie_id
    JOIN 
        keyword k ON mk.keyword_id = k.id
    JOIN 
        movie_companies mc ON t.id = mc.movie_id
    JOIN 
        company_name cn ON mc.company_id = cn.id
    WHERE 
        cn.country_code = 'US'
        AND t.production_year >= 2000
    GROUP BY 
        t.title, t.production_year
),
RankedMovies AS (
    SELECT 
        title,
        production_year,
        movie_count,
        RANK() OVER (PARTITION BY production_year ORDER BY movie_count DESC) AS rank
    FROM 
        MovieDetails
)
SELECT 
    ah.person_id,
    a.name AS actor_name,
    rm.title,
    rm.production_year,
    rm.movie_count,
    CASE 
        WHEN rm.rank <= 5 THEN 'Top 5'
        ELSE 'Others'
    END AS category
FROM 
    ActorHierarchy ah
JOIN 
    aka_name a ON ah.person_id = a.person_id
JOIN 
    RankedMovies rm ON ah.movie_id = rm.title
WHERE 
    rm.movie_count > 1
ORDER BY 
    ah.person_id, rm.production_year DESC;
