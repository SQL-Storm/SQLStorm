
WITH RankedMovies AS (
    SELECT 
        m.id AS movie_id,
        m.title,
        m.production_year,
        COUNT(DISTINCT c.person_id) OVER (PARTITION BY m.id) AS actor_count,
        ROW_NUMBER() OVER (ORDER BY m.production_year DESC) AS rank
    FROM 
        aka_title m
    LEFT JOIN 
        complete_cast cc ON m.id = cc.movie_id
    LEFT JOIN 
        cast_info c ON cc.subject_id = c.id
    WHERE 
        m.production_year IS NOT NULL
),
CompanyDetails AS (
    SELECT 
        mc.movie_id,
        STRING_AGG(DISTINCT cn.name, ', ') AS companies,
        STRING_AGG(DISTINCT ct.kind, ', ') AS company_types
    FROM 
        movie_companies mc
    JOIN 
        company_name cn ON mc.company_id = cn.id
    JOIN 
        company_type ct ON mc.company_type_id = ct.id
    GROUP BY 
        mc.movie_id
),
KeywordCounts AS (
    SELECT 
        mk.movie_id,
        COUNT(mk.keyword_id) AS keyword_count
    FROM 
        movie_keyword mk
    GROUP BY 
        mk.movie_id
)

SELECT 
    rm.movie_id,
    rm.title,
    rm.production_year,
    COALESCE(kc.keyword_count, 0) AS keyword_count,
    COALESCE(cd.companies, 'No Companies') AS companies,
    COALESCE(cd.company_types, 'No Types') AS company_types,
    rm.actor_count,
    CASE 
        WHEN rm.actor_count > 10 THEN 'Blockbuster'
        WHEN rm.actor_count BETWEEN 5 AND 10 THEN 'Popular'
        ELSE 'Indie'
    END AS movie_type
FROM 
    RankedMovies rm
LEFT JOIN 
    KeywordCounts kc ON rm.movie_id = kc.movie_id
LEFT JOIN 
    CompanyDetails cd ON rm.movie_id = cd.movie_id
WHERE 
    rm.rank <= 50
ORDER BY 
    rm.production_year DESC, rm.actor_count DESC;
