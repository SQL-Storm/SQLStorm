
WITH movie_details AS (
    SELECT 
        t.title AS movie_title,
        t.production_year,
        COUNT(DISTINCT c.id) AS total_cast,
        COUNT(DISTINCT mk.keyword) AS total_keywords,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY COUNT(DISTINCT c.id) DESC) AS rank_by_cast
    FROM 
        aka_title t
    LEFT JOIN 
        cast_info c ON t.id = c.movie_id
    LEFT JOIN 
        movie_keyword mk ON t.id = mk.movie_id
    GROUP BY 
        t.title, t.production_year
),
high_cast_movies AS (
    SELECT 
        md.movie_title,
        md.production_year,
        md.total_cast,
        md.total_keywords,
        CASE WHEN md.total_cast >= 5 THEN 'Featured' ELSE 'Minor' END AS cast_type
    FROM 
        movie_details md
    WHERE 
        md.total_cast > (SELECT AVG(total_cast) FROM movie_details)
),
actor_details AS (
    SELECT 
        a.id AS actor_id,
        a.name AS actor_name,
        COUNT(DISTINCT c.movie_id) AS movies_featured,
        SUM(CASE WHEN c.note IS NOT NULL THEN 1 ELSE 0 END) AS notes_count
    FROM 
        aka_name a
    JOIN 
        cast_info c ON a.person_id = c.person_id
    GROUP BY 
        a.id, a.name
)
SELECT 
    hcm.movie_title,
    hcm.production_year,
    hcm.total_cast,
    hcm.total_keywords,
    hcm.cast_type,
    ad.actor_name,
    ad.movies_featured,
    ad.notes_count,
    COALESCE(GROUP_CONCAT(DISTINCT mk.keyword), 'No keywords') AS associated_keywords
FROM 
    high_cast_movies hcm
LEFT JOIN 
    actor_details ad ON hcm.total_cast = ad.movies_featured
LEFT JOIN 
    movie_keyword mk ON hcm.movie_title = (SELECT title FROM aka_title WHERE title = hcm.movie_title LIMIT 1)
GROUP BY 
    hcm.movie_title, hcm.production_year, hcm.total_cast, hcm.total_keywords, hcm.cast_type, ad.actor_name, ad.movies_featured, ad.notes_count
ORDER BY 
    hcm.production_year DESC, hcm.total_cast DESC
LIMIT 100;
