
WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        1 AS level
    FROM 
        aka_title mt
    WHERE 
        mt.kind_id IN (SELECT id FROM kind_type WHERE kind = 'movie')
    
    UNION ALL
    
    SELECT 
        ml.linked_movie_id AS movie_id,
        at.title,
        at.production_year,
        mh.level + 1
    FROM 
        movie_link ml
    JOIN 
        aka_title at ON ml.linked_movie_id = at.movie_id
    JOIN 
        MovieHierarchy mh ON ml.movie_id = mh.movie_id
)

SELECT 
    Level1.title AS Movie_Title,
    Level1.production_year AS Production_Year,
    COALESCE(Level1.production_year::text, 'Unknown') AS Year_Status,
    COUNT(DISTINCT cast.id) AS Number_of_Cast_Members,
    SUM(CASE WHEN cast.note IS NOT NULL THEN 1 ELSE 0 END) AS Cast_With_Notes,
    STRING_AGG(DISTINCT ak.name, ', ') AS Known_Aliases,
    ROW_NUMBER() OVER (PARTITION BY Level1.production_year ORDER BY Level1.title) AS Row_Numbers
FROM 
    MovieHierarchy Level1
LEFT JOIN 
    complete_cast cc ON Level1.movie_id = cc.movie_id
LEFT JOIN 
    cast_info cast ON cc.subject_id = cast.person_id
LEFT JOIN 
    aka_name ak ON ak.person_id = cast.person_id
WHERE
    Level1.level >= 1
GROUP BY 
    Level1.title, Level1.production_year
HAVING 
    COUNT(DISTINCT cast.id) > 0
ORDER BY 
    Production_Year DESC, Number_of_Cast_Members DESC;
