WITH RECURSIVE MovieHierarchy AS (
    SELECT
        m.id AS movie_id,
        t.title,
        t.production_year,
        1 AS level
    FROM
        aka_title t
    JOIN
        movie_companies mc ON t.id = mc.movie_id
    JOIN
        company_name c ON mc.company_id = c.id
    WHERE
        c.country_code = 'USA'  

    UNION ALL

    SELECT
        rh.movie_id,
        CONCAT(m.title, ' - Also known as ', ak.name) AS title,
        m.production_year,
        level + 1
    FROM
        MovieHierarchy rh
    JOIN
        aka_title ak ON ak.id = rh.movie_id
    JOIN
        title m ON ak.id = m.imdb_id
)

SELECT
    mh.title,
    mh.production_year,
    COUNT(DISTINCT ca.id) AS total_cast_members,
    STRING_AGG(DISTINCT a.name, ', ') AS cast_names,
    COUNT(DISTINCT kw.keyword) AS total_keywords,
    AVG(CASE WHEN mi.info_type_id = 1 THEN LENGTH(mi.info) END) AS avg_movie_note_length
FROM
    MovieHierarchy mh
LEFT JOIN
    complete_cast cc ON mh.movie_id = cc.movie_id
LEFT JOIN
    cast_info ca ON cc.subject_id = ca.person_id
LEFT JOIN
    movie_keyword mk ON mh.movie_id = mk.movie_id
LEFT JOIN
    keyword kw ON mk.keyword_id = kw.id
LEFT JOIN
    movie_info mi ON mh.movie_id = mi.movie_id
WHERE
    mh.level < 3  
GROUP BY
    mh.title, mh.production_year
HAVING
    COUNT(DISTINCT ca.id) > 0  
ORDER BY
    mh.production_year DESC,
    total_cast_members DESC;