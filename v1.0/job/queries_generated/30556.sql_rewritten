WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title AS movie_title,
        mt.production_year,
        mt.kind_id,
        0 AS level
    FROM 
        aka_title mt
    WHERE 
        mt.production_year BETWEEN 2000 AND 2020
    UNION ALL
    SELECT 
        m.id AS movie_id,
        m.title AS movie_title,
        m.production_year,
        m.kind_id,
        mh.level + 1
    FROM 
        movie_hierarchy mh
    JOIN 
        movie_link ml ON mh.movie_id = ml.movie_id
    JOIN 
        title m ON ml.linked_movie_id = m.id
)
SELECT 
    ak.name AS actor_name,
    COUNT(DISTINCT mc.movie_id) AS total_movies,
    SUM(CASE WHEN mc.status_id IS NULL THEN 1 ELSE 0 END) AS not_completed,
    AVG(CASE WHEN mt.kind_id = 1 THEN mt.production_year END) AS avg_year_of_feature_film,
    STRING_AGG(DISTINCT mt.title, ', ') AS movie_titles,
    ROW_NUMBER() OVER (PARTITION BY ak.person_id ORDER BY COUNT(DISTINCT mc.movie_id) DESC) AS actor_rank
FROM 
    aka_name ak
JOIN 
    cast_info ci ON ak.person_id = ci.person_id
JOIN 
    complete_cast mc ON ci.movie_id = mc.movie_id
LEFT JOIN 
    movie_hierarchy mt ON mc.movie_id = mt.movie_id
WHERE 
    ak.name IS NOT NULL
    AND ak.name NOT LIKE '%unknown%'
    AND ak.id IN (SELECT person_id FROM person_info WHERE info LIKE '%notable%')
GROUP BY 
    ak.name
HAVING 
    COUNT(DISTINCT mc.movie_id) > 5
ORDER BY 
    total_movies DESC
LIMIT 10;