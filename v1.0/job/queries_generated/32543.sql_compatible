
WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        m.id AS movie_id,
        m.title,
        m.production_year,
        0 AS level
    FROM aka_title m
    WHERE m.kind_id = 1  

    UNION ALL

    SELECT 
        m.id,
        m.title,
        m.production_year,
        mh.level + 1
    FROM aka_title m
    JOIN movie_link ml ON m.id = ml.linked_movie_id
    JOIN movie_hierarchy mh ON ml.movie_id = mh.movie_id
) 

SELECT
    a.name AS actor_name,
    t.title AS movie_title,
    t.production_year,
    COALESCE(c.kind, 'Unknown') AS company_type,
    COUNT(DISTINCT mk.keyword) AS keyword_count,
    ROW_NUMBER() OVER (PARTITION BY a.name ORDER BY t.production_year DESC) AS recent_work,
    CASE 
        WHEN COUNT(DISTINCT mk.keyword) > 5 THEN 'Highly Descriptive'
        WHEN COUNT(DISTINCT mk.keyword) BETWEEN 3 AND 5 THEN 'Moderately Descriptive'
        ELSE 'Descriptive'
    END AS keyword_description
FROM 
    aka_name a
JOIN 
    cast_info ci ON a.person_id = ci.person_id
JOIN 
    aka_title t ON ci.movie_id = t.id
LEFT JOIN 
    movie_companies mc ON t.id = mc.movie_id
LEFT JOIN 
    company_type c ON mc.company_type_id = c.id
LEFT JOIN 
    movie_keyword mk ON t.id = mk.movie_id
LEFT JOIN 
    movie_info mi ON t.id = mi.movie_id AND mi.info_type_id = 1  
WHERE 
    t.production_year >= 2000
    AND a.name NOT LIKE '%Unknown%' 
    AND (mi.info IS NULL OR mi.note IS NOT NULL)
GROUP BY 
    a.name, t.title, t.production_year, c.kind
HAVING 
    COUNT(DISTINCT t.id) > 1  
ORDER BY 
    recent_work, actor_name;
