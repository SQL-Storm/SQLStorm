WITH RECURSIVE FilmSeries AS (
    SELECT 
        m.id AS movie_id, 
        m.title, 
        m.production_year,
        ROW_NUMBER() OVER (PARTITION BY m.id ORDER BY c.nr_order) AS cast_order
    FROM 
        aka_title m
    LEFT JOIN 
        complete_cast cc ON m.id = cc.movie_id
    LEFT JOIN 
        cast_info c ON cc.subject_id = c.person_id
    WHERE 
        m.kind_id IN (SELECT id FROM kind_type WHERE kind LIKE '%series%')
),
TopActors AS (
    SELECT 
        ak.name, 
        COUNT(DISTINCT fc.movie_id) AS num_movies
    FROM 
        aka_name ak
    JOIN 
        cast_info ci ON ak.person_id = ci.person_id
    JOIN 
        FilmSeries fc ON ci.movie_id = fc.movie_id
    GROUP BY 
        ak.name
    HAVING 
        COUNT(DISTINCT fc.movie_id) > 3
    ORDER BY 
        num_movies DESC
    LIMIT 10
),
MovieKeywords AS (
    SELECT 
        mt.movie_id,
        STRING_AGG(k.keyword, ', ') AS all_keywords
    FROM 
        movie_keyword mk
    JOIN 
        keyword k ON mk.keyword_id = k.id
    JOIN 
        aka_title mt ON mk.movie_id = mt.id
    GROUP BY 
        mt.movie_id
),
ActorRoles AS (
    SELECT 
        ak.name, 
        ci.movie_id,
        rt.role,
        ROW_NUMBER() OVER (PARTITION BY ak.name ORDER BY ci.nr_order) AS role_number
    FROM 
        aka_name ak
    JOIN 
        cast_info ci ON ak.person_id = ci.person_id
    JOIN 
        role_type rt ON ci.role_id = rt.id
    WHERE 
        ak.name IS NOT NULL
),
CombinedResults AS (
    SELECT 
        ta.name AS actor_name,
        fc.title AS movie_title,
        fc.production_year,
        ak.all_keywords,
        ar.role,
        ar.role_number
    FROM 
        TopActors ta
    JOIN 
        FilmSeries fc ON ta.num_movies > 0
    LEFT JOIN 
        MovieKeywords ak ON fc.movie_id = ak.movie_id
    LEFT JOIN 
        ActorRoles ar ON ta.name = ar.name AND fc.movie_id = ar.movie_id
)
SELECT 
    actor_name, 
    movie_title, 
    production_year, 
    COALESCE(all_keywords, 'No Keywords') AS keywords,
    COALESCE(role, 'Unknown Role') AS role,
    role_number
FROM 
    CombinedResults
WHERE 
    production_year >= (SELECT MIN(production_year) FROM aka_title)
    AND NOT EXISTS (SELECT 1 FROM movie_info mi WHERE mi.movie_id = movie_title.id AND mi.info_type_id IS NULL)
ORDER BY 
    production_year DESC, 
    actor_name ASC, 
    role_number;