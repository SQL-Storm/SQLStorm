
WITH RankedMovies AS (
    SELECT
        t.id AS movie_id,
        t.title,
        t.production_year,
        t.kind_id,
        ARRAY_AGG(DISTINCT c.name ORDER BY c.nr_order) AS cast,
        COUNT(DISTINCT k.keyword) AS keyword_count,
        ARRAY_AGG(DISTINCT cn.name) AS companies,
        ROW_NUMBER() OVER (PARTITION BY t.kind_id ORDER BY t.production_year DESC) AS rn
    FROM
        aka_title t
    LEFT JOIN
        cast_info c ON t.id = c.movie_id
    LEFT JOIN
        movie_keyword mk ON t.id = mk.movie_id
    LEFT JOIN
        keyword k ON mk.keyword_id = k.id
    LEFT JOIN
        movie_companies mc ON t.id = mc.movie_id
    LEFT JOIN
        company_name cn ON mc.company_id = cn.id
    WHERE
        t.production_year >= 2000
    GROUP BY
        t.id, t.title, t.production_year, t.kind_id
),
TopMovies AS (
    SELECT
        rm.movie_id,
        rm.title,
        rm.production_year,
        rm.kind_id,
        rm.cast,
        rm.keyword_count,
        rm.companies
    FROM
        RankedMovies rm
    WHERE
        rm.rn <= 5
)
SELECT
    tm.movie_id,
    tm.title,
    tm.production_year,
    kt.kind,
    tm.cast,
    tm.keyword_count,
    STRING_AGG(cn.name, ', ') AS company_names
FROM
    TopMovies tm
JOIN
    kind_type kt ON tm.kind_id = kt.id
JOIN
    UNNEST(tm.companies) AS cn(name) ON TRUE
GROUP BY
    tm.movie_id, tm.title, tm.production_year, kt.kind, tm.cast, tm.keyword_count
ORDER BY
    tm.production_year DESC, tm.keyword_count DESC;
