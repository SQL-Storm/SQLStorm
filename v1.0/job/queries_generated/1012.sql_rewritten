WITH RankedMovies AS (
    SELECT 
        a.id AS actor_id,
        a.name AS actor_name,
        t.title AS movie_title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY a.id ORDER BY t.production_year DESC) AS rank
    FROM 
        aka_name a
    JOIN 
        cast_info ci ON a.person_id = ci.person_id
    JOIN 
        aka_title t ON ci.movie_id = t.movie_id
    WHERE 
        t.production_year IS NOT NULL
),
HighRatedMovies AS (
    SELECT 
        mv.id AS movie_id,
        mv.title,
        AVG(mr.rating) AS average_rating
    FROM 
        aka_title mv
    LEFT JOIN 
        movie_info mi ON mv.id = mi.movie_id
    JOIN 
        (
            SELECT 
                movie_id,
                AVG(rating) AS rating
            FROM 
                movie_info 
            WHERE 
                info_type_id IN (SELECT id FROM info_type WHERE info = 'rating')
            GROUP BY 
                movie_id
        ) mr ON mv.id = mr.movie_id
    WHERE 
        mv.production_year >= 2000
    GROUP BY 
        mv.id
),
FinalMovieList AS (
    SELECT 
        rm.actor_id,
        rm.actor_name,
        rm.movie_title,
        rm.production_year,
        hmv.average_rating
    FROM 
        RankedMovies rm
    LEFT JOIN 
        HighRatedMovies hmv ON rm.movie_title = hmv.title
    WHERE 
        rm.rank <= 5
)
SELECT 
    actor_name,
    movie_title,
    production_year,
    COALESCE(average_rating, 'No Rating') AS average_rating
FROM 
    FinalMovieList
WHERE 
    production_year IS NOT NULL
ORDER BY 
    actor_name, 
    production_year DESC
LIMIT 100;