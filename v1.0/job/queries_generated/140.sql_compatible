
WITH RankedMovies AS (
    SELECT 
        a.title,
        a.production_year,
        COUNT(DISTINCT c.person_id) AS actor_count,
        AVG(CASE WHEN c.nr_order IS NOT NULL THEN c.nr_order ELSE 0 END) AS avg_actor_order,
        ROW_NUMBER() OVER (PARTITION BY a.production_year ORDER BY COUNT(DISTINCT c.person_id) DESC) AS rank
    FROM 
        aka_title a
    LEFT JOIN 
        cast_info c ON a.id = c.movie_id
    WHERE 
        a.production_year BETWEEN 1990 AND 2020
    GROUP BY 
        a.title, a.production_year
),
MoviesWithKeywords AS (
    SELECT 
        m.title,
        STRING_AGG(k.keyword, ', ') AS keywords
    FROM 
        RankedMovies m
    LEFT JOIN 
        movie_keyword mk ON m.title = mk.movie_id
    LEFT JOIN 
        keyword k ON mk.keyword_id = k.id
    WHERE 
        m.actor_count > 5
    GROUP BY 
        m.title
),
TopMovies AS (
    SELECT 
        mv.title,
        mv.actor_count,
        mv.avg_actor_order,
        mw.keywords
    FROM 
        RankedMovies mv
    JOIN 
        MoviesWithKeywords mw ON mv.title = mw.title
    WHERE 
        mv.rank <= 10
)
SELECT 
    title,
    actor_count,
    avg_actor_order,
    COALESCE(keywords, 'No keywords') AS keywords
FROM 
    TopMovies
ORDER BY 
    actor_count DESC, avg_actor_order DESC;
