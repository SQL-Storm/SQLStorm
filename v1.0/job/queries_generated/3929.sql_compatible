
WITH MovieDetails AS (
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        COUNT(DISTINCT ci.person_id) AS cast_count,
        STRING_AGG(DISTINCT ak.name, ', ') AS actors,
        ROUND(AVG(CASE WHEN mi.info_type_id = 1 THEN CAST(mi.info AS float) END), 2) AS avg_rating
    FROM 
        aka_title t
    LEFT JOIN 
        complete_cast cc ON t.id = cc.movie_id
    LEFT JOIN 
        cast_info ci ON cc.subject_id = ci.id
    LEFT JOIN 
        aka_name ak ON ci.person_id = ak.person_id
    LEFT JOIN 
        movie_info mi ON t.id = mi.movie_id
    WHERE 
        t.production_year >= 2000 
        AND t.production_year < 2023
    GROUP BY 
        t.id, t.title, t.production_year
), 
FilteredMovies AS (
    SELECT 
        movie_id,
        title,
        production_year,
        cast_count,
        actors,
        avg_rating,
        DENSE_RANK() OVER (ORDER BY avg_rating DESC) AS rating_rank
    FROM 
        MovieDetails
)
SELECT 
    fm.movie_id,
    fm.title,
    fm.production_year,
    fm.cast_count,
    fm.actors,
    fm.avg_rating,
    CASE 
        WHEN fm.avg_rating IS NULL THEN 'No Rating'
        WHEN fm.cast_count = 0 THEN 'No Cast'
        ELSE 'Available'
    END AS status
FROM 
    FilteredMovies fm
WHERE 
    (fm.avg_rating > 8.0 OR fm.cast_count > 5)
    AND fm.rating_rank <= 100
ORDER BY 
    fm.avg_rating DESC, 
    fm.title ASC;
