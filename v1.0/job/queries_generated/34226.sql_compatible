
WITH RECURSIVE movie_hierarchy AS (
    SELECT m.id AS movie_id, 
           m.title, 
           m.production_year, 
           1 AS level 
    FROM aka_title m
    WHERE m.production_year = 2023

    UNION ALL

    SELECT m.id AS movie_id, 
           m.title, 
           m.production_year, 
           mh.level + 1 
    FROM movie_hierarchy mh
    JOIN movie_link ml ON mh.movie_id = ml.movie_id
    JOIN aka_title m ON ml.linked_movie_id = m.id
)

SELECT 
    m.movie_id,
    m.title AS movie_title,
    m.production_year,
    c.role_id,
    c.nr_order,
    a.name AS actor_name,
    COALESCE(ci.kind, 'Unknown') AS cast_type,
    COUNT(DISTINCT mk.keyword) AS keyword_count,
    AVG(COALESCE(mi.info_length, 0)) AS avg_info_length,
    STRING_AGG(DISTINCT mi.info, ', ') AS movie_infos
FROM movie_hierarchy m
LEFT JOIN complete_cast cc ON m.movie_id = cc.movie_id
LEFT JOIN cast_info c ON cc.subject_id = c.person_id
LEFT JOIN aka_name a ON c.person_id = a.person_id
LEFT JOIN movie_keyword mk ON m.movie_id = mk.movie_id
LEFT JOIN movie_info mi ON m.movie_id = mi.movie_id
LEFT JOIN comp_cast_type ci ON c.role_id = ci.id
WHERE m.production_year BETWEEN 2000 AND 2023
  AND a.name IS NOT NULL
GROUP BY m.movie_id, m.title, m.production_year, c.role_id, c.nr_order, a.name, ci.kind
HAVING COUNT(DISTINCT mk.keyword) > 5
ORDER BY m.production_year DESC, actor_name ASC;
