
WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        m.id AS movie_id,
        m.title,
        ARRAY[m.title] AS title_path,
        1 AS depth
    FROM 
        aka_title m
    WHERE 
        m.kind_id = (SELECT id FROM kind_type WHERE kind = 'movie') 
    
    UNION ALL
    
    SELECT 
        m.id AS movie_id,
        m.title,
        mh.title_path || m.title,
        mh.depth + 1
    FROM 
        movie_link ml 
    JOIN 
        aka_title m ON ml.linked_movie_id = m.id
    JOIN 
        MovieHierarchy mh ON ml.movie_id = mh.movie_id
)
SELECT 
    m.id AS movie_id,
    m.title AS original_title,
    COALESCE(aka.name, 'Unknown') AS aka_name,
    COUNT(ci.id) FILTER (WHERE ci.person_role_id IS NOT NULL) AS cast_count,
    STRING_AGG(DISTINCT ct.kind, ', ') AS company_kinds,
    SUM(CASE WHEN mi.info_type_id = (SELECT id FROM info_type WHERE info = 'Box Office') 
             THEN NULLIF(mi.info, '')::numeric
             ELSE 0 END) AS total_box_office,
    SUM(CASE WHEN mi.info_type_id = (SELECT id FROM info_type WHERE info = 'Budget') 
             THEN NULLIF(mi.info, '')::numeric
             ELSE 0 END) AS total_budget,
    ARRAY_AGG(DISTINCT k.keyword) AS keywords,
    ROW_NUMBER() OVER (PARTITION BY m.production_year ORDER BY COUNT(ci.id) DESC) AS rank_within_year
FROM 
    aka_title AS m
LEFT JOIN 
    cast_info AS ci ON ci.movie_id = m.movie_id
LEFT JOIN 
    aka_name AS aka ON ci.person_id = aka.person_id 
LEFT JOIN 
    movie_companies AS mc ON m.id = mc.movie_id 
LEFT JOIN 
    company_type AS ct ON mc.company_type_id = ct.id
LEFT JOIN 
    movie_info AS mi ON m.id = mi.movie_id
LEFT JOIN 
    movie_keyword AS mk ON m.id = mk.movie_id 
LEFT JOIN 
    keyword AS k ON mk.keyword_id = k.id
WHERE 
    m.production_year >= 2000
GROUP BY 
    m.id, m.title, aka.name, m.production_year
HAVING 
    COUNT(DISTINCT ci.person_id) > 5 
    AND COALESCE(SUM(CASE WHEN mi.info_type_id = (SELECT id FROM info_type WHERE info = 'Box Office') 
                   THEN NULLIF(mi.info, '')::numeric 
                   ELSE 0 END), 0) > 0 
ORDER BY 
    total_box_office DESC
LIMIT 10;
