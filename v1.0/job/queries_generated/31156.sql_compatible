
WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        mt.title AS movie_title,
        mt.production_year,
        CASE 
            WHEN mt.episode_of_id IS NOT NULL THEN 
                (SELECT title FROM aka_title WHERE id = mt.episode_of_id)
            ELSE 
                NULL 
        END AS parent_title,
        1 AS level
    FROM 
        aka_title mt
    WHERE 
        mt.production_year >= 2000 

    UNION ALL
    
    SELECT 
        mt.title AS movie_title,
        mt.production_year,
        CASE 
            WHEN mt.episode_of_id IS NOT NULL THEN 
                (SELECT title FROM aka_title WHERE id = mt.episode_of_id)
            ELSE 
                NULL 
        END AS parent_title,
        mh.level + 1
    FROM 
        aka_title mt
    INNER JOIN MovieHierarchy mh ON mt.episode_of_id = mh.id
)

SELECT 
    mh.movie_title,
    mh.production_year,
    mh.parent_title,
    ROW_NUMBER() OVER (PARTITION BY mh.production_year ORDER BY mh.level) AS rank_within_year,
    COUNT(DISTINCT ci.person_id) OVER (PARTITION BY mh.movie_title) AS total_castings,
    COALESCE(ci.nr_order, 0) AS casting_order,
    STRING_AGG(DISTINCT ak.name, ', ') AS cast_names
FROM 
    MovieHierarchy mh
LEFT JOIN 
    cast_info ci ON ci.movie_id IN (SELECT id FROM aka_title WHERE title = mh.movie_title)
LEFT JOIN 
    aka_name ak ON ak.person_id = ci.person_id
WHERE 
    mh.production_year IS NOT NULL
GROUP BY 
    mh.movie_title, 
    mh.production_year, 
    mh.parent_title, 
    ci.nr_order
ORDER BY 
    mh.production_year DESC, 
    mh.movie_title;
