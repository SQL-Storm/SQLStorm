WITH ranked_movies AS (
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        COUNT(DISTINCT c.person_id) AS cast_count,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY COUNT(DISTINCT c.person_id) DESC) AS rank
    FROM aka_title t
    LEFT JOIN cast_info c ON c.movie_id = t.id
    GROUP BY t.id, t.title, t.production_year
), 
actor_info AS (
    SELECT 
        ak.name AS actor_name,
        ak.person_id,
        COUNT(DISTINCT ci.movie_id) AS movie_count,
        STRING_AGG(DISTINCT mt.keyword, ', ') AS keywords
    FROM aka_name ak
    JOIN cast_info ci ON ci.person_id = ak.person_id
    LEFT JOIN movie_keyword mk ON mk.movie_id = ci.movie_id
    LEFT JOIN keyword mt ON mt.id = mk.keyword_id
    WHERE ak.name IS NOT NULL AND ak.name != ''
    GROUP BY ak.name, ak.person_id
), 
highest_rated AS (
    SELECT 
        mt.movie_id,
        mt.info AS rating_info,
        MAX(CASE WHEN it.info = 'rating' THEN mt.info END) AS highest_rating
    FROM movie_info mt
    JOIN info_type it ON it.id = mt.info_type_id
    GROUP BY mt.movie_id
),
outer_join_movies AS (
    SELECT 
        rm.title,
        rm.production_year,
        ai.actor_name,
        ai.movie_count,
        hr.highest_rating
    FROM ranked_movies rm
    LEFT JOIN actor_info ai ON ai.movie_count >= 5
    LEFT JOIN highest_rated hr ON hr.movie_id = rm.movie_id
    WHERE rm.rank <= 10 OR hr.highest_rating IS NOT NULL
)
SELECT 
    oj.title,
    oj.production_year,
    COALESCE(oj.actor_name, 'Unknown Actor') AS actor_name,
    COALESCE(oj.movie_count, 0) AS movie_count,
    (CASE 
        WHEN oj.highest_rating IS NULL THEN 'No rating available'
        ELSE oj.highest_rating
    END) AS rating_status
FROM outer_join_movies oj
ORDER BY oj.production_year DESC, oj.movie_count DESC;