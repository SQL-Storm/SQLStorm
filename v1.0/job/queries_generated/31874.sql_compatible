
WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        m.id AS movie_id,
        m.title,
        1 AS level
    FROM 
        aka_title m
    WHERE 
        m.production_year >= 2000  

    UNION ALL

    SELECT 
        m.id AS movie_id,
        mh.title,
        mh.level + 1
    FROM 
        movie_link ml
    JOIN 
        MovieHierarchy mh ON ml.movie_id = mh.movie_id
    JOIN 
        aka_title m ON ml.linked_movie_id = m.id
    WHERE 
        mh.level < 5  
)

SELECT 
    a.name AS actor_name,
    at.title AS movie_title,
    COALESCE(SUM(ci.nr_order), 0) AS total_cast_roles,
    AVG(CASE WHEN ci.note IS NOT NULL THEN 1 ELSE NULL END) AS avg_note_flag,
    STRING_AGG(DISTINCT c.name, ', ') AS comp_company_names,
    COUNT(DISTINCT kw.keyword) AS keyword_count
FROM 
    aka_name a
JOIN 
    cast_info ci ON ci.person_id = a.person_id
JOIN 
    aka_title at ON at.id = ci.movie_id
LEFT JOIN 
    movie_companies mc ON mc.movie_id = at.id
LEFT JOIN 
    company_name c ON c.id = mc.company_id
LEFT JOIN 
    movie_keyword kw ON kw.movie_id = at.id
LEFT JOIN 
    MovieHierarchy mh ON mh.movie_id = at.id
WHERE 
    a.name IS NOT NULL
    AND at.production_year BETWEEN 2000 AND 2023
    AND (ci.note IS NOT NULL OR ci.nr_order IS NOT NULL)
GROUP BY 
    a.name, at.title
HAVING 
    COUNT(DISTINCT ci.id) > 1
ORDER BY 
    total_cast_roles DESC,
    actor_name
LIMIT 50;
