
WITH MovieDetails AS (
    SELECT 
        t.id AS movie_id,
        t.title AS movie_title,
        t.production_year,
        k.keyword AS movie_keyword,
        STRING_AGG(DISTINCT co.name, ', ') AS company_names,
        STRING_AGG(DISTINCT a.name, ', ') AS actor_names,
        STRING_AGG(DISTINCT p.info, ', ') AS person_info,
        STRING_AGG(DISTINCT c.kind, ', ') AS cast_type
    FROM 
        aka_title t
    LEFT JOIN 
        movie_keyword mk ON t.id = mk.movie_id
    LEFT JOIN 
        keyword k ON mk.keyword_id = k.id
    LEFT JOIN 
        movie_companies mc ON t.id = mc.movie_id
    LEFT JOIN 
        company_name co ON mc.company_id = co.id
    LEFT JOIN 
        cast_info ci ON t.id = ci.movie_id
    LEFT JOIN 
        aka_name a ON ci.person_id = a.person_id
    LEFT JOIN 
        person_info p ON a.person_id = p.person_id
    LEFT JOIN 
        role_type c ON ci.role_id = c.id
    GROUP BY 
        t.id, t.title, t.production_year, k.keyword
),
RankedMovies AS (
    SELECT 
        md.movie_id,
        md.movie_title,
        md.production_year,
        md.movie_keyword,
        md.company_names,
        md.actor_names,
        md.person_info,
        md.cast_type,
        ROW_NUMBER() OVER (PARTITION BY md.production_year ORDER BY md.movie_title) AS rank
    FROM 
        MovieDetails md
)
SELECT 
    rm.rank,
    rm.movie_title,
    rm.production_year,
    rm.movie_keyword,
    rm.company_names,
    rm.actor_names,
    rm.person_info,
    rm.cast_type
FROM 
    RankedMovies rm
WHERE 
    rm.rank <= 10
ORDER BY 
    rm.production_year DESC, rm.rank;
