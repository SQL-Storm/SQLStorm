
WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        COALESCE(CAST(mi.info AS VARCHAR), 'No Info') AS movie_info,
        1 AS level
    FROM 
        aka_title mt
    LEFT JOIN 
        movie_info mi ON mt.id = mi.movie_id
    WHERE 
        mt.production_year IS NOT NULL
    
    UNION ALL
    
    SELECT 
        ml.linked_movie_id AS movie_id,
        at.title,
        at.production_year,
        COALESCE(CAST(mi.info AS VARCHAR), 'No Info') AS movie_info,
        mh.level + 1
    FROM 
        MovieHierarchy mh
    JOIN 
        movie_link ml ON mh.movie_id = ml.movie_id
    JOIN 
        aka_title at ON ml.linked_movie_id = at.id
    LEFT JOIN 
        movie_info mi ON at.id = mi.movie_id
)
SELECT 
    mh.movie_id,
    mh.title,
    mh.production_year,
    mh.movie_info,
    COUNT(DISTINCT c.person_id) AS total_cast,
    SUM(CASE WHEN ci.note IS NOT NULL THEN 1 ELSE 0 END) AS cast_with_notes,
    STRING_AGG(DISTINCT a.name, ', ') AS all_actor_names,
    ROW_NUMBER() OVER (ORDER BY mh.production_year DESC) AS rn
FROM 
    MovieHierarchy mh
LEFT JOIN 
    complete_cast cc ON mh.movie_id = cc.movie_id
LEFT JOIN 
    cast_info c ON cc.subject_id = c.id
LEFT JOIN 
    aka_name a ON c.person_id = a.person_id
GROUP BY 
    mh.movie_id, mh.title, mh.production_year, mh.movie_info
HAVING 
    COUNT(DISTINCT c.person_id) > 0
ORDER BY 
    mh.production_year DESC, total_cast DESC;
