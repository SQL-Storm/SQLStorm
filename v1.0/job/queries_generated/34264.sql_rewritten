WITH RecursiveMovieCTE AS (
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        t.kind_id,
        1 AS level
    FROM 
        aka_title t
    WHERE 
        t.production_year >= 2000

    UNION ALL

    SELECT 
        m.movie_id,
        m.title,
        m.production_year,
        m.kind_id,
        rc.level + 1
    FROM 
        movie_link ml
    JOIN 
        RecursiveMovieCTE rc ON ml.linked_movie_id = rc.movie_id
    JOIN 
        aka_title m ON ml.movie_id = m.id
    WHERE 
        rc.level < 3
)

SELECT 
    ak.name AS actor_name,
    ARRAY_AGG(DISTINCT t.title) AS acted_in_movies,
    COUNT(DISTINCT t.production_year) AS unique_years,
    AVG(CASE WHEN ci.note IS NOT NULL THEN 1 ELSE 0 END) AS noted_roles,
    STRING_AGG(DISTINCT kw.keyword, ', ') AS keywords
FROM 
    aka_name ak
JOIN 
    cast_info ci ON ak.person_id = ci.person_id
JOIN 
    RecursiveMovieCTE t ON ci.movie_id = t.movie_id
LEFT JOIN 
    movie_keyword mk ON t.movie_id = mk.movie_id
LEFT JOIN 
    keyword kw ON mk.keyword_id = kw.id
GROUP BY 
    ak.id
HAVING 
    COUNT(DISTINCT t.movie_id) > 5
ORDER BY 
    unique_years DESC, actor_name;