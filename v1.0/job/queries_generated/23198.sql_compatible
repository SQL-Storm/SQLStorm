
WITH RankedMovies AS (
    SELECT 
        t.id,
        t.title,
        t.production_year,
        COUNT(ci.person_id) AS cast_count,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY COUNT(ci.person_id) DESC) AS rn
    FROM 
        aka_title t
        LEFT JOIN cast_info ci ON t.id = ci.movie_id
    WHERE 
        t.production_year IS NOT NULL
    GROUP BY 
        t.id, t.title, t.production_year
),
TopMovies AS (
    SELECT 
        rm.title,
        rm.production_year,
        rm.cast_count,
        (SELECT AVG(cast_count) FROM RankedMovies WHERE production_year = rm.production_year) AS avg_cast_count
    FROM 
        RankedMovies rm
    WHERE 
        rm.rn <= 5
)
SELECT 
    tm.title,
    tm.production_year,
    tm.cast_count,
    CASE 
        WHEN tm.cast_count > tm.avg_cast_count THEN 'Above Average'
        WHEN tm.cast_count = tm.avg_cast_count THEN 'Average'
        ELSE 'Below Average'
    END AS cast_size_category,
    COALESCE(cn.name, 'Unknown') AS cast_name,
    (
        SELECT STRING_AGG(n.name, ', ') 
        FROM name n 
        JOIN cast_info ci ON n.id = ci.person_id 
        WHERE ci.movie_id = (
            SELECT movie_id FROM cast_info WHERE person_id = (SELECT MIN(id) FROM name) LIMIT 1
        )
    ) AS earliest_cast_names
FROM 
    TopMovies tm
    LEFT JOIN complete_cast cc ON tm.title = cc.movie_id
    LEFT JOIN aka_name cn ON cc.subject_id = cn.person_id
ORDER BY 
    tm.production_year DESC, tm.cast_count DESC;
