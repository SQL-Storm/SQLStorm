
WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        1 AS depth
    FROM 
        aka_title mt
    WHERE 
        mt.production_year BETWEEN 2000 AND 2023

    UNION ALL

    SELECT 
        ml.linked_movie_id AS movie_id,
        at.title,
        at.production_year,
        mh.depth + 1
    FROM 
        movie_link ml
    JOIN 
        aka_title at ON ml.linked_movie_id = at.id
    JOIN 
        movie_hierarchy mh ON ml.movie_id = mh.movie_id
    WHERE 
        mh.depth < 3
)

SELECT 
    mk.keyword,
    COUNT(DISTINCT mc.movie_id) AS movie_count,
    AVG(mh.depth) AS average_link_depth
FROM 
    movie_keyword mk
JOIN 
    movie_companies mc ON mk.movie_id = mc.movie_id
LEFT JOIN 
    movie_hierarchy mh ON mc.movie_id = mh.movie_id
JOIN 
    cast_info ci ON mc.movie_id = ci.movie_id
WHERE 
    ci.person_role_id IN (SELECT id FROM role_type WHERE role = 'Director')
    AND mk.keyword IS NOT NULL
GROUP BY 
    mk.keyword
HAVING 
    COUNT(DISTINCT mc.movie_id) > 5
ORDER BY 
    average_link_depth DESC, movie_count DESC;
