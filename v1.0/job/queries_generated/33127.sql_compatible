
WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        mt.movie_id,
        mt.title,
        mt.production_year,
        1 AS level,
        mt.id AS original_movie_id
    FROM aka_title mt
    WHERE mt.production_year >= 1990

    UNION ALL

    SELECT 
        ml.linked_movie_id,
        lt.title,
        lt.production_year,
        mh.level + 1,
        mh.original_movie_id
    FROM movie_link ml
    JOIN aka_title lt ON ml.linked_movie_id = lt.id
    JOIN MovieHierarchy mh ON ml.movie_id = mh.movie_id
),
MovieConsideration AS (
    SELECT 
        mh.movie_id,
        mh.title,
        mh.production_year,
        mh.level,
        COALESCE(SUM(CASE WHEN mcg.note IS NOT NULL THEN 1 ELSE 0 END), 0) AS note_count
    FROM MovieHierarchy mh
    LEFT JOIN movie_companies mc ON mh.movie_id = mc.movie_id
    LEFT JOIN company_name cn ON mc.company_id = cn.id
    LEFT JOIN movie_info minfo ON mh.movie_id = minfo.movie_id
    WHERE cn.country_code IS NULL OR cn.country_code <> 'USA'
    GROUP BY mh.movie_id, mh.title, mh.production_year, mh.level
),
RankedMovies AS (
    SELECT 
        *,
        ROW_NUMBER() OVER (PARTITION BY level ORDER BY note_count DESC, production_year DESC) AS rn
    FROM MovieConsideration
    WHERE note_count > 0
),
FinalMovies AS (
    SELECT 
        rm.title,
        rm.production_year,
        COALESCE(cn.name, 'Unknown') AS company_name,
        rm.level
    FROM RankedMovies rm
    LEFT JOIN movie_companies mc ON rm.movie_id = mc.movie_id
    LEFT JOIN company_name cn ON mc.company_id = cn.id
    WHERE rm.rn <= 10
)
SELECT 
    f.title,
    f.production_year,
    f.company_name,
    f.level
FROM FinalMovies f
ORDER BY f.level, f.production_year DESC;
