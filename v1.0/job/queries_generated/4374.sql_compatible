
WITH RankedMovies AS (
    SELECT 
        t.title, 
        t.production_year, 
        COUNT(DISTINCT c.person_id) AS actor_count,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY COUNT(DISTINCT c.person_id) DESC) AS rn
    FROM 
        aka_title t
    LEFT JOIN 
        cast_info c ON t.id = c.movie_id
    GROUP BY 
        t.title, t.production_year
),
PopularActors AS (
    SELECT 
        a.id AS actor_id, 
        a.name, 
        COUNT(DISTINCT c.movie_id) AS movie_count
    FROM 
        aka_name a
    JOIN 
        cast_info c ON a.person_id = c.person_id
    GROUP BY 
        a.id, a.name
    HAVING 
        COUNT(DISTINCT c.movie_id) > 5
),
MovieKeywords AS (
    SELECT 
        mk.movie_id, 
        STRING_AGG(k.keyword, ', ') AS keywords
    FROM 
        movie_keyword mk
    JOIN 
        keyword k ON mk.keyword_id = k.id
    GROUP BY 
        mk.movie_id
)
SELECT 
    rm.title,
    rm.production_year,
    rm.actor_count,
    pa.name AS popular_actor,
    mk.keywords
FROM 
    RankedMovies rm
LEFT JOIN 
    PopularActors pa ON pa.movie_count = rm.actor_count
LEFT JOIN 
    MovieKeywords mk ON mk.movie_id = rm.id
WHERE 
    rm.rn <= 10 
    AND (pa.name IS NULL OR pa.name LIKE '%Smith%')
ORDER BY 
    rm.production_year DESC, rm.actor_count DESC;
