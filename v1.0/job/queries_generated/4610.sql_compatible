
WITH RankedMovies AS (
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.title) AS title_rank,
        COUNT(DISTINCT c.person_id) OVER (PARTITION BY t.id) AS actor_count
    FROM title t
    LEFT JOIN complete_cast cc ON t.id = cc.movie_id
    LEFT JOIN cast_info ci ON cc.subject_id = ci.id
    LEFT JOIN aka_name an ON ci.person_id = an.person_id
    WHERE t.production_year IS NOT NULL
),
FilteredMovies AS (
    SELECT
        movie_id,
        title,
        production_year,
        title_rank,
        actor_count
    FROM RankedMovies 
    WHERE actor_count > 3
),
MovieKeywords AS (
    SELECT 
        mk.movie_id,
        STRING_AGG(DISTINCT k.keyword, ', ') AS keywords
    FROM movie_keyword mk
    JOIN keyword k ON mk.keyword_id = k.id
    GROUP BY mk.movie_id
)
SELECT
    fm.movie_id,
    fm.title,
    fm.production_year,
    fm.title_rank,
    COALESCE(mk.keywords, 'No keywords') AS keywords,
    CASE 
        WHEN fm.production_year < 2000 THEN 'Classic'
        WHEN fm.production_year BETWEEN 2000 AND 2010 THEN 'Modern'
        ELSE 'Recent'
    END AS era
FROM FilteredMovies fm
LEFT JOIN MovieKeywords mk ON fm.movie_id = mk.movie_id
ORDER BY fm.production_year DESC, fm.title_rank;
