
WITH RECURSIVE movie_hierarchy AS (
    SELECT
        m.id AS movie_id,
        m.title,
        m.production_year,
        1 AS level
    FROM
        aka_title m
    WHERE
        m.production_year >= 2000
    
    UNION ALL
    
    SELECT
        lm.linked_movie_id AS movie_id,
        t.title,
        t.production_year,
        mh.level + 1
    FROM
        movie_link lm
    JOIN title t ON lm.linked_movie_id = t.id
    JOIN movie_hierarchy mh ON lm.movie_id = mh.movie_id
),
distinct_keywords AS (
    SELECT DISTINCT
        mk.keyword_id,
        k.keyword
    FROM
        movie_keyword mk
    JOIN keyword k ON mk.keyword_id = k.id
),
qualified_cast AS (
    SELECT 
        c.movie_id,
        c.person_id,
        a.name AS actor_name,
        ROW_NUMBER() OVER (PARTITION BY c.movie_id ORDER BY c.nr_order) AS actor_rank
    FROM
        cast_info c
    JOIN aka_name a ON c.person_id = a.person_id
    INNER JOIN person_info pi ON c.person_id = pi.person_id
    WHERE
        pi.info_type_id = (SELECT id FROM info_type WHERE info = 'birth date') 
        AND pi.info IS NOT NULL
),
movie_details AS (
    SELECT 
        mh.movie_id,
        mh.title,
        mh.production_year,
        dk.keyword,
        kc.actor_name,
        COUNT(DISTINCT kc.person_id) OVER (PARTITION BY mh.movie_id) AS actor_count
    FROM 
        movie_hierarchy mh
    LEFT JOIN distinct_keywords dk ON mh.movie_id = (SELECT movie_id FROM movie_keyword WHERE keyword_id = dk.keyword_id LIMIT 1)
    LEFT JOIN qualified_cast kc ON mh.movie_id = kc.movie_id
)
SELECT
    md.title,
    md.production_year,
    md.keyword,
    COALESCE(md.actor_count, 0) AS actor_count
FROM 
    movie_details md
WHERE 
    md.production_year BETWEEN 2000 AND 2021
    AND (md.keyword IS NOT NULL OR md.actor_count > 5)
ORDER BY 
    md.production_year DESC,
    md.actor_count DESC;
