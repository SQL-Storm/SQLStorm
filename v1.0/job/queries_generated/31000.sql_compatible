
WITH RECURSIVE movie_hierarchy AS (
    SELECT mt1.movie_id, mt1.title, mt1.production_year, 1 AS level
    FROM aka_title mt1
    WHERE mt1.kind_id = (SELECT id FROM kind_type WHERE kind = 'movie')
    
    UNION ALL
    
    SELECT mt2.movie_id, mt2.title, mt2.production_year, mh.level + 1
    FROM movie_link ml
    JOIN movie_hierarchy mh ON ml.movie_id = mh.movie_id
    JOIN aka_title mt2 ON ml.linked_movie_id = mt2.id
)

SELECT 
    ak.name AS actor_name,
    at.title AS movie_title,
    COUNT(DISTINCT mc.company_id) AS company_count,
    COALESCE(SUM(mk.keyword_count), 0) AS total_keywords,
    SUM(mh.level) AS total_hierarchy_levels,
    ROW_NUMBER() OVER(PARTITION BY ak.name ORDER BY at.production_year DESC) AS rn
FROM aka_name ak
JOIN cast_info ci ON ak.person_id = ci.person_id
JOIN aka_title at ON ci.movie_id = at.id
LEFT JOIN (
    SELECT 
        mk.movie_id,
        COUNT(mk.keyword_id) AS keyword_count
    FROM movie_keyword mk
    GROUP BY mk.movie_id
) AS mk ON at.id = mk.movie_id
LEFT JOIN (
    SELECT mc.movie_id, mc.company_id
    FROM movie_companies mc
    GROUP BY mc.movie_id, mc.company_id
) AS mc ON at.id = mc.movie_id
JOIN movie_hierarchy mh ON at.id = mh.movie_id
WHERE ak.name IS NOT NULL
AND ak.name NOT LIKE '%[0-9]%'
AND at.production_year > 2000
GROUP BY ak.name, at.title, mh.level
HAVING COUNT(DISTINCT mc.company_id) > 0
ORDER BY total_hierarchy_levels DESC, rn
LIMIT 10;
