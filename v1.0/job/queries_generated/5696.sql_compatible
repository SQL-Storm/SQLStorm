
WITH RankedMovies AS (
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        COUNT(DISTINCT mc.company_id) AS company_count,
        COUNT(DISTINCT kc.keyword_id) AS keyword_count
    FROM title t
    LEFT JOIN movie_companies mc ON t.id = mc.movie_id
    LEFT JOIN movie_keyword kc ON t.id = kc.movie_id
    WHERE t.production_year >= 2000
    GROUP BY t.id, t.title, t.production_year
),
TopMovies AS (
    SELECT 
        rm.movie_id,
        rm.title,
        rm.production_year,
        rm.company_count,
        rm.keyword_count,
        ROW_NUMBER() OVER (ORDER BY rm.company_count DESC, rm.keyword_count DESC) AS rank
    FROM RankedMovies rm
    WHERE rm.company_count > 0 
)
SELECT 
    t.title,
    a.name AS actor_name,
    p.info AS actor_bio,
    ct.kind AS company_type,
    CASE 
        WHEN tm.rank <= 10 THEN 'Top 10'
        ELSE 'Below Top 10'
    END AS movie_rank_category
FROM TopMovies tm
JOIN complete_cast cc ON tm.movie_id = cc.movie_id
JOIN aka_name a ON cc.person_id = a.person_id
JOIN person_info p ON a.person_id = p.person_id
JOIN movie_companies mc ON tm.movie_id = mc.movie_id
JOIN company_type ct ON mc.company_type_id = ct.id
WHERE p.info_type_id = (SELECT id FROM info_type WHERE info = 'Biography')
  AND mc.note IS NULL
ORDER BY tm.rank, a.name;
