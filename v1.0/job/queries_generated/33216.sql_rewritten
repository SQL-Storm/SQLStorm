WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        1 AS level
    FROM 
        aka_title mt
    WHERE 
        mt.production_year > 2000
    
    UNION ALL
    
    SELECT 
        ml.linked_movie_id AS movie_id,
        at.title,
        at.production_year,
        mh.level + 1
    FROM 
        MovieHierarchy mh
    JOIN 
        movie_link ml ON mh.movie_id = ml.movie_id
    JOIN 
        aka_title at ON ml.linked_movie_id = at.id
    WHERE 
        mh.level < 5 
)

SELECT 
    ak.name AS actor_name,
    tit.title AS movie_title,
    tit.production_year,
    COUNT(DISTINCT mc.company_id) AS production_companies,
    AVG(pi.info_length) AS avg_info_length
FROM 
    aka_name ak
JOIN 
    cast_info ci ON ak.person_id = ci.person_id
JOIN 
    MovieHierarchy mh ON ci.movie_id = mh.movie_id
JOIN 
    aka_title tit ON mh.movie_id = tit.id
LEFT JOIN 
    movie_companies mc ON tit.id = mc.movie_id
LEFT JOIN 
    movie_info mi ON tit.id = mi.movie_id AND mi.note IS NOT NULL
LEFT JOIN 
    (SELECT movie_id, LENGTH(info) AS info_length FROM movie_info) pi ON tit.id = pi.movie_id
WHERE 
    ak.name IS NOT NULL
    AND (tit.production_year IS NOT NULL OR tit.production_year > 2010)
GROUP BY 
    ak.name, tit.title, tit.production_year
HAVING 
    COUNT(DISTINCT mc.company_id) > 2
ORDER BY 
    avg_info_length DESC, tit.production_year DESC;