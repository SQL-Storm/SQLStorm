
WITH RECURSIVE movie_hierarchy AS (
    SELECT
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        1 AS level
    FROM
        aka_title mt
    WHERE
        mt.kind_id = (SELECT id FROM kind_type WHERE kind = 'movie')

    UNION ALL

    SELECT
        ml.linked_movie_id,
        at.title,
        at.production_year,
        mh.level + 1
    FROM
        movie_link ml
    JOIN
        aka_title at ON ml.movie_id = at.id
    JOIN
        movie_hierarchy mh ON ml.linked_movie_id = mh.movie_id
),

movie_casts AS (
    SELECT
        c.movie_id,
        a.name AS actor_name,
        r.role AS character_name,
        ROW_NUMBER() OVER (PARTITION BY c.movie_id ORDER BY c.nr_order) AS actor_rank
    FROM
        cast_info c
    JOIN
        aka_name a ON c.person_id = a.person_id
    JOIN
        role_type r ON c.role_id = r.id
),

movies_with_info AS (
    SELECT
        mh.movie_id,
        mh.title,
        mh.production_year,
        COALESCE(mk.keywords, 'No Keywords') AS keywords,
        COALESCE(mc.company_name, 'Unknown Company') AS company_name,
        COUNT(DISTINCT mc.company_id) AS num_companies
    FROM
        movie_hierarchy mh
    LEFT JOIN (
        SELECT
            mk.movie_id,
            STRING_AGG(k.keyword, ', ') AS keywords
        FROM
            movie_keyword mk
        JOIN
            keyword k ON mk.keyword_id = k.id
        GROUP BY
            mk.movie_id
    ) mk ON mh.movie_id = mk.movie_id
    LEFT JOIN (
        SELECT
            mc.movie_id,
            cm.name AS company_name,
            mc.company_id
        FROM
            movie_companies mc
        JOIN
            company_name cm ON mc.company_id = cm.id
    ) mc ON mh.movie_id = mc.movie_id
    GROUP BY
        mh.movie_id, mh.title, mh.production_year
),

final_selection AS (
    SELECT
        m.title,
        m.production_year,
        ARRAY_AGG(DISTINCT c.actor_name) AS cast,
        m.keywords,
        m.company_name,
        m.num_companies,
        RANK() OVER (ORDER BY m.production_year DESC) AS rank
    FROM
        movies_with_info m
    JOIN
        movie_casts c ON m.movie_id = c.movie_id
    GROUP BY
        m.movie_id, m.title, m.production_year, m.keywords, m.company_name, m.num_companies
)

SELECT
    f.title,
    f.production_year,
    f.cast,
    f.keywords,
    f.company_name,
    f.num_companies,
    f.rank
FROM
    final_selection f
WHERE
    f.rank <= 10
ORDER BY
    f.production_year DESC;
