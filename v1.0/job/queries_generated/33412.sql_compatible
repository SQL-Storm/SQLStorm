
WITH RECURSIVE ActorHierarchy AS (
    SELECT
        ci.person_id,
        a.name AS actor_name,
        1 AS level
    FROM
        cast_info ci
    JOIN
        aka_name a ON ci.person_id = a.person_id
    WHERE
        ci.movie_id = (SELECT id FROM title WHERE title = 'Inception' LIMIT 1)

    UNION ALL

    SELECT
        ci.person_id,
        a.name,
        ah.level + 1
    FROM
        cast_info ci
    JOIN
        aka_name a ON ci.person_id = a.person_id
    JOIN
        ActorHierarchy ah ON ci.movie_id = (SELECT id FROM title WHERE title = 'Inception' LIMIT 1)
    WHERE
        ci.movie_id IN (SELECT linked_movie_id FROM movie_link WHERE movie_id = 
        (SELECT id FROM title WHERE title = 'Inception'))
)

SELECT
    ah.actor_name,
    COUNT(DISTINCT ci.movie_id) AS total_movies,
    STRING_AGG(DISTINCT t.title, ', ') AS movie_titles,
    MAX(m.production_year) AS last_movie_year,
    COUNT(DISTINCT mk.keyword) AS total_keywords,
    SUM(CASE WHEN t.production_year > 2000 THEN 1 ELSE 0 END) AS post_2000_movies,
    CASE 
        WHEN COUNT(DISTINCT ci.movie_id) = 0 THEN 'No Movies'
        ELSE 'Active Actor'
    END AS actor_status
FROM
    ActorHierarchy ah
JOIN
    cast_info ci ON ah.person_id = ci.person_id
JOIN
    title t ON ci.movie_id = t.id
LEFT JOIN
    movie_keyword mk ON t.id = mk.movie_id
LEFT JOIN
    movie_info mi ON t.id = mi.movie_id AND mi.info_type_id = (SELECT id FROM info_type WHERE info = 'Genre')
LEFT JOIN
    company_name c ON c.id IN (SELECT company_id FROM movie_companies WHERE movie_id = t.id)
WHERE
    ci.person_role_id IN (SELECT id FROM role_type WHERE role IN ('actor', 'lead'))
GROUP BY
    ah.actor_name
HAVING
    MAX(t.production_year) IS NOT NULL
ORDER BY
    total_movies DESC,
    last_movie_year DESC
LIMIT 10;
