
WITH RankedMovies AS (
    SELECT 
        t.id AS movie_id, 
        t.title, 
        t.production_year, 
        RANK() OVER (PARTITION BY t.production_year ORDER BY COUNT(c.person_id) DESC) AS role_rank,
        ARRAY_AGG(DISTINCT a.name) AS actor_names
    FROM 
        aka_title t
    LEFT JOIN 
        cast_info c ON t.id = c.movie_id
    LEFT JOIN 
        aka_name a ON c.person_id = a.person_id
    GROUP BY 
        t.id, t.title, t.production_year
),
MovieDetails AS (
    SELECT 
        rm.movie_id, 
        rm.title, 
        rm.production_year,
        COALESCE(mk.keyword, 'No Keywords') AS keywords,
        COALESCE(mci.note, 'No Company Info') AS company_info,
        rm.actor_names
    FROM 
        RankedMovies rm
    LEFT JOIN 
        movie_keyword mk ON rm.movie_id = mk.movie_id
    LEFT JOIN 
        movie_companies mci ON rm.movie_id = mci.movie_id
    WHERE 
        rm.role_rank = 1
)
SELECT 
    md.movie_id, 
    md.title, 
    md.production_year, 
    md.keywords, 
    md.company_info, 
    md.actor_names,
    COUNT(DISTINCT kw.id) AS unique_keywords,
    STRING_AGG(DISTINCT ckt.kind, ', ') AS company_types
FROM 
    MovieDetails md
LEFT JOIN 
    movie_keyword kw ON md.movie_id = kw.movie_id
LEFT JOIN 
    company_type ckt ON ckt.id = (SELECT mc.company_type_id FROM movie_companies mc WHERE mc.movie_id = md.movie_id LIMIT 1)
WHERE 
    md.production_year >= 2000
GROUP BY 
    md.movie_id, md.title, md.production_year, md.keywords, md.company_info, md.actor_names
HAVING 
    COUNT(DISTINCT kw.id) > 0
ORDER BY 
    md.production_year DESC, unique_keywords DESC;
