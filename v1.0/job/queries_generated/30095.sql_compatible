
WITH RECURSIVE actor_hierarchy AS (
    SELECT 
        c.person_id,
        a.name AS actor_name,
        1 AS level
    FROM 
        cast_info c
    JOIN 
        aka_name a ON c.person_id = a.person_id
    WHERE 
        a.name IS NOT NULL

    UNION ALL

    SELECT 
        c.person_id,
        a.name AS actor_name,
        ah.level + 1
    FROM 
        cast_info c
    JOIN 
        aka_name a ON c.person_id = a.person_id
    JOIN 
        actor_hierarchy ah ON c.movie_id = (SELECT movie_id FROM cast_info WHERE person_id = ah.person_id)
    WHERE 
        a.name IS NOT NULL AND ah.level < 5
),
movie_details AS (
    SELECT 
        t.title,
        t.production_year,
        COUNT(DISTINCT c.person_id) AS actor_count,
        STRING_AGG(DISTINCT a.name, ', ') AS actors
    FROM 
        title t
    LEFT JOIN 
        cast_info c ON t.id = c.movie_id
    LEFT JOIN 
        aka_name a ON c.person_id = a.person_id
    GROUP BY 
        t.title, t.production_year
),
keyword_details AS (
    SELECT 
        mk.movie_id,
        STRING_AGG(k.keyword, ', ') AS keywords
    FROM 
        movie_keyword mk
    JOIN 
        keyword k ON mk.keyword_id = k.id
    GROUP BY 
        mk.movie_id
)
SELECT 
    md.title,
    md.production_year,
    md.actor_count,
    md.actors,
    kd.keywords,
    COALESCE(ah.actor_name, 'Unknown') AS top_actor,
    md.actor_count * COUNT(DISTINCT c.person_id) OVER () AS actor_density
FROM 
    movie_details md
LEFT JOIN 
    keyword_details kd ON md.title = (SELECT title FROM title WHERE id = kd.movie_id)
LEFT JOIN 
    actor_hierarchy ah ON md.actor_count = ah.level
LEFT JOIN 
    cast_info c ON md.title = (SELECT title FROM title WHERE id = c.movie_id)
WHERE 
    md.production_year BETWEEN 2000 AND 2023
ORDER BY 
    md.production_year DESC,
    actor_density DESC
LIMIT 50;
