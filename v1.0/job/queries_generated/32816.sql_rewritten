WITH RECURSIVE movie_hierarchy AS (
    
    SELECT
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        1 AS level
    FROM
        aka_title mt
    WHERE
        mt.kind_id = (SELECT id FROM kind_type WHERE kind = 'movie')
    
    UNION ALL
    
    
    SELECT
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        mh.level + 1
    FROM
        aka_title mt
    JOIN
        movie_hierarchy mh ON mt.episode_of_id = mh.movie_id
)

SELECT
    ak.name AS actor_name,
    m.title AS movie_title,
    m.production_year,
    CASE
        WHEN m.production_year IS NULL THEN 'Year Unknown'
        ELSE CAST(EXTRACT(YEAR FROM cast('2024-10-01' as date)) - m.production_year AS VARCHAR)
    END AS years_since_release,
    COUNT(DISTINCT cc.id) AS character_count,
    STRING_AGG(DISTINCT CASE WHEN cc.note IS NOT NULL THEN cc.note ELSE 'No Notes' END, ', ') AS character_notes,
    ROW_NUMBER() OVER (PARTITION BY ak.id ORDER BY m.production_year DESC) AS actor_movie_rank
FROM
    aka_name ak
JOIN
    cast_info ci ON ak.person_id = ci.person_id
JOIN
    movie_hierarchy m ON ci.movie_id = m.movie_id
LEFT JOIN
    char_name cc ON cc.imdb_index = ak.imdb_index
WHERE
    ak.name IS NOT NULL AND
    (ci.person_role_id IS NULL OR ci.person_role_id IN (SELECT id FROM role_type WHERE role = 'lead'))
GROUP BY
    ak.id, m.id
HAVING
    COUNT(DISTINCT cc.id) > 0
ORDER BY
    years_since_release DESC, actor_name;