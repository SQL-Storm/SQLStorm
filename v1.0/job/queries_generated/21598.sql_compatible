
WITH RankedMovies AS (
    SELECT 
        t.title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.title) AS year_rank
    FROM 
        aka_title t
    WHERE 
        t.kind_id IN (SELECT id FROM kind_type WHERE kind = 'movie')
),
ActorMovies AS (
    SELECT 
        a.name AS actor_name,
        t.title,
        t.production_year,
        COUNT(DISTINCT ci.movie_id) AS movies_played,
        MIN(t.production_year) AS first_movie_year
    FROM 
        aka_name a
    JOIN 
        cast_info ci ON a.person_id = ci.person_id
    JOIN 
        aka_title t ON ci.movie_id = t.id
    WHERE 
        a.name IS NOT NULL
    GROUP BY 
        a.name, t.title, t.production_year
),
MovieCompanyDetails AS (
    SELECT 
        mc.movie_id,
        STRING_AGG(DISTINCT cn.name, ', ') AS companies
    FROM 
        movie_companies mc
    JOIN 
        company_name cn ON mc.company_id = cn.id
    WHERE 
        mc.note IS NOT NULL
    GROUP BY 
        mc.movie_id
),
CrossJoinedNames AS (
    SELECT 
        na.id AS name_id,
        na.name AS actor_name,
        NULLIF(na.name, '') AS sanitized_name
    FROM 
        name na
    CROSS JOIN 
        (SELECT base_name FROM (
            SELECT DISTINCT ON (name) name, md5sum FROM name 
            ORDER BY name, random()) base_table) AS b
    WHERE 
        b.base_name IS NOT NULL
),
ComplexFilters AS (
    SELECT 
        mv.title,
        mv.production_year,
        COALESCE(mcd.companies, 'No Company') AS company_list,
        RANK() OVER (PARTITION BY mv.production_year ORDER BY mv.title) AS rank_within_year
    FROM 
        RankedMovies mv
    LEFT JOIN 
        MovieCompanyDetails mcd ON mv.title = mcd.movie_id
    WHERE 
        mv.year_rank < 10
        AND mv.production_year > 2000
)
SELECT 
    cfn.actor_name,
    cf.title,
    cf.production_year,
    cf.company_list,
    cf.rank_within_year
FROM 
    ComplexFilters cf
JOIN 
    ActorMovies cfn ON cf.title = cfn.title AND cf.production_year = cfn.production_year
WHERE 
    cfn.movies_played > (SELECT AVG(movies_played) FROM ActorMovies)
ORDER BY 
    cf.production_year DESC, 
    cf.rank_within_year ASC
LIMIT 100;
