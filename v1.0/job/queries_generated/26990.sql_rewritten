WITH RankedMovies AS (
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        ka.name AS actor_name,
        ROW_NUMBER() OVER (PARTITION BY t.id ORDER BY ct.kind) AS actor_rank,
        COUNT(DISTINCT m.id) OVER () AS total_movies
    FROM 
        aka_title t
    JOIN 
        complete_cast cc ON t.id = cc.movie_id
    JOIN 
        cast_info ci ON cc.subject_id = ci.person_id
    JOIN 
        aka_name ka ON ci.person_id = ka.person_id
    JOIN 
        comp_cast_type ct ON ci.person_role_id = ct.id
    WHERE 
        t.production_year BETWEEN 2000 AND 2020
    AND 
        t.kind_id IN (SELECT id FROM kind_type WHERE kind = 'movie')
),
TopActors AS (
    SELECT 
        actor_name,
        COUNT(DISTINCT movie_id) AS number_of_movies
    FROM 
        RankedMovies
    WHERE 
        actor_rank <= 3  
    GROUP BY 
        actor_name
),
FilteredMovies AS (
    SELECT 
        m.movie_id,
        m.title,
        m.production_year,
        a.number_of_movies
    FROM 
        RankedMovies m
    JOIN 
        TopActors a ON m.actor_name = a.actor_name
    WHERE 
        m.actor_rank <= 3
)
SELECT 
    f.title,
    f.production_year,
    f.number_of_movies,
    ROUND((f.number_of_movies::decimal / total_movies) * 100, 2) AS percentage_of_top_actors
FROM 
    FilteredMovies f,
    (SELECT COUNT(DISTINCT movie_id) AS total_movies FROM RankedMovies) AS total
ORDER BY 
    f.number_of_movies DESC, 
    f.production_year ASC;