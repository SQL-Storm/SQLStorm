WITH ranked_titles AS (
    SELECT 
        a.person_id,
        a.name,
        t.title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY a.person_id ORDER BY t.production_year DESC) AS title_rank
    FROM 
        aka_name a
    JOIN 
        cast_info ci ON a.person_id = ci.person_id
    JOIN 
        aka_title t ON ci.movie_id = t.movie_id
    WHERE 
        t.production_year IS NOT NULL
),
distinct_years AS (
    SELECT 
        DISTINCT production_year
    FROM 
        ranked_titles
    WHERE 
        title_rank = 1
),
cast_counts AS (
    SELECT 
        ci.movie_id,
        COUNT(DISTINCT ci.person_id) AS number_of_cast
    FROM 
        cast_info ci
    GROUP BY 
        ci.movie_id
),
title_with_cast_and_ranks AS (
    SELECT 
        t.id AS title_id,
        t.title,
        COALESCE(cc.number_of_cast, 0) AS number_of_cast,
        rt.production_year,
        rt.title_rank
    FROM 
        aka_title t
    LEFT JOIN 
        cast_counts cc ON t.movie_id = cc.movie_id
    LEFT JOIN 
        ranked_titles rt ON t.id = rt.title_id
)
SELECT 
    twc.title,
    twc.production_year,
    twc.number_of_cast,
    twc.title_rank,
    COALESCE(NULLIF(twc.number_of_cast, 0), NULL) AS adjusted_cast_count,
    CASE 
        WHEN twc.title_rank = 1 AND twc.number_of_cast > 5 THEN 'Featured'
        WHEN twc.title_rank > 1 THEN 'Supporting'
        ELSE 'Minor/Uncredited'
    END AS role_category
FROM 
    title_with_cast_and_ranks twc
WHERE 
    twc.production_year IN (SELECT * FROM distinct_years)
ORDER BY 
    twc.production_year DESC, 
    twc.title_rank ASC
LIMIT 100;