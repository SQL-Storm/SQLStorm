
WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        m.id AS movie_id,
        m.title,
        m.production_year,
        1 AS level
    FROM 
        aka_title m
    WHERE 
        m.kind_id = (SELECT id FROM kind_type WHERE kind = 'movie')

    UNION ALL

    SELECT 
        ml.linked_movie_id AS movie_id,
        a.title,
        a.production_year,
        mh.level + 1
    FROM 
        movie_link ml
    INNER JOIN 
        aka_title a ON ml.linked_movie_id = a.id
    INNER JOIN 
        MovieHierarchy mh ON ml.movie_id = mh.movie_id
)
SELECT 
    m.title AS main_title,
    STRING_AGG(DISTINCT p.name, ', ') AS cast_names,
    STRING_AGG(DISTINCT k.keyword, ', ') AS movie_keywords,
    mh.level AS hierarchy_level,
    m.production_year,
    COALESCE(cn.name, 'Unknown Company') AS production_company
FROM 
    aka_title m
LEFT JOIN 
    cast_info ci ON m.id = ci.movie_id
LEFT JOIN 
    aka_name p ON ci.person_id = p.person_id
LEFT JOIN 
    movie_keyword mk ON m.id = mk.movie_id
LEFT JOIN 
    keyword k ON mk.keyword_id = k.id
LEFT JOIN 
    movie_companies mc ON mc.movie_id = m.id
LEFT JOIN 
    company_name cn ON mc.company_id = cn.id
LEFT JOIN 
    MovieHierarchy mh ON mh.movie_id = m.id
WHERE 
    m.production_year IS NOT NULL 
    AND (m.production_year > 2000 OR mh.level < 3)
GROUP BY 
    m.id, m.title, m.production_year, mh.level, cn.name
ORDER BY 
    m.production_year DESC, mh.level ASC;
