
WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        1 AS level
    FROM 
        aka_title mt
    WHERE 
        mt.production_year >= 2000  
    
    UNION ALL
    
    SELECT 
        ml.linked_movie_id AS movie_id,
        a.title,
        a.production_year,
        mh.level + 1
    FROM 
        movie_link ml
    JOIN 
        aka_title a ON ml.linked_movie_id = a.id
    JOIN 
        MovieHierarchy mh ON ml.movie_id = mh.movie_id
    WHERE 
        mh.level < 3  
),
RatedMovies AS (
    SELECT 
        mh.movie_id,
        mh.title,
        mh.production_year,
        COUNT(ci.person_id) AS cast_count,
        AVG(rating.rating) AS avg_rating
    FROM 
        MovieHierarchy mh
    LEFT JOIN 
        complete_cast cc ON mh.movie_id = cc.movie_id
    LEFT JOIN 
        (SELECT movie_id, rating FROM movie_info WHERE info_type_id = 1) AS rating ON mh.movie_id = rating.movie_id  
    LEFT JOIN 
        cast_info ci ON mh.movie_id = ci.movie_id
    GROUP BY 
        mh.movie_id, mh.title, mh.production_year  
),
TopRatedMovies AS (
    SELECT 
        *,
        RANK() OVER (ORDER BY avg_rating DESC) AS rank
    FROM 
        RatedMovies
    WHERE 
        cast_count > 5  
),
CompanyMovies AS (
    SELECT 
        m.movie_id,
        m.title,
        c.name AS company_name
    FROM 
        aka_title m
    JOIN 
        movie_companies mc ON m.id = mc.movie_id
    JOIN 
        company_name c ON mc.company_id = c.id
    WHERE 
        c.country_code = 'USA'  
)
SELECT 
    tr.title,
    tr.production_year,
    tr.avg_rating,
    cm.company_name
FROM 
    TopRatedMovies tr
LEFT JOIN 
    CompanyMovies cm ON tr.movie_id = cm.movie_id
WHERE 
    tr.rank <= 10  
ORDER BY 
    tr.avg_rating DESC, 
    cm.company_name;
