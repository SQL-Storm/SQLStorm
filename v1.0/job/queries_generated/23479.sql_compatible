
WITH movie_data AS (
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        COALESCE(ARRAY_AGG(DISTINCT k.keyword) FILTER (WHERE k.keyword IS NOT NULL), ARRAY[]::text[]) AS keywords,
        AVG(CASE WHEN ci.role_id IS NOT NULL THEN 1 ELSE NULL END) OVER (PARTITION BY t.id) AS avg_cast_role,
        COUNT(DISTINCT c.person_id) AS total_cast
    FROM 
        aka_title t
    LEFT JOIN 
        movie_keyword mk ON t.id = mk.movie_id
    LEFT JOIN 
        keyword k ON mk.keyword_id = k.id
    LEFT JOIN 
        cast_info ci ON t.id = ci.movie_id
    GROUP BY 
        t.id, t.title, t.production_year
),
company_data AS (
    SELECT 
        mc.movie_id,
        STRING_AGG(DISTINCT cn.name, ', ') AS company_names,
        STRING_AGG(DISTINCT ct.kind, ', ') AS company_types
    FROM 
        movie_companies mc
    JOIN 
        company_name cn ON mc.company_id = cn.id
    JOIN 
        company_type ct ON mc.company_type_id = ct.id
    GROUP BY 
        mc.movie_id
),
complete_cast AS (
    SELECT 
        movie_id,
        COUNT(DISTINCT person_id) AS complete_cast_count,
        SUM(CASE WHEN person_role_id IS NOT NULL THEN 1 ELSE 0 END) AS roles_filled
    FROM 
        cast_info
    GROUP BY 
        movie_id
),
final_data AS (
    SELECT 
        md.movie_id,
        md.title,
        md.production_year,
        md.keywords,
        COALESCE(cd.company_names, 'No Companies') AS company_names,
        COALESCE(cd.company_types, 'No Types') AS company_types,
        cc.complete_cast_count,
        cc.roles_filled,
        md.total_cast,
        CASE 
            WHEN cc.complete_cast_count > 10 THEN 'Large Cast'
            WHEN cc.complete_cast_count BETWEEN 5 AND 10 THEN 'Medium Cast'
            ELSE 'Small Cast' 
        END AS cast_size
    FROM 
        movie_data md
    LEFT JOIN 
        company_data cd ON md.movie_id = cd.movie_id
    LEFT JOIN 
        complete_cast cc ON md.movie_id = cc.movie_id
)
SELECT 
    *,
    CASE 
        WHEN total_cast > 0 THEN ROUND((roles_filled::float / total_cast) * 100, 2)
        ELSE NULL 
    END AS role_fill_percentage
FROM 
    final_data
ORDER BY 
    production_year DESC, title
LIMIT 100;
