
WITH RankedMovies AS (
    SELECT 
        t.title,
        t.production_year,
        COUNT(DISTINCT c.person_id) AS actor_count,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY COUNT(DISTINCT c.person_id) DESC) AS rank
    FROM 
        aka_title t
    LEFT JOIN 
        cast_info c ON t.id = c.movie_id
    WHERE 
        t.production_year IS NOT NULL
    GROUP BY 
        t.title, t.production_year
), MovieKeywords AS (
    SELECT 
        mk.movie_id,
        STRING_AGG(k.keyword, ', ') AS keywords
    FROM 
        movie_keyword mk
    JOIN 
        keyword k ON mk.keyword_id = k.id
    GROUP BY 
        mk.movie_id
), ActorInfo AS (
    SELECT 
        a.name,
        COUNT(DISTINCT ci.movie_id) AS movie_count,
        AVG(m.production_year) AS avg_year
    FROM 
        aka_name a
    JOIN 
        cast_info ci ON a.person_id = ci.person_id
    JOIN 
        aka_title m ON ci.movie_id = m.id
    WHERE 
        a.name IS NOT NULL
    GROUP BY 
        a.name
)
SELECT 
    rm.title,
    rm.production_year,
    rm.actor_count,
    mk.keywords,
    ai.name,
    ai.movie_count,
    ai.avg_year
FROM 
    RankedMovies rm
JOIN 
    MovieKeywords mk ON rm.title = mk.movie_id
JOIN 
    ActorInfo ai ON rm.actor_count = ai.movie_count
WHERE 
    rm.rank <= 5 AND
    (ai.avg_year > 2000 OR ai.movie_count > 10)
ORDER BY 
    rm.production_year DESC, rm.actor_count DESC;
