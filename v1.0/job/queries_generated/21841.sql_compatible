
WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        mt.id AS movie_id, 
        mt.title, 
        1 AS hierarchy_level,
        0 AS parent_id
    FROM aka_title mt
    WHERE mt.production_year > 2000
    
    UNION ALL
    
    SELECT 
        ml.linked_movie_id, 
        at.title, 
        mh.hierarchy_level + 1,
        mh.movie_id
    FROM movie_link ml
    JOIN movie_hierarchy mh ON ml.movie_id = mh.movie_id
    JOIN aka_title at ON ml.linked_movie_id = at.id
    WHERE mh.hierarchy_level < 5
),
actor_movie_info AS (
    SELECT 
        ak.id AS actor_id,
        ak.name AS actor_name,
        akp.title AS movie_position,
        COUNT(DISTINCT ci.id) AS movie_count,
        SUM(CASE WHEN ci.note IS NOT NULL THEN 1 ELSE 0 END) AS has_notes
    FROM aka_name ak
    JOIN cast_info ci ON ak.person_id = ci.person_id
    JOIN aka_title akp ON ci.movie_id = akp.id
    GROUP BY ak.id, ak.name, akp.title
),
joined_info AS (
    SELECT 
        am.actor_id,
        am.actor_name,
        mh.movie_id,
        mh.title AS linked_movie_title,
        am.movie_position,
        ROW_NUMBER() OVER (PARTITION BY am.actor_id ORDER BY mh.hierarchy_level DESC) AS row_num,
        am.movie_count,
        am.has_notes
    FROM actor_movie_info am
    LEFT JOIN movie_hierarchy mh ON am.movie_position = mh.title
),
final_selection AS (
    SELECT 
        j.actor_id,
        j.actor_name,
        j.linked_movie_title,
        j.movie_position,
        COALESCE(j.movie_count, 0) AS total_movies,
        CASE 
            WHEN j.has_notes = 0 THEN 'No Notes' 
            ELSE 'Has Notes' 
        END AS notes_status
    FROM joined_info j
    WHERE j.row_num = 1 OR j.movie_count > 3
)
SELECT 
    a.actor_id,
    a.actor_name,
    COALESCE(a.linked_movie_title, 'No Movie Linked') AS linked_movie,
    a.movie_position,
    a.total_movies,
    a.notes_status,
    a.total_movies - COUNT(mh.movie_id) OVER (PARTITION BY a.actor_id) AS remaining_movies
FROM final_selection a
LEFT JOIN movie_hierarchy mh ON a.linked_movie_title = mh.title
WHERE a.notes_status = 'Has Notes'
ORDER BY a.actor_id, a.total_movies DESC;
