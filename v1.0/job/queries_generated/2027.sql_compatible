
WITH RankedMovies AS (
    SELECT 
        t.title AS movie_title,
        t.production_year,
        COUNT(c.person_id) AS cast_count,
        RANK() OVER (PARTITION BY t.production_year ORDER BY COUNT(c.person_id) DESC) AS rank_in_year
    FROM 
        aka_title t
    LEFT JOIN 
        cast_info c ON t.id = c.movie_id
    GROUP BY 
        t.title, t.production_year, t.id
),
TopMovies AS (
    SELECT 
        movie_title,
        production_year,
        cast_count
    FROM 
        RankedMovies
    WHERE 
        rank_in_year <= 3
)
SELECT 
    tm.movie_title,
    tm.production_year,
    tm.cast_count,
    STRING_AGG(DISTINCT a.name, ', ') AS actor_names,
    COALESCE(GROUP_CONCAT(DISTINCT k.keyword ORDER BY k.keyword), 'No Keywords') AS keywords,
    CASE 
        WHEN MIN(m.note) IS NULL THEN 'No Notes'
        ELSE MIN(m.note)
    END AS movie_note
FROM 
    TopMovies tm
LEFT JOIN 
    complete_cast cc ON tm.movie_title = (SELECT title FROM title WHERE id = cc.movie_id)
LEFT JOIN 
    cast_info c ON cc.subject_id = c.person_id
LEFT JOIN 
    aka_name a ON c.person_id = a.person_id
LEFT JOIN 
    movie_keyword mk ON tm.movie_title = (SELECT title FROM title WHERE id = mk.movie_id)
LEFT JOIN 
    keyword k ON mk.keyword_id = k.id
LEFT JOIN 
    movie_info m ON tm.movie_title = (SELECT title FROM title WHERE id = m.movie_id)
GROUP BY 
    tm.movie_title,
    tm.production_year,
    tm.cast_count
ORDER BY 
    tm.production_year DESC, 
    tm.cast_count DESC;
