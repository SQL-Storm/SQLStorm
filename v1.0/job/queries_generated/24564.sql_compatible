
WITH RankedMovies AS (
    SELECT 
        mt.title,
        mt.production_year,
        COUNT(ci.person_id) AS actor_count,
        ROW_NUMBER() OVER (PARTITION BY mt.production_year ORDER BY COUNT(ci.person_id) DESC) AS rank_by_cast_size
    FROM 
        aka_title mt
    JOIN 
        complete_cast cc ON cc.movie_id = mt.id
    LEFT JOIN 
        cast_info ci ON ci.movie_id = mt.id
    GROUP BY 
        mt.title, mt.production_year
),
SubqueryWithInfo AS (
    SELECT 
        c.id AS cast_id,
        c.note AS cast_note,
        ak.name AS actor_name,
        ak.id AS actor_id,
        mt.title AS movie_title,
        mt.production_year AS movie_year,
        COALESCE(mi.info, 'No Information') AS movie_info
    FROM 
        cast_info c
    JOIN 
        aka_name ak ON ak.person_id = c.person_id
    JOIN 
        aka_title mt ON mt.id = c.movie_id
    LEFT JOIN 
        movie_info mi ON mi.movie_id = mt.id
    WHERE 
        ak.name IS NOT NULL
),
UniqueKeywords AS (
    SELECT 
        mk.movie_id,
        STRING_AGG(DISTINCT k.keyword, ', ') AS keywords_list
    FROM 
        movie_keyword mk
    JOIN 
        keyword k ON mk.keyword_id = k.id
    GROUP BY 
        mk.movie_id
)
SELECT 
    sm.actor_name,
    sm.movie_title,
    sm.movie_year,
    sm.movie_info,
    COALESCE(uk.keywords_list, 'No Keywords') AS keywords,
    rm.actor_count
FROM 
    SubqueryWithInfo sm
LEFT JOIN 
    UniqueKeywords uk ON sm.movie_title = uk.movie_id
JOIN 
    RankedMovies rm ON sm.movie_title = rm.title AND sm.movie_year = rm.production_year
WHERE 
    rm.rank_by_cast_size <= 5 
ORDER BY 
    sm.movie_year DESC, 
    rm.actor_count DESC, 
    sm.actor_name;
