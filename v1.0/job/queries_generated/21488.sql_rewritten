WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        1 AS level
    FROM 
        aka_title mt
    WHERE 
        mt.production_year IS NOT NULL
    UNION ALL
    SELECT 
        ml.linked_movie_id AS movie_id,
        at.title,
        at.production_year,
        mh.level + 1
    FROM 
        movie_link ml
    JOIN 
        aka_title at ON ml.linked_movie_id = at.id
    JOIN 
        movie_hierarchy mh ON ml.movie_id = mh.movie_id
),
cast_summary AS (
    SELECT 
        ci.movie_id,
        COUNT(DISTINCT ci.person_id) AS actor_count,
        STRING_AGG(DISTINCT ak.name, ', ') AS actors
    FROM 
        cast_info ci
    JOIN 
        aka_name ak ON ci.person_id = ak.person_id
    GROUP BY 
        ci.movie_id
),
keyword_summary AS (
    SELECT 
        mk.movie_id,
        COUNT(mk.keyword_id) AS keyword_count,
        STRING_AGG(DISTINCT k.keyword, ', ') AS keywords
    FROM 
        movie_keyword mk
    JOIN 
        keyword k ON mk.keyword_id = k.id
    GROUP BY 
        mk.movie_id
),
info_summary AS (
    SELECT 
        mi.movie_id,
        COUNT(DISTINCT mi.info_type_id) AS info_type_count,
        STRING_AGG(DISTINCT it.info, '; ') AS info_details
    FROM 
        movie_info mi
    JOIN 
        info_type it ON mi.info_type_id = it.id
    GROUP BY 
        mi.movie_id
)

SELECT 
    mh.movie_id,
    mh.title,
    mh.production_year,
    COALESCE(cs.actor_count, 0) AS total_actors,
    COALESCE(ks.keyword_count, 0) AS total_keywords,
    COALESCE(is.info_type_count, 0) AS total_info_types,
    mh.level,
    (CASE 
        WHEN mh.level = 1 THEN 'Original'
        WHEN mh.level = 2 THEN 'Sequel'
        ELSE 'Franchise'
     END) AS movie_level,
    (CASE 
        WHEN mh.production_year IS NULL THEN 'Unknown Year' 
        ELSE 'Known Year' 
     END) AS production_year_status
FROM 
    movie_hierarchy mh
LEFT JOIN 
    cast_summary cs ON mh.movie_id = cs.movie_id
LEFT JOIN 
    keyword_summary ks ON mh.movie_id = ks.movie_id
LEFT JOIN 
    info_summary is ON mh.movie_id = is.movie_id
WHERE 
    (mh.production_year >= 2000 OR mh.production_year IS NULL)  
ORDER BY 
    mh.production_year DESC NULLS LAST, 
    mh.title ASC
LIMIT 100;