
WITH MovieDetails AS (
    SELECT 
        t.id AS title_id,
        t.title,
        t.production_year,
        COUNT(DISTINCT c.person_id) AS actor_count,
        ARRAY_AGG(DISTINCT ak.name) AS actor_names
    FROM 
        aka_title t
    LEFT JOIN 
        complete_cast cc ON cc.movie_id = t.id
    LEFT JOIN 
        cast_info c ON c.movie_id = t.id
    LEFT JOIN 
        aka_name ak ON ak.person_id = c.person_id
    WHERE 
        t.production_year IS NOT NULL
    GROUP BY 
        t.id, t.title, t.production_year
),
AggregatedInfo AS (
    SELECT 
        md.title_id,
        md.title,
        md.production_year,
        md.actor_count,
        (SELECT COUNT(*) FROM movie_info mi WHERE mi.movie_id = md.title_id) AS info_count
    FROM 
        MovieDetails md
)
SELECT 
    ai.title_id,
    ai.title,
    ai.production_year,
    ai.actor_count,
    ai.info_count,
    CASE 
        WHEN ai.actor_count > 5 THEN 'Blockbuster'
        WHEN ai.actor_count BETWEEN 3 AND 5 THEN 'Moderate'
        ELSE 'Indie'
    END AS classification,
    COALESCE(NULLIF(ai.info_count, 0), 'No Info') AS info_status
FROM 
    AggregatedInfo ai
ORDER BY 
    ai.production_year DESC, ai.actor_count DESC
LIMIT 10;
