
WITH ranked_movies AS (
    SELECT 
        mt.title AS movie_title,
        mt.production_year,
        mt.kind_id,
        COUNT(ci.id) AS cast_count,
        nt.name AS genre,
        ROW_NUMBER() OVER (PARTITION BY mt.production_year ORDER BY COUNT(ci.id) DESC) AS rank
    FROM 
        aka_title mt
    LEFT JOIN 
        movie_keyword mk ON mk.movie_id = mt.id
    LEFT JOIN 
        keyword nt ON nt.id = mk.keyword_id
    LEFT JOIN 
        cast_info ci ON ci.movie_id = mt.id
    GROUP BY 
        mt.title, mt.production_year, mt.kind_id, nt.name
),
genre_summary AS (
    SELECT 
        genre,
        COUNT(movie_title) AS movies_count,
        AVG(cast_count) AS avg_cast_count
    FROM 
        ranked_movies
    GROUP BY 
        genre
    HAVING 
        AVG(cast_count) > 5
),
extended_cast AS (
    SELECT 
        a.name AS actor_name,
        mt.title AS movie_title,
        mt.production_year,
        COALESCE(cn.name, 'Unknown Company') AS company_name,
        RANK() OVER (PARTITION BY mt.production_year ORDER BY mt.production_year DESC) AS production_year_rank
    FROM 
        cast_info ci
    JOIN 
        aka_name a ON a.person_id = ci.person_id
    JOIN 
        aka_title mt ON mt.id = ci.movie_id
    LEFT JOIN 
        movie_companies mc ON mc.movie_id = mt.id
    LEFT JOIN 
        company_name cn ON cn.id = mc.company_id
)
SELECT 
    e.actor_name,
    e.movie_title,
    e.production_year,
    e.company_name,
    g.genre,
    g.movies_count,
    g.avg_cast_count
FROM 
    extended_cast e
JOIN 
    genre_summary g ON e.movie_title IN (SELECT movie_title 
                                          FROM ranked_movies 
                                          WHERE genre = g.genre)
WHERE 
    e.production_year_rank < 5
ORDER BY 
    e.production_year DESC, g.avg_cast_count DESC
LIMIT 100;
