
WITH RecursiveCast AS (
    SELECT 
        c.movie_id,
        p.person_id,
        a.name AS actor_name,
        ROW_NUMBER() OVER (PARTITION BY c.movie_id ORDER BY c.nr_order) AS actor_order,
        COUNT(*) OVER (PARTITION BY c.movie_id) AS total_actors
    FROM 
        cast_info AS c
    JOIN 
        aka_name AS a ON c.person_id = a.person_id
    JOIN 
        name AS p ON a.person_id = p.imdb_id
    WHERE 
        a.name IS NOT NULL
),
MovieInfo AS (
    SELECT 
        m.id AS movie_id,
        m.title,
        COALESCE(mi.info, 'No Info') AS movie_info,
        m.production_year,
        COALESCE(SUM(CASE WHEN k.keyword IS NOT NULL THEN 1 ELSE 0 END), 0) AS keyword_count
    FROM 
        aka_title AS m
    LEFT JOIN 
        movie_info AS mi ON m.id = mi.movie_id 
    LEFT JOIN 
        movie_keyword AS mk ON m.id = mk.movie_id 
    LEFT JOIN 
        keyword AS k ON mk.keyword_id = k.id 
    GROUP BY 
        m.id, mi.info, m.title, m.production_year
),
TopMovies AS (
    SELECT 
        mc.movie_id,
        COUNT(DISTINCT mc.company_id) AS company_count
    FROM 
        movie_companies AS mc
    GROUP BY 
        mc.movie_id 
    HAVING 
        COUNT(DISTINCT mc.company_id) >= 3
)
SELECT 
    m.title AS Movie_Title,
    m.production_year AS Production_Year,
    r.actor_name AS Lead_Actor,
    r.actor_order,
    r.total_actors,
    m.movie_info,
    t.company_count
FROM 
    MovieInfo AS m
JOIN 
    RecursiveCast AS r ON m.movie_id = r.movie_id AND r.actor_order = 1
LEFT JOIN 
    TopMovies AS t ON m.movie_id = t.movie_id
ORDER BY 
    m.production_year DESC, 
    t.company_count DESC 
LIMIT 10;
