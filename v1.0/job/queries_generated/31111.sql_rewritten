WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        m.id AS movie_id,
        m.title AS movie_title,
        m.production_year,
        1 AS level
    FROM 
        aka_title m
    WHERE 
        m.production_year >= 2000  
    
    UNION ALL
    
    SELECT 
        m.id AS movie_id,
        m.title AS movie_title,
        m.production_year,
        mh.level + 1
    FROM 
        aka_title m
    INNER JOIN 
        movie_link ml ON m.id = ml.linked_movie_id
    INNER JOIN 
        MovieHierarchy mh ON ml.movie_id = mh.movie_id
),
ActorRoleCounts AS (
    SELECT 
        ci.person_id,
        COUNT(DISTINCT ci.movie_id) AS movie_count,
        STRING_AGG(DISTINCT r.role, ', ') AS roles
    FROM 
        cast_info ci
    LEFT JOIN 
        role_type r ON ci.role_id = r.id
    GROUP BY 
        ci.person_id
),
TopActors AS (
    SELECT 
        ak.person_id,
        ak.name,
        ar.movie_count,
        ROW_NUMBER() OVER (ORDER BY ar.movie_count DESC) AS rank
    FROM 
        aka_name ak
    JOIN 
        ActorRoleCounts ar ON ak.person_id = ar.person_id
    WHERE 
        ak.name IS NOT NULL
)
SELECT 
    mh.movie_title,
    mh.production_year,
    ta.name AS top_actor,
    ta.movie_count,
    ta.roles,
    COALESCE(k.keyword, 'No keyword') AS keyword_used
FROM 
    MovieHierarchy mh
LEFT JOIN 
    movie_keyword mk ON mh.movie_id = mk.movie_id
LEFT JOIN 
    keyword k ON mk.keyword_id = k.id
LEFT JOIN 
    TopActors ta ON mh.movie_title LIKE '%' || ta.name || '%'
WHERE 
    mh.level = 1  
    AND (ta.movie_count > 5 OR ta.movie_count IS NULL)  
ORDER BY 
    mh.production_year DESC, 
    ta.movie_count DESC 
LIMIT 10;