
WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        m.id AS movie_id,
        t.title,
        m.production_year,
        1 AS depth
    FROM 
        aka_title t
    JOIN 
        movie_companies mc ON t.movie_id = mc.movie_id
    JOIN 
        company_name cn ON mc.company_id = cn.id
    JOIN 
        movie_info mi ON t.movie_id = mi.movie_id
    WHERE 
        mi.info_type_id = (SELECT id FROM info_type WHERE info = 'Genre') 
        AND mi.info LIKE '%Drama%'
    
    UNION ALL
    
    SELECT 
        mh.movie_id,
        mh.title,
        mh.production_year,
        mh.depth + 1
    FROM 
        movie_hierarchy mh
    JOIN 
        movie_link ml ON mh.movie_id = ml.movie_id
    WHERE 
        ml.linked_movie_id = mh.movie_id
)

SELECT 
    m.title,
    m.production_year,
    ci.kind AS cast_type,
    COUNT(DISTINCT ci.person_id) AS num_cast_members,
    AVG(CASE WHEN pi.info_type_id = (SELECT id FROM info_type WHERE info = 'Rating') THEN CAST(pi.info AS FLOAT) END) AS avg_rating,
    STRING_AGG(DISTINCT ak.name, ', ') AS aka_names
FROM 
    movie_hierarchy m
LEFT JOIN 
    cast_info ci ON m.movie_id = ci.movie_id
LEFT JOIN 
    aka_name ak ON ak.person_id = ci.person_id
LEFT JOIN 
    person_info pi ON ci.person_id = pi.person_id
GROUP BY 
    m.movie_id, m.title, m.production_year, ci.kind
HAVING 
    COUNT(DISTINCT ci.person_id) > 5
ORDER BY 
    avg_rating DESC NULLS LAST;
