
WITH RankedMovies AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        ROW_NUMBER() OVER (PARTITION BY mt.production_year ORDER BY mt.id) AS rank
    FROM 
        aka_title mt
    WHERE 
        mt.production_year IS NOT NULL
),
ActorMovieCounts AS (
    SELECT 
        ca.person_id,
        COUNT(DISTINCT ca.movie_id) AS movie_count
    FROM 
        cast_info ca
    GROUP BY 
        ca.person_id
),
TopActors AS (
    SELECT 
        kah.id,
        kah.name,
        ac.movie_count
    FROM 
        aka_name kah
    JOIN 
        ActorMovieCounts ac ON kah.person_id = ac.person_id
    WHERE 
        ac.movie_count > (SELECT AVG(movie_count) FROM ActorMovieCounts)
),
MoviesWithKeywords AS (
    SELECT 
        mt.id AS movie_id,
        STRING_AGG(mk.keyword, ', ') AS keywords
    FROM 
        aka_title mt
    LEFT JOIN 
        movie_keyword mk ON mt.id = mk.movie_id
    GROUP BY 
        mt.id
)
SELECT 
    rm.production_year AS year,
    rm.title,
    COALESCE(t.movie_count, 0) AS actor_count,
    wk.keywords
FROM 
    RankedMovies rm
LEFT JOIN 
    MoviesWithKeywords wk ON rm.movie_id = wk.movie_id
LEFT JOIN 
    (SELECT 
         movie_id, 
         COUNT(*) AS movie_count
     FROM 
         complete_cast
     GROUP BY 
         movie_id) t ON rm.movie_id = t.movie_id
WHERE 
    rm.rank <= 10 AND 
    (wk.keywords IS NULL OR wk.keywords LIKE '%action%' OR wk.keywords LIKE '%drama%')
ORDER BY 
    rm.production_year DESC, 
    t.movie_count DESC;
