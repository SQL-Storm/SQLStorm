
WITH RankedMovies AS (
    SELECT 
        mt.id AS movie_id,
        mt.title AS movie_title,
        mt.production_year,
        ROW_NUMBER() OVER (PARTITION BY mt.production_year ORDER BY mt.title) AS rank
    FROM 
        aka_title mt
    WHERE 
        mt.production_year IS NOT NULL
),
TopActors AS (
    SELECT 
        ai.person_id,
        ak.name AS actor_name,
        COUNT(ci.movie_id) AS movie_count
    FROM 
        cast_info ci
    JOIN 
        aka_name ak ON ci.person_id = ak.person_id
    WHERE 
        ak.name IS NOT NULL
    GROUP BY 
        ak.name, ai.person_id
    HAVING 
        COUNT(ci.movie_id) > 2
),
MovieGenres AS (
    SELECT 
        mt.id AS movie_id,
        STRING_AGG(DISTINCT kt.keyword, ', ') AS genres
    FROM 
        aka_title mt
    LEFT JOIN 
        movie_keyword mk ON mt.id = mk.movie_id
    LEFT JOIN 
        keyword kt ON mk.keyword_id = kt.id
    GROUP BY 
        mt.id
)
SELECT 
    rn.movie_title,
    rn.production_year,
    ta.actor_name,
    ta.movie_count,
    mg.genres,
    CASE 
        WHEN rn.rank <= 5 THEN 'Top 5'
        ELSE 'Other'
    END AS ranking_group
FROM 
    RankedMovies rn
JOIN 
    TopActors ta ON rn.movie_id IN (
        SELECT ci.movie_id FROM cast_info ci WHERE ci.person_id = ta.person_id
    )
LEFT JOIN 
    MovieGenres mg ON rn.movie_id = mg.movie_id
ORDER BY 
    rn.production_year DESC,
    ranking_group ASC,
    ta.movie_count DESC
LIMIT 50;
