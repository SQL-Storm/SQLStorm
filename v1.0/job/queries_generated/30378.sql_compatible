
WITH RECURSIVE movie_hierarchy AS (
    SELECT
        m.id AS movie_id,
        m.title,
        COALESCE(m.parent_id, 0) AS parent_id,
        1 AS depth
    FROM
        title m
    WHERE
        m.production_year >= 2000

    UNION ALL

    SELECT
        m.id AS movie_id,
        m.title,
        COALESCE(m.parent_id, 0) AS parent_id,
        depth + 1 AS depth
    FROM
        title m
    JOIN
        movie_hierarchy mh ON m.parent_id = mh.movie_id
)

SELECT
    ak.name AS actor_name,
    t.title AS movie_title,
    t.production_year,
    STRING_AGG(DISTINCT k.keyword, ', ') AS keywords,
    COUNT(DISTINCT c.id) AS total_cast,
    AVG(mh.depth) AS average_depth
FROM
    aka_name ak
JOIN
    cast_info c ON ak.person_id = c.person_id
JOIN
    aka_title at ON c.movie_id = at.movie_id
JOIN
    movie_keyword mk ON at.movie_id = mk.movie_id
JOIN
    keyword k ON mk.keyword_id = k.id
JOIN
    title t ON at.movie_id = t.id
LEFT JOIN
    movie_hierarchy mh ON t.id = mh.movie_id
WHERE
    ak.name IS NOT NULL
    AND ak.name <> ''
    AND t.production_year BETWEEN 2000 AND 2023
GROUP BY
    ak.name, t.title, t.production_year
HAVING
    COUNT(DISTINCT c.id) > 5
ORDER BY
    average_depth DESC, total_cast DESC;
