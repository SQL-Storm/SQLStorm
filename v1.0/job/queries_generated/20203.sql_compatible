
WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        ARRAY[mt.production_year] AS production_years,
        1 AS level
    FROM 
        aka_title mt
    WHERE 
        mt.production_year IS NOT NULL

    UNION ALL

    SELECT 
        ml.linked_movie_id,
        at.title,
        mh.production_years || at.production_year,
        mh.level + 1
    FROM 
        movie_link ml
    JOIN 
        aka_title at ON ml.linked_movie_id = at.id
    JOIN 
        movie_hierarchy mh ON ml.movie_id = mh.movie_id
    WHERE 
        at.production_year IS NOT NULL
)

SELECT 
    a.name AS actor_name,
    ARRAY_AGG(DISTINCT mh.title) AS linked_movies,
    COUNT(DISTINCT mh.movie_id) AS total_linked_movies,
    STRING_AGG(DISTINCT COALESCE(k.keyword, 'Unknown'), ', ') AS keywords
FROM 
    aka_name a
JOIN 
    cast_info ci ON a.person_id = ci.person_id
JOIN 
    movie_companies mc ON ci.movie_id = mc.movie_id
JOIN 
    movie_keyword mk ON mc.movie_id = mk.movie_id
LEFT JOIN 
    keyword k ON mk.keyword_id = k.id
LEFT JOIN 
    movie_hierarchy mh ON ci.movie_id = mh.movie_id
WHERE 
    a.name IS NOT NULL
    AND a.name <> ''
    AND ci.nr_order IS NOT NULL
    AND (k.keyword IS NULL OR LENGTH(k.keyword) > 3)
GROUP BY 
    a.person_id, a.name
HAVING 
    COUNT(DISTINCT mh.movie_id) > 5
ORDER BY 
    total_linked_movies DESC,
    actor_name
LIMIT 10;
