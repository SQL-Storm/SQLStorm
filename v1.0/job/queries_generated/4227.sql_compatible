
WITH ranked_movies AS (
    SELECT
        t.id AS movie_id,
        t.title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY COUNT(c.person_id) DESC) AS rank
    FROM
        aka_title t
    LEFT JOIN
        complete_cast cc ON t.id = cc.movie_id
    LEFT JOIN
        cast_info c ON c.movie_id = cc.movie_id
    GROUP BY
        t.id, t.title, t.production_year
),
movie_details AS (
    SELECT
        m.movie_id,
        m.title,
        m.production_year,
        COALESCE(k.keyword, 'No Keywords') AS keyword,
        COUNT(DISTINCT c.person_id) AS cast_count
    FROM
        ranked_movies m
    LEFT JOIN
        movie_keyword mk ON m.movie_id = mk.movie_id
    LEFT JOIN
        keyword k ON mk.keyword_id = k.id
    LEFT JOIN
        movie_companies mc ON m.movie_id = mc.movie_id
    LEFT JOIN
        company_name cn ON mc.company_id = cn.id
    GROUP BY
        m.movie_id, m.title, m.production_year, k.keyword
)
SELECT
    md.title,
    md.production_year,
    md.keyword,
    md.cast_count,
    CASE
        WHEN md.cast_count > 10 THEN 'Highly Casted'
        WHEN md.cast_count BETWEEN 5 AND 10 THEN 'Moderately Casted'
        ELSE 'Less Casted'
    END AS cast_ratio,
    (SELECT AVG(cast_count) FROM movie_details) AS avg_cast_count,
    (SELECT COUNT(*) FROM movie_details WHERE production_year = md.production_year) AS same_year_movie_count
FROM
    movie_details md
WHERE
    md.rank IS NOT NULL AND md.rank <= 3
ORDER BY
    md.production_year DESC, md.cast_count DESC;
