
WITH MovieDetails AS (
    SELECT 
        t.title AS movie_title,
        t.production_year,
        a.name AS actor_name,
        r.role AS actor_role,
        COUNT(DISTINCT kc.id) AS keyword_count,
        STRING_AGG(DISTINCT k.keyword, ', ') AS keywords,
        COALESCE(cn.name, 'Unknown Company') AS company_name
    FROM 
        title t
    JOIN 
        cast_info ci ON t.id = ci.movie_id
    JOIN 
        aka_name a ON ci.person_id = a.person_id
    JOIN 
        role_type r ON ci.role_id = r.id
    LEFT JOIN 
        movie_keyword mk ON t.id = mk.movie_id
    LEFT JOIN 
        keyword k ON mk.keyword_id = k.id
    LEFT JOIN 
        movie_companies mc ON t.id = mc.movie_id
    LEFT JOIN 
        company_name cn ON mc.company_id = cn.id
    WHERE 
        t.production_year >= 2000
    GROUP BY 
        t.title, t.production_year, a.name, r.role, cn.name
    ORDER BY 
        t.production_year DESC, a.name
),
Ranking AS (
    SELECT 
        movie_title,
        production_year,
        actor_name,
        actor_role,
        keyword_count,
        keywords,
        company_name,
        RANK() OVER (PARTITION BY production_year ORDER BY keyword_count DESC) AS rank_within_year
    FROM 
        MovieDetails
)
SELECT 
    production_year,
    COUNT(*) AS movie_count,
    STRING_AGG(DISTINCT movie_title, '; ') AS movie_titles,
    STRING_AGG(DISTINCT actor_name, ', ') AS actors,
    AVG(keyword_count) AS avg_keywords_per_movie,
    MAX(rank_within_year) AS highest_rank
FROM 
    Ranking
GROUP BY 
    production_year
ORDER BY 
    production_year DESC;
