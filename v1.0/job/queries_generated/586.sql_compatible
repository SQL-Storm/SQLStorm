
WITH RecursiveMovieCTE AS (
    SELECT m.id AS movie_id, m.title, m.production_year, COALESCE(ca.name, 'Unknown') AS cast_member
    FROM aka_title m
    LEFT JOIN cast_info ci ON m.id = ci.movie_id
    LEFT JOIN aka_name ca ON ci.person_id = ca.person_id
    WHERE m.production_year >= 2000
    UNION ALL
    SELECT m.id AS movie_id, m.title, m.production_year, COALESCE(ca.name, 'Unknown')
    FROM RecursiveMovieCTE r
    JOIN movie_link ml ON r.movie_id = ml.movie_id
    JOIN aka_title m ON ml.linked_movie_id = m.id
    LEFT JOIN cast_info ci ON m.id = ci.movie_id
    LEFT JOIN aka_name ca ON ci.person_id = ca.person_id
),
MovieCount AS (
    SELECT movie_id, COUNT(DISTINCT cast_member) AS total_cast_members
    FROM RecursiveMovieCTE
    GROUP BY movie_id
),
RankedMovies AS (
    SELECT m.id, m.title, m.production_year, mc.total_cast_members,
           ROW_NUMBER() OVER (ORDER BY mc.total_cast_members DESC) AS rank
    FROM aka_title m
    JOIN MovieCount mc ON m.id = mc.movie_id
),
TopRankedMovies AS (
    SELECT title, production_year, total_cast_members, r.movie_id
    FROM RankedMovies r
    WHERE r.rank <= 10
)
SELECT t.title, t.production_year, t.total_cast_members,
       (SELECT STRING_AGG(DISTINCT r.cast_member, ', ')
        FROM RecursiveMovieCTE r
        WHERE r.movie_id = t.movie_id) AS cast_list
FROM TopRankedMovies t
ORDER BY t.production_year DESC, t.total_cast_members DESC
LIMIT 5 OFFSET 0;
