
WITH RankedTitles AS (
    SELECT 
        t.id AS title_id,
        t.title,
        t.production_year,
        t.kind_id,
        RANK() OVER (PARTITION BY t.production_year ORDER BY LENGTH(t.title) DESC) AS title_rank
    FROM 
        aka_title t
    WHERE 
        t.production_year IS NOT NULL
),
TopRankedTitles AS (
    SELECT 
        rt.title_id,
        rt.title,
        rt.production_year,
        rt.kind_id
    FROM 
        RankedTitles rt
    WHERE 
        rt.title_rank <= 5
),
CompanyMovieInfo AS (
    SELECT 
        cm.movie_id,
        cn.name AS company_name,
        ct.kind AS company_type
    FROM 
        movie_companies cm
    JOIN 
        company_name cn ON cm.company_id = cn.id
    JOIN 
        company_type ct ON cm.company_type_id = ct.id
),
MovieKeywords AS (
    SELECT 
        mk.movie_id,
        STRING_AGG(k.keyword, ', ') AS keywords
    FROM 
        movie_keyword mk
    JOIN 
        keyword k ON mk.keyword_id = k.id
    GROUP BY 
        mk.movie_id
),
FinalBenchmark AS (
    SELECT 
        tt.title,
        tt.production_year,
        COUNT(DISTINCT ci.person_id) AS cast_count,
        COALESCE(mk.keywords, 'No Keywords') AS keywords,
        STRING_AGG(DISTINCT cm.company_name || ' (' || cm.company_type || ')', '; ') AS companies 
    FROM 
        TopRankedTitles tt
    JOIN 
        complete_cast cc ON tt.title_id = cc.movie_id
    LEFT JOIN 
        cast_info ci ON cc.subject_id = ci.person_id
    LEFT JOIN 
        CompanyMovieInfo cm ON tt.title_id = cm.movie_id
    LEFT JOIN 
        MovieKeywords mk ON tt.title_id = mk.movie_id
    GROUP BY 
        tt.title_id, tt.title, tt.production_year
    ORDER BY 
        tt.production_year DESC, cast_count DESC
)
SELECT * FROM FinalBenchmark;
