WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        mt.id AS movie_id, 
        mt.title, 
        mt.production_year,
        1 AS hierarchy_level
    FROM 
        aka_title mt
    WHERE 
        mt.kind_id = (SELECT id FROM kind_type WHERE kind = 'movie')
    
    UNION ALL

    SELECT 
        ml.linked_movie_id AS movie_id,
        m.title,
        m.production_year,
        mh.hierarchy_level + 1
    FROM 
        movie_link ml
    JOIN 
        MovieHierarchy mh ON ml.movie_id = mh.movie_id
    JOIN 
        aka_title m ON ml.linked_movie_id = m.id
)
SELECT 
    ak.name AS actor_name,
    mt.title AS movie_title,
    mt.production_year,
    (COUNT(DISTINCT c.role_id) OVER (PARTITION BY ak.id)) AS role_count,
    STRING_AGG(DISTINCT kw.keyword, ', ') AS keywords,
    COALESCE(STRING_AGG(DISTINCT cn.name, ', '), 'Unknown') AS company_names
FROM 
    aka_name ak
JOIN 
    cast_info c ON ak.person_id = c.person_id
JOIN 
    aka_title mt ON c.movie_id = mt.id
LEFT JOIN 
    movie_keyword mk ON mt.id = mk.movie_id
LEFT JOIN 
    keyword kw ON mk.keyword_id = kw.id
LEFT JOIN 
    movie_companies mc ON mt.id = mc.movie_id
LEFT JOIN 
    company_name cn ON mc.company_id = cn.id
JOIN 
    MovieHierarchy mh ON mt.id = mh.movie_id
WHERE 
    mt.production_year > 2000
    AND (ak.name IS NOT NULL AND ak.name <> '')
GROUP BY 
    ak.id, mt.id, mt.title, mt.production_year
HAVING 
    COUNT(DISTINCT c.role_id) > 1
ORDER BY 
    role_count DESC, mt.production_year DESC;