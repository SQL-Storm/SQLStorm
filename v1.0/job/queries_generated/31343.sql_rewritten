WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        1 AS level
    FROM 
        aka_title mt
    WHERE 
        mt.kind_id = (SELECT id FROM kind_type WHERE kind = 'movie') 
    
    UNION ALL
    
    SELECT 
        ml.linked_movie_id,
        at.title,
        at.production_year,
        mh.level + 1
    FROM 
        movie_link ml
    JOIN 
        aka_title at ON ml.linked_movie_id = at.id
    JOIN 
        MovieHierarchy mh ON ml.movie_id = mh.movie_id
)
SELECT 
    m.title AS MovieTitle,
    m.production_year AS ProductionYear,
    COALESCE(ka.name, 'Unknown Actor') AS ActorName,
    COUNT(DISTINCT mc.company_id) AS ProductionCompanies,
    AVG(p.info) FILTER (WHERE pt.info_type_id = (SELECT id FROM info_type WHERE info = 'Rating')) AS AvgRating,
    COUNT(DISTINCT mk.keyword_id) AS TotalKeywords,
    ROW_NUMBER() OVER (PARTITION BY m.id ORDER BY m.production_year DESC) AS YearRank
FROM 
    MovieHierarchy m
LEFT JOIN cast_info ci ON m.movie_id = ci.movie_id
LEFT JOIN aka_name ka ON ci.person_id = ka.person_id
LEFT JOIN movie_companies mc ON m.movie_id = mc.movie_id
LEFT JOIN movie_info p ON m.movie_id = p.movie_id
LEFT JOIN movie_keyword mk ON m.movie_id = mk.movie_id
LEFT JOIN info_type pt ON p.info_type_id = pt.id
WHERE 
    m.production_year IS NOT NULL
    AND (m.production_year >= (EXTRACT(YEAR FROM cast('2024-10-01' as date)) - 10) OR m.production_year IS NULL)
GROUP BY 
    m.movie_id, m.title, m.production_year, ka.name
HAVING 
    COUNT(DISTINCT mc.company_id) > 0
ORDER BY 
    m.production_year DESC, YearRank;