
WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        mt.kind_id,
        1 AS level
    FROM 
        aka_title mt 
    WHERE 
        mt.production_year > 2000
  
    UNION ALL

    SELECT 
        ml.linked_movie_id AS movie_id,
        at.title,
        at.production_year,
        at.kind_id,
        mh.level + 1
    FROM 
        movie_link ml
    JOIN 
        aka_title at ON ml.movie_id = at.id
    JOIN 
        MovieHierarchy mh ON ml.movie_id = mh.movie_id
)

SELECT 
    mk.keyword,
    COUNT(DISTINCT c.person_id) AS actor_count,
    AVG(CASE 
            WHEN c.nr_order IS NOT NULL THEN EXTRACT(YEAR FROM age(CAST(mi.info AS DATE))) 
            ELSE NULL 
        END) AS avg_years_since_release,
    STRING_AGG(DISTINCT a.name, ', ') AS actor_names
FROM 
    movie_keyword mk
JOIN 
    movie_info mi ON mk.movie_id = mi.movie_id
JOIN 
    complete_cast cc ON cc.movie_id = mk.movie_id
JOIN 
    cast_info c ON c.movie_id = cc.movie_id
JOIN 
    aka_name a ON a.person_id = c.person_id
LEFT JOIN 
    MovieHierarchy mh ON mh.movie_id = mk.movie_id
WHERE 
    mh.level = 1
    AND mk.keyword IS NOT NULL
    AND mi.info_type_id IN (SELECT id FROM info_type WHERE info = 'Release Date')
GROUP BY 
    mk.keyword
HAVING 
    COUNT(DISTINCT c.person_id) > 2
ORDER BY 
    actor_count DESC;
