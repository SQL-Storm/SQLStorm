
WITH RankedMovies AS (
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        t.kind_id,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY COUNT(ca.person_id) DESC) AS rank
    FROM 
        aka_title t
    LEFT JOIN 
        movie_companies mc ON t.id = mc.movie_id
    LEFT JOIN 
        cast_info ca ON mc.movie_id = ca.movie_id
    GROUP BY 
        t.id, t.title, t.production_year, t.kind_id
),
TopMovies AS (
    SELECT 
        rm.movie_id,
        rm.title,
        rm.production_year,
        rm.kind_id
    FROM 
        RankedMovies rm
    WHERE 
        rm.rank <= 5
),
ActorInfo AS (
    SELECT 
        ak.id AS actor_id,
        ak.name,
        ak.md5sum,
        ca.movie_id
    FROM 
        aka_name ak
    JOIN 
        cast_info ca ON ak.person_id = ca.person_id
),
MovieKeywords AS (
    SELECT 
        mk.movie_id,
        STRING_AGG(k.keyword, ', ') AS keywords
    FROM 
        movie_keyword mk
    JOIN 
        keyword k ON mk.keyword_id = k.id
    GROUP BY 
        mk.movie_id
)
SELECT 
    tm.title,
    tm.production_year,
    ai.name AS actor_name,
    COALESCE(mk.keywords, 'No keywords') AS movie_keywords,
    (SELECT COUNT(DISTINCT c.movie_id) 
     FROM cast_info c 
     WHERE c.person_role_id IS NOT NULL AND c.movie_id = tm.movie_id) AS actor_count,
    CASE 
        WHEN tm.kind_id IS NULL THEN 'Unknown kind'
        ELSE kt.kind
    END AS movie_kind,
    COUNT(DISTINCT mc.company_id) FILTER (WHERE mc.company_type_id IS NOT NULL) AS associated_companies
FROM 
    TopMovies tm
LEFT JOIN 
    ActorInfo ai ON tm.movie_id = ai.movie_id
LEFT JOIN 
    movie_companies mc ON tm.movie_id = mc.movie_id
LEFT JOIN 
    kind_type kt ON tm.kind_id = kt.id
LEFT JOIN 
    MovieKeywords mk ON tm.movie_id = mk.movie_id
GROUP BY 
    tm.title, tm.production_year, ai.name, tm.kind_id, kt.kind
HAVING 
    COUNT(ai.actor_id) > 0 OR COUNT(mc.company_id) IS NULL
ORDER BY 
    tm.production_year DESC, tm.title;
