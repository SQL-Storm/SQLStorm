
WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        0 AS level,
        mt.production_year,
        NULL AS parent_id
    FROM 
        aka_title mt
    WHERE 
        mt.episode_of_id IS NULL
    
    UNION ALL

    SELECT 
        mt.id,
        mt.title,
        mh.level + 1,
        mt.production_year,
        mh.movie_id
    FROM 
        aka_title mt
    INNER JOIN 
        MovieHierarchy mh ON mt.episode_of_id = mh.movie_id
),
CastDetails AS (
    SELECT 
        ci.movie_id,
        COUNT(*) AS cast_count,
        STRING_AGG(ak.name, ', ') AS cast_names
    FROM 
        cast_info ci
    JOIN 
        aka_name ak ON ci.person_id = ak.person_id
    GROUP BY 
        ci.movie_id
),
MovieInfoWithKeywords AS (
    SELECT 
        mt.id AS movie_id,
        COALESCE(mi.info, 'No info') AS movie_info,
        mk.keyword AS movie_keyword
    FROM 
        aka_title mt
    LEFT JOIN 
        movie_info mi ON mt.id = mi.movie_id
    LEFT JOIN 
        movie_keyword mk ON mt.id = mk.movie_id
)
SELECT 
    mh.movie_id,
    mh.title,
    mh.production_year,
    COALESCE(cd.cast_count, 0) AS cast_count,
    COALESCE(cd.cast_names, '') AS cast_names,
    mi.movie_info,
    COUNT(DISTINCT mk.keyword) AS keyword_count
FROM 
    MovieHierarchy mh
LEFT JOIN 
    CastDetails cd ON mh.movie_id = cd.movie_id
LEFT JOIN 
    MovieInfoWithKeywords mi ON mh.movie_id = mi.movie_id
LEFT JOIN 
    movie_keyword mk ON mh.movie_id = mk.movie_id
WHERE 
    mh.level = 0 AND
    (mh.production_year >= 2000 OR mi.movie_info LIKE '%action%')
GROUP BY 
    mh.movie_id, mh.title, mh.production_year, cd.cast_count, cd.cast_names, mi.movie_info
ORDER BY 
    mh.production_year DESC, cd.cast_count DESC
LIMIT 50;
