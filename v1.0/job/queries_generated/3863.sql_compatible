
WITH movie_summary AS (
    SELECT 
        a.title,
        a.production_year,
        COALESCE(SUM(CASE WHEN c.role_id IS NOT NULL THEN 1 ELSE 0 END), 0) AS total_cast,
        COUNT(DISTINCT m.company_id) AS total_companies,
        AVG(LENGTH(m.info)) AS avg_info_length
    FROM 
        aka_title a
    LEFT JOIN 
        complete_cast b ON a.id = b.movie_id
    LEFT JOIN 
        cast_info c ON b.subject_id = c.id
    LEFT JOIN 
        movie_companies m ON a.id = m.movie_id
    GROUP BY 
        a.title, a.production_year
),
director_summary AS (
    SELECT 
        a.title,
        CONCAT(t.name, ' (', d.role, ')') AS director
    FROM 
        aka_title a
    JOIN 
        complete_cast c ON a.id = c.movie_id
    JOIN 
        cast_info co ON c.subject_id = co.id
    JOIN 
        role_type d ON co.role_id = d.id
    JOIN 
        name t ON co.person_id = t.imdb_id
    WHERE 
        d.role ILIKE 'director'
    GROUP BY 
        a.title, t.name, d.role
),
keyword_summary AS (
    SELECT 
        a.title,
        STRING_AGG(k.keyword, ', ') AS keywords
    FROM 
        aka_title a
    LEFT JOIN 
        movie_keyword mk ON a.id = mk.movie_id
    LEFT JOIN 
        keyword k ON mk.keyword_id = k.id
    GROUP BY 
        a.title
)
SELECT 
    ms.title,
    ms.production_year,
    ms.total_cast,
    ms.total_companies,
    ms.avg_info_length,
    ds.director,
    ks.keywords
FROM 
    movie_summary ms
LEFT JOIN 
    director_summary ds ON ms.title = ds.title
LEFT JOIN 
    keyword_summary ks ON ms.title = ks.title
WHERE 
    ms.production_year >= 2000
ORDER BY 
    ms.production_year DESC, ms.total_cast DESC
LIMIT 10;
