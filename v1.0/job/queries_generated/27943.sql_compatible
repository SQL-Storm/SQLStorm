
WITH MovieDetails AS (
    SELECT 
        m.id AS movie_id,
        m.title AS movie_title,
        m.production_year,
        STRING_AGG(DISTINCT ak.name, ', ') AS aka_names,
        STRING_AGG(DISTINCT co.name, ', ') AS company_names,
        STRING_AGG(DISTINCT k.keyword, ', ') AS keywords,
        AVG(CASE WHEN pi.info_type_id IS NOT NULL THEN 1 ELSE 0 END) AS avg_info_present,
        COUNT(DISTINCT ca.person_id) AS cast_count
    FROM 
        title m
    LEFT JOIN 
        aka_title ak ON ak.movie_id = m.id
    LEFT JOIN 
        complete_cast cc ON cc.movie_id = m.id
    LEFT JOIN 
        cast_info ca ON ca.movie_id = m.id
    LEFT JOIN 
        movie_companies mc ON mc.movie_id = m.id
    LEFT JOIN 
        company_name co ON co.id = mc.company_id
    LEFT JOIN 
        movie_keyword mk ON mk.movie_id = m.id
    LEFT JOIN 
        keyword k ON k.id = mk.keyword_id
    LEFT JOIN 
        movie_info mi ON mi.movie_id = m.id
    LEFT JOIN 
        person_info pi ON pi.person_id = ca.person_id
    WHERE 
        m.production_year >= 2000
    GROUP BY 
        m.id, m.title, m.production_year
),
RankedMovies AS (
    SELECT 
        movie_id,
        movie_title,
        production_year,
        aka_names,
        company_names,
        keywords,
        avg_info_present,
        cast_count,
        RANK() OVER (ORDER BY production_year DESC, cast_count DESC) AS movie_rank
    FROM 
        MovieDetails
)
SELECT 
    movie_id,
    movie_title,
    production_year,
    aka_names,
    company_names,
    keywords,
    avg_info_present,
    cast_count,
    movie_rank
FROM 
    RankedMovies
WHERE 
    movie_rank <= 10
ORDER BY 
    production_year DESC, 
    cast_count DESC;
