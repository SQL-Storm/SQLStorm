WITH recursive actor_rank AS (
    SELECT
        a.id AS actor_id,
        a.name,
        COUNT(DISTINCT c.movie_id) AS movie_count,
        RANK() OVER (ORDER BY COUNT(DISTINCT c.movie_id) DESC) AS rank
    FROM
        aka_name a
    LEFT JOIN
        cast_info c ON a.person_id = c.person_id
    GROUP BY
        a.id, a.name
),
latest_movies AS (
    SELECT 
        t.title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY a.actor_id ORDER BY t.production_year DESC) AS rn
    FROM
        aka_name a
    JOIN
        cast_info ci ON a.person_id = ci.person_id
    JOIN
        aka_title t ON ci.movie_id = t.movie_id
)
SELECT 
    ar.name AS actor_name,
    ar.movie_count,
    lm.title AS latest_movie,
    lm.production_year AS latest_year,
    CASE 
        WHEN lm.rn = 1 THEN 'Latest Movie'
        ELSE 'Not Latest'
    END AS movie_status,
    (SELECT COUNT(*) 
     FROM title 
     WHERE production_year BETWEEN lm.production_year - 5 AND lm.production_year + 5
       AND kind_id IN (SELECT kt.id FROM kind_type kt WHERE kt.kind = 'feature')) AS related_feature_count
FROM 
    actor_rank ar
LEFT JOIN 
    latest_movies lm ON ar.actor_id = lm.actor_id
WHERE 
    ar.rank <= 10
    AND lm.rn = 1
    OR lm.production_year IS NULL 
ORDER BY 
    ar.movie_count DESC, 
    ar.name;