
WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        mt.title AS movie_title,
        mt.production_year,
        0 AS level,
        mt.id AS movie_id,
        ARRAY[mt.id] AS path
    FROM 
        aka_title mt
    WHERE 
        mt.production_year IS NOT NULL

    UNION ALL

    SELECT 
        mt.title AS movie_title,
        mt.production_year,
        mh.level + 1,
        mt.id AS movie_id,
        mh.path || mt.id
    FROM 
        aka_title mt
    INNER JOIN 
        movie_link ml ON mt.id = ml.linked_movie_id
    INNER JOIN 
        MovieHierarchy mh ON ml.movie_id = mh.movie_id
)

SELECT 
    mh.movie_title,
    mh.production_year,
    COUNT(DISTINCT ci.person_id) AS actor_count,
    STRING_AGG(DISTINCT ak.name, ', ') AS actor_names,
    MAX(CASE WHEN mt.production_year IS NOT NULL THEN mt.production_year END) AS linked_movie_year,
    ARRAY_AGG(DISTINCT c.name) AS production_companies,
    MAX(CASE WHEN inf.info IS NOT NULL THEN inf.info END) AS additional_info,
    ROW_NUMBER() OVER (PARTITION BY mh.production_year ORDER BY COUNT(DISTINCT ci.person_id) DESC) AS rank
FROM 
    MovieHierarchy mh
LEFT JOIN 
    cast_info ci ON mh.movie_id = ci.movie_id
LEFT JOIN 
    aka_name ak ON ci.person_id = ak.person_id
LEFT JOIN 
    movie_companies mc ON mh.movie_id = mc.movie_id
LEFT JOIN 
    company_name c ON mc.company_id = c.id
LEFT JOIN 
    movie_info inf ON mh.movie_id = inf.movie_id AND inf.info_type_id = (SELECT id FROM info_type WHERE info = 'Synopsis')
WHERE 
    mh.level < 5
GROUP BY 
    mh.movie_title, 
    mh.production_year
HAVING 
    COUNT(DISTINCT ci.person_id) > 1
ORDER BY 
    mh.production_year DESC, 
    actor_count DESC;
