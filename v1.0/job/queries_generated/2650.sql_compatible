
WITH RankedMovies AS (
    SELECT
        t.id AS movie_id,
        t.title,
        t.production_year,
        RANK() OVER (PARTITION BY t.production_year ORDER BY t.production_year DESC, t.title) AS rank_year,
        COUNT(DISTINCT c.person_id) OVER (PARTITION BY t.id) AS cast_count
    FROM
        aka_title t
    LEFT JOIN
        complete_cast cc ON t.id = cc.movie_id
    LEFT JOIN
        cast_info c ON cc.subject_id = c.id
    WHERE
        t.production_year IS NOT NULL
),
TopRatedMovies AS (
    SELECT
        m.movie_id,
        m.title,
        m.production_year,
        m.rank_year,
        CASE 
            WHEN m.cast_count IS NULL THEN 'No cast'
            ELSE 'Cast available'
        END AS cast_info_status
    FROM
        RankedMovies m
    WHERE
        m.rank_year <= 5
),
MoviesWithKeywords AS (
    SELECT
        t.movie_id,
        STRING_AGG(k.keyword, ', ') AS keywords
    FROM
        movie_keyword t
    JOIN
        keyword k ON t.keyword_id = k.id
    GROUP BY
        t.movie_id
)
SELECT
    t.title,
    t.production_year,
    t.cast_info_status,
    COALESCE(k.keywords, 'No keywords') AS keywords
FROM
    TopRatedMovies t
LEFT JOIN
    MoviesWithKeywords k ON t.movie_id = k.movie_id
ORDER BY
    t.production_year DESC, 
    t.title;
