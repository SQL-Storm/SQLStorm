
WITH RecursiveMovieCTE AS (
    SELECT 
        m.id AS movie_id,
        m.title,
        m.production_year,
        COALESCE(mk.keyword, 'No Keyword') AS keyword,
        ROW_NUMBER() OVER (PARTITION BY m.id ORDER BY mk.keyword) AS keyword_order
    FROM 
        aka_title m
    LEFT JOIN 
        movie_keyword mk ON m.id = mk.movie_id
    WHERE 
        m.production_year IS NOT NULL
), DetailedCast AS (
    SELECT 
        m.movie_id, 
        a.name AS actor_name, 
        c.nr_order, 
        c.note,
        ROW_NUMBER() OVER (PARTITION BY m.movie_id ORDER BY c.nr_order) AS cast_order,
        COUNT(c.id) OVER (PARTITION BY m.movie_id) AS total_cast
    FROM 
        cast_info c
    JOIN 
        aka_name a ON c.person_id = a.person_id
    JOIN 
        RecursiveMovieCTE m ON m.movie_id = c.movie_id
), GenreStats AS (
    SELECT 
        kt.kind_id, 
        COUNT(mt.movie_id) AS movie_count, 
        MAX(mt.production_year) AS last_production_year
    FROM 
        kind_type kt
    LEFT JOIN 
        aka_title mt ON kt.id = mt.kind_id
    WHERE 
        mt.production_year IS NOT NULL
    GROUP BY 
        kt.kind_id
), FilteredRoles AS (
    SELECT 
        r.id AS role_id,
        r.role,
        COUNT(ci.movie_id) AS movies_with_role
    FROM 
        role_type r
    LEFT JOIN 
        cast_info ci ON r.id = ci.role_id
    GROUP BY 
        r.id, r.role
    HAVING 
        COUNT(ci.movie_id) > 10
), MovieCompanies AS (
    SELECT 
        mc.movie_id,
        STRING_AGG(DISTINCT c.name, ', ') AS companies
    FROM 
        movie_companies mc
    JOIN 
        company_name c ON mc.company_id = c.id
    GROUP BY 
        mc.movie_id
)

SELECT 
    m.movie_id,
    m.title,
    m.production_year,
    m.keyword,
    d.actor_name,
    d.nr_order,
    d.note,
    d.total_cast,
    g.movie_count AS genre_count,
    g.last_production_year AS latest_genre_movie,
    r.role,
    r.movies_with_role,
    mc.companies
FROM 
    RecursiveMovieCTE m
LEFT JOIN 
    DetailedCast d ON m.movie_id = d.movie_id AND d.cast_order <= 5
LEFT JOIN 
    GenreStats g ON m.kind_id = g.kind_id
LEFT JOIN 
    FilteredRoles r ON r.role_id = d.role_id
LEFT JOIN 
    MovieCompanies mc ON m.movie_id = mc.movie_id
WHERE 
    m.production_year >= (SELECT MAX(production_year) FROM aka_title WHERE production_year IS NOT NULL) - 10
ORDER BY 
    m.production_year DESC, 
    keyword_order,
    d.nr_order 
LIMIT 100;
