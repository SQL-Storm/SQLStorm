
WITH RankedTitles AS (
    SELECT
        t.id AS title_id,
        t.title,
        t.production_year,
        RANK() OVER (PARTITION BY t.production_year ORDER BY LENGTH(t.title) DESC) AS rank_by_length
    FROM
        aka_title t
    WHERE
        t.production_year IS NOT NULL
),
TitleKeywords AS (
    SELECT
        mt.movie_id,
        STRING_AGG(mk.keyword, ', ') AS keywords
    FROM
        movie_keyword mk
    JOIN
        aka_title mt ON mk.movie_id = mt.id
    GROUP BY
        mt.movie_id
),
PersonMovies AS (
    SELECT
        ci.movie_id,
        STRING_AGG(DISTINCT a.name, ', ') AS actor_names,
        COUNT(DISTINCT ci.person_id) AS actor_count
    FROM
        cast_info ci
    JOIN
        aka_name a ON ci.person_id = a.person_id
    GROUP BY
        ci.movie_id
),
NullHandling AS (
    SELECT
        rt.title_id,
        COALESCE(tm.keywords, 'No keywords') AS keywords,
        COALESCE(pm.actor_names, 'No actors') AS actor_names,
        COALESCE(pm.actor_count, 0) AS actor_count,
        rt.production_year,
        rt.rank_by_length
    FROM
        RankedTitles rt
    LEFT JOIN 
        TitleKeywords tm ON rt.title_id = tm.movie_id
    LEFT JOIN 
        PersonMovies pm ON rt.title_id = pm.movie_id
)
SELECT
    th.title,
    th.keywords,
    th.actor_names,
    th.actor_count,
    CASE 
        WHEN th.actor_count > 5 THEN 'Ensemble Cast'
        WHEN th.actor_count BETWEEN 3 AND 5 THEN 'Moderate Cast'
        WHEN th.actor_count < 3 THEN 'Minimal Cast'
        ELSE 'No Cast Information'
    END AS cast_profile,
    th.production_year,
    th.rank_by_length
FROM
    NullHandling th
WHERE
    th.rank_by_length <= 3
ORDER BY
    th.production_year DESC,
    th.rank_by_length;
