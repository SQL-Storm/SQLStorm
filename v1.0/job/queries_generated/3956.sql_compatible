
WITH RankedMovies AS (
    SELECT 
        m.id AS movie_id,
        m.title,
        m.production_year,
        ROW_NUMBER() OVER (PARTITION BY m.production_year ORDER BY m.production_year DESC) AS rank,
        COUNT(DISTINCT mc.company_id) OVER (PARTITION BY m.id) AS company_count
    FROM 
        title m
    LEFT JOIN 
        movie_companies mc ON m.id = mc.movie_id
    WHERE 
        m.production_year IS NOT NULL
),
ActorCounts AS (
    SELECT 
        ci.movie_id,
        COUNT(DISTINCT ci.person_id) AS actor_count
    FROM 
        cast_info ci
    GROUP BY 
        ci.movie_id
),
KeywordCounts AS (
    SELECT 
        mk.movie_id,
        COUNT(DISTINCT k.keyword) AS keyword_count
    FROM 
        movie_keyword mk
    JOIN 
        keyword k ON mk.keyword_id = k.id
    GROUP BY 
        mk.movie_id
)
SELECT 
    rm.movie_id,
    rm.title,
    rm.production_year,
    COALESCE(ac.actor_count, 0) AS actor_count,
    COALESCE(kc.keyword_count, 0) AS keyword_count,
    rm.company_count,
    CASE 
        WHEN rm.rank <= 5 THEN 'Top 5'
        WHEN rm.rank BETWEEN 6 AND 10 THEN 'Rank 6-10'
        ELSE 'Beyond Top 10'
    END AS rank_category
FROM 
    RankedMovies rm
LEFT JOIN 
    ActorCounts ac ON rm.movie_id = ac.movie_id
LEFT JOIN 
    KeywordCounts kc ON rm.movie_id = kc.movie_id
WHERE 
    rm.rank <= 10
GROUP BY 
    rm.movie_id, rm.title, rm.production_year, ac.actor_count, kc.keyword_count, rm.company_count, rm.rank
ORDER BY 
    rm.production_year DESC, rm.rank;
