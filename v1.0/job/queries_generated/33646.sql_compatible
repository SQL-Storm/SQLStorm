
WITH RECURSIVE MovieHierarchy AS (
    SELECT
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        1 AS level
    FROM
        aka_title mt
    WHERE
        mt.kind_id = (SELECT id FROM kind_type WHERE kind = 'movie')
    
    UNION ALL
    
    SELECT
        ml.linked_movie_id AS movie_id,
        mt.title,
        mt.production_year,
        mh.level + 1
    FROM
        movie_link ml
    JOIN
        MovieHierarchy mh ON ml.movie_id = mh.movie_id
    JOIN
        aka_title mt ON ml.linked_movie_id = mt.id
)
SELECT
    m.title AS Movie_Title,
    m.production_year AS Production_Year,
    COALESCE(c.name, 'Unknown') AS Company_Name,
    ak.name AS Actor_Name,
    (CASE
        WHEN ak.gender = 'M' THEN 'Male'
        WHEN ak.gender = 'F' THEN 'Female'
        ELSE 'Not Specified'
    END) AS Gender,
    COUNT(k.keyword) AS Keyword_Count,
    SUM(CASE WHEN mi.info LIKE '%Award%' THEN 1 ELSE 0 END) AS Awards_Count,
    RANK() OVER (PARTITION BY m.production_year ORDER BY COUNT(k.keyword) DESC) AS Keyword_Rank
FROM
    MovieHierarchy m
LEFT JOIN
    movie_companies mc ON m.movie_id = mc.movie_id
LEFT JOIN
    company_name c ON mc.company_id = c.id
LEFT JOIN
    cast_info ci ON m.movie_id = ci.movie_id
LEFT JOIN
    aka_name ak ON ci.person_id = ak.person_id
LEFT JOIN
    movie_keyword mk ON m.movie_id = mk.movie_id
LEFT JOIN
    keyword k ON mk.keyword_id = k.id
LEFT JOIN
    movie_info mi ON m.movie_id = mi.movie_id
WHERE
    m.production_year IS NOT NULL
    AND (c.country_code IS NOT NULL OR ak.name IS NOT NULL)
GROUP BY
    m.title, m.production_year, c.name, ak.name, ak.gender
ORDER BY
    m.production_year DESC, Keyword_Count DESC;
