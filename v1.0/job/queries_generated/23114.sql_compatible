
WITH ranked_titles AS (
    SELECT 
        t.id AS title_id,
        t.title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.title) AS title_rank,
        COUNT(*) OVER (PARTITION BY t.production_year) AS title_count
    FROM 
        title t
    WHERE 
        t.production_year IS NOT NULL
),
movie_actors AS (
    SELECT 
        c.movie_id,
        a.name AS actor_name,
        RANK() OVER (PARTITION BY c.movie_id ORDER BY ca.nr_order) AS actor_rank,
        ca.role_id
    FROM 
        cast_info c
    JOIN 
        aka_name a ON c.person_id = a.person_id
    JOIN 
        role_type r ON c.role_id = r.id
    WHERE 
        r.role = 'actor'
),
movie_keywords AS (
    SELECT 
        mk.movie_id,
        STRING_AGG(k.keyword, ', ') AS keywords
    FROM 
        movie_keyword mk
    JOIN 
        keyword k ON mk.keyword_id = k.id
    GROUP BY 
        mk.movie_id
),
movies_by_company AS (
    SELECT 
        mc.movie_id,
        c.name AS company_name,
        ct.kind AS company_type
    FROM 
        movie_companies mc
    JOIN 
        company_name c ON mc.company_id = c.id
    JOIN 
        company_type ct ON mc.company_type_id = ct.id
    WHERE 
        c.country_code IS NOT NULL
),
final_benchmark AS (
    SELECT 
        rt.title,
        rt.production_year,
        ma.actor_name,
        ma.actor_rank,
        mk.keywords,
        mbc.company_name,
        mbc.company_type,
        COALESCE(NULLIF(rt.title_rank, 0), 'No Rank') AS adjusted_rank
    FROM 
        ranked_titles rt
    LEFT JOIN 
        movie_actors ma ON rt.title_id = ma.movie_id
    LEFT JOIN 
        movie_keywords mk ON rt.title_id = mk.movie_id
    LEFT JOIN 
        movies_by_company mbc ON rt.title_id = mbc.movie_id
    WHERE 
        rt.title_count > 5 
    AND 
        (rt.production_year < 2000 OR rt.production_year IS NULL)
    ORDER BY 
        rt.production_year DESC, rt.title ASC
)

SELECT 
    title,
    production_year,
    actor_name,
    actor_rank,
    keywords,
    company_name,
    company_type,
    adjusted_rank
FROM 
    final_benchmark 
WHERE 
    actor_rank <= 3 OR actor_name IS NULL
LIMIT 10;
