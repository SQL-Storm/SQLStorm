
WITH MovieDetails AS (
    SELECT 
        at.title,
        at.production_year,
        STRING_AGG(DISTINCT ak.name, ', ') AS actor_names,
        COUNT(DISTINCT mc.company_id) AS company_count,
        AVG(CASE WHEN mi.info_type_id = 1 THEN NULLIF(mi.info, '') END) AS avg_rating,
        ROW_NUMBER() OVER (PARTITION BY at.production_year ORDER BY at.title) AS year_rank
    FROM 
        aka_title at
    LEFT JOIN 
        cast_info ci ON at.id = ci.movie_id
    LEFT JOIN 
        aka_name ak ON ci.person_id = ak.person_id
    LEFT JOIN 
        movie_companies mc ON at.id = mc.movie_id
    LEFT JOIN 
        movie_info mi ON at.id = mi.movie_id
    WHERE 
        at.production_year IS NOT NULL
    GROUP BY 
        at.id, at.title, at.production_year
),
FilteredMovies AS (
    SELECT 
        md.* 
    FROM 
        MovieDetails md
    WHERE 
        md.year_rank <= 5 OR md.actor_names ILIKE '%Leonardo%'
),
KeywordStats AS (
    SELECT 
        md.title,
        COUNT(mk.keyword_id) AS keyword_count
    FROM 
        FilteredMovies md
    LEFT JOIN 
        movie_keyword mk ON md.title = mk.title
    GROUP BY 
        md.title
)
SELECT 
    fm.title,
    fm.production_year,
    fm.actor_names,
    fm.company_count,
    fm.avg_rating,
    ks.keyword_count
FROM 
    FilteredMovies fm
LEFT JOIN 
    KeywordStats ks ON fm.title = ks.title
ORDER BY 
    fm.production_year DESC, fm.title;
