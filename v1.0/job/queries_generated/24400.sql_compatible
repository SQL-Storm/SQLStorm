
WITH ranked_movies AS (
    SELECT 
        mt.title,
        mt.production_year,
        COUNT(DISTINCT c.person_id) AS cast_count,
        ROW_NUMBER() OVER (PARTITION BY mt.production_year ORDER BY COUNT(DISTINCT c.person_id) DESC) AS rank
    FROM 
        aka_title mt
    LEFT JOIN 
        cast_info c ON mt.id = c.movie_id
    WHERE 
        mt.production_year IS NOT NULL
    GROUP BY 
        mt.id, mt.title, mt.production_year
),
filtered_movies AS (
    SELECT 
        r.title,
        r.production_year,
        r.cast_count
    FROM 
        ranked_movies r
    WHERE 
        r.rank <= 5 
),
movie_keywords AS (
    SELECT 
        mk.movie_id,
        STRING_AGG(k.keyword, ', ') AS keywords
    FROM 
        movie_keyword mk
    JOIN 
        keyword k ON mk.keyword_id = k.id
    GROUP BY 
        mk.movie_id
),
movie_info_summary AS (
    SELECT 
        mt.id AS movie_id,
        COALESCE(mi.info, 'No Info') AS info_summary,
        COUNT(DISTINCT mc.company_id) AS company_count
    FROM 
        aka_title mt
    LEFT JOIN 
        movie_info mi ON mt.id = mi.movie_id
    LEFT JOIN 
        movie_companies mc ON mt.id = mc.movie_id
    GROUP BY 
        mt.id, mi.info
)
SELECT 
    fm.title,
    fm.production_year,
    fm.cast_count,
    mk.keywords,
    mis.info_summary,
    mis.company_count
FROM 
    filtered_movies fm
LEFT JOIN 
    movie_keywords mk ON mk.movie_id = (
        SELECT movie_id 
        FROM movie_keyword 
        WHERE movie_keyword.movie_id = fm.movie_id 
        LIMIT 1
    )
LEFT JOIN 
    movie_info_summary mis ON mis.movie_id = fm.movie_id
ORDER BY 
    fm.production_year ASC, fm.cast_count DESC;
