
WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title AS movie_title,
        1 AS level
    FROM 
        aka_title AS mt
    WHERE 
        mt.production_year > 2000

    UNION ALL

    SELECT 
        ml.linked_movie_id AS movie_id,
        a.title AS movie_title,
        mh.level + 1
    FROM 
        movie_link AS ml
    JOIN 
        title AS a ON ml.linked_movie_id = a.id
    JOIN 
        MovieHierarchy AS mh ON ml.movie_id = mh.movie_id
)
SELECT 
    m.movie_id,
    m.movie_title,
    COALESCE(ci.person_role_id, 0) AS role_id,
    COUNT(DISTINCT c.person_id) OVER (PARTITION BY m.movie_id) AS total_cast,
    (SELECT STRING_AGG(cm.name, ', ') 
     FROM company_name AS cm
     JOIN movie_companies AS mc ON cm.id = mc.company_id
     WHERE mc.movie_id = m.movie_id) AS companies,
    (SELECT COUNT(*) 
     FROM movie_keyword AS mk
     JOIN keyword AS k ON mk.keyword_id = k.id
     WHERE mk.movie_id = m.movie_id AND k.keyword LIKE '%drama%') AS drama_keywords,
    CASE 
        WHEN COALESCE(ci.note, '') = '' THEN 'No note provided' 
        ELSE ci.note 
    END AS cast_note,
    ROW_NUMBER() OVER (PARTITION BY m.movie_id ORDER BY ci.nr_order) AS cast_order
FROM 
    MovieHierarchy AS m
LEFT JOIN 
    complete_cast AS cc ON m.movie_id = cc.movie_id
LEFT JOIN 
    cast_info AS ci ON cc.subject_id = ci.id
WHERE 
    ci.role_id IN (SELECT id FROM role_type WHERE role NOT LIKE '%extra%')
    AND m.level <= 2
GROUP BY 
    m.movie_id, m.movie_title, ci.person_role_id, ci.note, ci.nr_order
ORDER BY 
    m.movie_title, cast_order DESC;
