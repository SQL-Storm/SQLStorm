
WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        m.id AS movie_id,
        m.title,
        m.production_year,
        0 AS level,
        m.title AS path
    FROM 
        aka_title m
    WHERE 
        m.production_year >= 2000

    UNION ALL

    SELECT 
        ml.linked_movie_id AS movie_id,
        a.title,
        a.production_year,
        mh.level + 1,
        mh.path || ' -> ' || a.title AS path
    FROM 
        movie_link ml
    JOIN 
        aka_title a ON ml.linked_movie_id = a.id
    JOIN 
        MovieHierarchy mh ON ml.movie_id = mh.movie_id
)
SELECT 
    mh.movie_id,
    mh.title,
    mh.production_year,
    mh.level,
    mh.path,
    COUNT(DISTINCT ci.person_id) AS total_cast,
    AVG(CASE 
            WHEN ci.role_id IS NOT NULL THEN 1 
            ELSE 0 
        END) AS role_participation,
    STRING_AGG(DISTINCT cn.name, ', ') AS cast_names,
    CASE 
        WHEN mh.production_year IS NULL THEN 'Year Not Available'
        ELSE CAST(mh.production_year AS VARCHAR)
    END AS display_year
FROM 
    MovieHierarchy mh
LEFT JOIN 
    complete_cast cc ON mh.movie_id = cc.movie_id
LEFT JOIN 
    cast_info ci ON cc.subject_id = ci.person_id AND cc.movie_id = ci.movie_id
LEFT JOIN 
    aka_name cn ON ci.person_id = cn.person_id
WHERE 
    mh.level <= 1
GROUP BY 
    mh.movie_id,
    mh.title,
    mh.production_year,
    mh.level,
    mh.path
ORDER BY 
    mh.production_year DESC, 
    mh.title ASC;
