
WITH ranked_movies AS (
    SELECT 
        m.id AS movie_id,
        m.title,
        m.production_year,
        ROW_NUMBER() OVER (PARTITION BY m.production_year ORDER BY m.title) AS title_rank
    FROM 
        aka_title m
    WHERE 
        m.production_year BETWEEN 2000 AND 2020
),
movie_cast AS (
    SELECT 
        c.movie_id,
        a.name AS actor_name,
        r.role AS role,
        COUNT(ci.id) OVER (PARTITION BY c.movie_id) AS actor_count
    FROM 
        cast_info ci
    JOIN 
        aka_name a ON a.person_id = ci.person_id
    JOIN 
        role_type r ON r.id = ci.role_id
),
movie_keywords AS (
    SELECT 
        mk.movie_id,
        STRING_AGG(k.keyword, ', ' ORDER BY k.keyword) AS keywords
    FROM 
        movie_keyword mk
    JOIN 
        keyword k ON k.id = mk.keyword_id
    GROUP BY 
        mk.movie_id
)
SELECT 
    rm.movie_id,
    rm.title,
    rm.production_year,
    mc.actor_count,
    mc.actor_name,
    mk.keywords,
    COALESCE(NULLIF(mk.keywords, ''), 'No keywords available') AS keywords_display
FROM 
    ranked_movies rm
LEFT JOIN 
    movie_cast mc ON mc.movie_id = rm.movie_id
LEFT JOIN 
    movie_keywords mk ON mk.movie_id = rm.movie_id
WHERE 
    mc.actor_name IS NOT NULL
    OR mk.keywords IS NOT NULL
ORDER BY 
    rm.production_year DESC, 
    rm.title_rank;
