
WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        1 AS level
    FROM 
        aka_title mt
    WHERE 
        mt.production_year > 2000 
    UNION ALL
    SELECT 
        ml.linked_movie_id,
        at.title,
        at.production_year,
        mh.level + 1
    FROM 
        MovieHierarchy mh
    INNER JOIN movie_link ml ON mh.movie_id = ml.movie_id
    INNER JOIN aka_title at ON ml.linked_movie_id = at.id
    WHERE 
        mh.level < 5  
)
SELECT 
    ak.name AS actor_name,
    a.title AS movie_title,
    a.production_year,
    COUNT(DISTINCT a.id) OVER (PARTITION BY ak.person_id) AS total_movies,
    STRING_AGG(DISTINCT k.keyword, ', ') AS keywords,
    COALESCE(ci.note, 'No Role') AS role_note
FROM 
    aka_name ak
JOIN 
    cast_info ci ON ak.person_id = ci.person_id
JOIN 
    aka_title a ON ci.movie_id = a.movie_id
LEFT JOIN 
    movie_keyword mk ON a.id = mk.movie_id
LEFT JOIN 
    keyword k ON mk.keyword_id = k.id
WHERE 
    ak.name LIKE '%Smith%'  
    AND a.production_year BETWEEN 2010 AND 2020
    AND EXISTS (
        SELECT 1 
        FROM complete_cast cc
        WHERE cc.movie_id = a.id 
        AND cc.subject_id = ak.id 
        AND cc.status_id IS NOT NULL
    )
GROUP BY 
    ak.name, a.title, a.production_year, ci.note
ORDER BY 
    total_movies DESC, a.production_year ASC;
