
WITH RECURSIVE movie_hierarchy AS (
    SELECT m.id AS movie_id, 
           m.title, 
           m.production_year, 
           NULL AS parent_movie_id, 
           0 AS level
    FROM aka_title m
    WHERE m.kind_id = (SELECT id FROM kind_type WHERE kind = 'movie')
  
    UNION ALL

    SELECT m.id AS movie_id, 
           m.title, 
           m.production_year, 
           mh.movie_id AS parent_movie_id, 
           mh.level + 1
    FROM aka_title m
    JOIN movie_link ml ON ml.linked_movie_id = m.id
    JOIN movie_hierarchy mh ON mh.movie_id = ml.movie_id
)

SELECT 
    mh.title AS movie_title,
    mh.production_year,
    COALESCE(ca.name, 'Unknown') AS cast_name,
    STRING_AGG(DISTINCT k.keyword, ', ') AS keywords,
    COUNT(DISTINCT mc.company_id) AS production_companies,
    ROW_NUMBER() OVER (PARTITION BY mh.movie_id ORDER BY ca.nr_order) AS role_order,
    mh.level
FROM movie_hierarchy mh
LEFT JOIN cast_info ca ON ca.movie_id = mh.movie_id
LEFT JOIN movie_keyword mk ON mk.movie_id = mh.movie_id
LEFT JOIN keyword k ON k.id = mk.keyword_id
LEFT JOIN movie_companies mc ON mc.movie_id = mh.movie_id
LEFT JOIN aka_name an ON an.person_id = ca.person_id
WHERE mh.production_year >= 2000
GROUP BY mh.movie_id, mh.title, mh.production_year, ca.name, mh.level
HAVING COUNT(DISTINCT mc.company_id) > 1
ORDER BY mh.production_year DESC, mh.level, movie_title;
