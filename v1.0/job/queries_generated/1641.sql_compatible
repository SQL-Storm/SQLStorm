
WITH RankedTitles AS (
    SELECT 
        t.id AS title_id,
        t.title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.title) AS rank
    FROM 
        title t
    WHERE 
        t.production_year IS NOT NULL
),
ActorRoles AS (
    SELECT 
        a.id AS actor_id,
        a.name AS actor_name,
        ci.movie_id,
        cr.role AS role_name
    FROM 
        aka_name a
    JOIN 
        cast_info ci ON a.person_id = ci.person_id
    JOIN 
        role_type cr ON ci.role_id = cr.id
),
MovieCompanies AS (
    SELECT 
        mc.movie_id,
        STRING_AGG(DISTINCT cn.name, ', ') AS companies
    FROM 
        movie_companies mc
    JOIN 
        company_name cn ON mc.company_id = cn.id
    GROUP BY 
        mc.movie_id
),
MoviesWithRoles AS (
    SELECT 
        rt.title_id,
        rt.title,
        rt.production_year,
        ar.actor_name,
        ar.role_name,
        COALESCE(mk.keyword, 'No Keywords') AS keyword
    FROM 
        RankedTitles rt
    LEFT JOIN 
        ActorRoles ar ON rt.title_id = ar.movie_id
    LEFT JOIN 
        movie_keyword mk ON rt.title_id = mk.movie_id
    WHERE 
        rt.rank = 1
)

SELECT 
    mwr.title,
    mwr.production_year,
    mwr.actor_name,
    mwr.role_name,
    mc.companies,
    COUNT(mwr.keyword) AS keyword_count
FROM 
    MoviesWithRoles mwr
LEFT JOIN 
    MovieCompanies mc ON mwr.title_id = mc.movie_id
GROUP BY 
    mwr.title, mwr.production_year, mwr.actor_name, mwr.role_name, mc.companies
HAVING 
    COUNT(mwr.keyword) > 1
ORDER BY 
    mwr.production_year DESC, mwr.title;
