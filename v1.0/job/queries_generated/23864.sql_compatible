
WITH ranked_movies AS (
    SELECT 
        a.title,
        a.production_year,
        COUNT(c.person_id) AS cast_count,
        DENSE_RANK() OVER (PARTITION BY a.production_year ORDER BY COUNT(c.person_id) DESC) AS rank
    FROM aka_title a
    LEFT JOIN cast_info c ON a.id = c.movie_id
    WHERE a.production_year IS NOT NULL
    GROUP BY a.title, a.production_year
),
movie_details AS (
    SELECT 
        m.title,
        m.production_year,
        COALESCE(inf.info, 'No info available') AS additional_info,
        k.keyword AS keyword,
        ROW_NUMBER() OVER (PARTITION BY m.title ORDER BY k.keyword) AS keyword_rank
    FROM ranked_movies m
    LEFT JOIN movie_info inf ON m.title = inf.info
    LEFT JOIN movie_keyword mk ON m.title = mk.movie_id
    LEFT JOIN keyword k ON mk.keyword_id = k.id
    WHERE m.cast_count > 5
),
final_output AS (
    SELECT 
        md.title,
        md.production_year,
        md.additional_info,
        STRING_AGG(md.keyword, ', ') AS keywords,
        r.rank,
        CASE 
            WHEN r.rank = 1 THEN 'Top Movie'
            WHEN r.rank < 5 THEN 'Featured Movie'
            ELSE 'Regular Movie'
        END AS categorization
    FROM movie_details md
    LEFT JOIN ranked_movies r ON md.title = r.title AND md.production_year = r.production_year
    WHERE md.keyword_rank IS NULL OR md.keyword_rank < 5
    GROUP BY md.title, md.production_year, md.additional_info, r.rank
)
SELECT 
    fo.*,
    (SELECT COUNT(*) FROM company_name cn WHERE fo.production_year - 5 <= 2023 AND cn.id IS NOT NULL) AS recent_companies,
    (SELECT MAX(r.rank) FROM ranked_movies r WHERE r.title = fo.title) AS max_rank
FROM final_output fo 
WHERE fo.keywords NOT LIKE '%action%'
ORDER BY fo.production_year DESC, fo.keywords;
