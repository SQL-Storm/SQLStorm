
WITH ranked_titles AS (
    SELECT 
        t.id AS title_id,
        t.title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.title) AS title_rank
    FROM 
        aka_title t
    WHERE 
        t.production_year IS NOT NULL
),
cast_details AS (
    SELECT 
        ci.movie_id,
        ci.person_id,
        a.name AS actor_name,
        c.kind AS role_type,
        CASE 
            WHEN ci.note IS NULL THEN 'No notes available'
            ELSE ci.note 
        END AS performance_note
    FROM 
        cast_info ci
    JOIN 
        aka_name a ON ci.person_id = a.person_id
    LEFT JOIN 
        comp_cast_type c ON ci.person_role_id = c.id
),
keyword_details AS (
    SELECT 
        mk.movie_id,
        STRING_AGG(k.keyword, ', ') AS keywords
    FROM 
        movie_keyword mk
    JOIN 
        keyword k ON mk.keyword_id = k.id
    GROUP BY 
        mk.movie_id
),
complete_movie_info AS (
    SELECT 
        mt.movie_id, 
        mt.title, 
        mt.production_year,
        COALESCE(k.keywords, 'No keywords') AS keywords,
        ARRAY_AGG(DISTINCT cd.actor_name) AS cast_names
    FROM 
        ranked_titles mt
    LEFT JOIN 
        keyword_details k ON mt.title_id = k.movie_id
    LEFT JOIN 
        cast_details cd ON mt.title_id = cd.movie_id
    GROUP BY 
        mt.movie_id, mt.title, mt.production_year
)
SELECT 
    cmi.title, 
    cmi.production_year, 
    cmi.keywords,
    COALESCE(cmi.cast_names, 'No cast') AS cast_list,
    ct.kind AS company_type,
    AVG(CASE 
        WHEN cmi.production_year < 2000 THEN 5 
        WHEN cmi.production_year BETWEEN 2000 AND 2010 THEN 10 
        ELSE 15 
    END) AS movie_age_rating
FROM 
    complete_movie_info cmi
LEFT JOIN 
    movie_companies mc ON cmi.movie_id = mc.movie_id
LEFT JOIN 
    company_type ct ON mc.company_type_id = ct.id
WHERE 
    cmi.production_year = (
        SELECT MAX(production_year) 
        FROM complete_movie_info
    )
GROUP BY 
    cmi.title, 
    cmi.production_year, 
    cmi.keywords, 
    ct.kind
ORDER BY 
    cmi.production_year DESC, 
    AVG(CASE 
        WHEN cmi.production_year < 2000 THEN 5 
        WHEN cmi.production_year BETWEEN 2000 AND 2010 THEN 10 
        ELSE 15 
    END) DESC
LIMIT 10;
