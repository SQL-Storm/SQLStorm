
WITH RECURSIVE MovieHierarchy AS (
    SELECT
        mt.id AS movie_id,
        mt.title AS movie_title,
        mt.production_year,
        1 AS level
    FROM
        aka_title mt
    WHERE
        mt.production_year >= 2000  

    UNION ALL

    SELECT
        ml.linked_movie_id AS movie_id,
        at.title AS movie_title,
        at.production_year,
        mh.level + 1
    FROM
        movie_link ml
    JOIN
        aka_title at ON ml.linked_movie_id = at.id
    JOIN
        MovieHierarchy mh ON ml.movie_id = mh.movie_id
)
SELECT
    mh.movie_id,
    mh.movie_title,
    mh.production_year,
    COUNT(DISTINCT cc.person_id) AS actor_count,
    STRING_AGG(DISTINCT ak.name, ', ') AS actors,
    COALESCE(mci.note, 'No additional info') AS company_note,
    kt.keyword AS keyword,
    ROW_NUMBER() OVER (PARTITION BY mh.movie_id ORDER BY mh.production_year DESC) AS row_num
FROM
    MovieHierarchy mh
LEFT JOIN
    complete_cast cc ON mh.movie_id = cc.movie_id
LEFT JOIN
    cast_info ci ON cc.subject_id = ci.person_id
LEFT JOIN
    aka_name ak ON ci.person_id = ak.person_id
LEFT JOIN
    movie_companies mc ON mh.movie_id = mc.movie_id
LEFT JOIN
    company_name cn ON mc.company_id = cn.id
LEFT JOIN
    movie_keyword mk ON mh.movie_id = mk.movie_id
LEFT JOIN
    keyword kt ON mk.keyword_id = kt.id
LEFT JOIN
    movie_info mi ON mh.movie_id = mi.movie_id
LEFT JOIN
    movie_info_idx mii ON mh.movie_id = mii.movie_id AND mi.info_type_id = mii.info_type_id
LEFT JOIN
    movie_info mci ON mh.movie_id = mci.movie_id AND mci.info_type_id IN (SELECT it.id FROM info_type it WHERE it.info = 'Production Notes')
WHERE
    mh.production_year IS NOT NULL
GROUP BY
    mh.movie_id, mh.movie_title, mh.production_year, mci.note, kt.keyword
HAVING
    COUNT(DISTINCT cc.person_id) > 0
ORDER BY
    mh.production_year DESC, actor_count DESC;
