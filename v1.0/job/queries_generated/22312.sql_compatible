
WITH RankedTitles AS (
    SELECT
        t.id AS title_id,
        t.title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.title) AS rn,
        COUNT(*) OVER (PARTITION BY t.production_year) AS title_count
    FROM
        title t
    WHERE
        t.production_year >= 2000
),
ActorMovieCounts AS (
    SELECT
        ci.person_id,
        COUNT(DISTINCT ci.movie_id) AS total_movies,
        MAX(CASE WHEN ti.production_year = 2022 THEN 1 ELSE 0 END) AS acted_in_2022
    FROM
        cast_info ci
    JOIN
        aka_name an ON ci.person_id = an.person_id
    JOIN
        aka_title at ON ci.movie_id = at.movie_id
    JOIN
        title ti ON at.id = ti.id
    GROUP BY
        ci.person_id
),
MovieKeywords AS (
    SELECT
        mk.movie_id,
        STRING_AGG(k.keyword, ', ') AS keywords
    FROM
        movie_keyword mk
    JOIN
        keyword k ON mk.keyword_id = k.id
    GROUP BY
        mk.movie_id
),
FilteredMovies AS (
    SELECT
        rt.title,
        rt.production_year,
        am.total_movies,
        mk.keywords
    FROM
        RankedTitles rt
    LEFT JOIN
        ActorMovieCounts am ON rt.title_id IN (
            SELECT movie_id FROM cast_info WHERE person_id = am.person_id
        )
    LEFT JOIN
        MovieKeywords mk ON rt.title_id = mk.movie_id
    WHERE
        am.acted_in_2022 = 1 OR mk.keywords IS NOT NULL
)
SELECT
    fm.title,
    fm.production_year,
    COALESCE(fm.total_movies, 0) AS total_movies,
    COALESCE(fm.keywords, 'No keywords') AS keywords,
    CASE
        WHEN fm.keywords IS NOT NULL THEN 'Has Keywords'
        ELSE 'No Keywords'
    END AS keyword_status
FROM
    FilteredMovies fm
ORDER BY
    fm.production_year DESC,
    fm.total_movies DESC,
    fm.title;
