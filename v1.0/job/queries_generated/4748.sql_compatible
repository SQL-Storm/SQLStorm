
WITH RankedMovies AS (
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        COUNT(c.id) AS total_cast,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.production_year DESC) AS year_rank
    FROM 
        title t
    LEFT JOIN 
        cast_info c ON t.id = c.movie_id
    WHERE 
        t.production_year IS NOT NULL
    GROUP BY 
        t.id, t.title, t.production_year
),
MoviesWithAwards AS (
    SELECT
        rm.movie_id,
        rm.title,
        rm.production_year,
        rm.total_cast,
        COALESCE(mk.keyword, 'No Keywords') AS movie_keyword,
        ROW_NUMBER() OVER (PARTITION BY rm.production_year ORDER BY rm.total_cast DESC) AS keyword_rank
    FROM 
        RankedMovies rm
    LEFT JOIN 
        movie_keyword mk ON rm.movie_id = mk.movie_id
),
DetailedMovieInfo AS (
    SELECT 
        mw.movie_id,
        mw.title,
        mw.production_year,
        mw.total_cast,
        mw.movie_keyword,
        (SELECT COUNT(DISTINCT mc.company_id) 
         FROM movie_companies mc 
         WHERE mc.movie_id = mw.movie_id) AS company_count,
        (SELECT STRING_AGG(DISTINCT cn.name, ', ') 
         FROM company_name cn 
         JOIN movie_companies mc ON cn.id = mc.company_id 
         WHERE mc.movie_id = mw.movie_id) AS company_names
    FROM 
        MoviesWithAwards mw
)
SELECT 
    dmi.movie_id,
    dmi.title,
    dmi.production_year,
    dmi.total_cast,
    dmi.movie_keyword,
    dmi.company_count,
    COALESCE(dmi.company_names, 'No Companies') AS company_names,
    (CASE 
        WHEN dmi.production_year >= 2000 THEN 'Modern Era' 
        WHEN dmi.production_year < 2000 AND dmi.production_year >= 1980 THEN 'Classic Era'
        ELSE 'Old School' 
    END) AS era_category
FROM 
    DetailedMovieInfo dmi
ORDER BY 
    dmi.total_cast DESC,
    dmi.production_year ASC;
