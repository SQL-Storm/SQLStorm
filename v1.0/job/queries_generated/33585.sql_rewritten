WITH RECURSIVE ActorHierarchy AS (
    SELECT 
        ci.person_id,
        ci.movie_id,
        1 AS depth
    FROM 
        cast_info ci
    WHERE 
        ci.nr_order = 1

    UNION ALL

    SELECT 
        ci.person_id,
        ci.movie_id,
        ah.depth + 1
    FROM 
        cast_info ci
    JOIN 
        ActorHierarchy ah ON ci.movie_id = ah.movie_id AND ci.person_id <> ah.person_id
)

SELECT 
    a.name AS actor_name,
    mt.title AS movie_title,
    mt.production_year,
    COUNT(DISTINCT ah.person_id) AS co_actor_count,
    SUM(CASE WHEN mt.production_year IS NOT NULL THEN 1 ELSE 0 END) AS produced_movies,
    STRING_AGG(DISTINCT k.keyword, ', ') AS keywords,
    rank() OVER (PARTITION BY mt.production_year ORDER BY COUNT(DISTINCT ah.person_id) DESC) AS rank_by_co_actors
FROM 
    aka_name a
JOIN 
    cast_info ci ON a.person_id = ci.person_id
JOIN 
    ActorHierarchy ah ON ci.movie_id = ah.movie_id
JOIN 
    aka_title mt ON ci.movie_id = mt.movie_id
LEFT JOIN 
    movie_keyword mk ON mk.movie_id = mt.movie_id
LEFT JOIN 
    keyword k ON mk.keyword_id = k.id
WHERE 
    mt.production_year >= 2000
    AND a.name IS NOT NULL
GROUP BY 
    a.id, mt.id
HAVING 
    COUNT(DISTINCT ah.person_id) > 5
ORDER BY 
    produced_movies DESC, co_actor_count DESC;