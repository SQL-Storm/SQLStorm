
WITH RankedMovies AS (
    SELECT 
        t.title,
        t.production_year,
        k.keyword,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY COUNT(mk.keyword_id) DESC) AS rank
    FROM 
        title t
    JOIN 
        movie_keyword mk ON t.id = mk.movie_id
    JOIN 
        keyword k ON mk.keyword_id = k.id
    WHERE 
        t.production_year BETWEEN 2000 AND 2023
    GROUP BY 
        t.title, t.production_year, k.keyword
),
TopMovies AS (
    SELECT 
        rm.title,
        rm.production_year,
        rm.keyword
    FROM 
        RankedMovies rm
    WHERE 
        rm.rank <= 5
),
MovieDetails AS (
    SELECT 
        tm.title,
        tm.production_year,
        COUNT(DISTINCT ci.person_id) AS cast_count,
        ARRAY_AGG(DISTINCT cn.name) AS companies,
        ARRAY_AGG(DISTINCT pi.info) AS person_infos
    FROM 
        TopMovies tm
    LEFT JOIN 
        complete_cast cc ON cc.movie_id = (SELECT t.id FROM title t WHERE t.title = tm.title AND t.production_year = tm.production_year)
    LEFT JOIN 
        cast_info ci ON ci.movie_id = cc.movie_id
    LEFT JOIN 
        movie_companies mc ON mc.movie_id = cc.movie_id
    LEFT JOIN 
        company_name cn ON mc.company_id = cn.id
    LEFT JOIN 
        person_info pi ON ci.person_id = pi.person_id
    GROUP BY 
        tm.title, tm.production_year
)
SELECT 
    md.title,
    md.production_year,
    md.cast_count,
    STRING_AGG(DISTINCT md.companies, ', ') AS company_names,
    STRING_AGG(DISTINCT md.person_infos, ', ') AS person_info_notes
FROM 
    MovieDetails md
GROUP BY 
    md.title, md.production_year, md.cast_count
ORDER BY 
    md.production_year DESC, md.cast_count DESC;
