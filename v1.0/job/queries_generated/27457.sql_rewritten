WITH RankedMovies AS (
    SELECT
        t.id AS movie_id,
        t.title AS movie_title,
        ARRAY_AGG(DISTINCT ak.name) AS aka_names,
        AVG(mo.production_year) AS avg_production_year,
        COUNT(c.id) AS cast_count,
        STRING_AGG(DISTINCT CONCAT(cast_role.role, ': ', p.name), ', ') AS cast_roles
    FROM
        title t
    JOIN
        aka_title ak ON ak.movie_id = t.id
    JOIN
        complete_cast cc ON cc.movie_id = t.id
    JOIN
        cast_info c ON c.movie_id = t.id
    JOIN
        role_type cast_role ON cast_role.id = c.role_id
    JOIN
        name p ON p.id = c.person_id
    JOIN
        movie_info mo ON mo.movie_id = t.id
    WHERE
        t.kind_id IN (1, 2) 
    GROUP BY
        t.id
    ORDER BY
        avg_production_year DESC
    LIMIT 100
)
SELECT
    rm.movie_id,
    rm.movie_title,
    rm.avg_production_year,
    rm.cast_count,
    rm.cast_roles,
    COALESCE(STRING_AGG(DISTINCT k.keyword, ', '), 'No Keywords') AS keywords,
    COALESCE(STRING_AGG(DISTINCT cn.name, ', '), 'No Companies') AS companies
FROM
    RankedMovies rm
LEFT JOIN
    movie_keyword mk ON mk.movie_id = rm.movie_id
LEFT JOIN
    keyword k ON k.id = mk.keyword_id
LEFT JOIN
    movie_companies mc ON mc.movie_id = rm.movie_id
LEFT JOIN
    company_name cn ON cn.id = mc.company_id
GROUP BY
    rm.movie_id, rm.movie_title, rm.avg_production_year, rm.cast_count, rm.cast_roles
ORDER BY
    rm.cast_count DESC;