WITH RankedMovies AS (
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY RAND()) AS random_rank,
        COUNT(*) OVER (PARTITION BY t.production_year) AS movie_count
    FROM 
        aka_title t
    WHERE 
        t.production_year IS NOT NULL
        AND t.kind_id IN (SELECT id FROM kind_type WHERE kind LIKE 'Feature%')
),

TopRankedMovies AS (
    SELECT 
        movie_id,
        title,
        production_year,
        random_rank
    FROM 
        RankedMovies
    WHERE 
        random_rank <= 10
),

JoinedCast AS (
    SELECT 
        m.movie_id,
        ak.name AS actor_name,
        p.gender,
        c.nr_order,
        ct.kind AS role 
    FROM 
        cast_info c
    JOIN 
        aka_name ak ON ak.person_id = c.person_id
    JOIN 
        title m ON m.id = c.movie_id
    LEFT JOIN 
        role_type rt ON rt.id = c.role_id
    LEFT JOIN 
        comp_cast_type ct ON ct.id = c.person_role_id
)

SELECT 
    tm.movie_id,
    tm.title,
    tm.production_year,
    GROUP_CONCAT(DISTINCT jc.actor_name ORDER BY jc.nr_order SEPARATOR ', ') AS actors,
    SUM(CASE WHEN jc.gender = 'F' THEN 1 ELSE 0 END) AS female_actors,
    SUM(CASE WHEN jc.gender = 'M' THEN 1 ELSE 0 END) AS male_actors,
    CASE WHEN COUNT(DISTINCT jc.actor_name) = 0 THEN 'No Cast' ELSE 'Cast Available' END AS cast_presence
FROM 
    TopRankedMovies tm
LEFT JOIN 
    JoinedCast jc ON tm.movie_id = jc.movie_id
GROUP BY 
    tm.movie_id,
    tm.title,
    tm.production_year
HAVING 
    CAST(NULLIF(SUM(CASE WHEN jc.gender IS NULL THEN 1 END), 0) AS boolean) = TRUE 
    OR female_actors >= 1
ORDER BY 
    tm.production_year DESC, 
    tm.title;