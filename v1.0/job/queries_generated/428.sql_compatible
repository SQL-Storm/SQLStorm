
WITH RankedTitles AS (
    SELECT 
        t.id AS title_id,
        t.title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.title) AS title_rank
    FROM 
        title t
    WHERE 
        t.production_year IS NOT NULL
),
ActorTitles AS (
    SELECT 
        ka.person_id,
        t.title,
        t.production_year,
        COUNT(DISTINCT t.id) AS title_count
    FROM 
        aka_name ka
    JOIN 
        cast_info ci ON ka.person_id = ci.person_id
    JOIN 
        title t ON ci.movie_id = t.id
    WHERE 
        ka.name IS NOT NULL
    GROUP BY 
        ka.person_id, t.title, t.production_year
),
CompanyMovieCount AS (
    SELECT 
        mc.company_id,
        COUNT(DISTINCT mc.movie_id) AS movie_count
    FROM 
        movie_companies mc
    JOIN 
        company_name cn ON mc.company_id = cn.id
    GROUP BY 
        mc.company_id
),
QualifiedMovies AS (
    SELECT 
        t.title,
        t.production_year,
        c.company_id
    FROM 
        title t
    JOIN 
        movie_companies mc ON t.id = mc.movie_id
    JOIN 
        company_name c ON mc.company_id = c.id
    WHERE 
        c.country_code IS NOT NULL
),
FinalResult AS (
    SELECT 
        at.person_id,
        at.title,
        at.production_year,
        COALESCE(cmc.movie_count, 0) AS company_movie_count,
        rt.title_rank
    FROM 
        ActorTitles at
    LEFT JOIN 
        CompanyMovieCount cmc ON at.title = (SELECT title FROM QualifiedMovies WHERE production_year = at.production_year LIMIT 1)
    JOIN 
        RankedTitles rt ON rt.title = at.title AND rt.production_year = at.production_year
)
SELECT 
    f.person_id,
    f.title,
    f.production_year,
    f.company_movie_count,
    CASE 
        WHEN f.company_movie_count > 5 THEN 'Popular'
        WHEN f.company_movie_count = 0 THEN 'No Companies'
        ELSE 'Less Popular'
    END AS popularity_category
FROM 
    FinalResult f
WHERE 
    f.title_rank <= 10
ORDER BY 
    f.production_year DESC, f.title;
