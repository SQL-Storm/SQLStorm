WITH RecursiveMovieCTE AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        COUNT(c.person_id) AS cast_count,
        STRING_AGG(DISTINCT a.name, ', ') AS actors
    FROM 
        aka_title mt
    LEFT JOIN 
        movie_link ml ON mt.id = ml.movie_id
    LEFT JOIN 
        title t ON ml.linked_movie_id = t.id
    LEFT JOIN 
        complete_cast cc ON cc.movie_id = mt.id
    LEFT JOIN 
        cast_info c ON c.movie_id = mt.id
    LEFT JOIN 
        aka_name a ON c.person_id = a.person_id
    WHERE 
        mt.production_year IS NOT NULL
    GROUP BY 
        mt.id, mt.title, mt.production_year
    
    UNION ALL 
    
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        cc.updated_cast_count AS cast_count,
        STRING_AGG(DISTINCT an.name, ', ') AS actors
    FROM 
        title t
    JOIN 
        movie_link ml ON t.id = ml.linked_movie_id
    JOIN 
        complete_cast cc ON cc.movie_id = t.id
    LEFT JOIN 
        aka_name an ON cc.subject_id = an.person_id
    WHERE 
        t.production_year IS NOT NULL
    GROUP BY 
        t.id, t.title, t.production_year, cc.updated_cast_count
),
FilteredMovies AS (
    SELECT
        movie_id,
        title,
        production_year,
        cast_count,
        actors,
        ROW_NUMBER() OVER (PARTITION BY production_year ORDER BY cast_count DESC) AS rn
    FROM 
        RecursiveMovieCTE
)

SELECT 
    f.movie_id,
    f.title,
    f.production_year,
    f.cast_count,
    f.actors
FROM 
    FilteredMovies f
WHERE 
    f.rn <= 5 
    AND f.production_year BETWEEN 1980 AND 2020 
    AND f.actors IS NOT NULL 
ORDER BY 
    f.production_year DESC, 
    f.cast_count DESC;