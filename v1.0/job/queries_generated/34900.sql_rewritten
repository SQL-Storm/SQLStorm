WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        1 AS level
    FROM 
        aka_title mt
    WHERE 
        mt.production_year >= 2000

    UNION ALL

    SELECT 
        ml.linked_movie_id AS movie_id,
        at.title,
        at.production_year,
        mh.level + 1
    FROM 
        MovieHierarchy mh
    JOIN 
        movie_link ml ON mh.movie_id = ml.movie_id
    JOIN 
        aka_title at ON ml.linked_movie_id = at.id
    WHERE 
        mh.level < 5 
)

SELECT 
    m.title AS Movie_Title,
    m.production_year AS Production_Year,
    p.name AS Person_Name,
    c.role_id AS Role_ID,
    GROUP_CONCAT(DISTINCT k.keyword) AS Keywords,
    ROW_NUMBER() OVER (PARTITION BY m.id ORDER BY p.name) AS Actor_Rank,
    COALESCE(NULLIF(p.gender, ''), 'Unknown') AS Gender
FROM 
    MovieHierarchy m
LEFT JOIN 
    complete_cast cc ON m.movie_id = cc.movie_id
LEFT JOIN 
    cast_info c ON cc.subject_id = c.person_id
LEFT JOIN 
    aka_name p ON c.person_id = p.person_id
LEFT JOIN 
    movie_keyword mk ON m.movie_id = mk.movie_id
LEFT JOIN 
    keyword k ON mk.keyword_id = k.id
WHERE 
    m.production_year IS NOT NULL
GROUP BY 
    m.id, m.title, m.production_year, p.name, c.role_id
HAVING 
    COUNT(DISTINCT k.keyword) > 0
ORDER BY 
    m.production_year DESC, Actor_Rank;