
WITH RankedMovies AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        ROW_NUMBER() OVER (PARTITION BY mt.production_year ORDER BY mt.production_year DESC, mt.title) AS rank
    FROM 
        aka_title mt
    WHERE 
        mt.kind_id = (SELECT id FROM kind_type WHERE kind = 'movie')
        AND mt.production_year IS NOT NULL
),
ActorMovies AS (
    SELECT 
        ak.name AS actor_name,
        rm.movie_id,
        rm.title,
        rm.production_year
    FROM 
        RankedMovies rm
    JOIN 
        cast_info ci ON ci.movie_id = rm.movie_id
    JOIN 
        aka_name ak ON ak.person_id = ci.person_id
    WHERE 
        ci.role_id = (SELECT id FROM role_type WHERE role = 'actor')
),
MovieKeywords AS (
    SELECT 
        am.movie_id,
        STRING_AGG(k.keyword, ', ') AS keywords
    FROM 
        ActorMovies am
    JOIN 
        movie_keyword mk ON mk.movie_id = am.movie_id
    JOIN 
        keyword k ON k.id = mk.keyword_id
    GROUP BY 
        am.movie_id
),
FinalResults AS (
    SELECT 
        am.actor_name,
        am.title,
        am.production_year,
        COALESCE(mk.keywords, 'No keywords') AS keywords,
        COUNT(DISTINCT ci.person_id) AS co_actor_count
    FROM 
        ActorMovies am
    LEFT JOIN 
        movie_keyword mk ON mk.movie_id = am.movie_id
    LEFT JOIN 
        cast_info ci ON ci.movie_id = am.movie_id AND ci.person_id <> (SELECT person_id FROM aka_name WHERE name = am.actor_name)
    GROUP BY 
        am.actor_name, am.title, am.production_year, mk.keywords
)

SELECT 
    fern.actor_name,
    fern.title,
    fern.production_year,
    fern.keywords,
    fern.co_actor_count
FROM 
    FinalResults fern
WHERE 
    fern.co_actor_count > 1
ORDER BY 
    fern.production_year DESC, fern.actor_name;
