WITH RankedMovies AS (
    SELECT 
        t.id AS title_id,
        t.title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.id) AS year_rank
    FROM 
        aka_title t
    WHERE 
        t.production_year IS NOT NULL
),
ActorRoles AS (
    SELECT 
        a.id AS actor_id,
        a.person_id,
        a.movie_id,
        r.role,
        ROW_NUMBER() OVER (PARTITION BY a.person_id ORDER BY a.nr_order) AS role_rank
    FROM 
        cast_info a
    JOIN 
        role_type r ON a.role_id = r.id
),
DistinctKWords AS (
    SELECT 
        DISTINCT k.keyword
    FROM 
        movie_keyword mk
    JOIN 
        keyword k ON mk.keyword_id = k.id
    WHERE 
        k.keyword IS NOT NULL
),
AggregateCompanyData AS (
    SELECT 
        mc.movie_id,
        COUNT(DISTINCT c.name) AS distinct_companies,
        STRING_AGG(DISTINCT c.name, ', ') AS company_names
    FROM 
        movie_companies mc
    JOIN 
        company_name c ON mc.company_id = c.id
    GROUP BY 
        mc.movie_id
)
SELECT 
    rm.title,
    rm.production_year,
    ar.actor_id,
    ar.role,
    ak.name AS aka_name,
    COALESCE(NULLIF(agg.distinct_companies, 0), 'No Companies') AS company_info,
    k.keyword AS movie_keyword
FROM 
    RankedMovies rm
LEFT JOIN 
    ActorRoles ar ON rm.title_id = ar.movie_id AND ar.role_rank = 1 
LEFT JOIN 
    aka_name ak ON ar.person_id = ak.person_id
LEFT JOIN 
    AggregateCompanyData agg ON rm.title_id = agg.movie_id
LEFT JOIN 
    DistinctKWords k ON k.keyword IN (
        SELECT 
            k2.keyword 
        FROM 
            movie_keyword mk2 
        WHERE 
            mk2.movie_id = rm.title_id
        INTERSECT 
        SELECT 
            k3.keyword 
        FROM 
            keyword k3
        WHERE 
            k3.phonetic_code IS NOT NULL
    )
WHERE 
    rm.year_rank <= 10 
ORDER BY 
    rm.production_year DESC, 
    ar.actor_id NULLS LAST;