
WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        CAST(NULL AS integer) AS parent_movie_id,
        0 AS level
    FROM 
        aka_title t
    WHERE 
        t.production_year >= 2000

    UNION ALL

    SELECT 
        mt.linked_movie_id,
        lt.title,
        lt.production_year,
        mh.movie_id,
        mh.level + 1
    FROM 
        MovieHierarchy mh
    JOIN 
        movie_link ml ON mh.movie_id = ml.movie_id
    JOIN 
        aka_title lt ON ml.linked_movie_id = lt.id
)

SELECT 
    a.name AS actor_name,
    mt.title AS movie_title,
    mh.production_year,
    COUNT(*) OVER (PARTITION BY mt.id) AS total_movies_linked,
    AVG(CASE WHEN p.gender = 'F' THEN 1 ELSE 0 END) OVER () AS female_ratio,
    COALESCE(mk.keyword, 'No keyword') AS movie_keyword,
    ROW_NUMBER() OVER (PARTITION BY a.id ORDER BY mh.level) AS role_order
FROM 
    aka_name a
JOIN 
    cast_info ci ON a.person_id = ci.person_id
JOIN 
    MovieHierarchy mh ON ci.movie_id = mh.movie_id
JOIN 
    aka_title mt ON mt.id = mh.movie_id
LEFT JOIN 
    movie_keyword mk ON mk.movie_id = mt.id
LEFT JOIN 
    name p ON a.person_id = p.imdb_id
WHERE 
    mh.level <= 2
AND 
    a.name IS NOT NULL
AND 
    a.name <> ''
GROUP BY 
    a.name, mt.title, mh.production_year, mk.keyword, p.gender
ORDER BY 
    role_order, total_movies_linked DESC;
