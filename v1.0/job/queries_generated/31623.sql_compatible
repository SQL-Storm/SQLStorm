
WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        1 AS level
    FROM 
        aka_title mt
    WHERE 
        mt.production_year >= 2000

    UNION ALL

    SELECT 
        ml.linked_movie_id AS movie_id,
        at.title,
        at.production_year,
        mh.level + 1 AS level
    FROM 
        movie_link ml
    JOIN 
        aka_title at ON ml.linked_movie_id = at.id
    JOIN 
        MovieHierarchy mh ON ml.movie_id = mh.movie_id
    WHERE 
        at.production_year >= 2000
)

SELECT 
    a.id AS aka_id,
    a.name AS actor_name,
    t.title,
    t.production_year,
    COUNT(ci.movie_id) AS movies_participated,
    AVG(CASE 
        WHEN t.kind_id IS NOT NULL THEN 1 ELSE 0 
    END) OVER (PARTITION BY a.id) AS ratio_contributed_to_titles,
    STRING_AGG(DISTINCT t.title, ', ') AS associated_titles
FROM 
    aka_name a
JOIN 
    cast_info ci ON a.person_id = ci.person_id
JOIN 
    MovieHierarchy mh ON ci.movie_id = mh.movie_id
JOIN 
    aka_title t ON mh.movie_id = t.id
WHERE 
    a.name IS NOT NULL
    AND a.name NOT LIKE '%Uncredited%'
    AND t.production_year >= 2000
GROUP BY 
    a.id, a.name, t.title, t.production_year
HAVING 
    COUNT(ci.movie_id) > 1
ORDER BY 
    movies_participated DESC, a.name
LIMIT 10;
