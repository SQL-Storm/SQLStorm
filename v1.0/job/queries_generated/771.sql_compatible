
WITH RankedMovies AS (
    SELECT 
        a.title, 
        a.production_year,
        ROW_NUMBER() OVER (PARTITION BY a.production_year ORDER BY COUNT(DISTINCT c.person_id) DESC) AS movie_rank
    FROM 
        aka_title a
    JOIN 
        movie_companies mc ON a.movie_id = mc.movie_id
    LEFT JOIN 
        cast_info c ON a.movie_id = c.movie_id
    GROUP BY 
        a.title, a.production_year
),
RecentMovies AS (
    SELECT 
        title, 
        production_year,
        movie_rank
    FROM 
        RankedMovies
    WHERE 
        movie_rank <= 5
),
MovieKeywords AS (
    SELECT 
        mk.movie_id, 
        STRING_AGG(k.keyword, ', ') AS keywords
    FROM 
        movie_keyword mk
    JOIN 
        keyword k ON mk.keyword_id = k.id
    GROUP BY 
        mk.movie_id
),
MovieDetails AS (
    SELECT 
        m.title, 
        m.production_year, 
        mk.keywords
    FROM 
        RecentMovies m
    LEFT JOIN 
        MovieKeywords mk ON m.title = (SELECT title FROM aka_title WHERE movie_id = (SELECT movie_id FROM aka_title WHERE title = m.title LIMIT 1))
)
SELECT 
    md.title, 
    md.production_year, 
    COALESCE(md.keywords, 'No keywords') AS keywords,
    CASE 
        WHEN md.production_year > 2000 THEN 'Modern'
        ELSE 'Classic'
    END AS movie_age_category
FROM 
    MovieDetails md
JOIN 
    title t ON md.title = t.title 
WHERE 
    t.kind_id IN (SELECT id FROM kind_type WHERE kind IN ('movie', 'series'))
ORDER BY 
    md.production_year DESC, md.title;
