
WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        CAST(NULL AS VARCHAR) AS parent_title
    FROM 
        aka_title t
    WHERE 
        t.episode_of_id IS NULL  
    UNION ALL
    SELECT 
        e.id AS movie_id,
        e.title,
        e.production_year,
        h.title AS parent_title
    FROM 
        aka_title e
    JOIN 
        MovieHierarchy h ON e.episode_of_id = h.movie_id  
),
MovieDetails AS (
    SELECT 
        m.id AS movie_id,
        m.title,
        m.production_year,
        p.name AS person_name,
        c.role_id,
        COALESCE(mk.keyword, 'No Keywords') AS keyword,
        ROW_NUMBER() OVER (PARTITION BY m.id ORDER BY p.name) AS name_rank
    FROM 
        aka_title m
    JOIN 
        cast_info ci ON m.id = ci.movie_id
    JOIN 
        aka_name p ON ci.person_id = p.person_id
    LEFT JOIN 
        movie_keyword mk ON m.id = mk.movie_id
    WHERE 
        p.name IS NOT NULL
)
SELECT 
    mh.movie_id,
    mh.title,
    mh.production_year,
    COALESCE(SUM(CASE WHEN md.keyword = 'Drama' THEN 1 ELSE 0 END), 0) AS drama_count,
    COALESCE(MIN(md.name_rank), 0) AS first_actor_rank,
    COUNT(DISTINCT md.person_name) AS total_cast,
    STRING_AGG(DISTINCT md.keyword, ', ') AS all_keywords,
    mh.parent_title
FROM 
    MovieHierarchy mh
LEFT JOIN 
    MovieDetails md ON mh.movie_id = md.movie_id
GROUP BY 
    mh.movie_id, mh.title, mh.production_year, mh.parent_title
ORDER BY 
    mh.production_year DESC, mh.title;
