WITH RECURSIVE ActorHierarchy AS (
    SELECT 
        c.person_id,
        ca.name AS actor_name,
        0 AS level
    FROM 
        cast_info c 
    JOIN 
        aka_name ca ON c.person_id = ca.person_id
    WHERE 
        ca.name IS NOT NULL
    
    UNION ALL
    
    SELECT 
        c.person_id,
        ca.name AS actor_name,
        ah.level + 1
    FROM 
        cast_info c
    JOIN 
        aka_name ca ON c.person_id = ca.person_id
    JOIN 
        ActorHierarchy ah ON c.movie_id = ah.person_id
    WHERE 
        ca.name IS NOT NULL
),
GenreStats AS (
    SELECT 
        kt.keyword AS genre, 
        COUNT(DISTINCT mt.movie_id) AS movie_count,
        AVG(m.production_year) AS avg_production_year
    FROM 
        movie_keyword mk
    JOIN 
        keyword kt ON mk.keyword_id = kt.id
    JOIN 
        aka_title mt ON mk.movie_id = mt.id
    GROUP BY 
        kt.keyword
),
PopularActors AS (
    SELECT 
        ah.actor_name,
        COUNT(DISTINCT c.movie_id) AS movies_starred,
        RANK() OVER (ORDER BY COUNT(DISTINCT c.movie_id) DESC) AS actor_rank
    FROM 
        ActorHierarchy ah 
    JOIN 
        cast_info c ON ah.person_id = c.person_id
    GROUP BY 
        ah.actor_name
),
FilmAndCompanies AS (
    SELECT 
        c.movie_id, 
        c.company_id,
        co.name AS company_name,
        COALESCE(ct.kind, 'Unknown') AS company_type
    FROM 
        movie_companies c
    LEFT JOIN 
        company_name co ON c.company_id = co.id
    LEFT JOIN 
        company_type ct ON c.company_type_id = ct.id
)
SELECT 
    p.actor_name,
    gs.genre,
    gs.movie_count,
    gs.avg_production_year,
    pa.movies_starred
FROM 
    PopularActors pa
JOIN 
    GenreStats gs ON pa.movies_starred > gs.movie_count
JOIN 
    ActorHierarchy p ON pa.actor_name = p.actor_name
LEFT JOIN 
    FilmAndCompanies fc ON p.person_id = fc.movie_id
WHERE 
    fc.company_name IS NOT NULL 
    AND p.actor_name NOT LIKE '%Unknown%'  
ORDER BY 
    pa.movies_starred DESC,
    gs.avg_production_year DESC
FETCH FIRST 50 ROWS ONLY;