WITH RECURSIVE MovieHierarchy AS (
    SELECT
        m.id AS movie_id,
        m.title,
        m.production_year,
        1 AS depth
    FROM
        aka_title m
    WHERE
        m.production_year >= 2000 

    UNION ALL

    SELECT
        m.id AS movie_id,
        m.title,
        m.production_year,
        mh.depth + 1 AS depth
    FROM
        aka_title m
    JOIN
        movie_link ml ON m.id = ml.linked_movie_id
    JOIN
        MovieHierarchy mh ON ml.movie_id = mh.movie_id
)
SELECT
    mh.movie_id,
    mh.title,
    mh.production_year,
    mh.depth,
    COALESCE(ak.name, 'Unknown') AS aka_name,
    COALESCE(ci.role_id, -1) AS role_id,
    COUNT(DISTINCT ci.person_id) OVER (PARTITION BY mh.movie_id) AS num_actors,
    STRING_AGG(DISTINCT cn.name, ', ') FILTER (WHERE cn.name IS NOT NULL) AS character_names,
    MAX(CASE WHEN mt.kind IS NOT NULL THEN mt.kind ELSE 'N/A' END) AS movie_type,
    COUNT(DISTINCT mk.keyword) AS keyword_count,
    SUM(CASE WHEN cm.kind IS NOT NULL THEN 1 ELSE 0 END) AS company_count,
    MIN(pi.info) FILTER (WHERE pi.info_type_id = 1) AS birth_date 
FROM
    MovieHierarchy mh
LEFT JOIN
    movie_companies mc ON mh.movie_id = mc.movie_id
LEFT JOIN
    company_name cn ON mc.company_id = cn.id
LEFT JOIN
    aka_name ak ON mh.movie_id = ak.movie_id
LEFT JOIN
    cast_info ci ON mh.movie_id = ci.movie_id
LEFT JOIN
    kind_type mt ON mh.kind_id = mt.id
LEFT JOIN
    movie_keyword mk ON mh.movie_id = mk.movie_id
LEFT JOIN
    person_info pi ON ci.person_id = pi.person_id
GROUP BY
    mh.movie_id, mh.title, mh.production_year, mh.depth, ak.name, ci.role_id
HAVING
    COUNT(DISTINCT ci.person_id) > 5 
ORDER BY
    mh.production_year DESC, mh.title;