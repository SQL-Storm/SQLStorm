
WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        m.id AS movie_id,
        t.title,
        t.production_year,
        ARRAY[m.md5sum] AS md5sums,
        1 AS level
    FROM 
        aka_title t
    JOIN 
        title m ON t.movie_id = m.id
    WHERE 
        t.kind_id IN (SELECT id FROM kind_type WHERE kind = 'feature')
    UNION ALL
    SELECT 
        m.linked_movie_id AS movie_id,
        t.title,
        t.production_year,
        mh.md5sums || m.md5sum,
        mh.level + 1
    FROM 
        movie_link m
    JOIN 
        movie_hierarchy mh ON mh.movie_id = m.movie_id
    JOIN 
        title t ON m.linked_movie_id = t.id
),
actor_role_stats AS (
    SELECT 
        c.movie_id,
        ak.name AS actor_name,
        rt.role,
        COUNT(c.person_id) AS role_count
    FROM 
        cast_info c
    JOIN 
        aka_name ak ON c.person_id = ak.person_id
    JOIN 
        role_type rt ON c.role_id = rt.id
    GROUP BY 
        c.movie_id, ak.name, rt.role
),
filtered_movies AS (
    SELECT 
        mh.movie_id,
        mh.title,
        mh.production_year,
        COUNT(DISTINCT ak.name) AS unique_actors,
        ARRAY_AGG(DISTINCT ak.name ORDER BY ak.name) AS actor_names,
        SUM(CASE WHEN c.note IS NOT NULL THEN 1 ELSE 0 END) AS noted_roles
    FROM 
        movie_hierarchy mh
    LEFT JOIN 
        cast_info c ON mh.movie_id = c.movie_id
    LEFT JOIN 
        aka_name ak ON c.person_id = ak.person_id
    GROUP BY 
        mh.movie_id, mh.title, mh.production_year
    HAVING 
        SUM(CASE WHEN mh.level > 1 THEN 1 ELSE 0 END) >= 2
)
SELECT 
    fm.title,
    fm.production_year,
    fm.unique_actors,
    ROUND(AVG(COALESCE(ar.role_count, 0)), 2) AS avg_role_count,
    STRING_AGG(DISTINCT ar.actor_name, ', ') AS all_actors,
    COUNT(DISTINCT COALESCE(ar.role, 'UNASSIGNED')) AS unique_roles,
    NULLIF(fm.noted_roles, 0) AS non_zero_noted_roles
FROM 
    filtered_movies fm
LEFT JOIN 
    actor_role_stats ar ON fm.movie_id = ar.movie_id
GROUP BY 
    fm.title, fm.production_year, fm.unique_actors, fm.noted_roles
ORDER BY 
    fm.production_year DESC,
    fm.title;
