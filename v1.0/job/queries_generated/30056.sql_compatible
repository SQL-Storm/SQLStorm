
WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        m.id AS movie_id,
        m.title AS movie_title,
        0 AS level
    FROM 
        aka_title m
    WHERE 
        m.production_year >= 2000

    UNION ALL

    SELECT 
        m.id AS movie_id,
        m.title AS movie_title,
        mh.level + 1
    FROM 
        movie_hierarchy mh
    JOIN 
        movie_link ml ON mh.movie_id = ml.movie_id
    JOIN 
        aka_title m ON ml.linked_movie_id = m.id
    WHERE 
        mh.level < 5
)

SELECT 
    m.id AS movie_id,
    m.title AS movie_title,
    m.production_year,
    a.name AS actor_name,
    c.kind AS cast_type,
    STRING_AGG(DISTINCT k.keyword, ', ') AS keywords,
    COUNT(DISTINCT ci.person_id) AS total_cast,
    ROW_NUMBER() OVER (PARTITION BY m.id ORDER BY a.name) AS actor_rank,
    CASE 
        WHEN m.production_year IS NULL THEN 'Unknown Year'
        ELSE CAST(m.production_year AS VARCHAR)
    END AS production_year_display
FROM 
    movie_hierarchy mh
JOIN 
    aka_title m ON mh.movie_id = m.id
LEFT JOIN 
    cast_info ci ON m.id = ci.movie_id
LEFT JOIN 
    aka_name a ON ci.person_id = a.person_id
LEFT JOIN 
    comp_cast_type c ON ci.role_id = c.id
LEFT JOIN 
    movie_keyword mk ON mk.movie_id = m.id
LEFT JOIN 
    keyword k ON mk.keyword_id = k.id
WHERE 
    c.kind IS NOT NULL
GROUP BY 
    m.id, m.title, m.production_year, a.name, c.kind
ORDER BY 
    m.production_year DESC, total_cast DESC;
