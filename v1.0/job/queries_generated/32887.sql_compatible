
WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        mt.id AS movie_id, 
        mt.title, 
        mt.production_year, 
        mt.kind_id,
        1 AS depth,
        ARRAY[mt.id] AS path
    FROM 
        aka_title mt
    WHERE 
        mt.episode_of_id IS NULL

    UNION ALL

    SELECT 
        et.id AS movie_id, 
        et.title, 
        et.production_year, 
        et.kind_id,
        mh.depth + 1 AS depth,
        path || et.id
    FROM 
        aka_title et
    JOIN 
        movie_hierarchy mh ON mh.movie_id = et.episode_of_id
)

SELECT 
    mh.movie_id,
    mh.title,
    mh.production_year,
    COUNT(cc.id) AS cast_count,
    STRING_AGG(DISTINCT an.name, ', ') AS actor_names,
    SUM(CASE WHEN ci.note IS NOT NULL THEN 1 ELSE 0 END) AS cast_with_notes,
    MAX(mk.keyword) AS main_keyword,
    ROW_NUMBER() OVER (PARTITION BY mh.production_year ORDER BY mh.title) AS title_order
FROM 
    movie_hierarchy mh
LEFT JOIN 
    complete_cast cc ON mh.movie_id = cc.movie_id
LEFT JOIN 
    cast_info ci ON cc.subject_id = ci.person_id
LEFT JOIN 
    aka_name an ON ci.person_id = an.person_id
LEFT JOIN 
    movie_keyword mk ON mh.movie_id = mk.movie_id
WHERE 
    mh.production_year > 2000 AND 
    mh.kind_id IN (SELECT id FROM kind_type WHERE kind LIKE '%Drama%')
GROUP BY 
    mh.movie_id, mh.title, mh.production_year
ORDER BY 
    mh.production_year DESC, cast_count DESC;
