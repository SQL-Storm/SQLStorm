
WITH RankedMovies AS (
    SELECT
        m.id AS movie_id,
        m.title,
        m.production_year,
        ROW_NUMBER() OVER (PARTITION BY m.production_year ORDER BY COUNT(ci.person_id) DESC) AS rank
    FROM
        aka_title m
    LEFT JOIN
        complete_cast ci ON m.id = ci.movie_id
    WHERE
        m.production_year IS NOT NULL
    GROUP BY
        m.id, m.title, m.production_year
),
TopMovies AS (
    SELECT
        rm.movie_id,
        rm.title,
        rm.production_year
    FROM
        RankedMovies rm
    WHERE
        rm.rank <= 5
),
MovieKeywords AS (
    SELECT
        mk.movie_id,
        STRING_AGG(k.keyword, ', ') AS keywords
    FROM
        movie_keyword mk
    JOIN
        keyword k ON mk.keyword_id = k.id
    GROUP BY
        mk.movie_id
)
SELECT
    tm.title,
    tm.production_year,
    COALESCE(mk.keywords, '') AS keywords,
    COALESCE(COUNT(DISTINCT ci.person_id), 0) AS cast_count,
    CASE
        WHEN COALESCE(COUNT(DISTINCT ci.person_id), 0) = 0 THEN 'No Cast Available'
        ELSE 'Cast Present'
    END AS cast_status
FROM
    TopMovies tm
LEFT JOIN
    complete_cast ci ON tm.movie_id = ci.movie_id
LEFT JOIN
    MovieKeywords mk ON tm.movie_id = mk.movie_id
GROUP BY
    tm.title, tm.production_year, mk.keywords
ORDER BY
    tm.production_year DESC, tm.title;
