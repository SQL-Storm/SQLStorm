
WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        1 AS level,
        NULL AS parent_movie_id
    FROM 
        aka_title mt
    WHERE 
        mt.episode_of_id IS NULL
    
    UNION ALL
    
    SELECT 
        c.id AS movie_id,
        mt.title,
        mt.production_year,
        mh.level + 1 AS level,
        mh.movie_id AS parent_movie_id
    FROM 
        aka_title mt
    JOIN 
        movie_link ml ON mt.id = ml.movie_id
    JOIN 
        MovieHierarchy mh ON ml.linked_movie_id = mh.movie_id
)

SELECT 
    mh.level,
    mh.title AS movie_title,
    mh.production_year,
    COALESCE(cn.name, 'Unknown Company') AS production_company,
    COUNT(DISTINCT ci.person_id) AS actors_count,
    AVG(CASE WHEN pi.info_type_id = 2 THEN 1 ELSE 0 END) AS avg_age_years,
    STRING_AGG(DISTINCT ak.name, ', ') AS aliases
FROM 
    MovieHierarchy mh
LEFT JOIN 
    complete_cast cc ON mh.movie_id = cc.movie_id
LEFT JOIN 
    cast_info ci ON ci.movie_id = mh.movie_id
LEFT JOIN 
    movie_companies mc ON mh.movie_id = mc.movie_id
LEFT JOIN 
    company_name cn ON mc.company_id = cn.id
LEFT JOIN 
    person_info pi ON pi.person_id = ci.person_id AND pi.info_type_id = 2 
LEFT JOIN 
    aka_name ak ON ak.person_id = ci.person_id
WHERE 
    mh.production_year >= 2000 
GROUP BY 
    mh.level, mh.title, mh.production_year, cn.name
ORDER BY 
    mh.level, mh.title;
