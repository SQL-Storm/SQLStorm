
WITH RecursiveMovieCTE AS (
    SELECT 
        t.title AS movie_title,
        t.production_year,
        c.person_id,
        a.name AS actor_name,
        ROW_NUMBER() OVER (PARTITION BY t.id ORDER BY c.nr_order) AS cast_order
    FROM 
        aka_title t
    JOIN 
        cast_info c ON t.id = c.movie_id
    JOIN 
        aka_name a ON c.person_id = a.person_id
    WHERE 
        c.nr_order IS NOT NULL

    UNION ALL

    SELECT 
        'Sequel to ' || movie_title,
        production_year + 1,
        c.person_id,
        a.name AS actor_name,
        cast_order + 1
    FROM 
        RecursiveMovieCTE r
    JOIN 
        cast_info c ON r.person_id = c.person_id
    JOIN 
        aka_title t ON c.movie_id = t.id
    WHERE 
        r.production_year < EXTRACT(YEAR FROM CAST('2024-10-01' AS DATE)) 
)

SELECT 
    m.movie_title,
    m.production_year,
    m.actor_name,
    COUNT(m.actor_name) OVER (PARTITION BY m.movie_title) AS actor_count,
    AVG(COALESCE(m.production_year - m.cast_order, 0)) OVER (PARTITION BY m.movie_title) AS avg_year_diff,
    STRING_AGG(DISTINCT COALESCE(ml.note, 'N/A'), ', ') AS link_notes
FROM 
    RecursiveMovieCTE m
LEFT JOIN 
    movie_link ml ON m.production_year = ml.movie_id
LEFT JOIN 
    movie_info mi ON mi.movie_id = ml.linked_movie_id
LEFT JOIN 
    movie_info_idx mii ON mi.info_type_id = mii.info_type_id AND mii.info = 'Trivia'
LEFT JOIN 
    movie_companies mc ON mc.movie_id = m.production_year
LEFT JOIN 
    company_name cn ON mc.company_id = cn.id AND cn.country_code IS NOT NULL 
WHERE 
    m.actor_name IS NOT NULL 
    AND m.production_year BETWEEN 1980 AND 2023 
GROUP BY 
    m.movie_title, m.production_year, m.actor_name
HAVING 
    COUNT(m.actor_name) > 2
ORDER BY 
    avg_year_diff DESC, actor_count DESC;
