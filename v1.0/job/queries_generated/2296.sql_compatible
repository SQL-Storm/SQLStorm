
WITH RankedMovies AS (
    SELECT 
        a.id AS movie_id,
        a.title,
        a.production_year,
        ROW_NUMBER() OVER (PARTITION BY a.production_year ORDER BY a.title) AS rank
    FROM 
        aka_title a
    WHERE 
        a.production_year IS NOT NULL
),
ActorRoleCounts AS (
    SELECT 
        c.person_id,
        COUNT(DISTINCT c.movie_id) AS movie_count,
        STRING_AGG(DISTINCT r.role, ', ') AS roles
    FROM 
        cast_info c
    JOIN 
        role_type r ON c.role_id = r.id
    GROUP BY 
        c.person_id
),
MoviesWithActorRoles AS (
    SELECT 
        m.movie_id,
        m.title,
        m.production_year,
        a.person_id,
        COALESCE(ac.movie_count, 0) AS actor_movie_count,
        ac.roles
    FROM 
        RankedMovies m
    LEFT JOIN 
        cast_info ci ON m.movie_id = ci.movie_id
    LEFT JOIN 
        ActorRoleCounts ac ON ci.person_id = ac.person_id
)
SELECT 
    m.title,
    m.production_year,
    m.actor_movie_count,
    CASE 
        WHEN m.actor_movie_count > 0 THEN m.roles
        ELSE 'No roles assigned'
    END AS roles_assigned,
    CASE 
        WHEN m.production_year < 2000 THEN 'Classic'
        WHEN m.production_year BETWEEN 2000 AND 2015 THEN 'Modern'
        ELSE 'Recent'
    END AS era_category
FROM 
    MoviesWithActorRoles m
WHERE 
    m.production_year BETWEEN 1980 AND 2023
GROUP BY 
    m.title, m.production_year, m.actor_movie_count, m.roles
ORDER BY 
    m.production_year DESC, m.title;
