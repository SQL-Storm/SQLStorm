WITH RankedMovies AS (
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.title) AS rank
    FROM
        aka_title t
    WHERE
        t.production_year IS NOT NULL
),
PreferredCast AS (
    SELECT 
        c.movie_id,
        p.name AS person_name,
        r.role AS role_name,
        ROW_NUMBER() OVER (PARTITION BY c.movie_id ORDER BY c.nr_order) AS role_order
    FROM
        cast_info c
    JOIN
        aka_name p ON c.person_id = p.person_id
    JOIN
        role_type r ON c.role_id = r.id
),
MovieCompanyDetails AS (
    SELECT 
        mc.movie_id,
        co.name AS company_name,
        ct.kind AS company_type
    FROM
        movie_companies mc
    JOIN
        company_name co ON mc.company_id = co.id
    JOIN
        company_type ct ON mc.company_type_id = ct.id
),
DetailedMovieInfo AS (
    SELECT 
        rm.movie_id,
        rm.title,
        rm.production_year,
        pc.person_name,
        pc.role_name,
        mcd.company_name,
        mcd.company_type
    FROM 
        RankedMovies rm
    LEFT JOIN 
        PreferredCast pc ON rm.movie_id = pc.movie_id
    LEFT JOIN 
        MovieCompanyDetails mcd ON rm.movie_id = mcd.movie_id
    WHERE
        rm.rank <= 5  
)
SELECT 
    DMI.title,
    DMI.production_year,
    DMI.person_name,
    DMI.role_name,
    DMI.company_name,
    DMI.company_type,
    COUNT(pc.role_name) OVER (PARTITION BY DMI.movie_id) AS total_roles,
    STRING_AGG(DISTINCT DMI.role_name, ', ') OVER (PARTITION BY DMI.movie_id) AS all_roles
FROM 
    DetailedMovieInfo DMI
ORDER BY 
    DMI.production_year DESC, DMI.title;