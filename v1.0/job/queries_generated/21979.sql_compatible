
WITH movie_cast AS (
    SELECT 
        c.movie_id,
        a.name AS actor_name,
        a.person_id,
        ROW_NUMBER() OVER (PARTITION BY c.movie_id ORDER BY c.nr_order) AS actor_order
    FROM 
        cast_info c
    JOIN 
        aka_name a ON c.person_id = a.person_id
), 
movie_details AS (
    SELECT 
        t.title,
        t.production_year,
        k.keyword AS movie_keyword,
        m.company_id,
        m.note AS company_note,
        COALESCE(m.company_type_id, 0) AS company_type_id
    FROM 
        aka_title t
    LEFT JOIN 
        movie_companies m ON t.id = m.movie_id
    LEFT JOIN 
        movie_keyword k ON t.id = k.movie_id
    WHERE 
        t.production_year IS NOT NULL
), 
actor_info AS (
    SELECT 
        mc.movie_id,
        mc.actor_name,
        md.title,
        md.production_year,
        md.movie_keyword,
        COUNT(*) OVER (PARTITION BY mc.movie_id) AS total_actors
    FROM 
        movie_cast mc
    JOIN 
        movie_details md ON mc.movie_id = md.movie_id
    WHERE 
        mc.actor_order <= 3 
), 
aggregate_data AS (
    SELECT 
        movie_id,
        STRING_AGG(actor_name, ', ') AS leading_actors,
        MAX(production_year) AS latest_year,
        MIN(production_year) AS earliest_year,
        COUNT(DISTINCT movie_keyword) AS unique_keywords
    FROM 
        actor_info 
    GROUP BY 
        movie_id
)
SELECT 
    ad.movie_id,
    ad.leading_actors,
    ad.latest_year,
    ad.earliest_year,
    ad.unique_keywords,
    CASE 
        WHEN ad.latest_year IS NOT NULL AND ad.earliest_year IS NOT NULL THEN 
            ad.latest_year - ad.earliest_year 
        ELSE 
            NULL 
    END AS year_difference,
    CASE 
        WHEN ad.unique_keywords > 0 THEN 'Has Keywords' 
        ELSE 'No Keywords' 
    END AS keyword_status,
    NULLIF(ad.leading_actors, '') AS actors_if_not_empty
FROM 
    aggregate_data ad
LEFT JOIN 
    movie_details md ON ad.movie_id = md.movie_id
WHERE 
    ad.unique_keywords > 1 
    OR (md.company_type_id = 0 AND md.company_note IS NOT NULL)
ORDER BY 
    ad.latest_year DESC;
