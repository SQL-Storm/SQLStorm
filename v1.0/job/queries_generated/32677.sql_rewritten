WITH RECURSIVE movie_hierarchy AS (
    SELECT m.id AS movie_id, m.title, m.production_year, 1 AS level
    FROM aka_title m
    WHERE m.production_year >= 2000

    UNION ALL

    SELECT m.id, m.title, m.production_year, mh.level + 1 
    FROM aka_title m
    INNER JOIN movie_link ml ON ml.linked_movie_id = m.id
    INNER JOIN movie_hierarchy mh ON mh.movie_id = ml.movie_id
),
cast_stats AS (
    SELECT 
        ci.movie_id,
        ARRAY_AGG(DISTINCT ka.name) AS actors,
        COUNT(DISTINCT ci.person_id) AS actor_count
    FROM 
        cast_info ci
    INNER JOIN aka_name ka ON ka.person_id = ci.person_id
    GROUP BY ci.movie_id
),
movie_details AS (
    SELECT 
        m.id,
        m.title,
        m.production_year,
        COALESCE(c.actor_count, 0) AS actor_count,
        string_agg(DISTINCT k.keyword, ', ') AS keywords,
        COUNT(DISTINCT mc.company_id) AS company_count
    FROM 
        aka_title m
    LEFT JOIN cast_stats c ON c.movie_id = m.id
    LEFT JOIN movie_keyword mk ON mk.movie_id = m.id
    LEFT JOIN keyword k ON k.id = mk.keyword_id
    LEFT JOIN movie_companies mc ON mc.movie_id = m.id
    WHERE m.production_year >= 2000
    GROUP BY m.id, m.title, m.production_year, c.actor_count
),
ranked_movies AS (
    SELECT 
        md.*,
        RANK() OVER (PARTITION BY md.production_year ORDER BY md.actor_count DESC) AS actor_rank,
        DENSE_RANK() OVER (ORDER BY md.production_year, md.actor_count DESC) AS overall_rank
    FROM 
        movie_details md
)
SELECT 
    r.movie_id,
    r.title,
    r.production_year,
    r.actor_count,
    r.actor_rank,
    r.overall_rank,
    COALESCE(mh.level, 0) AS movie_level
FROM 
    ranked_movies r
LEFT JOIN movie_hierarchy mh ON r.movie_id = mh.movie_id
WHERE 
    r.actor_count > 5
ORDER BY 
    r.production_year DESC,
    r.actor_rank
LIMIT 10;