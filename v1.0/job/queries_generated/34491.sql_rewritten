WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        m.id AS movie_id,
        t.title,
        m.production_year,
        1 AS level
    FROM 
        aka_title t
        JOIN movie_link ml ON t.id = ml.movie_id
        JOIN title m ON ml.linked_movie_id = m.id
    WHERE 
        t.kind_id = 1 
    
    UNION ALL
    
    SELECT 
        ml.linked_movie_id AS movie_id,
        t.title,
        m.production_year,
        level + 1
    FROM 
        MovieHierarchy mh
        JOIN movie_link ml ON mh.movie_id = ml.movie_id
        JOIN title t ON ml.linked_movie_id = t.id
        JOIN aka_title at ON t.id = at.id
)
SELECT 
    m.title AS Movie_Title,
    m.production_year AS Production_Year,
    COALESCE(ca.name, 'Unknown') AS Cast_Name,
    COUNT(DISTINCT kw.keyword) AS Keyword_Count,
    STRING_AGG(DISTINCT co.name, ', ') AS Companies_Involved,
    AVG(CASE WHEN co.country_code IS NULL THEN 0 ELSE 1 END) AS Companies_From_Non_Null_Country,
    RANK() OVER (PARTITION BY m.production_year ORDER BY COUNT(DISTINCT ca.id) DESC) AS Cast_Rank
FROM 
    MovieHierarchy m
LEFT JOIN cast_info ca ON m.movie_id = ca.movie_id
LEFT JOIN movie_keyword mk ON m.movie_id = mk.movie_id
LEFT JOIN keyword kw ON mk.keyword_id = kw.id
LEFT JOIN movie_companies mc ON m.movie_id = mc.movie_id
LEFT JOIN company_name co ON mc.company_id = co.id
GROUP BY 
    m.movie_id, m.title, m.production_year, ca.name
HAVING 
    COUNT(DISTINCT kw.id) > 1
ORDER BY 
    m.production_year DESC, Cast_Rank;