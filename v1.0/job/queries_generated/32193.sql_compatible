
WITH RECURSIVE actor_hierarchy AS (
    SELECT 
        c.person_id,
        a.name AS actor_name,
        1 AS level,
        c.movie_id
    FROM 
        cast_info c
    JOIN 
        aka_name a ON c.person_id = a.person_id
    WHERE 
        c.movie_id IN (SELECT movie_id FROM aka_title WHERE title ILIKE '%Mystery%')
    
    UNION ALL
    
    SELECT 
        c.person_id,
        a.name AS actor_name,
        ah.level + 1,
        c.movie_id
    FROM 
        cast_info c
    JOIN 
        aka_name a ON c.person_id = a.person_id
    JOIN 
        actor_hierarchy ah ON c.movie_id = ah.movie_id
    WHERE 
        c.nr_order > 0
)
SELECT 
    ah.actor_name,
    COUNT(DISTINCT c.movie_id) AS movie_count,
    STRING_AGG(DISTINCT t.title, ', ') AS movies,
    AVG(m.production_year) AS avg_production_year,
    MAX(m.production_year) AS latest_movie_year,
    MIN(m.production_year) AS earliest_movie_year,
    CASE
        WHEN COUNT(DISTINCT c.movie_id) > 5 THEN 'Established Actor'
        ELSE 'Newcomer'
    END AS actor_status
FROM 
    actor_hierarchy ah
JOIN 
    cast_info c ON ah.person_id = c.person_id
JOIN 
    aka_title t ON c.movie_id = t.movie_id
LEFT JOIN 
    title m ON m.id = c.movie_id
GROUP BY 
    ah.actor_name
ORDER BY 
    movie_count DESC
LIMIT 10;
