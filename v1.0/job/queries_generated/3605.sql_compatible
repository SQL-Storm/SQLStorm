
WITH MovieRoles AS (
    SELECT 
        ci.movie_id,
        a.name AS actor_name,
        STRING_AGG(DISTINCT rt.role, ', ') AS roles,
        COUNT(DISTINCT ci.person_id) AS num_roles
    FROM 
        cast_info ci
    JOIN 
        aka_name a ON ci.person_id = a.person_id
    JOIN 
        role_type rt ON ci.role_id = rt.id
    GROUP BY 
        ci.movie_id, a.name
),
MovieDetails AS (
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        COALESCE(COUNT(DISTINCT mc.company_id), 0) AS num_companies,
        COALESCE(NULLIF(SUM(CASE WHEN mi.info_type_id = 1 THEN 1 ELSE 0 END), 0), 'N/A') AS avg_rating
    FROM 
        title t
    LEFT JOIN 
        movie_companies mc ON t.id = mc.movie_id
    LEFT JOIN 
        movie_info mi ON t.id = mi.movie_id
    GROUP BY 
        t.id, t.title, t.production_year
),
RankedMovies AS (
    SELECT 
        md.movie_id,
        md.title,
        md.production_year,
        md.num_companies,
        md.avg_rating,
        RANK() OVER (PARTITION BY md.production_year ORDER BY md.num_companies DESC, md.avg_rating) AS rank_within_year
    FROM 
        MovieDetails md
)
SELECT 
    rm.movie_id,
    rm.title,
    rm.production_year,
    rm.num_companies,
    rm.avg_rating,
    COUNT(mr.actor_name) AS num_actors,
    AVG(mr.num_roles) AS avg_roles_per_actor
FROM 
    RankedMovies rm
LEFT JOIN 
    MovieRoles mr ON rm.movie_id = mr.movie_id
WHERE 
    rm.avg_rating IS NOT NULL
GROUP BY 
    rm.movie_id, rm.title, rm.production_year, rm.num_companies, rm.avg_rating
HAVING 
    COUNT(mr.actor_name) > 0
ORDER BY 
    rm.production_year DESC, rm.num_companies DESC;
