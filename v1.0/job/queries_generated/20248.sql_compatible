
WITH Movie_Earnings AS (
    SELECT 
        t.id AS movie_id,
        t.title,
        COALESCE(mi.info, 'N/A') AS movie_info,
        COUNT(DISTINCT cc.subject_id) AS cast_count,
        SUM(CASE WHEN cc.status_id IS NULL THEN 0 ELSE 1 END) AS complete_cast_count,
        RANK() OVER (PARTITION BY t.production_year ORDER BY COUNT(DISTINCT cc.subject_id) DESC) AS rank_within_year
    FROM 
        title t
    LEFT JOIN 
        complete_cast cc ON t.id = cc.movie_id
    LEFT JOIN 
        movie_info mi ON t.id = mi.movie_id AND mi.info_type_id = (SELECT id FROM info_type WHERE info = 'box_office')
    GROUP BY 
        t.id, t.title, mi.info
),
Highly_Rated_Movies AS (
    SELECT 
        m.movie_id,
        m.title,
        m.cast_count,
        COALESCE(NULLIF(m.movie_info, 'N/A'), 'No Info') AS movie_info,
        CASE 
            WHEN (m.cast_count > 10 AND m.complete_cast_count > 5) THEN 'High Activity'
            WHEN m.complete_cast_count BETWEEN 1 AND 5 THEN 'Moderate Activity'
            ELSE 'Low Activity'
        END AS activity_level
    FROM 
        Movie_Earnings m
    WHERE 
        m.rank_within_year <= 5
)
SELECT 
    hr.movie_id,
    hr.title,
    hr.cast_count,
    hr.movie_info,
    hr.activity_level,
    COALESCE(SUM(mk.keyword) FILTER (WHERE mk.keyword IS NOT NULL), 'No Keywords') AS keywords
FROM 
    Highly_Rated_Movies hr
LEFT JOIN 
    movie_keyword mk ON hr.movie_id = mk.movie_id
GROUP BY 
    hr.movie_id, hr.title, hr.cast_count, hr.movie_info, hr.activity_level
HAVING 
    COUNT(mk.keyword) >= 3 OR hr.cast_count > 8
ORDER BY 
    hr.activity_level DESC, hr.cast_count DESC;
