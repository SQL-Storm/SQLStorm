
WITH RecursiveTitleCTE AS (
    SELECT 
        t.id AS title_id,
        t.title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.title) AS title_rank
    FROM 
        aka_title t
    WHERE 
        t.production_year IS NOT NULL
), 
MovieCompanyCTE AS (
    SELECT 
        mc.movie_id,
        COUNT(DISTINCT mc.company_id) AS company_count
    FROM 
        movie_companies mc
    GROUP BY 
        mc.movie_id
),
CastInfoRanked AS (
    SELECT 
        ci.movie_id,
        ci.person_id,
        ri.role,
        ROW_NUMBER() OVER (PARTITION BY ci.movie_id ORDER BY ci.nr_order) AS role_rank
    FROM 
        cast_info ci
    JOIN 
        role_type ri ON ci.role_id = ri.id
)
SELECT 
    rt.title,
    rt.production_year,
    mcc.company_count,
    COALESCE((
        SELECT 
            STRING_AGG(aka.name, ', ') 
        FROM 
            aka_name aka
        JOIN 
            cast_info ci ON aka.person_id = ci.person_id
        WHERE 
            ci.movie_id = rt.title_id AND ci.nr_order IS NULL
    ), 'Unknown Cast') AS cast_members,
    COUNT(DISTINCT ck.id) AS keyword_count,
    SUM(CASE 
        WHEN ci.role_id IS NULL THEN 1 
        ELSE 0 
    END) AS unassigned_roles
FROM 
    RecursiveTitleCTE rt
LEFT JOIN 
    MovieCompanyCTE mcc ON rt.title_id = mcc.movie_id
LEFT JOIN 
    movie_keyword mk ON rt.title_id = mk.movie_id
LEFT JOIN 
    keyword ck ON mk.keyword_id = ck.id
LEFT JOIN 
    CastInfoRanked ci ON rt.title_id = ci.movie_id
GROUP BY 
    rt.title, rt.production_year, mcc.company_count
HAVING 
    (COUNT(DISTINCT ci.person_id) >= 2 OR mcc.company_count IS NULL)
    AND rt.production_year BETWEEN 1990 AND 2023
ORDER BY 
    rt.production_year DESC, keyword_count DESC, rt.title;
