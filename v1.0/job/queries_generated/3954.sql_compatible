
WITH MovieDetails AS (
    SELECT 
        t.id AS title_id, 
        t.title, 
        t.production_year, 
        k.keyword AS movie_keyword, 
        ARRAY_AGG(DISTINCT cn.name) AS company_names,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.id) AS year_rank
    FROM 
        aka_title t
    LEFT JOIN 
        movie_keyword mk ON t.id = mk.movie_id
    LEFT JOIN 
        keyword k ON mk.keyword_id = k.id
    LEFT JOIN 
        movie_companies mc ON t.id = mc.movie_id
    LEFT JOIN 
        company_name cn ON mc.company_id = cn.id
    GROUP BY 
        t.id, t.title, t.production_year
),
PersonRoles AS (
    SELECT 
        ci.movie_id,
        COUNT(DISTINCT ci.person_id) AS role_count,
        ARRAY_AGG(DISTINCT aka.name) AS actor_names
    FROM 
        cast_info ci
    JOIN 
        aka_name aka ON ci.person_id = aka.person_id
    GROUP BY 
        ci.movie_id
),
FilteredMovies AS (
    SELECT 
        md.title_id,
        md.title,
        md.production_year,
        md.movie_keyword,
        md.company_names,
        pr.role_count,
        pr.actor_names,
        COALESCE(pr.role_count, 0) AS actor_count
    FROM 
        MovieDetails md
    LEFT JOIN 
        PersonRoles pr ON md.title_id = pr.movie_id
    WHERE 
        md.production_year >= 2000 
        AND md.movie_keyword IS NOT NULL
)
SELECT 
    fm.title, 
    fm.production_year, 
    fm.movie_keyword,
    fm.company_names,
    fm.actor_count,
    CASE 
        WHEN fm.actor_count > 10 THEN 'Ensemble Cast'
        WHEN fm.actor_count BETWEEN 5 AND 10 THEN 'Moderate Cast'
        ELSE 'Small Cast'
    END AS cast_size
FROM 
    FilteredMovies fm
ORDER BY 
    fm.production_year DESC, 
    fm.actor_count DESC;
