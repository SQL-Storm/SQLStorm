
WITH MovieDetails AS (
    SELECT 
        t.id AS movie_id,
        t.title AS movie_title,
        t.production_year,
        COUNT(DISTINCT c.person_id) AS cast_count,
        STRING_AGG(DISTINCT ak.name, ', ') AS aka_names
    FROM 
        aka_title ak
    JOIN 
        title t ON ak.movie_id = t.id
    LEFT JOIN 
        cast_info c ON t.id = c.movie_id
    WHERE 
        t.production_year IS NOT NULL
    GROUP BY 
        t.id, t.title, t.production_year
),
RankedMovies AS (
    SELECT 
        md.movie_id,
        md.movie_title,
        md.production_year,
        md.cast_count,
        RANK() OVER (PARTITION BY md.production_year ORDER BY md.cast_count DESC) AS rank_within_year
    FROM 
        MovieDetails md
)
SELECT 
    rm.movie_title,
    rm.production_year,
    rm.cast_count,
    COALESCE(n.name, 'Unknown') AS name,
    CASE 
        WHEN rm.rank_within_year <= 3 THEN 'Top 3'
        WHEN rm.rank_within_year <= 10 THEN 'Top 10'
        ELSE 'Other'
    END AS rank_category
FROM 
    RankedMovies rm
LEFT JOIN 
    name n ON n.imdb_id = (
        SELECT MIN(ak.name_pcode_nf) 
        FROM aka_name ak
        WHERE ak.id IN (SELECT ci.person_id 
                        FROM cast_info ci 
                        WHERE ci.movie_id = rm.movie_id)
    )
WHERE 
    rm.cast_count > 5
ORDER BY 
    rm.production_year DESC, rm.cast_count DESC;
