
WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        1 AS level
    FROM 
        aka_title mt
    WHERE 
        mt.kind_id = 1 

    UNION ALL

    SELECT 
        ml.linked_movie_id,
        at.title,
        at.production_year,
        mh.level + 1
    FROM 
        movie_link ml
    JOIN 
        aka_title at ON ml.linked_movie_id = at.id
    JOIN 
        MovieHierarchy mh ON ml.movie_id = mh.movie_id
)

SELECT 
    ak.name AS actor_name,
    am.title AS movie_title,
    am.production_year,
    COALESCE(
        SUM(
            CASE 
                WHEN pi.info_type_id = 1 THEN 1
                ELSE 0
            END
        ) OVER (PARTITION BY ak.person_id ORDER BY am.production_year DESC
                ROWS BETWEEN 1 PRECEDING AND CURRENT ROW), 0
    ) AS consecutive_awards,
    COUNT(DISTINCT kc.keyword) AS total_keywords,
    STRING_AGG(DISTINCT cn.name, ', ') AS company_names
FROM 
    aka_name ak 
JOIN 
    cast_info ci ON ak.person_id = ci.person_id
JOIN 
    MovieHierarchy mh ON ci.movie_id = mh.movie_id
JOIN 
    aka_title am ON mh.movie_id = am.id
LEFT JOIN 
    movie_keyword mk ON mk.movie_id = am.id
LEFT JOIN 
    keyword kc ON mk.keyword_id = kc.id
LEFT JOIN 
    movie_companies mc ON mc.movie_id = am.id
LEFT JOIN 
    company_name cn ON mc.company_id = cn.id
LEFT JOIN 
    person_info pi ON ak.person_id = pi.person_id AND pi.info_type_id = 1 
WHERE 
    am.production_year BETWEEN 2000 AND 2023 
    AND (ak.name ILIKE '%Smith%' OR ak.name ILIKE '%Johnson%')
GROUP BY 
    ak.name, am.title, am.production_year, ak.person_id
ORDER BY 
    am.production_year DESC, ak.name;
