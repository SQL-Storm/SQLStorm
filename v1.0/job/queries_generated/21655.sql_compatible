
WITH RankedMovies AS (
    SELECT 
        t.title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.production_year DESC, t.id) AS rn,
        COUNT(*) OVER (PARTITION BY t.production_year) AS total_movies
    FROM 
        aka_title t 
    WHERE 
        t.kind_id IN (SELECT id FROM kind_type WHERE kind LIKE 'feature%')
    AND 
        t.production_year IS NOT NULL
), 
MovieKeywords AS (
    SELECT 
        mk.movie_id,
        STRING_AGG(k.keyword, ', ') AS keywords
    FROM 
        movie_keyword mk 
    JOIN 
        keyword k ON mk.keyword_id = k.id 
    GROUP BY 
        mk.movie_id
), 
CastDetails AS (
    SELECT 
        c.movie_id,
        STRING_AGG(CONCAT(a.name, ' as ', r.role), ', ') AS cast_members
    FROM 
        cast_info c 
    JOIN 
        aka_name a ON c.person_id = a.person_id
    JOIN 
        role_type r ON c.role_id = r.id
    GROUP BY 
        c.movie_id
)
SELECT 
    rm.title,
    rm.production_year,
    rm.total_movies,
    COALESCE(mk.keywords, 'No keywords') AS keywords,
    COALESCE(cd.cast_members, 'No cast info') AS cast_information,
    (CASE 
        WHEN rm.total_movies > 5 THEN 'Popular Year'
        WHEN rm.total_movies = 1 THEN 'Lonely Year'
        ELSE 'Medium Year'
    END) AS year_category
FROM 
    RankedMovies rm
LEFT JOIN 
    MovieKeywords mk ON rm.id = mk.movie_id
LEFT JOIN 
    CastDetails cd ON rm.id = cd.movie_id
WHERE 
    rm.rn <= 5
ORDER BY 
    rm.production_year DESC, 
    rm.total_movies DESC;
