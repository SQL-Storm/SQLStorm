
WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        m.id AS movie_id,
        m.title,
        m.production_year,
        0 AS hierarchy_level
    FROM 
        aka_title m
    WHERE 
        m.production_year IS NOT NULL

    UNION ALL

    SELECT 
        m.id,
        m.title,
        m.production_year,
        mh.hierarchy_level + 1
    FROM 
        movie_link ml
    JOIN 
        aka_title m ON ml.linked_movie_id = m.id
    JOIN 
        MovieHierarchy mh ON ml.movie_id = mh.movie_id
),
RankedMovies AS (
    SELECT 
        mh.*,
        ROW_NUMBER() OVER (PARTITION BY mh.production_year ORDER BY mh.hierarchy_level) AS film_rank,
        COUNT(*) OVER (PARTITION BY mh.production_year) AS total_movies
    FROM 
        MovieHierarchy mh
)
SELECT 
    m.movie_id,
    m.title,
    m.production_year,
    m.film_rank,
    m.total_movies,
    COALESCE(c.name, 'Unknown Company') AS production_company,
    COUNT(DISTINCT ci.id) AS cast_count,
    STRING_AGG(DISTINCT ak.name, ', ') AS aka_names
FROM 
    RankedMovies m
LEFT JOIN 
    movie_companies mc ON mc.movie_id = m.movie_id
LEFT JOIN 
    company_name c ON c.id = mc.company_id
LEFT JOIN 
    cast_info ci ON ci.movie_id = m.movie_id
LEFT JOIN 
    aka_name ak ON ak.person_id = ci.person_id
WHERE 
    (m.production_year >= 2000 OR m.hierarchy_level < 2) 
AND 
    c.country_code IS NOT NULL
GROUP BY 
    m.movie_id, m.title, m.production_year, m.film_rank, m.total_movies, c.name
ORDER BY 
    m.production_year DESC, m.movie_id;
