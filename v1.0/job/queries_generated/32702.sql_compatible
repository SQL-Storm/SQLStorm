
WITH RECURSIVE movie_hierarchy AS (
    SELECT
        m.id AS movie_id,
        m.title,
        m.production_year,
        0 AS level,
        ARRAY[m.title] AS hierarchy
    FROM
        aka_title m
    WHERE
        m.episode_of_id IS NULL
    
    UNION ALL
    
    SELECT
        m.id AS movie_id,
        m.title,
        m.production_year,
        mh.level + 1,
        mh.hierarchy || m.title
    FROM
        aka_title m
    JOIN
        movie_link ml ON ml.movie_id = mh.movie_id
    JOIN
        aka_title m2 ON m2.id = ml.linked_movie_id
    JOIN
        movie_hierarchy mh ON mh.movie_id = m2.id
)
SELECT
    m.title AS movie_title,
    m.production_year,
    ARRAY_AGG(DISTINCT ak.name) AS aka_names,
    COUNT(DISTINCT ci.person_id) AS cast_count,
    SUM(mk.count) AS keyword_count,
    STRING_AGG(DISTINCT co.name, ', ') AS company_names,
    MAX(mh.level) AS max_hierarchy_level
FROM
    movie_hierarchy mh
JOIN
    aka_title m ON m.id = mh.movie_id
LEFT JOIN
    cast_info ci ON ci.movie_id = m.movie_id
LEFT JOIN
    aka_name ak ON ak.person_id = ci.person_id
LEFT JOIN
    movie_keyword mk ON mk.movie_id = m.id
LEFT JOIN
    company_name co ON co.id IN (
        SELECT
            mc.company_id
        FROM
            movie_companies mc
        WHERE
            mc.movie_id = m.id
    )
WHERE
    m.production_year BETWEEN 2000 AND 2023 AND
    m.kind_id IN (
        SELECT
            k.id
        FROM
            kind_type k
        WHERE
            k.kind IN ('feature', 'documentary')
    )
GROUP BY
    m.title, m.production_year
ORDER BY
    m.production_year DESC, m.title
LIMIT 100;
