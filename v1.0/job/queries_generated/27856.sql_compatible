
WITH MovieDetails AS (
    SELECT 
        m.id AS movie_id,
        m.title AS movie_title,
        m.production_year,
        c.name AS company_name,
        ARRAY_AGG(DISTINCT k.keyword) AS keywords,
        ARRAY_AGG(DISTINCT a.name) AS actors
    FROM 
        aka_title m
    JOIN 
        movie_companies mc ON m.id = mc.movie_id
    JOIN 
        company_name c ON mc.company_id = c.id
    LEFT JOIN 
        movie_keyword mk ON m.id = mk.movie_id
    LEFT JOIN 
        keyword k ON mk.keyword_id = k.id
    LEFT JOIN 
        cast_info ci ON m.id = ci.movie_id
    LEFT JOIN 
        aka_name a ON ci.person_id = a.person_id
    GROUP BY 
        m.id, m.title, m.production_year, c.name
),
HighRatedMovies AS (
    SELECT 
        md.movie_id,
        md.movie_title,
        md.production_year,
        md.company_name,
        md.keywords,
        md.actors,
        COUNT(DISTINCT cc.person_id) AS total_actors
    FROM 
        MovieDetails md
    JOIN 
        complete_cast cc ON md.movie_id = cc.movie_id
    JOIN 
        role_type rt ON cc.subject_id = rt.id
    WHERE 
        rt.role = 'Actor'
    GROUP BY 
        md.movie_id, md.movie_title, md.production_year, md.company_name, md.keywords, md.actors
    HAVING 
        COUNT(DISTINCT cc.person_id) > 5
),
RankedMovies AS (
    SELECT 
        md.*,
        RANK() OVER (ORDER BY md.production_year DESC, md.total_actors DESC) AS rank
    FROM 
        HighRatedMovies md
)

SELECT 
    rank,
    movie_title,
    production_year,
    company_name,
    keywords,
    actors
FROM 
    RankedMovies
WHERE 
    rank <= 10
ORDER BY 
    rank;
