
WITH RecursiveTitle AS (
    SELECT 
        t.id AS title_id,
        t.title,
        t.production_year,
        t.kind_id,
        ROW_NUMBER() OVER (PARTITION BY t.kind_id ORDER BY t.production_year DESC) AS rn
    FROM 
        aka_title t 
    WHERE 
        t.production_year IS NOT NULL
),
CastDetails AS (
    SELECT 
        ci.movie_id,
        ci.person_id,
        STRING_AGG(DISTINCT CONCAT(cn.name, ' (', rt.role, ')') ORDER BY cn.name) AS cast_list,
        COUNT(*) AS total_cast
    FROM 
        cast_info ci
    JOIN 
        char_name cn ON ci.person_id = cn.id
    JOIN 
        role_type rt ON ci.role_id = rt.id
    GROUP BY 
        ci.movie_id
),
MovieInfo AS (
    SELECT 
        mi.movie_id,
        STRING_AGG(mi.info ORDER BY it.id) FILTER (WHERE mi.info IS NOT NULL) AS info_list,
        COUNT(DISTINCT mi.info_type_id) AS info_type_count
    FROM 
        movie_info mi
    JOIN 
        info_type it ON mi.info_type_id = it.id
    GROUP BY 
        mi.movie_id
)
SELECT 
    t.title AS movie_title,
    t.production_year,
    cd.cast_list,
    mi.info_list,
    CASE 
        WHEN cd.total_cast > 10 THEN 'Large Cast'
        WHEN cd.total_cast BETWEEN 5 AND 10 THEN 'Medium Cast'
        ELSE 'Small Cast'
    END AS cast_size,
    COUNT(DISTINCT mk.keyword) AS keyword_count,
    SUM(CASE WHEN mc.note IS NULL THEN 1 ELSE 0 END) AS companies_with_no_notes
FROM 
    RecursiveTitle t
LEFT JOIN 
    CastDetails cd ON t.title_id = cd.movie_id
LEFT JOIN 
    movie_keyword mk ON t.title_id = mk.movie_id
LEFT JOIN 
    movie_companies mc ON t.title_id = mc.movie_id
LEFT JOIN 
    MovieInfo mi ON t.title_id = mi.movie_id
WHERE 
    (t.production_year > 2000 OR t.production_year IS NULL) 
    AND (t.kind_id IN (SELECT id FROM kind_type WHERE kind LIKE '%Drama%')
         OR t.production_year IS NULL)
    AND (mi.info_type_id = (SELECT id FROM info_type WHERE info = 'Box Office') OR mi.info IS NULL)
GROUP BY 
    t.title, 
    t.production_year, 
    cd.cast_list, 
    mi.info_list, 
    cd.total_cast
HAVING 
    COUNT(mk.keyword) > 0
ORDER BY 
    t.production_year DESC, 
    movie_title;
