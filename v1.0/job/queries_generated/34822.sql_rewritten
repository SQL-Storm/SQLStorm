WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        ARRAY[mt.title] AS title_path,
        1 AS depth
    FROM 
        aka_title mt
    WHERE 
        mt.episode_of_id IS NULL 
    
    UNION ALL
    
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mh.title_path || mt.title,
        mh.depth + 1
    FROM 
        aka_title mt
    JOIN 
        movie_hierarchy mh ON mt.episode_of_id = mh.movie_id
),

cast_aggregates AS (
    SELECT 
        ci.movie_id,
        COUNT(DISTINCT ci.person_id) AS total_actors,
        STRING_AGG(DISTINCT ak.name, ', ') AS actor_names
    FROM 
        cast_info ci
    JOIN 
        aka_name ak ON ci.person_id = ak.person_id
    GROUP BY 
        ci.movie_id
),

keyword_aggregates AS (
    SELECT 
        mk.movie_id,
        COUNT(DISTINCT k.keyword) AS keyword_count,
        STRING_AGG(DISTINCT k.keyword, ', ') AS keywords
    FROM 
        movie_keyword mk
    JOIN 
        keyword k ON mk.keyword_id = k.id
    GROUP BY 
        mk.movie_id
),

movie_details AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        mh.depth AS hierarchy_level,
        ca.total_actors,
        ka.keyword_count,
        ka.keywords
    FROM 
        movie_hierarchy mh
    JOIN 
        aka_title mt ON mh.movie_id = mt.id
    LEFT JOIN 
        cast_aggregates ca ON mt.id = ca.movie_id
    LEFT JOIN 
        keyword_aggregates ka ON mt.id = ka.movie_id
)

SELECT 
    md.movie_id,
    md.title,
    md.production_year,
    md.hierarchy_level,
    COALESCE(md.total_actors, 0) AS total_actors,
    COALESCE(md.keyword_count, 0) AS keyword_count,
    md.keywords
FROM 
    movie_details md
WHERE 
    md.production_year >= 2000 
    AND (md.hierarchy_level < 3 OR md.total_actors > 5)
ORDER BY 
    md.production_year DESC, md.hierarchy_level, md.total_actors DESC;