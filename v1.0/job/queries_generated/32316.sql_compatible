
WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        1 AS level
    FROM 
        aka_title mt
    WHERE 
        mt.production_year IS NOT NULL

    UNION ALL

    SELECT 
        jl.linked_movie_id AS movie_id,
        m.title,
        m.production_year,
        mh.level + 1
    FROM 
        movie_link jl
    JOIN aka_title m ON jl.movie_id = m.id
    JOIN MovieHierarchy mh ON jl.linked_movie_id = mh.movie_id
),

ActorPerformance AS (
    SELECT 
        a.id AS actor_id,
        an.name,
        COUNT(DISTINCT ci.movie_id) AS total_movies,
        SUM(CASE WHEN a.gender = 'M' THEN 1 ELSE 0 END) AS male_count,
        SUM(CASE WHEN a.gender = 'F' THEN 1 ELSE 0 END) AS female_count
    FROM 
        cast_info ci
    JOIN aka_name an ON ci.person_id = an.person_id
    JOIN name a ON an.name = a.name
    GROUP BY 
        a.id, an.name
),

TopMovies AS (
    SELECT 
        mh.movie_id,
        mh.title,
        mh.production_year,
        ROW_NUMBER() OVER (PARTITION BY mh.production_year ORDER BY COUNT(DISTINCT ci.person_id) DESC) AS movie_rank
    FROM 
        MovieHierarchy mh
    LEFT JOIN cast_info ci ON mh.movie_id = ci.movie_id
    GROUP BY 
        mh.movie_id, mh.title, mh.production_year
)

SELECT 
    tm.title AS movie_title,
    tm.production_year,
    ap.name AS actor_name,
    ap.total_movies,
    ap.male_count,
    ap.female_count
FROM 
    TopMovies tm
JOIN ActorPerformance ap ON tm.movie_id = ap.actor_id
WHERE 
    tm.movie_rank <= 5
ORDER BY 
    tm.production_year DESC, 
    tm.title;
