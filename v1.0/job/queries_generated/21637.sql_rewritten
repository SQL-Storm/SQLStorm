WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        0 AS depth,
        ARRAY[mt.title] AS path
    FROM 
        aka_title mt
    WHERE 
        mt.production_year IS NOT NULL
    
    UNION ALL
    
    SELECT 
        ml.linked_movie_id,
        at.title,
        at.production_year,
        mh.depth + 1,
        path || at.title
    FROM 
        movie_link ml
    JOIN 
        aka_title at ON ml.linked_movie_id = at.id
    JOIN 
        movie_hierarchy mh ON ml.movie_id = mh.movie_id
    WHERE 
        at.production_year IS NOT NULL
        AND mh.depth < 3  
)
SELECT 
    mh.movie_id,
    mh.title,
    mh.production_year,
    mh.depth,
    mh.path,
    COUNT(DISTINCT ci.person_id) AS cast_count,
    SUM(CASE WHEN ci.role_id IS NOT NULL THEN 1 ELSE 0 END) AS acting_roles,
    STRING_AGG(DISTINCT co.name, ', ' ORDER BY co.name) AS production_companies,
    COUNT(DISTINCT CASE 
        WHEN mi.info_type_id = (SELECT id FROM info_type WHERE info = 'genre') 
        THEN mi.info
        END) AS genre_count,
    MAX(CASE WHEN mk.keyword IS DISTINCT FROM NULL THEN mk.keyword END) AS primary_keyword
FROM 
    movie_hierarchy mh
LEFT JOIN 
    complete_cast cc ON mh.movie_id = cc.movie_id
LEFT JOIN 
    cast_info ci ON cc.subject_id = ci.person_id
LEFT JOIN 
    movie_companies mc ON mc.movie_id = mh.movie_id
LEFT JOIN 
    company_name co ON mc.company_id = co.id
LEFT JOIN 
    movie_info mi ON mi.movie_id = mh.movie_id
LEFT JOIN 
    movie_keyword mk ON mk.movie_id = mh.movie_id
WHERE 
    mh.production_year BETWEEN 1990 AND 2023
GROUP BY 
    mh.movie_id, mh.title, mh.production_year, mh.depth, mh.path
HAVING 
    COUNT(DISTINCT ci.person_id) > 5 
    AND MAX(mh.depth) <= 2  
ORDER BY 
    mh.production_year DESC,
    cast_count DESC;