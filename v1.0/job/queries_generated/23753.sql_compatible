
WITH RankedMovies AS (
    SELECT 
        t.id AS title_id,
        t.title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.title) AS rn,
        COUNT(*) OVER (PARTITION BY t.production_year) AS total_titles
    FROM 
        title t
    WHERE 
        t.production_year IS NOT NULL
),
ActorMovies AS (
    SELECT 
        ci.id AS cast_info_id,
        a.name AS actor_name,
        r.role AS role_name,
        m.title AS movie_title,
        m.production_year,
        ROW_NUMBER() OVER (PARTITION BY m.id ORDER BY a.name) AS role_order
    FROM 
        cast_info ci
    JOIN 
        aka_name a ON ci.person_id = a.person_id
    JOIN 
        title m ON ci.movie_id = m.id
    JOIN 
        role_type r ON ci.role_id = r.id
    WHERE 
        a.name IS NOT NULL
),
Companies AS (
    SELECT 
        mc.movie_id,
        c.name AS company_name,
        ct.kind AS company_type,
        COALESCE(NULLIF(c.country_code, ''), 'Unknown') AS country_code_status
    FROM 
        movie_companies mc
    JOIN 
        company_name c ON mc.company_id = c.id
    JOIN 
        company_type ct ON mc.company_type_id = ct.id
),
MovieKeywords AS (
    SELECT 
        mk.movie_id,
        STRING_AGG(DISTINCT k.keyword, ', ') AS keywords
    FROM 
        movie_keyword mk
    JOIN 
        keyword k ON mk.keyword_id = k.id
    GROUP BY 
        mk.movie_id
)
SELECT 
    rm.title,
    rm.production_year,
    am.actor_name,
    am.role_name,
    c.company_name,
    c.company_type,
    c.country_code_status,
    mk.keywords,
    CASE 
        WHEN rm.total_titles > 1 THEN 'This year has multiple titles.'
        ELSE 'This year has a single title.'
    END AS title_count_comment,
    (SELECT COUNT(*) FROM ActorMovies am2 WHERE am2.movie_title = rm.title) AS actor_count,
    COALESCE(NULLIF(mk.keywords, ''), 'No Keywords Available') AS available_keywords,
    COUNT(DISTINCT am.role_name) OVER (PARTITION BY rm.title) AS unique_roles
FROM 
    RankedMovies rm
LEFT JOIN 
    ActorMovies am ON rm.title = am.movie_title AND rm.production_year = am.production_year
LEFT JOIN 
    Companies c ON rm.title_id = c.movie_id
LEFT JOIN 
    MovieKeywords mk ON rm.title_id = mk.movie_id
WHERE 
    rm.rn = 1 OR am.role_order IS NOT NULL
GROUP BY 
    rm.title, rm.production_year, am.actor_name, am.role_name, c.company_name, c.company_type, c.country_code_status, mk.keywords, rm.total_titles
ORDER BY 
    rm.production_year DESC, rm.title;
