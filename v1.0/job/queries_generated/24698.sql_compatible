
WITH RecursiveMovies AS (
    SELECT 
        t.id AS movie_id,
        t.title AS title,
        t.production_year,
        t.kind_id,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.id ASC) AS rn
    FROM 
        aka_title t
    WHERE 
        t.title IS NOT NULL
),

MovieCast AS (
    SELECT 
        c.movie_id,
        COUNT(c.person_id) AS total_cast,
        STRING_AGG(DISTINCT ak.name, ', ') AS cast_names
    FROM 
        cast_info c
    JOIN 
        aka_name ak ON c.person_id = ak.person_id
    GROUP BY 
        c.movie_id
),

HighlightedMovies AS (
    SELECT 
        m.movie_id,
        m.title,
        m.production_year,
        mc.total_cast,
        mc.cast_names,
        COALESCE(mk.keyword, 'N/A') AS keyword,
        (SELECT MAX(ci.nr_order) FROM cast_info ci WHERE ci.movie_id = m.movie_id) AS highest_order
    FROM 
        RecursiveMovies m
    LEFT JOIN 
        MovieCast mc ON m.movie_id = mc.movie_id
    LEFT JOIN 
        movie_keyword mk ON m.movie_id = mk.movie_id
    WHERE 
        m.production_year IS NOT NULL 
        AND m.production_year > 2000
        AND (m.kind_id IN (SELECT id FROM kind_type WHERE kind NOT LIKE '%documentary%'))
),

FinalSelection AS (
    SELECT
        hm.movie_id,
        hm.title,
        hm.production_year,
        hm.total_cast,
        hm.cast_names,
        hm.keyword,
        hm.highest_order,
        CASE 
            WHEN (hm.total_cast IS NULL OR hm.total_cast < 1) THEN 'No Cast Info'
            WHEN hm.total_cast > 10 THEN 'Large Cast'
            ELSE 'Standard Cast'
        END AS cast_category,
        ROW_NUMBER() OVER (PARTITION BY hm.production_year ORDER BY hm.total_cast DESC) AS year_rank
    FROM 
        HighlightedMovies hm
)

SELECT 
    fs.title,
    fs.production_year,
    fs.total_cast,
    fs.cast_names,
    fs.keyword,
    fs.highest_order,
    fs.cast_category,
    fs.year_rank
FROM 
    FinalSelection fs
WHERE 
    fs.year_rank <= 5
ORDER BY 
    fs.production_year DESC, fs.total_cast DESC;
