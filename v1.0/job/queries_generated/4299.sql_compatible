
WITH RankedMovies AS (
    SELECT 
        t.title AS movie_title,
        t.production_year,
        COUNT(DISTINCT c.person_id) AS actor_count,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY COUNT(DISTINCT c.person_id) DESC) AS rank_by_actors
    FROM 
        aka_title t
    LEFT JOIN 
        cast_info c ON t.id = c.movie_id
    WHERE 
        t.production_year IS NOT NULL
    GROUP BY 
        t.id, t.title, t.production_year
), MovieKeywords AS (
    SELECT 
        m.movie_id,
        STRING_AGG(k.keyword, ', ') AS keywords
    FROM 
        movie_keyword m
    JOIN 
        keyword k ON m.keyword_id = k.id
    GROUP BY 
        m.movie_id
), MovieDetails AS (
    SELECT 
        r.movie_title,
        r.production_year,
        r.actor_count,
        mk.keywords,
        ROW_NUMBER() OVER (ORDER BY r.production_year DESC, r.actor_count DESC) AS overall_rank
    FROM 
        RankedMovies r
    LEFT JOIN 
        MovieKeywords mk ON r.movie_id = mk.movie_id
)
SELECT 
    md.movie_title,
    md.production_year,
    md.actor_count,
    md.keywords,
    CASE 
        WHEN md.actor_count IS NULL THEN 'No actors found'
        ELSE 'Loaded'
    END AS status
FROM 
    MovieDetails md
WHERE 
    md.overall_rank <= 10
UNION
SELECT 
    'N/A' AS movie_title,
    NULL AS production_year,
    COUNT(*) AS actor_count,
    'No keywords' AS keywords,
    'Special Case' AS status
FROM 
    cast_info
WHERE 
    movie_id IS NULL
GROUP BY 
    1
ORDER BY 
    production_year DESC, actor_count DESC;
