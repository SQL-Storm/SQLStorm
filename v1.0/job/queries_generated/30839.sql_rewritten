WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        1 AS level
    FROM 
        aka_title mt
    WHERE 
        mt.season_nr IS NULL  
    
    UNION ALL

    SELECT 
        et.id AS movie_id,
        et.title,
        et.production_year,
        mh.level + 1
    FROM 
        aka_title et
    JOIN 
        aka_title ep ON et.episode_of_id = ep.id
    JOIN 
        MovieHierarchy mh ON ep.id = mh.movie_id
),
ActorRoles AS (
    SELECT 
        ci.movie_id,
        a.name AS actor_name,
        COUNT(DISTINCT ci.person_id) OVER (PARTITION BY ci.movie_id) AS number_of_actors,
        STRING_AGG(DISTINCT rt.role, ', ') AS roles
    FROM 
        cast_info ci
    JOIN 
        aka_name a ON ci.person_id = a.person_id
    LEFT JOIN 
        role_type rt ON ci.role_id = rt.id
    GROUP BY 
        ci.movie_id, a.name
)

SELECT 
    mh.movie_id,
    mh.title,
    mh.production_year,
    ar.actor_name,
    ar.number_of_actors,
    ar.roles,
    COALESCE(MI.info, 'No additional info') AS additional_info
FROM 
    MovieHierarchy mh
LEFT JOIN 
    ActorRoles ar ON mh.movie_id = ar.movie_id
LEFT JOIN 
    movie_info MI ON mh.movie_id = MI.movie_id AND MI.info_type_id = (SELECT id FROM info_type WHERE info = 'Synopsis')
WHERE 
    mh.production_year >= 2000
ORDER BY 
    mh.production_year DESC, mh.title, ar.actor_name;