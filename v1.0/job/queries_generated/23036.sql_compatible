
WITH RankedMovies AS (
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.title) AS title_rank
    FROM 
        aka_title t
    WHERE 
        t.production_year IS NOT NULL
),
TopRankedActors AS (
    SELECT 
        a.id AS actor_id,
        a.name,
        COUNT(c.movie_id) AS movie_count
    FROM 
        aka_name a
    JOIN 
        cast_info c ON a.person_id = c.person_id
    GROUP BY 
        a.id, a.name
    HAVING 
        COUNT(c.movie_id) >= 5
),
MoviesWithNulls AS (
    SELECT 
        r.movie_id,
        r.title,
        COALESCE(m.info, 'No Info') AS info_text,
        m.note
    FROM 
        RankedMovies r
    LEFT JOIN 
        movie_info m ON r.movie_id = m.movie_id AND m.info_type_id = (SELECT id FROM info_type WHERE info = 'Summary')
    WHERE 
        r.title_rank < 5
)
SELECT 
    m.movie_id,
    m.title,
    m.production_year,
    a.name AS actor_name,
    a.movie_count,
    ML.linked_movie_id,
    COALESCE(ML.linked_title, 'Not Linked') AS linked_title
FROM 
    MoviesWithNulls m
LEFT JOIN 
    TopRankedActors a ON a.movie_count >= 5
LEFT JOIN 
    movie_link ML ON m.movie_id = ML.movie_id
LEFT JOIN 
    aka_title lt ON ML.linked_movie_id = lt.id
WHERE 
    (m.production_year BETWEEN 2000 AND 2023) 
    AND (m.note IS NULL OR m.note LIKE '%Academy%')
GROUP BY 
    m.movie_id, m.title, m.production_year, a.name, a.movie_count, ML.linked_movie_id, ML.linked_title
ORDER BY 
    m.production_year DESC, m.title;
