
WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        1 AS level,
        mt.episode_of_id
    FROM 
        aka_title mt
    WHERE 
        mt.production_year IS NOT NULL

    UNION ALL

    SELECT 
        m.id AS movie_id,
        m.title,
        m.production_year,
        mh.level + 1,
        m.episode_of_id
    FROM 
        aka_title m
    JOIN 
        MovieHierarchy mh ON m.episode_of_id = mh.movie_id
)

SELECT 
    mh.title AS episode_title,
    mh.production_year,
    COALESCE(a.name, 'Unnamed Actor') AS actor_name,
    ct.kind AS cast_type,
    COUNT(DISTINCT mc.company_id) AS company_count,
    SUM(CASE WHEN mk.keyword IS NOT NULL THEN 1 ELSE 0 END) AS keyword_count,
    AVG(m_info.length) AS avg_movie_length
FROM 
    MovieHierarchy mh
LEFT JOIN 
    cast_info ci ON mh.movie_id = ci.movie_id
LEFT JOIN 
    aka_name a ON ci.person_id = a.person_id
LEFT JOIN 
    role_type rt ON ci.role_id = rt.id
LEFT JOIN 
    movie_companies mc ON mh.movie_id = mc.movie_id
LEFT JOIN 
    info_type it ON it.id = (SELECT MIN(info_type_id) FROM movie_info WHERE movie_id = mh.movie_id)
LEFT JOIN 
    movie_keyword mk ON mh.movie_id = mk.movie_id 
LEFT JOIN 
    company_type ct ON mc.company_type_id = ct.id
LEFT JOIN (
    SELECT 
        movie_id,
        LENGTH(info) AS length
    FROM 
        movie_info 
    WHERE 
        info_type_id = (SELECT id FROM info_type WHERE info = 'Length')
) AS m_info ON mh.movie_id = m_info.movie_id
GROUP BY 
    mh.title, mh.production_year, a.name, ct.kind
HAVING 
    COUNT(DISTINCT mc.company_id) > 1
ORDER BY 
    mh.production_year DESC, actor_name;
