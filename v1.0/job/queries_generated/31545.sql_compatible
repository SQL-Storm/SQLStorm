
WITH RECURSIVE genre_hierarchy AS (
    SELECT 
        id AS genre_id,
        name,
        CAST(NULL AS integer) AS parent_id
    FROM
        kind_type
    WHERE
        id = 1   

    UNION ALL

    SELECT 
        kt.id,
        kt.kind,
        gh.genre_id
    FROM 
        kind_type kt
    INNER JOIN 
        genre_hierarchy gh ON kt.id = gh.genre_id + 1  
),
paused_movies AS (
    SELECT 
        mt.movie_id, 
        COUNT(ci.id) AS actor_count,
        AVG(CASE WHEN ci.note IS NOT NULL THEN 1 ELSE 0 END) AS has_special_note_ratio
    FROM 
        cast_info ci
    INNER JOIN 
        aka_title mt ON ci.movie_id = mt.movie_id
    WHERE 
        mt.production_year < 2000  
    GROUP BY 
        mt.movie_id
    HAVING 
        COUNT(ci.id) > 5  
),
filtered_movies AS (
    SELECT 
        at.title, 
        at.production_year, 
        pm.actor_count, 
        pm.has_special_note_ratio
    FROM 
        aka_title at
    LEFT JOIN 
        paused_movies pm ON at.id = pm.movie_id
    WHERE 
        pm.has_special_note_ratio > 0.2  
)
SELECT 
    fm.title,
    fm.production_year,
    COALESCE(fm.actor_count, 0) AS actor_count,
    COALESCE(fm.has_special_note_ratio, 0) AS has_special_note_ratio,
    ROW_NUMBER() OVER (PARTITION BY fm.production_year ORDER BY fm.actor_count DESC) AS rank
FROM 
    filtered_movies fm
JOIN 
    aka_name an ON fm.movie_id = an.person_id  
WHERE 
    an.name ILIKE '%Smith%'  
ORDER BY 
    fm.production_year DESC, actor_count DESC;
