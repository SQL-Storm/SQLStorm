
WITH RankedMovies AS (
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        k.keyword,
        ROW_NUMBER() OVER (PARTITION BY t.id ORDER BY k.id) AS keyword_rank
    FROM 
        title t
    JOIN 
        movie_keyword mk ON t.id = mk.movie_id
    JOIN 
        keyword k ON mk.keyword_id = k.id
    WHERE 
        t.production_year >= 2000
),
ActorRoles AS (
    SELECT 
        ci.movie_id,
        a.name AS actor_name,
        r.role AS role_name,
        COUNT(*) AS role_count
    FROM 
        cast_info ci
    JOIN 
        aka_name a ON ci.person_id = a.person_id
    JOIN 
        role_type r ON ci.role_id = r.id
    GROUP BY 
        ci.movie_id, a.name, r.role
),
ConsolidatedData AS (
    SELECT 
        rm.movie_id,
        rm.title,
        rm.production_year,
        ARRAY_AGG(DISTINCT rm.keyword) AS keywords,
        ARRAY_AGG(DISTINCT ar.actor_name || ' as ' || ar.role_name || ' (' || ar.role_count || ')') AS actors
    FROM 
        RankedMovies rm
    LEFT JOIN 
        ActorRoles ar ON rm.movie_id = ar.movie_id
    GROUP BY 
        rm.movie_id, rm.title, rm.production_year
)

SELECT 
    cd.title,
    cd.production_year,
    STRING_AGG(DISTINCT UNNEST(cd.keywords), ', ') AS keywords,
    STRING_AGG(DISTINCT UNNEST(cd.actors), '; ') AS cast_details
FROM 
    ConsolidatedData cd
WHERE 
    cd.production_year IN (SELECT DISTINCT production_year FROM title WHERE production_year >= 2000)
GROUP BY 
    cd.title, cd.production_year
ORDER BY 
    cd.production_year DESC, cd.title;
