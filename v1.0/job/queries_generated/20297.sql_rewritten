WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        mt.kind_id,
        CAST(NULL AS TEXT) AS parent_title,
        CAST(NULL AS INTEGER) AS parent_id,
        0 AS depth
    FROM 
        aka_title mt
    WHERE 
        mt.episode_of_id IS NULL
        
    UNION ALL

    SELECT 
        e.id AS movie_id,
        e.title,
        e.production_year,
        e.kind_id,
        p.title AS parent_title,
        p.id AS parent_id,
        depth + 1
    FROM 
        aka_title e
    JOIN 
        MovieHierarchy p ON e.episode_of_id = p.movie_id
)

SELECT 
    mh.movie_id,
    mh.title,
    mh.production_year,
    mh.depth,
    CAST(COALESCE(NULLIF(mh.title, ''), 'N/A') AS TEXT) AS safe_title,
    COUNT(DISTINCT ci.person_id) OVER (PARTITION BY mh.movie_id) AS num_actors,
    STRING_AGG(DISTINCT ak.name, ', ') AS actor_names
FROM 
    MovieHierarchy mh
LEFT JOIN 
    cast_info ci ON mh.movie_id = ci.movie_id
LEFT JOIN 
    aka_name ak ON ci.person_id = ak.person_id
LEFT JOIN 
    movie_info mi ON mh.movie_id = mi.movie_id AND mi.info_type_id = (SELECT id FROM info_type WHERE info = 'genre')
WHERE 
    mh.production_year >= 2000 
    AND (mh.kind_id IN (SELECT id FROM kind_type WHERE kind NOT LIKE '%short%'))
GROUP BY 
    mh.movie_id, mh.title, mh.production_year, mh.depth
ORDER BY 
    mh.production_year DESC, mh.depth ASC
OFFSET 0 ROWS FETCH NEXT 50 ROWS ONLY;