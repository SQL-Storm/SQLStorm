
WITH RankedMovies AS (
    SELECT 
        t.title, 
        t.production_year,
        COUNT(DISTINCT c.person_id) AS actor_count,
        AVG(CASE WHEN ct.kind = 'Lead' THEN 1.0 ELSE 0.0 END) OVER (PARTITION BY t.id) AS lead_actor_ratio,
        ROW_NUMBER() OVER (ORDER BY t.production_year DESC) AS rank
    FROM 
        aka_title t
    LEFT JOIN 
        cast_info c ON t.id = c.movie_id
    LEFT JOIN 
        role_type rt ON c.role_id = rt.id
    LEFT JOIN 
        comp_cast_type ct ON c.person_role_id = ct.id
    WHERE 
        t.production_year > 2000
    GROUP BY 
        t.id, t.title, t.production_year
    HAVING 
        COUNT(DISTINCT c.person_id) > 5
),
ActorSummary AS (
    SELECT 
        a.person_id, 
        a.name,
        COUNT(DISTINCT ci.movie_id) AS movies_with_actor_count,
        STRING_AGG(DISTINCT t.title, ', ') AS movie_titles
    FROM 
        aka_name a
    LEFT JOIN 
        cast_info ci ON a.person_id = ci.person_id
    LEFT JOIN 
        aka_title t ON ci.movie_id = t.id
    GROUP BY 
        a.person_id, a.name
),
FilteredActors AS (
    SELECT 
        person_id,
        name,
        movies_with_actor_count,
        movie_titles
    FROM 
        ActorSummary
    WHERE 
        movies_with_actor_count > 3
)
SELECT 
    rm.title, 
    rm.production_year, 
    fa.name AS actor_name, 
    fa.movies_with_actor_count,
    CASE 
        WHEN rm.lead_actor_ratio IS NULL THEN 'No Leads'
        WHEN rm.lead_actor_ratio > 0.5 THEN 'Many Leads'
        ELSE 'Few Leads'
    END AS lead_status
FROM 
    RankedMovies rm
JOIN 
    FilteredActors fa ON fa.person_id IN (
        SELECT DISTINCT c.person_id 
        FROM cast_info c 
        JOIN aka_title at ON c.movie_id = at.id 
        WHERE at.production_year = rm.production_year
    )
WHERE 
    rm.actor_count > 7
ORDER BY 
    rm.production_year DESC, 
    rm.actor_count DESC
OFFSET 5 ROWS FETCH NEXT 10 ROWS ONLY;
