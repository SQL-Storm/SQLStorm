WITH RECURSIVE ActorHierarchy AS (
    SELECT
        c.person_id,
        a.id AS actor_id,
        a.name AS actor_name,
        1 AS level
    FROM cast_info c
    JOIN aka_name a ON c.person_id = a.person_id
    WHERE c.nr_order = 1

    UNION ALL

    SELECT
        c.person_id,
        a.id AS actor_id,
        a.name AS actor_name,
        ah.level + 1
    FROM cast_info c
    JOIN aka_name a ON c.person_id = a.person_id
    JOIN ActorHierarchy ah ON c.movie_id = (SELECT movie_id FROM cast_info ci WHERE ci.person_id = ah.person_id AND ci.nr_order = 1)
    WHERE ah.level < 5  
),
GenreCount AS (
    SELECT
        t.production_year,
        k.keyword,
        COUNT(DISTINCT m.movie_id) AS movie_count
    FROM title t
    JOIN movie_keyword mk ON t.id = mk.movie_id
    JOIN keyword k ON mk.keyword_id = k.id
    GROUP BY t.production_year, k.keyword
),
ActorsWithRoles AS (
    SELECT
        a.actor_id,
        a.actor_name,
        r.role,
        COUNT(c.movie_id) AS movies_count,
        SUM(CASE WHEN m.production_year = 2022 THEN 1 ELSE 0 END) AS movies_from_2022
    FROM ActorHierarchy a
    JOIN cast_info c ON a.actor_id = c.person_id
    JOIN role_type r ON c.role_id = r.id
    JOIN title m ON c.movie_id = m.id
    GROUP BY a.actor_id, a.actor_name, r.role
    HAVING COUNT(c.movie_id) > 1  
)
SELECT
    ar.actor_name,
    ar.role,
    ar.movies_count,
    ar.movies_from_2022,
    gc.production_year,
    gc.keyword,
    gc.movie_count
FROM ActorsWithRoles ar
FULL OUTER JOIN GenreCount gc ON gc.production_year = 2022
WHERE ar.movies_from_2022 > 0
ORDER BY ar.actor_name, gc.keyword;