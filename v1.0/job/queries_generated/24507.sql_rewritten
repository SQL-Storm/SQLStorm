WITH RECURSIVE ActorHierarchy AS (
    SELECT 
        ci.person_id,
        COUNT(DISTINCT ci.movie_id) AS movies_count,
        STRING_AGG(DISTINCT t.title, ', ') AS titles
    FROM 
        cast_info ci
    JOIN 
        aka_name a ON ci.person_id = a.person_id
    JOIN 
        aka_title t ON ci.movie_id = t.movie_id
    WHERE 
        a.name IS NOT NULL AND t.production_year IS NOT NULL
    GROUP BY 
        ci.person_id
        
    UNION ALL 
    
    SELECT 
        ah.person_id,
        ah.movies_count + 1,
        ah.titles || ', ' || t.title
    FROM 
        ActorHierarchy ah
    JOIN 
        movie_link ml ON ah.person_id = ml.movie_id
    JOIN 
        aka_title t ON ml.linked_movie_id = t.movie_id
    WHERE 
        t.production_year > 2000 AND ah.movies_count < 5
)
SELECT 
    a.id AS actor_id,
    a.name AS actor_name,
    ah.movies_count AS total_movies,
    ah.titles,
    CASE 
        WHEN ah.movies_count IS NULL THEN 'No Movies'
        ELSE 'Active'
    END AS actor_status,
    ROW_NUMBER() OVER (PARTITION BY a.id ORDER BY ah.movies_count DESC) AS ranking
FROM 
    aka_name a
LEFT JOIN 
    ActorHierarchy ah ON a.person_id = ah.person_id
WHERE 
    a.name NOT LIKE '%Doe%' 
    AND (ah.movies_count IS NULL OR ah.movies_count > 3)
ORDER BY 
    ah.movies_count DESC;