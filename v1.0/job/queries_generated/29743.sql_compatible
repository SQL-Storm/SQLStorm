
WITH ranked_movies AS (
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        COUNT(ci.person_id) AS cast_count,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY COUNT(ci.person_id) DESC) AS rank
    FROM 
        title t
    JOIN 
        cast_info ci ON t.id = ci.movie_id
    GROUP BY 
        t.id, t.title, t.production_year
),
top_movies AS (
    SELECT 
        movie_id,
        title,
        production_year
    FROM 
        ranked_movies
    WHERE 
        rank <= 10
),
movie_details AS (
    SELECT 
        tm.title,
        tm.production_year,
        STRING_AGG(DISTINCT ak.name ORDER BY ak.name) AS aka_names,
        STRING_AGG(DISTINCT cn.name ORDER BY cn.name) AS company_names,
        STRING_AGG(DISTINCT kw.keyword ORDER BY kw.keyword) AS keywords
    FROM 
        top_movies tm
    LEFT JOIN 
        movie_companies mc ON tm.movie_id = mc.movie_id
    LEFT JOIN 
        company_name cn ON mc.company_id = cn.id
    LEFT JOIN 
        movie_keyword mk ON tm.movie_id = mk.movie_id
    LEFT JOIN 
        keyword kw ON mk.keyword_id = kw.id
    LEFT JOIN 
        aka_title at ON tm.movie_id = at.movie_id
    LEFT JOIN 
        aka_name ak ON at.id = ak.id
    GROUP BY 
        tm.title, tm.production_year
)
SELECT 
    md.title,
    md.production_year,
    COALESCE(md.aka_names, 'No Alternate Names') AS alternate_names,
    COALESCE(md.company_names, 'No Companies') AS companies,
    COALESCE(md.keywords, 'No Keywords') AS movie_keywords
FROM 
    movie_details md
ORDER BY 
    md.production_year DESC,
    md.title;
