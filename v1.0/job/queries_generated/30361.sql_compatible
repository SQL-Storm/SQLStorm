
WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        m.id AS movie_id,
        m.title,
        m.production_year,
        m.kind_id,
        1 AS level
    FROM 
        aka_title m
    WHERE 
        m.kind_id = 1 

    UNION ALL

    SELECT 
        m.id AS movie_id,
        m.title,
        m.production_year,
        m.kind_id,
        mh.level + 1
    FROM 
        aka_title m
    JOIN movie_link ml ON ml.linked_movie_id = m.id
    JOIN movie_hierarchy mh ON mh.movie_id = ml.movie_id
)

SELECT 
    a.name AS actor_name,
    mt.title AS movie_title,
    mt.production_year,
    mh.level AS movie_level,
    COALESCE(c.country_code, 'Unknown') AS company_country,
    COUNT(DISTINCT kw.keyword) AS keyword_count,
    SUM(CASE WHEN pi.note IS NOT NULL THEN 1 ELSE 0 END) AS info_notes_count
FROM 
    cast_info ci
JOIN 
    aka_name a ON a.person_id = ci.person_id
JOIN 
    aka_title mt ON mt.id = ci.movie_id
LEFT JOIN 
    movie_companies mc ON mc.movie_id = mt.id
LEFT JOIN 
    company_name c ON c.id = mc.company_id
LEFT JOIN 
    movie_keyword mk ON mk.movie_id = mt.id
LEFT JOIN 
    keyword kw ON kw.id = mk.keyword_id
LEFT JOIN 
    info_type it ON it.id = mi.info_type_id
LEFT JOIN 
    movie_info mi ON mi.movie_id = mt.id AND mi.info_type_id = it.id
LEFT JOIN 
    person_info pi ON pi.person_id = a.person_id
JOIN 
    movie_hierarchy mh ON mh.movie_id = mt.id
WHERE 
    mt.production_year > 2000
GROUP BY 
    a.name, mt.title, mt.production_year, mh.level, c.country_code
ORDER BY 
    mh.level DESC, keyword_count DESC;
