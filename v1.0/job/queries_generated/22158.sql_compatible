
WITH movie_details AS (
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        STRING_AGG(DISTINCT ak.name, ', ' ORDER BY ak.name) AS actors,
        COUNT(DISTINCT kc.keyword) AS keyword_count,
        COUNT(DISTINCT mc.company_id) AS company_count
    FROM 
        aka_title t
        LEFT JOIN cast_info ci ON t.id = ci.movie_id
        LEFT JOIN aka_name ak ON ci.person_id = ak.person_id
        LEFT JOIN movie_keyword mk ON t.id = mk.movie_id
        LEFT JOIN keyword kc ON mk.keyword_id = kc.id
        LEFT JOIN movie_companies mc ON t.id = mc.movie_id
    WHERE 
        t.production_year > 2000 
        AND t.kind_id IN (SELECT id FROM kind_type WHERE kind = 'feature')
    GROUP BY 
        t.id, t.title, t.production_year
),
top_movies AS (
    SELECT 
        movie_id,
        title,
        production_year,
        actors,
        keyword_count,
        company_count,
        RANK() OVER (ORDER BY keyword_count DESC, company_count DESC) AS rank
    FROM 
        movie_details
)
SELECT 
    tm.title,
    tm.production_year,
    tm.actors,
    tm.keyword_count,
    tm.company_count,
    CASE 
        WHEN tm.rank <= 10 THEN 'Top 10'
        ELSE 'Below Top 10'
    END AS movie_category,
    CASE 
        WHEN EXISTS (
            SELECT 1 
            FROM movie_info mi 
            WHERE mi.movie_id = tm.movie_id 
            AND mi.info_type_id = (SELECT id FROM info_type WHERE info = 'Box Office')
            AND mi.info IS NOT NULL
        ) THEN 'Box Office Info Available'
        ELSE 'No Box Office Info'
    END AS box_office_info_status
FROM 
    top_movies tm
WHERE 
    EXISTS (
        SELECT 1
        FROM complete_cast cc
        WHERE cc.movie_id = tm.movie_id
        AND cc.status_id IN (SELECT id FROM status_type WHERE status = 'completed')
    )
ORDER BY 
    tm.rank;
