
WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        t.id AS title_id,
        t.title,
        t.production_year,
        t.kind_id,
        CAST(NULL AS VARCHAR) AS parent_title,
        0 AS level
    FROM title t
    WHERE t.season_nr IS NULL  
    
    UNION ALL

    SELECT 
        et.id AS title_id,
        et.title,
        et.production_year,
        et.kind_id,
        mh.title AS parent_title,
        mh.level + 1 AS level
    FROM title et
    JOIN MovieHierarchy mh ON et.episode_of_id = mh.title_id
)
SELECT 
    mh.title_id,
    mh.title AS episode_title,
    mh.production_year,
    mh.level,
    COALESCE(c.name, 'Unknown') AS character_name,
    COUNT(DISTINCT ci.person_id) OVER (PARTITION BY mh.title_id) AS cast_count,
    STRING_AGG(DISTINCT k.keyword, ', ') AS keywords,
    COALESCE(ci.note, 'No special notes') AS role_note,
    CASE 
        WHEN mh.level > 0 THEN 'Episode'
        ELSE 'Main Title'
    END AS title_type
FROM MovieHierarchy mh
LEFT JOIN cast_info ci ON mh.title_id = ci.movie_id
LEFT JOIN aka_name c ON ci.person_id = c.person_id
LEFT JOIN movie_keyword mk ON mh.title_id = mk.movie_id
LEFT JOIN keyword k ON mk.keyword_id = k.id
WHERE (mh.production_year > 2000) 
  AND (ci.personal_role_id IS NOT NULL OR ci.note IS NOT NULL)
GROUP BY 
    mh.title_id, mh.title, mh.production_year, 
    mh.level, c.name, ci.note
ORDER BY 
    mh.production_year DESC, 
    mh.title ASC;
