
WITH RankedMovies AS (
    SELECT 
        t.title,
        t.production_year,
        COUNT(c.id) AS cast_count,
        RANK() OVER (PARTITION BY t.production_year ORDER BY COUNT(c.id) DESC) AS rank_by_cast
    FROM 
        aka_title t
    JOIN 
        cast_info c ON t.id = c.movie_id
    WHERE 
        t.production_year IS NOT NULL
    GROUP BY 
        t.title, t.production_year
),
MoviesWithKeywords AS (
    SELECT 
        m.title,
        m.production_year,
        ARRAY_AGG(DISTINCT k.keyword) AS keywords
    FROM 
        RankedMovies m
    JOIN 
        movie_keyword mk ON m.title = mk.movie_id
    JOIN 
        keyword k ON mk.keyword_id = k.id
    WHERE 
        m.rank_by_cast <= 5
    GROUP BY 
        m.title, m.production_year
),
TopMovies AS (
    SELECT 
        rw.title,
        rw.production_year,
        rw.cast_count,
        COALESCE(ARRAY_LENGTH(mw.keywords, 1), 0) AS keyword_count,
        CASE
            WHEN mw.keywords IS NULL OR CARDINALITY(mw.keywords) = 0 THEN 'No Keywords'
            ELSE 'Has Keywords'
        END AS keyword_status
    FROM 
        RankedMovies rw
    LEFT JOIN 
        MoviesWithKeywords mw ON rw.title = mw.title AND rw.production_year = mw.production_year
    WHERE 
        rw.rank_by_cast <= 10
)
SELECT 
    title,
    production_year,
    cast_count,
    keyword_count,
    keyword_status
FROM 
    TopMovies
WHERE 
    cast_count > 2
ORDER BY 
    production_year DESC,
    cast_count DESC;
