
WITH MovieRankings AS (
    SELECT 
        t.id AS movie_id,
        COALESCE(GROUP_CONCAT(DISTINCT k.keyword ORDER BY k.keyword), 'No Keywords') AS keywords,
        COUNT(DISTINCT c.person_id) AS cast_count,
        AVG(CASE 
            WHEN m.production_year IS NOT NULL THEN m.production_year 
            ELSE 0 
        END) AS avg_production_year
    FROM 
        title t
    LEFT JOIN 
        movie_keyword mk ON t.id = mk.movie_id
    LEFT JOIN 
        keyword k ON mk.keyword_id = k.id
    LEFT JOIN 
        complete_cast cc ON t.id = cc.movie_id
    LEFT JOIN 
        cast_info c ON cc.subject_id = c.person_id
    LEFT JOIN 
        movie_info mi ON t.id = mi.movie_id 
    LEFT JOIN 
        movie_companies mc ON t.id = mc.movie_id
    LEFT JOIN 
        company_name cn ON mc.company_id = cn.id
    LEFT JOIN 
        aka_title at ON t.id = at.movie_id
    GROUP BY 
        t.id
),
TopMovies AS (
    SELECT 
        movie_id, 
        keywords, 
        cast_count, 
        avg_production_year,
        ROW_NUMBER() OVER (ORDER BY cast_count DESC, avg_production_year DESC) AS rank
    FROM 
        MovieRankings
)
SELECT 
    tm.movie_id,
    t.title,
    tm.keywords,
    tm.cast_count,
    tm.avg_production_year,
    r.role AS top_role
FROM 
    TopMovies tm
JOIN 
    title t ON tm.movie_id = t.id
LEFT JOIN 
    cast_info ci ON tm.movie_id = ci.movie_id
LEFT JOIN 
    role_type r ON ci.role_id = r.id
WHERE 
    tm.rank <= 10
ORDER BY 
    tm.rank;
