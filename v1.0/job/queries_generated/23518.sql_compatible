
WITH RecursiveCast AS (
    SELECT 
        c.id AS cast_id,
        c.person_id,
        c.movie_id,
        c.role_id,
        ROW_NUMBER() OVER (PARTITION BY c.movie_id ORDER BY c.nr_order) AS role_order
    FROM cast_info c
    WHERE c.note IS NULL
), MovieStats AS (
    SELECT 
        t.title AS movie_title,
        COUNT(DISTINCT ca.person_id) AS total_cast,
        MAX(EXTRACT(YEAR FROM CREATETIME)) AS latest_movie_year,
        cc.movie_id
    FROM aka_title t
    JOIN complete_cast cc ON t.id = cc.movie_id
    JOIN RecursiveCast ca ON ca.movie_id = cc.movie_id
    WHERE t.production_year IS NOT NULL
    GROUP BY t.title, cc.movie_id
), KeywordStats AS (
    SELECT 
        m.movie_id,
        STRING_AGG(k.keyword, ', ') AS keywords
    FROM movie_keyword m
    JOIN keyword k ON m.keyword_id = k.id
    WHERE k.phonetic_code IS NOT NULL
    GROUP BY m.movie_id
), ImgCompanies AS (
    SELECT 
        mc.movie_id,
        STRING_AGG(DISTINCT cn.name) AS companies
    FROM movie_companies mc
    JOIN company_name cn ON mc.company_id = cn.id
    WHERE mc.company_type_id IS NOT NULL
    GROUP BY mc.movie_id
), JoinedData AS (
    SELECT 
        ms.movie_title,
        ms.total_cast,
        ks.keywords,
        ic.companies,
        CASE 
            WHEN ms.latest_movie_year IS NULL THEN 'Unknown Year'
            ELSE CAST(ms.latest_movie_year AS VARCHAR)
        END AS latest_year
    FROM MovieStats ms
    LEFT JOIN KeywordStats ks ON ms.movie_id = ks.movie_id
    LEFT JOIN ImgCompanies ic ON ms.movie_id = ic.movie_id
)
SELECT 
    jd.movie_title,
    jd.total_cast,
    COALESCE(jd.keywords, 'No Keywords') AS keywords,
    jd.companies,
    jd.latest_year
FROM JoinedData jd
WHERE jd.latest_year <> 'Unknown Year' AND jd.total_cast > 1
ORDER BY jd.total_cast DESC
LIMIT 10;
