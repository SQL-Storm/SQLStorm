WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        mt.kind_id,
        1 AS level
    FROM 
        aka_title mt
    WHERE 
        mt.production_year >= 2000  

    UNION ALL

    SELECT 
        m.id AS movie_id,
        m.title,
        m.production_year,
        m.kind_id,
        mh.level + 1
    FROM 
        movie_link ml
    JOIN 
        aka_title m ON m.id = ml.linked_movie_id
    JOIN 
        movie_hierarchy mh ON mh.movie_id = ml.movie_id
)
SELECT
    ak.name AS actor_name,
    COUNT(DISTINCT ch.id) AS char_count,
    AVG(CASE WHEN c.nr_order IS NOT NULL THEN c.nr_order ELSE 0 END) AS avg_role_order,
    STRING_AGG(DISTINCT kt.keyword, ', ') AS keywords,
    COALESCE(cn.name, 'Unknown Company') AS company_name
FROM
    cast_info c
JOIN 
    aka_name ak ON ak.person_id = c.person_id
JOIN 
    movie_hierarchy mh ON mh.movie_id = c.movie_id
LEFT JOIN 
    movie_companies mc ON mc.movie_id = mh.movie_id
LEFT JOIN 
    company_name cn ON cn.id = mc.company_id
LEFT JOIN 
    movie_keyword mk ON mk.movie_id = mh.movie_id
LEFT JOIN 
    keyword kt ON kt.id = mk.keyword_id
LEFT JOIN 
    char_name ch ON ch.imdb_id = ak.id
WHERE 
    mh.level <= 2  
    AND (c.note IS NULL OR c.note NOT LIKE '%cameo%')  
GROUP BY 
    ak.name, cn.name
HAVING 
    COUNT(DISTINCT mh.movie_id) > 1  
ORDER BY 
    avg_role_order DESC, 
    actor_name;