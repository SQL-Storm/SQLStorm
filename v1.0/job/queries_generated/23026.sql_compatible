
WITH ranked_movies AS (
    SELECT 
        t.id AS title_id,
        t.title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY a.name) AS rank_per_year
    FROM 
        aka_title t
    JOIN 
        movie_keyword mk ON t.id = mk.movie_id
    JOIN 
        keyword k ON mk.keyword_id = k.id
    JOIN 
        movie_info mi ON t.id = mi.movie_id
    JOIN 
        info_type it ON mi.info_type_id = it.id
    JOIN 
        (SELECT DISTINCT name, id FROM name WHERE gender = 'F') a ON a.id IN (SELECT DISTINCT person_id FROM cast_info ci WHERE ci.movie_id = t.id)
    WHERE 
        k.keyword LIKE '%Drama%' AND 
        t.production_year IS NOT NULL
),
company_movies AS (
    SELECT 
        mc.movie_id,
        COUNT(DISTINCT c.id) AS company_count,
        STRING_AGG(DISTINCT cn.name, ', ') AS company_names
    FROM 
        movie_companies mc
    JOIN 
        company_name cn ON mc.company_id = cn.id
    GROUP BY 
        mc.movie_id
),
filtered_movies AS (
    SELECT 
        rm.title_id,
        rm.title,
        rm.production_year,
        cm.company_count,
        cm.company_names
    FROM 
        ranked_movies rm
    LEFT JOIN 
        company_movies cm ON rm.title_id = cm.movie_id
    WHERE 
        rm.rank_per_year <= 3
)
SELECT 
    f.title,
    f.production_year,
    COALESCE(f.company_count, 0) AS company_count,
    COALESCE(f.company_names, 'No Companies') AS company_names
FROM 
    filtered_movies f
WHERE 
    (f.company_count IS NULL OR f.company_count > 1)
    AND f.production_year BETWEEN 2000 AND 2020
ORDER BY 
    f.production_year DESC, f.title;
