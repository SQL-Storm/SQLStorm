
WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        1 AS level,
        mt.production_year,
        mt.kind_id,
        NULL AS parent_id
    FROM 
        aka_title mt
    WHERE 
        mt.episode_of_id IS NULL  

    UNION ALL

    SELECT 
        et.id AS movie_id,
        et.title,
        mh.level + 1 AS level,
        et.production_year,
        et.kind_id,
        mh.movie_id AS parent_id
    FROM 
        aka_title et
    JOIN 
        movie_hierarchy mh ON et.episode_of_id = mh.movie_id  
)

SELECT 
    m.title AS movie_title,
    m.production_year,
    ak.name AS actor_name,
    COUNT(DISTINCT mc.company_id) AS num_production_companies,
    STRING_AGG(DISTINCT kw.keyword, ', ') AS keywords,
    ROW_NUMBER() OVER (PARTITION BY m.movie_id ORDER BY m.level) AS row_num
FROM 
    movie_hierarchy m
LEFT JOIN 
    complete_cast cc ON m.movie_id = cc.movie_id
LEFT JOIN 
    cast_info ci ON cc.subject_id = ci.person_id
LEFT JOIN 
    aka_name ak ON ci.person_id = ak.person_id
LEFT JOIN 
    movie_companies mc ON m.movie_id = mc.movie_id
LEFT JOIN 
    movie_keyword kw ON m.movie_id = kw.movie_id
WHERE 
    m.production_year >= 2000
    AND ak.name IS NOT NULL
    AND (m.kind_id = (SELECT id FROM kind_type WHERE kind = 'movie'))  
GROUP BY 
    m.movie_id, m.title, m.production_year, ak.name, m.level
HAVING 
    COUNT(DISTINCT mc.company_id) > 2  
ORDER BY 
    m.production_year DESC, 
    num_production_companies DESC;
