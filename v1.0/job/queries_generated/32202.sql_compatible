
WITH RECURSIVE MovieHierarchy AS (
    SELECT
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        mt.kind_id,
        1 AS level
    FROM
        aka_title mt
    WHERE
        mt.production_year >= 2000

    UNION ALL

    SELECT
        ml.linked_movie_id AS movie_id,
        at.title,
        at.production_year,
        at.kind_id,
        mh.level + 1
    FROM
        movie_link ml
    JOIN
        aka_title at ON ml.linked_movie_id = at.id
    JOIN
        MovieHierarchy mh ON ml.movie_id = mh.movie_id
    WHERE
        at.production_year >= 2000
)
SELECT 
    a.name AS actor_name,
    f.title AS movie_title,
    COUNT(DISTINCT c.person_id) OVER(PARTITION BY f.id) AS num_cast,
    MAX(mh.level) AS max_link_level,
    STRING_AGG(DISTINCT k.keyword, ', ') AS associated_keywords,
    COALESCE(info.info, 'No Info') AS additional_info
FROM
    cast_info c
JOIN 
    aka_name a ON c.person_id = a.person_id
JOIN 
    aka_title f ON c.movie_id = f.id
LEFT JOIN
    movie_keyword mk ON f.id = mk.movie_id
LEFT JOIN
    keyword k ON mk.keyword_id = k.id
LEFT JOIN
    movie_info mi ON f.id = mi.movie_id
LEFT JOIN
    info_type info ON mi.info_type_id = info.id
LEFT JOIN
    MovieHierarchy mh ON f.id = mh.movie_id
WHERE
    f.production_year BETWEEN 2000 AND 2023 AND
    a.name IS NOT NULL
GROUP BY
    a.name, f.title, info.info, mh.level
ORDER BY
    f.production_year DESC, num_cast DESC;
