
WITH RECURSIVE MovieHierarchy AS (
    SELECT
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        0 AS level
    FROM
        aka_title mt
    WHERE
        mt.production_year IS NOT NULL

    UNION ALL

    SELECT
        ml.linked_movie_id,
        at.title,
        at.production_year,
        mh.level + 1
    FROM
        MovieHierarchy mh
    JOIN
        movie_link ml ON mh.movie_id = ml.movie_id
    JOIN
        aka_title at ON ml.linked_movie_id = at.id
)

SELECT
    ak.name AS actor_name,
    at.title AS movie_title,
    mh.title AS linked_title,
    mh.production_year AS linked_year,
    (SELECT COUNT(*)
     FROM movie_info mi
     WHERE mi.movie_id = at.id AND mi.info_type_id = (SELECT id FROM info_type WHERE info = 'Box Office')) AS box_office_count,
    COUNT(CASE WHEN mc.company_type_id = (SELECT id FROM company_type WHERE kind = 'Distributor') THEN 1 END) AS distributor_count,
    ROW_NUMBER() OVER (PARTITION BY ak.person_id ORDER BY mh.production_year DESC) AS row_num
FROM
    cast_info ci
JOIN
    aka_name ak ON ci.person_id = ak.person_id
JOIN
    aka_title at ON ci.movie_id = at.id
LEFT JOIN
    MovieHierarchy mh ON at.id = mh.movie_id
LEFT JOIN
    movie_companies mc ON at.id = mc.movie_id
WHERE
    at.production_year BETWEEN 2000 AND 2023
    AND ak.name IS NOT NULL
GROUP BY
    ak.name, at.title, mh.title, mh.production_year, ak.person_id
HAVING
    (SELECT COUNT(*)
     FROM movie_info mi
     WHERE mi.movie_id = at.id AND mi.info_type_id = (SELECT id FROM info_type WHERE info = 'Box Office')) > 0
    AND COUNT(CASE WHEN mc.company_type_id = (SELECT id FROM company_type WHERE kind = 'Distributor') THEN 1 END) > 0
ORDER BY
    ak.name, mh.production_year DESC;
