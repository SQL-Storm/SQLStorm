
WITH RankedTitles AS (
    SELECT 
        t.title AS title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.title) AS year_rank
    FROM 
        aka_title t
    WHERE 
        t.production_year IS NOT NULL
),
MovieTitles AS (
    SELECT 
        mt.movie_id,
        mt.title,
        STRING_AGG(DISTINCT cn.name, ', ') AS company_names,
        COUNT(DISTINCT kc.keyword) AS keyword_count
    FROM 
        aka_title mt
    LEFT JOIN 
        movie_companies mc ON mt.movie_id = mc.movie_id
    LEFT JOIN 
        company_name cn ON mc.company_id = cn.id
    LEFT JOIN 
        movie_keyword mk ON mt.movie_id = mk.movie_id
    LEFT JOIN 
        keyword kc ON mk.keyword_id = kc.id
    GROUP BY 
        mt.movie_id, mt.title
),
DetailedActors AS (
    SELECT 
        ak.name AS actor_name,
        pt.movie_id,
        ROW_NUMBER() OVER (PARTITION BY pt.movie_id ORDER BY ak.name) AS actor_rank,
        COUNT(*) OVER (PARTITION BY pt.movie_id) AS total_cast
    FROM 
        aka_name ak
    JOIN 
        cast_info ci ON ak.person_id = ci.person_id
    JOIN 
        title pt ON ci.movie_id = pt.id
)
SELECT 
    mt.title,
    mt.production_year,
    mt.company_names,
    mt.keyword_count,
    da.actor_name,
    da.actor_rank,
    da.total_cast
FROM 
    MovieTitles mt
LEFT JOIN 
    DetailedActors da ON mt.movie_id = da.movie_id
WHERE 
    mt.keyword_count > 0
ORDER BY 
    mt.production_year DESC,
    mt.title,
    da.actor_rank
OFFSET 5 ROWS FETCH NEXT 10 ROWS ONLY;
