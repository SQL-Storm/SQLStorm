WITH RECURSIVE movie_hierarchy AS (
    
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        1 AS depth
    FROM title t
    WHERE t.production_year IS NOT NULL

    UNION ALL

    
    SELECT 
        ml.linked_movie_id AS movie_id,
        sub.title,
        sub.production_year,
        mh.depth + 1
    FROM movie_link ml
    JOIN title sub ON ml.linked_movie_id = sub.id
    JOIN movie_hierarchy mh ON ml.movie_id = mh.movie_id
)
SELECT 
    t.title AS main_movie_title,
    t.production_year AS main_movie_year,
    array_agg(DISTINCT t2.title) AS linked_movies,
    COUNT(DISTINCT c.person_id) AS cast_count,
    MAX(p.info) FILTER (WHERE p.info_type_id = 1) AS director_info,
    COUNT(DISTINCT k.keyword) AS keyword_count,
    AVG(m.production_year) AS average_production_year_of_linked_movies
FROM title t
LEFT JOIN movie_link ml ON t.id = ml.movie_id
LEFT JOIN title t2 ON ml.linked_movie_id = t2.id
LEFT JOIN cast_info c ON t.id = c.movie_id
LEFT JOIN person_info p ON c.person_id = p.person_id
LEFT JOIN movie_keyword mk ON t2.id = mk.movie_id
LEFT JOIN keyword k ON mk.keyword_id = k.id
LEFT JOIN movie_hierarchy mh ON t.id = mh.movie_id
WHERE t.production_year > 2000
GROUP BY t.id
HAVING COUNT(DISTINCT c.person_id) > 5
ORDER BY main_movie_year DESC;