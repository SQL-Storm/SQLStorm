
WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        mt.kind_id,
        1 AS hierarchy_level
    FROM 
        aka_title mt
    WHERE 
        mt.production_year IS NOT NULL

    UNION ALL

    SELECT 
        ml.linked_movie_id AS movie_id,
        mt.title,
        mt.production_year,
        mt.kind_id,
        mh.hierarchy_level + 1
    FROM 
        movie_link ml
    JOIN 
        aka_title mt ON ml.movie_id = mt.id
    JOIN 
        movie_hierarchy mh ON ml.movie_id = mh.movie_id
)

SELECT 
    ak.name AS actor_name,
    at.title AS movie_title,
    at.production_year AS released_year,
    STRING_AGG(DISTINCT kw.keyword, ', ') AS keywords,
    COUNT(DISTINCT ci.person_id) AS cast_count,
    MAX(CASE WHEN p.gender = 'F' THEN 'Female' ELSE 'Male' END) AS dominant_gender,
    mh.hierarchy_level AS image_hierarchy_level
FROM 
    aka_name ak
JOIN 
    cast_info ci ON ak.person_id = ci.person_id
JOIN 
    aka_title at ON ci.movie_id = at.id
LEFT JOIN 
    movie_keyword mk ON at.id = mk.movie_id
LEFT JOIN 
    keyword kw ON mk.keyword_id = kw.id
LEFT JOIN 
    movie_hierarchy mh ON at.id = mh.movie_id
LEFT JOIN 
    name p ON ak.person_id = p.imdb_id
WHERE 
    at.production_year >= 2000 
    AND ak.name IS NOT NULL
    AND ak.name <> '' 
    AND (p.gender IS NULL OR p.gender IN ('M', 'F'))
GROUP BY 
    ak.name, at.title, at.production_year, mh.hierarchy_level
HAVING 
    COUNT(DISTINCT ci.person_id) >= 3 
ORDER BY 
    released_year DESC, actor_name ASC
