
WITH RecursiveTitleCTE AS (
    SELECT 
        t.id, 
        t.title, 
        t.production_year, 
        t.kind_id, 
        1 AS level 
    FROM 
        title t 
    WHERE 
        t.kind_id = (SELECT id FROM kind_type WHERE kind = 'movie')
    
    UNION ALL
    
    SELECT 
        t.id, 
        t.title, 
        t.production_year, 
        t.kind_id, 
        cte.level + 1 
    FROM 
        title t 
    INNER JOIN 
        RecursiveTitleCTE cte ON t.episode_of_id = cte.id 
    WHERE 
        t.kind_id = (SELECT id FROM kind_type WHERE kind = 'episode')
),
ActorMovieList AS (
    SELECT 
        a.name AS actor_name, 
        t.title AS movie_title, 
        t.production_year, 
        ROW_NUMBER() OVER (PARTITION BY a.name ORDER BY t.production_year DESC) AS movie_rank 
    FROM 
        aka_name a 
    JOIN 
        cast_info ci ON a.person_id = ci.person_id 
    JOIN 
        aka_title t ON ci.movie_id = t.movie_id 
    WHERE 
        t.production_year IS NOT NULL
),
TopActors AS (
    SELECT 
        actor_name, 
        COUNT(movie_title) AS movie_count 
    FROM 
        ActorMovieList 
    WHERE 
        movie_rank <= 5 
    GROUP BY 
        actor_name 
    HAVING 
        COUNT(movie_title) > 2
),
CompanyMovieInfo AS (
    SELECT 
        cn.name AS company_name, 
        COUNT(DISTINCT mc.movie_id) AS total_movies 
    FROM 
        company_name cn 
    JOIN 
        movie_companies mc ON cn.id = mc.company_id 
    WHERE 
        cn.country_code IS NOT NULL 
    GROUP BY 
        cn.name 
    HAVING 
        COUNT(DISTINCT mc.movie_id) > 10
)
SELECT 
    a.actor_name, 
    a.movie_title, 
    a.production_year, 
    cmp.company_name, 
    cmp.total_movies 
FROM 
    ActorMovieList a 
JOIN 
    TopActors ta ON a.actor_name = ta.actor_name 
LEFT JOIN 
    movie_companies mc ON mc.movie_id = (SELECT t.id FROM title t WHERE t.title = a.movie_title) 
LEFT JOIN 
    company_name cmp ON mc.company_id = cmp.id 
WHERE 
    a.movie_rank = 1 
ORDER BY 
    a.actor_name, 
    a.production_year DESC;
