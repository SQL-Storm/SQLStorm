WITH RECURSIVE movie_hierarchy AS (
    SELECT
        mt.id AS movie_id,
        mt.title,
        CAST(NULL AS VARCHAR) AS parent_id
    FROM 
        aka_title mt
    WHERE 
        mt.production_year = (SELECT MAX(production_year) FROM aka_title)

    UNION ALL

    SELECT
        ml.linked_movie_id AS movie_id,
        mt.title,
        mh.movie_id AS parent_id
    FROM 
        movie_link ml
    JOIN 
        aka_title mt ON ml.linked_movie_id = mt.movie_id
    JOIN 
        movie_hierarchy mh ON ml.movie_id = mh.movie_id
)

SELECT
    mk.keyword,
    COUNT(DISTINCT ci.person_id) AS actor_count,
    AVG(p_info.info IS NOT NULL) AS null_info_ratio,
    SUM(CASE WHEN ci.note IS NOT NULL THEN 1 ELSE 0 END) AS noted_cast_count,
    STRING_AGG(DISTINCT a.name, ', ') AS actors
FROM 
    movie_keyword mk
JOIN 
    aka_title at ON mk.movie_id = at.id
LEFT JOIN 
    cast_info ci ON at.id = ci.movie_id
LEFT JOIN 
    aka_name a ON ci.person_id = a.person_id
LEFT JOIN 
    person_info p_info ON a.person_id = p_info.person_id
WHERE 
    at.production_year >= 2000
    AND mk.keyword LIKE '%action%'
GROUP BY 
    mk.keyword
HAVING 
    COUNT(DISTINCT ci.person_id) > 5
ORDER BY 
    actor_count DESC
LIMIT 10;