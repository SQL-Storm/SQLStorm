
WITH movie_data AS (
    SELECT 
        t.title AS movie_title,
        p.name AS person_name,
        c.nr_order,
        t.production_year,
        k.keyword AS movie_keyword,
        ci.kind AS company_kind,
        mi.info AS movie_info
    FROM 
        title t
    JOIN 
        cast_info c ON t.id = c.movie_id
    JOIN 
        aka_name p ON c.person_id = p.person_id
    LEFT JOIN 
        movie_keyword mk ON t.id = mk.movie_id
    LEFT JOIN 
        keyword k ON mk.keyword_id = k.id
    LEFT JOIN 
        movie_companies mc ON t.id = mc.movie_id
    LEFT JOIN 
        company_name cn ON mc.company_id = cn.id
    LEFT JOIN 
        company_type ct ON mc.company_type_id = ct.id
    LEFT JOIN 
        movie_info mi ON t.id = mi.movie_id
    WHERE 
        t.production_year BETWEEN 2000 AND 2023
        AND p.name IS NOT NULL
),
ranked_movies AS (
    SELECT 
        movie_title,
        person_name,
        production_year,
        movie_keyword,
        company_kind,
        movie_info,
        DENSE_RANK() OVER (PARTITION BY movie_title ORDER BY nr_order) AS actor_rank
    FROM 
        movie_data
)
SELECT 
    movie_title,
    STRING_AGG(DISTINCT person_name, ', ') AS cast_names,
    COUNT(DISTINCT movie_keyword) AS keywords_count,
    STRING_AGG(DISTINCT company_kind, ', ') AS companies,
    MIN(production_year) AS first_year,
    MAX(production_year) AS last_year,
    STRING_AGG(DISTINCT movie_info, '; ') AS additional_info
FROM 
    ranked_movies
WHERE 
    actor_rank <= 5
GROUP BY 
    movie_title
ORDER BY 
    last_year DESC, 
    movie_title;
