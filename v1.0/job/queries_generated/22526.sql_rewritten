WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        m.id AS movie_id,
        m.title,
        m.production_year,
        NULL AS parent_movie_id,
        1 AS level
    FROM 
        aka_title m
    WHERE 
        m.production_year IS NOT NULL
    
    UNION ALL
    
    SELECT 
        link.linked_movie_id AS movie_id,
        m.title,
        m.production_year,
        mh.movie_id AS parent_movie_id,
        mh.level + 1
    FROM 
        movie_link link
    JOIN 
        aka_title m ON link.linked_movie_id = m.id
    JOIN 
        movie_hierarchy mh ON link.movie_id = mh.movie_id
    WHERE 
        mh.level < 5  
)

SELECT 
    a.id AS aka_name_id,
    a.name AS actor_name,
    t.title AS movie_title,
    t.production_year,
    COUNT(DISTINCT c.person_id) OVER (PARTITION BY t.id) AS distinct_actors_count,
    SUM(CASE WHEN cm.company_type_id = 1 THEN 1 ELSE 0 END) OVER (PARTITION BY t.id) AS count_of_production_companies,
    COALESCE(NULLIF(mh.parent_movie_id, NULL), -1) AS parent_movie_check,
    STRING_AGG(DISTINCT kw.keyword, ', ') AS keywords,
    CASE 
        WHEN t.production_year < 2000 THEN 'Classic'
        WHEN t.production_year BETWEEN 2000 AND 2010 THEN 'Modern'
        ELSE 'Recent'
    END AS era_category,
    COALESCE(NULLIF(p.info, ''), 'No info available') AS extra_info

FROM 
    aka_name a
JOIN 
    cast_info c ON a.person_id = c.person_id
JOIN 
    aka_title t ON c.movie_id = t.id
LEFT JOIN 
    movie_companies mc ON t.id = mc.movie_id
LEFT JOIN 
    company_type ct ON mc.company_type_id = ct.id
LEFT JOIN 
    movie_keyword mk ON t.id = mk.movie_id
LEFT JOIN 
    keyword kw ON mk.keyword_id = kw.id
LEFT JOIN 
    person_info p ON a.person_id = p.person_id
LEFT JOIN 
    movie_hierarchy mh ON t.id = mh.movie_id

WHERE 
    a.name IS NOT NULL
    AND t.kind_id IN (SELECT id FROM kind_type WHERE kind LIKE 'movie' OR kind LIKE 'series')
    AND (c.note IS NULL OR c.note = '' OR c.note LIKE '%featured%')
    
GROUP BY 
    a.id, a.name, t.id, t.title, t.production_year, mh.parent_movie_id, p.info

ORDER BY 
    t.production_year DESC, a.name;