
WITH RECURSIVE MovieCTE AS (
    SELECT
        t.id AS movie_id,
        t.title,
        t.production_year,
        1 AS level
    FROM
        aka_title t
    WHERE
        t.production_year >= 2000
    UNION ALL
    SELECT
        m.movie_id,
        t.title,
        t.production_year,
        m.level + 1
    FROM
        MovieCTE m
    JOIN
        aka_title t ON t.episode_of_id = m.movie_id
),
MovieRoles AS (
    SELECT
        c.movie_id,
        c.person_id,
        r.role,
        ROW_NUMBER() OVER (PARTITION BY c.movie_id ORDER BY c.nr_order) AS role_order
    FROM
        cast_info c
    JOIN
        role_type r ON r.id = c.role_id
),
CompanyJoin AS (
    SELECT
        m.movie_id,
        STRING_AGG(DISTINCT co.name, ', ') AS company_names
    FROM
        movie_companies m
    JOIN
        company_name co ON co.id = m.company_id
    WHERE
        m.note IS NULL
    GROUP BY
        m.movie_id
),
GenreCounts AS (
    SELECT
        t.id AS movie_id,
        COUNT(DISTINCT k.keyword) AS genre_count
    FROM
        aka_title t
    JOIN
        movie_keyword mk ON mk.movie_id = t.id
    JOIN
        keyword k ON k.id = mk.keyword_id
    WHERE
        k.keyword IS NOT NULL
    GROUP BY
        t.id
)
SELECT 
    m.movie_id,
    m.title,
    m.production_year,
    COALESCE(cr.role_order, 0) AS role_order,
    COALESCE(cj.company_names, 'No Companies') AS company_names,
    COALESCE(gc.genre_count, 0) AS genre_count
FROM 
    MovieCTE m
LEFT JOIN 
    MovieRoles cr ON cr.movie_id = m.movie_id
LEFT JOIN 
    CompanyJoin cj ON cj.movie_id = m.movie_id
LEFT JOIN 
    GenreCounts gc ON gc.movie_id = m.movie_id
WHERE 
    m.level = 1
    AND (gc.genre_count > 0 OR gc.genre_count IS NULL)
ORDER BY 
    m.production_year DESC, 
    m.title;
