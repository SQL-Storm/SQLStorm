
WITH RankedMovies AS (
    SELECT 
        at.id AS title_id,
        at.title,
        at.production_year,
        ROW_NUMBER() OVER (PARTITION BY at.production_year ORDER BY at.production_year DESC) AS rank
    FROM aka_title at
    WHERE at.production_year IS NOT NULL
), MovieDetails AS (
    SELECT 
        rm.title_id,
        rm.title,
        rm.production_year,
        COUNT(DISTINCT cc.person_id) AS cast_count,
        STRING_AGG(DISTINCT an.name, ', ') AS actors
    FROM RankedMovies rm
    LEFT JOIN complete_cast mc ON rm.title_id = mc.movie_id
    LEFT JOIN cast_info ci ON mc.subject_id = ci.id
    LEFT JOIN aka_name an ON ci.person_id = an.person_id
    WHERE ci.person_role_id IS NOT NULL
    GROUP BY rm.title_id, rm.title, rm.production_year
), MovieInfo AS (
    SELECT 
        rm.title_id,
        rm.title,
        COALESCE(mi.info, 'No Synopsis Available') AS synopsis
    FROM MovieDetails rm
    LEFT JOIN movie_info mi ON rm.title_id = mi.movie_id AND mi.info_type_id = 1
), KeywordStats AS (
    SELECT 
        mk.movie_id,
        COUNT(DISTINCT mk.keyword_id) AS keyword_count
    FROM movie_keyword mk
    GROUP BY mk.movie_id
)
SELECT 
    md.title,
    md.production_year,
    md.synopsis,
    md.cast_count,
    COALESCE(ks.keyword_count, 0) AS keyword_count,
    CASE 
        WHEN md.cast_count > 10 THEN 'Blockbuster'
        WHEN md.cast_count BETWEEN 5 AND 10 THEN 'Moderate Success'
        ELSE 'Indie'
    END AS box_office_category
FROM MovieInfo md
LEFT JOIN KeywordStats ks ON md.title_id = ks.movie_id
WHERE md.production_year >= 2000
ORDER BY md.production_year DESC, md.cast_count DESC
LIMIT 100;
