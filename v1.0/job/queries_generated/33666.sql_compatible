
WITH RECURSIVE movie_hierarchy AS (
    SELECT
        m.id AS movie_id,
        m.title,
        m.production_year,
        m.kind_id,
        1 AS level
    FROM
        aka_title m
    WHERE
        m.production_year >= 2000
    
    UNION ALL
    
    SELECT
        m.id,
        m.title,
        m.production_year,
        m.kind_id,
        mh.level + 1
    FROM
        movie_link ml
    JOIN
        aka_title m ON ml.linked_movie_id = m.id
    JOIN
        movie_hierarchy mh ON ml.movie_id = mh.movie_id
),
ranked_movies AS (
    SELECT 
        mh.movie_id,
        mh.title,
        mh.production_year,
        mh.kind_id,
        COUNT(DISTINCT ca.person_id) OVER (PARTITION BY mh.movie_id) AS cast_count,
        ROW_NUMBER() OVER (PARTITION BY mh.kind_id ORDER BY mh.production_year DESC) AS rank
    FROM 
        movie_hierarchy mh
    LEFT JOIN 
        cast_info ca ON mh.movie_id = ca.movie_id
)
SELECT 
    rm.movie_id,
    rm.title,
    rm.production_year,
    k.keyword AS category_keyword,
    COALESCE(cn.name, 'Unknown Company') AS production_company,
    rm.cast_count,
    CASE 
        WHEN rm.rank BETWEEN 1 AND 5 THEN 'Top 5'
        ELSE 'Other'
    END AS rank_category
FROM 
    ranked_movies rm
LEFT JOIN 
    movie_companies mc ON rm.movie_id = mc.movie_id
LEFT JOIN 
    company_name cn ON mc.company_id = cn.id
LEFT JOIN 
    movie_keyword mk ON rm.movie_id = mk.movie_id
LEFT JOIN 
    keyword k ON mk.keyword_id = k.id
WHERE 
    rm.production_year IS NOT NULL
    AND rm.cast_count > 0
    AND (k.keyword LIKE '%action%' OR k.keyword IS NULL)
GROUP BY
    rm.movie_id,
    rm.title,
    rm.production_year,
    k.keyword,
    cn.name,
    rm.cast_count,
    rm.rank
ORDER BY 
    rm.production_year DESC, 
    rm.cast_count DESC
LIMIT 100;
