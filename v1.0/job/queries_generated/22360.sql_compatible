
WITH RECURSIVE title_hierarchy AS (
    SELECT 
        t.id,
        t.title,
        t.production_year,
        tm.name AS main_actor,
        COALESCE(ep.title, 'N/A') AS episode_title,
        CASE 
            WHEN t.kind_id IN (SELECT id FROM kind_type WHERE kind = 'movie') THEN 'Movie'
            WHEN t.kind_id IN (SELECT id FROM kind_type WHERE kind = 'series') THEN 'Series'
            ELSE 'Other'
        END AS kind_description
    FROM 
        aka_title t
    LEFT JOIN 
        cast_info ci ON ci.movie_id = t.movie_id
    LEFT JOIN 
        aka_name tm ON tm.person_id = ci.person_id AND ci.nr_order = 1
    LEFT JOIN 
        aka_title ep ON ep.episode_of_id = t.id
    WHERE 
        t.production_year IS NOT NULL AND 
        t.production_year > 2000
    UNION ALL
    SELECT 
        t.id,
        t.title,
        t.production_year,
        tm.name AS main_actor,
        COALESCE(ep.title, 'N/A') AS episode_title,
        CASE 
            WHEN t.kind_id IN (SELECT id FROM kind_type WHERE kind = 'movie') THEN 'Movie'
            WHEN t.kind_id IN (SELECT id FROM kind_type WHERE kind = 'series') THEN 'Series'
            ELSE 'Other'
        END AS kind_description
    FROM 
        aka_title t
    JOIN 
        title_hierarchy th ON th.id = t.episode_of_id
    LEFT JOIN 
        cast_info ci ON ci.movie_id = t.movie_id
    LEFT JOIN 
        aka_name tm ON tm.person_id = ci.person_id AND ci.nr_order = 1
    WHERE 
        t.production_year IS NOT NULL AND 
        t.production_year > 2000
), ranked_titles AS (
    SELECT 
        th.id,
        th.title,
        th.production_year,
        th.main_actor,
        th.episode_title,
        th.kind_description,
        ROW_NUMBER() OVER (PARTITION BY th.kind_description ORDER BY th.production_year DESC) AS rank
    FROM 
        title_hierarchy th
)
SELECT 
    rt.*,
    CASE 
        WHEN rt.rank <= 5 THEN 'Top 5'
        ELSE 'Below Top 5'
    END AS rank_category,
    COUNT(*) OVER (PARTITION BY rt.kind_description) AS total_count,
    STRING_AGG(DISTINCT rt.main_actor, ', ') AS featured_actors
FROM 
    ranked_titles rt
WHERE 
    rt.production_year BETWEEN 2000 AND 2023
ORDER BY 
    rt.kind_description, rt.rank;
