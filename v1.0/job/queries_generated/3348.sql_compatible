
WITH RankedMovies AS (
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY COUNT(c.person_id) DESC) AS actor_count_rank
    FROM 
        aka_title AS t
    LEFT JOIN 
        cast_info AS c ON t.id = c.movie_id
    WHERE 
        t.production_year IS NOT NULL
    GROUP BY 
        t.id, t.title, t.production_year
), MovieDetails AS (
    SELECT 
        rm.movie_id,
        rm.title,
        rm.production_year,
        COALESCE(mk.keywords, 'No Keywords') AS keywords,
        COALESCE(ci.company_names, 'No Companies') AS company_names
    FROM 
        RankedMovies AS rm
    LEFT JOIN (
        SELECT 
            movie_id,
            STRING_AGG(keyword.keyword, ', ') AS keywords
        FROM 
            movie_keyword AS mk
        JOIN 
            keyword AS keyword ON mk.keyword_id = keyword.id
        GROUP BY 
            movie_id
    ) AS mk ON rm.movie_id = mk.movie_id
    LEFT JOIN (
        SELECT 
            mc.movie_id,
            STRING_AGG(cn.name, ', ') AS company_names
        FROM 
            movie_companies AS mc
        JOIN 
            company_name AS cn ON mc.company_id = cn.id
        GROUP BY 
            mc.movie_id
    ) AS ci ON rm.movie_id = ci.movie_id
)
SELECT 
    md.title,
    md.production_year,
    md.keywords,
    md.company_names,
    COUNT(DISTINCT cc.person_id) AS total_actors,
    AVG(CASE WHEN p.gender = 'F' THEN 1 ELSE 0 END) AS female_ratio
FROM 
    MovieDetails AS md
LEFT JOIN 
    complete_cast AS cc ON md.movie_id = cc.movie_id
LEFT JOIN 
    aka_name AS p ON cc.subject_id = p.person_id
WHERE 
    md.actor_count_rank <= 10
GROUP BY 
    md.movie_id, md.title, md.production_year, md.keywords, md.company_names, md.actor_count_rank
ORDER BY 
    md.production_year DESC, total_actors DESC;
