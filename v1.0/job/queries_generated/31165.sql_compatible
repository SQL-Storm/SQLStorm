
WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title AS movie_title,
        mt.production_year,
        1 AS level
    FROM 
        aka_title mt
    WHERE 
        mt.production_year = 2020
    
    UNION ALL
    
    SELECT 
        ml.linked_movie_id,
        gt.title AS movie_title,
        gt.production_year,
        mh.level + 1
    FROM 
        movie_link ml
    JOIN 
        aka_title gt ON ml.linked_movie_id = gt.id
    JOIN 
        movie_hierarchy mh ON mh.movie_id = ml.movie_id
)
SELECT 
    ak.name,
    ak.person_id,
    mh.movie_title,
    mh.production_year,
    COUNT(ci.id) AS cast_count,
    STRING_AGG(DISTINCT k.keyword, ', ') AS keywords,
    ROW_NUMBER() OVER (PARTITION BY ak.person_id ORDER BY mh.level DESC) AS rank
FROM 
    aka_name ak
JOIN 
    cast_info ci ON ak.person_id = ci.person_id
JOIN 
    movie_hierarchy mh ON ci.movie_id = mh.movie_id
LEFT JOIN 
    movie_keyword mk ON mh.movie_id = mk.movie_id
LEFT JOIN 
    keyword k ON mk.keyword_id = k.id
WHERE 
    ak.name IS NOT NULL
    AND ak.name <> ''
    AND mh.level <= 2
GROUP BY 
    ak.name, ak.person_id, mh.movie_title, mh.production_year
HAVING 
    AVG(NULLIF(ci.nr_order, 0)) > 2
ORDER BY 
    rank ASC, mh.production_year DESC;
