WITH RankedMovies AS (
    SELECT 
        t.id AS title_id, 
        t.title, 
        t.production_year, 
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.production_year DESC) AS year_rank
    FROM 
        aka_title t 
    WHERE 
        t.production_year IS NOT NULL
),
ExpandedCast AS (
    SELECT 
        c.id AS cast_id,
        c.movie_id,
        p.person_id, 
        p.name, 
        COALESCE(c.nr_order, 0) AS order_nr,
        COALESCE(p.name_pcode_nf, 'UNKNOWN') AS name_pcode_nf
    FROM 
        cast_info c
    JOIN 
        aka_name p ON c.person_id = p.person_id
),
CompanyMovies AS (
    SELECT 
        mc.movie_id,
        COUNT(DISTINCT mc.company_id) AS company_count,
        STRING_AGG(DISTINCT cn.name, ', ') AS companies
    FROM 
        movie_companies mc
    JOIN 
        company_name cn ON mc.company_id = cn.id
    WHERE 
        cn.country_code IS NOT NULL
    GROUP BY 
        mc.movie_id
),
FilteredMovies AS (
    SELECT 
        rm.title_id,
        rm.title,
        rm.production_year,
        cc.company_count,
        cc.companies,
        COUNT(ec.cast_id) FILTER (WHERE ec.order_nr < 5) AS top_five_cast_count
    FROM 
        RankedMovies rm
    LEFT JOIN 
        CompanyMovies cc ON rm.title_id = cc.movie_id
    LEFT JOIN 
        ExpandedCast ec ON rm.title_id = ec.movie_id
    WHERE 
        rm.year_rank <= 5 AND
        (cc.company_count > 0 OR cc.companies IS NOT NULL)
    GROUP BY 
        rm.title_id, rm.title, rm.production_year, cc.company_count, cc.companies
)
SELECT 
    fm.title AS movie_title,
    fm.production_year,
    fm.companies,
    CASE 
        WHEN fm.top_five_cast_count IS NULL THEN 'No Cast' 
        ELSE CONCAT(fm.top_five_cast_count::text, ' Top Cast Members') 
    END AS cast_description,
    COUNT(DISTINCT rm.title_id) OVER (PARTITION BY fm.production_year) AS movies_in_year
FROM 
    FilteredMovies fm
ORDER BY 
    fm.production_year DESC, fm.movie_title;