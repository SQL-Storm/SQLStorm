
WITH RECURSIVE ActorHierarchy AS (
    SELECT c.person_id,
           p.name,
           c.movie_id,
           CAST(NULL AS VARCHAR) AS parent_name,
           1 AS level
    FROM cast_info c
    JOIN aka_name p ON c.person_id = p.person_id
    WHERE c.movie_id IS NOT NULL
    
    UNION ALL
    
    SELECT c.person_id,
           p.name,
           c.movie_id,
           ah.name AS parent_name,
           ah.level + 1
    FROM cast_info c
    JOIN aka_name p ON c.person_id = p.person_id
    JOIN ActorHierarchy ah ON c.movie_id = ah.movie_id
    WHERE ah.person_id IS NOT NULL AND ah.level < 3
),
MovieDetails AS (
    SELECT m.id AS movie_id,
           m.title,
           m.production_year,
           COUNT(DISTINCT c.person_id) AS actor_count,
           STRING_AGG(DISTINCT a.name, ', ') AS actors
    FROM aka_title m
    LEFT JOIN cast_info c ON m.id = c.movie_id
    LEFT JOIN aka_name a ON c.person_id = a.person_id
    WHERE m.production_year > 2000
    GROUP BY m.id, m.title, m.production_year
),
ActorInfo AS (
    SELECT ah.level,
           d.title,
           d.production_year,
           d.actors,
           d.actor_count,
           COUNT(DISTINCT a.person_id) FILTER (WHERE a.gender = 'F') AS female_actors,
           COUNT(DISTINCT a.person_id) FILTER (WHERE a.gender = 'M') AS male_actors
    FROM ActorHierarchy ah
    JOIN MovieDetails d ON ah.movie_id = d.movie_id
    JOIN aka_name a ON ah.person_id = a.person_id
    GROUP BY ah.level, d.title, d.production_year, d.actors, d.actor_count
)
SELECT title,
       production_year,
       actor_count,
       actors,
       female_actors,
       male_actors,
       CASE 
           WHEN male_actors > female_actors THEN 'Male Dominated'
           WHEN female_actors > male_actors THEN 'Female Dominated'
           ELSE 'Balanced'
       END AS gender_balance,
       RANK() OVER (ORDER BY actor_count DESC) AS rank_by_actor_count
FROM ActorInfo
WHERE actor_count > 5
ORDER BY rank_by_actor_count, production_year DESC
LIMIT 10;
