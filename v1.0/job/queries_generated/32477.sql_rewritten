WITH RECURSIVE movie_hierarchy AS (
    
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        1 AS depth,
        CAST(t.title AS VARCHAR(255)) AS hierarchy
    FROM title t

    UNION ALL

    
    SELECT 
        ml.linked_movie_id AS movie_id,
        t.title,
        t.production_year,
        mh.depth + 1 AS depth,
        CAST(mh.hierarchy || ' -> ' || t.title AS VARCHAR(255)) AS hierarchy
    FROM movie_link ml
    JOIN title t ON ml.linked_movie_id = t.id
    JOIN movie_hierarchy mh ON mh.movie_id = ml.movie_id
)

SELECT 
    mh.hierarchy,
    mh.depth,
    COALESCE(ak.name, 'Unknown') AS actor_name,
    kt.keyword AS movie_keyword,
    COUNT(DISTINCT c.id) AS cast_count,
    COUNT(DISTINCT mc.company_id) AS company_count,
    STRING_AGG(DISTINCT c2.name, ', ') AS collaborators
FROM movie_hierarchy mh
LEFT JOIN cast_info c ON c.movie_id = mh.movie_id
LEFT JOIN aka_name ak ON ak.person_id = c.person_id
LEFT JOIN movie_keyword mk ON mh.movie_id = mk.movie_id
LEFT JOIN keyword kt ON mk.keyword_id = kt.id
LEFT JOIN movie_companies mc ON mh.movie_id = mc.movie_id
LEFT JOIN company_name c2 ON mc.company_id = c2.id
WHERE mh.depth < 3 
GROUP BY mh.hierarchy, mh.depth, ak.name, kt.keyword
ORDER BY mh.depth, mh.hierarchy;