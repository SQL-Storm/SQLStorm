
WITH RankedMovies AS (
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.title) AS rank_per_year
    FROM 
        aka_title t
    WHERE 
        t.production_year IS NOT NULL
        AND t.kind_id IN (SELECT id FROM kind_type WHERE kind = 'movie')
),
ActorMovieCount AS (
    SELECT 
        c.person_id,
        COUNT(DISTINCT c.movie_id) AS movie_count,
        AVG(CASE 
            WHEN t.production_year < 2000 THEN 1 
            ELSE NULL 
        END) AS avg_before_2000
    FROM 
        cast_info c
    JOIN 
        aka_title t ON c.movie_id = t.id
    GROUP BY 
        c.person_id
),
TopActors AS (
    SELECT 
        a.name,
        amc.movie_count
    FROM 
        aka_name a
    JOIN 
        ActorMovieCount amc ON a.person_id = amc.person_id
    WHERE 
        amc.movie_count > 20
)
SELECT 
    rm.title,
    rm.production_year,
    ta.name AS top_actor,
    ta.movie_count,
    CASE 
        WHEN rm.rank_per_year <= 5 THEN 'Top 5'
        ELSE 'Beyond Top 5'
    END AS ranking_category
FROM 
    RankedMovies rm
LEFT JOIN 
    cast_info ci ON rm.movie_id = ci.movie_id
LEFT JOIN 
    TopActors ta ON ci.person_id = ta.person_id
WHERE 
    rm.production_year BETWEEN 1990 AND 2020
    AND ta.name IS NOT NULL
ORDER BY 
    rm.production_year, rm.rank_per_year;
