WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        1 AS level
    FROM 
        aka_title mt
    WHERE 
        mt.kind_id IN (SELECT id FROM kind_type WHERE kind = 'movie')
    
    UNION ALL

    SELECT 
        ml.linked_movie_id AS movie_id,
        at.title,
        at.production_year,
        mh.level + 1 AS level
    FROM 
        movie_link ml
    JOIN 
        aka_title at ON ml.movie_id = at.id
    JOIN 
        movie_hierarchy mh ON ml.movie_id = mh.movie_id
)
SELECT 
    a.name AS actor_name,
    at.title AS movie_title,
    at.production_year,
    mh.level AS movie_level,
    ARRAY_AGG(DISTINCT k.keyword) AS keywords,
    COUNT(DISTINCT c.person_id) AS num_cast_members,
    SUM(CASE WHEN mt.info_type_id = (SELECT id FROM info_type WHERE info = 'Budget') THEN CAST(mt.info AS NUMERIC) ELSE 0 END) AS total_budget
FROM 
    cast_info c
JOIN 
    aka_name a ON c.person_id = a.person_id
JOIN 
    aka_title at ON c.movie_id = at.id
LEFT JOIN 
    movie_info mt ON mt.movie_id = at.id
LEFT JOIN 
    movie_keyword mk ON mk.movie_id = at.id
LEFT JOIN 
    keyword k ON mk.keyword_id = k.id
LEFT JOIN 
    movie_hierarchy mh ON mh.movie_id = at.id
WHERE 
    (at.production_year IS NOT NULL AND at.production_year > 2000)
    AND (c.note IS NULL OR c.note NOT LIKE '%uncredited%')
GROUP BY 
    a.name, at.title, at.production_year, mh.level
ORDER BY 
    total_budget DESC, movie_level ASC, actor_name;