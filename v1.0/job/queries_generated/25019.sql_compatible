
WITH RankedMovies AS (
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        COUNT(DISTINCT kc.keyword) AS keyword_count,
        AVG(CASE WHEN s.gender = 'F' THEN 1 ELSE 0 END) AS female_role_ratio,
        AVG(CASE WHEN s.gender = 'M' THEN 1 ELSE 0 END) AS male_role_ratio
    FROM 
        aka_title t
    LEFT JOIN 
        movie_keyword mk ON t.id = mk.movie_id
    LEFT JOIN 
        keyword kc ON mk.keyword_id = kc.id
    LEFT JOIN 
        cast_info ci ON t.id = ci.movie_id
    LEFT JOIN 
        name s ON ci.person_id = s.id
    WHERE 
        t.production_year BETWEEN 1990 AND 2020
    GROUP BY 
        t.id, t.title, t.production_year
    HAVING 
        COUNT(DISTINCT kc.keyword) > 5
)

SELECT 
    rm.movie_id,
    rm.title,
    rm.production_year,
    rm.keyword_count,
    ROUND(rm.female_role_ratio * 100, 2) AS female_role_percentage,
    ROUND(rm.male_role_ratio * 100, 2) AS male_role_percentage,
    STRING_AGG(DISTINCT comp.name ORDER BY comp.name DESC) AS company_names
FROM 
    RankedMovies rm
LEFT JOIN 
    movie_companies mc ON rm.movie_id = mc.movie_id
LEFT JOIN 
    company_name comp ON mc.company_id = comp.id
GROUP BY 
    rm.movie_id, rm.title, rm.production_year, rm.keyword_count, rm.female_role_ratio, rm.male_role_ratio
ORDER BY 
    rm.production_year DESC, rm.keyword_count DESC
LIMIT 50;
