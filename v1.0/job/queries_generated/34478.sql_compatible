
WITH RECURSIVE actor_hierarchy AS (
    SELECT 
        c.person_id,
        a.name AS actor_name,
        1 AS level
    FROM 
        cast_info c
    JOIN 
        aka_name a ON c.person_id = a.person_id
    WHERE 
        c.movie_id = (SELECT id FROM aka_title WHERE title LIKE 'Inception%')  

    UNION ALL

    SELECT 
        c.person_id,
        a.name AS actor_name,
        ah.level + 1
    FROM 
        cast_info c
    JOIN 
        aka_name a ON c.person_id = a.person_id
    JOIN 
        actor_hierarchy ah ON c.movie_id = ah.person_id   
)

SELECT 
    a.actor_name,
    COUNT(DISTINCT ci.movie_id) AS movie_count,
    STRING_AGG(DISTINCT t.title, ', ') AS titles,
    MAX(t.production_year) AS latest_movie_year,
    MIN(t.production_year) AS earliest_movie_year,
    AVG(COALESCE(t.production_year, 0)) AS average_movie_year,
    CASE 
        WHEN MAX(t.production_year) IS NULL THEN 'No movies'
        WHEN MAX(t.production_year) >= 2020 THEN 'Active'
        ELSE 'Inactive' 
    END AS activity_status,
    COUNT(DISTINCT mw.id) FILTER (WHERE mw.keyword = 'thriller') AS thriller_movie_count
FROM 
    actor_hierarchy a
JOIN 
    cast_info ci ON a.person_id = ci.person_id
JOIN 
    aka_title t ON ci.movie_id = t.id
LEFT JOIN 
    movie_keyword mw ON t.id = mw.movie_id
GROUP BY 
    a.actor_name
ORDER BY 
    movie_count DESC
LIMIT 10;
