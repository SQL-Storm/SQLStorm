
WITH RecursiveMovieTitles AS (
    SELECT 
        t.id AS title_id,
        t.title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.title) AS title_rank
    FROM 
        aka_title t
    WHERE 
        t.production_year IS NOT NULL
),
FilteredActors AS (
    SELECT 
        a.id AS actor_id,
        a.name,
        COALESCE(NULLIF(a.imdb_index, ''), 'Unknown') AS actor_imdb_index
    FROM 
        aka_name a
    WHERE 
        a.name NOT LIKE '%Unknown%' AND a.name IS NOT NULL
),
CompanyData AS (
    SELECT 
        c.name AS company_name,
        CASE 
            WHEN ct.kind = 'Distributor' THEN 'Distribution Company'
            ELSE 'Other Company'
        END AS company_type
    FROM 
        company_name c
    JOIN 
        movie_companies mc ON c.id = mc.company_id
    JOIN 
        company_type ct ON mc.company_type_id = ct.id
    WHERE 
        c.country_code IS NOT NULL
),
CastInfoWithRoles AS (
    SELECT 
        ci.movie_id,
        ci.person_id,
        r.role,
        ROW_NUMBER() OVER (PARTITION BY ci.movie_id ORDER BY ci.nr_order) AS role_order
    FROM 
        cast_info ci
    JOIN 
        role_type r ON ci.role_id = r.id
),
MoviesWithKeywords AS (
    SELECT 
        mt.movie_id,
        STRING_AGG(k.keyword, ', ') AS keywords
    FROM 
        movie_keyword mk
    JOIN 
        keyword k ON mk.keyword_id = k.id
    JOIN 
        aka_title mt ON mk.movie_id = mt.movie_id
    GROUP BY 
        mt.movie_id
)
SELECT 
    rmt.title,
    rmt.production_year,
    fa.name AS actor_name,
    fa.actor_imdb_index,
    ck.company_name,
    ck.company_type,
    cwr.role,
    cwr.role_order,
    COALESCE(mkw.keywords, 'No Keywords') AS movie_keywords,
    CASE 
        WHEN rmt.production_year > 2000 THEN 'Modern Era'
        WHEN rmt.production_year BETWEEN 1970 AND 2000 THEN 'Classic Era'
        ELSE 'Old School'
    END AS movie_era
FROM 
    RecursiveMovieTitles rmt
LEFT JOIN 
    CastInfoWithRoles cwr ON rmt.title_id = cwr.movie_id
LEFT JOIN 
    FilteredActors fa ON cwr.person_id = fa.actor_id
LEFT JOIN 
    CompanyData ck ON rmt.title_id IN (
        SELECT 
            mc.movie_id 
        FROM 
            movie_companies mc 
        WHERE 
            mc.movie_id = rmt.title_id
    )
LEFT JOIN 
    MoviesWithKeywords mkw ON rmt.title_id = mkw.movie_id
WHERE 
    rmt.title ILIKE '%adventure%' OR rmt.production_year IS NULL
ORDER BY 
    rmt.production_year DESC,
    rmt.title ASC,
    fa.actor_name ASC
LIMIT 50;
