
WITH RankedMovies AS (
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.title) AS year_rank,
        COUNT(DISTINCT c.person_id) OVER (PARTITION BY t.id) AS cast_count
    FROM 
        aka_title t
    LEFT JOIN 
        cast_info c ON t.id = c.movie_id
    WHERE 
        t.production_year IS NOT NULL
),
GenreStats AS (
    SELECT 
        m.movie_id,
        COUNT(DISTINCT k.keyword) AS genre_count,
        STRING_AGG(DISTINCT k.keyword, ', ') AS genres
    FROM 
        movie_keyword mk
    JOIN 
        keyword k ON mk.keyword_id = k.id
    JOIN 
        RankedMovies m ON mk.movie_id = m.movie_id
    GROUP BY 
        m.movie_id
),
MovieCompanies AS (
    SELECT 
        c.movie_id,
        COUNT(DISTINCT co.id) AS company_count,
        MAX(co.name) AS largest_company_name
    FROM 
        movie_companies c
    JOIN 
        company_name co ON c.company_id = co.id
    GROUP BY 
        c.movie_id
)
SELECT 
    r.movie_id,
    r.title,
    r.production_year,
    r.year_rank,
    COALESCE(gs.genre_count, 0) AS genre_count,
    gs.genres,
    COALESCE(mc.company_count, 0) AS company_count,
    mc.largest_company_name,
    r.cast_count,
    CASE 
        WHEN r.cast_count > 0 THEN 'Active'
        ELSE 'Inactive'
    END AS movie_status
FROM 
    RankedMovies r
LEFT JOIN 
    GenreStats gs ON r.movie_id = gs.movie_id
LEFT JOIN 
    MovieCompanies mc ON r.movie_id = mc.movie_id
WHERE 
    (r.year_rank = 1 OR r.year_rank IS NULL)
    AND r.production_year > 2000
ORDER BY 
    r.production_year DESC, 
    r.title ASC
LIMIT 100;
