WITH RECURSIVE MovieHierarchy AS (
    
    SELECT mt.id AS movie_id, 
           mt.title, 
           mt.production_year, 
           1 AS level
    FROM aka_title mt
    WHERE mt.production_year > 2000  

    UNION ALL

    
    SELECT ml.linked_movie_id AS movie_id,
           at.title,
           at.production_year,
           mh.level + 1
    FROM MovieHierarchy mh
    JOIN movie_link ml ON mh.movie_id = ml.movie_id
    JOIN aka_title at ON ml.linked_movie_id = at.id
)


SELECT 
    ak.name AS actor_name,
    at.title AS movie_title,
    mh.production_year,
    ct.kind AS company_type,
    COUNT(DISTINCT mc.company_id) AS num_companies,
    AVG(pi.info_length) AS avg_info_length,
    MAX(CASE WHEN pi.info IS NULL THEN 1 ELSE 0 END) AS has_null_info
FROM 
    MovieHierarchy mh
JOIN 
    complete_cast cc ON mh.movie_id = cc.movie_id
JOIN 
    cast_info ci ON ci.movie_id = mh.movie_id
JOIN 
    aka_name ak ON ak.person_id = ci.person_id
LEFT JOIN 
    movie_companies mc ON mc.movie_id = mh.movie_id
LEFT JOIN 
    company_type ct ON mc.company_type_id = ct.id
LEFT JOIN 
    movie_info mi ON mh.movie_id = mi.movie_id

LEFT JOIN 
    (SELECT movie_id, 
            LENGTH(info) AS info_length
     FROM movie_info
     WHERE info IS NOT NULL) pi ON pi.movie_id = mh.movie_id
WHERE 
    ak.name IS NOT NULL
GROUP BY 
    ak.name, at.title, mh.production_year, ct.kind
ORDER BY 
    num_companies DESC, avg_info_length DESC;