WITH RankedTitles AS (
    SELECT 
        a.title,
        a.production_year,
        a.kind_id,
        COUNT(DISTINCT ci.person_id) AS cast_count,
        ROW_NUMBER() OVER (PARTITION BY a.kind_id ORDER BY a.production_year DESC) AS rank
    FROM 
        aka_title a
    LEFT JOIN 
        cast_info ci ON a.movie_id = ci.movie_id
    GROUP BY 
        a.id, a.title, a.production_year, a.kind_id
),
MovieKeywords AS (
    SELECT 
        mk.movie_id,
        STRING_AGG(k.keyword, ', ') AS keywords
    FROM 
        movie_keyword mk
    JOIN 
        keyword k ON mk.keyword_id = k.id
    GROUP BY 
        mk.movie_id
),
FilteredMovies AS (
    SELECT 
        rt.title,
        rt.production_year,
        mk.keywords,
        rt.cast_count
    FROM 
        RankedTitles rt
    LEFT JOIN 
        MovieKeywords mk ON rt.title = mk.movie_id
    WHERE 
        rt.rank <= 5 AND 
        (rt.cast_count > 5 OR rt.production_year >= 2000)
),
TopCompanies AS (
    SELECT 
        mc.movie_id,
        GROUP_CONCAT(DISTINCT cn.name ORDER BY cn.name SEPARATOR ', ') AS company_names
    FROM 
        movie_companies mc
    JOIN 
        company_name cn ON mc.company_id = cn.id
    WHERE 
        cn.country_code IS NOT NULL
    GROUP BY 
        mc.movie_id
)
SELECT 
    fm.title,
    fm.production_year,
    fm.keywords,
    fm.cast_count,
    COALESCE(tc.company_names, 'No companies') AS company_names
FROM 
    FilteredMovies fm
LEFT JOIN 
    TopCompanies tc ON fm.title = tc.movie_id
WHERE 
    fm.production_year IS NOT NULL
ORDER BY 
    fm.production_year DESC, 
    fm.cast_count DESC
LIMIT 100 OFFSET 0;