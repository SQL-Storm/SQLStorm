
WITH RankedTitles AS (
    SELECT 
        t.title, 
        t.production_year, 
        k.keyword,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.production_year DESC) AS year_rank
    FROM title t
    JOIN movie_keyword mk ON t.id = mk.movie_id
    JOIN keyword k ON mk.keyword_id = k.id
),
ActorInfo AS (
    SELECT 
        a.name AS actor_name,
        COUNT(DISTINCT ci.movie_id) AS movie_count,
        AVG(CASE WHEN ci.nr_order IS NULL THEN 0 ELSE ci.nr_order END) AS avg_order
    FROM aka_name a
    JOIN cast_info ci ON a.person_id = ci.person_id
    GROUP BY a.name
),
MovieCompanyInfo AS (
    SELECT 
        mc.movie_id,
        STRING_AGG(DISTINCT cn.name, ', ') AS company_names,
        STRING_AGG(DISTINCT ct.kind, ', ') AS company_types
    FROM movie_companies mc
    JOIN company_name cn ON mc.company_id = cn.id
    JOIN company_type ct ON mc.company_type_id = ct.id
    GROUP BY mc.movie_id
),
FinalReport AS (
    SELECT 
        rt.title,
        rt.production_year,
        ai.actor_name,
        ai.movie_count,
        ai.avg_order,
        mci.company_names,
        mci.company_types
    FROM RankedTitles rt
    LEFT JOIN ActorInfo ai ON rt.title = ai.actor_name
    LEFT JOIN MovieCompanyInfo mci ON rt.title = mci.movie_id
    WHERE rt.year_rank <= 5
)
SELECT 
    title,
    production_year,
    actor_name,
    COALESCE(movie_count, 0) AS movie_participation,
    COALESCE(avg_order::TEXT, 'N/A') AS average_order,
    COALESCE(company_names, 'No Companies') AS companies,
    COALESCE(company_types, 'No Types') AS types
FROM FinalReport
ORDER BY production_year DESC, title;
