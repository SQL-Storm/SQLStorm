
WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        m.id AS movie_id,
        m.title,
        m.production_year,
        COALESCE(mk.keyword, 'No Keywords') AS keyword,
        m.kind_id,
        ROW_NUMBER() OVER (PARTITION BY m.id ORDER BY COALESCE(mk.keyword, 'No Keywords')) AS keyword_rank
    FROM
        aka_title m
    LEFT JOIN
        movie_keyword mk ON m.id = mk.movie_id
),
ActorRoles AS (
    SELECT 
        c.movie_id,
        a.name AS actor_name,
        r.role AS role_type,
        COUNT(c.id) AS num_roles
    FROM
        cast_info c
    JOIN
        aka_name a ON c.person_id = a.person_id
    JOIN
        role_type r ON c.role_id = r.id
    WHERE
        c.nr_order IS NOT NULL
    GROUP BY 
        c.movie_id, a.name, r.role
),
CompanyDetails AS (
    SELECT 
        mc.movie_id,
        cn.name AS company_name,
        ct.kind AS company_type,
        ROW_NUMBER() OVER (PARTITION BY mc.movie_id ORDER BY cn.name) AS company_rank
    FROM
        movie_companies mc
    JOIN
        company_name cn ON mc.company_id = cn.id
    JOIN
        company_type ct ON mc.company_type_id = ct.id
),
MovieReview AS (
    SELECT 
        m.id AS movie_id,
        m.title,
        COUNT(DISTINCT r.id) AS review_count,
        AVG(CASE WHEN r.info IS NOT NULL THEN 1 ELSE 0 END) AS avg_rating
    FROM 
        title m
    LEFT JOIN 
        movie_info r ON m.id = r.movie_id AND r.info_type_id = (SELECT id FROM info_type WHERE info = 'Review')
    GROUP BY 
        m.id
)
SELECT 
    mh.title,
    mh.production_year,
    mh.keyword,
    ar.actor_name,
    ar.role_type,
    cd.company_name,
    cd.company_type,
    mr.review_count,
    mr.avg_rating,
    COALESCE(ar.num_roles, 0) AS total_roles,
    CASE 
        WHEN mr.avg_rating IS NULL THEN 'No Reviews'
        ELSE 'Rated' 
    END AS review_status
FROM
    MovieHierarchy mh
LEFT JOIN
    ActorRoles ar ON mh.movie_id = ar.movie_id
LEFT JOIN
    CompanyDetails cd ON mh.movie_id = cd.movie_id
LEFT JOIN
    MovieReview mr ON mh.movie_id = mr.movie_id
WHERE 
    mh.keyword_rank = 1
    AND (ar.num_roles > 0 OR ar.num_roles IS NULL)
ORDER BY 
    mh.production_year DESC,
    mh.title ASC,
    ar.actor_name ASC
LIMIT 50;
