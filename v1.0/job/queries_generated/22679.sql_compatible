
WITH RankedMovies AS (
    SELECT 
        t.id AS movie_id,
        t.title,
        CAST(m.production_year AS INTEGER) AS production_year,
        ROW_NUMBER() OVER (PARTITION BY m.production_year ORDER BY t.title) AS title_rank,
        COUNT(DISTINCT c.id) OVER (PARTITION BY t.id) AS cast_count
    FROM 
        aka_title t
    LEFT JOIN 
        complete_cast m ON t.id = m.movie_id
    LEFT JOIN 
        cast_info c ON m.subject_id = c.person_id
    WHERE 
        m.production_year IS NOT NULL
),
KeywordStats AS (
    SELECT 
        mk.movie_id,
        COUNT(mk.keyword_id) AS keyword_count,
        STRING_AGG(DISTINCT k.keyword, ', ') AS keywords
    FROM 
        movie_keyword mk
    JOIN 
        keyword k ON mk.keyword_id = k.id
    GROUP BY 
        mk.movie_id
),
CompanyDetails AS (
    SELECT 
        mc.movie_id,
        GROUP_CONCAT(DISTINCT cn.name) AS companies,
        MIN(ct.kind) AS company_type
    FROM 
        movie_companies mc
    JOIN 
        company_name cn ON mc.company_id = cn.id
    JOIN 
        company_type ct ON mc.company_type_id = ct.id
    GROUP BY 
        mc.movie_id
)
SELECT 
    rm.movie_id,
    rm.title,
    rm.production_year,
    rm.title_rank,
    rm.cast_count,
    COALESCE(ks.keyword_count, 0) AS keyword_count,
    COALESCE(ks.keywords, 'No keywords') AS keywords,
    COALESCE(cd.companies, 'No companies') AS companies,
    CASE 
        WHEN rm.title_rank = 1 THEN 'Top Movie of the Year'
        ELSE 'Other Movie'
    END AS ranking_category
FROM 
    RankedMovies rm
LEFT JOIN 
    KeywordStats ks ON rm.movie_id = ks.movie_id
LEFT JOIN 
    CompanyDetails cd ON rm.movie_id = cd.movie_id
WHERE 
    rm.production_year > 2000
    AND (rm.cast_count > 5 OR ks.keyword_count IS NULL)
ORDER BY 
    rm.production_year DESC, rm.title_rank;
