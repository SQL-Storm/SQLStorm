WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        1 AS level
    FROM 
        aka_title mt
    WHERE 
        mt.production_year BETWEEN 1990 AND 2020

    UNION ALL

    SELECT 
        ml.linked_movie_id AS movie_id,
        at.title,
        at.production_year,
        mh.level + 1
    FROM 
        MovieHierarchy mh
    JOIN 
        movie_link ml ON mh.movie_id = ml.movie_id
    JOIN 
        aka_title at ON ml.linked_movie_id = at.id
    WHERE 
        mh.level < 3  
)

SELECT 
    ak.name AS actor_name,
    mt.title AS movie_title,
    mh.production_year,
    COUNT(cc.id) AS total_casts,
    STRING_AGG(DISTINCT kw.keyword, ', ') AS keywords,
    SUM(CASE WHEN pi.info_type_id = 1 THEN 1 ELSE 0 END) AS total_awards,
    ROW_NUMBER() OVER (PARTITION BY ak.name ORDER BY mh.production_year DESC) AS rn
FROM 
    ak_name ak
JOIN 
    cast_info cc ON ak.person_id = cc.person_id
JOIN 
    MovieHierarchy mh ON cc.movie_id = mh.movie_id
LEFT JOIN 
    movie_keyword mk ON mh.movie_id = mk.movie_id
LEFT JOIN 
    keyword kw ON mk.keyword_id = kw.id
LEFT JOIN 
    person_info pi ON ak.person_id = pi.person_id AND pi.info_type_id = 1
WHERE 
    mh.level = 1 AND 
    (ak.name IS NOT NULL AND ak.name <> '') AND 
    (pi.info IS NULL OR pi.info LIKE '%Academy%')
GROUP BY 
    ak.name, mt.title, mh.production_year
HAVING 
    COUNT(cc.id) > 1
ORDER BY 
    total_casts DESC, mh.production_year DESC;