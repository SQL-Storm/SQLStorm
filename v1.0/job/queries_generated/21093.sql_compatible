
WITH RECURSIVE movie_hierarchy AS (
    SELECT
        mt.id AS movie_id,
        mt.title AS movie_title,
        mt.production_year,
        ARRAY[mt.title] AS title_path,
        0 AS level
    FROM
        aka_title mt
    WHERE
        mt.production_year IS NOT NULL
    UNION ALL
    SELECT
        ml.linked_movie_id,
        at.title,
        at.production_year,
        mh.title_path || at.title,
        mh.level + 1
    FROM
        movie_link ml
    JOIN
        aka_title at ON ml.linked_movie_id = at.id
    JOIN
        movie_hierarchy mh ON ml.movie_id = mh.movie_id
),
movie_cast AS (
    SELECT
        ci.movie_id,
        a.name AS actor_name,
        RANK() OVER (PARTITION BY ci.movie_id ORDER BY ci.nr_order) AS actor_rank,
        COUNT(*) OVER (PARTITION BY ci.movie_id) AS total_cast_count
    FROM
        cast_info ci
    JOIN
        aka_name a ON ci.person_id = a.person_id
),
company_info AS (
    SELECT
        mc.movie_id,
        STRING_AGG(DISTINCT cn.name, ', ' ORDER BY cn.name) AS companies,
        COALESCE(SUM(CASE WHEN ct.kind LIKE '%Production%' THEN 1 ELSE 0 END), 0) AS production_company_count
    FROM
        movie_companies mc
    JOIN
        company_name cn ON mc.company_id = cn.id
    JOIN
        company_type ct ON mc.company_type_id = ct.id
    GROUP BY
        mc.movie_id
)
SELECT
    mh.movie_id,
    mh.movie_title,
    mh.production_year,
    mc.actor_name,
    mc.actor_rank,
    ci.companies,
    ci.production_company_count,
    (SELECT COUNT(*) FROM movie_keyword mk 
     WHERE mk.movie_id = mh.movie_id 
       AND mk.keyword_id IN (SELECT id FROM keyword WHERE keyword LIKE '%Action%')) AS action_keyword_count,
    CASE 
        WHEN ci.production_company_count > 0 THEN 'Production company exists'
        ELSE NULL
    END AS company_status,
    CASE 
        WHEN mc.total_cast_count IS NOT NULL AND mc.total_cast_count > 5 THEN 'Large cast'
        WHEN mc.total_cast_count IS NULL THEN 'Unknown cast size'
        ELSE 'Small cast'
    END AS cast_size
FROM
    movie_hierarchy mh
LEFT JOIN
    movie_cast mc ON mh.movie_id = mc.movie_id
LEFT JOIN
    company_info ci ON mh.movie_id = ci.movie_id
WHERE
    mh.production_year = (SELECT MAX(production_year) FROM aka_title)
    AND mh.level < 3
ORDER BY
    mh.movie_title,
    mc.actor_rank NULLS LAST,
    ci.production_company_count DESC;
