
WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        mt.id AS movie_id, 
        mt.title, 
        mt.production_year, 
        1 AS level
    FROM aka_title mt
    WHERE mt.kind_id = (SELECT id FROM kind_type WHERE kind = 'movie') 
    UNION ALL
    SELECT 
        ml.linked_movie_id AS movie_id, 
        at.title, 
        at.production_year, 
        mh.level + 1 AS level
    FROM movie_link ml
    JOIN aka_title at ON ml.linked_movie_id = at.id
    JOIN movie_hierarchy mh ON ml.movie_id = mh.movie_id
), 

cast_summary AS (
    SELECT 
        ci.movie_id,
        COUNT(DISTINCT ci.person_id) AS total_cast,
        SUM(CASE WHEN ci.nr_order IS NOT NULL THEN 1 ELSE 0 END) AS named_cast
    FROM cast_info ci
    GROUP BY ci.movie_id
),

keyword_summary AS (
    SELECT 
        mk.movie_id,
        STRING_AGG(DISTINCT k.keyword, ', ') AS keywords
    FROM movie_keyword mk
    JOIN keyword k ON mk.keyword_id = k.id
    GROUP BY mk.movie_id
),

movie_info_summary AS (
    SELECT 
        mi.movie_id,
        STRING_AGG(DISTINCT mi.info, '; ') AS movie_infos
    FROM movie_info mi
    GROUP BY mi.movie_id
)

SELECT 
    mh.movie_id,
    mh.title,
    mh.production_year,
    COALESCE(cs.total_cast, 0) AS total_cast,
    COALESCE(cs.named_cast, 0) AS named_cast,
    COALESCE(ks.keywords, 'No Keywords') AS keywords,
    COALESCE(mis.movie_infos, 'No Additional Info') AS movie_infos,
    COUNT(DISTINCT ci.person_id) OVER (PARTITION BY mh.movie_id) AS distinct_persons,
    CASE 
        WHEN mh.level > 1 THEN 'Linked Movie'
        ELSE 'Primary Movie' 
    END AS movie_type
FROM movie_hierarchy mh
LEFT JOIN cast_summary cs ON mh.movie_id = cs.movie_id
LEFT JOIN keyword_summary ks ON mh.movie_id = ks.movie_id
LEFT JOIN movie_info_summary mis ON mh.movie_id = mis.movie_id
LEFT JOIN cast_info ci ON mh.movie_id = ci.movie_id
WHERE mh.production_year >= 2000
GROUP BY 
    mh.movie_id, 
    mh.title, 
    mh.production_year, 
    cs.total_cast, 
    cs.named_cast, 
    ks.keywords, 
    mis.movie_infos, 
    mh.level
ORDER BY mh.production_year DESC, mh.title;
