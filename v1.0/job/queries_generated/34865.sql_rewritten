WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        1 AS level
    FROM 
        aka_title mt
    WHERE
        mt.production_year IS NOT NULL
        
    UNION ALL
    
    SELECT 
        ml.linked_movie_id,
        at.title,
        at.production_year,
        mh.level + 1
    FROM 
        movie_link ml
    JOIN 
        aka_title at ON ml.linked_movie_id = at.id
    JOIN 
        movie_hierarchy mh ON ml.movie_id = mh.movie_id
)
SELECT
    ak.name AS actor_name,
    mt.title AS movie_title,
    mh.production_year AS movie_year,
    DENSE_RANK() OVER (PARTITION BY ak.id ORDER BY mh.level) AS rank_level,
    COUNT(DISTINCT c.movie_id) OVER (PARTITION BY ak.id) AS total_movies,
    STRING_AGG(DISTINCT k.keyword, ', ') AS keywords
FROM 
    aka_name ak
JOIN 
    cast_info c ON ak.person_id = c.person_id
LEFT JOIN 
    movie_hierarchy mh ON c.movie_id = mh.movie_id
LEFT JOIN 
    movie_keyword mk ON c.movie_id = mk.movie_id
LEFT JOIN 
    keyword k ON mk.keyword_id = k.id
WHERE 
    ak.name IS NOT NULL 
    AND mh.production_year >= 2000
    AND (ak.name LIKE 'A%' OR ak.name LIKE 'B%')
GROUP BY 
    ak.id, mt.title, mh.production_year
HAVING 
    COUNT(DISTINCT k.id) > 1
ORDER BY 
    ak.name, rank_level DESC;