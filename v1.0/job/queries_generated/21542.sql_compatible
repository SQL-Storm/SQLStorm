
WITH RankedTitles AS (
    SELECT 
        a.person_id,
        t.title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY a.person_id ORDER BY t.production_year DESC) AS title_rank,
        t.movie_id
    FROM 
        aka_name a
    JOIN 
        cast_info c ON a.person_id = c.person_id
    JOIN 
        aka_title t ON c.movie_id = t.movie_id
    WHERE 
        t.production_year IS NOT NULL
),
CompanyTitles AS (
    SELECT 
        mc.movie_id,
        STRING_AGG(DISTINCT cn.name, ', ') AS company_names,
        COUNT(DISTINCT mc.company_id) AS total_companies
    FROM 
        movie_companies mc
    JOIN 
        company_name cn ON mc.company_id = cn.id
    GROUP BY 
        mc.movie_id
),
TitleKeywords AS (
    SELECT 
        mt.movie_id,
        STRING_AGG(DISTINCT k.keyword, ', ') AS keywords
    FROM 
        movie_keyword mk
    JOIN 
        keyword k ON mk.keyword_id = k.id
    JOIN 
        aka_title mt ON mk.movie_id = mt.movie_id
    GROUP BY 
        mt.movie_id
),
FinalResults AS (
    SELECT 
        rt.person_id,
        rt.title,
        rt.production_year,
        ct.company_names,
        tk.keywords,
        CASE 
            WHEN rt.production_year < 2000 THEN 'Classic'
            WHEN rt.production_year BETWEEN 2000 AND 2010 THEN 'Modern'
            ELSE 'Recent'
        END AS period,
        COALESCE(NULLIF(tk.keywords, ''), 'No Keywords') AS keyword_status
    FROM 
        RankedTitles rt
    LEFT JOIN 
        CompanyTitles ct ON rt.movie_id = ct.movie_id
    LEFT JOIN 
        TitleKeywords tk ON rt.movie_id = tk.movie_id
)
SELECT 
    fr.*,
    COUNT(*) OVER (PARTITION BY fr.period) AS count_by_period,
    MAX(fr.production_year) OVER (PARTITION BY fr.person_id) AS max_year_per_person
FROM 
    FinalResults fr
WHERE 
    fr.keyword_status IS NOT NULL
ORDER BY 
    fr.period DESC, fr.production_year DESC;
