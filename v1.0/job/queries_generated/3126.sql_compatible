
WITH RankedMovies AS (
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.title) AS rank
    FROM 
        aka_title t
    WHERE 
        t.production_year IS NOT NULL
),
MovieDetails AS (
    SELECT 
        m.movie_id,
        m.title,
        m.production_year,
        COALESCE(k.keyword, 'No Keyword') AS keyword,
        c.name AS company_name,
        p.info AS director_info
    FROM 
        RankedMovies m
    LEFT JOIN 
        movie_keyword mk ON m.movie_id = mk.movie_id
    LEFT JOIN 
        keyword k ON mk.keyword_id = k.id
    LEFT JOIN 
        movie_companies mc ON m.movie_id = mc.movie_id
    LEFT JOIN 
        company_name c ON mc.company_id = c.id
    LEFT JOIN 
        movie_info mi ON m.movie_id = mi.movie_id
    LEFT JOIN 
        info_type it ON mi.info_type_id = it.id
    LEFT JOIN 
        person_info p ON p.info_type_id = it.id
    WHERE 
        c.country_code IS NOT NULL
),
FinalResults AS (
    SELECT 
        md.movie_id,
        md.title,
        md.production_year,
        md.keyword,
        md.company_name,
        md.director_info,
        COUNT(*) OVER (PARTITION BY md.production_year) AS total_movies_per_year,
        ROW_NUMBER() OVER (PARTITION BY md.production_year ORDER BY md.title) AS rank
    FROM 
        MovieDetails md
)
SELECT 
    fr.*,
    (CASE 
        WHEN fr.director_info LIKE '%Academy%' THEN 'Award-Winning' 
        ELSE 'Non-Award-Winning' 
    END) AS movie_quality
FROM 
    FinalResults fr
WHERE 
    fr.rank <= 5
ORDER BY 
    fr.production_year DESC, fr.title;
