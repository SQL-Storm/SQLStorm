
WITH RECURSIVE MovieHierarchy AS (
    SELECT
        m.id AS movie_id,
        m.title,
        m.production_year,
        1 AS level
    FROM
        aka_title m
    WHERE
        m.production_year >= 2000

    UNION ALL

    SELECT
        m.id AS movie_id,
        m.title,
        m.production_year,
        mh.level + 1 AS level
    FROM
        aka_title m
    JOIN MovieHierarchy mh ON m.episode_of_id = mh.movie_id
),
ActorDetails AS (
    SELECT
        a.person_id,
        ak.name AS actor_name,
        COUNT(DISTINCT ci.movie_id) AS film_count
    FROM
        cast_info ci
    JOIN
        aka_name ak ON ci.person_id = ak.person_id
    GROUP BY
        a.person_id, ak.name
),
MoviesWithKeywords AS (
    SELECT
        m.id AS movie_id,
        m.title,
        STRING_AGG(k.keyword, ', ') AS keywords
    FROM
        aka_title m
    JOIN
        movie_keyword mk ON m.id = mk.movie_id
    JOIN
        keyword k ON mk.keyword_id = k.id
    GROUP BY
        m.id, m.title
)
SELECT
    mh.movie_id,
    mh.title,
    mh.production_year,
    ad.actor_name,
    ad.film_count,
    mwk.keywords,
    ROW_NUMBER() OVER (PARTITION BY mh.production_year ORDER BY mh.title) AS rank_in_year
FROM
    MovieHierarchy mh
LEFT JOIN
    ActorDetails ad ON (ad.film_count > 0 OR ad.person_id IS NULL)
LEFT JOIN
    MoviesWithKeywords mwk ON mwk.movie_id = mh.movie_id
WHERE
    mh.level <= 3
    AND (mh.production_year < 2023 OR mwk.keywords IS NOT NULL)
ORDER BY
    mh.production_year DESC,
    rank_in_year;
