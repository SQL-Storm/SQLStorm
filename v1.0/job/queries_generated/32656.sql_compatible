
WITH RECURSIVE MovieCTE AS (
    SELECT
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        1 AS depth
    FROM
        aka_title mt
    WHERE
        mt.production_year BETWEEN 2000 AND 2020
        AND mt.kind_id IN (SELECT id FROM kind_type WHERE kind = 'movie')

    UNION ALL

    SELECT
        ml.linked_movie_id,
        at.title,
        at.production_year,
        m.depth + 1
    FROM
        movie_link ml
    JOIN
        aka_title at ON ml.linked_movie_id = at.id
    JOIN
        MovieCTE m ON ml.movie_id = m.movie_id
    WHERE
        at.production_year BETWEEN 2000 AND 2020
)

SELECT
    a.name AS actor_name,
    m.title AS movie_title,
    COUNT(DISTINCT c.person_id) AS total_cast,
    SUM(CASE WHEN ci.nr_order IS NOT NULL THEN 1 ELSE 0 END) AS lead_roles,
    MAX(m.production_year) AS last_year,
    STRING_AGG(DISTINCT co.name, ', ') AS companies,
    ROW_NUMBER() OVER (PARTITION BY a.name ORDER BY COUNT(DISTINCT c.person_id) DESC) AS actor_rank
FROM
    cast_info ci
JOIN
    aka_name a ON ci.person_id = a.person_id
JOIN
    MovieCTE m ON ci.movie_id = m.movie_id
LEFT JOIN
    movie_companies mc ON m.movie_id = mc.movie_id
LEFT JOIN
    company_name co ON mc.company_id = co.id
WHERE
    a.name IS NOT NULL
    AND a.name <> ''
GROUP BY
    a.name, m.title
HAVING
    COUNT(DISTINCT c.person_id) > 0
ORDER BY
    actor_rank, m.title;
