WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        mt.kind_id,
        0 AS level
    FROM 
        aka_title AS mt
    WHERE 
        mt.production_year BETWEEN 2000 AND 2023
    
    UNION ALL
    
    SELECT 
        ml.linked_movie_id AS movie_id,
        at.title,
        at.production_year,
        at.kind_id,
        mh.level + 1
    FROM 
        movie_link AS ml
    JOIN 
        aka_title AS at ON ml.linked_movie_id = at.id
    JOIN 
        MovieHierarchy AS mh ON ml.movie_id = mh.movie_id
)

SELECT 
    mh.movie_id,
    mh.title,
    mh.production_year,
    COUNT(DISTINCT ca.person_id) AS actor_count,
    STRING_AGG(DISTINCT cn.name, ', ') AS co_actors,
    SUM(CASE WHEN mi.info_type_id IS NOT NULL THEN 1 ELSE 0 END) AS info_count,
    AVG(CASE WHEN cn.gender = 'F' THEN 1.0 ELSE NULL END) AS female_actor_ratio,
    MAX(CASE WHEN mr.note IS NULL THEN 'No Note' ELSE mr.note END) AS movie_note,
    ROW_NUMBER() OVER (PARTITION BY mh.production_year ORDER BY mh.title) AS rn
FROM 
    MovieHierarchy AS mh
LEFT JOIN 
    complete_cast AS cc ON mh.movie_id = cc.movie_id
LEFT JOIN 
    cast_info AS ca ON cc.subject_id = ca.person_id
LEFT JOIN 
    name AS cn ON ca.person_id = cn.imdb_id
LEFT JOIN 
    movie_info mi ON mh.movie_id = mi.movie_id
LEFT JOIN 
    movie_info_idx AS miidx ON mh.movie_id = miidx.movie_id
LEFT JOIN 
    movie_companies AS mc ON mh.movie_id = mc.movie_id
LEFT JOIN 
    movie_link AS ml ON mh.movie_id = ml.movie_id
LEFT JOIN 
    movie_info AS mr ON mh.movie_id = mr.movie_id AND mr.info_type_id = (SELECT id FROM info_type WHERE info = 'note' LIMIT 1)
WHERE 
    mh.level <= 2
GROUP BY 
    mh.movie_id, mh.title, mh.production_year
HAVING 
    COUNT(DISTINCT ca.person_id) > 2 AND
    AVG(CASE WHEN cn.gender = 'F' THEN 1 ELSE NULL END) > 0.5
ORDER BY 
    mh.production_year DESC, rn
LIMIT 100;