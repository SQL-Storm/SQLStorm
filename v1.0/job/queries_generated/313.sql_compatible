
WITH RankedMovies AS (
    SELECT
        t.title,
        t.production_year,
        COUNT(c.person_id) OVER (PARTITION BY t.id) AS cast_count,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY COUNT(c.person_id) DESC) AS rank
    FROM
        aka_title t
    LEFT JOIN
        cast_info c ON t.id = c.movie_id
    WHERE
        t.production_year IS NOT NULL
        AND t.production_year > 2000
),
TopMovies AS (
    SELECT
        title,
        production_year,
        cast_count
    FROM
        RankedMovies
    WHERE
        rank <= 5
),
MovieKeywords AS (
    SELECT
        m.title,
        STRING_AGG(k.keyword, ', ') AS keywords
    FROM
        TopMovies m
    LEFT JOIN
        movie_keyword mk ON m.title = mk.movie_id
    LEFT JOIN
        keyword k ON mk.keyword_id = k.id
    GROUP BY
        m.title, m.production_year
)
SELECT
    tm.title,
    tm.production_year,
    COALESCE(tm.cast_count, 0) AS total_cast,
    COALESCE(mk.keywords, 'No keywords') AS keywords,
    CASE
        WHEN tm.production_year < 2010 THEN 'Old'
        ELSE 'New'
    END AS era
FROM
    TopMovies tm
LEFT JOIN
    MovieKeywords mk ON tm.title = mk.title
ORDER BY
    tm.production_year DESC,
    total_cast DESC;
