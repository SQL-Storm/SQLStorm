
WITH RECURSIVE title_hierarchy AS (
    SELECT t.id, t.title, t.production_year, t.episode_of_id, 
           1 AS level
    FROM aka_title t
    WHERE t.episode_of_id IS NULL
    UNION ALL
    SELECT t.id, t.title, t.production_year, t.episode_of_id, 
           th.level + 1 AS level
    FROM aka_title t
    INNER JOIN title_hierarchy th ON t.episode_of_id = th.id
),
movie_stats AS (
    SELECT 
        t.id AS movie_id,
        COUNT(ci.person_id) AS num_cast,
        STRING_AGG(DISTINCT a.name, ', ') AS cast_names,
        MAX(t.production_year) AS latest_year
    FROM title t
    LEFT JOIN cast_info ci ON t.id = ci.movie_id
    LEFT JOIN aka_name a ON ci.person_id = a.person_id
    GROUP BY t.id
),
company_stats AS (
    SELECT
        mc.movie_id,
        COUNT(DISTINCT c.id) AS company_count,
        STRING_AGG(DISTINCT cn.name, ', ') AS company_names
    FROM movie_companies mc
    LEFT JOIN company_name cn ON mc.company_id = cn.id
    GROUP BY mc.movie_id
)
SELECT 
    th.title, 
    th.production_year,
    COALESCE(ms.num_cast, 0) AS num_cast,
    COALESCE(ms.cast_names, 'No Cast') AS cast_names,
    COALESCE(cs.company_count, 0) AS company_count,
    COALESCE(cs.company_names, 'No Companies') AS company_names,
    th.level
FROM title_hierarchy th
LEFT JOIN movie_stats ms ON th.id = ms.movie_id
LEFT JOIN company_stats cs ON th.id = cs.movie_id
WHERE th.production_year IS NOT NULL
ORDER BY th.production_year DESC, th.level, th.title;
