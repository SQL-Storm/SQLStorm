
WITH ranked_movies AS (
    SELECT 
        a.id AS movie_id,
        a.title,
        a.production_year,
        ROW_NUMBER() OVER (PARTITION BY a.production_year ORDER BY a.title) AS rank_in_year
    FROM 
        aka_title a
    WHERE 
        a.production_year IS NOT NULL
),
actor_roles AS (
    SELECT 
        c.movie_id,
        k.keyword AS role_keyword,
        r.role AS actor_role,
        COUNT(c.person_id) AS actor_count
    FROM 
        cast_info c
    JOIN 
        role_type r ON r.id = c.person_role_id
    JOIN 
        movie_keyword mk ON mk.movie_id = c.movie_id
    JOIN 
        keyword k ON k.id = mk.keyword_id
    GROUP BY 
        c.movie_id, k.keyword, r.role
),
top_actors AS (
    SELECT 
        movie_id,
        actor_role,
        SUM(actor_count) AS total_actors
    FROM 
        actor_roles
    GROUP BY 
        movie_id, actor_role
    HAVING 
        SUM(actor_count) > 1
),
movie_details AS (
    SELECT 
        m.movie_id,
        m.title,
        m.production_year,
        t.kind AS movie_type,
        co.name AS company_name,
        t.season_nr,
        t.episode_nr,
        ta.actor_role,
        ta.total_actors
    FROM 
        ranked_movies m
    LEFT JOIN 
        movie_companies mc ON mc.movie_id = m.movie_id
    LEFT JOIN 
        company_name co ON co.id = mc.company_id
    LEFT JOIN 
        title t ON t.id = m.movie_id
    LEFT JOIN 
        top_actors ta ON ta.movie_id = m.movie_id
)
SELECT 
    md.title,
    md.production_year,
    md.movie_type,
    md.company_name,
    md.actor_role,
    md.total_actors,
    COUNT(DISTINCT ak.name) AS alias_count
FROM 
    movie_details md
LEFT JOIN 
    aka_name ak ON ak.person_id IN (SELECT id FROM name WHERE name = md.actor_role)
GROUP BY 
    md.title, md.production_year, md.movie_type, md.company_name, md.actor_role, md.total_actors
ORDER BY 
    md.production_year DESC, alias_count DESC;
