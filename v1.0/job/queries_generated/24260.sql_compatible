
WITH RankedMovies AS (
    SELECT 
        t.id AS title_id,
        t.title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.id) AS rn,
        COUNT(DISTINCT c.person_id) OVER (PARTITION BY t.id) AS cast_count
    FROM 
        aka_title t
    LEFT JOIN 
        cast_info c ON t.id = c.movie_id
    WHERE 
        t.production_year IS NOT NULL
),
MoviesWithKeywords AS (
    SELECT 
        rm.title_id, 
        rm.title, 
        rm.production_year, 
        STRING_AGG(DISTINCT k.keyword, ', ') AS keywords
    FROM 
        RankedMovies rm
    LEFT JOIN 
        movie_keyword mk ON rm.title_id = mk.movie_id
    LEFT JOIN 
        keyword k ON mk.keyword_id = k.id
    GROUP BY 
        rm.title_id, rm.title, rm.production_year
),
FinalMovies AS (
    SELECT 
        mwk.title_id,
        mwk.title,
        mwk.production_year,
        mwk.keywords,
        CASE 
            WHEN rm.cast_count > 10 THEN 'Large Cast'
            WHEN rm.cast_count BETWEEN 5 AND 10 THEN 'Medium Cast'
            ELSE 'Small Cast'
        END AS cast_size
    FROM 
        MoviesWithKeywords mwk
    JOIN 
        RankedMovies rm ON mwk.title_id = rm.title_id
    WHERE 
        rm.cast_count IS NOT NULL
)
SELECT 
    fm.title,
    fm.production_year,
    fm.keywords,
    fm.cast_size
FROM 
    FinalMovies fm
WHERE 
    (fm.keywords IS NOT NULL AND fm.keywords != '')
    OR (fm.cast_size = 'Large Cast' AND fm.production_year <= 2000)
ORDER BY 
    fm.production_year DESC, 
    fm.title;
