WITH RECURSIVE MovieHierarchy AS (
    
    SELECT 
        m.id AS movie_id,
        m.title,
        m.production_year,
        1 AS level
    FROM title m
    WHERE m.id = 1

    UNION ALL

    SELECT 
        m.id AS movie_id,
        m.title,
        m.production_year,
        h.level + 1
    FROM title m
    INNER JOIN movie_link ml ON ml.linked_movie_id = m.id
    INNER JOIN MovieHierarchy h ON h.movie_id = ml.movie_id
)

SELECT 
    a.name AS actor_name,
    t.title AS movie_title,
    t.production_year,
    COUNT(c.id) AS role_count,
    ARRAY_AGG(DISTINCT k.keyword) AS keywords,
    ROW_NUMBER() OVER (PARTITION BY a.id ORDER BY COUNT(c.id) DESC) AS actor_rank,
    COALESCE(ca.kind, 'Unknown') AS cast_type
FROM aka_name AS a
JOIN cast_info AS c ON a.person_id = c.person_id
JOIN aka_title AS t ON c.movie_id = t.movie_id
LEFT JOIN movie_keyword AS mk ON t.movie_id = mk.movie_id
LEFT JOIN keyword AS k ON mk.keyword_id = k.id
LEFT JOIN comp_cast_type AS ca ON c.role_id = ca.id
WHERE 
    t.production_year BETWEEN 2000 AND 2023
    AND (t.kind_id = 1 OR t.kind_id IS NULL)  
GROUP BY 
    a.id, t.id, ca.kind
HAVING 
    COUNT(c.id) > 1      
    AND a.name IS NOT NULL
ORDER BY 
    actor_rank, movie_title;