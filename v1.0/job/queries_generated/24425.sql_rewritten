WITH RankedMovies AS (
    SELECT 
        a.title,
        a.production_year,
        COUNT(DISTINCT c.person_id) AS actor_count,
        ROW_NUMBER() OVER (PARTITION BY a.production_year ORDER BY COUNT(DISTINCT c.person_id) DESC) AS rank
    FROM 
        aka_title a
    LEFT JOIN 
        cast_info c ON a.id = c.movie_id
    GROUP BY 
        a.id, a.title, a.production_year
),
FilteredMovies AS (
    SELECT 
        title,
        production_year,
        actor_count
    FROM 
        RankedMovies
    WHERE 
        actor_count > 5 OR production_year BETWEEN 2000 AND 2023
),
ActorRoles AS (
    SELECT 
        n.name,
        ct.kind AS role_kind,
        COUNT(DISTINCT c.movie_id) AS movie_count
    FROM 
        name n
    JOIN 
        cast_info c ON n.id = c.person_id
    JOIN 
        role_type ct ON c.role_id = ct.id
    WHERE 
        n.gender = 'F'
    GROUP BY 
        n.name, ct.kind
)
SELECT 
    fm.title,
    fm.production_year,
    am.name AS actor_name,
    am.role_kind,
    am.movie_count,
    CASE 
        WHEN fm.actor_count IS NULL THEN 'No actors'
        ELSE 'Actor count: ' || fm.actor_count
    END AS status,
    COALESCE(NULLIF(am.movie_count, 0), 'No movies') AS movies_status
FROM 
    FilteredMovies fm
LEFT OUTER JOIN 
    ActorRoles am ON fm.actor_count >= 5
ORDER BY 
    fm.production_year DESC, fm.actor_count DESC, am.movie_count DESC
FETCH FIRST 10 ROWS ONLY;