WITH RankedTitles AS (
    SELECT 
        a.name AS actor_name,
        t.title AS movie_title,
        t.production_year,
        RANK() OVER (PARTITION BY a.person_id ORDER BY t.production_year DESC) AS year_rank
    FROM 
        aka_name a
    JOIN 
        cast_info c ON a.person_id = c.person_id
    JOIN 
        aka_title t ON c.movie_id = t.movie_id
    WHERE 
        t.production_year IS NOT NULL
),
AverageYear AS (
    SELECT 
        AVG(production_year) AS avg_year
    FROM 
        aka_title
    WHERE 
        production_year IS NOT NULL
),
TopCompanies AS (
    SELECT 
        mc.movie_id,
        cn.name AS company_name,
        COUNT(*) AS company_count
    FROM 
        movie_companies mc
    JOIN 
        company_name cn ON mc.company_id = cn.id
    GROUP BY 
        mc.movie_id, cn.name
    HAVING 
        COUNT(*) > (
            SELECT COUNT(*) FROM company_name
        ) * 0.01
),
MovieInfo AS (
    SELECT 
        m.id AS movie_id,
        m.title,
        mi.info
    FROM 
        title m
    LEFT JOIN 
        movie_info mi ON m.id = mi.movie_id
    WHERE 
        mi.info IS NOT NULL
    ORDER BY 
        m.production_year DESC
)
SELECT 
    rt.actor_name,
    rt.movie_title,
    rt.production_year,
    CASE 
        WHEN rt.production_year < (SELECT avg_year FROM AverageYear) THEN 'Before Average'
        ELSE 'After Average'
    END AS year_comparison,
    COALESCE(tc.company_name, 'No Companies') AS production_company,
    mi.info AS movie_info,
    (SELECT COUNT(*) FROM movie_keyword mk WHERE mk.movie_id = rt.movie_title) AS keyword_count
FROM 
    RankedTitles rt
LEFT JOIN 
    TopCompanies tc ON rt.movie_title = tc.movie_id
LEFT JOIN 
    MovieInfo mi ON rt.movie_title = mi.title
WHERE 
    rt.year_rank = 1
AND 
    (rt.production_year IS NOT NULL OR rt.production_year IS NULL)  
ORDER BY 
    rt.actor_name, rt.production_year DESC;