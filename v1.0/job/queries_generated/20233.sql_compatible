
WITH RankedMovies AS (
    SELECT 
        at.title,
        at.production_year,
        ROW_NUMBER() OVER (PARTITION BY at.production_year ORDER BY COUNT(ci.person_id) DESC) AS movie_rank,
        COUNT(ci.person_id) AS actor_count
    FROM 
        aka_title at
    LEFT JOIN 
        cast_info ci ON at.movie_id = ci.movie_id
    GROUP BY 
        at.title, at.production_year
),
TopMovies AS (
    SELECT 
        title, 
        production_year 
    FROM 
        RankedMovies 
    WHERE 
        movie_rank <= 5
),
MovieDetails AS (
    SELECT 
        tm.title,
        tm.production_year,
        mk.keyword,
        COALESCE(mi.info, 'N/A') AS movie_info,
        cn.name AS company_name,
        (SELECT COUNT(DISTINCT ci2.person_id) 
         FROM cast_info ci2 
         WHERE ci2.movie_id IN (SELECT movie_id FROM aka_title WHERE title = tm.title)) AS total_cast
    FROM 
        TopMovies tm
    LEFT JOIN 
        movie_keyword mk ON mk.movie_id = (SELECT id FROM aka_title WHERE title = tm.title LIMIT 1)
    LEFT JOIN 
        movie_companies mc ON mc.movie_id = (SELECT id FROM aka_title WHERE title = tm.title LIMIT 1)
    LEFT JOIN 
        company_name cn ON cn.id = mc.company_id
    LEFT JOIN 
        movie_info mi ON mi.movie_id = (SELECT id FROM aka_title WHERE title = tm.title LIMIT 1) AND mi.info_type_id IN (SELECT id FROM info_type WHERE info = 'Tagline')
)
SELECT 
    md.title,
    md.production_year,
    md.keyword,
    md.movie_info,
    md.company_name,
    md.total_cast,
    CASE 
        WHEN md.total_cast IS NULL THEN 'No Cast Information'
        WHEN md.total_cast <= 5 THEN 'Few Actors'
        WHEN md.total_cast BETWEEN 6 AND 10 THEN 'Moderate Cast'
        ELSE 'Large Ensemble'
    END AS cast_size_description
FROM 
    MovieDetails md
WHERE 
    md.keyword IS NOT NULL
ORDER BY 
    md.production_year DESC, 
    md.total_cast DESC;
