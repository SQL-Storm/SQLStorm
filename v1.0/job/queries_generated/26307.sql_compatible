
WITH MovieDetails AS (
    SELECT 
        t.id AS movie_id,
        t.title AS movie_title,
        t.production_year,
        STRING_AGG(DISTINCT COALESCE(a.name, 'Unknown'), ', ' ORDER BY a.name) AS actors,
        STRING_AGG(DISTINCT COALESCE(k.keyword, 'No Keywords'), ', ' ORDER BY k.keyword) AS keywords,
        STRING_AGG(DISTINCT co.name, ', ' ORDER BY co.name) AS companies
    FROM 
        title t
    LEFT JOIN 
        cast_info ci ON t.id = ci.movie_id
    LEFT JOIN 
        aka_name a ON ci.person_id = a.person_id
    LEFT JOIN 
        movie_keyword mk ON t.id = mk.movie_id
    LEFT JOIN 
        keyword k ON mk.keyword_id = k.id
    LEFT JOIN 
        movie_companies mc ON t.id = mc.movie_id
    LEFT JOIN 
        company_name co ON mc.company_id = co.id
    WHERE 
        t.production_year BETWEEN 2000 AND 2023
    GROUP BY 
        t.id, t.title, t.production_year
),

KeywordStats AS (
    SELECT 
        k.keyword,
        COUNT(mk.movie_id) AS movie_count
    FROM 
        movie_keyword mk
    JOIN 
        keyword k ON mk.keyword_id = k.id
    GROUP BY 
        k.keyword
    HAVING 
        COUNT(mk.movie_id) > 10
),

ActorRoleDetails AS (
    SELECT 
        a.id AS actor_id,
        a.name AS actor_name,
        rt.role AS actor_role,
        COUNT(ci.id) AS movies_count
    FROM 
        aka_name a
    JOIN 
        cast_info ci ON a.person_id = ci.person_id
    JOIN 
        role_type rt ON ci.role_id = rt.id
    GROUP BY 
        a.id, a.name, rt.role
    HAVING 
        COUNT(ci.id) > 5
)

SELECT 
    md.movie_id,
    md.movie_title,
    md.production_year,
    md.actors,
    md.keywords,
    md.companies,
    ks.keyword,
    ks.movie_count,
    ard.actor_name,
    ard.actor_role,
    ard.movies_count
FROM 
    MovieDetails md
LEFT JOIN 
    KeywordStats ks ON md.keywords LIKE CONCAT('%', ks.keyword, '%')
LEFT JOIN 
    ActorRoleDetails ard ON md.actors LIKE CONCAT('%', ard.actor_name, '%')
ORDER BY 
    md.production_year DESC, 
    md.movie_title;
