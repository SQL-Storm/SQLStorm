WITH RankedMovies AS (
    SELECT 
        t.id AS title_id,
        t.title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.title) AS rn
    FROM title t
    WHERE t.production_year IS NOT NULL
),

ActorMovieInfo AS (
    SELECT 
        a.name AS actor_name,
        m.title AS movie_title,
        m.production_year,
        COALESCE(k.keyword, 'UNKNOWN') AS keyword,
        COUNT(c.id) AS role_count
    FROM aka_name a
    JOIN cast_info c ON a.person_id = c.person_id
    JOIN aka_title m ON c.movie_id = m.movie_id
    LEFT JOIN movie_keyword mk ON m.id = mk.movie_id
    LEFT JOIN keyword k ON mk.keyword_id = k.id
    WHERE a.name IS NOT NULL
    GROUP BY a.name, m.title, m.production_year, k.keyword
),

CompanyData AS (
    SELECT 
        cn.name AS company_name,
        COUNT(mc.id) AS movie_count
    FROM company_name cn
    JOIN movie_companies mc ON cn.id = mc.company_id
    WHERE cn.name IS NOT NULL
    GROUP BY cn.name
),

FilteredMovies AS (
    SELECT 
        r.title_id,
        r.title,
        r.production_year
    FROM RankedMovies r
    WHERE r.rn <= 3
)

SELECT 
    a.actor_name,
    a.movie_title,
    a.production_year,
    a.keyword,
    a.role_count,
    cd.company_name,
    cd.movie_count,
    CASE 
        WHEN a.role_count IS NULL THEN 'N/A'
        ELSE a.role_count::text
    END AS role_count_str,
    a.production_year && EXTRACT(YEAR FROM cast('2024-10-01' as date)) AS is_recent_acclaimed,
    NULLIF(cd.movie_count, 0) AS null_movie_count
FROM ActorMovieInfo a
FULL OUTER JOIN CompanyData cd ON a.production_year = cd.movie_count
WHERE (a.production_year IS NOT NULL AND cd.movie_count > 1) OR (a.keyword IS NOT NULL AND a.keyword NOT LIKE '%ACTION%')
ORDER BY a.production_year DESC, a.role_count DESC, cd.movie_count ASC;