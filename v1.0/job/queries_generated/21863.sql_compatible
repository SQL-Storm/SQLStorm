
WITH RankedTitles AS (
    SELECT 
        t.id AS title_id, 
        t.title, 
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.id DESC) AS title_rank
    FROM 
        aka_title t
    WHERE 
        t.production_year IS NOT NULL
),
ActorDetails AS (
    SELECT 
        ak.name AS actor_name,
        c.movie_id,
        COUNT(DISTINCT m.id) AS movie_count
    FROM 
        cast_info c
    JOIN 
        aka_name ak ON c.person_id = ak.person_id
    JOIN 
        aka_title m ON c.movie_id = m.id
    WHERE 
        c.person_role_id = (SELECT id FROM role_type WHERE role = 'actor') 
        AND ak.name IS NOT NULL 
    GROUP BY 
        ak.name, c.movie_id
),
MovieCompanyInfo AS (
    SELECT 
        mc.movie_id,
        STRING_AGG(DISTINCT co.name, ', ') AS companies,
        COUNT(DISTINCT co.id) AS company_count
    FROM 
        movie_companies mc
    JOIN 
        company_name co ON mc.company_id = co.id
    GROUP BY 
        mc.movie_id
),
MoviesWithNullCheck AS (
    SELECT 
        mt.title_id,
        mt.title,
        COALESCE(mci.companies, 'No companies') AS companies,
        AD.actor_name,
        AD.movie_count,
        CASE 
            WHEN mci.company_count > 2 THEN 'Major Production'
            ELSE 'Indie Production'
        END AS production_type
    FROM 
        RankedTitles mt
    LEFT JOIN 
        MovieCompanyInfo mci ON mt.title_id = mci.movie_id
    LEFT JOIN 
        ActorDetails AD ON mt.title_id = AD.movie_id
)
SELECT 
    m.title,
    m.production_year,
    COALESCE(m.actor_name, 'No actors') AS actors,
    m.production_type,
    m.companies
FROM 
    MoviesWithNullCheck m
ORDER BY 
    m.production_year DESC, 
    m.production_type,
    m.title;
