WITH RECURSIVE MovieHierarchy AS (
    
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        1 AS level
    FROM title t
    WHERE t.episode_of_id IS NULL

    UNION ALL

    
    SELECT 
        mt.linked_movie_id AS movie_id,
        tt.title,
        tt.production_year,
        mh.level + 1 AS level
    FROM MovieHierarchy mh
    JOIN movie_link mt ON mh.movie_id = mt.movie_id
    JOIN title tt ON mt.linked_movie_id = tt.id
)
SELECT 
    m.title AS Movie_Title,
    m.production_year AS Production_Year,
    COALESCE(c.name, 'Unknown') AS Company_Name,
    COUNT(DISTINCT ci.person_id) AS Total_Cast,
    SUM(CASE WHEN ci.person_role_id = 1 THEN 1 ELSE 0 END) AS Lead_Actors,
    STRING_AGG(DISTINCT ak.name, ', ') AS Aka_Names,
    ROW_NUMBER() OVER (PARTITION BY m.production_year ORDER BY COUNT(DISTINCT ci.person_id) DESC) AS Rank_By_Cast_Size
FROM 
    MovieHierarchy m
LEFT JOIN movie_companies mc ON m.movie_id = mc.movie_id
LEFT JOIN company_name c ON mc.company_id = c.id
LEFT JOIN cast_info ci ON m.movie_id = ci.movie_id
LEFT JOIN aka_name ak ON ci.person_id = ak.person_id
WHERE 
    m.production_year BETWEEN 2000 AND 2023
GROUP BY 
    m.movie_id, m.title, m.production_year, c.name
HAVING 
    COUNT(DISTINCT ci.person_id) > 5
ORDER BY 
    m.production_year DESC, Rank_By_Cast_Size;