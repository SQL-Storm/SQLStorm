WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        m.id AS movie_id,
        m.title,
        m.production_year,
        1 AS level
    FROM 
        aka_title m
    WHERE 
        m.k_id = (SELECT id FROM kind_type WHERE kind = 'movie')  

    UNION ALL

    SELECT 
        m.id AS movie_id,
        m.title,
        m.production_year,
        mh.level + 1
    FROM 
        movie_link ml
    JOIN 
        movie_hierarchy mh ON ml.movie_id = mh.movie_id
    JOIN 
        aka_title m ON ml.linked_movie_id = m.id
    WHERE 
        ml.link_type_id = (SELECT id FROM link_type WHERE link = 'sequel')  
)
SELECT 
    a.name AS actor_name,
    c.id AS cast_id,
    t.title AS movie_title,
    mh.level,
    STRING_AGG(DISTINCT kw.keyword, ', ') AS keywords,
    AVG(ri.rating) AS average_rating,
    COUNT(DISTINCT m.id) AS total_movies
FROM 
    cast_info c
JOIN 
    aka_name a ON c.person_id = a.person_id
JOIN 
    movie_companies mc ON c.movie_id = mc.movie_id
JOIN 
    movie_info mi ON mi.movie_id = c.movie_id AND mi.info_type_id = (SELECT id FROM info_type WHERE info = 'rating')
JOIN 
    title t ON c.movie_id = t.id
LEFT JOIN 
    movie_keyword mk ON mk.movie_id = c.movie_id
LEFT JOIN 
    keyword kw ON mk.keyword_id = kw.id
LEFT JOIN 
    movie_hierarchy mh ON c.movie_id = mh.movie_id
LEFT JOIN 
    (SELECT movie_id, AVG(rating) AS rating FROM ratings GROUP BY movie_id) ri ON c.movie_id = ri.movie_id
WHERE 
    c.nr_order IS NOT NULL
GROUP BY 
    a.name, c.id, t.title, mh.level
ORDER BY 
    total_movies DESC, average_rating DESC;