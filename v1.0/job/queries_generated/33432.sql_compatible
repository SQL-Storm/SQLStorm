
WITH RECURSIVE actor_hierarchy AS (
    SELECT 
        ca.person_id,
        a.name AS actor_name,
        ca.movie_id,
        1 AS depth
    FROM cast_info ca
    JOIN aka_name a ON ca.person_id = a.person_id
    WHERE ca.movie_id IN (SELECT id FROM aka_title WHERE kind_id = (SELECT id FROM kind_type WHERE kind = 'movie'))
    
    UNION ALL
    
    SELECT 
        ca.person_id,
        a.name AS actor_name,
        ca.movie_id,
        ah.depth + 1
    FROM cast_info ca
    JOIN aka_name a ON ca.person_id = a.person_id
    JOIN actor_hierarchy ah ON ca.movie_id = ah.movie_id
)
SELECT 
    a.actor_name,
    COUNT(DISTINCT m.id) AS movie_count,
    ARRAY_AGG(DISTINCT k.keyword) AS keywords_used,
    AVG(m.production_year) AS avg_production_year,
    COUNT(DISTINCT cc.person_id) OVER (PARTITION BY m.id) AS cast_size,
    MAX(p.info) FILTER (WHERE i.info_type_id = (SELECT id FROM info_type WHERE info = 'bio')) AS bio
FROM actor_hierarchy a
JOIN complete_cast cc ON a.movie_id = cc.movie_id
JOIN aka_title m ON cc.movie_id = m.id
LEFT JOIN movie_keyword mk ON m.id = mk.movie_id
LEFT JOIN keyword k ON mk.keyword_id = k.id
LEFT JOIN person_info p ON a.person_id = p.person_id
LEFT JOIN info_type i ON p.info_type_id = i.id
GROUP BY a.actor_name
ORDER BY movie_count DESC
LIMIT 10;
