
WITH RankedMovies AS (
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.production_year DESC) AS year_rank
    FROM 
        aka_title t
    WHERE 
        t.production_year IS NOT NULL
),
CombinedInfo AS (
    SELECT 
        m.movie_id,
        m.title,
        m.production_year,
        COALESCE(mi.info, 'No info available') AS movie_info,
        COALESCE(c.name, 'Unknown') AS company_name,
        RANK() OVER (PARTITION BY m.movie_id ORDER BY m.production_year) AS company_rank
    FROM 
        RankedMovies m
    LEFT JOIN 
        movie_info mi ON m.movie_id = mi.movie_id
    LEFT JOIN 
        movie_companies mc ON m.movie_id = mc.movie_id
    LEFT JOIN 
        company_name c ON mc.company_id = c.id
),
ActorTitles AS (
    SELECT 
        a.person_id,
        n.name AS actor_name,
        t.title AS movie_title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY a.person_id ORDER BY t.production_year DESC) AS title_rank
    FROM 
        cast_info a
    INNER JOIN 
        aka_name n ON a.person_id = n.person_id
    INNER JOIN 
        aka_title t ON a.movie_id = t.id
    WHERE 
        n.name IS NOT NULL
)
SELECT 
    ci.movie_id,
    ci.title,
    ci.production_year,
    ci.movie_info,
    ci.company_name,
    a.actor_name,
    COUNT(DISTINCT a.person_id) OVER (PARTITION BY ci.movie_id) AS total_actors
FROM 
    CombinedInfo ci
FULL OUTER JOIN 
    ActorTitles a ON ci.movie_id = a.movie_title
WHERE 
    (ci.company_name IS NOT NULL OR a.actor_name IS NOT NULL)
    AND (ci.production_year = (SELECT MAX(production_year) FROM aka_title) OR a.title_rank > 5)
ORDER BY 
    ci.production_year DESC, 
    total_actors DESC NULLS LAST, 
    ci.title;
