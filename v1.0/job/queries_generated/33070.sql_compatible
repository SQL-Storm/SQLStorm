
WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        m.id AS movie_id,
        m.title,
        COALESCE(t.production_year, 0) AS production_year,
        1 AS level
    FROM 
        aka_title m
    LEFT JOIN title t ON m.movie_id = t.id
    
    UNION ALL
    
    SELECT 
        ml.linked_movie_id,
        m.title,
        COALESCE(t.production_year, 0) AS production_year,
        mh.level + 1
    FROM 
        movie_link ml
    JOIN MovieHierarchy mh ON ml.movie_id = mh.movie_id
    JOIN aka_title m ON mh.movie_id = m.movie_id
    LEFT JOIN title t ON m.movie_id = t.id
)
SELECT 
    mh.movie_id,
    mh.title,
    mh.production_year,
    COUNT(DISTINCT c.person_id) AS total_cast,
    STRING_AGG(DISTINCT a.name, ', ') AS actor_names,
    STRING_AGG(DISTINCT k.keyword, ', ') AS keywords,
    AVG(NULLIF(m.production_year, 0)) AS avg_year,
    ROW_NUMBER() OVER (PARTITION BY mh.level ORDER BY COUNT(DISTINCT c.person_id) DESC) AS rank_within_level
FROM 
    MovieHierarchy mh
LEFT JOIN 
    cast_info c ON mh.movie_id = c.movie_id
LEFT JOIN 
    aka_name a ON c.person_id = a.person_id
LEFT JOIN 
    movie_keyword mk ON mh.movie_id = mk.movie_id
LEFT JOIN 
    keyword k ON mk.keyword_id = k.id
GROUP BY 
    mh.movie_id, mh.title, mh.production_year, mh.level
HAVING 
    COUNT(DISTINCT c.person_id) > 1
ORDER BY 
    mh.level, total_cast DESC;
