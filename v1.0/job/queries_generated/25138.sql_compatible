
WITH actor_movies AS (
    SELECT 
        c.person_id,
        a.name AS actor_name,
        t.title AS movie_title,
        t.production_year,
        t.kind_id
    FROM 
        cast_info c
    JOIN 
        aka_name a ON c.person_id = a.person_id
    JOIN 
        aka_title t ON c.movie_id = t.movie_id
    WHERE 
        a.name IS NOT NULL AND 
        t.title IS NOT NULL
),
filtered_actors AS (
    SELECT 
        person_id,
        actor_name,
        STRING_AGG(movie_title, ', ') AS movies,
        COUNT(movie_title) AS movie_count
    FROM 
        actor_movies
    GROUP BY 
        person_id, actor_name
    HAVING 
        COUNT(movie_title) > 3 
),
movie_keywords AS (
    SELECT 
        m.movie_id,
        STRING_AGG(k.keyword, ', ') AS keywords
    FROM 
        movie_keyword m
    JOIN 
        keyword k ON m.keyword_id = k.id
    GROUP BY 
        m.movie_id
),
actor_movie_info AS (
    SELECT 
        fa.actor_name,
        fa.movie_count,
        STRING_AGG(DISTINCT mk.keywords, '; ') AS all_keywords
    FROM 
        filtered_actors fa
    JOIN 
        actor_movies am ON fa.person_id = am.person_id
    JOIN 
        movie_keywords mk ON am.movie_title = mk.movie_id
    GROUP BY 
        fa.actor_name, fa.movie_count
)
SELECT 
    ami.actor_name,
    ami.movie_count,
    ami.all_keywords,
    ROW_NUMBER() OVER (ORDER BY ami.movie_count DESC) AS ranking
FROM 
    actor_movie_info ami
WHERE 
    ami.all_keywords IS NOT NULL
ORDER BY 
    ami.movie_count DESC;
