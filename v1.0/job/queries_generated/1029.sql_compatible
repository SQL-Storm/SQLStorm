
WITH RankedMovies AS (
    SELECT 
        t.title,
        t.production_year,
        COUNT(dm.id) AS total_actors,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY COUNT(dm.id) DESC) AS rank_per_year
    FROM 
        aka_title t
    LEFT JOIN 
        complete_cast cc ON t.id = cc.movie_id
    LEFT JOIN 
        cast_info ci ON cc.subject_id = ci.id
    LEFT JOIN 
        aka_name an ON ci.person_id = an.person_id
    LEFT JOIN 
        person_info pi ON ci.person_id = pi.person_id
    LEFT JOIN 
        movie_info mi ON t.id = mi.movie_id
    LEFT JOIN 
        movie_keyword mk ON t.id = mk.movie_id
    LEFT JOIN 
        keyword k ON mk.keyword_id = k.id
    LEFT JOIN 
        role_type rt ON ci.role_id = rt.id
    WHERE 
        t.production_year IS NOT NULL
    GROUP BY 
        t.title, t.production_year
),
MovieGenres AS (
    SELECT 
        t.title,
        STRING_AGG(DISTINCT k.keyword, ', ') AS genres
    FROM 
        aka_title t
    JOIN 
        movie_keyword mk ON t.id = mk.movie_id
    JOIN 
        keyword k ON mk.keyword_id = k.id
    GROUP BY 
        t.title
),
FinalOutput AS (
    SELECT 
        rm.title,
        rm.production_year,
        rm.total_actors,
        mg.genres,
        COALESCE(pi.info, 'No info available') AS person_info
    FROM 
        RankedMovies rm
    LEFT JOIN 
        MovieGenres mg ON rm.title = mg.title
    LEFT JOIN 
        person_info pi ON rm.total_actors > 10 AND pi.info_type_id IN (SELECT id FROM info_type WHERE info = 'Notable')
    WHERE 
        rm.rank_per_year <= 5
)
SELECT 
    title,
    production_year,
    total_actors,
    genres,
    person_info
FROM 
    FinalOutput
ORDER BY 
    production_year DESC, total_actors DESC;
