
SELECT 
    a.name AS aka_name,
    t.title AS movie_title,
    c.role_id,
    r.role AS role,
    STRING_AGG(DISTINCT k.keyword, ',' ORDER BY k.keyword) AS keywords,
    COUNT(DISTINCT ci.id) AS cast_member_count,
    AVG(CASE WHEN ci.note IS NOT NULL THEN 1 ELSE 0 END) AS has_note_ratio,
    COUNT(DISTINCT mc.company_id) AS production_companies,
    i.info AS additional_info
FROM 
    aka_name a
JOIN 
    cast_info ci ON a.person_id = ci.person_id
JOIN 
    title t ON ci.movie_id = t.id
JOIN 
    role_type r ON ci.role_id = r.id
LEFT JOIN 
    movie_keyword mk ON t.id = mk.movie_id
LEFT JOIN 
    keyword k ON mk.keyword_id = k.id
LEFT JOIN 
    movie_companies mc ON t.id = mc.movie_id
LEFT JOIN 
    movie_info i ON t.id = i.movie_id AND i.info_type_id = (SELECT id FROM info_type WHERE info = 'Description')
WHERE 
    t.production_year BETWEEN 2000 AND 2020
GROUP BY 
    a.name, t.title, r.role, i.info, c.role_id
HAVING 
    COUNT(DISTINCT k.id) > 0
ORDER BY 
    cast_member_count DESC, t.production_year DESC;
