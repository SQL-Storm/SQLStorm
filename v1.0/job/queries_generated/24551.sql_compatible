
WITH RankedMovies AS (
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.production_year DESC) AS rank_by_year
    FROM 
        aka_title t
    WHERE 
        t.production_year IS NOT NULL
),
ActorsWithRole AS (
    SELECT 
        a.person_id,
        k.keyword,
        c.role_id,
        ROW_NUMBER() OVER (PARTITION BY a.person_id ORDER BY k.keyword) AS keyword_rank
    FROM 
        aka_name a
    JOIN 
        cast_info c ON a.person_id = c.person_id
    JOIN 
        movie_keyword mk ON c.movie_id = mk.movie_id
    JOIN 
        keyword k ON mk.keyword_id = k.id
    WHERE 
        a.name IS NOT NULL
),
DistinctCompanies AS (
    SELECT 
        mc.movie_id,
        COUNT(DISTINCT cn.name) AS distinct_company_count
    FROM 
        movie_companies mc
    JOIN 
        company_name cn ON mc.company_id = cn.id
    GROUP BY 
        mc.movie_id
),
FinalResults AS (
    SELECT 
        rm.title,
        rm.production_year,
        ARRAY_AGG(DISTINCT ak.name) AS actor_names,
        COALESCE(dc.distinct_company_count, 0) AS distinct_company_count,
        CASE 
            WHEN dc.distinct_company_count IS NULL THEN 'Unknown'
            WHEN dc.distinct_company_count > 5 THEN 'Many Companies'
            ELSE 'Few Companies'
        END AS company_category
    FROM 
        RankedMovies rm
    LEFT JOIN 
        ActorsWithRole ak ON rm.movie_id = ak.role_id
    LEFT JOIN 
        DistinctCompanies dc ON rm.movie_id = dc.movie_id
    WHERE 
        rm.rank_by_year <= 10  
    GROUP BY 
        rm.movie_id, rm.title, rm.production_year
)
SELECT 
    title,
    production_year,
    actor_names,
    distinct_company_count,
    company_category
FROM 
    FinalResults
WHERE 
    (company_category = 'Many Companies' OR company_category = 'Few Companies')
ORDER BY 
    production_year DESC, title ASC
LIMIT 50;
