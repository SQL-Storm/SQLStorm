WITH RECURSIVE ActorHierarchy AS (
    SELECT 
        c.person_id, 
        a.name AS actor_name, 
        STRING_AGG(DISTINCT t.title, ', ') AS movies,
        1 AS level
    FROM 
        cast_info c
    JOIN 
        aka_name a ON c.person_id = a.person_id
    JOIN 
        aka_title t ON c.movie_id = t.movie_id
    WHERE 
        c.nr_order = 1 
    GROUP BY 
        c.person_id, a.name
    
    UNION ALL

    SELECT 
        c.person_id, 
        a.name AS actor_name, 
        STRING_AGG(DISTINCT t.title, ', ') AS movies,
        ah.level + 1 AS level
    FROM 
        ActorHierarchy ah
    JOIN 
        cast_info c ON c.movie_id IN (
            SELECT DISTINCT movie_id FROM cast_info WHERE person_id = ah.person_id
        )
    JOIN 
        aka_name a ON c.person_id = a.person_id
    JOIN 
        aka_title t ON c.movie_id = t.movie_id
    GROUP BY 
        c.person_id, a.name, ah.level
)
SELECT 
    ah.actor_name,
    ah.level,
    COUNT(DISTINCT da.movie_id) AS movie_count,
    COALESCE(SUM(CASE WHEN t.production_year IS NOT NULL THEN 1 ELSE 0 END), 0) AS valid_movies,
    ARRAY_AGG(DISTINCT t.title) AS titles
FROM 
    ActorHierarchy ah
LEFT JOIN 
    cast_info c ON ah.person_id = c.person_id
LEFT JOIN 
    aka_title t ON c.movie_id = t.movie_id
LEFT JOIN 
    movie_keyword mk ON t.id = mk.movie_id
LEFT JOIN 
    keyword k ON mk.keyword_id = k.id
WHERE 
    k.keyword IS NOT NULL
    AND ah.level > 1 
GROUP BY 
    ah.actor_name, ah.level
HAVING 
    COUNT(DISTINCT t.id) > 5 
ORDER BY 
    valid_movies DESC, 
    movie_count ASC;