
WITH RecursiveActorMovie AS (
    SELECT 
        c.person_id, 
        a.name AS actor_name, 
        t.title AS movie_title,
        RANK() OVER (PARTITION BY c.person_id ORDER BY t.production_year DESC) AS rank
    FROM 
        cast_info c
    JOIN 
        aka_name a ON c.person_id = a.person_id
    JOIN 
        aka_title t ON c.movie_id = t.movie_id
    WHERE 
        t.production_year IS NOT NULL
),
LatestMovies AS (
    SELECT 
        person_id, 
        actor_name, 
        movie_title
    FROM 
        RecursiveActorMovie
    WHERE 
        rank = 1
),
MovieDetails AS (
    SELECT 
        lm.actor_name,
        lm.movie_title,
        COALESCE(mk.keyword, 'No Keywords') AS movie_keyword,
        COALESCE(mi.info, 'No Details Available') AS movie_info,
        ct.kind AS company_type,
        ROW_NUMBER() OVER (PARTITION BY lm.actor_name ORDER BY lm.movie_title) AS movie_order
    FROM 
        LatestMovies lm
    LEFT JOIN 
        movie_keyword mk ON lm.movie_title = mk.movie_id
    LEFT JOIN 
        movie_info mi ON lm.movie_title = mi.movie_id
    LEFT JOIN 
        movie_companies mc ON lm.movie_title = mc.movie_id
    LEFT JOIN 
        company_type ct ON mc.company_type_id = ct.id
)
SELECT 
    actor_name,
    movie_title,
    movie_keyword,
    movie_info,
    company_type,
    movie_order
FROM 
    MovieDetails
WHERE 
    (movie_keyword <> 'No Keywords' OR movie_info IS NOT NULL)
ORDER BY 
    actor_name, movie_order
LIMIT 50;
