
WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        0 AS level
    FROM 
        aka_title mt
    WHERE 
        mt.kind_id = 1  

    UNION ALL

    SELECT 
        mt.id AS movie_id,
        mt.title,
        mh.level + 1
    FROM 
        movie_link ml 
    JOIN 
        MovieHierarchy mh ON ml.movie_id = mh.movie_id
    JOIN 
        aka_title mt ON ml.linked_movie_id = mt.id
)

SELECT 
    ak.name AS actor_name,
    mt.title AS movie_title,
    mt.production_year,
    ROW_NUMBER() OVER (PARTITION BY ak.name ORDER BY mt.production_year DESC) AS recent_movies,
    COALESCE(SUM(CASE 
        WHEN mi.info_type_id = 1 THEN 1 
        ELSE 0 END), 0) AS num_awards,
    STRING_AGG(DISTINCT kw.keyword, ', ') AS keywords,
    COUNT(DISTINCT mc.company_id) AS production_companies
FROM 
    aka_name ak
JOIN 
    cast_info ci ON ak.person_id = ci.person_id
JOIN 
    MovieHierarchy mh ON ci.movie_id = mh.movie_id
JOIN 
    aka_title mt ON mh.movie_id = mt.id
LEFT JOIN 
    movie_info mi ON mt.id = mi.movie_id AND mi.info_type_id = 1 
LEFT JOIN 
    movie_keyword mk ON mt.id = mk.movie_id
LEFT JOIN 
    keyword kw ON mk.keyword_id = kw.id
LEFT JOIN 
    movie_companies mc ON mt.id = mc.movie_id
WHERE 
    ak.name IS NOT NULL
    AND ak.name NOT LIKE '%Unknown%'
GROUP BY 
    ak.person_id, mt.id, ak.name, mt.title, mt.production_year
HAVING 
    COUNT(DISTINCT ci.role_id) > 2  
ORDER BY 
    recent_movies, actor_name;
