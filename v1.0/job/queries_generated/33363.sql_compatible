
WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        m.id AS movie_id,
        m.title,
        m.production_year,
        1 AS level
    FROM 
        aka_title m
    WHERE 
        m.production_year >= 2000

    UNION ALL

    SELECT 
        m.id AS movie_id,
        m.title,
        m.production_year,
        mh.level + 1
    FROM 
        aka_title m
    JOIN 
        movie_link ml ON ml.movie_id = mh.movie_id
    JOIN 
        aka_title linked ON linked.id = ml.linked_movie_id
    JOIN 
        movie_hierarchy mh ON mh.movie_id = m.id
)
SELECT
    mv.title,
    mv.production_year,
    COUNT(DISTINCT ci.person_id) AS num_cast,
    AVG(COALESCE(ci.nr_order, 0)) AS avg_order,
    STRING_AGG(DISTINCT ak.name, ', ') AS aka_names,
    STRING_AGG(DISTINCT kn.keyword, ', ') AS keywords,
    p.gender,
    (SELECT COUNT(*) FROM movie_companies mc WHERE mc.movie_id = mv.movie_id) AS num_companies
FROM 
    movie_hierarchy mv
LEFT JOIN 
    cast_info ci ON ci.movie_id = mv.movie_id
LEFT JOIN 
    aka_name ak ON ak.person_id = ci.person_id
LEFT JOIN 
    movie_keyword mk ON mk.movie_id = mv.movie_id
LEFT JOIN 
    keyword kn ON kn.id = mk.keyword_id
LEFT JOIN 
    person_info pi ON pi.person_id = ci.person_id
LEFT JOIN 
    name p ON p.id = pi.person_id
WHERE 
    mv.level = 1
GROUP BY 
    mv.title, mv.production_year, p.gender
HAVING 
    COUNT(DISTINCT ci.person_id) > 5
    AND AVG(COALESCE(ci.nr_order, 0)) > 0
ORDER BY 
    mv.production_year DESC, num_cast DESC
LIMIT 100;
