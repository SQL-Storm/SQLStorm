
WITH RankedMovies AS (
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        COUNT(ci.person_id) OVER (PARTITION BY t.id) AS cast_count,
        SUM(CASE WHEN key.keyword IS NOT NULL THEN 1 ELSE 0 END) OVER (PARTITION BY t.id) AS keyword_count
    FROM 
        aka_title t
    LEFT JOIN 
        cast_info ci ON t.id = ci.movie_id
    LEFT JOIN 
        movie_keyword mk ON t.id = mk.movie_id
    LEFT JOIN 
        keyword key ON mk.keyword_id = key.id
    WHERE 
        t.production_year IS NOT NULL
),
TopMovies AS (
    SELECT 
        movie_id,
        title,
        production_year,
        cast_count,
        keyword_count
    FROM 
        RankedMovies
    WHERE 
        cast_count > 5
)
SELECT 
    tm.title,
    tm.production_year,
    tm.cast_count,
    tm.keyword_count,
    COALESCE(AVG(CASE WHEN pi.info LIKE '%critics%' THEN 1 ELSE 0 END), 0) AS avg_critic_info
FROM 
    TopMovies tm
LEFT JOIN 
    movie_info mi ON tm.movie_id = mi.movie_id
LEFT JOIN 
    info_type it ON mi.info_type_id = it.id
LEFT JOIN 
    person_info pi ON pi.person_id = (SELECT person_id FROM cast_info ci WHERE ci.movie_id = tm.movie_id LIMIT 1)
GROUP BY 
    tm.movie_id, tm.title, tm.production_year, tm.cast_count, tm.keyword_count
ORDER BY 
    tm.production_year DESC, 
    tm.cast_count DESC
LIMIT 10;
