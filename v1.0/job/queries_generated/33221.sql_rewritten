WITH RECURSIVE movie_hierarchy AS (
    SELECT mt.id AS movie_id, mt.title, mt.production_year, mt.episode_of_id, mt.season_nr, 0 AS level
    FROM aka_title mt
    WHERE mt.production_year >= 2000 
    UNION ALL
    SELECT m.movie_id, m.title, m.production_year, m.episode_of_id, m.season_nr, mh.level + 1
    FROM movie_link ml
    JOIN movie_hierarchy mh ON ml.movie_id = mh.movie_id
    JOIN aka_title m ON ml.linked_movie_id = m.id
),
cast_roles AS (
    SELECT ci.movie_id, ci.person_id, ci.role_id, r.role AS role_name
    FROM cast_info ci
    JOIN role_type r ON ci.role_id = r.id
),
top_actors AS (
    SELECT ci.person_id, a.name, COUNT(DISTINCT ci.movie_id) AS num_movies
    FROM cast_info ci
    JOIN aka_name a ON ci.person_id = a.person_id
    GROUP BY ci.person_id, a.name
    HAVING COUNT(DISTINCT ci.movie_id) > 5 
),
popular_movies AS (
    SELECT mh.movie_id, mh.title, mh.production_year, COUNT(DISTINCT ci.person_id) AS actor_count
    FROM movie_hierarchy mh
    LEFT JOIN cast_info ci ON mh.movie_id = ci.movie_id
    GROUP BY mh.movie_id, mh.title, mh.production_year
    HAVING COUNT(DISTINCT ci.person_id) > 10 
),
movie_info_aggregates AS (
    SELECT mi.movie_id, STRING_AGG(mi.info, '; ') AS all_info, COUNT(DISTINCT mi.info_type_id) AS info_types_count
    FROM movie_info mi
    GROUP BY mi.movie_id
)
SELECT 
    pm.title AS movie_title,
    pm.production_year,
    ta.name AS top_actor,
    mia.all_info,
    mia.info_types_count
FROM popular_movies pm
JOIN top_actors ta ON pm.movie_id IN (
    SELECT ci.movie_id FROM cast_info ci WHERE ci.person_id = ta.person_id
)
JOIN movie_info_aggregates mia ON pm.movie_id = mia.movie_id
ORDER BY pm.production_year DESC, pm.actor_count DESC, ta.num_movies DESC
LIMIT 10;