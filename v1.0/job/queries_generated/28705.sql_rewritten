WITH RankedTitles AS (
    SELECT 
        a.title,
        a.production_year,
        COUNT(c.person_id) AS cast_count,
        STRING_AGG(DISTINCT ak.name, ', ') AS aka_names,
        ROW_NUMBER() OVER (PARTITION BY a.production_year ORDER BY COUNT(c.person_id) DESC) AS rn
    FROM 
        aka_title a
    LEFT JOIN 
        movie_companies mc ON a.id = mc.movie_id
    LEFT JOIN 
        cast_info c ON c.movie_id = a.id
    LEFT JOIN 
        aka_name ak ON ak.person_id = c.person_id
    WHERE 
        a.production_year BETWEEN 2000 AND 2023
    GROUP BY 
        a.id, a.title, a.production_year
),
TopTitles AS (
    SELECT 
        title, 
        production_year,
        cast_count,
        aka_names
    FROM 
        RankedTitles
    WHERE 
        rn <= 5
)
SELECT 
    tt.title,
    tt.production_year,
    tt.cast_count,
    tt.aka_names,
    mc.name AS company_name,
    mt.kind_id,
    ki.info AS keyword_info 
FROM 
    TopTitles tt
JOIN 
    movie_companies mcc ON tt.title = (SELECT title FROM aka_title WHERE id = mcc.movie_id)
JOIN 
    company_name mc ON mcc.company_id = mc.id
LEFT JOIN 
    movie_keyword mk ON mk.movie_id = (SELECT id FROM aka_title WHERE title = tt.title LIMIT 1)
LEFT JOIN 
    keyword k ON mk.keyword_id = k.id
LEFT JOIN 
    kind_type mt ON mt.id = (SELECT kind_id FROM aka_title WHERE title = tt.title LIMIT 1)
LEFT JOIN 
    movie_info mi ON mi.movie_id = (SELECT id FROM aka_title WHERE title = tt.title LIMIT 1)
LEFT JOIN 
    info_type ki ON ki.id = mi.info_type_id
ORDER BY 
    tt.production_year DESC, tt.cast_count DESC;