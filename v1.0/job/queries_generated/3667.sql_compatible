
WITH RankedTitles AS (
    SELECT 
        t.title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.title) AS rn
    FROM 
        aka_title t
    WHERE 
        t.production_year IS NOT NULL
), 
ActorMovies AS (
    SELECT 
        ak.name AS actor_name,
        t.title AS movie_title,
        t.production_year,
        COUNT(DISTINCT c.person_id) AS actor_count
    FROM 
        cast_info c
    JOIN 
        aka_name ak ON ak.person_id = c.person_id
    JOIN 
        aka_title t ON t.movie_id = c.movie_id
    GROUP BY 
        ak.name, t.title, t.production_year
), 
MovieInfo AS (
    SELECT 
        m.movie_id,
        STRING_AGG(m.info, ', ') AS movie_infos
    FROM 
        movie_info m
    WHERE 
        m.info_type_id IN (SELECT id FROM info_type WHERE info LIKE '%review%')
    GROUP BY 
        m.movie_id
)
SELECT 
    am.actor_name, 
    am.movie_title, 
    am.production_year, 
    RANK() OVER (PARTITION BY am.production_year ORDER BY am.actor_count DESC) AS rank_by_actor_count,
    COALESCE(mi.movie_infos, 'No Info Available') AS movie_information
FROM 
    ActorMovies am
JOIN 
    RankedTitles rt ON am.movie_title = rt.title AND am.production_year = rt.production_year
LEFT JOIN 
    MovieInfo mi ON am.movie_title = mi.movie_id
WHERE 
    rt.rn <= 10
ORDER BY 
    am.production_year DESC, rank_by_actor_count;
