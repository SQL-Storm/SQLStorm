
WITH RankedTitles AS (
    SELECT 
        t.id AS title_id,
        t.title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.title ASC) AS rank
    FROM 
        aka_title t
    WHERE 
        t.production_year IS NOT NULL
),
PopularActors AS (
    SELECT 
        c.person_id,
        COUNT(DISTINCT c.movie_id) AS movie_count,
        RANK() OVER (ORDER BY COUNT(DISTINCT c.movie_id) DESC) AS actor_rank
    FROM 
        cast_info c
    GROUP BY 
        c.person_id
    HAVING 
        COUNT(DISTINCT c.movie_id) > 5
),
MovieWithActors AS (
    SELECT 
        m.id AS movie_id,
        m.title,
        COALESCE(a.name, 'Unknown Actor') AS actor_name,
        mt.kind AS movie_type,
        COALESCE(mk.keyword, 'Uncategorized') AS movie_keyword
    FROM 
        aka_title m
    LEFT JOIN 
        cast_info ci ON m.id = ci.movie_id
    LEFT JOIN 
        aka_name a ON ci.person_id = a.person_id
    LEFT JOIN 
        movie_keyword mk ON m.id = mk.movie_id
    LEFT JOIN 
        kind_type mt ON m.kind_id = mt.id
    WHERE 
        m.title IS NOT NULL
)
SELECT 
    R.production_year,
    R.title,
    M.actor_name,
    M.movie_type,
    COUNT(M.movie_id) AS total_movies,
    AVG(CHAR_LENGTH(MI.info)) AS average_info_length
FROM 
    RankedTitles R 
LEFT JOIN 
    MovieWithActors M ON R.title_id = M.movie_id
LEFT JOIN 
    movie_info MI ON M.movie_id = MI.movie_id
WHERE 
    M.actor_name IS NOT NULL
GROUP BY 
    R.production_year, R.title, M.actor_name, M.movie_type
HAVING 
    AVG(CHAR_LENGTH(MI.info)) > 10
ORDER BY 
    R.production_year DESC, total_movies DESC
LIMIT 10;
