
WITH RECURSIVE title_hierarchy AS (
    SELECT 
        t.id AS title_id, 
        t.title AS title, 
        t.production_year,
        1 AS level
    FROM 
        title t
    WHERE 
        t.production_year IS NOT NULL

    UNION ALL

    SELECT 
        m.id AS title_id, 
        m.title, 
        m.production_year,
        th.level + 1
    FROM 
        title_hierarchy th
    JOIN 
        movie_link ml ON th.title_id = ml.movie_id
    JOIN 
        title m ON ml.linked_movie_id = m.id
    WHERE 
        th.level < 5  
),
actor_info AS (
    SELECT 
        a.id AS actor_id,
        a.person_id,
        ak.name AS actor_name,
        COUNT(ci.movie_id) AS movies_played_count
    FROM 
        aka_name ak 
    JOIN 
        cast_info ci ON ak.person_id = ci.person_id
    JOIN 
        name a ON ak.person_id = a.imdb_id
    GROUP BY 
        a.id,
        a.person_id,
        ak.name
),
movie_details AS (
    SELECT 
        mt.movie_id,
        mt.title, 
        mt.production_year,
        ARRAY_AGG(DISTINCT ak.name) AS actor_names
    FROM 
        aka_title mt
    LEFT JOIN 
        cast_info ci ON mt.movie_id = ci.movie_id
    LEFT JOIN 
        aka_name ak ON ci.person_id = ak.person_id
    GROUP BY 
        mt.movie_id, 
        mt.title,
        mt.production_year
),
keyword_movies AS (
    SELECT 
        mk.movie_id,
        k.keyword
    FROM 
        movie_keyword mk
    JOIN 
        keyword k ON mk.keyword_id = k.id
),
filtered_movies AS (
    SELECT 
        md.title, 
        md.production_year, 
        md.actor_names,
        km.keyword
    FROM 
        movie_details md
    LEFT JOIN 
        keyword_movies km ON md.movie_id = km.movie_id
    WHERE 
        md.production_year >= 2000
        AND md.actor_names IS NOT NULL
)
SELECT 
    th.title AS linked_movie,
    th.production_year AS linked_year,
    ai.actor_name,
    ai.movies_played_count,
    COUNT(DISTINCT fm.title) AS related_movies_count,
    STRING_AGG(DISTINCT fm.keyword, ', ') AS movie_keywords
FROM 
    title_hierarchy th
JOIN 
    actor_info ai ON EXISTS (
        SELECT 1
        FROM cast_info ci 
        WHERE ci.movie_id = th.title_id AND ci.person_id = ai.person_id
    )
LEFT JOIN 
    filtered_movies fm ON ai.actor_name = ANY(fm.actor_names)  
WHERE 
    th.level > 2  
GROUP BY 
    th.title, 
    th.production_year, 
    ai.actor_name, 
    ai.movies_played_count
ORDER BY 
    th.production_year DESC, 
    related_movies_count DESC;
