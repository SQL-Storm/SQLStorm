
WITH RankedTitles AS (
    SELECT 
        t.id AS title_id,
        t.title,
        t.production_year,
        t.kind_id,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.title) AS title_rank
    FROM 
        aka_title t
    WHERE 
        t.production_year IS NOT NULL
),
MovieCompanyInfo AS (
    SELECT 
        mc.movie_id,
        c.name AS company_name,
        ct.kind AS company_type,
        ROW_NUMBER() OVER (PARTITION BY mc.movie_id ORDER BY c.name) AS company_rank
    FROM 
        movie_companies mc
    JOIN 
        company_name c ON mc.company_id = c.id
    JOIN 
        company_type ct ON mc.company_type_id = ct.id
),
ActorInfo AS (
    SELECT 
        ci.movie_id,
        a.name AS actor_name,
        cc.kind AS role_type,
        ROW_NUMBER() OVER (PARTITION BY ci.movie_id ORDER BY a.name) AS actor_rank
    FROM 
        cast_info ci
    JOIN 
        aka_name a ON ci.person_id = a.person_id
    JOIN 
        role_type cc ON ci.role_id = cc.id
),
FinalOutput AS (
    SELECT 
        rt.title,
        rt.production_year,
        mci.company_name,
        mci.company_type,
        a.actor_name,
        a.role_type
    FROM 
        RankedTitles rt
    LEFT JOIN 
        MovieCompanyInfo mci ON rt.title_id = mci.movie_id
    LEFT JOIN 
        ActorInfo a ON rt.title_id = a.movie_id
    WHERE 
        rt.title_rank <= 5 AND 
        (mci.company_rank <= 5 OR mci.company_rank IS NULL) AND 
        (a.actor_rank <= 5 OR a.actor_rank IS NULL)
)
SELECT 
    title,
    production_year,
    STRING_AGG(DISTINCT company_name, ', ') AS companies,
    STRING_AGG(DISTINCT company_type, ', ') AS company_types,
    STRING_AGG(DISTINCT CONCAT(actor_name, ' (', role_type, ')'), ', ') AS actors
FROM 
    FinalOutput
GROUP BY 
    title,
    production_year
ORDER BY 
    production_year DESC, title;
