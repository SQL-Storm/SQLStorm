WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        m.id AS movie_id,
        m.title,
        m.production_year,
        1 AS level
    FROM 
        aka_title m
    WHERE 
        m.production_year > 2000   

    UNION ALL

    SELECT 
        m.id AS movie_id,
        m.title,
        m.production_year,
        mh.level + 1
    FROM 
        aka_title m
    JOIN 
        movie_link ml ON ml.linked_movie_id = m.id
    JOIN 
        movie_hierarchy mh ON ml.movie_id = mh.movie_id
)
SELECT 
    p.name AS person_name,
    km.keyword AS movie_keyword,
    mh.title AS movie_title,
    mh.production_year AS movie_year,
    COUNT(cc.person_id) AS total_cast,
    AVG(CASE WHEN cc.note IS NOT NULL THEN 1 ELSE 0 END) AS avg_has_note,
    STRING_AGG(DISTINCT c.kind, ', ') AS company_types,
    SUM(CASE 
        WHEN cc.nr_order IS NULL THEN 0 
        ELSE cc.nr_order 
    END) AS sum_order
FROM 
    complete_cast cc
JOIN 
    aka_name p ON p.person_id = cc.subject_id
JOIN 
    movie_hierarchy mh ON mh.movie_id = cc.movie_id
LEFT JOIN 
    movie_companies mc ON mc.movie_id = mh.movie_id
LEFT JOIN 
    company_type c ON mc.company_type_id = c.id
LEFT JOIN 
    movie_keyword mk ON mk.movie_id = mh.movie_id
LEFT JOIN 
    keyword km ON km.id = mk.keyword_id
WHERE 
    mh.production_year BETWEEN 2010 AND 2023 
    AND p.name IS NOT NULL 
GROUP BY 
    p.name, mh.title, mh.production_year
ORDER BY 
    movie_year DESC, total_cast DESC
FETCH FIRST 100 ROWS ONLY;