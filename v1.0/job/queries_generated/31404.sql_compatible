
WITH RECURSIVE movie_hierarchy AS (
    SELECT
        m.id AS movie_id,
        m.title,
        m.production_year,
        1 AS level,
        m.id AS root_id
    FROM title m
    WHERE m.episode_of_id IS NULL
    
    UNION ALL

    SELECT
        e.id AS movie_id,
        e.title,
        e.production_year,
        mh.level + 1,
        mh.root_id
    FROM title e
    JOIN movie_hierarchy mh ON e.episode_of_id = mh.movie_id
),

ranked_cast AS (
    SELECT
        ci.movie_id,
        ak.name AS actor_name,
        ci.nr_order,
        ROW_NUMBER() OVER (PARTITION BY ci.movie_id ORDER BY ci.nr_order) AS rnk
    FROM cast_info ci
    JOIN aka_name ak ON ci.person_id = ak.person_id
),

movie_details AS (
    SELECT
        mh.movie_id,
        mh.title,
        mh.production_year,
        STRING_AGG(DISTINCT rc.actor_name ORDER BY rc.rnk) AS actors_list,
        COUNT(rc.actor_name) AS actor_count,
        COALESCE(COUNT(DISTINCT mk.keyword), 0) AS keyword_count
    FROM movie_hierarchy mh
    LEFT JOIN ranked_cast rc ON mh.movie_id = rc.movie_id
    LEFT JOIN movie_keyword mk ON mh.movie_id = mk.movie_id
    GROUP BY mh.movie_id, mh.title, mh.production_year
),

final_output AS (
    SELECT
        md.movie_id,
        md.title,
        md.production_year,
        md.actors_list,
        md.actor_count,
        md.keyword_count,
        CASE
            WHEN md.actor_count > 10 THEN 'Blockbuster'
            WHEN md.actor_count BETWEEN 5 AND 10 THEN 'Moderate'
            ELSE 'Indie'
        END AS classification
    FROM movie_details md
)

SELECT
    mov.movie_id,
    mov.title,
    mov.production_year,
    mov.actors_list,
    mov.actor_count,
    mov.keyword_count,
    mov.classification,
    COUNT(mc.company_id) AS production_companies,
    STRING_AGG(DISTINCT cn.name, ', ') AS company_names
FROM final_output mov
LEFT JOIN movie_companies mc ON mov.movie_id = mc.movie_id
LEFT JOIN company_name cn ON mc.company_id = cn.id
GROUP BY
    mov.movie_id,
    mov.title,
    mov.production_year,
    mov.actors_list,
    mov.actor_count,
    mov.keyword_count,
    mov.classification
ORDER BY
    mov.production_year DESC,
    mov.actor_count DESC
LIMIT 100;
