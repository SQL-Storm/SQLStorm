WITH RankedMovies AS (
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        k.keyword,
        ROW_NUMBER() OVER (PARTITION BY t.id ORDER BY k.keyword) AS rn
    FROM 
        aka_title t
    JOIN 
        movie_keyword mk ON t.id = mk.movie_id
    JOIN 
        keyword k ON mk.keyword_id = k.id
    WHERE 
        t.production_year >= 2000  
),
CombinedAkaNames AS (
    SELECT 
        a.person_id,
        STRING_AGG(a.name, ', ') AS aka_names
    FROM 
        aka_name a
    GROUP BY 
        a.person_id
),
MovieCompanies AS (
    SELECT 
        mc.movie_id,
        STRING_AGG(DISTINCT c.name, ', ') AS companies
    FROM 
        movie_companies mc
    JOIN 
        company_name c ON mc.company_id = c.id
    GROUP BY 
        mc.movie_id
)
SELECT 
    m.movie_id,
    m.title,
    m.production_year,
    RA.aka_names,
    MC.companies,
    COUNT(DISTINCT c.person_id) AS num_of_cast_members,
    STRING_AGG(DISTINCT r.role, ', ') AS roles
FROM 
    RankedMovies m
LEFT JOIN 
    CombinedAkaNames RA ON (RA.person_id IN (SELECT person_id FROM cast_info WHERE movie_id = m.movie_id))
LEFT JOIN 
    movie_companies cmp ON cmp.movie_id = m.movie_id
LEFT JOIN 
    company_name co ON cmp.company_id = co.id
LEFT JOIN 
    cast_info c ON c.movie_id = m.movie_id
LEFT JOIN 
    role_type r ON c.role_id = r.id
LEFT JOIN 
    MovieCompanies MC ON m.movie_id = MC.movie_id
WHERE 
    m.rn = 1  
GROUP BY 
    m.movie_id, m.title, m.production_year, RA.aka_names, MC.companies
ORDER BY 
    m.production_year DESC, m.title;