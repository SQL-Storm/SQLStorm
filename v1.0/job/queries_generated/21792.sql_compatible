
WITH RankedTitles AS (
    SELECT 
        t.id AS title_id,
        t.title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.title) AS rn
    FROM 
        aka_title t
    WHERE 
        t.production_year IS NOT NULL
),
ActorRoles AS (
    SELECT 
        c.movie_id,
        a.name AS actor_name,
        cr.role AS role,
        ROW_NUMBER() OVER (PARTITION BY c.movie_id ORDER BY a.name) AS role_rank
    FROM 
        cast_info c
    JOIN 
        aka_name a ON c.person_id = a.person_id
    JOIN 
        role_type cr ON c.role_id = cr.id
),
CompanyDetails AS (
    SELECT 
        mc.movie_id,
        cn.name AS company_name,
        ct.kind AS company_type
    FROM 
        movie_companies mc
    JOIN 
        company_name cn ON mc.company_id = cn.id
    JOIN 
        company_type ct ON mc.company_type_id = ct.id
)
SELECT 
    rt.title,
    rt.production_year,
    ar.actor_name,
    ar.role,
    cd.company_name,
    cd.company_type,
    CASE 
        WHEN ar.role_rank = 1 THEN 'Lead Actor'
        WHEN ar.role_rank > 1 AND ar.role_rank <= 3 THEN 'Supporting Actor'
        ELSE 'Background Actor'
    END AS actor_assessment,
    COUNT(DISTINCT cd.company_name) OVER (PARTITION BY rt.title_id) AS company_count,
    CONCAT('Film: ', rt.title, ' | Year: ', rt.production_year) AS film_info,
    NULLIF(NULLIF(cd.company_name, 'Unnamed Company'), '') AS filtered_company_name
FROM 
    RankedTitles rt
LEFT JOIN 
    ActorRoles ar ON rt.title_id = ar.movie_id
LEFT JOIN 
    CompanyDetails cd ON rt.title_id = cd.movie_id
WHERE 
    rt.rn <= 5 
    AND (ar.role IS NOT NULL OR cd.company_type IS NOT NULL)
    AND (ar.actor_name LIKE '%John%' OR cd.company_type NOT IN ('Distributor'))
GROUP BY
    rt.title,
    rt.production_year,
    ar.actor_name,
    ar.role,
    cd.company_name,
    cd.company_type,
    ar.role_rank,
    rt.title_id
ORDER BY 
    rt.production_year DESC, rt.title;
