WITH RECURSIVE movie_hierarchy AS (
    SELECT mt.id AS movie_id, mt.title, mt.production_year, 1 AS level
    FROM aka_title mt
    WHERE mt.kind_id = 1  

    UNION ALL

    SELECT mt.id, mt.title, mt.production_year, mh.level + 1
    FROM movie_link ml
    JOIN movie_hierarchy mh ON ml.movie_id = mh.movie_id
    JOIN aka_title mt ON ml.linked_movie_id = mt.id
)

SELECT 
    a.name AS actor_name,
    COUNT(DISTINCT c.movie_id) AS movie_count,
    AVG(CASE WHEN m.production_year IS NOT NULL THEN m.production_year END) AS avg_production_year,
    STRING_AGG(DISTINCT kp.keyword, ', ') AS keywords,
    ROW_NUMBER() OVER(PARTITION BY a.id ORDER BY COUNT(DISTINCT c.movie_id) DESC) AS rank
FROM 
    aka_name a 
LEFT JOIN 
    cast_info c ON a.person_id = c.person_id
LEFT JOIN 
    aka_title t ON c.movie_id = t.id
LEFT JOIN 
    movie_keyword mk ON t.id = mk.movie_id
LEFT JOIN 
    keyword kp ON mk.keyword_id = kp.id
LEFT JOIN 
    movie_hierarchy m ON t.id = m.movie_id
WHERE 
    a.name IS NOT NULL 
    AND a.name NOT LIKE '%test%'  
GROUP BY 
    a.id, a.name
HAVING 
    COUNT(DISTINCT c.movie_id) > 5  
ORDER BY 
    movie_count DESC;