
WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        m.id AS movie_id,
        m.title,
        m.production_year,
        1 AS level,
        m.title AS hierarchy
    FROM title m
    WHERE m.production_year IS NOT NULL
    
    UNION ALL

    SELECT 
        m.id,
        m.title,
        m.production_year,
        mh.level + 1,
        mh.hierarchy || ' -> ' || m.title
    FROM title m
    JOIN movie_link ml ON m.id = ml.linked_movie_id
    JOIN MovieHierarchy mh ON ml.movie_id = mh.movie_id
)

SELECT 
    t.title AS Main_Title,
    COUNT(DISTINCT mc.company_id) AS Num_Companies,
    STRING_AGG(DISTINCT ak.name, ', ') AS Actor_Names,
    STRING_AGG(DISTINCT kw.keyword, ', ') AS Keywords,
    ROW_NUMBER() OVER(PARTITION BY t.production_year ORDER BY COUNT(mc.company_id) DESC) AS Year_Rank,
    CASE 
        WHEN m.prod_year IS NULL THEN 'Unknown Year'
        ELSE CAST(m.prod_year AS TEXT)
    END AS Production_Year,
    COALESCE(MAX(CASE WHEN pi.info_type_id = 1 THEN pi.info END), 'No Info') AS Director_Info
FROM title t
LEFT JOIN movie_companies mc ON t.id = mc.movie_id
LEFT JOIN cast_info ci ON t.id = ci.movie_id
LEFT JOIN aka_name ak ON ci.person_id = ak.person_id
LEFT JOIN movie_keyword mk ON t.id = mk.movie_id
LEFT JOIN keyword kw ON mk.keyword_id = kw.id
LEFT JOIN movie_info mi ON t.id = mi.movie_id
LEFT JOIN person_info pi ON ci.person_id = pi.person_id
LEFT JOIN (
    SELECT production_year AS prod_year FROM title GROUP BY production_year
) m ON t.production_year = m.prod_year
WHERE t.kind_id IN (SELECT id FROM kind_type WHERE kind = 'movie')
GROUP BY t.title, t.production_year, m.prod_year
HAVING COUNT(DISTINCT mc.company_id) > 1
ORDER BY Num_Companies DESC, Main_Title;
