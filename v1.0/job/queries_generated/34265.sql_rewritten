WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        m.id AS movie_id,
        m.title,
        0 AS level
    FROM 
        aka_title m
    WHERE 
        m.production_year IS NOT NULL

    UNION ALL

    SELECT 
        m.id AS movie_id,
        m.title,
        mh.level + 1
    FROM 
        aka_title m
    JOIN 
        movie_link ml ON ml.movie_id = mh.movie_id
    JOIN 
        aka_title linked ON linked.id = ml.linked_movie_id
    JOIN 
        movie_hierarchy mh ON mh.movie_id = m.id
    WHERE 
        mh.level < 3  
)
SELECT 
    a.name AS actor_name,
    t.title AS movie_title,
    COALESCE(k.keyword, 'No Keyword') AS movie_keyword,
    YEAR(mh.production_year) AS production_year,
    COUNT(DISTINCT c.movie_id) AS total_movies,
    AVG(CASE WHEN mc.company_id IS NOT NULL THEN 1 ELSE 0 END) AS avg_companies_per_movie
FROM 
    cast_info c
JOIN 
    aka_name a ON a.person_id = c.person_id
JOIN 
    movie_info mi ON mi.movie_id = c.movie_id
JOIN 
    aka_title t ON t.id = c.movie_id
LEFT JOIN 
    movie_keyword mk ON mk.movie_id = c.movie_id
LEFT JOIN 
    keyword k ON k.id = mk.keyword_id
LEFT JOIN 
    movie_companies mc ON mc.movie_id = c.movie_id
LEFT JOIN 
    movie_hierarchy mh ON mh.movie_id = c.movie_id
GROUP BY 
    a.name, t.title, k.keyword, mh.production_year
HAVING 
    COUNT(DISTINCT c.movie_id) > 1
ORDER BY 
    production_year DESC,
    total_movies DESC;