WITH RecursiveTitleInfo AS (
    SELECT 
        t.id AS title_id,
        t.title,
        t.production_year,
        COUNT(DISTINCT c.person_id) AS cast_count
    FROM 
        aka_title t
    LEFT JOIN 
        cast_info c ON t.id = c.movie_id
    GROUP BY 
        t.id
    HAVING 
        COUNT(DISTINCT c.person_id) > 5
), 

CompanyDetails AS (
    SELECT 
        mc.movie_id,
        co.name AS company_name,
        ct.kind AS company_type,
        ROW_NUMBER() OVER (PARTITION BY mc.movie_id ORDER BY co.name) AS rnk
    FROM 
        movie_companies mc
    JOIN 
        company_name co ON mc.company_id = co.id
    JOIN 
        company_type ct ON mc.company_type_id = ct.id
), 

TitleWithCompany AS (
    SELECT 
        rti.title,
        rti.production_year,
        rti.cast_count,
        cd.company_name,
        cd.company_type,
        cd.rnk
    FROM 
        RecursiveTitleInfo rti
    LEFT JOIN 
        CompanyDetails cd ON rti.title_id = cd.movie_id
    WHERE 
        (YEAR(rti.production_year) % 5 = 0 OR cd.company_type IS NULL)
), 

FilteredTitles AS (
    SELECT 
        title,
        production_year,
        cast_count,
        company_name,
        company_type
    FROM 
        TitleWithCompany
    WHERE 
        (company_type IS NOT NULL OR cast_count > 10)
)

SELECT 
    ft.title,
    ft.production_year,
    ft.cast_count,
    ft.company_name,
    ft.company_type,
    COALESCE(NULLIF(ft.company_name, ''), 'Unknown') AS safe_company_name,
    CASE 
        WHEN ft.production_year IS NULL THEN 'Release Year Unknown'
        WHEN ft.production_year < 2000 THEN 'Classic Era'
        ELSE 'Modern Era'
    END AS era_category
FROM 
    FilteredTitles ft
WHERE 
    ft.production_year IS NOT NULL
ORDER BY 
    ft.production_year DESC,
    ft.cast_count DESC
LIMIT 100;