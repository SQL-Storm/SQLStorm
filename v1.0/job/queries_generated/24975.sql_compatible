
WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        CAST(NULL AS integer) AS parent_id,
        1 AS level
    FROM aka_title mt
    WHERE mt.production_year < 2000
    UNION ALL
    SELECT 
        m.id AS movie_id,
        m.title,
        m.production_year,
        mh.movie_id,
        mh.level + 1
    FROM aka_title m
    JOIN movie_link ml ON m.id = ml.linked_movie_id
    JOIN movie_hierarchy mh ON ml.movie_id = mh.movie_id
),
cast_stats AS (
    SELECT 
        ci.movie_id,
        COUNT(DISTINCT ci.person_id) AS total_cast,
        SUM(CASE WHEN ci.role_id IS NOT NULL THEN 1 ELSE 0 END) AS named_roles,
        AVG(CASE WHEN ci.nr_order IS NOT NULL THEN ci.nr_order ELSE 0 END) AS avg_order
    FROM cast_info ci
    GROUP BY ci.movie_id
),
info_summary AS (
    SELECT 
        mi.movie_id,
        STRING_AGG(DISTINCT i.info, '; ') AS info_details,
        COUNT(DISTINCT mi.info_type_id) AS info_type_count
    FROM movie_info mi
    JOIN info_type i ON mi.info_type_id = i.id
    GROUP BY mi.movie_id
),
keyword_summary AS (
    SELECT 
        mk.movie_id,
        STRING_AGG(DISTINCT k.keyword, ', ') AS keywords
    FROM movie_keyword mk
    JOIN keyword k ON mk.keyword_id = k.id
    GROUP BY mk.movie_id
)
SELECT 
    mh.movie_id, 
    mh.title, 
    mh.production_year, 
    COALESCE(cs.total_cast, 0) AS total_cast,
    COALESCE(cs.named_roles, 0) AS named_roles,
    COALESCE(cs.avg_order, 0) AS avg_order,
    COALESCE(is.info_details, '') AS info_details,
    COALESCE(is.info_type_count, 0) AS info_type_count,
    COALESCE(ks.keywords, '') AS keywords,
    (SELECT COUNT(*) FROM complete_cast cc WHERE cc.movie_id = mh.movie_id) AS complete_cast_count,
    (SELECT COUNT(DISTINCT pi.person_id) FROM person_info pi 
     WHERE pi.info_type_id IN (SELECT id FROM info_type WHERE info LIKE '%producer%') 
       AND pi.person_id IN (SELECT DISTINCT ci.person_id FROM cast_info ci WHERE ci.movie_id = mh.movie_id)
    ) AS producer_count
FROM movie_hierarchy mh
LEFT JOIN cast_stats cs ON mh.movie_id = cs.movie_id
LEFT JOIN info_summary is ON mh.movie_id = is.movie_id
LEFT JOIN keyword_summary ks ON mh.movie_id = ks.movie_id
WHERE (COALESCE(is.info_type_count, 0) > 2 OR ks.keywords IS NOT NULL)
AND mh.level <= 3
ORDER BY mh.production_year DESC, mh.title ASC
LIMIT 100;
