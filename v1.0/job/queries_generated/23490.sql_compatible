
WITH RECURSIVE movie_hierarchy AS (
    SELECT
        m.id AS movie_id,
        m.title,
        m.production_year,
        NULL AS parent_movie_id,
        1 AS depth
    FROM
        aka_title m
    WHERE
        m.production_year IS NOT NULL

    UNION ALL

    SELECT
        l.linked_movie_id AS movie_id,
        a.title,
        a.production_year,
        mh.movie_id AS parent_movie_id,
        mh.depth + 1
    FROM
        movie_link l
    JOIN aka_title a ON l.linked_movie_id = a.id
    JOIN movie_hierarchy mh ON l.movie_id = mh.movie_id
)

SELECT
    m.movie_id,
    m.title,
    m.production_year,
    mh.parent_movie_id,
    mh.depth,
    COUNT(DISTINCT c.id) AS cast_count,
    SUM(CASE WHEN p.info_type_id = 2 THEN 1 ELSE 0 END) AS gender_specific_cast_count,
    STRING_AGG(DISTINCT CASE WHEN n.gender = 'F' THEN n.name END, ', ') AS female_actors,
    STRING_AGG(DISTINCT CASE WHEN n.gender = 'M' THEN n.name END, ', ') AS male_actors
FROM
    movie_hierarchy m
LEFT JOIN complete_cast cc ON m.movie_id = cc.movie_id
LEFT JOIN cast_info c ON cc.subject_id = c.person_id
LEFT JOIN person_info p ON p.person_id = c.person_id
LEFT JOIN name n ON n.id = c.person_id
GROUP BY
    m.movie_id, m.title, m.production_year, mh.parent_movie_id, mh.depth
HAVING
    COUNT(DISTINCT c.id) > 10
ORDER BY
    m.production_year DESC,
    m.title ASC;
