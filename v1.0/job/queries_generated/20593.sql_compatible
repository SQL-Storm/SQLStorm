
WITH RankedMovies AS (
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        COUNT(DISTINCT c.person_id) AS cast_count,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY COUNT(DISTINCT c.person_id) DESC) AS rn,
        SUM(CASE WHEN c.note IS NOT NULL THEN 1 ELSE 0 END) AS has_note,
        AVG(CASE 
            WHEN EXISTS (SELECT 1 FROM movie_info mi WHERE mi.movie_id = t.id AND mi.info_type_id = (SELECT id FROM info_type WHERE info = 'Rating'))
            THEN (SELECT CAST(info AS FLOAT) FROM movie_info mi WHERE mi.movie_id = t.id AND mi.info_type_id = (SELECT id FROM info_type WHERE info = 'Rating'))
            ELSE NULL 
        END) AS average_rating
    FROM aka_title t
    LEFT JOIN cast_info c ON t.id = c.movie_id
    LEFT JOIN movie_companies mc ON t.id = mc.movie_id
    GROUP BY t.id, t.title, t.production_year
),
CasterInfo AS (
    SELECT 
        a.name AS actor_name,
        t.title AS movie_title,
        t.production_year,
        ci.nr_order,
        ci.note AS cast_note
    FROM RankedMovies t
    JOIN cast_info ci ON ci.movie_id = t.movie_id
    JOIN aka_name a ON a.person_id = ci.person_id
    WHERE t.rn <= 5
),
TitleKeywords AS (
    SELECT 
        mt.id AS movie_id,
        STRING_AGG(DISTINCT k.keyword, ', ') AS all_keywords
    FROM aka_title mt
    LEFT JOIN movie_keyword mk ON mt.id = mk.movie_id
    LEFT JOIN keyword k ON mk.keyword_id = k.id
    GROUP BY mt.id
)
SELECT DISTINCT 
    ci.actor_name,
    ci.movie_title,
    ci.production_year,
    ci.nr_order,
    ci.cast_note,
    tk.all_keywords,
    COALESCE(CASE WHEN ci.cast_note IS NOT NULL THEN 1 ELSE 0 END, -1) AS note_presence,
    CASE 
        WHEN COALESCE(tk.all_keywords, '') = '' THEN 'No Keywords'
        ELSE 'Has Keywords'
    END AS keyword_status,
    COUNT(DISTINCT mc.company_id) OVER (PARTITION BY ci.movie_title) AS production_company_count,
    COALESCE(tk.all_keywords, 'N/A') AS keywords_info
FROM CasterInfo ci
LEFT JOIN TitleKeywords tk ON ci.movie_title = tk.movie_id
LEFT JOIN movie_companies mc ON mc.movie_id = ci.movie_title
WHERE ci.nr_order IS NOT NULL AND ci.nr_order > 0
ORDER BY ci.production_year DESC, ci.movie_title ASC, ci.nr_order;
