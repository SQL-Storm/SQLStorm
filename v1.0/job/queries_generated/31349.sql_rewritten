WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        mt.kind_id,
        1 AS depth
    FROM 
        aka_title mt
    WHERE 
        mt.production_year >= 2000  
    
    UNION ALL
    
    SELECT 
        ml.linked_movie_id,
        at.title,
        at.production_year,
        at.kind_id,
        mh.depth + 1
    FROM 
        MovieHierarchy mh
    INNER JOIN 
        movie_link ml ON mh.movie_id = ml.movie_id
    INNER JOIN 
        aka_title at ON at.id = ml.linked_movie_id
)

SELECT 
    ak.id AS aka_id,
    ak.name AS actor_name,
    mt.title AS movie_title,
    mt.production_year,
    COUNT(DISTINCT c.id) AS total_cast_count,
    STRING_AGG(DISTINCT kw.keyword, ', ') AS keywords,
    COUNT(DISTINCT CASE WHEN cr.role IS NOT NULL THEN cr.role END) AS roles_count,
    ROW_NUMBER() OVER (PARTITION BY ak.id ORDER BY mt.production_year DESC) AS rank
FROM 
    aka_name ak
JOIN 
    cast_info c ON ak.person_id = c.person_id
JOIN 
    MovieHierarchy mt ON c.movie_id = mt.movie_id
LEFT JOIN 
    movie_keyword mk ON mk.movie_id = mt.movie_id
LEFT JOIN 
    keyword kw ON kw.id = mk.keyword_id
LEFT JOIN 
    role_type cr ON c.role_id = cr.id
WHERE 
    ak.name IS NOT NULL
    AND ak.name <> ''  
    AND mt.production_year IS NOT NULL 
GROUP BY 
    ak.id, ak.name, mt.title, mt.production_year
HAVING 
    COUNT(DISTINCT kw.keyword) > 0  
    AND COUNT(DISTINCT c.id) > 1     
ORDER BY 
    ak.name, mt.production_year DESC;