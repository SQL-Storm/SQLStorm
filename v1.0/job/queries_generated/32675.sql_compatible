
WITH RECURSIVE MovieHierarchy AS (
    SELECT
        t.id AS movie_id,
        t.title,
        t.production_year,
        0 AS level
    FROM
        aka_title t
    WHERE
        t.production_year > 2000 AND t.kind_id = (SELECT id FROM kind_type WHERE kind = 'movie')

    UNION ALL

    SELECT
        mt.linked_movie_id,
        m.title,
        m.production_year,
        mh.level + 1
    FROM
        movie_link ml
    JOIN
        MovieHierarchy mh ON ml.movie_id = mh.movie_id
    JOIN
        aka_title m ON ml.linked_movie_id = m.id
)

SELECT
    ak.name AS actor_name,
    t.title AS movie_title,
    mh.production_year,
    COUNT(DISTINCT mc.company_id) AS company_count,
    AVG(CAST(mi.info AS integer)) FILTER (WHERE mi.info_type_id = (SELECT id FROM info_type WHERE info = 'duration')) AS avg_duration,
    ROW_NUMBER() OVER (PARTITION BY ak.name ORDER BY mh.production_year DESC) AS rank
FROM
    aka_name ak
JOIN
    cast_info ci ON ak.person_id = ci.person_id
JOIN
    aka_title t ON ci.movie_id = t.id
LEFT JOIN
    movie_companies mc ON t.id = mc.movie_id
LEFT JOIN
    movie_info mi ON t.id = mi.movie_id
JOIN
    MovieHierarchy mh ON t.id = mh.movie_id
WHERE
    mh.production_year IS NOT NULL
    AND ak.name IS NOT NULL
GROUP BY
    ak.name, t.title, mh.production_year
ORDER BY
    rank, movie_title;
