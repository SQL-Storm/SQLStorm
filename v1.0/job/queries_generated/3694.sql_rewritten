WITH RankedMovies AS (
    SELECT
        t.id AS movie_id,
        t.title,
        t.production_year,
        COUNT(ci.person_id) AS total_cast,
        RANK() OVER (PARTITION BY t.production_year ORDER BY COUNT(ci.person_id) DESC) AS rank_within_year
    FROM
        aka_title t
        LEFT JOIN complete_cast cc ON t.id = cc.movie_id
        LEFT JOIN cast_info ci ON cc.subject_id = ci.person_id
    GROUP BY
        t.id, t.title, t.production_year
),
MoviesWithKeywords AS (
    SELECT
        rm.movie_id,
        rm.title,
        STRING_AGG(k.keyword, ', ') AS keywords
    FROM
        RankedMovies rm
        LEFT JOIN movie_keyword mk ON rm.movie_id = mk.movie_id
        LEFT JOIN keyword k ON mk.keyword_id = k.id
    GROUP BY
        rm.movie_id, rm.title
),
TopMovies AS (
    SELECT
        mwk.movie_id,
        mwk.title,
        mwk.keywords,
        rm.total_cast
    FROM
        MoviesWithKeywords mwk
        INNER JOIN RankedMovies rm ON mwk.movie_id = rm.movie_id
    WHERE
        rm.rank_within_year <= 5  
)
SELECT
    COALESCE(m.title, 'Unknown Title') AS movie_title,
    COALESCE(m.keywords, 'No Keywords') AS keywords,
    COALESCE(m.total_cast, 0) AS total_cast_members,
    EXTRACT(YEAR FROM cast('2024-10-01' as date)) - COALESCE(m.production_year, 0) AS years_since_release
FROM
    TopMovies m
FULL OUTER JOIN aka_title at ON m.movie_id = at.id
WHERE
    m.production_year IS NULL OR m.production_year >= 2000
ORDER BY
    years_since_release, total_cast_members DESC;