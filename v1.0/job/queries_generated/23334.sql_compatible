
WITH ranked_movies AS (
    SELECT 
        t.id AS title_id,
        t.title,
        t.production_year,
        COUNT(DISTINCT ci.person_id) OVER (PARTITION BY t.id) AS cast_count,
        COALESCE(AVG(CASE WHEN ci.person_role_id IS NOT NULL THEN 1 ELSE NULL END) OVER (PARTITION BY t.id), 0) AS average_role_id_present,
        ROW_NUMBER() OVER (ORDER BY t.production_year DESC, t.id) AS rn
    FROM title t
    LEFT JOIN cast_info ci ON t.id = ci.movie_id
),
movie_keywords AS (
    SELECT 
        mk.movie_id,
        STRING_AGG(k.keyword, ', ' ORDER BY k.keyword) AS keywords
    FROM movie_keyword mk
    JOIN keyword k ON mk.keyword_id = k.id
    GROUP BY mk.movie_id
),
company_details AS (
    SELECT 
        mc.movie_id,
        STRING_AGG(DISTINCT cn.name, ' | ') AS companies,
        STRING_AGG(DISTINCT ct.kind, ', ') AS company_types
    FROM movie_companies mc
    JOIN company_name cn ON mc.company_id = cn.id
    JOIN company_type ct ON mc.company_type_id = ct.id
    GROUP BY mc.movie_id
),
movie_info_with_notes AS (
    SELECT 
        mi.movie_id,
        STRING_AGG(mi.info, '; ') AS all_info,
        STRING_AGG(mi.note, '; ') AS all_notes
    FROM movie_info mi
    GROUP BY mi.movie_id
)
SELECT 
    rm.title_id,
    rm.title,
    rm.production_year,
    rm.cast_count,
    rm.average_role_id_present,
    COALESCE(mk.keywords, 'No keywords') AS keywords,
    COALESCE(cd.companies, 'No companies') AS production_companies,
    COALESCE(cd.company_types, 'No types') AS company_types,
    COALESCE(mi.all_info, 'No info available') AS additional_info,
    COALESCE(mi.all_notes, 'No notes available') AS additional_notes
FROM ranked_movies rm
LEFT JOIN movie_keywords mk ON rm.title_id = mk.movie_id
LEFT JOIN company_details cd ON rm.title_id = cd.movie_id
LEFT JOIN movie_info_with_notes mi ON rm.title_id = mi.movie_id
WHERE (rm.cast_count > 0 OR rm.average_role_id_present > 0)
  AND (EXTRACT(YEAR FROM DATE '2024-10-01') - rm.production_year) < 15
ORDER BY rm.production_year DESC, rm.title;
