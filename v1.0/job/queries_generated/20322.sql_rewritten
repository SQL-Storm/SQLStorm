WITH RankedMovies AS (
    SELECT
        a.id AS movie_id,
        b.title,
        b.production_year,
        ROW_NUMBER() OVER (PARTITION BY b.production_year ORDER BY COUNT(DISTINCT c.person_id) DESC) AS actor_count_rank
    FROM
        aka_title b
    LEFT JOIN
        cast_info c ON b.movie_id = c.movie_id
    LEFT JOIN
        aka_name a ON c.person_id = a.person_id
    GROUP BY
        a.id, b.title, b.production_year
),
CompanyDetails AS (
    SELECT
        mc.movie_id,
        GROUP_CONCAT(DISTINCT cn.name SEPARATOR ', ') AS companies,
        ct.kind AS company_type
    FROM
        movie_companies mc
    JOIN
        company_name cn ON mc.company_id = cn.id
    JOIN
        company_type ct ON mc.company_type_id = ct.id
    GROUP BY
        mc.movie_id, ct.kind
),
KeywordStats AS (
    SELECT
        mk.movie_id,
        COUNT(DISTINCT k.keyword) AS keyword_count,
        MAX(LENGTH(k.keyword)) AS max_keyword_length
    FROM
        movie_keyword mk
    JOIN
        keyword k ON mk.keyword_id = k.id
    GROUP BY
        mk.movie_id
),
FinalOutput AS (
    SELECT
        rm.movie_id,
        rm.title,
        rm.production_year,
        COALESCE(cd.companies, 'No Companies') AS companies,
        cd.company_type,
        ks.keyword_count,
        ks.max_keyword_length
    FROM
        RankedMovies rm
    LEFT JOIN
        CompanyDetails cd ON rm.movie_id = cd.movie_id
    LEFT JOIN
        KeywordStats ks ON rm.movie_id = ks.movie_id
    WHERE
        rm.actor_count_rank <= 3
)
SELECT
    movie_id,
    title,
    production_year,
    companies,
    company_type,
    keyword_count,
    max_keyword_length
FROM
    FinalOutput
ORDER BY
    production_year DESC,
    keyword_count DESC NULLS LAST,
    max_keyword_length DESC;