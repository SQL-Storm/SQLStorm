
WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        m.id AS movie_id, 
        t.title AS movie_title, 
        1 AS level,
        t.title AS full_title
    FROM aka_title t
    JOIN movie_companies mc ON t.id = mc.movie_id
    JOIN company_name c ON mc.company_id = c.id
    WHERE c.country_code IS NOT NULL AND c.country_code <> ''
    
    UNION ALL
    
    SELECT 
        m.id AS movie_id,
        mh.full_title || ' -> ' || t.title AS movie_title,
        mh.level + 1,
        mh.full_title || ' -> ' || t.title
    FROM movie_hierarchy mh
    JOIN movie_link ml ON mh.movie_id = ml.movie_id
    JOIN aka_title t ON ml.linked_movie_id = t.id
)

SELECT 
    ak.name AS actor_name,
    t.title AS movie_title,
    mh.level AS hierarchy_level,
    COUNT(DISTINCT ai.id) OVER (PARTITION BY ak.id) AS total_movies_played,
    STRING_AGG(DISTINCT p.info || ' (Note: ' || COALESCE(p.note, 'N/A') || ')', '; ') AS person_info
FROM aka_name ak
JOIN cast_info ci ON ak.person_id = ci.person_id
JOIN aka_title t ON ci.movie_id = t.id
LEFT JOIN movie_info p ON t.id = p.movie_id
LEFT JOIN movie_hierarchy mh ON mh.movie_id = t.id
WHERE t.production_year IS NOT NULL
    AND ak.name IS NOT NULL
    AND (LOWER(t.title) LIKE '%drama%' OR LOWER(t.title) LIKE '%action%')
GROUP BY ak.id, ak.name, t.title, mh.level
HAVING COUNT(DISTINCT ci.movie_id) > 10
ORDER BY hierarchy_level DESC, total_movies_played DESC, ak.name ASC
LIMIT 100;
