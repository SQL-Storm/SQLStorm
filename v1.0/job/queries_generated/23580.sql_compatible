
WITH RankedMovies AS (
    SELECT 
        at.id AS title_id,
        at.title,
        CONCAT('Production Year: ', COALESCE(CAST(at.production_year AS VARCHAR), 'UNKNOWN')) AS production_year_info,
        ROW_NUMBER() OVER (PARTITION BY at.production_year ORDER BY at.title) AS title_rank,
        COUNT(*) OVER (PARTITION BY at.production_year) AS year_count
    FROM 
        aka_title at
    WHERE 
        at.production_year IS NOT NULL
),
ActorRoles AS (
    SELECT 
        ai.name AS actor_name,
        ct.kind AS role,
        COUNT(ci.movie_id) AS movies_count
    FROM 
        cast_info ci
    JOIN 
        aka_name ai ON ci.person_id = ai.person_id
    JOIN 
        comp_cast_type ct ON ci.person_role_id = ct.id
    GROUP BY 
        ai.name, ct.kind
    HAVING 
        COUNT(ci.movie_id) > (SELECT AVG(movie_count) FROM (SELECT COUNT(movie_id) AS movie_count FROM cast_info GROUP BY person_id) AS avg_movies)
),
MovieDetails AS (
    SELECT 
        m.id AS movie_id,
        m.title,
        COALESCE(emp.company_name, 'Unknown Company') AS production_company,
        mk.keyword,
        COALESCE(NULLIF(mi.info, ''), 'No Info') AS additional_info
    FROM 
        aka_title m
    LEFT JOIN 
        movie_companies mc ON m.id = mc.movie_id
    LEFT JOIN 
        company_name emp ON mc.company_id = emp.id
    LEFT JOIN 
        movie_keyword mk ON m.id = mk.movie_id
    LEFT JOIN 
        movie_info mi ON m.id = mi.movie_id
    WHERE 
        mk.keyword IS NOT NULL OR mi.info IS NOT NULL
),
FinalResults AS (
    SELECT 
        rm.title,
        rm.production_year_info,
        ar.actor_name,
        ar.role,
        md.production_company,
        md.keyword,
        md.additional_info,
        CASE 
            WHEN rm.year_count > 10 THEN 'Popular Year'
            ELSE 'Less Popular Year'
        END AS popularity_rating
    FROM 
        RankedMovies rm
    JOIN 
        ActorRoles ar ON ar.movies_count > 0
    JOIN 
        MovieDetails md ON rm.title_id = md.movie_id
)
SELECT 
    *,
    CASE 
        WHEN actor_name IS NULL THEN 'No Actors'
        ELSE actor_name
    END AS final_actor_info
FROM 
    FinalResults
ORDER BY 
    production_year_info DESC, 
    title ASC;
