
WITH RankedMovies AS (
    SELECT 
        t.title, 
        t.production_year, 
        k.keyword, 
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY k.keyword) AS rank
    FROM 
        aka_title t
    LEFT JOIN 
        movie_keyword mk ON t.id = mk.movie_id
    LEFT JOIN 
        keyword k ON mk.keyword_id = k.id
    WHERE 
        t.production_year IS NOT NULL
        AND t.title LIKE '%The%'
),
CastCounts AS (
    SELECT 
        c.movie_id, 
        COUNT(DISTINCT c.person_id) AS cast_count
    FROM 
        cast_info c
    GROUP BY 
        c.movie_id
),
TopMovies AS (
    SELECT 
        rm.title, 
        rm.production_year, 
        cc.cast_count
    FROM 
        RankedMovies rm
    JOIN 
        CastCounts cc ON rm.title = cc.movie_id
    WHERE 
        rm.rank <= 3
),
UnionKeywords AS (
    SELECT 
        title, 
        production_year, 
        'Keyword_Union' AS source
    FROM 
        RankedMovies 
    WHERE 
        rank = 1
    
    UNION ALL
    
    SELECT 
        title, 
        production_year, 
        'Cast_Count_Union' AS source
    FROM 
        TopMovies 
    WHERE 
        cast_count > 5
),
NullChecks AS (
    SELECT 
        title, 
        production_year, 
        CASE 
            WHEN production_year IS NULL THEN 'Year Unknown'
            ELSE CAST(production_year AS VARCHAR)
        END AS year_info
    FROM 
        UnionKeywords
)
SELECT 
    n.title, 
    n.production_year, 
    n.year_info, 
    COUNT(CASE WHEN n.production_year IS NULL THEN 1 END) AS null_year_count
FROM 
    NullChecks n
LEFT JOIN 
    title ti ON n.title = ti.title
GROUP BY 
    n.title, 
    n.production_year, 
    n.year_info
HAVING 
    COUNT(CASE WHEN ti.kind_id IN (SELECT id FROM kind_type WHERE kind LIKE 'Movie%') THEN 1 END) > 2
ORDER BY 
    n.production_year DESC, 
    n.title;
