
WITH RankedMovies AS (
    SELECT 
        mt.title AS movie_title,
        mt.production_year,
        COALESCE(REPLACE(mk.keyword, ' ', '_'), 'NO_KEYWORD') AS keyword,
        COUNT(cc.id) AS cast_count,
        ROW_NUMBER() OVER (PARTITION BY mt.production_year ORDER BY COUNT(cc.id) DESC) AS year_rank
    FROM 
        aka_title mt
    LEFT JOIN 
        movie_keyword mk ON mt.id = mk.movie_id
    LEFT JOIN 
        cast_info cc ON mt.id = cc.movie_id
    WHERE 
        mt.production_year IS NOT NULL
    GROUP BY 
        mt.id, mt.title, mt.production_year, mk.keyword
    HAVING 
        COUNT(cc.id) > 2
),

TopMovies AS (
    SELECT *
    FROM RankedMovies
    WHERE year_rank <= 5
),

PersonRoles AS (
    SELECT 
        p.name AS person_name,
        r.role AS role_name,
        COUNT(c.id) AS role_count
    FROM 
        cast_info c
    JOIN 
        aka_name p ON c.person_id = p.person_id
    JOIN 
        role_type r ON c.role_id = r.id
    GROUP BY 
        p.name, r.role
    HAVING 
        COUNT(c.id) > 1
)

SELECT 
    tm.movie_title,
    tm.production_year,
    tm.keyword,
    tm.cast_count,
    pr.person_name,
    pr.role_name,
    pr.role_count
FROM 
    TopMovies tm
FULL OUTER JOIN 
    PersonRoles pr ON tm.cast_count = pr.role_count
WHERE 
    (tm.keyword IS NOT NULL OR pr.role_name IS NOT NULL)
    AND (tm.cast_count > 2 OR pr.role_count > 0)
ORDER BY 
    tm.production_year DESC, 
    tm.cast_count DESC, 
    pr.role_count DESC
LIMIT 100;
