
WITH RankedMovies AS (
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.id ASC) AS year_rank
    FROM 
        aka_title t
    WHERE 
        t.production_year IS NOT NULL
),
PopularActors AS (
    SELECT 
        p.person_id,
        p.id AS aka_id,
        a.name,
        COUNT(DISTINCT c.movie_id) AS movie_count
    FROM 
        aka_name p
    JOIN 
        cast_info c ON p.person_id = c.person_id
    JOIN 
        aka_title a ON c.movie_id = a.id
    GROUP BY 
        p.person_id, p.id, a.name
    HAVING 
        COUNT(DISTINCT c.movie_id) > 5
)
SELECT 
    m.movie_id,
    m.title,
    m.production_year,
    pa.name AS popular_actor,
    COALESCE(CAST(m.production_year - (SELECT MAX(production_year) 
                                         FROM aka_title 
                                         WHERE production_year < m.production_year) AS VARCHAR), 'No previous year') AS previous_year,
    SUM(CASE WHEN ci.role_id IS NOT NULL THEN 1 ELSE 0 END) OVER (PARTITION BY m.movie_id) AS total_roles,
    CASE 
        WHEN m.production_year IS NOT NULL THEN 'Released in ' || m.production_year
        ELSE 'Year not available'
    END AS release_info
FROM 
    RankedMovies m
LEFT JOIN 
    PopularActors pa ON pa.movie_count > 0
LEFT JOIN 
    cast_info ci ON m.movie_id = ci.movie_id
WHERE 
    m.year_rank <= 10 AND (
        pa.movie_count IS NOT NULL OR
        ci.role_id IS NOT NULL
    )
GROUP BY
    m.movie_id,
    m.title,
    m.production_year,
    pa.name
ORDER BY 
    m.production_year DESC, 
    m.title;
