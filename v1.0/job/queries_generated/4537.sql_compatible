
WITH RankedMovies AS (
    SELECT 
        a.title,
        a.production_year,
        k.keyword,
        ROW_NUMBER() OVER (PARTITION BY a.production_year ORDER BY a.production_year DESC) AS rank
    FROM 
        aka_title a
    LEFT JOIN 
        movie_keyword mk ON a.id = mk.movie_id
    LEFT JOIN 
        keyword k ON mk.keyword_id = k.id
    WHERE 
        a.production_year IS NOT NULL
), CastInfoWithRoles AS (
    SELECT 
        c.movie_id,
        COUNT(DISTINCT c.person_id) AS total_cast,
        STRING_AGG(DISTINCT r.role, ', ') AS roles
    FROM 
        cast_info c
    JOIN 
        role_type r ON c.role_id = r.id
    GROUP BY 
        c.movie_id
), CompanyDetails AS (
    SELECT 
        mc.movie_id,
        cn.name AS company_name,
        ct.kind AS company_type
    FROM 
        movie_companies mc
    JOIN 
        company_name cn ON mc.company_id = cn.id
    JOIN 
        company_type ct ON mc.company_type_id = ct.id
), MovieStatistics AS (
    SELECT 
        rm.title,
        rm.production_year,
        ci.total_cast,
        ci.roles,
        COUNT(cd.company_name) AS company_count
    FROM 
        RankedMovies rm
    LEFT JOIN 
        CastInfoWithRoles ci ON rm.title = ci.movie_id
    LEFT JOIN 
        CompanyDetails cd ON rm.title = cd.movie_id
    GROUP BY 
        rm.title, rm.production_year, ci.total_cast, ci.roles
)
SELECT 
    ms.title,
    ms.production_year,
    COALESCE(ms.total_cast, 0) AS total_cast,
    COALESCE(ms.roles, 'N/A') AS roles,
    COALESCE(ms.company_count, 0) AS company_count
FROM 
    MovieStatistics ms
WHERE 
    ms.production_year >= 2000
ORDER BY 
    ms.production_year DESC, ms.total_cast DESC
LIMIT 10;
