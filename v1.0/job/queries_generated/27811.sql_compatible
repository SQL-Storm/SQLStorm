
WITH RankedMovies AS (
    SELECT 
        a.id AS movie_id,
        a.title,
        a.production_year,
        ARRAY_AGG(DISTINCT k.keyword) AS keywords,
        COUNT(DISTINCT c.person_id) AS total_cast,
        ROW_NUMBER() OVER (PARTITION BY a.production_year ORDER BY a.id) AS year_rank
    FROM 
        aka_title a
    LEFT JOIN 
        movie_keyword mk ON a.id = mk.movie_id
    LEFT JOIN 
        keyword k ON mk.keyword_id = k.id
    LEFT JOIN 
        cast_info c ON a.id = c.movie_id
    GROUP BY 
        a.id, a.title, a.production_year
),
PopularTitles AS (
    SELECT 
        movie_id,
        title,
        production_year,
        keywords,
        total_cast
    FROM 
        RankedMovies
    WHERE 
        total_cast > 5  
),

ActorInsights AS (
    SELECT 
        p.id AS actor_id,
        p.name,
        COUNT(DISTINCT c.movie_id) AS movies_acted_in,
        STRING_AGG(DISTINCT mt.title, ', ') AS titles
    FROM 
        aka_name p
    JOIN 
        cast_info c ON p.person_id = c.person_id
    JOIN 
        PopularTitles mt ON c.movie_id = mt.movie_id
    GROUP BY 
        p.id, p.name
)

SELECT 
    ai.actor_id,
    ai.name,
    ai.movies_acted_in,
    ai.titles,
    COUNT(DISTINCT a.title) AS different_movies,
    ARRAY_AGG(DISTINCT mt.keywords) AS associated_keywords
FROM 
    ActorInsights ai
LEFT JOIN 
    PopularTitles mt ON mt.title IN (SELECT unnest(string_to_array(ai.titles, ', ')))
LEFT JOIN 
    aka_title a ON mt.movie_id = a.id
GROUP BY 
    ai.actor_id, ai.name, ai.movies_acted_in, ai.titles
ORDER BY 
    ai.movies_acted_in DESC, ai.name ASC;
