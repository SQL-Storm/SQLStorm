
WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        COALESCE(mt.season_nr, 0) AS season,
        COALESCE(mt.episode_nr, 0) AS episode,
        1 AS level
    FROM
        aka_title mt
    WHERE 
        mt.episode_of_id IS NULL
    
    UNION ALL
    
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        COALESCE(mt.season_nr, 0) AS season,
        COALESCE(mt.episode_nr, 0) AS episode,
        mh.level + 1
    FROM
        aka_title mt
    INNER JOIN 
        movie_hierarchy mh ON mt.episode_of_id = mh.movie_id
)

SELECT 
    akn.name AS actor_name,
    av.title AS movie_title,
    av.production_year,
    COUNT(mk.keyword) AS keyword_count,
    STRING_AGG(mk.keyword, ', ') AS keywords,
    window_rank.rank AS role_rank
FROM 
    aka_name akn
JOIN 
    cast_info ci ON akn.person_id = ci.person_id
JOIN 
    movie_hierarchy av ON ci.movie_id = av.movie_id
LEFT JOIN 
    movie_keyword mk ON av.movie_id = mk.movie_id
LEFT JOIN 
    (SELECT 
         movie_id,
         ROW_NUMBER() OVER (PARTITION BY movie_id ORDER BY role_id) AS rank
     FROM 
         cast_info) AS window_rank ON window_rank.movie_id = av.movie_id AND window_rank.rank = ci.nr_order
WHERE 
    av.production_year > 2000
    AND akn.name IS NOT NULL
GROUP BY 
    akn.name, av.title, av.production_year, window_rank.rank
ORDER BY 
    av.production_year DESC, actor_name, movie_title;
