
WITH RankedMovies AS (
    SELECT 
        a.title,
        a.production_year,
        COUNT(DISTINCT c.person_id) AS total_cast,
        ROW_NUMBER() OVER (PARTITION BY a.production_year ORDER BY COUNT(DISTINCT c.person_id) DESC) AS rank
    FROM aka_title a
    LEFT JOIN cast_info c ON a.id = c.movie_id
    GROUP BY a.id, a.title, a.production_year
), MovieDetails AS (
    SELECT
        m.title,
        m.production_year,
        CASE 
            WHEN m.total_cast > 10 THEN 'Large'
            WHEN m.total_cast BETWEEN 5 AND 10 THEN 'Medium'
            ELSE 'Small'
        END AS cast_size,
        (SELECT COUNT(*) FROM movie_keyword mk WHERE mk.movie_id = m.id) AS keyword_count
    FROM RankedMovies m
    WHERE m.rank <= 10
), TopKeywords AS (
    SELECT 
        mk.movie_id,
        STRING_AGG(k.keyword, ', ') AS keywords
    FROM movie_keyword mk
    JOIN keyword k ON mk.keyword_id = k.id
    GROUP BY mk.movie_id
)
SELECT 
    md.title,
    md.production_year,
    md.cast_size,
    md.keyword_count,
    COALESCE(tk.keywords, 'No Keywords') AS keywords
FROM MovieDetails md
LEFT JOIN TopKeywords tk ON md.title = tk.movie_id
WHERE (md.cast_size = 'Large' OR md.keyword_count > 5)
  AND md.production_year >= 2000
ORDER BY md.production_year DESC, md.cast_size DESC;
