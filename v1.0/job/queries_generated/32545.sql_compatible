
WITH RECURSIVE RecursiveMovies AS (
    SELECT 
        m.id AS movie_id, 
        m.title, 
        m.production_year, 
        1 AS level
    FROM 
        aka_title m
    WHERE 
        m.production_year = 2023
    
    UNION ALL
    
    SELECT 
        m.id AS movie_id, 
        m.title, 
        m.production_year, 
        r.level + 1
    FROM 
        aka_title m
    JOIN 
        movie_link ml ON ml.movie_id = r.movie_id
    JOIN 
        RecursiveMovies r ON r.movie_id = ml.linked_movie_id
    WHERE 
        r.level < 3
)

SELECT 
    a.name AS actor_name,
    t.title AS movie_title,
    t.production_year,
    COALESCE(SUM(CASE WHEN ci.note IS NOT NULL THEN 1 ELSE 0 END), 0) AS num_roles,
    AVG(CASE WHEN t.kind_id = 1 THEN 1 ELSE NULL END) AS avg_lead_role,
    STRING_AGG(DISTINCT c.name, ', ') AS company_names
FROM 
    cast_info ci
INNER JOIN 
    aka_name a ON ci.person_id = a.person_id
INNER JOIN 
    RecursiveMovies t ON ci.movie_id = t.movie_id
LEFT JOIN 
    movie_companies mc ON t.movie_id = mc.movie_id
LEFT JOIN 
    company_name c ON mc.company_id = c.id
GROUP BY 
    a.name, t.title, t.production_year
HAVING 
    COUNT(DISTINCT ci.role_id) >= 2
ORDER BY 
    t.production_year DESC, 
    num_roles DESC;
