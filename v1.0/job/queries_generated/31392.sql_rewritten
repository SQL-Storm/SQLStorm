WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        mt.kind_id,
        1 AS level
    FROM 
        aka_title mt
    WHERE 
        mt.production_year >= 2000

    UNION ALL 

    SELECT 
        ml.linked_movie_id,
        at.title,
        at.production_year,
        at.kind_id,
        mh.level + 1
    FROM 
        movie_link ml
    JOIN 
        aka_title at ON ml.linked_movie_id = at.id
    JOIN 
        movie_hierarchy mh ON ml.movie_id = mh.movie_id
)
SELECT 
    a.name AS actor_name,
    mt.title AS movie_title,
    ht.name AS company_name,
    mp.role AS actor_role,
    COUNT(DISTINCT mk.keyword) AS keyword_count,
    AVG(CASE WHEN mt.production_year < 2010 THEN 0 ELSE 1 END) AS percentage_recent_movies,
    ROW_NUMBER() OVER(PARTITION BY a.id ORDER BY mt.production_year DESC) AS row_num
FROM 
    aka_name a
JOIN 
    cast_info ci ON a.person_id = ci.person_id
JOIN 
    aka_title mt ON ci.movie_id = mt.id
LEFT JOIN 
    movie_companies mc ON mc.movie_id = mt.id
LEFT JOIN 
    company_name ht ON mc.company_id = ht.id
LEFT JOIN 
    movie_keyword mk ON mk.movie_id = mt.id
WHERE 
    a.name IS NOT NULL 
    AND mt.kind_id IS NOT NULL 
    AND ci.nr_order <= 3  
GROUP BY 
    a.name, mt.title, ht.name, mp.role
HAVING 
    COUNT(DISTINCT mk.keyword) > 0
ORDER BY 
    actor_name, movie_title DESC;