WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        m.id AS movie_id,
        m.title,
        m.production_year,
        1 AS level,
        CAST(m.title AS TEXT) AS path
    FROM 
        aka_title m
    WHERE 
        m.kind_id = 1  

    UNION ALL

    SELECT 
        linked.linked_movie_id,
        m.title,
        m.production_year,
        mh.level + 1,
        CAST(mh.path || ' > ' || m.title AS TEXT)
    FROM 
        movie_link linked
    JOIN 
        aka_title m ON linked.linked_movie_id = m.id
    JOIN 
        movie_hierarchy mh ON linked.movie_id = mh.movie_id
)

SELECT 
    a.name AS actor_name,
    m.title AS movie_title,
    m.production_year,
    COUNT(DISTINCT cc.person_id) AS num_cast_members,
    STRING_AGG(DISTINCT co.name, ', ') AS company_names,
    SUM(CASE WHEN mi.info_type_id = 1 THEN 1 ELSE 0 END) AS num_plot_descriptions,
    ROW_NUMBER() OVER (PARTITION BY m.id ORDER BY COUNT(DISTINCT cc.person_id) DESC) AS actor_rank
FROM 
    cast_info cc
JOIN 
    aka_name a ON cc.person_id = a.person_id
JOIN 
    aka_title m ON cc.movie_id = m.movie_id
LEFT JOIN 
    movie_companies mc ON mc.movie_id = m.id
LEFT JOIN 
    company_name co ON mc.company_id = co.id
LEFT JOIN 
    movie_info mi ON m.id = mi.movie_id AND mi.info_type_id = 1 
WHERE 
    m.production_year >= 2000
GROUP BY 
    a.name, m.title, m.production_year
HAVING 
    COUNT(DISTINCT cc.person_id) > 5
ORDER BY 
    m.production_year DESC, actor_rank
LIMIT 10;