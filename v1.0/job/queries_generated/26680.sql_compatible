
WITH RankedTitles AS (
    SELECT 
        t.id AS title_id,
        t.title AS movie_title,
        t.production_year,
        k.keyword AS keyword,
        ROW_NUMBER() OVER (PARTITION BY t.id ORDER BY k.keyword) AS rank
    FROM 
        aka_title t
    JOIN 
        movie_keyword mk ON t.id = mk.movie_id
    JOIN 
        keyword k ON mk.keyword_id = k.id
),
ActorRoles AS (
    SELECT 
        ci.movie_id,
        ak.name AS actor_name,
        rt.role AS role,
        ROW_NUMBER() OVER (PARTITION BY ci.movie_id ORDER BY ak.name) AS role_rank
    FROM 
        cast_info ci
    JOIN 
        aka_name ak ON ci.person_id = ak.person_id
    JOIN 
        role_type rt ON ci.role_id = rt.id
),
MovieDetails AS (
    SELECT 
        t.title,
        t.production_year,
        COUNT(DISTINCT ar.actor_name) AS actor_count,
        STRING_AGG(DISTINCT k.keyword, ', ') AS keywords,
        STRING_AGG(DISTINCT CONCAT(ar.actor_name, ' as ', ar.role), '; ') AS cast_details
    FROM 
        RankedTitles rt
    JOIN 
        aka_title t ON rt.title_id = t.id
    LEFT JOIN 
        ActorRoles ar ON t.id = ar.movie_id
    LEFT JOIN 
        movie_info mi ON t.id = mi.movie_id
    GROUP BY 
        t.title, t.production_year
)
SELECT 
    md.title,
    md.production_year,
    md.actor_count,
    md.keywords,
    md.cast_details
FROM 
    MovieDetails md
WHERE 
    md.production_year BETWEEN 1990 AND 2020
ORDER BY 
    md.production_year DESC, md.actor_count DESC
LIMIT 10;
