
WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        1 AS level
    FROM 
        aka_title mt
    WHERE 
        mt.kind_id = (SELECT id FROM kind_type WHERE kind = 'movie')
    
    UNION ALL
    
    SELECT 
        ml.linked_movie_id,
        lt.title,
        lt.production_year,
        mh.level + 1
    FROM 
        movie_link ml
    JOIN 
        aka_title lt ON ml.linked_movie_id = lt.id
    JOIN 
        MovieHierarchy mh ON ml.movie_id = mh.movie_id
)

SELECT 
    ak.name AS actor_name,
    mt.title AS movie_title,
    mt.production_year,
    mh.level AS movie_level,
    COUNT(DISTINCT kc.keyword) AS keyword_count,
    AVG(CAST(pi.info AS INT)) FILTER (WHERE pi.info_type_id = (SELECT id FROM info_type WHERE info = 'budget')) AS avg_budget
FROM 
    aka_name ak
JOIN 
    cast_info ci ON ak.person_id = ci.person_id
JOIN 
    aka_title mt ON ci.movie_id = mt.id
LEFT JOIN 
    movie_keyword mk ON mt.id = mk.movie_id
LEFT JOIN 
    keyword kc ON mk.keyword_id = kc.id
LEFT JOIN 
    MovieHierarchy mh ON mt.id = mh.movie_id
LEFT JOIN 
    person_info pi ON ak.person_id = pi.person_id
GROUP BY 
    ak.name, mt.title, mt.production_year, mh.level
HAVING 
    COUNT(DISTINCT kc.keyword) > 0 AND 
    AVG(CAST(pi.info AS INT)) FILTER (WHERE pi.info_type_id = (SELECT id FROM info_type WHERE info = 'budget')) IS NOT NULL
ORDER BY 
    mh.level DESC, 
    ak.name;
