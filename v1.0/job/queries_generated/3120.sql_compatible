
WITH RankedTitles AS (
    SELECT 
        t.id AS title_id,
        t.title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.title) AS rank
    FROM 
        title t
    WHERE 
        t.production_year IS NOT NULL
),
CompanyStats AS (
    SELECT 
        mc.movie_id,
        COUNT(DISTINCT mc.company_id) AS company_count,
        MAX(CASE WHEN ct.kind = 'Production' THEN 1 ELSE 0 END) AS has_production_company
    FROM 
        movie_companies mc
    JOIN 
        company_name cn ON mc.company_id = cn.id
    JOIN 
        company_type ct ON mc.company_type_id = ct.id
    GROUP BY 
        mc.movie_id
),
FullMovieInfo AS (
    SELECT 
        mt.movie_id,
        COUNT(DISTINCT mk.keyword_id) AS keyword_count,
        STRING_AGG(mk.keyword, ', ') AS keywords,
        COALESCE(cs.company_count, 0) AS company_count,
        COALESCE(cs.has_production_company, 0) AS has_production_company
    FROM 
        aka_title mt
    LEFT JOIN 
        movie_keyword mk ON mt.movie_id = mk.movie_id
    LEFT JOIN 
        CompanyStats cs ON mt.movie_id = cs.movie_id
    GROUP BY 
        mt.movie_id
)
SELECT 
    rt.title_id,
    rt.title,
    rt.production_year,
    fmi.keyword_count,
    fmi.keywords,
    fmi.company_count,
    fmi.has_production_company,
    CASE 
        WHEN fmi.has_production_company = 1 THEN 'Yes'
        ELSE 'No'
    END AS production_company_status
FROM 
    RankedTitles rt
LEFT JOIN 
    FullMovieInfo fmi ON rt.title_id = fmi.movie_id
WHERE 
    rt.rank <= 5
ORDER BY 
    rt.production_year DESC, rt.title ASC;
