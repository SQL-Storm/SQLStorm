
WITH RankedMovies AS (
    SELECT 
        a.title,
        a.production_year,
        ROW_NUMBER() OVER (PARTITION BY a.production_year ORDER BY m.title) AS rank,
        COUNT(*) OVER (PARTITION BY a.production_year) AS total_movies
    FROM 
        aka_title a
    JOIN 
        title m ON a.movie_id = m.id
    WHERE 
        a.production_year IS NOT NULL
),
ActorCount AS (
    SELECT 
        c.movie_id,
        COUNT(DISTINCT c.person_id) AS actor_count
    FROM 
        cast_info c
    GROUP BY 
        c.movie_id
),
MoviesWithActorCount AS (
    SELECT 
        rm.title,
        rm.production_year,
        ac.actor_count
    FROM 
        RankedMovies rm
    LEFT JOIN 
        ActorCount ac ON rm.movie_id = ac.movie_id
)
SELECT 
    mwac.title,
    mwac.production_year,
    mwac.actor_count,
    COALESCE(mwac.actor_count, 0) AS non_null_actor_count,
    CASE 
        WHEN mwac.actor_count > 10 THEN 'Large Cast'
        WHEN mwac.actor_count BETWEEN 5 AND 10 THEN 'Medium Cast'
        ELSE 'Small Cast'
    END AS cast_size_category
FROM 
    MoviesWithActorCount mwac
WHERE 
    mwac.actor_count IS NOT NULL
    OR mwac.production_year IN (SELECT DISTINCT production_year FROM aka_title WHERE production_year < 2000)
ORDER BY 
    mwac.production_year DESC, mwac.title;
