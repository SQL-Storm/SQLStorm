
WITH RankedMovies AS (
    SELECT 
        t.id AS title_id,
        t.title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY COUNT(DISTINCT c.person_id) DESC) AS rn
    FROM 
        title t
    LEFT JOIN 
        cast_info c ON t.id = c.movie_id
    GROUP BY 
        t.id, t.title, t.production_year
),
TopMovies AS (
    SELECT 
        title_id,
        title,
        production_year
    FROM 
        RankedMovies
    WHERE 
        rn <= 5
),
MovieDetails AS (
    SELECT 
        tm.title,
        tm.production_year,
        COALESCE(STRING_AGG(DISTINCT ak.name) WITHIN GROUP (ORDER BY ak.name), 'No Cast') AS cast_names,
        COALESCE(STRING_AGG(DISTINCT k.keyword) WITHIN GROUP (ORDER BY k.keyword), 'No Keywords') AS keywords
    FROM 
        TopMovies tm
    LEFT JOIN 
        cast_info ci ON tm.title_id = ci.movie_id
    LEFT JOIN 
        aka_name ak ON ci.person_id = ak.person_id
    LEFT JOIN 
        movie_keyword mk ON tm.title_id = mk.movie_id
    LEFT JOIN 
        keyword k ON mk.keyword_id = k.id
    GROUP BY 
        tm.title, tm.production_year
),
CompanyInfo AS (
    SELECT 
        m.movie_id,
        STRING_AGG(DISTINCT c.name) WITHIN GROUP (ORDER BY c.name) AS companies
    FROM 
        movie_companies m
    JOIN 
        company_name c ON m.company_id = c.id
    GROUP BY 
        m.movie_id
)
SELECT 
    md.title,
    md.production_year,
    md.cast_names,
    md.keywords,
    COALESCE(ci.companies, 'No Companies') AS companies
FROM 
    MovieDetails md
LEFT JOIN 
    CompanyInfo ci ON md.title_id = ci.movie_id
WHERE 
    md.production_year > 2000
ORDER BY 
    md.production_year DESC, md.title;
