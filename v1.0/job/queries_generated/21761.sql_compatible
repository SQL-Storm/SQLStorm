
WITH RecursiveTitleCTE AS (
    SELECT t.id, t.title, t.production_year, t.kind_id,
           ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.title) AS rn
    FROM aka_title t
    WHERE t.production_year IS NOT NULL
), RoleStats AS (
    SELECT ci.movie_id, rt.role AS role, COUNT(ci.person_id) AS num_roles
    FROM cast_info ci
    JOIN role_type rt ON ci.role_id = rt.id
    GROUP BY ci.movie_id, rt.role
), MovieGenres AS (
    SELECT 
        mk.movie_id,
        STRING_AGG(DISTINCT kt.keyword, ', ' ORDER BY kt.keyword) AS genres
    FROM movie_keyword mk
    JOIN keyword kt ON mk.keyword_id = kt.id
    GROUP BY mk.movie_id
), NullHandling AS (
    SELECT 
        tn.id AS movie_id,
        tn.title,
        tn.production_year,
        COALESCE(rs.num_roles, 0) AS total_roles,
        COALESCE(mg.genres, 'No Genre') AS genres
    FROM title tn
    LEFT JOIN RoleStats rs ON tn.id = rs.movie_id
    LEFT JOIN MovieGenres mg ON tn.id = mg.movie_id
), GenreCount AS (
    SELECT 
        movie_id,
        COUNT(DISTINCT genres) AS genre_count
    FROM NullHandling
    GROUP BY movie_id
)
SELECT 
    ak.person_id AS person_id,
    ak.name AS actor_name,
    nt.title AS movie_title,
    nt.production_year,
    nc.genre_count,
    nt.total_roles
FROM aka_name ak
JOIN cast_info ci ON ak.person_id = ci.person_id
JOIN NullHandling nt ON ci.movie_id = nt.movie_id
LEFT JOIN GenreCount nc ON nt.movie_id = nc.movie_id
WHERE nt.production_year > (
    SELECT AVG(production_year) 
    FROM title
) OR ak.name IS NULL
ORDER BY 
    nt.production_year DESC,
    ak.name,
    nc.genre_count DESC
LIMIT 10;
