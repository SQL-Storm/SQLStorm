
WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        0 AS level,
        CAST(mt.title AS VARCHAR) AS path
    FROM 
        aka_title mt
    WHERE 
        mt.production_year >= 2000

    UNION ALL

    SELECT 
        ml.linked_movie_id AS movie_id,
        at.title,
        at.production_year,
        mh.level + 1 AS level,
        CAST(mh.path || ' -> ' || at.title AS VARCHAR) AS path
    FROM 
        movie_link ml
    JOIN 
        aka_title at ON ml.linked_movie_id = at.id
    JOIN 
        movie_hierarchy mh ON ml.movie_id = mh.movie_id
    WHERE 
        at.production_year >= 2000
)

SELECT 
    h.movie_id,
    h.title AS main_title,
    h.production_year,
    ARRAY_AGG(DISTINCT c.name) AS cast_names,
    COUNT(DISTINCT kc.keyword) AS keyword_count,
    MAX(h.level) AS hierarchy_level,
    CASE 
        WHEN h.production_year IS NULL THEN 'Unknown Year'
        ELSE CAST(h.production_year AS TEXT)
    END AS production_year_label
FROM 
    movie_hierarchy h
LEFT JOIN 
    complete_cast cc ON h.movie_id = cc.movie_id
LEFT JOIN 
    cast_info c ON cc.subject_id = c.person_id 
LEFT JOIN 
    movie_keyword mk ON mk.movie_id = h.movie_id
LEFT JOIN 
    keyword kc ON mk.keyword_id = kc.id
WHERE 
    h.production_year IS NOT NULL
GROUP BY 
    h.movie_id, h.title, h.production_year
HAVING 
    COUNT(DISTINCT c.id) > 2  
ORDER BY 
    hierarchy_level DESC, 
    main_title;
