
WITH RankedMovies AS (
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        ARRAY_AGG(DISTINCT k.keyword) AS keywords,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY COUNT(DISTINCT c.person_id) DESC) AS rank
    FROM 
        aka_title t
    JOIN 
        movie_keyword mk ON t.id = mk.movie_id
    JOIN 
        keyword k ON mk.keyword_id = k.id
    JOIN 
        complete_cast cc ON t.id = cc.movie_id
    JOIN 
        cast_info c ON cc.subject_id = c.person_id
    GROUP BY 
        t.id, t.title, t.production_year
),

TopMovies AS (
    SELECT 
        movie_id,
        title,
        production_year,
        keywords
    FROM 
        RankedMovies
    WHERE 
        rank <= 5
)

SELECT 
    tm.title,
    tm.production_year,
    COALESCE(GROUP_CONCAT(DISTINCT an.name ORDER BY an.name), 'No Cast') AS cast_names,
    COALESCE(GROUP_CONCAT(DISTINCT co.name ORDER BY co.name), 'No Companies') AS company_names
FROM 
    TopMovies tm
LEFT JOIN 
    complete_cast c ON tm.movie_id = c.movie_id
LEFT JOIN 
    aka_name an ON c.subject_id = an.person_id
LEFT JOIN 
    movie_companies mc ON tm.movie_id = mc.movie_id
LEFT JOIN 
    company_name co ON mc.company_id = co.id
LEFT JOIN 
    person_info pi ON an.id = pi.person_id AND pi.info_type_id IN (SELECT id FROM info_type WHERE info = 'birth_date')
WHERE 
    pi.info IS NOT NULL
GROUP BY 
    tm.movie_id, tm.title, tm.production_year
ORDER BY 
    tm.production_year DESC;
