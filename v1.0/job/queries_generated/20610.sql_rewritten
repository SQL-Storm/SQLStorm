WITH RankedMovies AS (
    SELECT 
        a.title AS movie_title,
        a.production_year,
        COUNT(DISTINCT c.person_id) AS total_cast,
        ROW_NUMBER() OVER (PARTITION BY a.production_year ORDER BY COUNT(DISTINCT c.person_id) DESC) AS rank_by_cast
    FROM
        aka_title a
    JOIN
        cast_info c ON a.id = c.movie_id
    GROUP BY 
        a.id, a.title, a.production_year
),

MovieKeywords AS (
    SELECT 
        mk.movie_id,
        STRING_AGG(k.keyword, ', ') AS keywords
    FROM
        movie_keyword mk
    JOIN 
        keyword k ON mk.keyword_id = k.id
    GROUP BY 
        mk.movie_id
),

MovieCompanies AS (
    SELECT 
        mc.movie_id,
        STRING_AGG(DISTINCT cn.name, ', ') AS companies
    FROM 
        movie_companies mc
    JOIN 
        company_name cn ON mc.company_id = cn.id
    GROUP BY 
        mc.movie_id
),

FilteredMovies AS (
    SELECT 
        m.movie_title,
        m.production_year,
        mk.keywords,
        mc.companies,
        CASE 
            WHEN mi.info IS NOT NULL THEN mi.info
            ELSE 'Information Not Available' 
        END AS additional_info
    FROM 
        RankedMovies m
    LEFT JOIN 
        MovieKeywords mk ON m.movie_title = mk.movie_title
    LEFT JOIN 
        MovieCompanies mc ON m.movie_title = (
            SELECT 
                title 
            FROM 
                aka_title 
            WHERE 
                id = m.movie_id
            LIMIT 1
        )
    LEFT JOIN 
        movie_info mi ON m.movie_title = (SELECT title FROM aka_title WHERE id = mi.movie_id LIMIT 1)
    WHERE 
        m.rank_by_cast <= 5
        AND m.production_year IS NOT NULL
        AND (m.total_cast > 0 OR m.keywords IS NOT NULL)
)

SELECT 
    fm.movie_title,
    fm.production_year,
    COALESCE(fm.keywords, 'No Keywords') AS keywords,
    COALESCE(fm.companies, 'No Companies') AS companies,
    fm.additional_info
FROM 
    FilteredMovies fm
WHERE 
    fm.additional_info IS NOT NULL 
ORDER BY 
    fm.production_year DESC, 
    fm.movie_title;