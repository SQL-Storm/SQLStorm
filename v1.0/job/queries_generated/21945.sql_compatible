
WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title AS movie_title,
        NULL AS parent_movie_id,
        0 AS depth
    FROM 
        aka_title mt
    WHERE 
        mt.production_year >= 2000
    UNION ALL
    SELECT 
        ml.linked_movie_id AS movie_id,
        m.title AS movie_title,
        mh.movie_id AS parent_movie_id,
        mh.depth + 1
    FROM 
        movie_link ml
    JOIN 
        title m ON ml.linked_movie_id = m.id
    JOIN 
        movie_hierarchy mh ON ml.movie_id = mh.movie_id
)
SELECT 
    mh.movie_id,
    mh.movie_title,
    mh.depth,
    COUNT(DISTINCT cc.person_id) AS total_cast,
    STRING_AGG(DISTINCT an.name, ', ') AS cast_names,
    AVG(COALESCE(mo.info_text_length, 0)) AS avg_info_text_length
FROM 
    movie_hierarchy mh
LEFT JOIN 
    complete_cast cc ON mh.movie_id = cc.movie_id
LEFT JOIN 
    aka_name an ON cc.person_id = an.person_id 
LEFT JOIN (
    SELECT 
        movie_id,
        LENGTH(info) AS info_text_length
    FROM 
        movie_info
    WHERE 
        info IS NOT NULL AND info <> ''
) mo ON mh.movie_id = mo.movie_id
WHERE 
    mh.depth < 3 
GROUP BY 
    mh.movie_id, mh.movie_title, mh.depth
HAVING 
    COUNT(DISTINCT cc.person_id) > 0 AND 
    AVG(COALESCE(mo.info_text_length, 0)) > 100 
ORDER BY 
    mh.depth, total_cast DESC;
