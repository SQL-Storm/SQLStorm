WITH RECURSIVE MovieHierarchy AS (
    
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        0 AS level
    FROM 
        aka_title mt
    WHERE 
        mt.production_year >= 2000

    UNION ALL

    
    SELECT 
        ml.linked_movie_id AS movie_id,
        mt.title,
        mt.production_year,
        mh.level + 1 AS level
    FROM 
        movie_link ml
    JOIN 
        aka_title mt ON ml.linked_movie_id = mt.id
    JOIN 
        MovieHierarchy mh ON ml.movie_id = mh.movie_id
)
SELECT 
    p.id AS person_id,
    a.name AS actor_name,
    mh.title,
    mh.production_year,
    COUNT(DISTINCT mc.company_id) AS production_company_count,
    AVG(COALESCE(mk.keyword_count, 0)) AS avg_keywords,
    MAX(mh.level) AS max_hierarchy_level
FROM 
    MovieHierarchy mh
JOIN 
    complete_cast cc ON cc.movie_id = mh.movie_id
JOIN 
    cast_info ci ON ci.movie_id = mh.movie_id 
JOIN 
    aka_name a ON a.person_id = ci.person_id 
LEFT JOIN 
    movie_companies mc ON mc.movie_id = mh.movie_id
LEFT JOIN (
    SELECT 
        mk.movie_id, 
        COUNT(mk.keyword_id) AS keyword_count
    FROM 
        movie_keyword mk
    GROUP BY 
        mk.movie_id
) mk ON mk.movie_id = mh.movie_id
JOIN 
    info_type it ON it.id = 1 
WHERE 
    mh.production_year IS NOT NULL
GROUP BY 
    p.id, a.name, mh.id, mh.title, mh.production_year
ORDER BY 
    mh.production_year DESC, 
    avg_keywords DESC
LIMIT 50;