
WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title AS movie_title,
        mt.production_year,
        NULL AS parent_movie_id,
        1 AS level
    FROM 
        aka_title mt
    WHERE 
        mt.production_year > 2000

    UNION ALL
    
    SELECT 
        ml.linked_movie_id AS movie_id,
        mt.title AS movie_title,
        mt.production_year,
        mh.movie_id AS parent_movie_id,
        mh.level + 1
    FROM 
        movie_link ml
    JOIN 
        aka_title mt ON ml.linked_movie_id = mt.id
    JOIN 
        MovieHierarchy mh ON ml.movie_id = mh.movie_id
    WHERE 
        mt.production_year > 2000
)
SELECT 
    mh.movie_id,
    mh.movie_title,
    mh.production_year,
    mh.parent_movie_id,
    mh.level,
    COUNT(ci.person_id) AS actor_count,
    STRING_AGG(DISTINCT ak.name, ', ') AS actor_names,
    AVG(LENGTH(mi.info)) AS avg_movie_info_length
FROM 
    MovieHierarchy mh
LEFT JOIN 
    cast_info ci ON mh.movie_id = ci.movie_id
LEFT JOIN 
    aka_name ak ON ci.person_id = ak.person_id
LEFT JOIN 
    movie_info mi ON mh.movie_id = mi.movie_id
WHERE 
    mh.level <= 2
    AND ak.name IS NOT NULL
GROUP BY 
    mh.movie_id, mh.movie_title, mh.production_year, mh.parent_movie_id, mh.level
HAVING 
    COUNT(ci.person_id) > 0
ORDER BY 
    mh.production_year DESC, 
    actor_count DESC
LIMIT 50;
