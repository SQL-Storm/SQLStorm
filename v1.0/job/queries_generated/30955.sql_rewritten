WITH RECURSIVE movie_hierarchy AS (
    SELECT
        m.id AS movie_id,
        m.title,
        m.production_year,
        0 AS level
    FROM
        aka_title m
    WHERE
        m.kind_id IN (SELECT id FROM kind_type WHERE kind = 'movie')
    
    UNION ALL
    
    SELECT
        m.id AS movie_id,
        m.title,
        m.production_year,
        mh.level + 1
    FROM
        movie_hierarchy mh
    JOIN 
        aka_title m ON mh.movie_id = m.episode_of_id
)

SELECT
    a.name AS actor_name,
    t.title AS movie_title,
    t.production_year,
    COUNT(cc.id) AS total_casts,
    STRING_AGG(DISTINCT k.keyword, ', ') AS keywords,
    AVG(CASE WHEN ci.note IS NULL THEN 0 ELSE 1 END) AS average_cast_status,
    MAX(CASE WHEN ci.nr_order IS NULL THEN (SELECT MAX(nr_order) FROM cast_info WHERE movie_id = t.id) ELSE ci.nr_order END) AS max_cast_order
FROM
    aka_name a
JOIN
    cast_info ci ON a.person_id = ci.person_id
JOIN
    movie_hierarchy mh ON ci.movie_id = mh.movie_id
JOIN
    aka_title t ON mh.movie_id = t.id
LEFT JOIN
    movie_keyword mk ON t.id = mk.movie_id
LEFT JOIN
    keyword k ON mk.keyword_id = k.id
WHERE
    t.production_year IS NOT NULL
    AND a.name IS NOT NULL
GROUP BY
    a.name, t.title, t.production_year
HAVING
    COUNT(cc.id) > 1
ORDER BY
    t.production_year DESC,
    total_casts DESC;