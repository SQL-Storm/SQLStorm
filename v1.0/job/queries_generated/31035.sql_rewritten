WITH RECURSIVE MovieHierarchy AS (
    
    SELECT 
        m.id AS movie_id, 
        m.title, 
        1 AS level
    FROM 
        aka_title AS m
    WHERE 
        m.production_year >= 2000  

    UNION ALL

    SELECT 
        ml.linked_movie_id, 
        a.title, 
        mh.level + 1
    FROM 
        movie_link AS ml
    JOIN 
        aka_title AS a ON a.id = ml.linked_movie_id
    JOIN 
        MovieHierarchy AS mh ON mh.movie_id = ml.movie_id
)
SELECT 
    a.name AS actor_name,
    c.movie_id,
    t.title AS movie_title,
    t.production_year,
    COALESCE(CAST(t.production_year AS VARCHAR), 'Unknown') AS year_display,
    COUNT(DISTINCT t.id) OVER (PARTITION BY a.name) AS total_movies,
    STRING_AGG(DISTINCT k.keyword, ', ') AS keywords,
    ROW_NUMBER() OVER (PARTITION BY a.name ORDER BY t.production_year DESC) AS rank
FROM 
    aka_name AS a
JOIN 
    cast_info AS ci ON ci.person_id = a.person_id
JOIN 
    MovieHierarchy AS mh ON mh.movie_id = ci.movie_id
JOIN 
    aka_title AS t ON t.id = mh.movie_id
LEFT JOIN 
    movie_keyword AS mk ON mk.movie_id = t.id
LEFT JOIN 
    keyword AS k ON k.id = mk.keyword_id
WHERE 
    a.name IS NOT NULL
    AND t.production_year IS NOT NULL
GROUP BY 
    a.name, c.movie_id, t.title, t.production_year
ORDER BY 
    actor_name, production_year DESC;