
WITH MovieDetails AS (
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        k.keyword AS movie_keyword,
        STRING_AGG(DISTINCT c.name, ',' ORDER BY c.name) AS cast_names,
        STRING_AGG(DISTINCT cn.name, ',' ORDER BY cn.name) AS company_names
    FROM 
        aka_title t
    LEFT JOIN 
        movie_keyword mk ON t.id = mk.movie_id
    LEFT JOIN 
        keyword k ON mk.keyword_id = k.id
    LEFT JOIN 
        cast_info ci ON t.id = ci.movie_id
    LEFT JOIN 
        aka_name c ON ci.person_id = c.person_id
    LEFT JOIN 
        movie_companies mc ON t.id = mc.movie_id
    LEFT JOIN 
        company_name cn ON mc.company_id = cn.id
    WHERE 
        t.production_year >= 2000
    GROUP BY 
        t.id, t.title, t.production_year, k.keyword
),
MovieInfo AS (
    SELECT 
        md.movie_id,
        md.title,
        md.production_year,
        md.movie_keyword,
        COUNT(DISTINCT c.name) AS total_cast,
        COUNT(DISTINCT cn.name) AS total_companies
    FROM 
        MovieDetails md
    LEFT JOIN 
        UNNEST(string_to_array(md.cast_names, ',')) AS c(name) ON TRUE
    LEFT JOIN 
        UNNEST(string_to_array(md.company_names, ',')) AS cn(name) ON TRUE
    GROUP BY 
        md.movie_id, md.title, md.production_year, md.movie_keyword
)
SELECT 
    mi.movie_id,
    mi.title,
    mi.production_year,
    mi.movie_keyword,
    mi.total_cast,
    mi.total_companies
FROM 
    MovieInfo mi
WHERE 
    mi.total_cast > 3 AND
    mi.production_year BETWEEN 2010 AND 2020
ORDER BY 
    mi.production_year DESC, 
    mi.total_cast DESC;
