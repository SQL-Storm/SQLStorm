WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title AS movie_title,
        mt.production_year,
        0 AS level,
        mt.id AS root_movie_id
    FROM 
        aka_title mt
    WHERE 
        mt.kind_id = (SELECT id FROM kind_type WHERE kind = 'movie')
    UNION ALL
    SELECT 
        ml.linked_movie_id AS movie_id,
        ak.title AS movie_title,
        ak.production_year,
        mh.level + 1 AS level,
        mh.root_movie_id
    FROM 
        movie_link ml
    JOIN 
        aka_title ak ON ml.linked_movie_id = ak.id
    JOIN 
        MovieHierarchy mh ON ml.movie_id = mh.movie_id
),
RankedMovies AS (
    SELECT 
        mh.movie_id,
        mh.movie_title,
        mh.production_year,
        ROW_NUMBER() OVER (PARTITION BY mh.root_movie_id ORDER BY mh.level) AS rn
    FROM 
        MovieHierarchy mh
),
MovieDetails AS (
    SELECT 
        rm.movie_id,
        rm.movie_title,
        rm.production_year,
        COUNT(ci.person_id) AS cast_count,
        STRING_AGG(DISTINCT ak.name, ', ') AS cast_names
    FROM 
        RankedMovies rm
    LEFT JOIN 
        cast_info ci ON rm.movie_id = ci.movie_id
    LEFT JOIN 
        aka_name ak ON ci.person_id = ak.person_id
    GROUP BY 
        rm.movie_id, rm.movie_title, rm.production_year
)
SELECT 
    md.movie_id,
    md.movie_title,
    md.production_year,
    COALESCE(md.cast_count, 0) AS total_cast,
    COALESCE(md.cast_names, 'No Cast') AS cast_details
FROM 
    MovieDetails md
WHERE 
    (md.production_year BETWEEN 2000 AND 2023)
    AND (md.cast_count > 5 OR md.cast_names IS NOT NULL)
ORDER BY 
    md.production_year DESC,
    md.total_cast DESC;