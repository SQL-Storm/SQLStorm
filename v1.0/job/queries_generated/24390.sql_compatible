
WITH RankedTitles AS (
    SELECT 
        t.id AS title_id,
        t.title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.title) AS title_rank,
        COUNT(*) OVER (PARTITION BY t.production_year) AS title_count
    FROM 
        aka_title t
    WHERE 
        t.production_year IS NOT NULL
),
FilteredCast AS (
    SELECT 
        cast.movie_id,
        cast.person_id,
        p.name,
        RANK() OVER (PARTITION BY cast.movie_id ORDER BY cast.nr_order) AS actor_rank
    FROM 
        cast_info cast
    JOIN 
        aka_name p ON p.person_id = cast.person_id
    WHERE 
        p.name IS NOT NULL
),
MovieKeywords AS (
    SELECT 
        mk.movie_id,
        STRING_AGG(k.keyword, ', ') AS all_keywords
    FROM 
        movie_keyword mk
    JOIN 
        keyword k ON k.id = mk.keyword_id
    GROUP BY 
        mk.movie_id
),
CompanyDetails AS (
    SELECT 
        mc.movie_id,
        c.name AS company_name,
        ct.kind AS company_type,
        ROW_NUMBER() OVER (PARTITION BY mc.movie_id ORDER BY c.name) AS company_rank
    FROM 
        movie_companies mc
    JOIN 
        company_name c ON c.id = mc.company_id
    JOIN 
        company_type ct ON ct.id = mc.company_type_id
),
FinalResults AS (
    SELECT 
        title.title,
        title.production_year,
        fc.actor_rank,
        fc.name AS actor_name,
        COALESCE(mk.all_keywords, 'No Keywords') AS keywords,
        cd.company_name,
        cd.company_type
    FROM 
        RankedTitles title
    LEFT JOIN 
        FilteredCast fc ON fc.movie_id = title.title_id
    LEFT JOIN 
        MovieKeywords mk ON mk.movie_id = title.title_id
    LEFT JOIN 
        CompanyDetails cd ON cd.movie_id = title.title_id
    WHERE 
        title.title_rank <= 5  
    ORDER BY 
        title.production_year, title.title, fc.actor_rank
)

SELECT 
    title,
    production_year,
    actor_rank,
    actor_name,
    keywords,
    company_name,
    company_type,
    CASE 
        WHEN actor_name IS NOT NULL THEN CONCAT('Cast: ', actor_name) 
        ELSE 'No Cast Available'
    END AS cast_info,
    CASE 
        WHEN production_year >= 2000 THEN 'Modern Era' 
        WHEN production_year < 2000 AND production_year >= 1950 THEN 'Classic Era' 
        ELSE 'Old School'
    END AS era_category,
    ARRAY_AGG(DISTINCT cd.company_type) AS unique_company_types
FROM 
    FinalResults
GROUP BY 
    title, production_year, actor_rank, actor_name, keywords, company_name, company_type
ORDER BY 
    production_year DESC, title;
