
WITH RankedMovies AS (
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        COUNT(DISTINCT mk.keyword) AS keyword_count,
        ARRAY_AGG(DISTINCT cn.name) AS production_companies,
        RANK() OVER (PARTITION BY t.production_year ORDER BY COUNT(DISTINCT mk.keyword) DESC) AS rank
    FROM 
        aka_title t
    JOIN 
        movie_keyword mk ON t.id = mk.movie_id
    JOIN 
        movie_companies mc ON t.id = mc.movie_id
    JOIN 
        company_name cn ON mc.company_id = cn.id
    GROUP BY 
        t.id, t.title, t.production_year
),
TopRankedMovies AS (
    SELECT 
        rm.movie_id,
        rm.title,
        rm.production_year,
        rm.keyword_count,
        rm.production_companies
    FROM 
        RankedMovies rm
    WHERE 
        rm.rank <= 10
)
SELECT 
    m.title,
    m.production_year,
    m.keyword_count,
    m.production_companies,
    COALESCE(CAST(pi.info AS VARCHAR), 'No additional info') AS person_info,
    COUNT(DISTINCT ci.person_id) AS actor_count,
    STRING_AGG(DISTINCT p.name, ', ') AS cast_names
FROM 
    TopRankedMovies m
LEFT JOIN 
    movie_info mi ON m.movie_id = mi.movie_id
LEFT JOIN 
    person_info pi ON pi.info_type_id = (SELECT id FROM info_type WHERE info = 'biography') AND pi.person_id IN (
        SELECT DISTINCT ci.person_id 
        FROM cast_info ci 
        WHERE ci.movie_id = m.movie_id)
LEFT JOIN 
    cast_info ci ON ci.movie_id = m.movie_id
LEFT JOIN 
    aka_name p ON p.person_id = ci.person_id
GROUP BY 
    m.movie_id, m.title, m.production_year, m.keyword_count, pi.info
ORDER BY 
    m.production_year DESC, m.keyword_count DESC;
