
WITH ranked_movies AS (
    SELECT 
        m.id AS movie_id,
        m.title,
        m.production_year,
        m.imdb_index,
        COUNT(DISTINCT c.person_id) AS total_cast,
        COUNT(DISTINCT mk.keyword) AS total_keywords,
        ROW_NUMBER() OVER (ORDER BY m.production_year DESC, COUNT(DISTINCT c.person_id) DESC) AS rank
    FROM title m
    LEFT JOIN cast_info c ON m.id = c.movie_id
    LEFT JOIN movie_keyword mk ON m.id = mk.movie_id
    GROUP BY m.id, m.title, m.production_year, m.imdb_index
),
detailed_movies AS (
    SELECT 
        rm.movie_id,
        rm.title,
        rm.production_year,
        rm.total_cast,
        rm.total_keywords,
        ARRAY_AGG(DISTINCT n.name) AS actor_names,
        COALESCE(ARRAY_AGG(DISTINCT k.keyword), ARRAY[]::text[]) AS keywords,
        STRING_AGG(DISTINCT p.info, ', ') AS person_info
    FROM ranked_movies rm
    LEFT JOIN cast_info c ON rm.movie_id = c.movie_id
    LEFT JOIN aka_name n ON c.person_id = n.person_id
    LEFT JOIN movie_keyword mk ON rm.movie_id = mk.movie_id
    LEFT JOIN person_info p ON c.person_id = p.person_id
    GROUP BY rm.movie_id, rm.title, rm.production_year, rm.total_cast, rm.total_keywords
)
SELECT 
    dm.movie_id,
    dm.title,
    dm.production_year,
    dm.total_cast,
    dm.total_keywords,
    dm.actor_names,
    dm.keywords,
    dm.person_info
FROM detailed_movies dm
WHERE dm.total_cast > 5
ORDER BY dm.total_cast DESC, dm.production_year DESC
LIMIT 10;
