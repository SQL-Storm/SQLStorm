
WITH RECURSIVE ActorHierarchy AS (
    SELECT 
        c.person_id,
        a.name AS actor_name,
        0 AS depth
    FROM 
        cast_info c
    JOIN 
        aka_name a ON c.person_id = a.person_id
    WHERE 
        a.name IS NOT NULL
    UNION ALL
    SELECT 
        c.person_id,
        a.name AS actor_name,
        h.depth + 1
    FROM 
        cast_info c
    JOIN 
        aka_name a ON c.person_id = a.person_id
    JOIN 
        ActorHierarchy h ON c.movie_id IN (
            SELECT movie_id 
            FROM cast_info 
            WHERE person_id = h.person_id
        )
    WHERE 
        h.depth < 3 
),
MovieKeywordCounts AS (
    SELECT 
        mk.movie_id,
        COUNT(mk.keyword_id) AS keyword_count
    FROM 
        movie_keyword mk
    GROUP BY 
        mk.movie_id
),
AggregateCast AS (
    SELECT 
        c.movie_id,
        COUNT(DISTINCT c.person_id) AS total_cast,
        STRING_AGG(DISTINCT a.name, ', ') AS cast_names
    FROM 
        cast_info c
    JOIN 
        aka_name a ON c.person_id = a.person_id
    GROUP BY 
        c.movie_id
),
MovieInfo AS (
    SELECT 
        m.id AS movie_id,
        m.title,
        m.production_year,
        COALESCE(mkc.keyword_count, 0) AS keyword_count,
        COALESCE(ac.total_cast, 0) AS total_cast,
        COALESCE(ac.cast_names, 'N/A') AS cast_names
    FROM 
        aka_title m
    LEFT JOIN 
        MovieKeywordCounts mkc ON m.id = mkc.movie_id
    LEFT JOIN 
        AggregateCast ac ON m.id = ac.movie_id
)
SELECT 
    mi.title,
    mi.production_year,
    mi.keyword_count,
    mi.total_cast,
    mi.cast_names,
    ah.actor_name,
    ah.depth
FROM 
    MovieInfo mi
LEFT JOIN 
    ActorHierarchy ah ON mi.movie_id IN (
        SELECT movie_id 
        FROM cast_info 
        WHERE person_id = ah.person_id
    )
WHERE 
    mi.production_year >= 2000
ORDER BY 
    mi.keyword_count DESC, mi.total_cast DESC;
