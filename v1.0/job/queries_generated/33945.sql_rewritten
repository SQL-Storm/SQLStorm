WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        mt.kind_id,
        0 AS level
    FROM 
        aka_title mt
    WHERE 
        mt.production_year IS NOT NULL

    UNION ALL

    SELECT 
        ml.linked_movie_id,
        at.title,
        at.production_year,
        at.kind_id,
        mh.level + 1
    FROM 
        movie_link ml
    JOIN
        aka_title at ON ml.linked_movie_id = at.id
    JOIN 
        MovieHierarchy mh ON ml.movie_id = mh.movie_id
),
MovieInfo AS (
    SELECT
        mv.id,
        mv.title,
        mv.production_year,
        STRING_AGG(DISTINCT k.keyword, ', ') AS keywords,
        lo.lookup_info AS language_info,
        COUNT(DISTINCT ci.person_id) AS cast_count
    FROM
        MovieHierarchy mv
    LEFT JOIN 
        movie_keyword mk ON mv.movie_id = mk.movie_id
    LEFT JOIN 
        keyword k ON mk.keyword_id = k.id
    LEFT JOIN 
        (SELECT 
            mii.movie_id,
            GROUP_CONCAT(it.info) AS lookup_info
         FROM 
            movie_info mii
         JOIN 
            info_type it ON mii.info_type_id = it.id
         WHERE 
            mii.note IS NULL
         GROUP BY 
            mii.movie_id) lo ON lo.movie_id = mv.movie_id
    LEFT JOIN 
        cast_info ci ON mv.movie_id = ci.movie_id
    WHERE 
        mv.production_year > 2000
    GROUP BY 
        mv.id, mv.title, mv.production_year, lo.lookup_info
),
RankedMovies AS (
    SELECT 
        mi.*,
        RANK() OVER (PARTITION BY mi.production_year ORDER BY mi.cast_count DESC) as rank_within_year
    FROM 
        MovieInfo mi
)
SELECT 
    rm.title,
    rm.production_year,
    rm.keywords,
    rm.language_info,
    rm.cast_count,
    rm.rank_within_year
FROM 
    RankedMovies rm
WHERE 
    rm.rank_within_year <= 10
    AND EXISTS (
        SELECT 1 
        FROM aka_name an 
        WHERE an.person_id IN (
            SELECT ci.person_id 
            FROM cast_info ci 
            WHERE ci.movie_id = rm.id
        )
        AND an.name LIKE '%Smith%' 
    )
ORDER BY 
    rm.production_year DESC, 
    rm.cast_count DESC;