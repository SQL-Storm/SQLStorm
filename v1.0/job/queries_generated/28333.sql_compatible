
WITH MovieDetails AS (
    SELECT 
        m.id AS movie_id,
        m.title AS movie_title,
        m.production_year,
        STRING_AGG(DISTINCT ak.name, ', ') AS aka_names,
        COUNT(DISTINCT ca.person_id) AS cast_count,
        STRING_AGG(DISTINCT CONCAT(kw.keyword, ' (', kw.id, ')'), ', ') AS keywords
    FROM 
        aka_title ak
    JOIN 
        title m ON ak.movie_id = m.id
    LEFT JOIN 
        cast_info ca ON m.id = ca.movie_id
    LEFT JOIN 
        movie_keyword mk ON m.id = mk.movie_id
    LEFT JOIN 
        keyword kw ON mk.keyword_id = kw.id
    GROUP BY 
        m.id, m.title, m.production_year
),
CompanyDetails AS (
    SELECT 
        mc.movie_id,
        STRING_AGG(DISTINCT c.name, ', ') AS company_names,
        STRING_AGG(DISTINCT ct.kind, ', ') AS company_types
    FROM 
        movie_companies mc 
    JOIN 
        company_name c ON mc.company_id = c.id
    JOIN 
        company_type ct ON mc.company_type_id = ct.id
    GROUP BY 
        mc.movie_id
),
FinalBenchmark AS (
    SELECT 
        md.movie_id,
        md.movie_title,
        md.production_year,
        md.aka_names,
        md.cast_count,
        cd.company_names,
        cd.company_types,
        (md.cast_count * COALESCE(NULLIF(ARRAY_LENGTH(STRING_TO_ARRAY(md.aka_names, ', '), 1), 0), 1)) AS benchmark_score
    FROM 
        MovieDetails md
    LEFT JOIN 
        CompanyDetails cd ON md.movie_id = cd.movie_id
)
SELECT 
    movie_id,
    movie_title,
    production_year,
    aka_names,
    cast_count,
    company_names,
    company_types,
    benchmark_score
FROM 
    FinalBenchmark
ORDER BY 
    benchmark_score DESC
LIMIT 10;
