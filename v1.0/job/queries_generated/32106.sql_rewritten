WITH RECURSIVE ActorHierarchy AS (
    SELECT ci.person_id, t.title, t.production_year, 1 AS level
    FROM cast_info ci
    JOIN aka_title t ON ci.movie_id = t.movie_id
    WHERE ci.role_id IN (SELECT id FROM role_type WHERE role = 'actor')

    UNION ALL

    SELECT ci.person_id, t.title, t.production_year, ah.level + 1
    FROM cast_info ci
    JOIN aka_title t ON ci.movie_id = t.movie_id
    JOIN ActorHierarchy ah ON ci.person_id = ah.person_id
    WHERE ci.role_id IN (SELECT id FROM role_type WHERE role = 'actor')
)

SELECT
    ak.name,
    COUNT(DISTINCT ah.movie_id) AS movie_count,
    EXTRACT(YEAR FROM cast('2024-10-01' as date)) - MAX(ah.production_year) AS years_since_last_movie,
    STRING_AGG(DISTINCT ak.name || ' (' || ah.production_year || ')', ', ') AS movies,
    RANK() OVER (ORDER BY COUNT(DISTINCT ah.movie_id) DESC) AS actor_rank
FROM
    aka_name ak
JOIN
    ActorHierarchy ah ON ak.person_id = ah.person_id
LEFT JOIN
    movie_info mi ON ah.movie_id = mi.movie_id AND mi.info_type_id = (SELECT id FROM info_type WHERE info = 'rating')
WHERE
    ah.production_year >= (EXTRACT(YEAR FROM cast('2024-10-01' as date)) - 10)
GROUP BY
    ak.id
HAVING
    COUNT(DISTINCT ah.movie_id) > 5 AND
    NULLIF(MAX(mi.info), '') IS NOT NULL
ORDER BY
    actor_rank, years_since_last_movie DESC;