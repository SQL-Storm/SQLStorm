
WITH MovieDetails AS (
    SELECT 
        t.id AS title_id, 
        t.title, 
        t.production_year, 
        k.keyword,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.title) AS year_order
    FROM title t 
    LEFT JOIN movie_keyword mk ON t.id = mk.movie_id 
    LEFT JOIN keyword k ON mk.keyword_id = k.id 
    WHERE t.production_year IS NOT NULL
),
ActorNames AS (
    SELECT 
        a.person_id, 
        a.name, 
        a.surname_pcode,
        COALESCE(CHAR_LENGTH(a.name) - CHAR_LENGTH(REPLACE(a.name, ' ', '')), 0) AS name_spaces,
        ROW_NUMBER() OVER (PARTITION BY a.person_id ORDER BY a.name) AS name_order
    FROM aka_name a
    WHERE a.md5sum IS NOT NULL
),
BestPerformingMovies AS (
    SELECT 
        md.title, 
        md.production_year, 
        COUNT(*) AS actor_count
    FROM MovieDetails md
    JOIN cast_info ci ON md.title_id = ci.movie_id
    GROUP BY md.title_id, md.title, md.production_year
    HAVING COUNT(*) > 3
),
FinalResults AS (
    SELECT 
        b.title, 
        b.production_year, 
        b.actor_count,
        STRING_AGG(DISTINCT an.name, ', ') AS actor_names,
        COUNT(DISTINCT an.person_id) AS unique_actors,
        MAX(an.name_spaces) AS max_name_spaces
    FROM BestPerformingMovies b
    JOIN cast_info ci ON b.title_id = ci.movie_id
    JOIN ActorNames an ON ci.person_id = an.person_id
    GROUP BY b.title, b.production_year, b.actor_count
)
SELECT * 
FROM FinalResults
WHERE unique_actors >= 2
ORDER BY production_year DESC, actor_count DESC
LIMIT 10;
