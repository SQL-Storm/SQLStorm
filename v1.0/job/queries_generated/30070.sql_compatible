
WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        COALESCE(NULLIF(mt.season_nr, 0), NULL) AS season_number,
        COALESCE(NULLIF(mt.episode_nr, 0), NULL) AS episode_number,
        1 AS level
    FROM 
        aka_title mt
    WHERE 
        mt.kind_id IN (SELECT id FROM kind_type WHERE kind = 'movie')
    
    UNION ALL

    SELECT 
        ml.linked_movie_id AS movie_id,
        at.title,
        at.production_year,
        NULL AS season_number,
        NULL AS episode_number,
        mh.level + 1
    FROM 
        movie_link ml
    JOIN 
        aka_title at ON ml.linked_movie_id = at.id
    JOIN 
        MovieHierarchy mh ON ml.movie_id = mh.movie_id
)

SELECT 
    ak.name AS actor_name,
    mh.title AS movie_title,
    mh.production_year,
    mh.season_number,
    mh.episode_number,
    COUNT(DISTINCT mc.company_id) AS company_count,
    STRING_AGG(DISTINCT COALESCE(cn.name, 'Unknown Company'), ', ') AS companies_involved,
    SUM(COALESCE(mk.keyword, 0)) AS total_keywords,
    ARRAY_AGG(DISTINCT mk.keyword) AS keyword_list
FROM 
    complete_cast cc
JOIN 
    aka_name ak ON cc.subject_id = ak.person_id
JOIN 
    MovieHierarchy mh ON cc.movie_id = mh.movie_id
JOIN 
    movie_companies mc ON mh.movie_id = mc.movie_id
LEFT JOIN 
    company_name cn ON mc.company_id = cn.id
LEFT JOIN 
    movie_keyword mk ON mh.movie_id = mk.movie_id
GROUP BY 
    ak.name, mh.title, mh.production_year, mh.season_number, mh.episode_number
ORDER BY 
    mh.production_year DESC, actor_name;
