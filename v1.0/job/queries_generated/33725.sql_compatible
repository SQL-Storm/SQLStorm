
WITH RECURSIVE MovieHierarchy AS (
    SELECT m.id AS movie_id, 
           t.title, 
           m.production_year, 
           NULL AS parent_title, 
           1 AS level
    FROM aka_title t
    JOIN movie_info m_info ON t.id = m_info.movie_id
    JOIN title m ON m.id = m_info.movie_id
    WHERE t.kind_id = (SELECT id FROM kind_type WHERE kind = 'movie')
    
    UNION ALL
    
    SELECT mh.movie_id, 
           t.title, 
           m.production_year, 
           mh.title AS parent_title, 
           mh.level + 1
    FROM MovieHierarchy mh
    JOIN movie_link ml ON mh.movie_id = ml.movie_id
    JOIN title t ON ml.linked_movie_id = t.id
    JOIN movie_info m ON t.id = m.movie_id
    WHERE m.production_year > 2000
)
SELECT 
    m.title, 
    m.production_year,
    COUNT(ci.id) AS actor_count,
    STRING_AGG(DISTINCT a.name, ', ') AS actors,
    AVG(CAST(p.info AS numeric)) AS avg_rating,
    MAX(CASE WHEN ci.nr_order = 1 THEN a.name END) AS lead_actor,
    COALESCE(NULLIF(mh.parent_title, ''), 'N/A') AS parent_movie
FROM MovieHierarchy mh
LEFT JOIN cast_info ci ON mh.movie_id = ci.movie_id
LEFT JOIN aka_name a ON ci.person_id = a.person_id
LEFT JOIN movie_info m_info ON mh.movie_id = m_info.movie_id
LEFT JOIN person_info p ON a.person_id = p.person_id
WHERE m_info.info_type_id = (SELECT id FROM info_type WHERE info = 'rating')
GROUP BY m.title, m.production_year, mh.parent_title
HAVING COUNT(ci.id) > 5 
ORDER BY m.production_year DESC, actor_count DESC;
