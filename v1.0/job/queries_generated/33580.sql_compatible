
WITH RECURSIVE CompanyHierarchy AS (
    SELECT 
        c.id AS company_id,
        c.name AS company_name,
        mc.company_type_id,
        1 AS level
    FROM 
        company_name c
    JOIN 
        movie_companies mc ON c.id = mc.company_id
    WHERE 
        mc.company_type_id IS NOT NULL

    UNION ALL

    SELECT 
        c.id AS company_id,
        c.name AS company_name,
        mc.company_type_id,
        ch.level + 1 AS level
    FROM 
        company_name c
    JOIN 
        movie_companies mc ON c.id = mc.company_id
    JOIN 
        CompanyHierarchy ch ON mc.movie_id = ch.company_id
)
SELECT 
    ak.name AS aka_name,
    t.title AS movie_title,
    STRING_AGG(DISTINCT c.name, ', ') AS cast_names,
    cnt_movie_companies.movie_count,
    COALESCE(AVG(pi.age), 0) AS avg_age,
    SUM(CASE WHEN pi.info_type_id = (SELECT id FROM info_type WHERE info = 'awards') THEN 1 ELSE 0 END) AS awards_count,
    MAX(CASE WHEN mc.note IS NULL THEN 'No Notes' ELSE mc.note END) AS movie_notes
FROM 
    aka_name ak
JOIN 
    cast_info ci ON ak.person_id = ci.person_id
JOIN 
    aka_title at ON at.id = ci.movie_id
JOIN 
    title t ON t.id = at.movie_id
LEFT JOIN 
    complete_cast cc ON t.id = cc.movie_id
LEFT JOIN 
    movie_companies mc ON t.id = mc.movie_id
LEFT JOIN 
    (SELECT 
        movie_id,
        COUNT(DISTINCT company_id) AS movie_count
     FROM 
        movie_companies
     GROUP BY 
        movie_id) AS cnt_movie_companies ON t.id = cnt_movie_companies.movie_id
LEFT JOIN 
    person_info pi ON ak.person_id = pi.person_id
WHERE 
    t.production_year > 2000
GROUP BY 
    ak.name, t.title, cnt_movie_companies.movie_count
ORDER BY 
    cnt_movie_companies.movie_count DESC,
    t.title;
