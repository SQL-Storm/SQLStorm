
WITH RankedMovies AS (
    SELECT
        t.id AS title_id,
        t.title,
        t.production_year,
        COUNT(DISTINCT c.person_id) OVER (PARTITION BY t.id) AS cast_count,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY COUNT(DISTINCT c.person_id) DESC) AS year_rank
    FROM
        aka_title t
    LEFT JOIN 
        cast_info c ON t.id = c.movie_id
    WHERE 
        t.production_year IS NOT NULL
), 
MovieKeywords AS (
    SELECT
        mk.movie_id,
        STRING_AGG(k.keyword, ', ') AS combined_keywords
    FROM
        movie_keyword mk
    JOIN 
        keyword k ON mk.keyword_id = k.id
    GROUP BY 
        mk.movie_id
),
MoviesWithInfo AS (
    SELECT 
        rm.title_id,
        rm.title,
        rm.production_year,
        rm.cast_count,
        mk.combined_keywords,
        COALESCE(mo.info, 'No Info') AS movie_info
    FROM 
        RankedMovies rm
    LEFT JOIN 
        MovieKeywords mk ON rm.title_id = mk.movie_id
    LEFT JOIN 
        movie_info mo ON rm.title_id = mo.movie_id AND mo.info_type_id = (SELECT id FROM info_type WHERE info = 'Plot' LIMIT 1)
    WHERE 
        rm.year_rank <= 5
)
SELECT
    mw.title,
    mw.production_year,
    mw.cast_count,
    CASE 
        WHEN mw.cast_count > 10 THEN 'Large Cast' 
        WHEN mw.cast_count BETWEEN 5 AND 10 THEN 'Medium Cast' 
        ELSE 'Small Cast' 
    END AS cast_size,
    mw.combined_keywords,
    mw.movie_info
FROM 
    MoviesWithInfo mw
WHERE 
    mw.combined_keywords IS NOT NULL
ORDER BY 
    mw.production_year DESC, mw.cast_count DESC
LIMIT 50
OFFSET 0;
