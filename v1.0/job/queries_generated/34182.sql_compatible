
WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        1 AS level
    FROM 
        aka_title mt
    WHERE 
        mt.kind_id = (SELECT id FROM kind_type WHERE kind = 'movie')

    UNION ALL

    SELECT 
        ml.linked_movie_id,
        a.title,
        a.production_year,
        mh.level + 1
    FROM 
        movie_link ml
    JOIN 
        movie_hierarchy mh ON ml.movie_id = mh.movie_id
    JOIN 
        aka_title a ON ml.linked_movie_id = a.id
)
SELECT 
    ak.name AS aka_name,
    mt.title AS movie_title,
    mt.production_year,
    p.gender,
    COUNT(DISTINCT c.person_id) AS cast_count,
    STRING_AGG(DISTINCT co.name, ', ') AS companies,
    SUM(CASE WHEN mi.info_type_id = (SELECT id FROM info_type WHERE info = 'Box Office') THEN CAST(mi.info AS NUMERIC) ELSE NULL END) AS box_office_total,
    DENSE_RANK() OVER (PARTITION BY mt.production_year ORDER BY COUNT(DISTINCT c.person_id) DESC) AS rank_by_cast_count
FROM 
    movie_hierarchy mh
JOIN 
    aka_title mt ON mh.movie_id = mt.id
LEFT JOIN 
    cast_info c ON mt.id = c.movie_id
LEFT JOIN 
    aka_name ak ON c.person_id = ak.person_id
LEFT JOIN 
    movie_companies mc ON mt.id = mc.movie_id
LEFT JOIN 
    company_name co ON mc.company_id = co.id
LEFT JOIN 
    movie_info mi ON mt.id = mi.movie_id
LEFT JOIN 
    person_info p ON ak.person_id = p.person_id
WHERE 
    mt.production_year > 2000
    AND (mi.info_type_id IS NULL OR (mi.info_type_id = (SELECT id FROM info_type WHERE info = 'Rating') 
        AND CAST(mi.info AS FLOAT) >= 8.0))
GROUP BY 
    ak.name, mt.title, mt.production_year, p.gender
HAVING 
    COUNT(DISTINCT c.person_id) > 5
ORDER BY 
    mt.production_year DESC, rank_by_cast_count
LIMIT 50;
