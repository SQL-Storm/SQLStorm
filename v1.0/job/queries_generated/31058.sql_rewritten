WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        m.id AS movie_id,
        t.title AS movie_title,
        1 AS level
    FROM 
        aka_title t
    JOIN 
        movie_link ml ON t.id = ml.movie_id
    JOIN 
        title m ON ml.linked_movie_id = m.id
    WHERE 
        t.kind_id IN (SELECT id FROM kind_type WHERE kind = 'movie')
    
    UNION ALL
    
    SELECT 
        m.id,
        t.title,
        mh.level + 1
    FROM 
        MovieHierarchy mh
    JOIN 
        movie_link ml ON mh.movie_id = ml.movie_id
    JOIN 
        title m ON ml.linked_movie_id = m.id
    JOIN 
        aka_title t ON m.id = t.movie_id
    WHERE 
        level < 5 
)
SELECT 
    mh.movie_id, 
    mh.movie_title,
    COUNT(DISTINCT ci.person_id) AS cast_count,
    AVG(CASE 
            WHEN mi.info IS NOT NULL THEN 1 
            ELSE 0 
        END) AS avg_has_movie_info,
    STRING_AGG(DISTINCT ak.name, ', ') AS aka_names
FROM 
    MovieHierarchy mh
LEFT JOIN 
    complete_cast cc ON mh.movie_id = cc.movie_id
LEFT JOIN 
    cast_info ci ON cc.subject_id = ci.person_id
LEFT JOIN 
    movie_info mi ON mh.movie_id = mi.movie_id
LEFT JOIN 
    aka_name ak ON mh.movie_id = ak.movie_id
WHERE 
    mi.info_type_id IN (SELECT id FROM info_type WHERE info = 'Box Office')
    AND ci.movie_id IS NOT NULL
    AND mh.level < ALL (SELECT level FROM MovieHierarchy) 
GROUP BY 
    mh.movie_id, mh.movie_title
ORDER BY 
    cast_count DESC
FETCH FIRST 10 ROWS ONLY;