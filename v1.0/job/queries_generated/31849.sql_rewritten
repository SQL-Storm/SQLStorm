WITH RECURSIVE MovieHierarchy AS (
    SELECT mt.id AS movie_id, 
           mt.title,
           1 AS depth
    FROM aka_title mt

    WHERE mt.production_year >= 2000  

    UNION ALL
    
    SELECT ml.linked_movie_id, 
           at.title,
           mh.depth + 1
    FROM MovieHierarchy mh
    JOIN movie_link ml ON mh.movie_id = ml.movie_id
    JOIN aka_title at ON ml.linked_movie_id = at.id
)

SELECT 
    a.name AS actor_name,
    COUNT(DISTINCT c.movie_id) AS total_movies,
    STRING_AGG(DISTINCT t.title, ', ') AS movie_titles,
    AVG(CASE WHEN mi.info IS NOT NULL THEN LENGTH(mi.info) ELSE 0 END) AS avg_info_length,
    SUM(CASE WHEN ci.note IS NOT NULL THEN 1 ELSE 0 END) AS notes_count
FROM aka_name a
LEFT JOIN cast_info ci ON a.person_id = ci.person_id
LEFT JOIN complete_cast cc ON ci.movie_id = cc.movie_id
LEFT JOIN MovieHierarchy mh ON cc.movie_id = mh.movie_id
LEFT JOIN movie_info mi ON mh.movie_id = mi.movie_id
LEFT JOIN aka_title t ON mh.movie_id = t.id
WHERE a.name IS NOT NULL
GROUP BY a.name
HAVING COUNT(DISTINCT mh.movie_id) > 0   
ORDER BY total_movies DESC
LIMIT 10;