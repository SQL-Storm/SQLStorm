
WITH 
    RankedMovies AS (
        SELECT 
            t.id AS title_id,
            t.title,
            t.production_year,
            ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY COUNT(DISTINCT c.person_id) DESC) AS movie_rank
        FROM 
            aka_title t
        LEFT JOIN 
            cast_info c ON t.movie_id = c.movie_id
        GROUP BY 
            t.id, t.title, t.production_year
    ),
    DirectorCount AS (
        SELECT 
            ci.movie_id,
            COUNT(DISTINCT ci.person_id) AS director_count
        FROM 
            cast_info ci
        INNER JOIN 
            role_type rt ON ci.role_id = rt.id
        WHERE 
            rt.role LIKE '%Director%'
        GROUP BY 
            ci.movie_id
    ),
    MovieKeywords AS (
        SELECT 
            mk.movie_id,
            STRING_AGG(k.keyword, ', ') AS keywords
        FROM 
            movie_keyword mk
        LEFT JOIN 
            keyword k ON mk.keyword_id = k.id
        GROUP BY 
            mk.movie_id
    ),
    MoviesWithDirectorCount AS (
        SELECT 
            rm.title_id,
            rm.title,
            rm.production_year,
            COALESCE(dc.director_count, 0) AS director_count,
            COALESCE(mk.keywords, 'No Keywords') AS keywords
        FROM 
            RankedMovies rm
        LEFT JOIN 
            DirectorCount dc ON rm.title_id = dc.movie_id
        LEFT JOIN 
            MovieKeywords mk ON rm.title_id = mk.movie_id
    )
SELECT 
    mw.title,
    mw.production_year,
    mw.director_count,
    mw.keywords,
    COUNT(DISTINCT ci.person_id) OVER (PARTITION BY mw.production_year) AS actor_count
FROM 
    MoviesWithDirectorCount mw
LEFT JOIN 
    cast_info ci ON mw.title_id = ci.movie_id
WHERE 
    mw.director_count > 0
    AND mw.production_year BETWEEN 1990 AND 2000
ORDER BY 
    mw.production_year, mw.director_count DESC
LIMIT 10;
