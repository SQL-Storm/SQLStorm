
WITH RankedMovies AS (
    SELECT 
        t.title,
        t.production_year,
        COUNT(c.person_id) AS actor_count,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY COUNT(c.person_id) DESC) AS rank
    FROM 
        aka_title t
    LEFT JOIN 
        cast_info c ON t.id = c.movie_id
    WHERE 
        t.production_year IS NOT NULL
    GROUP BY 
        t.title, t.production_year
),
FilteredMovies AS (
    SELECT 
        rm.title,
        rm.production_year,
        rm.actor_count
    FROM 
        RankedMovies rm
    WHERE 
        rm.rank <= 5
),
MovieDetails AS (
    SELECT 
        fm.title,
        fm.production_year,
        COALESCE(mk.keyword, 'No Keywords') AS keyword,
        COALESCE(ci.kind, 'Unknown Role') AS role
    FROM 
        FilteredMovies fm
    LEFT JOIN 
        movie_keyword mk ON fm.title = mk.movie_id
    LEFT JOIN 
        movie_companies mc ON fm.title = mc.movie_id
    LEFT JOIN 
        comp_cast_type ci ON mc.company_type_id = ci.id
)
SELECT 
    md.title,
    md.production_year,
    md.keyword,
    md.role,
    (SELECT COUNT(*)
     FROM movie_info mi 
     WHERE mi.movie_id = md.movie_id 
     AND mi.info_type_id IN (SELECT id FROM info_type WHERE info = 'Rating')) AS rating_count,
    STRING_AGG(DISTINCT ak.name, ', ') AS actors
FROM 
    MovieDetails md
LEFT JOIN 
    complete_cast cc ON md.title = cc.movie_id
LEFT JOIN 
    aka_name ak ON cc.subject_id = ak.person_id
GROUP BY 
    md.title, md.production_year, md.keyword, md.role
HAVING 
    md.production_year > 2000 
    AND md.role IS NOT NULL 
ORDER BY 
    md.production_year DESC;
