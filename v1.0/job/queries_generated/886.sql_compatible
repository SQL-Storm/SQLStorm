
WITH RankedMovies AS (
    SELECT
        t.title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.production_year DESC) AS rn
    FROM
        aka_title t
    WHERE
        t.kind_id IN (SELECT id FROM kind_type WHERE kind LIKE '%movie%')
),
ActorStats AS (
    SELECT
        a.name,
        COUNT(DISTINCT ci.movie_id) AS movie_count,
        SUM(CASE WHEN ci.note IS NOT NULL THEN 1 ELSE 0 END) AS noted_roles
    FROM
        aka_name a
    JOIN cast_info ci ON a.person_id = ci.person_id
    GROUP BY
        a.name
),
CompanyAggregate AS (
    SELECT
        cn.name AS company_name,
        COUNT(mc.movie_id) AS movie_count,
        SUM(CASE WHEN mc.note IS NOT NULL THEN 1 ELSE 0 END) AS noted_movies
    FROM
        company_name cn
    JOIN movie_companies mc ON cn.id = mc.company_id
    GROUP BY
        cn.name
),
MovieKeywords AS (
    SELECT
        mt.movie_id,
        STRING_AGG(k.keyword, ', ') AS keywords
    FROM
        movie_keyword mk
    JOIN keyword k ON mk.keyword_id = k.id
    JOIN aka_title mt ON mk.movie_id = mt.movie_id
    WHERE
        mt.production_year >= 2000
    GROUP BY
        mt.movie_id
)
SELECT
    rm.title,
    rm.production_year,
    a.name AS actor_name,
    as.movie_count AS actor_movie_count,
    as.noted_roles AS actor_noted_roles,
    ca.company_name,
    ca.movie_count AS company_movie_count,
    ca.noted_movies AS company_noted_movies,
    mk.keywords
FROM
    RankedMovies rm
LEFT JOIN ActorStats as ON rm.title LIKE '%' || as.name || '%'
LEFT JOIN CompanyAggregate ca ON rm.title LIKE '%' || ca.company_name || '%'
LEFT JOIN MovieKeywords mk ON rm.title = mk.movie_id
WHERE
    rm.rn <= 10
ORDER BY
    rm.production_year DESC, as.movie_count DESC, ca.movie_count DESC;
