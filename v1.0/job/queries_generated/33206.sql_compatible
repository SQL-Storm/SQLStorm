
WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        m.id AS movie_id, 
        m.title AS movie_title, 
        m.production_year, 
        m.imdb_id,
        1 AS level
    FROM 
        aka_title m
    WHERE 
        m.kind_id = 1  
        
    UNION ALL
    
    SELECT 
        c.linked_movie_id AS movie_id, 
        m.title AS movie_title, 
        m.production_year, 
        m.imdb_id,
        mh.level + 1
    FROM 
        movie_link c
    JOIN 
        aka_title m ON c.linked_movie_id = m.id
    JOIN 
        MovieHierarchy mh ON c.movie_id = mh.movie_id
)
SELECT 
    mh.movie_id,
    mh.movie_title,
    mh.production_year,
    ARRAY_AGG(DISTINCT CONCAT(a.name, ' as ', r.role)) AS cast,
    COALESCE(cn.name, 'No Company') AS company_name,
    COUNT(DISTINCT mw.keyword) AS keyword_count,
    AVG(CASE WHEN mpi.info_type_id = 1 THEN NULLIF(mpi.info, 0) ELSE NULL END) AS average_rating
FROM 
    MovieHierarchy mh
LEFT JOIN 
    complete_cast cc ON mh.movie_id = cc.movie_id
LEFT JOIN 
    cast_info ci ON cc.subject_id = ci.id
LEFT JOIN 
    aka_name a ON ci.person_id = a.person_id
LEFT JOIN 
    role_type r ON ci.role_id = r.id
LEFT JOIN 
    movie_companies mc ON mh.movie_id = mc.movie_id
LEFT JOIN 
    company_name cn ON mc.company_id = cn.id
LEFT JOIN 
    movie_keyword mw ON mh.movie_id = mw.movie_id
LEFT JOIN 
    movie_info mpi ON mh.movie_id = mpi.movie_id
WHERE 
    mh.production_year >= 2000 
    AND (cn.country_code IS NULL OR cn.country_code != 'US')
GROUP BY 
    mh.movie_id, mh.movie_title, mh.production_year, cn.name
HAVING 
    COUNT(DISTINCT a.person_id) > 5  
ORDER BY 
    mh.production_year DESC, 
    keyword_count DESC;
