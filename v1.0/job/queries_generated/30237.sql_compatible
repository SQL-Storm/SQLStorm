
WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        mt.id AS movie_id, 
        mt.title, 
        mt.production_year,
        mt.kind_id,
        1 AS level
    FROM 
        aka_title mt
    WHERE 
        mt.kind_id IN (SELECT id FROM kind_type WHERE kind = 'feature film') 

    UNION ALL

    SELECT 
        mt.id AS movie_id, 
        mt.title, 
        mt.production_year,
        mt.kind_id,
        mh.level + 1 AS level
    FROM 
        aka_title mt
    JOIN 
        movie_link ml ON ml.linked_movie_id = mt.id
    JOIN 
        MovieHierarchy mh ON mh.movie_id = ml.movie_id
),

MovieCast AS (
    SELECT 
        c.movie_id,
        p.id AS person_id,
        a.name AS actor_name,
        r.role AS role_name,
        ROW_NUMBER() OVER (PARTITION BY c.movie_id ORDER BY c.nr_order) AS actor_rank
    FROM 
        cast_info c
    JOIN 
        aka_name a ON a.person_id = c.person_id
    JOIN 
        role_type r ON r.id = c.role_id
),

MovieKeywords AS (
    SELECT 
        mk.movie_id,
        STRING_AGG(k.keyword, ', ') AS keywords
    FROM 
        movie_keyword mk
    JOIN 
        keyword k ON k.id = mk.keyword_id
    GROUP BY 
        mk.movie_id
),

MovieInfo AS (
    SELECT 
        mi.movie_id,
        STRING_AGG(DISTINCT m.info, '; ') AS movie_details
    FROM 
        movie_info mi
    JOIN 
        info_type it ON it.id = mi.info_type_id
    WHERE 
        it.info NOT LIKE '%deleted%' 
    GROUP BY 
        mi.movie_id
)

SELECT 
    mh.movie_id,
    mh.title,
    mh.production_year,
    COALESCE(mk.keywords, 'None') AS keywords,
    COALESCE(mc.actor_name, 'N/A') AS lead_actor,
    mc.role_name,
    mi.movie_details,
    mh.level
FROM 
    MovieHierarchy mh
LEFT JOIN 
    MovieKeywords mk ON mk.movie_id = mh.movie_id
LEFT JOIN 
    MovieCast mc ON mc.movie_id = mh.movie_id AND mc.actor_rank = 1
LEFT JOIN 
    MovieInfo mi ON mi.movie_id = mh.movie_id
WHERE 
    mh.production_year >= 2000
ORDER BY 
    mh.production_year DESC, 
    mh.title;
