
WITH RankedTitles AS (
    SELECT 
        t.title,
        t.production_year,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.title) AS title_rank
    FROM 
        aka_title t
    WHERE 
        t.production_year BETWEEN 2000 AND 2020
),
ActorMovies AS (
    SELECT 
        a.name,
        COUNT(DISTINCT c.movie_id) AS movie_count,
        SUM(CASE WHEN c.nr_order IS NOT NULL THEN 1 ELSE 0 END) AS featured_roles
    FROM 
        aka_name a
    INNER JOIN 
        cast_info c ON a.person_id = c.person_id
    GROUP BY 
        a.name
    HAVING 
        COUNT(DISTINCT c.movie_id) > 5
),
MovieKeywords AS (
    SELECT 
        mk.movie_id,
        STRING_AGG(k.keyword, ', ') AS keywords
    FROM 
        movie_keyword mk
    JOIN 
        keyword k ON mk.keyword_id = k.id
    GROUP BY 
        mk.movie_id
)
SELECT 
    rt.title,
    rt.production_year,
    am.name AS actor,
    am.movie_count,
    mk.keywords,
    COALESCE(COUNT(mc.company_id), 0) AS company_count
FROM 
    RankedTitles rt
LEFT JOIN 
    ActorMovies am ON am.movie_count > 5
LEFT JOIN 
    movie_companies mc ON mc.movie_id = rt.id
LEFT JOIN 
    MovieKeywords mk ON mk.movie_id = rt.id
WHERE 
    rt.production_year IN (
        SELECT DISTINCT production_year 
        FROM aka_title 
        WHERE kind_id IN (SELECT id FROM kind_type WHERE kind = 'feature')
    )
GROUP BY 
    rt.title, 
    rt.production_year, 
    am.name, 
    mk.keywords
HAVING 
    COALESCE(COUNT(mc.company_id), 0) > 0 OR mk.keywords IS NOT NULL
ORDER BY 
    rt.production_year DESC, 
    am.movie_count DESC;
