
WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        1 AS level
    FROM 
        aka_title t
    WHERE 
        t.production_year >= 2000
    
    UNION ALL
    
    SELECT 
        t.id,
        t.title,
        t.production_year,
        mh.level + 1
    FROM 
        aka_title t
    JOIN 
        MovieHierarchy mh ON t.episode_of_id = mh.movie_id
), 

ActorDetails AS (
    SELECT 
        a.id AS actor_id,
        ak.name AS actor_name,
        c.movie_id,
        ROW_NUMBER() OVER (PARTITION BY c.movie_id ORDER BY c.nr_order) AS role_order
    FROM 
        cast_info c
    JOIN 
        aka_name ak ON c.person_id = ak.person_id
    WHERE 
        c.note IS NULL
), 

MovieCompanyDetails AS (
    SELECT 
        mc.movie_id,
        co.name AS company_name,
        ct.kind AS company_type
    FROM 
        movie_companies mc
    JOIN 
        company_name co ON mc.company_id = co.id
    JOIN 
        company_type ct ON mc.company_type_id = ct.id
)

SELECT 
    mh.title,
    mh.production_year,
    COUNT(DISTINCT ad.actor_id) AS actor_count,
    STRING_AGG(DISTINCT ad.actor_name, ', ') AS actor_names,
    COALESCE(mcd.company_name, 'Unknown') AS production_company,
    COALESCE(mcd.company_type, 'Unknown') AS company_type,
    AVG(ad.role_order) AS avg_role_order
FROM 
    MovieHierarchy mh
LEFT JOIN 
    ActorDetails ad ON mh.movie_id = ad.movie_id
LEFT JOIN 
    MovieCompanyDetails mcd ON mh.movie_id = mcd.movie_id
WHERE 
    mh.production_year IS NOT NULL
GROUP BY 
    mh.title, mh.production_year, mcd.company_name, mcd.company_type
ORDER BY 
    mh.production_year DESC, actor_count DESC;
