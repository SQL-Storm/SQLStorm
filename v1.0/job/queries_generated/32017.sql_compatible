
WITH RECURSIVE MovieHierarchy AS (
    SELECT 
        m.id AS movie_id, 
        m.title, 
        m.production_year, 
        1 AS level
    FROM title m 
    WHERE m.episode_of_id IS NULL  

    UNION ALL

    SELECT 
        e.id AS movie_id, 
        e.title, 
        e.production_year, 
        mh.level + 1
    FROM title e
    JOIN MovieHierarchy mh ON e.episode_of_id = mh.movie_id
),

CastDetails AS (
    SELECT 
        ci.movie_id,
        COUNT(DISTINCT ci.person_id) AS total_cast,
        STRING_AGG(DISTINCT a.name, ', ') AS cast_names
    FROM cast_info ci
    JOIN aka_name a ON ci.person_id = a.person_id
    GROUP BY ci.movie_id
),

FilteredMovies AS (
    SELECT 
        mh.movie_id, 
        mh.title, 
        mh.production_year, 
        COALESCE(cd.total_cast, 0) AS total_cast,
        cd.cast_names,
        mh.level
    FROM MovieHierarchy mh
    LEFT JOIN CastDetails cd ON mh.movie_id = cd.movie_id
),

KeywordAnalysis AS (
    SELECT
        m.movie_id,
        COUNT(DISTINCT mk.keyword_id) AS keyword_count,
        STRING_AGG(DISTINCT k.keyword, '; ') AS keywords
    FROM movie_keyword mk
    JOIN keyword k ON mk.keyword_id = k.id
    JOIN title m ON mk.movie_id = m.id
    GROUP BY m.movie_id
)

SELECT 
    fm.movie_id,
    fm.title,
    fm.production_year,
    fm.total_cast,
    fm.cast_names,
    COALESCE(ka.keyword_count, 0) AS keyword_count,
    ka.keywords
FROM FilteredMovies fm
LEFT JOIN KeywordAnalysis ka ON fm.movie_id = ka.movie_id
ORDER BY fm.production_year DESC, fm.title;
