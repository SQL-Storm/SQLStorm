
WITH RankedMovies AS (
    SELECT
        t.title,
        t.production_year,
        COUNT(DISTINCT ci.person_id) AS actor_count,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY COUNT(DISTINCT ci.person_id) DESC) AS rank
    FROM
        aka_title t
    LEFT JOIN
        cast_info ci ON t.id = ci.movie_id
    GROUP BY
        t.title,
        t.production_year
),
CompanyCounts AS (
    SELECT
        mc.movie_id,
        COUNT(DISTINCT cn.id) AS company_count
    FROM
        movie_companies mc
    JOIN
        company_name cn ON mc.company_id = cn.id
    GROUP BY
        mc.movie_id
),
CompletedInfo AS (
    SELECT
        mi.movie_id,
        COUNT(DISTINCT mi.info_type_id) AS info_type_count,
        STRING_AGG(DISTINCT it.info, ', ') AS info_types
    FROM
        movie_info mi
    JOIN
        info_type it ON mi.info_type_id = it.id
    GROUP BY
        mi.movie_id
)
SELECT
    rm.title,
    rm.production_year,
    COALESCE(CA.company_count, 0) AS company_count,
    COALESCE(CA.company_count, 0) + rm.actor_count AS total_participants,
    CASE
        WHEN rm.actor_count > 10 THEN 'Large Cast'
        WHEN rm.actor_count BETWEEN 5 AND 10 THEN 'Medium Cast'
        ELSE 'Small Cast'
    END AS cast_size,
    COALESCE(ci.info_type_count, 0) AS info_types_count,
    ci.info_types
FROM
    RankedMovies rm
LEFT JOIN
    CompanyCounts CA ON CA.movie_id = (SELECT id FROM aka_title WHERE title = rm.title)
LEFT JOIN
    CompletedInfo ci ON ci.movie_id = (SELECT id FROM aka_title WHERE title = rm.title)
WHERE
    (rm.production_year IS NOT NULL AND rm.production_year >= 2000)
    OR (rm.production_year IS NULL AND rm.title IS NOT NULL)
ORDER BY
    total_participants DESC,
    rm.production_year DESC
OFFSET 5 ROWS
FETCH NEXT 10 ROWS ONLY;
