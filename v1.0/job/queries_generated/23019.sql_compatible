
WITH RankedMovies AS (
    SELECT 
        t.id AS movie_id,
        t.title,
        t.production_year,
        t.kind_id,
        ROW_NUMBER() OVER (PARTITION BY t.production_year ORDER BY t.production_year DESC) AS year_rank,
        COALESCE(COUNT(DISTINCT c.person_id) OVER (PARTITION BY t.id), 0) AS cast_count,
        COUNT(DISTINCT k.keyword) OVER (PARTITION BY t.id) AS keyword_count
    FROM 
        aka_title t
    LEFT JOIN 
        cast_info c ON t.id = c.movie_id
    LEFT JOIN 
        movie_keyword mk ON t.id = mk.movie_id
    LEFT JOIN 
        keyword k ON mk.keyword_id = k.id
    WHERE 
        t.production_year IS NOT NULL AND t.production_year >= 2000
),
MoviesWithCastCounts AS (
    SELECT 
        rm.movie_id,
        rm.title,
        rm.production_year,
        rm.year_rank,
        rm.cast_count,
        (CASE 
            WHEN rm.cast_count > 5 THEN 'Large Cast'
            WHEN rm.cast_count BETWEEN 2 AND 5 THEN 'Medium Cast'
            ELSE 'Small Cast' 
        END) AS cast_size
    FROM 
        RankedMovies rm
),
HighestRatedGenres AS (
    SELECT 
        kt.kind AS movie_genre,
        COUNT(*) AS genre_count
    FROM 
        kind_type kt
    JOIN 
        aka_title at ON kt.id = at.kind_id
    GROUP BY 
        kt.kind
    HAVING 
        COUNT(*) > 10
),
FinalQuery AS (
    SELECT 
        m.title,
        m.production_year,
        m.cast_size,
        g.movie_genre,
        CASE 
            WHEN m.year_rank = 1 THEN 'Latest Release'
            ELSE 'Not Latest'
        END AS release_status,
        (SELECT STRING_AGG(DISTINCT ak.name, ', ') 
         FROM aka_name ak 
         JOIN cast_info ci ON ak.person_id = ci.person_id 
         WHERE ci.movie_id = m.movie_id) AS cast_names
    FROM 
        MoviesWithCastCounts m
    JOIN 
        movie_companies mc ON m.movie_id = mc.movie_id
    JOIN 
        HighestRatedGenres g ON mc.company_id IN (SELECT id FROM company_name WHERE country_code = 'USA')
    WHERE 
        (m.cast_count IS NOT NULL OR m.cast_size IS NOT NULL)
    ORDER BY 
        m.production_year DESC, m.cast_count DESC
)
SELECT 
    *,
    CASE 
        WHEN release_status = 'Latest Release' AND cast_size = 'Small Cast' THEN 'Consider Reviewing'
        ELSE 'Normal'
    END AS recommendation
FROM 
    FinalQuery
WHERE 
    production_year >= 2010
    AND (cast_count IS NOT NULL OR movie_genre IS NOT NULL)
    AND (movie_genre IS NOT NULL OR cast_size = 'Medium Cast')
ORDER BY 
    production_year, movie_genre;
