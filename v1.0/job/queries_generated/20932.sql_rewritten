WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        ml.movie_id AS root_movie_id,
        ml.linked_movie_id AS linked_movie_id, 
        1 AS depth
    FROM 
        movie_link ml
    WHERE 
        ml.link_type_id = (SELECT id FROM link_type WHERE link = 'related') 
    UNION ALL
    SELECT 
        mh.root_movie_id,
        ml.linked_movie_id,
        mh.depth + 1
    FROM 
        movie_hierarchy mh
    JOIN 
        movie_link ml ON mh.linked_movie_id = ml.movie_id
    WHERE 
        mh.depth < 5 AND  
        ml.link_type_id = (SELECT id FROM link_type WHERE link = 'related')
),
title_info AS (
    SELECT 
        t.id AS title_id,
        t.title,
        t.production_year,
        t.kind_id,
        COALESCE(mi.info, 'No info') AS additional_info
    FROM 
        title t
    LEFT JOIN 
        movie_info mi ON mi.movie_id = t.id AND mi.info_type_id = (SELECT id FROM info_type WHERE info = 'Summary')
),
movies_with_cast AS (
    SELECT 
        t.title AS movie_title,
        t.production_year,
        au.name AS actor_name,
        ROW_NUMBER() OVER (PARTITION BY t.id ORDER BY c.nr_order) AS actor_order,
        COUNT(DISTINCT mco.company_id) AS company_count
    FROM 
        title_info t
    LEFT JOIN 
        cast_info c ON c.movie_id = t.title_id
    JOIN 
        aka_name au ON au.person_id = c.person_id
    LEFT JOIN 
        movie_companies mco ON mco.movie_id = t.title_id
    WHERE 
        t.kind_id IN (SELECT id FROM kind_type WHERE kind IN ('movie', 'tv_series'))
    GROUP BY 
        t.title_id, t.title, t.production_year, au.name
),
filtered_movies AS (
    SELECT 
        mwc.movie_title,
        mwc.production_year,
        mwc.actor_name,
        mwc.actor_order,
        mwc.company_count,
        mh.root_movie_id,
        mh.linked_movie_id
    FROM 
        movies_with_cast mwc
    LEFT JOIN 
        movie_hierarchy mh ON mwc.production_year = (SELECT max(production_year) FROM title WHERE id = mh.root_movie_id) 
    WHERE 
        mwc.company_count > 0 
)
SELECT 
    f.movie_title,
    f.production_year,
    f.actor_name,
    COUNT(*) OVER (PARTITION BY f.production_year) AS movies_in_year,
    AVG(f.company_count) OVER (PARTITION BY f.production_year) AS avg_companies_per_movie,
    CASE 
        WHEN f.actor_order IS NULL THEN 'No actors listed'
        WHEN f.actor_name IS NULL THEN 'No actor assigned'
        ELSE 'Actor present'
    END AS actor_status
FROM 
    filtered_movies f
WHERE 
    f.linked_movie_id IS NOT NULL
ORDER BY 
    f.production_year DESC, 
    f.actor_order;