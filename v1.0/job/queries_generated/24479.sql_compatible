
WITH RankedMovies AS (
    SELECT 
        at.title,
        at.production_year,
        COUNT(ci.person_id) AS cast_count,
        ROW_NUMBER() OVER (PARTITION BY at.production_year ORDER BY COUNT(ci.person_id) DESC) AS rank
    FROM 
        aka_title at
    LEFT JOIN 
        cast_info ci ON at.movie_id = ci.movie_id
    WHERE 
        at.production_year IS NOT NULL 
        AND at.production_year >= 2000
    GROUP BY 
        at.title, at.production_year
),
TopMovies AS (
    SELECT 
        *
    FROM 
        RankedMovies
    WHERE 
        rank <= 5
),
RecentActors AS (
    SELECT 
        ak.id AS actor_id, 
        ak.name, 
        COUNT(ci.movie_id) AS movies_count
    FROM 
        aka_name ak
    JOIN 
        cast_info ci ON ak.person_id = ci.person_id
    GROUP BY 
        ak.id, ak.name
    HAVING 
        COUNT(ci.movie_id) > 10
),
MovieKeywords AS (
    SELECT 
        at.title,
        k.keyword
    FROM 
        aka_title at
    JOIN 
        movie_keyword mk ON at.movie_id = mk.movie_id
    JOIN 
        keyword k ON mk.keyword_id = k.id
)
SELECT 
    tm.title,
    tm.production_year,
    COALESCE(ra.name, 'Unknown') AS top_actor,
    tm.cast_count,
    STRING_AGG(DISTINCT mk.keyword, ', ') AS keywords,
    COALESCE(ra.movies_count, 0) AS actor_movies_count
FROM 
    TopMovies tm
LEFT JOIN 
    RecentActors ra ON ra.movies_count = (
        SELECT 
            MAX(movies_count) 
        FROM 
            RecentActors
    )
LEFT JOIN 
    MovieKeywords mk ON tm.title = mk.title
GROUP BY 
    tm.title, tm.production_year, ra.name, tm.cast_count
ORDER BY 
    tm.production_year DESC, tm.cast_count DESC;
