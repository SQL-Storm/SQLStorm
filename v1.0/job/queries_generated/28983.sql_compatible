
WITH MovieData AS (
    SELECT 
        t.title AS movie_title,
        t.production_year,
        a.name AS actor_name,
        c.kind AS role_kind,
        STRING_AGG(DISTINCT k.keyword, ',' ORDER BY k.keyword) AS keywords,
        STRING_AGG(DISTINCT cn.name, ',' ORDER BY cn.name) AS companies
    FROM 
        title t
    JOIN 
        cast_info ci ON t.id = ci.movie_id
    JOIN 
        aka_name a ON ci.person_id = a.person_id
    JOIN 
        role_type rt ON ci.role_id = rt.id
    JOIN 
        comp_cast_type c ON ci.person_role_id = c.id
    LEFT JOIN 
        movie_keyword mk ON mk.movie_id = t.id
    LEFT JOIN 
        keyword k ON mk.keyword_id = k.id
    LEFT JOIN 
        movie_companies mc ON t.id = mc.movie_id
    LEFT JOIN 
        company_name cn ON mc.company_id = cn.id
    WHERE 
        t.production_year >= 2000
    GROUP BY 
        t.title, t.production_year, a.name, c.kind
),
RankedMovies AS (
    SELECT 
        movie_title,
        production_year,
        actor_name,
        role_kind,
        keywords,
        companies,
        ROW_NUMBER() OVER (PARTITION BY production_year ORDER BY COUNT(actor_name) DESC) AS actor_count_rank
    FROM 
        MovieData
    GROUP BY 
        movie_title,
        production_year,
        actor_name,
        role_kind,
        keywords,
        companies
)
SELECT 
    production_year,
    movie_title,
    actor_name,
    role_kind,
    actor_count_rank,
    keywords,
    companies
FROM 
    RankedMovies
WHERE 
    actor_count_rank <= 5
ORDER BY 
    production_year DESC, actor_count_rank;
