
WITH RECURSIVE movie_hierarchy AS (
    SELECT 
        m.id AS movie_id,
        m.title,
        1 AS level
    FROM 
        aka_title m
    WHERE 
        m.production_year >= 2000

    UNION ALL

    SELECT 
        m.id AS movie_id,
        m.title,
        mh.level + 1
    FROM 
        movie_link ml
    JOIN 
        movie_hierarchy mh ON ml.movie_id = mh.movie_id
    JOIN 
        aka_title m ON ml.linked_movie_id = m.id
    WHERE 
        mh.level < 5
),

cast_role AS (
    SELECT 
        ci.movie_id,
        rt.role AS role_name,
        COUNT(*) AS total_casts
    FROM 
        cast_info ci
    JOIN 
        role_type rt ON ci.role_id = rt.id
    GROUP BY 
        ci.movie_id, rt.role
),

movie_keywords AS (
    SELECT 
        mk.movie_id,
        STRING_AGG(k.keyword, ', ') AS keywords
    FROM 
        movie_keyword mk
    JOIN 
        keyword k ON mk.keyword_id = k.id
    GROUP BY 
        mk.movie_id
)

SELECT 
    mh.movie_id, 
    mh.title, 
    COALESCE(cr.role_name, 'Unknown Role') AS role_name,
    COALESCE(cr.total_casts, 0) AS total_casts,
    COALESCE(mk.keywords, 'No Keywords') AS keywords,
    COUNT(DISTINCT cc.person_id) OVER (PARTITION BY mh.movie_id) AS total_characters,
    (SELECT COUNT(DISTINCT ci.person_id) 
     FROM cast_info ci 
     WHERE ci.movie_id = mh.movie_id) AS unique_people_in_movie
FROM 
    movie_hierarchy mh
LEFT JOIN 
    cast_role cr ON mh.movie_id = cr.movie_id
LEFT JOIN 
    movie_keywords mk ON mh.movie_id = mk.movie_id
LEFT JOIN 
    complete_cast cc ON mh.movie_id = cc.movie_id
LEFT JOIN 
    aka_name a ON cc.subject_id = a.person_id
GROUP BY 
    mh.movie_id, mh.title, cr.role_name, cr.total_casts, mk.keywords;
