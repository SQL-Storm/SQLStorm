
WITH RankedMovies AS (
    SELECT 
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        ROW_NUMBER() OVER (PARTITION BY mt.production_year ORDER BY mt.title) AS year_rank
    FROM 
        aka_title mt
    WHERE 
        mt.kind_id = (SELECT id FROM kind_type WHERE kind = 'movie')
),
ActorCounts AS (
    SELECT 
        ci.movie_id,
        COUNT(DISTINCT ci.person_id) AS actor_count
    FROM 
        cast_info ci
    GROUP BY 
        ci.movie_id
),
DetailedMovies AS (
    SELECT 
        rm.movie_id,
        rm.title,
        rm.production_year,
        ac.actor_count,
        COALESCE(SUBSTRING(ak.name, '^[A-Z]+'), 'Unknown') AS first_letter
    FROM 
        RankedMovies rm
    LEFT JOIN 
        ActorCounts ac ON rm.movie_id = ac.movie_id
    LEFT JOIN 
        aka_name ak ON ak.person_id IN (SELECT DISTINCT ci.person_id FROM cast_info ci WHERE ci.movie_id = rm.movie_id)
)
SELECT 
    dm.title,
    dm.production_year,
    dm.actor_count,
    dm.first_letter,
    CASE 
        WHEN dm.actor_count IS NULL THEN 'No Actors' 
        WHEN dm.actor_count > 10 THEN 'Popular' 
        ELSE 'Less Popular' 
    END AS popularity_status
FROM 
    DetailedMovies dm
WHERE 
    (dm.production_year >= 2000 AND dm.actor_count IS NOT NULL)
    OR (dm.actor_count IS NULL AND dm.first_letter IS NOT NULL)
ORDER BY 
    dm.production_year DESC, dm.actor_count DESC;
