
WITH RECURSIVE movie_hierarchy AS (
    SELECT
        mt.id AS movie_id,
        mt.title,
        mt.production_year,
        0 AS level,
        ARRAY[mt.title] AS title_path
    FROM
        aka_title mt
    WHERE
        mt.production_year IS NOT NULL
    UNION ALL
    SELECT
        ml.linked_movie_id,
        m.title,
        m.production_year,
        mh.level + 1,
        mh.title_path || m.title
    FROM
        movie_link ml
    JOIN
        aka_title m ON m.id = ml.linked_movie_id
    JOIN
        movie_hierarchy mh ON mh.movie_id = ml.movie_id
)

SELECT
    mn.name AS actor_name,
    ARRAY_AGG(DISTINCT mh.title_path) AS movie_chain,
    COUNT(DISTINCT mh.movie_id) AS movie_count,
    MIN(mh.production_year) AS earliest_release,
    STRING_AGG(DISTINCT kw.keyword, ', ' ORDER BY kw.keyword) AS keywords
FROM
    cast_info ci
JOIN
    aka_name mn ON mn.person_id = ci.person_id
LEFT JOIN
    movie_hierarchy mh ON mh.movie_id = ci.movie_id
LEFT JOIN
    movie_keyword mk ON mk.movie_id = mh.movie_id
LEFT JOIN
    keyword kw ON kw.id = mk.keyword_id
WHERE
    ci.note IS NULL
GROUP BY
    mn.name
HAVING
    COUNT(DISTINCT mh.movie_id) > 3
ORDER BY
    movie_count DESC,
    earliest_release ASC
LIMIT 10;
