
WITH RECURSIVE UserHierarchy AS (
    SELECT Id, DisplayName, Reputation, CreationDate 
    FROM Users
    WHERE Reputation > 1000  
    UNION ALL
    SELECT u.Id, u.DisplayName, u.Reputation, u.CreationDate
    FROM Users u
    INNER JOIN UserHierarchy uh ON u.Id = (SELECT UserId FROM Badges WHERE UserId = uh.Id AND Class = 1)  
),
PostSummary AS (
    SELECT p.Id, p.Title, p.CreationDate, p.Score, p.ViewCount, 
           COUNT(c.Id) AS TotalComments, 
           AVG(v.BountyAmount) AS AverageBounty
    FROM Posts p
    LEFT JOIN Comments c ON p.Id = c.PostId
    LEFT JOIN Votes v ON p.Id = v.PostId AND v.VoteTypeId IN (8, 9)  
    WHERE p.CreationDate >= '2020-01-01'  
    GROUP BY p.Id, p.Title, p.CreationDate, p.Score, p.ViewCount
),
HighScorePosts AS (
    SELECT ps.Id, ps.Title, ps.CreationDate, ps.Score, ps.ViewCount, ps.TotalComments, ps.AverageBounty,
           COALESCE(uh.DisplayName, 'No Badge Holder') AS TopUser,
           ROW_NUMBER() OVER (ORDER BY ps.Score DESC) AS Rank
    FROM PostSummary ps
    LEFT JOIN UserHierarchy uh ON ps.Score = (SELECT MAX(Score) FROM Posts WHERE OwnerUserId = uh.Id)  
)
SELECT hsp.Id, hsp.Title, hsp.CreationDate, hsp.Score, hsp.ViewCount, hsp.TotalComments, hsp.AverageBounty, hsp.TopUser
FROM HighScorePosts hsp
WHERE hsp.Rank <= 10  
ORDER BY hsp.Score DESC;
