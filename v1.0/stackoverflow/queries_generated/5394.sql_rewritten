WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.ViewCount,
        p.Score,
        COUNT(c.Id) AS CommentCount,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS RecentRank
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    WHERE 
        p.CreationDate >= '2023-01-01' AND p.PostTypeId = 1 
    GROUP BY 
        p.Id, p.Title, p.CreationDate, p.ViewCount, p.Score
),
TopUsers AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        SUM(p.Score) AS TotalScore,
        COUNT(DISTINCT p.Id) AS PostCount
    FROM 
        Users u
    JOIN 
        Posts p ON u.Id = p.OwnerUserId
    WHERE 
        p.CreationDate >= '2023-01-01'
    GROUP BY 
        u.Id, u.DisplayName
    HAVING 
        COUNT(DISTINCT p.Id) > 5 
)
SELECT 
    ru.DisplayName,
    COUNT(rp.PostId) AS PostsCount,
    SUM(rp.UpVotes) AS TotalUpVotes,
    SUM(rp.DownVotes) AS TotalDownVotes,
    AVG(rp.ViewCount) AS AverageViewCount,
    AVG(rp.Score) AS AverageScore
FROM 
    RankedPosts rp
JOIN 
    TopUsers ru ON rp.PostId IN (SELECT p.Id FROM Posts p WHERE p.OwnerUserId = ru.UserId)
WHERE 
    rp.RecentRank <= 3 
GROUP BY 
    ru.DisplayName
ORDER BY 
    TotalScore DESC
LIMIT 10;