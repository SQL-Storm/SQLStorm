
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Score,
        p.ViewCount,
        p.AcceptedAnswerId,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS PostRank
    FROM 
        Posts p
    WHERE 
        p.CreationDate >= CAST('2024-10-01 12:34:56' AS TIMESTAMP) - INTERVAL '1 year'
),
UserStats AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COUNT(DISTINCT p.Id) AS TotalPosts,
        AVG(p.Score) AS AvgScore,
        SUM(COALESCE(p.ViewCount, 0)) AS TotalViews,
        SUM(CASE WHEN p.AcceptedAnswerId IS NOT NULL THEN 1 ELSE 0 END) AS AcceptedAnswers
    FROM 
        Users u
    LEFT JOIN 
        Posts p ON u.Id = p.OwnerUserId
    GROUP BY 
        u.Id, u.DisplayName
),
TopUsers AS (
    SELECT 
        us.UserId,
        us.DisplayName,
        us.TotalPosts,
        us.AvgScore,
        us.TotalViews,
        us.AcceptedAnswers,
        RANK() OVER (ORDER BY us.TotalViews DESC) AS UserRank
    FROM 
        UserStats us
    WHERE 
        us.TotalPosts > 0
),
ClosedPosts AS (
    SELECT 
        ph.PostId,
        ph.CreationDate,
        c.Name AS CloseReason
    FROM 
        PostHistory ph
    JOIN 
        CloseReasonTypes c ON CAST(ph.Comment AS INT) = c.Id
    WHERE 
        ph.PostHistoryTypeId = 10
)
SELECT 
    t.UserId,
    t.DisplayName,
    t.TotalPosts,
    t.AvgScore,
    t.TotalViews,
    t.AcceptedAnswers,
    COALESCE(cp.CloseReason, 'Not Closed') AS LatestCloseReason,
    ARRAY_AGG(rp.Title) FILTER (WHERE rp.PostRank <= 5) AS RecentPosts
FROM 
    TopUsers t
LEFT JOIN 
    ClosedPosts cp ON cp.PostId = ANY(SELECT rp.PostId FROM RankedPosts rp WHERE rp.PostRank = 1 AND rp.CreationDate >= CAST('2024-10-01 12:34:56' AS TIMESTAMP) - INTERVAL '3 months')
LEFT JOIN 
    RankedPosts rp ON rp.OwnerUserId = t.UserId
GROUP BY 
    t.UserId, t.DisplayName, t.TotalPosts, t.AvgScore, t.TotalViews, t.AcceptedAnswers, cp.CloseReason
ORDER BY 
    t.TotalViews DESC
LIMIT 10;
