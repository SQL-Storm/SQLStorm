WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.Body,
        p.CreationDate,
        u.DisplayName AS Author,
        COUNT(a.Id) AS AnswerCount,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVoteCount,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVoteCount,
        ROW_NUMBER() OVER (PARTITION BY p.Id ORDER BY p.CreationDate DESC) AS rn
    FROM 
        Posts p
    LEFT JOIN 
        Users u ON p.OwnerUserId = u.Id
    LEFT JOIN 
        Posts a ON a.ParentId = p.Id
    LEFT JOIN 
        Votes v ON v.PostId = p.Id
    WHERE 
        p.PostTypeId = 1  
    GROUP BY 
        p.Id, p.Title, p.Body, p.CreationDate, u.DisplayName
),
RecentPosts AS (
    SELECT 
        rp.PostId,
        rp.Title,
        rp.Body,
        rp.CreationDate,
        rp.Author,
        rp.AnswerCount,
        rp.UpVoteCount,
        rp.DownVoteCount
    FROM 
        RankedPosts rp
    WHERE 
        rp.rn = 1  
    AND 
        rp.CreationDate > cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '30 days'  
)
SELECT 
    r.PostId,
    r.Title,
    r.Body,
    r.CreationDate,
    r.Author,
    r.AnswerCount,
    r.UpVoteCount,
    r.DownVoteCount,
    CASE 
        WHEN r.UpVoteCount > r.DownVoteCount THEN 'Positive Engagement'
        WHEN r.UpVoteCount < r.DownVoteCount THEN 'Negative Engagement'
        ELSE 'Neutral Engagement'
    END AS EngagementType,
    COALESCE((
        SELECT 
            STRING_AGG(t.TagName, ', ') 
        FROM 
            Tags t 
        WHERE 
            t.WikiPostId IN (SELECT DISTINCT p.WikiPostId FROM Posts p WHERE p.Id = r.PostId)
    ), 'No Tags') AS AssociatedTags
FROM 
    RecentPosts r
ORDER BY 
    r.CreationDate DESC;