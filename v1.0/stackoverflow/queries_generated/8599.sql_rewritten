WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Score,
        COALESCE(A.AnswerCount, 0) AS AnswerCount,
        COALESCE(C.CommentCount, 0) AS CommentCount,
        COALESCE(UP.Upvotes, 0) AS UpVotes,
        COALESCE(DP.DownVotes, 0) AS DownVotes,
        RANK() OVER (ORDER BY p.Score DESC) AS PostRank
    FROM 
        Posts p
    LEFT JOIN (
        SELECT 
            ParentId,
            COUNT(*) AS AnswerCount
        FROM 
            Posts
        WHERE 
            PostTypeId = 2
        GROUP BY 
            ParentId
    ) A ON p.Id = A.ParentId
    LEFT JOIN (
        SELECT 
            PostId,
            COUNT(*) AS CommentCount
        FROM 
            Comments
        GROUP BY 
            PostId
    ) C ON p.Id = C.PostId
    LEFT JOIN (
        SELECT 
            PostId,
            SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS Upvotes,
            SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes
        FROM 
            Votes
        GROUP BY 
            PostId
    ) UP ON p.Id = UP.PostId
    LEFT JOIN (
        SELECT 
            PostId,
            COUNT(*) AS DownVotes
        FROM 
            Votes
        WHERE 
            VoteTypeId = 3
        GROUP BY 
            PostId
    ) DP ON p.Id = DP.PostId
    WHERE 
        p.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 year'
)

SELECT 
    rp.PostId,
    rp.Title,
    rp.CreationDate,
    rp.Score,
    rp.AnswerCount,
    rp.CommentCount,
    rp.UpVotes,
    rp.DownVotes,
    pt.Name AS PostType,
    ROW_NUMBER() OVER (PARTITION BY pt.Name ORDER BY rp.Score DESC) AS TypeRank
FROM 
    RankedPosts rp
JOIN 
    PostTypes pt ON pt.Id = rp.PostTypeId
WHERE 
    rp.PostRank <= 10
ORDER BY 
    rp.PostRank;