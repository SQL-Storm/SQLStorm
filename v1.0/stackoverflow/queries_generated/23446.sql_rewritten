WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.ViewCount,
        COALESCE(c.CommentCount, 0) AS CommentCount,
        COALESCE(SUM(v.VoteTypeId = 2) OVER (PARTITION BY p.Id), 0) AS Upvotes,
        COALESCE(SUM(v.VoteTypeId = 3) OVER (PARTITION BY p.Id), 0) AS Downvotes,
        COALESCE(SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) OVER (PARTITION BY p.Id), 0) - 
        COALESCE(SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) OVER (PARTITION BY p.Id), 0) AS NetVotes,
        ROW_NUMBER() OVER (PARTITION BY p.Tags ORDER BY p.CreationDate DESC) AS TagRank
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON c.PostId = p.Id
    LEFT JOIN 
        Votes v ON v.PostId = p.Id
    WHERE 
        p.PostTypeId = 1
    GROUP BY 
        p.Id, p.Title, p.ViewCount, c.CommentCount
),
FilteredPosts AS (
    SELECT 
        rp.*
    FROM 
        RankedPosts rp
    WHERE 
        rp.ViewCount > 100
        AND rp.TagRank = 1
),
PostHistoryDetails AS (
    SELECT 
        ph.PostId,
        ph.PostHistoryTypeId,
        ph.CreationDate AS HistoryDate,
        ph.UserDisplayName,
        ph.Comment,
        ph.UserId,
        ROW_NUMBER() OVER (PARTITION BY ph.PostId ORDER BY ph.CreationDate DESC) AS HistoryRank
    FROM 
        PostHistory ph
    WHERE 
        ph.PostHistoryTypeId IN (10, 11, 12, 13)  
)
SELECT 
    fp.PostId,
    fp.Title,
    fp.ViewCount,
    fp.CommentCount,
    fp.Upvotes,
    fp.Downvotes,
    fp.NetVotes,
    COUNT(DISTINCT phd.UserId) AS UniqueUsersAffected,
    STRING_AGG(phd.Comment, '; ') AS PostHistoryComments,
    MAX(phd.HistoryDate) AS LastActionDate,
    CASE 
        WHEN MAX(phd.HistoryDate) < cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '30 days' THEN 'Stale'
        ELSE 'Active'
    END AS PostActivityStatus
FROM 
    FilteredPosts fp
LEFT JOIN 
    PostHistoryDetails phd ON fp.PostId = phd.PostId AND phd.HistoryRank = 1
GROUP BY 
    fp.PostId, fp.Title, fp.ViewCount, fp.CommentCount, fp.Upvotes, fp.Downvotes, fp.NetVotes
ORDER BY 
    fp.NetVotes DESC, fp.ViewCount DESC
LIMIT 50;