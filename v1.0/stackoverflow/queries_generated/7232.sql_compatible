
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.ViewCount,
        p.Score,
        U.DisplayName AS OwnerDisplayName,
        COUNT(c.Id) AS CommentCount,
        COUNT(v.Id) AS VoteCount,
        RANK() OVER (PARTITION BY p.PostTypeId ORDER BY p.ViewCount DESC) AS ViewRank
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    JOIN 
        Users U ON p.OwnerUserId = U.Id
    WHERE 
        p.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 year'
    GROUP BY 
        p.Id, p.Title, p.ViewCount, p.Score, U.DisplayName
),
TopPosts AS (
    SELECT 
        PostId,
        Title,
        ViewCount,
        Score,
        OwnerDisplayName,
        CommentCount,
        VoteCount
    FROM 
        RankedPosts
    WHERE 
        ViewRank <= 10
)
SELECT 
    tp.*,
    COALESCE(NULLIF(t.TagName, ''), 'No Tags') AS TagName,
    b.Name AS BadgeName,
    bh.Comment AS LastEditComment
FROM 
    TopPosts tp
LEFT JOIN 
    (SELECT 
        p.Id,
        t.TagName
     FROM 
        Tags t
     JOIN 
        Posts p ON t.ExcerptPostId = p.Id
    ) t ON tp.PostId = t.Id
LEFT JOIN 
    Badges b ON tp.OwnerDisplayName = b.UserId
LEFT JOIN 
    PostHistory bh ON tp.PostId = bh.PostId
WHERE
    bh.CreationDate = (SELECT MAX(CreationDate) FROM PostHistory WHERE PostId = tp.PostId)
ORDER BY 
    tp.ViewCount DESC, tp.Score DESC;
