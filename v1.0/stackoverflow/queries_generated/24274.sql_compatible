
WITH RankedPosts AS (
    SELECT 
        p.Id,
        p.Title,
        p.ViewCount,
        p.Score,
        p.CreationDate,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS UserPostRank,
        COUNT(c.Id) OVER (PARTITION BY p.Id) AS CommentCount,
        MAX(CASE 
            WHEN ph.PostHistoryTypeId = 10 THEN ph.CreationDate 
            ELSE NULL 
        END) OVER (PARTITION BY p.Id) AS LastClosedDate
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        PostHistory ph ON p.Id = ph.PostId
    WHERE 
        p.CreationDate >= DATEADD(day, -30, '2024-10-01')
),

UserVotingActivity AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        SUM(CASE 
                WHEN v.VoteTypeId IN (2, 3) THEN 1 
                ELSE 0 
            END) AS TotalVotes,
        SUM(CASE 
                WHEN v.VoteTypeId = 2 THEN 1 
                ELSE 0 
            END) AS UpVotes,
        SUM(CASE 
                WHEN v.VoteTypeId = 3 THEN 1 
                ELSE 0 
            END) AS DownVotes
    FROM 
        Users u
    LEFT JOIN 
        Votes v ON u.Id = v.UserId
    WHERE 
        u.Reputation > 100 
    GROUP BY 
        u.Id, u.DisplayName
)

SELECT 
    up.DisplayName,
    COUNT(DISTINCT rp.Id) AS TotalPosts,
    SUM(rp.CommentCount) AS TotalComments,
    SUM(rp.ViewCount) AS TotalViews,
    MAX(rp.Score) AS HighestScore,
    MIN(rp.LastClosedDate) AS FirstClosedPostDate,
    SUM(uba.TotalVotes) AS TotalVotes,
    SUM(uba.UpVotes) AS TotalUpVotes,
    SUM(uba.DownVotes) AS TotalDownVotes
FROM 
    RankedPosts rp
JOIN 
    Users up ON rp.OwnerUserId = up.Id
LEFT JOIN 
    UserVotingActivity uba ON up.Id = uba.UserId
WHERE 
    rp.UserPostRank <= 3 
GROUP BY 
    up.DisplayName
HAVING 
    COUNT(DISTINCT rp.Id) > 0 
    AND SUM(rp.ViewCount) > 50 
ORDER BY 
    TotalViews DESC;
