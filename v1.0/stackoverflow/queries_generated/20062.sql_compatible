
WITH UserReputation AS (
    SELECT 
        U.Id AS UserId,
        U.Reputation,
        COUNT(B.Id) AS BadgeCount,
        SUM(CASE WHEN B.Class = 1 THEN 1 ELSE 0 END) AS GoldBadges,
        SUM(CASE WHEN B.Class = 2 THEN 1 ELSE 0 END) AS SilverBadges,
        SUM(CASE WHEN B.Class = 3 THEN 1 ELSE 0 END) AS BronzeBadges
    FROM 
        Users U
    LEFT JOIN 
        Badges B ON U.Id = B.UserId
    GROUP BY 
        U.Id, U.Reputation
),
PostWithTags AS (
    SELECT 
        P.Id,
        P.Title,
        P.CreationDate,
        P.OwnerUserId,
        REPLACE(REGEXP_REPLACE(P.Tags, '<.*?>', ''), ' ', '') AS CleanedTags,
        P.ViewCount,
        COALESCE(P.Score, 0) AS SafeScore
    FROM 
        Posts P
),
ActiveUsers AS (
    SELECT 
        U.Id,
        U.DisplayName,
        U.LastAccessDate,
        RANK() OVER (ORDER BY U.Reputation DESC) AS ReputationRank
    FROM 
        Users U
    WHERE 
        U.LastAccessDate > CURRENT_TIMESTAMP - INTERVAL '1 year'
),
PostStats AS (
    SELECT 
        P.Id AS PostId,
        COUNT(CASE WHEN C.Id IS NOT NULL THEN 1 END) AS CommentCount,
        COUNT(DISTINCT V.UserId) AS VoteCount,
        SUM(V.BountyAmount) AS TotalBounty
    FROM 
        Posts P
    LEFT JOIN 
        Comments C ON P.Id = C.PostId
    LEFT JOIN 
        Votes V ON P.Id = V.PostId
    GROUP BY 
        P.Id
)
SELECT 
    U.DisplayName AS UserName,
    U.Reputation AS UserReputation,
    U.BadgeCount,
    P.Title AS PostTitle,
    P.ViewCount,
    PS.CommentCount,
    PS.VoteCount,
    PS.TotalBounty,
    COALESCE(RANK() OVER (PARTITION BY P.Id ORDER BY P.ViewCount DESC), 0) AS ViewRank,
    CASE 
        WHEN P.CleanedTags LIKE '%sql%' THEN 'Contains SQL Tag'
        ELSE 'Does Not Contain SQL Tag' 
    END AS TagStatus
FROM 
    UserReputation U
JOIN 
    ActiveUsers A ON U.UserId = A.Id
JOIN 
    PostWithTags P ON P.OwnerUserId = U.UserId
JOIN 
    PostStats PS ON P.Id = PS.PostId
WHERE 
    (U.Reputation > 1000 AND PS.CommentCount > 5) OR 
    (A.ReputationRank < 20 AND PS.VoteCount > 10)
ORDER BY 
    U.Reputation DESC, PS.TotalBounty DESC;
