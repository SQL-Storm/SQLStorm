WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.Score,
        p.CreationDate,
        u.Reputation,
        ROW_NUMBER() OVER (PARTITION BY p.PostTypeId ORDER BY p.Score DESC) AS rn
    FROM 
        Posts p
    JOIN 
        Users u ON p.OwnerUserId = u.Id
    WHERE 
        p.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 year' 
        AND p.Score > 0
),
CommentCounts AS (
    SELECT 
        PostId,
        COUNT(*) AS TotalComments
    FROM 
        Comments
    GROUP BY 
        PostId
),
ClosedPosts AS (
    SELECT 
        ph.PostId,
        ph.CreationDate AS ClosedDate,
        crt.Name AS CloseReason
    FROM 
        PostHistory ph
    JOIN 
        CloseReasonTypes crt ON ph.Comment::int = crt.Id
    WHERE 
        ph.PostHistoryTypeId = 10
)
SELECT
    rp.PostId,
    rp.Title,
    rp.Score,
    COALESCE(cc.TotalComments, 0) AS TotalComments,
    rp.CreationDate,
    rp.Reputation,
    cp.ClosedDate,
    cp.CloseReason
FROM 
    RankedPosts rp
LEFT JOIN 
    CommentCounts cc ON rp.PostId = cc.PostId
LEFT JOIN 
    ClosedPosts cp ON rp.PostId = cp.PostId
WHERE 
    rp.rn <= 5
ORDER BY 
    rp.Score DESC, rp.CreationDate ASC
UNION ALL
SELECT 
    -1 AS PostId,
    'Total Score' AS Title,
    SUM(rp.Score) AS TotalScore,
    NULL AS TotalComments,
    NULL AS CreationDate,
    NULL AS Reputation,
    NULL AS ClosedDate,
    NULL AS CloseReason
FROM 
    RankedPosts rp
WHERE 
    rp.Score IS NOT NULL;