
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title AS PostTitle,
        p.Score,
        p.OwnerUserId,
        p.CreationDate,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS PostRank
    FROM 
        Posts p
    WHERE 
        p.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 year'
),
UserReputation AS (
    SELECT 
        u.Id AS UserId,
        u.Reputation,
        COUNT(b.Id) AS BadgeCount,
        COALESCE(SUM(v.BountyAmount), 0) AS TotalBounties
    FROM 
        Users u
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    LEFT JOIN 
        Votes v ON u.Id = v.UserId 
    WHERE 
        u.Reputation > 1000
    GROUP BY 
        u.Id, u.Reputation
),
PostActivity AS (
    SELECT 
        p.Id AS PostId,
        COALESCE(p.AnswerCount, 0) AS Answers,
        COALESCE(c.CommentCount, 0) AS Comments,
        COALESCE(ph.HistoryCount, 0) AS HistoryEntries,
        MAX(v.CreationDate) AS LastVoteDate
    FROM 
        Posts p
    LEFT JOIN (
        SELECT PostId, COUNT(*) AS CommentCount
        FROM Comments
        GROUP BY PostId
    ) c ON p.Id = c.PostId
    LEFT JOIN (
        SELECT PostId, COUNT(*) AS HistoryCount
        FROM PostHistory
        GROUP BY PostId
    ) ph ON p.Id = ph.PostId
    LEFT JOIN Votes v ON p.Id = v.PostId
    GROUP BY 
        p.Id, p.AnswerCount
)
SELECT 
    up.UserId,
    ur.Reputation,
    ur.BadgeCount,
    ur.TotalBounties,
    rp.PostTitle,
    pa.Answers,
    pa.Comments,
    pa.HistoryEntries,
    pa.LastVoteDate
FROM 
    UserReputation ur
JOIN 
    (SELECT DISTINCT OwnerUserId AS UserId FROM RankedPosts) up ON ur.UserId = up.UserId
LEFT JOIN 
    RankedPosts rp ON up.UserId = rp.OwnerUserId AND rp.PostRank = 1
LEFT JOIN 
    PostActivity pa ON rp.PostId = pa.PostId
WHERE 
    (pa.Answers > 0 OR pa.Comments > 0)
ORDER BY 
    ur.Reputation DESC, rp.CreationDate DESC;
