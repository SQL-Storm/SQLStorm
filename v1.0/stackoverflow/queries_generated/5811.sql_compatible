
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.ViewCount,
        p.Score,
        u.DisplayName AS OwnerDisplayName,
        COUNT(c.Id) AS CommentCount,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS PostRank
    FROM 
        Posts p
    JOIN 
        Users u ON p.OwnerUserId = u.Id
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    WHERE 
        p.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 year'
        AND p.PostTypeId IN (1, 2) 
    GROUP BY 
        p.Id, u.DisplayName, p.CreationDate, p.ViewCount, p.Score
), RecentBadges AS (
    SELECT 
        b.UserId,
        COUNT(b.Id) AS BadgeCount
    FROM 
        Badges b
    WHERE 
        b.Date >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 year'
    GROUP BY 
        b.UserId
), TopUsers AS (
    SELECT 
        u.Id,
        u.DisplayName,
        u.Reputation,
        COALESCE(rb.BadgeCount, 0) AS BadgeCount,
        SUM(rp.ViewCount) AS TotalViews,
        SUM(rp.Score) AS TotalScore,
        COUNT(rp.PostId) AS PostCount
    FROM 
        Users u
    LEFT JOIN 
        RecentBadges rb ON u.Id = rb.UserId
    LEFT JOIN 
        RankedPosts rp ON u.Id = rp.OwnerUserId
    GROUP BY 
        u.Id, u.DisplayName, u.Reputation, rb.BadgeCount
    ORDER BY 
        TotalScore DESC, TotalViews DESC
    LIMIT 10
)
SELECT 
    tu.DisplayName,
    tu.Reputation,
    tu.BadgeCount,
    tu.TotalViews,
    tu.TotalScore,
    STRING_AGG(tp.Title, '; ') AS TopPosts
FROM 
    TopUsers tu
JOIN 
    RankedPosts tp ON tu.Id = tp.OwnerUserId
GROUP BY 
    tu.DisplayName, tu.Reputation, tu.BadgeCount, tu.TotalViews, tu.TotalScore
ORDER BY 
    tu.TotalScore DESC, tu.TotalViews DESC;
