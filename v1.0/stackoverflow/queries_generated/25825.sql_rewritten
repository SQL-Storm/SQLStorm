WITH UserStatistics AS (
    SELECT
        U.Id AS UserId,
        U.DisplayName,
        U.Reputation,
        COUNT(DISTINCT P.Id) AS TotalPosts,
        COUNT(DISTINCT C.Id) AS TotalComments,
        SUM(CASE WHEN V.VoteTypeId = 2 THEN 1 ELSE 0 END) AS TotalUpVotes,
        SUM(CASE WHEN V.VoteTypeId = 3 THEN 1 ELSE 0 END) AS TotalDownVotes,
        SUM(B.Class = 1) AS GoldBadges,
        SUM(B.Class = 2) AS SilverBadges,
        SUM(B.Class = 3) AS BronzeBadges
    FROM
        Users U
    LEFT JOIN Posts P ON U.Id = P.OwnerUserId
    LEFT JOIN Comments C ON U.Id = C.UserId
    LEFT JOIN Votes V ON P.Id = V.PostId AND V.UserId = U.Id
    LEFT JOIN Badges B ON U.Id = B.UserId
    WHERE
        U.Reputation > 0
    GROUP BY
        U.Id, U.DisplayName, U.Reputation
),
TopUsers AS (
    SELECT
        *,
        RANK() OVER (ORDER BY Reputation DESC) AS ReputationRank
    FROM
        UserStatistics
),
ActiveQuestions AS (
    SELECT 
        P.Id AS PostId,
        P.Title,
        P.CreationDate,
        P.ViewCount,
        COUNT(A.Id) AS AnswerCount,
        STRING_AGG(DISTINCT T.TagName, ', ') AS Tags
    FROM 
        Posts P
    LEFT JOIN Posts A ON P.Id = A.ParentId
    LEFT JOIN Tags T ON POSITION('>' || T.TagName || '<' IN '<' || P.Tags || '>') > 0
    WHERE 
        P.PostTypeId = 1  
    GROUP BY 
        P.Id, P.Title, P.CreationDate, P.ViewCount
    ORDER BY
        P.CreationDate DESC
    LIMIT 10
)
SELECT 
    TU.DisplayName AS TopUser,
    TU.Reputation,
    TU.TotalPosts,
    TU.TotalComments,
    TU.TotalUpVotes,
    TU.TotalDownVotes,
    TU.GoldBadges,
    TU.SilverBadges,
    TU.BronzeBadges,
    AQ.Title AS RecentQuestion,
    AQ.CreationDate AS QuestionCreationDate,
    AQ.ViewCount AS QuestionViewCount,
    AQ.AnswerCount AS QuestionAnswerCount,
    AQ.Tags AS QuestionTags
FROM 
    TopUsers TU
CROSS JOIN 
    ActiveQuestions AQ
WHERE 
    TU.ReputationRank <= 10  
ORDER BY 
    TU.Reputation DESC;