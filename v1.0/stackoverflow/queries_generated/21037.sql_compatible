
WITH RankedUsers AS (
    SELECT 
        U.Id AS UserId,
        U.DisplayName,
        U.Reputation,
        DENSE_RANK() OVER (ORDER BY U.Reputation DESC) AS UserRank
    FROM 
        Users U
    WHERE 
        U.Reputation IS NOT NULL
),
HighReputationQuestions AS (
    SELECT 
        P.Id AS QuestionId,
        P.Title,
        P.CreationDate,
        U.DisplayName AS OwnerDisplayName
    FROM 
        Posts P
    JOIN 
        Users U ON P.OwnerUserId = U.Id
    WHERE 
        P.PostTypeId = 1 AND
        EXISTS (
            SELECT 1 
            FROM Votes V 
            WHERE V.PostId = P.Id AND V.VoteTypeId = 2  
            GROUP BY V.PostId
            HAVING COUNT(*) > 10
        )
),
ClosedPostHistory AS (
    SELECT 
        H.PostId,
        H.CreatedAt,
        PH.Name AS HistoryType,
        U.DisplayName AS Editor,
        H.Comment,
        ROW_NUMBER() OVER (PARTITION BY H.PostId ORDER BY H.CreatedAt DESC) AS EditOrder
    FROM 
        PostHistory H
    JOIN 
        PostHistoryTypes PH ON H.PostHistoryTypeId = PH.Id
    LEFT JOIN 
        Users U ON H.UserId = U.Id
    WHERE 
        H.PostHistoryTypeId IN (10, 11) 
),
RecentActivity AS (
    SELECT 
        P.Id AS PostId,
        P.Title,
        COUNT(C.Id) AS CommentCount,
        MAX(C.CreationDate) AS LastCommentDate
    FROM 
        Posts P
    LEFT JOIN 
        Comments C ON P.Id = C.PostId
    WHERE 
        P.LastActivityDate > CURRENT_TIMESTAMP - INTERVAL '1 month'
    GROUP BY 
        P.Id
)
SELECT 
    RU.UserId,
    RU.DisplayName AS User,
    RU.Reputation,
    HQ.QuestionId,
    HQ.Title AS QuestionTitle,
    HQ.CreationDate AS QuestionCreationDate,
    PH.HistoryType,
    PH.Editor AS LastEditor,
    PH.Comment AS CloseComment
FROM 
    RankedUsers RU
LEFT JOIN 
    HighReputationQuestions HQ ON HQ.OwnerDisplayName = RU.DisplayName
LEFT JOIN 
    ClosedPostHistory PH ON HQ.QuestionId = PH.PostId AND PH.EditOrder = 1
WHERE 
    RU.UserRank <= 10  
ORDER BY 
    RU.Reputation DESC, HQ.QuestionCreationDate DESC;
