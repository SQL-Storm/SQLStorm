
WITH UserVoteStats AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COUNT(v.Id) AS TotalVotes,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes,
        SUM(CASE WHEN v.VoteTypeId = 6 THEN 1 ELSE 0 END) AS CloseVotes,
        SUM(CASE WHEN v.VoteTypeId = 7 THEN 1 ELSE 0 END) AS ReopenVotes
    FROM Users u
    LEFT JOIN Votes v ON u.Id = v.UserId
    GROUP BY u.Id, u.DisplayName
),
TopPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.ViewCount,
        p.Score,
        COUNT(c.Id) AS CommentCount,
        COUNT(a.Id) AS AnswerCount
    FROM Posts p
    LEFT JOIN Comments c ON p.Id = c.PostId
    LEFT JOIN Posts a ON p.Id = a.ParentId
    WHERE p.PostTypeId = 1
    GROUP BY p.Id, p.Title, p.CreationDate, p.ViewCount, p.Score
    ORDER BY p.Score DESC, p.ViewCount DESC
    LIMIT 10
)
SELECT 
    u.DisplayName AS UserName,
    ups.TotalVotes,
    ups.UpVotes,
    ups.DownVotes,
    ups.CloseVotes,
    ups.ReopenVotes,
    tp.Title AS TopPostTitle,
    tp.CreationDate AS PostCreationDate,
    tp.ViewCount AS PostViewCount,
    tp.Score AS PostScore,
    tp.CommentCount,
    tp.AnswerCount
FROM UserVoteStats ups
JOIN TopPosts tp ON ups.UserId IN (
    SELECT DISTINCT v.UserId 
    FROM Votes v 
    WHERE v.PostId IN (SELECT tp.PostId FROM TopPosts tp)
)
ORDER BY ups.TotalVotes DESC, ups.UpVotes DESC;
