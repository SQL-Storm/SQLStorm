WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.OwnerUserId,
        p.CreationDate,
        p.Score,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC) AS Rank,
        COUNT(c.Id) AS CommentCount,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes,
        COALESCE(NULLIF(AVG(CASE 
            WHEN ph.PostHistoryTypeId = 10 THEN 1 
            WHEN ph.PostHistoryTypeId = 11 THEN -1 
            ELSE 0 END), -1), 0) AS ClosureRate
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    LEFT JOIN 
        PostHistory ph ON p.Id = ph.PostId
    WHERE 
        p.CreationDate >= cast('2024-10-01' as date) - INTERVAL '1 year' 
        AND p.Score > 0
    GROUP BY 
        p.Id, p.Title, p.OwnerUserId, p.CreationDate, p.Score
),
UserReputation AS (
    SELECT 
        u.Id as UserId,
        u.Reputation,
        u.DisplayName,
        COUNT(DISTINCT p.Id) AS PostsCount
    FROM 
        Users u
    LEFT JOIN 
        Posts p ON u.Id = p.OwnerUserId
    WHERE 
        u.Reputation > 1000
    GROUP BY 
        u.Id, u.Reputation, u.DisplayName
),
ActiveUsers AS (
    SELECT 
        UserId,
        SUM(CASE WHEN p.CreationDate >= cast('2024-10-01' as date) - INTERVAL '1 month' THEN 1 ELSE 0 END) AS ActivePosts
    FROM 
        Posts p
    GROUP BY 
        UserId
),
FinalResults AS (
    SELECT 
        up.UserId,
        up.DisplayName,
        up.Reputation,
        rp.PostId,
        rp.Title,
        rp.CreationDate,
        rp.Score,
        rp.CommentCount,
        rp.UpVotes,
        rp.DownVotes,
        rp.ClosureRate,
        au.ActivePosts
    FROM 
        UserReputation up
    JOIN 
        RankedPosts rp ON up.UserId = rp.OwnerUserId
    LEFT JOIN 
        ActiveUsers au ON up.UserId = au.UserId
)
SELECT 
    fr.UserId,
    fr.DisplayName,
    fr.Reputation,
    fr.Title,
    fr.CreationDate,
    fr.Score,
    fr.CommentCount,
    fr.UpVotes,
    fr.DownVotes,
    fr.ClosureRate,
    COALESCE(fr.ActivePosts, 0) AS ActivePosts
FROM 
    FinalResults fr
WHERE 
    fr.Rank <= 5
ORDER BY 
    fr.Reputation DESC, fr.Score DESC;