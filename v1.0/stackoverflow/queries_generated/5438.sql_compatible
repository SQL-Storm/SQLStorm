
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Score,
        p.ViewCount,
        p.OwnerDisplayName,
        p.Tags,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC, p.ViewCount DESC) AS rn
    FROM 
        Posts p
    WHERE 
        p.CreationDate >= CAST('2024-10-01' AS DATE) - INTERVAL '1 year' AND 
        p.PostTypeId = 1
), 
UserBadges AS (
    SELECT 
        u.Id AS UserId,
        COUNT(b.Id) AS BadgeCount
    FROM 
        Users u
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    GROUP BY 
        u.Id
), 
PopularTags AS (
    SELECT 
        UNNEST(TRIM(BOTH '>' FROM TRIM(BOTH '<' FROM string_to_array(p.Tags, '><')))) AS Tag
    FROM 
        Posts p
    WHERE 
        p.PostTypeId = 1 AND 
        p.CreationDate >= CAST('2024-10-01' AS DATE) - INTERVAL '1 year'
    GROUP BY 
        Tag
    ORDER BY 
        COUNT(*) DESC
    LIMIT 10
)
SELECT 
    rp.PostId,
    rp.Title,
    rp.CreationDate,
    rp.Score,
    rp.ViewCount,
    rb.UserId,
    rb.BadgeCount,
    pt.Tag
FROM 
    RankedPosts rp
JOIN 
    UserBadges rb ON rp.OwnerUserId = rb.UserId
JOIN 
    PopularTags pt ON rp.Tags LIKE '%' || pt.Tag || '%'
WHERE 
    rp.rn = 1
ORDER BY 
    rp.Score DESC, rp.ViewCount DESC;
