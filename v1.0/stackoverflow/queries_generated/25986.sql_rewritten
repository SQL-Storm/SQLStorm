WITH RankedPosts AS (
    SELECT 
        id AS PostId,
        title,
        body,
        owneruserid,
        creationdate,
        tags,
        COUNT(CASE WHEN PostTypeId = 2 THEN 1 END) AS AnswerCount,
        SUM(CASE WHEN v.votetypeid = 2 THEN 1 ELSE 0 END) AS UpVotes,
        SUM(CASE WHEN v.votetypeid = 3 THEN 1 ELSE 0 END) AS DownVotes,
        ROW_NUMBER() OVER (PARTITION BY tags ORDER BY SUM(CASE WHEN v.votetypeid = 2 THEN 1 ELSE 0 END) DESC) AS Rank
    FROM 
        Posts p
    LEFT JOIN 
        Votes v ON p.id = v.postid
    WHERE 
        p.posttypeid = 1 
    GROUP BY 
        p.id, p.title, p.body, p.owneruserid, p.creationdate, p.tags
),

FilteredPosts AS (
    SELECT 
        rp.PostId,
        rp.Title,
        rp.Body,
        u.DisplayName AS OwnerDisplayName,
        rp.CreationDate,
        STRING_AGG(t.TagName, ', ') AS CombinedTags,
        rp.AnswerCount,
        rp.UpVotes,
        rp.DownVotes
    FROM 
        RankedPosts rp
    JOIN 
        Users u ON rp.owneruserid = u.id
    LEFT JOIN 
        Tags t ON t.Id = ANY(string_to_array(trim(both '<>' FROM rp.tags), '><')::int[])
    WHERE 
        rp.Rank <= 5 
    GROUP BY 
        rp.PostId, rp.Title, rp.Body, u.DisplayName, rp.CreationDate, rp.AnswerCount, rp.UpVotes, rp.DownVotes
    ORDER BY 
        rp.CreationDate DESC
)

SELECT 
    fp.PostId,
    fp.Title,
    fp.Body,
    fp.OwnerDisplayName,
    fp.CreationDate,
    fp.CombinedTags,
    fp.AnswerCount,
    fp.UpVotes,
    fp.DownVotes
FROM 
    FilteredPosts fp
WHERE 
    fp.UpVotes - fp.DownVotes > 0 
ORDER BY 
    fp.UpVotes DESC, 
    fp.CreationDate DESC;