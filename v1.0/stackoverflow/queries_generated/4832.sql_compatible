
WITH UserVoteCounts AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COUNT(v.Id) AS VoteCount,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes
    FROM 
        Users u
    LEFT JOIN 
        Votes v ON u.Id = v.UserId
    GROUP BY 
        u.Id, u.DisplayName
),
ActivePosts AS (
    SELECT 
        p.Id,
        p.Title,
        p.Score,
        p.CreationDate,
        p.OwnerUserId,
        COALESCE(p.ClosedDate, 'Open') AS Status,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS rn
    FROM 
        Posts p
    WHERE 
        p.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 year'
),
PostDetails AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        u.DisplayName AS OwnerName,
        COUNT(c.Id) AS CommentCount,
        SUM(CASE WHEN ph.PostHistoryTypeId IN (10, 11) THEN 1 ELSE 0 END) AS CloseReopenCount,
        p.OwnerUserId
    FROM 
        ActivePosts p
    LEFT JOIN 
        Users u ON p.OwnerUserId = u.Id
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        PostHistory ph ON p.Id = ph.PostId
    WHERE 
        p.Status = 'Open'
    GROUP BY 
        p.Id, u.DisplayName, p.OwnerUserId
)
SELECT 
    d.PostId,
    d.Title,
    d.OwnerName,
    d.CommentCount,
    COALESCE(uv.UpVotes, 0) AS UpVotes,
    COALESCE(uv.DownVotes, 0) AS DownVotes,
    COALESCE(d.CloseReopenCount, 0) AS CloseReopenCount,
    CASE 
        WHEN d.CommentCount > 0 THEN 'Popular'
        WHEN COALESCE(uv.UpVotes, 0) > COALESCE(uv.DownVotes, 0) THEN 'Positive'
        ELSE 'Needs Attention'
    END AS PostHealth
FROM 
    PostDetails d
LEFT JOIN 
    UserVoteCounts uv ON d.OwnerUserId = uv.UserId
ORDER BY 
    d.CommentCount DESC, d.UpVotes DESC
LIMIT 100
OFFSET 0;
