
WITH RankedPosts AS (
    SELECT 
        p.Id,
        p.Title,
        p.CreationDate,
        p.ViewCount,
        p.Score,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC) AS Rank,
        COUNT(c.Id) OVER (PARTITION BY p.Id) AS CommentCount
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    WHERE 
        p.CreationDate >= CAST('2024-10-01 12:34:56' AS TIMESTAMP) - INTERVAL '1 year'
),
TopUsers AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        SUM(p.ViewCount) AS TotalViews,
        AVG(p.Score) AS AverageScore,
        COUNT(DISTINCT p.Id) AS PostCount
    FROM 
        Users u
    INNER JOIN 
        Posts p ON u.Id = p.OwnerUserId
    GROUP BY 
        u.Id, u.DisplayName
    HAVING 
        COUNT(DISTINCT p.Id) > 5
),
RecentPostHistory AS (
    SELECT 
        ph.PostId,
        ph.CreationDate,
        p.Title,
        p.OwnerDisplayName,
        pt.Name AS PostTypeName,
        p.ClosedDate,
        CASE 
            WHEN ph.PostHistoryTypeId IN (10, 11) THEN 'Closed/Reopened'
            ELSE 'Edited/Other'
        END AS ChangeType
    FROM 
        PostHistory ph
    JOIN 
        Posts p ON ph.PostId = p.Id
    JOIN 
        PostHistoryTypes pt ON ph.PostHistoryTypeId = pt.Id
    WHERE 
        ph.CreationDate >= CAST('2024-10-01 12:34:56' AS TIMESTAMP) - INTERVAL '30 days'
)
SELECT 
    u.DisplayName,
    COUNT(DISTINCT r.Id) AS TotalRankedPosts,
    SUM(r.ViewCount) AS TotalViewCount,
    SUM(CASE WHEN r.Rank <= 3 THEN 1 ELSE 0 END) AS TopPosts,
    AVG(u.TotalViews) AS UserAverageViews,
    AVG(up.TotalViews) AS PlatformAverageViews,
    JSON_AGG(DISTINCT JSON_BUILD_OBJECT('PostId', p.Id, 'Title', p.Title, 'ChangeType', ph.ChangeType)) AS RecentChanges
FROM 
    TopUsers u
JOIN 
    RankedPosts r ON u.UserId = r.OwnerUserId
LEFT JOIN 
    RecentPostHistory ph ON ph.PostId = r.Id
JOIN 
    (SELECT AVG(TotalViews) AS TotalViews FROM TopUsers) up ON TRUE
WHERE 
    r.Rank <= 5
GROUP BY 
    u.DisplayName, u.UserId
ORDER BY 
    TotalViewCount DESC;
