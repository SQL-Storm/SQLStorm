WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.ViewCount,
        p.Score,
        p.CreationDate,
        ROW_NUMBER() OVER (PARTITION BY p.PostTypeId ORDER BY p.CreationDate DESC) AS rn,
        COUNT(c.Id) AS CommentCount,
        SUM(v.VoteTypeId = 2) AS UpVoteCount 
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    GROUP BY 
        p.Id, p.Title, p.ViewCount, p.Score, p.CreationDate, p.PostTypeId
),
MaxComments AS (
    SELECT 
        PostId,
        MAX(CommentCount) AS MaxCommentCount
    FROM 
        RankedPosts
    GROUP BY 
        PostId
),
BountyPosts AS (
    SELECT 
        p.Id AS PostId,
        b.BountyAmount,
        b.CreationDate AS BountyCreationDate
    FROM 
        Posts p
    JOIN 
        Votes b ON p.Id = b.PostId AND b.VoteTypeId = 8 
)
SELECT 
    rp.PostId,
    rp.Title,
    rp.ViewCount,
    rp.Score,
    rp.CreationDate,
    rp.CommentCount,
    rp.UpVoteCount,
    mb.MaxCommentCount,
    COALESCE(bp.BountyAmount, 0) AS BountyAmount,
    CASE 
        WHEN bp.BountyAmount IS NOT NULL THEN 
            CONCAT('Bounty of ', bp.BountyAmount, ' awarded on ', TO_CHAR(bp.BountyCreationDate, 'YYYY-MM-DD HH24:MI:SS'))
        ELSE 
            'No Bounty'
    END AS BountyStatus
FROM 
    RankedPosts rp
LEFT JOIN 
    MaxComments mb ON rp.PostId = mb.PostId
LEFT JOIN 
    BountyPosts bp ON rp.PostId = bp.PostId
WHERE 
    rp.rn = 1 
    AND (rp.Score > 0 OR bp.BountyAmount IS NOT NULL) 
ORDER BY 
    rp.CreationDate DESC
LIMIT 50;