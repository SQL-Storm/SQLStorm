
WITH UserEngagement AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COUNT(DISTINCT p.Id) AS QuestionCount,
        SUM(CASE WHEN p.PostTypeId = 2 THEN 1 ELSE 0 END) AS AnswerCount,
        SUM(COALESCE(c.Score, 0)) AS CommentScore,
        SUM(u.UpVotes) AS TotalUpVotes,
        SUM(u.DownVotes) AS TotalDownVotes,
        SUM(CASE WHEN b.Class = 1 THEN 1 ELSE 0 END) AS GoldBadges,
        SUM(CASE WHEN b.Class = 2 THEN 1 ELSE 0 END) AS SilverBadges,
        SUM(CASE WHEN b.Class = 3 THEN 1 ELSE 0 END) AS BronzeBadges,
        DATEDIFF(day, MIN(u.CreationDate), MAX(p.CreationDate)) AS DaysActive
    FROM 
        Users u
    LEFT JOIN 
        Posts p ON u.Id = p.OwnerUserId
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    GROUP BY 
        u.Id, u.DisplayName
), UserPerformance AS (
    SELECT 
        ue.UserId,
        ue.DisplayName,
        ue.QuestionCount,
        ue.AnswerCount,
        ue.CommentScore,
        ue.TotalUpVotes,
        ue.TotalDownVotes,
        ue.GoldBadges,
        ue.SilverBadges,
        ue.BronzeBadges,
        ue.DaysActive,
        ROUND(ue.TotalUpVotes / NULLIF(ue.QuestionCount, 0), 2) AS UpVotePerQuestion,
        ROUND(ue.TotalDownVotes / NULLIF(ue.QuestionCount, 0), 2) AS DownVotePerQuestion,
        ROUND(ue.CommentScore / NULLIF(ue.AnswerCount, 0), 2) AS AvgCommentScorePerAnswer
    FROM 
        UserEngagement ue
    WHERE 
        ue.DaysActive >= 30  
        AND ue.QuestionCount > 0  
)

SELECT 
    up.DisplayName,
    up.QuestionCount,
    up.AnswerCount,
    up.CommentScore,
    up.TotalUpVotes,
    up.TotalDownVotes,
    up.GoldBadges,
    up.SilverBadges,
    up.BronzeBadges,
    up.UpVotePerQuestion,
    up.DownVotePerQuestion,
    up.AvgCommentScorePerAnswer,
    RANK() OVER (ORDER BY up.QuestionCount DESC, up.TotalUpVotes DESC) AS Rank
FROM 
    UserPerformance up
ORDER BY 
    Rank;
