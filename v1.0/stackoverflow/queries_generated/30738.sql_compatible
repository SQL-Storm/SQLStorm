
WITH RECURSIVE UserReputation AS (
    SELECT Id, Reputation, CreationDate, LastAccessDate
    FROM Users
    WHERE Reputation > 1000
    UNION ALL
    SELECT u.Id, u.Reputation, u.CreationDate, u.LastAccessDate
    FROM Users u
    INNER JOIN UserReputation ur ON u.CreationDate > ur.CreationDate
    WHERE u.Reputation > 1000
),
RecentPosts AS (
    SELECT
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.PostTypeId,
        p.OwnerUserId,
        p.Score,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS rn
    FROM Posts p
    WHERE p.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '30 days'
),
PostStats AS (
    SELECT 
        p.Id AS PostId,
        COUNT(c.Id) AS CommentCount,
        COUNT(v.Id) FILTER (WHERE v.VoteTypeId = 2) AS UpVoteCount,
        COUNT(v.Id) FILTER (WHERE v.VoteTypeId = 3) AS DownVoteCount
    FROM Posts p
    LEFT JOIN Comments c ON p.Id = c.PostId
    LEFT JOIN Votes v ON p.Id = v.PostId
    GROUP BY p.Id
),
ActiveUsers AS (
    SELECT 
        u.Id,
        u.DisplayName,
        SUM(ps.UpVoteCount - ps.DownVoteCount) AS ScoreImpact
    FROM Users u
    JOIN RecentPosts rp ON u.Id = rp.OwnerUserId
    JOIN PostStats ps ON rp.PostId = ps.PostId
    GROUP BY u.Id, u.DisplayName
),
PostHistorySummary AS (
    SELECT 
        ph.PostId,
        MIN(ph.CreationDate) AS FirstRevisionDate,
        MAX(ph.CreationDate) AS LastRevisionDate,
        COUNT(*) AS TotalRevisions,
        COUNT(DISTINCT ph.UserId) AS UniqueEditors
    FROM PostHistory ph
    WHERE ph.PostHistoryTypeId IN (4, 5, 6, 10) 
    GROUP BY ph.PostId
)
SELECT 
    uu.DisplayName,
    ur.Reputation,
    ur.LastAccessDate,
    phs.FirstRevisionDate,
    phs.LastRevisionDate,
    phs.TotalRevisions,
    phs.UniqueEditors,
    ps.CommentCount,
    ps.UpVoteCount,
    ps.DownVoteCount
FROM ActiveUsers uu
JOIN UserReputation ur ON uu.Id = ur.Id
LEFT JOIN PostStats ps ON uu.Id IN (SELECT OwnerUserId FROM RecentPosts WHERE rn = 1)
LEFT JOIN PostHistorySummary phs ON ps.PostId = phs.PostId
WHERE ur.Reputation > 1500
ORDER BY uu.ScoreImpact DESC, ur.Reputation DESC;
