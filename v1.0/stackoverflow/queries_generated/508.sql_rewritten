WITH UserActivity AS (
    SELECT 
        U.Id AS UserId,
        U.DisplayName,
        U.Reputation,
        COUNT(DISTINCT P.Id) AS PostCount,
        SUM(COALESCE(PO.Score, 0)) AS TotalScore,
        MAX(P.CreationDate) AS LastPostDate
    FROM 
        Users U
    LEFT JOIN 
        Posts P ON U.Id = P.OwnerUserId
    LEFT JOIN 
        Votes V ON P.Id = V.PostId AND V.VoteTypeId = 2  
    LEFT JOIN 
        (SELECT 
            P.Id, 
            P.Score, 
            P.OwnerUserId 
        FROM 
            Posts P
        WHERE 
            P.AcknowledgedAnswerId IS NOT NULL) PO ON PO.OwnerUserId = U.Id
    GROUP BY 
        U.Id
),
ActiveUsers AS (
    SELECT 
        UserId, 
        DisplayName, 
        Reputation, 
        PostCount, 
        TotalScore,
        LastPostDate,
        RANK() OVER (ORDER BY PostCount DESC) AS PostRank,
        RANK() OVER (ORDER BY TotalScore DESC) AS ScoreRank
    FROM 
        UserActivity
)
SELECT 
    AU.DisplayName, 
    AU.Reputation, 
    AU.PostCount, 
    AU.TotalScore,
    CASE 
        WHEN AU.PostRank = 1 THEN 'Top Poster'
        ELSE 'Regular User'
    END AS UserStatus,
    COALESCE(COUNT(CASE WHEN C.UserId IS NOT NULL THEN 1 END), 0) AS CommentCount,
    COALESCE(SUM(CASE WHEN PH.PostHistoryTypeId IN (10, 11) THEN 1 ELSE 0 END), 0) AS ClosureChanges
FROM 
    ActiveUsers AU
LEFT JOIN  
    Comments C ON AU.UserId = C.UserId
LEFT JOIN 
    PostHistory PH ON PH.UserId = AU.UserId
WHERE 
    AU.LastPostDate > cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 month'
GROUP BY 
    AU.DisplayName, AU.Reputation, AU.PostCount, AU.TotalScore, AU.PostRank
ORDER BY 
    AU.TotalScore DESC, AU.PostCount DESC
LIMIT 50;