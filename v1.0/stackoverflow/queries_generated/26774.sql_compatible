
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        u.DisplayName AS OwnerDisplayName,
        p.ViewCount,
        p.Score,
        STRING_AGG(t.TagName, ', ') AS Tags,
        COUNT(c.Id) AS CommentCount,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC) AS Rank
    FROM 
        Posts p
    JOIN 
        Users u ON p.OwnerUserId = u.Id
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        UNNEST(STRING_TO_ARRAY(SUBSTRING(p.Tags, 2, LENGTH(p.Tags) - 2), '><')) AS t(TagName)
    GROUP BY 
        p.Id, p.Title, p.CreationDate, u.DisplayName, p.ViewCount, p.Score
),
MostCommented AS (
    SELECT 
        PostId,
        COUNT(*) AS TotalComments
    FROM 
        Comments
    GROUP BY 
        PostId
),
TopRankedPosts AS (
    SELECT 
        rp.PostId, 
        rp.Title, 
        rp.CreationDate,
        rp.OwnerDisplayName, 
        rp.ViewCount, 
        rp.Score, 
        rp.Tags, 
        rp.CommentCount,
        mc.TotalComments,
        RANK() OVER (ORDER BY rp.Score DESC, mc.TotalComments DESC) AS OverallRank
    FROM 
        RankedPosts rp
    JOIN 
        MostCommented mc ON rp.PostId = mc.PostId
)
SELECT 
    PostId,
    Title,
    CreationDate,
    OwnerDisplayName,
    ViewCount,
    Score,
    Tags,
    CommentCount,
    TotalComments,
    OverallRank
FROM 
    TopRankedPosts
WHERE 
    OverallRank <= 10
ORDER BY 
    OverallRank;
