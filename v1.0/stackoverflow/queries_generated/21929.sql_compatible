
WITH RankedPosts AS (
    SELECT 
        P.Id AS PostId,
        P.Title,
        P.Score,
        P.CreationDate,
        P.PostTypeId,
        ROW_NUMBER() OVER (PARTITION BY P.PostTypeId ORDER BY P.Score DESC) AS RankScore,
        COUNT(CASE WHEN V.VoteTypeId = 2 THEN 1 END) OVER (PARTITION BY P.Id) AS UpvoteCount,
        COUNT(CASE WHEN V.VoteTypeId = 3 THEN 1 END) OVER (PARTITION BY P.Id) AS DownvoteCount,
        (SELECT COUNT(*) FROM Comments C WHERE C.PostId = P.Id) AS TotalComments,
        COALESCE(B.Name, 'No Badge') AS BadgeName
    FROM 
        Posts P
    LEFT JOIN 
        Votes V ON P.Id = V.PostId
    LEFT JOIN 
        Badges B ON P.OwnerUserId = B.UserId AND B.Class = 1
    WHERE 
        P.CreationDate >= CAST('2024-10-01 12:34:56' AS TIMESTAMP) - INTERVAL '1 year' 
        AND P.Score > (SELECT AVG(Score) FROM Posts WHERE PostTypeId = 1)
    GROUP BY 
        P.Id, P.Title, P.Score, P.CreationDate, P.PostTypeId, B.Name
),
PostHistorySummary AS (
    SELECT 
        PH.PostId,
        STRING_AGG(PHT.Name, ', ') AS HistoryTypes,
        MAX(PH.CreationDate) AS LastEditDate
    FROM 
        PostHistory PH
    JOIN 
        PostHistoryTypes PHT ON PH.PostHistoryTypeId = PHT.Id
    GROUP BY 
        PH.PostId
)
SELECT 
    RP.PostId,
    RP.Title,
    RP.Score,
    RP.CreationDate,
    RP.RankScore,
    RP.UpvoteCount,
    RP.DownvoteCount,
    RANK() OVER (ORDER BY RP.Score DESC) AS OverallRank,
    COALESCE(PHS.HistoryTypes, 'No History') AS HistoryDetails,
    CASE 
        WHEN RP.UpvoteCount > RP.DownvoteCount THEN 'Positive' 
        WHEN RP.UpvoteCount < RP.DownvoteCount THEN 'Negative'
        ELSE 'Neutral' 
    END AS PostSentiment,
    CASE 
        WHEN RP.Score IS NULL THEN 'No Score Available'
        ELSE 'Score Available' 
    END AS ScoreStatus,
    CASE 
        WHEN RP.CreationDate < CAST('2024-10-01 12:34:56' AS TIMESTAMP) - INTERVAL '6 months' THEN 'Old Post'
        ELSE 'Recent Post' 
    END AS PostAge
FROM 
    RankedPosts RP
LEFT JOIN 
    PostHistorySummary PHS ON RP.PostId = PHS.PostId
WHERE 
    RP.RankScore <= 5 
ORDER BY 
    RP.RankScore, RP.CreationDate DESC;
