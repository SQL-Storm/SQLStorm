WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Score,
        p.ViewCount,
        u.Reputation AS OwnerReputation,
        ROW_NUMBER() OVER (PARTITION BY p.PostTypeId ORDER BY p.Score DESC) AS Rank
    FROM Posts p
    JOIN Users u ON p.OwnerUserId = u.Id
    WHERE p.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 year'
),

ClosedPosts AS (
    SELECT 
        ph.PostId,
        ph.CreationDate AS CloseDate,
        ph.UserDisplayName,
        ph.Comment
    FROM PostHistory ph
    WHERE ph.PostHistoryTypeId = 10 
),

TagStatistics AS (
    SELECT 
        t.TagName,
        COUNT(p.Id) AS PostCount,
        SUM(p.ViewCount) AS TotalViews
    FROM Tags t
    JOIN Posts p ON t.Id = ANY(string_to_array(substring(p.Tags, 2, length(p.Tags)-2), '><')::int[])
    GROUP BY t.TagName
),

TopCloseReasons AS (
    SELECT 
        ph.Comment AS CloseReason,
        COUNT(*) AS CloseCount
    FROM PostHistory ph
    WHERE ph.PostHistoryTypeId = 10
    GROUP BY ph.Comment
    ORDER BY CloseCount DESC
    LIMIT 5
)

SELECT 
    rp.PostId,
    rp.Title,
    rp.CreationDate,
    rp.Score,
    rp.ViewCount,
    rp.OwnerReputation,
    cp.CloseDate AS RecentCloseDate,
    cp.UserDisplayName AS ClosedBy,
    ts.TagName AS MostPopularTag,
    ts.TotalViews AS TagViews,
    tcr.CloseReason,
    tcr.CloseCount AS ReasonCount
FROM RankedPosts rp
LEFT JOIN ClosedPosts cp ON rp.PostId = cp.PostId
LEFT JOIN TagStatistics ts ON ts.PostCount = (
    SELECT MAX(PostCount) FROM TagStatistics
) 
LEFT JOIN TopCloseReasons tcr ON tcr.CloseCount = (
    SELECT MAX(CloseCount) FROM TopCloseReasons
) 
WHERE rp.Rank <= 10 
AND (cp.CloseDate IS NULL OR cp.CloseDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '30 days') 
ORDER BY rp.Score DESC, rp.ViewCount DESC;