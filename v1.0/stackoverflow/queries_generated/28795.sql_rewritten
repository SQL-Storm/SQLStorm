WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.Body,
        p.Tags,
        u.DisplayName AS OwnerDisplayName,
        p.CreationDate,
        ph.CreationDate AS LastEditDate,
        ROW_NUMBER() OVER (PARTITION BY p.Id ORDER BY ph.CreationDate DESC) AS EditRank
    FROM 
        Posts p
    INNER JOIN 
        Users u ON p.OwnerUserId = u.Id
    LEFT JOIN 
        PostHistory ph ON p.Id = ph.PostId 
    WHERE
        p.PostTypeId = 1 
),
FilteredPosts AS (
    SELECT 
        rp.PostId,
        rp.Title,
        rp.Body,
        rp.Tags,
        rp.OwnerDisplayName,
        rp.CreationDate,
        rp.LastEditDate
    FROM 
        RankedPosts rp
    WHERE 
        rp.EditRank = 1 
),
TagStatistics AS (
    SELECT
        t.TagName,
        COUNT(p.Id) AS PostCount,
        AVG(u.Reputation) AS AvgReputation,
        SUM(CASE WHEN b.Class = 1 THEN 1 ELSE 0 END) AS GoldBadges,
        SUM(CASE WHEN b.Class = 2 THEN 1 ELSE 0 END) AS SilverBadges,
        SUM(CASE WHEN b.Class = 3 THEN 1 ELSE 0 END) AS BronzeBadges
    FROM
        Tags t
    JOIN 
        Posts p ON p.Tags LIKE CONCAT('%<', t.TagName, '>%') 
    JOIN 
        Users u ON p.OwnerUserId = u.Id
    LEFT JOIN 
        Badges b ON b.UserId = u.Id
    GROUP BY 
        t.TagName
)
SELECT 
    fp.PostId,
    fp.Title,
    fp.Body,
    fp.OwnerDisplayName,
    fp.CreationDate,
    fp.LastEditDate,
    ts.TagName,
    ts.PostCount,
    ts.AvgReputation,
    ts.GoldBadges,
    ts.SilverBadges,
    ts.BronzeBadges
FROM 
    FilteredPosts fp
JOIN 
    TagStatistics ts ON fp.Tags LIKE CONCAT('%<', ts.TagName, '>%')
ORDER BY 
    fp.CreationDate DESC, ts.PostCount DESC
LIMIT 
    100;