WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Score,
        p.ViewCount,
        u.DisplayName AS OwnerDisplayName,
        ROW_NUMBER() OVER (PARTITION BY p.PostTypeId ORDER BY p.Score DESC, p.ViewCount DESC) AS Rank
    FROM 
        Posts p
    JOIN 
        Users u ON p.OwnerUserId = u.Id
    WHERE 
        p.CreationDate >= cast('2024-10-01' as date) - INTERVAL '1 year'
),
PopularPosts AS (
    SELECT 
        rp.PostId,
        rp.Title,
        rp.CreationDate,
        rp.Score,
        rp.ViewCount,
        rp.OwnerDisplayName
    FROM 
        RankedPosts rp
    WHERE 
        rp.Rank <= 10
),
PostStatistics AS (
    SELECT 
        pp.PostId,
        pp.Title,
        pp.ViewCount,
        COALESCE(v.UpVotes, 0) AS UpVotes,
        COALESCE(v.DownVotes, 0) AS DownVotes,
        pp.OwnerDisplayName,
        COUNT(c.Id) AS CommentCount,
        SUM(CASE WHEN ph.PostHistoryTypeId = 10 THEN 1 ELSE 0 END) AS CloseVoteCount,
        SUM(CASE WHEN ph.PostHistoryTypeId = 11 THEN 1 ELSE 0 END) AS ReopenVoteCount
    FROM 
        PopularPosts pp
    LEFT JOIN 
        Votes v ON pp.PostId = v.PostId
    LEFT JOIN 
        Comments c ON pp.PostId = c.PostId
    LEFT JOIN 
        PostHistory ph ON pp.PostId = ph.PostId
    GROUP BY 
        pp.PostId, pp.Title, pp.ViewCount, pp.OwnerDisplayName
)
SELECT 
    ps.PostId,
    ps.Title,
    ps.ViewCount,
    ps.UpVotes,
    ps.DownVotes,
    ps.CommentCount,
    ps.CloseVoteCount,
    ps.ReopenVoteCount
FROM 
    PostStatistics ps
ORDER BY 
    ps.ViewCount DESC, 
    ps.Score DESC;