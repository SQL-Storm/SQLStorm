WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId, 
        p.Title, 
        p.Score, 
        p.ViewCount, 
        p.CreationDate, 
        ROW_NUMBER() OVER (PARTITION BY p.PostTypeId ORDER BY p.Score DESC) AS Rank
    FROM 
        Posts p
    WHERE 
        p.CreationDate > cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 year'
),
TopUsers AS (
    SELECT 
        u.Id AS UserId, 
        u.DisplayName, 
        COUNT(DISTINCT p.Id) AS PostCount, 
        SUM(u.UpVotes) - SUM(u.DownVotes) AS ReputationScore
    FROM 
        Users u
    JOIN 
        Posts p ON u.Id = p.OwnerUserId
    WHERE 
        u.Reputation > 1000
    GROUP BY 
        u.Id, u.DisplayName
),
UserBadges AS (
    SELECT 
        b.UserId, 
        COUNT(*) FILTER (WHERE b.Class = 1) AS GoldBadges, 
        COUNT(*) FILTER (WHERE b.Class = 2) AS SilverBadges,
        COUNT(*) FILTER (WHERE b.Class = 3) AS BronzeBadges
    FROM 
        Badges b
    GROUP BY 
        b.UserId
)
SELECT
    u.DisplayName,
    COALESCE(tb.PostCount, 0) AS TotalPosts,
    COALESCE(tb.ReputationScore, 0) AS ReputationScore,
    COALESCE(ub.GoldBadges, 0) AS GoldMarkers,
    COALESCE(ub.SilverBadges, 0) AS SilverMarkers,
    COALESCE(ub.BronzeBadges, 0) AS BronzeMarkers,
    p.Title,
    p.Score,
    p.ViewCount,
    p.CreationDate
FROM 
    Users u
LEFT JOIN 
    TopUsers tb ON u.Id = tb.UserId
LEFT JOIN 
    UserBadges ub ON u.Id = ub.UserId
LEFT JOIN 
    RankedPosts p ON u.Id = p.OwnerUserId AND p.Rank <= 5
WHERE 
    (tb.PostCount IS NULL OR tb.PostCount > 5)
    AND (ub.GoldBadges IS NOT NULL OR ub.SilverBadges IS NOT NULL OR ub.BronzeBadges IS NOT NULL)
ORDER BY 
    ReputationScore DESC, 
    TotalPosts DESC;