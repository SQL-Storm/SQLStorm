
WITH PostVotes AS (
    SELECT 
        PostId, 
        COUNT(CASE WHEN VoteTypeId = 2 THEN 1 END) AS UpVotes,
        COUNT(CASE WHEN VoteTypeId = 3 THEN 1 END) AS DownVotes,
        COUNT(*) AS TotalVotes
    FROM Votes
    GROUP BY PostId
),

PostMetrics AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Score,
        COALESCE(pl.RelatedPostCount, 0) AS RelatedPostCount,
        COALESCE(pv.UpVotes, 0) AS UpVotes,
        COALESCE(pv.DownVotes, 0) AS DownVotes,
        COALESCE(c.CommentCount, 0) AS CommentCount,
        COALESCE(a.AnswerCount, 0) AS AnswerCount
    FROM Posts p
    LEFT JOIN (
        SELECT 
            PostId, 
            COUNT(*) AS RelatedPostCount 
        FROM PostLinks 
        GROUP BY PostId
    ) pl ON p.Id = pl.PostId
    LEFT JOIN PostVotes pv ON p.Id = pv.PostId
    LEFT JOIN (
        SELECT 
            PostId, 
            COUNT(*) AS CommentCount 
        FROM Comments 
        GROUP BY PostId
    ) c ON p.Id = c.PostId
    LEFT JOIN (
        SELECT 
            ParentId AS PostId, 
            COUNT(*) AS AnswerCount 
        FROM Posts 
        WHERE PostTypeId = 2 
        GROUP BY ParentId
    ) a ON p.Id = a.PostId
)

SELECT 
    PostId,
    Title,
    CreationDate,
    Score,
    UpVotes,
    DownVotes,
    COALESCE(TotalVotes, 0) AS TotalVotes,
    RelatedPostCount,
    CommentCount,
    AnswerCount
FROM PostMetrics 
ORDER BY Score DESC, UpVotes DESC;
