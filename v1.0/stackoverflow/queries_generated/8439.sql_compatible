
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.Score,
        p.ViewCount,
        p.AnswerCount,
        p.CreationDate,
        u.DisplayName AS OwnerDisplayName,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC, p.ViewCount DESC) AS rn
    FROM 
        Posts p
    JOIN 
        Users u ON p.OwnerUserId = u.Id
    WHERE 
        p.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 year'
),
PostSummary AS (
    SELECT 
        rp.OwnerDisplayName,
        COUNT(*) AS TotalPosts,
        SUM(rp.Score) AS TotalScore,
        SUM(rp.ViewCount) AS TotalViews,
        AVG(rp.Score) AS AverageScore,
        AVG(rp.ViewCount) AS AverageViews
    FROM 
        RankedPosts rp
    WHERE 
        rp.rn <= 5
    GROUP BY 
        rp.OwnerDisplayName
),
TopUsers AS (
    SELECT 
        u.Id,
        u.DisplayName,
        us.TotalPosts,
        us.TotalScore,
        us.TotalViews,
        us.AverageScore,
        us.AverageViews
    FROM 
        Users u
    LEFT JOIN 
        PostSummary us ON u.DisplayName = us.OwnerDisplayName
    WHERE 
        u.Reputation >= 100
    ORDER BY 
        us.TotalPosts DESC, us.TotalScore DESC
    LIMIT 10
)
SELECT 
    u.DisplayName,
    COALESCE(us.TotalPosts, 0) AS TotalPosts,
    COALESCE(us.TotalScore, 0) AS TotalScore,
    COALESCE(us.TotalViews, 0) AS TotalViews,
    COALESCE(us.AverageScore, 0) AS AverageScore,
    COALESCE(us.AverageViews, 0) AS AverageViews,
    COUNT(DISTINCT b.Id) AS TotalBadges
FROM 
    TopUsers u
LEFT JOIN 
    Badges b ON u.Id = b.UserId
GROUP BY 
    u.Id, u.DisplayName, us.TotalPosts, us.TotalScore, us.TotalViews, us.AverageScore, us.AverageViews
ORDER BY 
    TotalPosts DESC, TotalScore DESC;
