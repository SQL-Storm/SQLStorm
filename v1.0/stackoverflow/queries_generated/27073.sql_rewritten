WITH TagCounts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        COUNT(DISTINCT t.TagName) AS TagCount,
        STRING_AGG(DISTINCT t.TagName, ', ') AS TagsList
    FROM 
        Posts p
    LEFT JOIN 
        UNNEST(string_to_array(SUBSTRING(p.Tags, 2, LENGTH(p.Tags) - 2), '><')) AS t(TagName)
    WHERE 
        p.PostTypeId = 1  
    GROUP BY 
        p.Id, p.Title
),

PostScore AS (
    SELECT 
        p.Id,
        p.Title,
        p.Score,
        COALESCE(ph.CreationDate, p.CreationDate) AS FirstActivityDate,
        ROW_NUMBER() OVER (ORDER BY p.Score DESC) AS Rank
    FROM 
        Posts p
    LEFT JOIN 
        PostHistory ph ON p.Id = ph.PostId 
    WHERE 
        p.PostTypeId = 1  
),

UserReputation AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        SUM(v.BountyAmount) AS TotalBounty,
        SUM(v.CASE WHEN vt.Id = 2 THEN 1 ELSE 0 END) AS UpvoteCount,
        SUM(v.CASE WHEN vt.Id = 3 THEN 1 ELSE 0 END) AS DownvoteCount
    FROM 
        Users u
    LEFT JOIN 
        Votes v ON u.Id = v.UserId
    LEFT JOIN 
        VoteTypes vt ON v.VoteTypeId = vt.Id
    GROUP BY 
        u.Id, u.DisplayName
)

SELECT 
    psc.PostId, 
    psc.Title,
    psc.TagCount,
    psc.TagsList,
    ps.Score,
    ps.FirstActivityDate,
    ps.Rank,
    ur.DisplayName AS UserDisplayName,
    ur.TotalBounty,
    ur.UpvoteCount,
    ur.DownvoteCount
FROM 
    TagCounts psc
JOIN 
    PostScore ps ON psc.PostId = ps.Id
JOIN 
    Posts p ON p.Id = ps.Id AND p.OwnerUserId IS NOT NULL  
JOIN 
    Users ur ON p.OwnerUserId = ur.Id
WHERE 
    psc.TagCount > 2  
ORDER BY 
    ps.Score DESC, psc.TagCount DESC, ur.TotalBounty DESC
LIMIT 50;