
WITH UserActivity AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        u.Reputation,
        COUNT(DISTINCT p.Id) AS PostCount,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS Upvotes,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS Downvotes,
        SUM(COALESCE(p.ViewCount, 0)) AS TotalViews,
        RANK() OVER (ORDER BY SUM(COALESCE(p.ViewCount, 0)) DESC) AS ViewRank
    FROM Users u
    LEFT JOIN Posts p ON u.Id = p.OwnerUserId
    LEFT JOIN Votes v ON p.Id = v.PostId
    WHERE u.Reputation > 1000
    GROUP BY u.Id, u.DisplayName, u.Reputation
),
PostStatistics AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.ViewCount,
        COALESCE(pc.CommentCount, 0) AS CommentCount,
        RANK() OVER (ORDER BY p.Score DESC) AS ScoreRank,
        ARRAY_AGG(DISTINCT t.TagName) AS Tags
    FROM Posts p
    LEFT JOIN (
        SELECT PostId, COUNT(*) AS CommentCount
        FROM Comments
        GROUP BY PostId
    ) pc ON p.Id = pc.PostId
    LEFT JOIN (
        SELECT Id, UNNEST(string_to_array(Tags, '><')) AS TagName
        FROM Posts
    ) t ON p.Id = t.Id
    WHERE p.CreationDate > (CAST('2024-10-01 12:34:56' AS TIMESTAMP) - INTERVAL '1 year')
    GROUP BY p.Id, p.Title, p.CreationDate, p.ViewCount
)
SELECT 
    ua.DisplayName,
    ua.Reputation,
    ua.PostCount,
    ua.Upvotes,
    ua.Downvotes,
    ua.TotalViews,
    ps.PostId,
    ps.Title,
    ps.CreationDate,
    ps.ViewCount,
    ps.CommentCount,
    ps.Tags
FROM UserActivity ua
FULL OUTER JOIN PostStatistics ps ON ua.UserId = ps.PostId
WHERE (ua.Upvotes + ua.Downvotes) > 10
AND ps.CommentCount > 5
ORDER BY ua.TotalViews DESC, ps.ScoreRank;
