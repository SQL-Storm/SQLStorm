WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.ViewCount,
        u.DisplayName AS OwnerDisplayName,
        p.Score,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS Rank
    FROM 
        Posts p
    JOIN 
        Users u ON p.OwnerUserId = u.Id
    WHERE 
        p.PostTypeId = 1 AND
        p.CreationDate >= cast('2024-10-01' as date) - INTERVAL '30 days'
), UserStats AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COUNT(DISTINCT p.Id) AS PostCount,
        SUM(p.Score) AS TotalScore,
        SUM(p.ViewCount) AS TotalViews
    FROM 
        Users u
    JOIN 
        Posts p ON u.Id = p.OwnerUserId
    WHERE 
        p.PostTypeId = 1 AND
        p.CreationDate >= cast('2024-10-01' as date) - INTERVAL '90 days'
    GROUP BY 
        u.Id, u.DisplayName
), PopularTags AS (
    SELECT 
        t.TagName,
        COUNT(pt.PostId) AS TagUsage
    FROM 
        Tags t
    JOIN 
        Posts p ON p.Tags LIKE CONCAT('%', t.TagName, '%')
    JOIN 
        PostTypes pt ON p.PostTypeId = pt.Id
    GROUP BY 
        t.TagName
    ORDER BY 
        TagUsage DESC
    LIMIT 5
)
SELECT 
    rp.PostId,
    rp.Title,
    rp.CreationDate,
    rp.ViewCount,
    rp.OwnerDisplayName,
    us.PostCount AS UserPostCount,
    us.TotalScore AS UserTotalScore,
    us.TotalViews AS UserTotalViews,
    pt.TagName AS PopularTag,
    pt.TagUsage
FROM 
    RankedPosts rp
JOIN 
    UserStats us ON rp.OwnerDisplayName = us.DisplayName
JOIN 
    PopularTags pt ON pt.TagUsage > 10
WHERE 
    rp.Rank = 1
ORDER BY 
    rp.CreationDate DESC
LIMIT 10;