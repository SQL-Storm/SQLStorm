
WITH UserActivity AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COUNT(DISTINCT p.Id) AS TotalPosts,
        SUM(CASE WHEN p.PostTypeId = 1 THEN 1 ELSE 0 END) AS TotalQuestions,
        SUM(CASE WHEN p.PostTypeId = 2 THEN 1 ELSE 0 END) AS TotalAnswers,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS TotalUpVotes,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS TotalDownVotes,
        AVG(EXTRACT(EPOCH FROM COALESCE(p.LastActivityDate, '2024-10-01 12:34:56'::timestamp) - p.CreationDate)) AS AvgPostAge
    FROM Users u
    LEFT JOIN Posts p ON u.Id = p.OwnerUserId
    LEFT JOIN Votes v ON p.Id = v.PostId 
    WHERE u.Reputation > 1000
    GROUP BY u.Id, u.DisplayName
),
PostDetails AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate AS PostCreationDate,
        p.Score,
        p.ViewCount,
        COALESCE(c.UserId, -1) AS CommentUserId,
        COALESCE(c.Text, 'No Comments') AS LastComment,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.LastActivityDate DESC) AS rn
    FROM Posts p
    LEFT JOIN Comments c ON p.Id = c.PostId
    WHERE p.CloseDate IS NULL
),
TopVotedPosts AS (
    SELECT 
        pd.PostId,
        pd.Title,
        pd.PostCreationDate,
        pd.Score,
        pd.ViewCount,
        a.DisplayName AS OwnerDisplayName
    FROM PostDetails pd
    JOIN UserActivity ua ON pd.CommentUserId = ua.UserId
    JOIN Users a ON pd.CommentUserId = a.Id
    WHERE pd.rn = 1 AND (pd.Score >= 10 OR pd.ViewCount >= 100)
)
SELECT 
    ua.DisplayName,
    ua.TotalPosts,
    ua.TotalQuestions,
    ua.TotalAnswers,
    ua.TotalUpVotes,
    ua.TotalDownVotes,
    ua.AvgPostAge,
    tp.Title AS TopPostTitle,
    tp.Score AS TopPostScore,
    tp.ViewCount AS TopPostViews
FROM UserActivity ua
LEFT JOIN TopVotedPosts tp ON ua.UserId = tp.OwnerDisplayName
WHERE ua.TotalPosts > 5 AND ua.TotalUpVotes > 20
ORDER BY ua.TotalPosts DESC, ua.TotalUpVotes DESC;
