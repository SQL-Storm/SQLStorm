
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        COUNT(c.Id) AS CommentCount,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY COUNT(c.Id) DESC) AS Rank
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    WHERE 
        p.CreationDate >= DATEADD(YEAR, -1, '2024-10-01') 
        AND p.PostTypeId = 1 
    GROUP BY 
        p.Id, p.Title, p.CreationDate, p.OwnerUserId
),
TopUserPosts AS (
    SELECT 
        r.OwnerUserId,
        r.PostId,
        r.Title,
        r.CreationDate,
        r.CommentCount,
        r.UpVotes,
        r.DownVotes
    FROM 
        RankedPosts r
    WHERE 
        r.Rank = 1
)
SELECT 
    u.Id AS UserId,
    u.DisplayName,
    u.Reputation,
    u.CreationDate AS UserCreationDate,
    COUNT(t.PostId) AS TotalTopPosts,
    SUM(t.UpVotes) AS TotalUpVotes,
    SUM(t.DownVotes) AS TotalDownVotes
FROM 
    Users u
LEFT JOIN 
    TopUserPosts t ON u.Id = t.OwnerUserId
GROUP BY 
    u.Id, u.DisplayName, u.Reputation, u.CreationDate
ORDER BY 
    TotalUpVotes DESC
LIMIT 10;
