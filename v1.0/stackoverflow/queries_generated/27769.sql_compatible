
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.Body,
        p.CreationDate,
        u.DisplayName AS OwnerDisplayName,
        COUNT(c.Id) AS CommentCount,
        COALESCE(SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END), 0) AS UpVoteCount,
        COALESCE(SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END), 0) AS DownVoteCount,
        RANK() OVER (PARTITION BY p.PostTypeId ORDER BY COUNT(c.Id) DESC, p.CreationDate DESC) AS Rank
    FROM 
        Posts p
    LEFT JOIN 
        Users u ON p.OwnerUserId = u.Id 
    LEFT JOIN 
        Comments c ON p.Id = c.PostId 
    LEFT JOIN 
        Votes v ON p.Id = v.PostId 
    WHERE 
        p.CreationDate >= CURRENT_DATE - INTERVAL '1 year' 
    GROUP BY 
        p.Id, p.Title, p.Body, p.CreationDate, u.DisplayName
), FilteredPosts AS (
    SELECT 
        rp.*,
        CONCAT('Post Title: ', rp.Title, ' | Owner: ', rp.OwnerDisplayName) AS PostDescription,
        CONCAT('Comments: ', rp.CommentCount, ' | Score: ', (rp.UpVoteCount - rp.DownVoteCount)) AS EngagementMetrics
    FROM 
        RankedPosts rp
    WHERE 
        rp.Rank <= 5
)
SELECT 
    fp.PostId, 
    fp.PostDescription,
    fp.EngagementMetrics,
    DATEDIFF(CURRENT_DATE, fp.CreationDate) AS DaysSinceCreation
FROM 
    FilteredPosts fp
ORDER BY 
    fp.Rank;
