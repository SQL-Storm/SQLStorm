WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.Body,
        p.CreationDate,
        p.AcceptedAnswerId,
        u.DisplayName AS OwnerDisplayName,
        p.Score,
        p.ViewCount,
        COALESCE(a.Body, 'No accepted answer') AS AcceptedAnswerBody,
        COALESCE(a.CreationDate, p.CreationDate) AS AnswerCreationDate,
        ROW_NUMBER() OVER (PARTITION BY p.Id ORDER BY p.CreationDate DESC) AS rn
    FROM 
        Posts p
    LEFT JOIN 
        Posts a ON p.AcceptedAnswerId = a.Id
    JOIN 
        Users u ON p.OwnerUserId = u.Id
    WHERE 
        p.PostTypeId = 1  
        AND p.Score > 0   
),

TagStatistics AS (
    SELECT 
        t.TagName,
        COUNT(DISTINCT p.Id) AS PostCount,
        AVG(p.ViewCount) AS AverageViews,
        SUM(p.Score) AS TotalScore
    FROM 
        Tags t
    JOIN 
        Posts p ON p.Tags LIKE '%' || t.TagName || '%'
    GROUP BY 
        t.TagName
),

PopularTags AS (
    SELECT 
        TagName,
        PostCount,
        AverageViews,
        TotalScore,
        ROW_NUMBER() OVER (ORDER BY TotalScore DESC) AS Ranking
    FROM 
        TagStatistics
)

SELECT 
    rp.PostId,
    rp.Title,
    rp.OwnerDisplayName,
    rp.CreationDate AS QuestionCreationDate,
    rp.AcceptedAnswerBody,
    rp.AnswerCreationDate,
    pt.TagName,
    pt.PostCount,
    pt.AverageViews,
    pt.TotalScore,
    RANK() OVER (PARTITION BY rp.Score ORDER BY rp.ViewCount DESC) AS ScoreRanking
FROM 
    RankedPosts rp
JOIN 
    PopularTags pt ON pt.PostCount > 10 
WHERE 
    rp.rn = 1 
ORDER BY 
    rp.ViewCount DESC, 
    pt.TotalScore DESC
LIMIT 50;