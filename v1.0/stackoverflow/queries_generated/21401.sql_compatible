
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Score,
        u.Reputation,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC) AS PostRank
    FROM 
        Posts p
    JOIN 
        Users u ON p.OwnerUserId = u.Id
    WHERE 
        p.PostTypeId IN (1, 2) 
        AND p.Score IS NOT NULL
),
PostHistoryDetails AS (
    SELECT 
        ph.PostId,
        ph.CreationDate AS HistoryDate,
        ph.PostHistoryTypeId,
        CASE 
            WHEN ph.PostHistoryTypeId IN (10, 11) THEN 
                (SELECT Name FROM CloseReasonTypes WHERE Id = CAST(ph.Comment AS INTEGER))
            ELSE 
                NULL 
        END AS CloseReasonName,
        ph.Comment
    FROM 
        PostHistory ph
    WHERE 
        ph.CreationDate > (CAST('2024-10-01 12:34:56' AS TIMESTAMP) - INTERVAL '1 year') 
),
BadgeCounts AS (
    SELECT 
        UserId,
        COUNT(*) AS BadgeCount
    FROM 
        Badges
    GROUP BY 
        UserId
),
TopUsers AS (
    SELECT 
        u.Id,
        u.DisplayName,
        COALESCE(b.BadgeCount, 0) AS BadgeCount,
        SUM(p.ViewCount) AS TotalViews,
        SUM(p.Score) AS TotalScore,
        DENSE_RANK() OVER (ORDER BY SUM(p.ViewCount) DESC) AS ViewsRank
    FROM 
        Users u
    LEFT JOIN 
        Posts p ON u.Id = p.OwnerUserId AND p.PostTypeId = 1 
    LEFT JOIN 
        BadgeCounts b ON u.Id = b.UserId
    GROUP BY 
        u.Id, u.DisplayName
),
FinalAnalysis AS (
    SELECT 
        p.PostId,
        p.Title,
        p.CreationDate AS PostCreationDate,
        p.Score,
        ph.HistoryDate,
        ph.CloseReasonName,
        u.DisplayName AS OwnerDisplayName,
        CASE 
            WHEN ph.PostHistoryTypeId IN (10) THEN 'Closed'
            WHEN ph.PostHistoryTypeId IN (11) THEN 'Reopened'
            ELSE 'No change'
        END AS HistoryAction,
        tu.ViewsRank
    FROM 
        RankedPosts p
    LEFT JOIN 
        PostHistoryDetails ph ON p.PostId = ph.PostId
    JOIN 
        Users u ON p.OwnerUserId = u.Id
    LEFT JOIN 
        TopUsers tu ON u.Id = tu.Id
)
SELECT 
    PostId,
    Title,
    PostCreationDate,
    Score,
    HistoryDate,
    CloseReasonName,
    OwnerDisplayName,
    HistoryAction,
    ViewsRank
FROM 
    FinalAnalysis
WHERE 
    Score > 0 
ORDER BY 
    ViewsRank, Score DESC;
