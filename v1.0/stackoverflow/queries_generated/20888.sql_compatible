
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Score,
        p.ViewCount,
        COUNT(c.Id) AS CommentCount,
        DENSE_RANK() OVER (PARTITION BY p.PostTypeId ORDER BY p.Score DESC) AS RankScore
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    WHERE 
        p.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 YEAR'
    GROUP BY 
        p.Id, p.Title, p.CreationDate, p.Score, p.ViewCount
),
UserScore AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        SUM(CASE WHEN v.VoteTypeId IN (2, 1) THEN 1 ELSE 0 END) AS TotalUpVotes,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS TotalDownVotes,
        (SUM(CASE WHEN v.VoteTypeId IN (2, 1) THEN 1 ELSE 0 END) - SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END)) AS NetVotes
    FROM 
        Users u
    JOIN 
        Votes v ON u.Id = v.UserId
    GROUP BY 
        u.Id, u.DisplayName
),
PostHistoryAnalysis AS (
    SELECT 
        ph.PostId,
        ph.PostHistoryTypeId,
        COUNT(*) AS Count,
        STRING_AGG(DISTINCT COALESCE(ph.Comment, 'No Comment') || ' | ' || CAST(ph.CreationDate AS DATE)) AS HistoryDetails
    FROM 
        PostHistory ph
    GROUP BY 
        ph.PostId,
        ph.PostHistoryTypeId
)
SELECT 
    rp.PostId,
    rp.Title,
    rp.CreationDate,
    rp.Score,
    rp.ViewCount,
    rp.CommentCount,
    us.DisplayName AS UserDisplayName,
    us.NetVotes,
    pha.PostHistoryTypeId,
    pha.Count AS HistoryCount,
    pha.HistoryDetails
FROM 
    RankedPosts rp
LEFT JOIN 
    UserScore us ON us.UserId = rp.PostId
LEFT JOIN 
    PostHistoryAnalysis pha ON pha.PostId = rp.PostId
WHERE 
    rp.RankScore = 1
    AND COALESCE(us.NetVotes, 0) > 0
ORDER BY 
    rp.Score DESC, 
    rp.CommentCount DESC
OFFSET 5 ROWS
FETCH NEXT 10 ROWS ONLY;
