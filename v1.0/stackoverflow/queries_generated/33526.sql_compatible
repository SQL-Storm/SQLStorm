
WITH RECURSIVE UserPostCounts AS (
    SELECT 
        OwnerUserId,
        COUNT(*) AS PostCount
    FROM 
        Posts
    GROUP BY 
        OwnerUserId
),
BadgeUserReputation AS (
    SELECT 
        u.Id AS UserId,
        u.Reputation,
        COUNT(b.Id) AS BadgeCount
    FROM 
        Users u
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    GROUP BY 
        u.Id, u.Reputation
),
PostActivity AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        COUNT(c.Id) AS CommentCount,
        COALESCE(MAX(v.CreationDate), '1970-01-01') AS LastVoteDate
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    GROUP BY 
        p.Id, p.Title, p.CreationDate
),
FinalReport AS (
    SELECT 
        u.DisplayName,
        u.Reputation,
        upc.PostCount,
        bru.BadgeCount,
        pa.Title,
        pa.CommentCount,
        pa.CreationDate,
        DATEDIFF(CAST('2024-10-01 12:34:56' AS TIMESTAMP), pa.LastVoteDate) AS DaysSinceLastVote
    FROM 
        Users u
    LEFT JOIN 
        UserPostCounts upc ON u.Id = upc.OwnerUserId
    LEFT JOIN 
        BadgeUserReputation bru ON u.Id = bru.UserId
    INNER JOIN 
        PostActivity pa ON u.Id = pa.OwnerUserId
    WHERE 
        u.Reputation > (
            SELECT 
                AVG(Reputation) 
            FROM 
                Users
        )
)
SELECT 
    DisplayName,
    Reputation,
    PostCount,
    BadgeCount,
    Title,
    CommentCount,
    CreationDate,
    DaysSinceLastVote
FROM 
    FinalReport
WHERE 
    PostCount IS NOT NULL
ORDER BY 
    Reputation DESC, 
    PostCount DESC
LIMIT 100;
