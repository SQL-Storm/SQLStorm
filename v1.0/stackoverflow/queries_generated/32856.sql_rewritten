WITH RECURSIVE UserReputation AS (
    SELECT Id, DisplayName, Reputation, CreationDate, LastAccessDate,
           ROW_NUMBER() OVER (PARTITION BY Reputation ORDER BY CreationDate DESC) AS RowNum
    FROM Users
    WHERE Reputation > 1000
),
PostEngagement AS (
    SELECT p.Id AS PostId, p.Title, p.Score, p.ViewCount, p.CreationDate,
           COALESCE(c.CommentCount, 0) AS CommentCount,
           COALESCE(v.UpVotes, 0) AS UpVotes,
           COALESCE(v.DownVotes, 0) AS DownVotes,
           DENSE_RANK() OVER (ORDER BY p.Score DESC) AS EngagementRank
    FROM Posts p
    LEFT JOIN (
        SELECT PostId, COUNT(*) AS CommentCount
        FROM Comments
        GROUP BY PostId
    ) c ON p.Id = c.PostId
    LEFT JOIN (
        SELECT PostId, SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes,
                       SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes
        FROM Votes
        GROUP BY PostId
    ) v ON p.Id = v.PostId
    WHERE p.CreationDate > cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 year'
),
TopPosts AS (
    SELECT p.PostId, p.Title, p.Score, p.ViewCount, p.CommentCount, p.UpVotes, p.DownVotes,
           COALESCE(u.DisplayName, 'Anonymous') AS UserDisplayName,
           ROW_NUMBER() OVER (ORDER BY p.Score DESC, p.ViewCount DESC) AS Rank
    FROM PostEngagement p
    LEFT JOIN Users u ON p.PostId IN (SELECT Id FROM Posts WHERE OwnerUserId = u.Id)
    WHERE p.EngagementRank <= 100
)
SELECT p.Title, p.Score, p.ViewCount, p.CommentCount, p.UpVotes, p.DownVotes, p.UserDisplayName,
       STRING_AGG(DISTINCT pt.Name, ', ') AS PostTypeNames,
       CASE
           WHEN p.Score > 100 THEN 'High Engagement'
           WHEN p.Score > 50 THEN 'Moderate Engagement'
           ELSE 'Low Engagement'
       END AS EngagementLevel
FROM TopPosts p
LEFT JOIN PostTypes pt ON p.PostId IN (SELECT Id FROM Posts WHERE PostTypeId = pt.Id)
GROUP BY p.Title, p.Score, p.ViewCount, p.CommentCount, p.UpVotes, p.DownVotes, p.UserDisplayName
HAVING COUNT(pt.Id) > 0
ORDER BY p.Score DESC, p.ViewCount DESC
LIMIT 50;