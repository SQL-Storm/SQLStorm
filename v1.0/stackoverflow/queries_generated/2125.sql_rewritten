WITH UserActivity AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        u.Reputation,
        u.CreationDate,
        COALESCE(SUM(v.BountyAmount), 0) AS TotalBounty,
        COALESCE(SUM(CASE WHEN v.VoteTypeId IN (2, 4) THEN 1 ELSE 0 END), 0) AS TotalUpvotes,
        COALESCE(SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END), 0) AS TotalDownvotes,
        COUNT(DISTINCT p.Id) AS TotalPosts,
        COUNT(DISTINCT c.Id) AS TotalComments
    FROM Users u
    LEFT JOIN Votes v ON u.Id = v.UserId
    LEFT JOIN Posts p ON u.Id = p.OwnerUserId
    LEFT JOIN Comments c ON p.Id = c.PostId
    GROUP BY u.Id
),
PopularTags AS (
    SELECT 
        t.TagName,
        COUNT(*) AS TagCount
    FROM Tags t
    JOIN Posts p ON t.Id = ANY(string_to_array(p.Tags, '>'::text)::integer[])
    GROUP BY t.TagName
    ORDER BY TagCount DESC
    LIMIT 5
),
RecentActivity AS (
    SELECT 
        u.DisplayName,
        p.Title,
        p.CreationDate,
        p.Score,
        p.ViewCount,
        ROW_NUMBER() OVER (PARTITION BY u.Id ORDER BY p.CreationDate DESC) AS rn
    FROM Users u
    JOIN Posts p ON u.Id = p.OwnerUserId
    WHERE p.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '30 days'
)
SELECT 
    ua.DisplayName,
    ua.Reputation,
    ua.TotalBounty,
    ua.TotalUpvotes,
    ua.TotalDownvotes,
    ua.TotalPosts,
    ua.TotalComments,
    rt.Title AS RecentPostTitle,
    rt.Score AS RecentPostScore,
    rt.ViewCount AS RecentPostViews,
    pt.TagName AS PopularTag,
    pt.TagCount AS PopularTagCount
FROM UserActivity ua
LEFT JOIN RecentActivity rt ON ua.UserId = rt.DisplayName
LEFT JOIN PopularTags pt ON pt.TagName = ANY(
    SELECT UNNEST(string_to_array(rt.Title, ' ')) 
)
WHERE rt.rn = 1
AND ua.TotalPosts > 0
ORDER BY ua.Reputation DESC
LIMIT 10;