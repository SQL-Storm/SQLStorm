WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.Score,
        p.ViewCount,
        p.CreationDate,
        ROW_NUMBER() OVER (PARTITION BY p.PostTypeId ORDER BY p.Score DESC) AS Rank
    FROM 
        Posts p
    WHERE 
        p.CreationDate >= cast('2024-10-01' as date) - INTERVAL '1 year'
),
UserEngagement AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COUNT(v.Id) AS VoteCount,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes
    FROM 
        Users u
    LEFT JOIN 
        Votes v ON u.Id = v.UserId
    GROUP BY 
        u.Id
),
TopUsers AS (
    SELECT 
        ue.UserId,
        ue.DisplayName,
        ue.VoteCount,
        RANK() OVER (ORDER BY ue.VoteCount DESC) AS UserRank
    FROM 
        UserEngagement ue
)
SELECT 
    rp.PostId,
    rp.Title,
    rp.Score,
    rp.ViewCount,
    CASE 
        WHEN rp.Score > 100 THEN 'High Score' 
        WHEN rp.Score BETWEEN 50 AND 100 THEN 'Medium Score' 
        ELSE 'Low Score' 
    END AS ScoreCategory,
    COALESCE(au.DisplayName, 'Unknown') AS Author,
    t.UserId,
    t.DisplayName AS TopVoter,
    t.VoteCount AS TopVoterCount
FROM 
    RankedPosts rp
LEFT JOIN 
    Users au ON rp.PostId = au.Id
LEFT JOIN 
    TopUsers t ON rp.Score = (SELECT MAX(Score) FROM RankedPosts WHERE Score <= rp.Score)
WHERE 
    rp.Rank <= 10
ORDER BY 
    rp.Score DESC NULLS LAST;