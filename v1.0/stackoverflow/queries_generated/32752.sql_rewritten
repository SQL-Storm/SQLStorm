WITH RECURSIVE UserScores AS (
    SELECT 
        Id AS UserId,
        Reputation,
        CreationDate,
        Views,
        UpVotes,
        DownVotes,
        (UpVotes - DownVotes) AS NetVotes,
        ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS Rank
    FROM Users
),
PopularPosts AS (
    SELECT
        P.Id AS PostId,
        P.Title,
        P.Score,
        P.ViewCount,
        COALESCE(A.TotalAnswers, 0) AS TotalAnswers,
        C.CommentCount,
        ROW_NUMBER() OVER (PARTITION BY P.OwnerUserId ORDER BY P.Score DESC) AS PostRank
    FROM Posts P
    LEFT JOIN (
        SELECT 
            ParentId, 
            COUNT(*) AS TotalAnswers
        FROM Posts
        WHERE PostTypeId = 2
        GROUP BY ParentId
    ) A ON P.Id = A.ParentId
    LEFT JOIN (
        SELECT 
            PostId, 
            COUNT(*) AS CommentCount
        FROM Comments
        GROUP BY PostId
    ) C ON P.Id = C.PostId
    WHERE P.PostTypeId = 1
),
InactiveUsers AS (
    SELECT 
        UserId, 
        DATEDIFF(cast('2024-10-01 12:34:56' as timestamp), LastAccessDate) AS DaysInactive
    FROM Users
    WHERE LastAccessDate < cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 year'
),
UserPostStats AS (
    SELECT 
        U.Id AS UserId,
        U.DisplayName,
        U.Reputation,
        COUNT(P.Id) AS PostCount,
        SUM(COALESCE(P.Score, 0)) AS TotalPostScore,
        MAX(P.CreationDate) AS LastPostDate
    FROM Users U
    LEFT JOIN Posts P ON U.Id = P.OwnerUserId
    GROUP BY U.Id
)
SELECT 
    U.DisplayName,
    U.Reputation,
    S.NetVotes AS UserNetVotes,
    U.PostCount,
    U.TotalPostScore,
    P.Title AS MostPopularPost,
    P.Score AS PostScore,
    P.ViewCount AS PostViewCount,
    CASE 
        WHEN I.UserId IS NOT NULL THEN 'Inactive'
        ELSE 'Active'
    END AS UserStatus
FROM UserPostStats U
JOIN UserScores S ON U.UserId = S.UserId
LEFT JOIN (
    SELECT 
        UserId, 
        MAX(Score) AS MaxScore
    FROM PopularPosts
    GROUP BY UserId
) P ON U.UserId = P.UserId
LEFT JOIN InactiveUsers I ON U.UserId = I.UserId
WHERE U.Reputation > 1000
ORDER BY U.Reputation DESC, U.TotalPostScore DESC;