WITH UserScores AS (
    SELECT 
        U.Id AS UserId,
        U.DisplayName,
        U.Reputation,
        COALESCE(SUM(CASE WHEN V.VoteTypeId = 2 THEN 1 ELSE 0 END), 0) AS UpVotesCount,
        COALESCE(SUM(CASE WHEN V.VoteTypeId = 3 THEN 1 ELSE 0 END), 0) AS DownVotesCount,
        COALESCE(SUM(CASE WHEN V.VoteTypeId = 5 THEN 1 ELSE 0 END), 0) AS FavoriteCount,
        COUNT(DISTINCT P.Id) AS PostsCount
    FROM 
        Users U
    LEFT JOIN 
        Posts P ON U.Id = P.OwnerUserId
    LEFT JOIN 
        Votes V ON P.Id = V.PostId
    WHERE 
        U.Reputation > 0
    GROUP BY 
        U.Id,
        U.DisplayName,
        U.Reputation
),
TopUsers AS (
    SELECT 
        UserId,
        DisplayName,
        Reputation,
        UpVotesCount,
        DownVotesCount,
        PostsCount,
        RANK() OVER (ORDER BY Reputation DESC) AS Rank
    FROM 
        UserScores
),
PostStatistics AS (
    SELECT 
        P.Id AS PostId,
        P.Title,
        P.CreationDate,
        P.Score,
        COUNT(C) AS CommentsCount,
        COUNT(L.RelatedPostId) AS RelatedPostsCount,
        MAX(PH.CreationDate) AS LastEditDate,
        STRING_AGG(DISTINCT T.TagName, ', ') AS Tags
    FROM 
        Posts P
    LEFT JOIN 
        Comments C ON P.Id = C.PostId
    LEFT JOIN 
        PostLinks L ON P.Id = L.PostId
    LEFT JOIN 
        PostHistory PH ON P.Id = PH.PostId AND PH.PostHistoryTypeId IN (4, 5, 24)
    LEFT JOIN 
        STRING_TO_ARRAY(P.Tags, ',') AS T ON P.Id = T.Id
    WHERE 
        P.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 year'
    GROUP BY 
        P.Id, P.Title, P.CreationDate, P.Score
)
SELECT 
    U.DisplayName,
    U.Reputation,
    U.UpVotesCount,
    U.PostsCount,
    P.Title,
    P.Score,
    P.CommentsCount,
    P.Tags,
    COALESCE(NULLIF(P.LastEditDate, '1970-01-01 00:00:00'), 'Not Edited') AS LastEdited
FROM 
    TopUsers U
JOIN 
    PostStatistics P ON U.UserId = P.OwnerUserId
WHERE 
    U.Rank <= 10
ORDER BY 
    U.Reputation DESC, P.Score DESC;