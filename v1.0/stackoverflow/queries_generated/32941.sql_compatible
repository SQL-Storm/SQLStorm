
WITH RecursivePosts AS (
    SELECT 
        Id, 
        Title, 
        Score, 
        ParentId,
        CreationDate,
        0 AS Level
    FROM 
        Posts
    WHERE 
        ParentId IS NULL
    
    UNION ALL
    
    SELECT 
        p.Id, 
        p.Title, 
        p.Score, 
        p.ParentId,
        p.CreationDate,
        rp.Level + 1
    FROM 
        Posts p
    INNER JOIN 
        RecursivePosts rp ON p.ParentId = rp.Id
),
PostMetrics AS (
    SELECT 
        rp.Id AS PostId,
        rp.Title,
        rp.Score,
        rp.CreationDate,
        COUNT(c.Id) AS CommentCount,
        COALESCE(SUM(v.BountyAmount), 0) AS TotalBounty
    FROM 
        RecursivePosts rp
    LEFT JOIN 
        Comments c ON c.PostId = rp.Id
    LEFT JOIN 
        Votes v ON v.PostId = rp.Id AND v.VoteTypeId IN (8, 9) 
    GROUP BY 
        rp.Id, rp.Title, rp.Score, rp.CreationDate
),
UserActivity AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COUNT(DISTINCT p.Id) AS PostsCreated,
        COUNT(DISTINCT c.Id) AS CommentsMade,
        SUM(b.Class) AS TotalBadges
    FROM 
        Users u
    LEFT JOIN 
        Posts p ON p.OwnerUserId = u.Id
    LEFT JOIN 
        Comments c ON c.UserId = u.Id
    LEFT JOIN 
        Badges b ON b.UserId = u.Id
    GROUP BY 
        u.Id, u.DisplayName
),
TopUsers AS (
    SELECT 
        ua.UserId,
        ua.DisplayName,
        ua.PostsCreated,
        ua.CommentsMade,
        ua.TotalBadges,
        ROW_NUMBER() OVER (ORDER BY ua.PostsCreated DESC, ua.CommentsMade DESC) AS UserRank
    FROM 
        UserActivity ua
)
SELECT 
    pm.Title,
    pm.Score,
    pm.CommentCount,
    pm.TotalBounty,
    tu.DisplayName AS TopUser,
    tu.PostsCreated,
    tu.CommentsMade,
    tu.TotalBadges
FROM 
    PostMetrics pm
LEFT JOIN 
    TopUsers tu ON pm.Score > 10 
WHERE 
    EXISTS (
        SELECT 1 
        FROM Comments c 
        WHERE c.PostId = pm.PostId AND c.Score > 0
    )
    AND pm.CreationDate >= CURRENT_TIMESTAMP - INTERVAL '1 year'
ORDER BY 
    pm.Score DESC, pm.TotalBounty DESC;
