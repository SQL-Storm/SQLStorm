
WITH RecursiveTagCount AS (
    SELECT 
        Id AS TagId,
        TagName,
        Count,
        1 AS Level
    FROM 
        Tags
    WHERE 
        IsModeratorOnly = 0  
    UNION ALL
    SELECT 
        t.Id,
        t.TagName,
        t.Count,
        rtc.Level + 1
    FROM 
        Tags t
    INNER JOIN 
        RecursiveTagCount rtc ON t.WikiPostId = rtc.TagId
),
PostVoteSummary AS (
    SELECT 
        p.Id AS PostId,
        COUNT(v.Id) AS VoteCount,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes
    FROM 
        Posts p
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    GROUP BY 
        p.Id
),
ClosedPostHistory AS (
    SELECT 
        ph.PostId,
        COUNT(ph.Id) AS CloseCount,
        MAX(ph.CreationDate) AS LastClosedDate
    FROM 
        PostHistory ph
    WHERE 
        ph.PostHistoryTypeId = 10  
    GROUP BY 
        ph.PostId
),
UserBadgeSummary AS (
    SELECT 
        u.Id AS UserId,
        SUM(CASE WHEN b.Class = 1 THEN 1 ELSE 0 END) AS GoldBadges,
        SUM(CASE WHEN b.Class = 2 THEN 1 ELSE 0 END) AS SilverBadges,
        SUM(CASE WHEN b.Class = 3 THEN 1 ELSE 0 END) AS BronzeBadges
    FROM 
        Users u
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    GROUP BY 
        u.Id
),
PostDetails AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate AS PostDate,
        ps.VoteCount,
        ps.UpVotes,
        ps.DownVotes,
        COALESCE(cph.CloseCount, 0) AS CloseCount,
        COALESCE(cph.LastClosedDate, '1970-01-01 00:00:00') AS LastClosedDate,
        ub.GoldBadges,
        ub.SilverBadges,
        ub.BronzeBadges,
        ARRAY_AGG(DISTINCT t.TagName) AS Tags
    FROM 
        Posts p
    LEFT JOIN 
        PostVoteSummary ps ON p.Id = ps.PostId
    LEFT JOIN 
        ClosedPostHistory cph ON p.Id = cph.PostId
    LEFT JOIN 
        UserBadgeSummary ub ON p.OwnerUserId = ub.UserId
    LEFT JOIN 
        Tags t ON t.ExcerptPostId = p.Id
    GROUP BY 
        p.Id, p.Title, p.CreationDate, ps.VoteCount, ps.UpVotes, ps.DownVotes, 
        cph.CloseCount, cph.LastClosedDate, ub.GoldBadges, ub.SilverBadges, ub.BronzeBadges
)
SELECT 
    pd.PostId,
    pd.Title,
    pd.PostDate,
    pd.VoteCount,
    pd.UpVotes,
    pd.DownVotes,
    pd.CloseCount,
    pd.LastClosedDate,
    pd.GoldBadges,
    pd.SilverBadges,
    pd.BronzeBadges,
    (SELECT COUNT(*) FROM RecursiveTagCount rtc WHERE rtc.TagId IN (SELECT UNNEST(pd.Tags))) AS TotalTags
FROM 
    PostDetails pd
WHERE 
    pd.CloseCount > 0 
ORDER BY 
    pd.CloseCount DESC, pd.PostDate DESC;
