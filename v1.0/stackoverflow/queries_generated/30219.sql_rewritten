WITH RECURSIVE UserReputation AS (
    SELECT Id, Reputation, CreationDate,
           ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS Rank,
           0 AS Level
    FROM Users
    WHERE Reputation > 0
    UNION ALL
    SELECT u.Id, u.Reputation, u.CreationDate,
           ROW_NUMBER() OVER (ORDER BY u.Reputation DESC) AS Rank,
           Level + 1
    FROM Users u
    INNER JOIN UserReputation ur ON u.Reputation < ur.Reputation
    WHERE ur.Level < 10
),
RecentActivity AS (
    SELECT p.OwnerUserId,
           COUNT(*) AS PostCount,
           SUM(CASE WHEN p.CreationDate > cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '30 days' THEN 1 ELSE 0 END) AS RecentPosts
    FROM Posts p
    GROUP BY p.OwnerUserId
),
UserStatistics AS (
    SELECT u.Id AS UserId, 
           u.DisplayName, 
           COALESCE(ur.Reputation, 0) AS Reputation,
           COALESCE(ra.PostCount, 0) AS PostCount,
           COALESCE(ra.RecentPosts, 0) AS RecentPosts
    FROM Users u
    LEFT JOIN UserReputation ur ON u.Id = ur.Id
    LEFT JOIN RecentActivity ra ON u.Id = ra.OwnerUserId
)
SELECT us.UserId,
       us.DisplayName,
       us.Reputation,
       us.PostCount,
       us.RecentPosts,
       COUNT(DISTINCT b.Id) AS BadgeCount,
       MAX(b.Date) AS LastBadgeDate,
       array_agg(DISTINCT p.Title || ' (Score: ' || p.Score || ')') AS RecentPostTitles
FROM UserStatistics us
LEFT JOIN Badges b ON us.UserId = b.UserId
LEFT JOIN Posts p ON us.UserId = p.OwnerUserId AND p.CreationDate > cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '90 days'
GROUP BY us.UserId, us.DisplayName, us.Reputation, us.PostCount, us.RecentPosts
HAVING us.Reputation > 100
ORDER BY us.Reputation DESC, us.PostCount DESC
LIMIT 10;