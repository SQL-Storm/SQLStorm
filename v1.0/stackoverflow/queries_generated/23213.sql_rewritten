WITH UserScore AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        SUM(v.VoteTypeId = 2) AS UpVotes,
        SUM(v.VoteTypeId = 3) AS DownVotes,
        SUM(v.VoteTypeId = 10) AS DeletedPosts,
        COALESCE(SUM(v.BountyAmount), 0) AS TotalBounty,
        DENSE_RANK() OVER (ORDER BY SUM(v.VoteTypeId = 2) - SUM(v.VoteTypeId = 3) DESC) AS RankScore
    FROM 
        Users u
    LEFT JOIN 
        Posts p ON u.Id = p.OwnerUserId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    WHERE 
        u.Reputation > 0
    GROUP BY 
        u.Id, u.DisplayName
),
TopUsers AS (
    SELECT 
        UserId,
        DisplayName,
        UpVotes,
        DownVotes,
        TotalBounty,
        RankScore
    FROM 
        UserScore
    WHERE 
        RankScore <= 10
),
PostAggregated AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.Score,
        p.ViewCount,
        COUNT(c.Id) AS CommentCount,
        SUM(p.AnswerCount) OVER (PARTITION BY p.OwnerUserId) AS TotalAnswersByUser
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    WHERE 
        p.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 year'
    GROUP BY 
        p.Id
)
SELECT 
    tu.DisplayName,
    pa.Title,
    pa.Score,
    pa.ViewCount,
    pa.CommentCount,
    pa.TotalAnswersByUser,
    CASE 
        WHEN pa.Score IS NULL THEN 'No Score Yet'
        ELSE 
            CASE 
                WHEN pa.Score > 100 THEN 'Hot Question'
                WHEN pa.Score BETWEEN 50 AND 100 THEN 'Popular Question'
                ELSE 'Regular Question'
            END 
    END AS QuestionStatus
FROM 
    TopUsers tu
LEFT JOIN 
    PostAggregated pa ON tu.UserId = pa.Id  
WHERE 
    tu.UpVotes > tu.DownVotes 
ORDER BY 
    tu.UpVotes DESC, tu.TotalBounty DESC;