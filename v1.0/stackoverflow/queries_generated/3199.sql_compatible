
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.ViewCount,
        p.CreationDate,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.ViewCount DESC) AS Rank,
        COUNT(c.Id) OVER (PARTITION BY p.Id) AS CommentCount,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) OVER (PARTITION BY p.Id) AS UpVotes,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) OVER (PARTITION BY p.Id) AS DownVotes
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    WHERE 
        p.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 year'
),
PostAnalytics AS (
    SELECT 
        rp.PostId,
        rp.Title,
        rp.ViewCount,
        rp.CreationDate,
        rp.CommentCount,
        rp.UpVotes,
        rp.DownVotes,
        CASE 
            WHEN rp.UpVotes > rp.DownVotes THEN 'Positive'
            WHEN rp.UpVotes < rp.DownVotes THEN 'Negative'
            ELSE 'Neutral'
        END AS Sentiment
    FROM 
        RankedPosts rp
    WHERE 
        rp.Rank <= 5
),
UserPostStatistics AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COUNT(DISTINCT pa.PostId) AS TotalPosts,
        SUM(pa.CommentCount) AS TotalComments,
        SUM(pa.UpVotes) AS TotalUpVotes,
        SUM(pa.DownVotes) AS TotalDownVotes
    FROM 
        Users u
    LEFT JOIN 
        PostAnalytics pa ON u.Id = pa.PostId
    GROUP BY 
        u.Id, u.DisplayName
)

SELECT 
    ups.UserId,
    ups.DisplayName,
    ups.TotalPosts,
    ups.TotalComments,
    ups.TotalUpVotes,
    ups.TotalDownVotes,
    COALESCE(SUM(CASE WHEN pa.Sentiment = 'Positive' THEN 1 ELSE 0 END), 0) AS PositivePostCount,
    COALESCE(SUM(CASE WHEN pa.Sentiment = 'Negative' THEN 1 ELSE 0 END), 0) AS NegativePostCount
FROM 
    UserPostStatistics ups
LEFT JOIN 
    PostAnalytics pa ON ups.UserId = pa.PostId
GROUP BY 
    ups.UserId, ups.DisplayName
ORDER BY 
    ups.TotalUpVotes DESC, ups.TotalPosts DESC
LIMIT 10;
