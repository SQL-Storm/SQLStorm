WITH UserActivity AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COUNT(v.Id) AS VoteCount,
        COUNT(c.Id) AS CommentCount,
        COUNT(b.Id) AS BadgesCount,
        SUM(CASE WHEN p.PostTypeId = 1 THEN p.AnswerCount ELSE 0 END) AS QuestionsAnswered,
        SUM(CASE WHEN p.PostTypeId = 2 THEN p.Score ELSE 0 END) AS TotalAnswerScore,
        SUM(CASE WHEN p.PostTypeId = 1 AND ph.PostHistoryTypeId IN (10, 11) THEN 1 ELSE 0 END) AS PostsClosed,
        SUM(CASE WHEN ph.PostHistoryTypeId = 24 THEN 1 ELSE 0 END) AS SuggestedEditsApplied
    FROM 
        Users u
    LEFT JOIN Votes v ON u.Id = v.UserId
    LEFT JOIN Comments c ON u.Id = c.UserId
    LEFT JOIN Badges b ON u.Id = b.UserId
    LEFT JOIN Posts p ON u.Id = p.OwnerUserId
    LEFT JOIN PostHistory ph ON p.Id = ph.PostId
    GROUP BY 
        u.Id, u.DisplayName
),
PostSummary AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.Body,
        p.CreationDate,
        p.ViewCount,
        COALESCE(uc.DisplayName, 'Community User') AS PostOwner,
        COUNT(c.Id) AS CommentCount,
        CASE WHEN p.AcceptedAnswerId IS NOT NULL THEN 1 ELSE 0 END AS HasAcceptedAnswer,
        ARRAY_AGG(DISTINCT SUBSTRING(t.TagName, 1, 20) ORDER BY t.TagName) AS Tags
    FROM 
        Posts p
    LEFT JOIN Users uc ON p.OwnerUserId = uc.Id
    LEFT JOIN Comments c ON p.Id = c.PostId
    LEFT JOIN Tags t ON ',' || p.Tags || ',' LIKE '%,' || t.TagName || ',%'
    WHERE 
        p.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 year'
    GROUP BY 
        p.Id, p.Title, p.Body, p.CreationDate, p.ViewCount, uc.DisplayName
)
SELECT 
    ua.DisplayName,
    ua.VoteCount,
    ua.CommentCount,
    ua.BadgesCount,
    ua.QuestionsAnswered,
    ua.TotalAnswerScore,
    ua.PostsClosed,
    ua.SuggestedEditsApplied,
    ps.PostId,
    ps.Title AS PostTitle,
    ps.Body,
    ps.CreationDate AS PostCreationDate,
    ps.ViewCount AS PostViewCount,
    ps.PostOwner,
    ps.CommentCount AS PostCommentCount,
    ps.HasAcceptedAnswer,
    ps.Tags
FROM 
    UserActivity ua
JOIN 
    PostSummary ps ON ua.UserId = ps.PostOwner
WHERE 
    ua.VoteCount > 10
ORDER BY 
    ua.BadgesCount DESC, ua.VoteCount DESC, ps.ViewCount DESC
LIMIT 10;