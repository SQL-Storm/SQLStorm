WITH RECURSIVE TagHierarchy AS (
    SELECT Id, TagName, Count, ExcerptPostId, WikiPostId, IsModeratorOnly, IsRequired, 1 AS Level
    FROM Tags
    WHERE IsModeratorOnly = 1  

    UNION ALL

    SELECT t.Id, t.TagName, t.Count, t.ExcerptPostId, t.WikiPostId, t.IsModeratorOnly, t.IsRequired, th.Level + 1
    FROM Tags t
    JOIN TagHierarchy th ON t.Id = th.ExcerptPostId  
)

SELECT 
    u.Id AS UserId,
    u.DisplayName,
    u.Reputation,
    u.CreationDate,
    p.Id AS PostId,
    p.Title,
    p.CreationDate AS PostCreationDate,
    COUNT(c.Id) AS CommentCount,
    COALESCE(SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END), 0) AS UpvoteCount,
    COALESCE(SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END), 0) AS DownvoteCount,
    STRING_AGG(DISTINCT th.TagName, ', ') AS RelatedTags,
    ROW_NUMBER() OVER (PARTITION BY u.Id ORDER BY p.CreationDate DESC) AS PostRank
FROM Users u
LEFT JOIN Posts p ON u.Id = p.OwnerUserId
LEFT JOIN Comments c ON p.Id = c.PostId
LEFT JOIN Votes v ON p.Id = v.PostId
LEFT JOIN TagHierarchy th ON th.ExcerptPostId = p.Id 
WHERE u.Reputation > 0
  AND p.CreationDate >= cast('2024-10-01' as date) - INTERVAL '1 year'
GROUP BY u.Id, u.DisplayName, u.Reputation, u.CreationDate, p.Id, p.Title, p.CreationDate
ORDER BY u.Reputation DESC, PostRank ASC
LIMIT 50;