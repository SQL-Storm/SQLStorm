
WITH UserReputation AS (
    SELECT 
        Id AS UserId,
        Reputation,
        LastAccessDate,
        ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS ReputationRank
    FROM Users
), 
PopularPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.ViewCount,
        COUNT(c.Id) AS CommentCount,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVoteCount,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVoteCount,
        ROW_NUMBER() OVER (PARTITION BY p.PostTypeId ORDER BY p.ViewCount DESC) AS PopularityRank
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    WHERE 
        p.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '30 days'
    GROUP BY 
        p.Id, p.Title, p.ViewCount
), 
ClosedPostStats AS (
    SELECT 
        ph.PostId,
        COUNT(*) AS CloseVoteCount,
        MAX(ph.CreationDate) AS LastClosedDate
    FROM 
        PostHistory ph
    WHERE 
        ph.PostHistoryTypeId = 10
    GROUP BY 
        ph.PostId
)

SELECT 
    u.UserId,
    u.Reputation,
    COALESCE(pp.Title, 'No Popular Posts') AS PopularPostTitle,
    COALESCE(pp.ViewCount, 0) AS PopularPostViewCount,
    COALESCE(cp.CloseVoteCount, 0) AS ClosedPostVoteCount,
    COALESCE(cp.LastClosedDate, CAST('Never' AS TIMESTAMP)) AS LastClosedPostDate
FROM 
    UserReputation u
LEFT JOIN 
    PopularPosts pp ON u.UserId = pp.PostId AND pp.PopularityRank <= 5
LEFT JOIN 
    ClosedPostStats cp ON u.UserId = cp.PostId
WHERE 
    u.Reputation > 1000
ORDER BY 
    u.Reputation DESC, pp.ViewCount DESC;
