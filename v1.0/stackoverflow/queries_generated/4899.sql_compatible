
WITH UserReputation AS (
    SELECT 
        Id AS UserId, 
        DisplayName, 
        Reputation, 
        RANK() OVER (ORDER BY Reputation DESC) AS ReputationRank
    FROM 
        Users
),
TopQuestions AS (
    SELECT 
        Id AS QuestionId, 
        Title, 
        CreationDate, 
        Score, 
        OwnerUserId,
        (SELECT COUNT(*) FROM Posts WHERE ParentId = Questions.QuestionId) AS AnswerCount
    FROM 
        Posts AS Questions
    WHERE 
        PostTypeId = 1
),
RecentVotes AS (
    SELECT 
        V.PostId, 
        COUNT(*) AS VoteCount, 
        SUM(CASE WHEN V.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes,
        SUM(CASE WHEN V.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes
    FROM 
        Votes AS V
    WHERE 
        V.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 YEAR'
    GROUP BY 
        V.PostId
),
UserBadges AS (
    SELECT 
        B.UserId,
        COUNT(*) FILTER (WHERE B.Class = 1) AS GoldBadges,
        COUNT(*) FILTER (WHERE B.Class = 2) AS SilverBadges,
        COUNT(*) FILTER (WHERE B.Class = 3) AS BronzeBadges
    FROM 
        Badges AS B
    GROUP BY 
        B.UserId
)
SELECT 
    U.DisplayName,
    U.Reputation,
    COALESCE(UR.ReputationRank, 0) AS ReputationRank,
    TQ.QuestionId,
    TQ.Title,
    TQ.CreationDate,
    TQ.Score,
    RV.VoteCount,
    RV.UpVotes,
    RV.DownVotes,
    UB.GoldBadges,
    UB.SilverBadges,
    UB.BronzeBadges
FROM 
    UserReputation AS UR
LEFT JOIN 
    Users AS U ON U.Id = UR.UserId
LEFT JOIN 
    TopQuestions AS TQ ON TQ.OwnerUserId = U.Id
LEFT JOIN 
    RecentVotes AS RV ON RV.PostId = TQ.QuestionId
LEFT JOIN 
    UserBadges AS UB ON UB.UserId = U.Id
WHERE 
    (TQ.AnswerCount > 5 AND RV.VoteCount > 10) OR
    (UB.GoldBadges > 0 AND TQ.Score > 50)
ORDER BY 
    U.Reputation DESC, TQ.Score DESC 
LIMIT 100;
