
WITH UserReputation AS (
    SELECT 
        Id AS UserId,
        Reputation,
        ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS ReputationRank
    FROM Users
),
PostStats AS (
    SELECT 
        P.Id AS PostId,
        P.PostTypeId,
        P.OwnerUserId,
        COUNT(CASE WHEN C.Id IS NOT NULL THEN 1 END) AS TotalComments,
        SUM(CASE WHEN V.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes,
        SUM(CASE WHEN V.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes,
        COUNT(DISTINCT B.Id) AS BadgeCount
    FROM Posts P
    LEFT JOIN Comments C ON C.PostId = P.Id
    LEFT JOIN Votes V ON V.PostId = P.Id
    LEFT JOIN Badges B ON B.UserId = P.OwnerUserId
    GROUP BY P.Id, P.PostTypeId, P.OwnerUserId
),
UserPostRankings AS (
    SELECT 
        P.OwnerUserId,
        COUNT(P.Id) AS PostCount,
        SUM(PS.TotalComments) AS TotalComments,
        SUM(PS.UpVotes) AS TotalUpVotes,
        SUM(PS.DownVotes) AS TotalDownVotes,
        MAX(PS.BadgeCount) AS MaxBadges,
        ROW_NUMBER() OVER (PARTITION BY P.OwnerUserId ORDER BY COUNT(P.Id) DESC) AS PostRank
    FROM Posts P
    JOIN PostStats PS ON P.Id = PS.PostId
    GROUP BY P.OwnerUserId
),
TopPosts AS (
    SELECT 
        P.Id,
        P.Title,
        P.CreationDate,
        PS.UpVotes - PS.DownVotes AS NetVotes,
        R.Reputation
    FROM Posts P
    JOIN PostStats PS ON P.Id = PS.PostId
    JOIN UserReputation R ON P.OwnerUserId = R.UserId
    WHERE P.CreationDate > (CAST('2024-10-01 12:34:56' AS TIMESTAMP) - INTERVAL '1 year')
      AND PS.TotalComments > 0
)
SELECT 
    U.PostCount,
    T.Title,
    T.CreationDate,
    T.NetVotes,
    UR.ReputationRank
FROM UserPostRankings U
JOIN TopPosts T ON U.OwnerUserId = T.OwnerUserId
JOIN UserReputation UR ON U.OwnerUserId = UR.UserId
WHERE U.PostCount > 5
ORDER BY U.PostCount DESC, T.NetVotes DESC
LIMIT 10;
