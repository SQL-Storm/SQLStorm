
WITH UserPostStats AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COUNT(p.Id) AS PostCount,
        SUM(COALESCE(p.ViewCount, 0)) AS TotalViews,
        SUM(COALESCE(p.Score, 0)) AS TotalScore,
        AVG(COALESCE(p.Score, 0)) AS AvgScore
    FROM Users u
    LEFT JOIN Posts p ON u.Id = p.OwnerUserId
    GROUP BY u.Id, u.DisplayName
),
TopUsers AS (
    SELECT 
        UserId,
        DisplayName,
        PostCount,
        TotalViews,
        TotalScore,
        AvgScore,
        RANK() OVER (ORDER BY TotalScore DESC) AS ScoreRank
    FROM UserPostStats
),
TopTags AS (
    SELECT 
        t.TagName,
        COUNT(p.Id) AS PostCount,
        SUM(COALESCE(p.ViewCount, 0)) AS TotalViews
    FROM Tags t
    LEFT JOIN Posts p ON t.Id = ANY(string_to_array(p.Tags, ','))
    GROUP BY t.TagName
    ORDER BY PostCount DESC
    LIMIT 5
),
PostActivity AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        COUNT(c.Id) AS CommentCount,
        COALESCE(MAX(v.CreationDate), p.CreationDate) AS LastActivityDate
    FROM Posts p
    LEFT JOIN Comments c ON p.Id = c.PostId
    LEFT JOIN Votes v ON p.Id = v.PostId
    WHERE p.LastActivityDate < TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '30 days'
    GROUP BY p.Id, p.Title
),
ClosedPosts AS (
    SELECT 
        ph.PostId,
        ph.CreationDate AS ClosedDate,
        COUNT(*) AS CloseReasonCount,
        STRING_AGG(DISTINCT ctr.Name, ', ') AS CloseReasons
    FROM PostHistory ph
    JOIN PostHistoryTypes pht ON ph.PostHistoryTypeId = pht.Id
    JOIN CloseReasonTypes ctr ON ph.Comment = ctr.Id::text
    WHERE pht.Name = 'Post Closed'
    GROUP BY ph.PostId, ph.CreationDate
)

SELECT 
    tu.DisplayName,
    tu.PostCount AS UserPostCount,
    tu.TotalViews AS UserTotalViews,
    tu.TotalScore AS UserTotalScore,
    tt.TagName AS MostActiveTag,
    tt.PostCount AS TagPostCount,
    tt.TotalViews AS TagTotalViews,
    pa.PostId,
    pa.Title,
    pa.CommentCount,
    pa.LastActivityDate,
    cp.ClosedDate,
    cp.CloseReasonCount,
    cp.CloseReasons
FROM TopUsers tu
JOIN TopTags tt ON tu.ScoreRank <= 10
JOIN PostActivity pa ON tu.UserId = pa.PostId
LEFT JOIN ClosedPosts cp ON pa.PostId = cp.PostId
WHERE tu.PostCount > 10
ORDER BY tu.TotalScore DESC, tt.PostCount DESC, pa.LastActivityDate DESC;
