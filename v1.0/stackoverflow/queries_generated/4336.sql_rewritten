WITH UserStats AS (
    SELECT 
        U.Id AS UserId,
        U.DisplayName,
        U.Reputation,
        U.Views,
        COUNT(P.Id) AS TotalPosts,
        SUM(CASE WHEN P.PostTypeId = 1 THEN 1 ELSE 0 END) AS TotalQuestions,
        SUM(CASE WHEN P.PostTypeId = 2 THEN 1 ELSE 0 END) AS TotalAnswers,
        SUM(CASE WHEN P.AcknowledgedAnswerId IS NOT NULL THEN 1 ELSE 0 END) AS AcceptedAnswers
    FROM 
        Users U
    LEFT JOIN 
        Posts P ON U.Id = P.OwnerUserId
    GROUP BY 
        U.Id
),
RankedUsers AS (
    SELECT 
        UserId,
        DisplayName,
        Reputation,
        Views,
        TotalPosts,
        TotalQuestions,
        TotalAnswers,
        AcceptedAnswers,
        RANK() OVER (ORDER BY Reputation DESC) AS ReputationRank
    FROM 
        UserStats
),
RecentVotes AS (
    SELECT 
        V.UserId,
        COUNT(*) AS VoteCount,
        SUM(CASE WHEN V.VoteTypeId = 2 THEN 1 ELSE 0 END) AS Upvotes,
        SUM(CASE WHEN V.VoteTypeId = 3 THEN 1 ELSE 0 END) AS Downvotes
    FROM 
        Votes V
    WHERE 
        V.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '30 days'
    GROUP BY 
        V.UserId
)
SELECT 
    RU.UserId,
    RU.DisplayName,
    RU.Reputation,
    COALESCE(RV.VoteCount, 0) AS RecentVoteCount,
    COALESCE(RV.Upvotes, 0) AS RecentUpvotes,
    COALESCE(RV.Downvotes, 0) AS RecentDownvotes,
    RU.ReputationRank,
    CASE 
        WHEN RU.TotalPosts > 0 THEN ROUND((RU.Views::decimal / RU.TotalPosts), 2) 
        ELSE 0 
    END AS AverageViewsPerPost,
    COALESCE(NULLIF(RU.TotalQuestions, 0), NULL) AS NonZeroQuestions
FROM 
    RankedUsers RU
LEFT JOIN 
    RecentVotes RV ON RU.UserId = RV.UserId
WHERE 
    RU.ReputationRank <= 50
ORDER BY 
    RU.Reputation DESC, 
    RU.Views DESC;