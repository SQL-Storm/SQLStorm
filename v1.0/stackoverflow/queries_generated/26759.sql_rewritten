WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.Body,
        COUNT(c.Id) AS CommentCount,
        COALESCE(SUM(v.VoteTypeId = 2) - SUM(v.VoteTypeId = 3), 0) AS VoteScore,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY COUNT(c.Id) DESC) AS UserRank
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    WHERE 
        p.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 year'
    GROUP BY 
        p.Id
),
TopContributors AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        u.Reputation,
        SUM(rp.CommentCount) AS TotalComments,
        SUM(rp.VoteScore) AS TotalVotes
    FROM 
        RankedPosts rp
    JOIN 
        Users u ON rp.UserRank = 1 AND rp.PostId IN (SELECT Id FROM Posts WHERE OwnerUserId = u.Id)
    GROUP BY 
        u.Id
),
PostTagCounts AS (
    SELECT 
        p.Id AS PostId,
        COUNT(t.Id) AS TagCount
    FROM 
        Posts p
    JOIN 
        LATERAL string_to_array(substring(p.Tags, 2, length(p.Tags) - 2), '>') AS tag ON true
    JOIN 
        Tags t ON t.TagName = tag
    GROUP BY 
        p.Id
)
SELECT 
    tc.UserId,
    tc.DisplayName,
    tc.Reputation,
    tc.TotalComments,
    tc.TotalVotes,
    pt.TagCount
FROM 
    TopContributors tc
JOIN 
    PostTagCounts pt ON pt.PostId IN (SELECT PostId FROM RankedPosts WHERE UserRank = 1)
ORDER BY 
    tc.TotalVotes DESC, 
    tc.TotalComments DESC;