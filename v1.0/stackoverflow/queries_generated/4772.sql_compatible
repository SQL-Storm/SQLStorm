
WITH UserActivity AS (
    SELECT 
        U.Id AS UserId,
        U.DisplayName,
        U.Reputation,
        COUNT(DISTINCT P.Id) AS PostsCount,
        SUM(COALESCE(CASE WHEN V.VoteTypeId = 2 THEN 1 ELSE 0 END, 0)) AS UpVotesCount,
        SUM(COALESCE(CASE WHEN V.VoteTypeId = 3 THEN 1 ELSE 0 END, 0)) AS DownVotesCount,
        SUM(COALESCE(V.BountyAmount, 0)) AS TotalBounty,
        ROW_NUMBER() OVER (PARTITION BY U.Id ORDER BY SUM(COALESCE(V.BountyAmount, 0)) DESC) AS BountyRank
    FROM 
        Users U
    LEFT JOIN 
        Posts P ON U.Id = P.OwnerUserId
    LEFT JOIN 
        Votes V ON P.Id = V.PostId
    WHERE 
        U.Reputation > 0
    GROUP BY 
        U.Id, U.DisplayName, U.Reputation
),
RecentPosts AS (
    SELECT 
        P.Id AS PostId,
        P.Title,
        P.CreationDate,
        P.ViewCount,
        P.Score,
        U.DisplayName AS Author,
        ROW_NUMBER() OVER (ORDER BY P.CreationDate DESC) AS RecentRank
    FROM 
        Posts P
    JOIN 
        Users U ON P.OwnerUserId = U.Id
    WHERE 
        P.PostTypeId = 1 AND P.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '30 days'
),
PopularTags AS (
    SELECT 
        T.TagName,
        COUNT(P.Id) AS TagCount
    FROM 
        Tags T
    JOIN 
        Posts P ON P.Tags LIKE CONCAT('%<', T.TagName, '>%' )
    GROUP BY 
        T.TagName
    HAVING 
        COUNT(P.Id) > 10
)
SELECT 
    UA.UserId,
    UA.DisplayName,
    UA.Reputation,
    UA.PostsCount,
    UA.UpVotesCount,
    UA.DownVotesCount,
    UA.TotalBounty,
    RP.Title AS RecentPostTitle,
    RP.CreationDate AS RecentPostDate,
    RP.ViewCount AS LastPostViews,
    RP.Score AS LastPostScore,
    PT.TagName AS PopularTag
FROM 
    UserActivity UA
LEFT JOIN 
    RecentPosts RP ON UA.UserId = RP.Author
LEFT JOIN 
    PopularTags PT ON PT.TagCount BETWEEN 10 AND 100
WHERE 
    UA.BountyRank <= 5
ORDER BY 
    UA.Reputation DESC, UA.PostsCount DESC, RP.CreationDate DESC;
