WITH UserBadgeCounts AS (
    SELECT 
        u.Id AS UserId, 
        u.DisplayName,
        COUNT(b.Id) FILTER (WHERE b.Class = 1) AS GoldBadgeCount,
        COUNT(b.Id) FILTER (WHERE b.Class = 2) AS SilverBadgeCount,
        COUNT(b.Id) FILTER (WHERE b.Class = 3) AS BronzeBadgeCount
    FROM 
        Users u
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    GROUP BY 
        u.Id
), 
PostStats AS (
    SELECT 
        p.OwnerUserId, 
        COUNT(p.Id) AS TotalPosts, 
        SUM(CASE WHEN p.PostTypeId = 1 THEN 1 ELSE 0 END) AS TotalQuestions,
        SUM(CASE WHEN p.PostTypeId = 2 THEN 1 ELSE 0 END) AS TotalAnswers,
        AVG(COALESCE(p.Score, 0)) AS AvgScore,
        AVG(p.ViewCount) AS AvgViewCount
    FROM 
        Posts p
    GROUP BY 
        p.OwnerUserId
),
ActiveUsers AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        u.Reputation,
        u.CreationDate,
        DENSE_RANK() OVER (ORDER BY u.Reputation DESC) AS ReputationRank,
        DENSE_RANK() OVER (ORDER BY u.LastAccessDate DESC) AS ActivityRank
    FROM 
        Users u
    WHERE 
        u.LastAccessDate > cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 year'
)
SELECT 
    au.UserId,
    au.DisplayName,
    ubc.GoldBadgeCount,
    ubc.SilverBadgeCount,
    ubc.BronzeBadgeCount,
    ps.TotalPosts,
    ps.TotalQuestions,
    ps.TotalAnswers,
    ps.AvgScore,
    ps.AvgViewCount,
    CASE 
        WHEN ubc.GoldBadgeCount > 0 THEN 'Gold Achiever'
        WHEN ubc.SilverBadgeCount > 1 THEN 'Silver Contributor'
        ELSE 'Newcomer'
    END AS UserType
FROM 
    ActiveUsers au
LEFT JOIN 
    UserBadgeCounts ubc ON au.UserId = ubc.UserId
LEFT JOIN 
    PostStats ps ON au.UserId = ps.OwnerUserId
WHERE 
    (ubc.GoldBadgeCount > 0 OR ubc.SilverBadgeCount > 3 OR ubc.BronzeBadgeCount > 5)
    AND ps.TotalPosts IS NOT NULL
ORDER BY 
    au.Reputation DESC, 
    ps.TotalPosts DESC;