
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.ViewCount,
        p.CreationDate,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.ViewCount DESC) AS PostRank
    FROM 
        Posts p
    WHERE 
        p.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 year'
),
UserStats AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        SUM(v.BountyAmount) AS TotalBounty,
        COUNT(DISTINCT p.Id) AS TotalPosts,
        COUNT(DISTINCT b.Id) AS TotalBadges
    FROM 
        Users u
    LEFT JOIN 
        Posts p ON u.Id = p.OwnerUserId
    LEFT JOIN 
        Votes v ON v.UserId = u.Id AND v.VoteTypeId = 8  
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    GROUP BY 
        u.Id, u.DisplayName
),
TopUsers AS (
    SELECT 
        us.UserId,
        us.DisplayName,
        us.TotalBounty,
        us.TotalPosts,
        us.TotalBadges,
        RANK() OVER (ORDER BY us.TotalBounty DESC) AS UserRank
    FROM 
        UserStats us
)
SELECT 
    TRIM(UPPER(Tags.tag)) AS FormattedTag,
    ru.UserId,
    ru.DisplayName,
    COALESCE(rp.ViewCount, 0) AS MostViewedPost,
    ru.TotalBounty,
    ru.TotalPosts,
    ru.TotalBadges
FROM 
    TopUsers ru
FULL OUTER JOIN 
    (SELECT DISTINCT UNNEST(STRING_TO_ARRAY(Tags, ',')) AS tag FROM Posts) Tags ON TRUE
LEFT JOIN 
    RankedPosts rp ON ru.UserId = rp.OwnerUserId AND rp.PostRank = 1
WHERE 
    ru.TotalPosts > 0
ORDER BY 
    ru.TotalBounty DESC, ru.DisplayName ASC;
