WITH UserReputation AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        u.Reputation,
        COUNT(DISTINCT p.Id) AS PostCount,
        SUM(CASE WHEN p.Score > 0 THEN 1 ELSE 0 END) AS UpvotedPosts,
        SUM(CASE WHEN p.Score < 0 THEN 1 ELSE 0 END) AS DownvotedPosts
    FROM Users u
    LEFT JOIN Posts p ON u.Id = p.OwnerUserId
    GROUP BY u.Id
),
PostStatistics AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.ViewCount,
        COALESCE(c.CommentCount, 0) AS CommentCount,
        COALESCE(v.UpVoteCount, 0) AS UpVoteCount,
        COALESCE(v.DownVoteCount, 0) AS DownVoteCount,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS PostRank
    FROM Posts p
    LEFT JOIN (
        SELECT PostId, COUNT(*) AS CommentCount
        FROM Comments
        GROUP BY PostId
    ) c ON p.Id = c.PostId
    LEFT JOIN (
        SELECT PostId, 
               SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVoteCount,
               SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVoteCount
        FROM Votes
        GROUP BY PostId
    ) v ON p.Id = v.PostId
),
UserPostDetails AS (
    SELECT 
        ur.UserId,
        ur.DisplayName AS UserName,
        ps.PostId,
        ps.Title,
        ps.CreationDate,
        ps.ViewCount,
        ps.CommentCount,
        ps.UpVoteCount,
        ps.DownVoteCount
    FROM UserReputation ur
    JOIN PostStatistics ps ON ur.UserId = ps.OwnerUserId
)

SELECT 
    u.UserName,
    SUM(ps.ViewCount) AS TotalViews,
    SUM(ps.UpVoteCount) AS TotalUpVotes,
    SUM(ps.DownVoteCount) AS TotalDownVotes,
    AVG(ps.ViewCount) AS AvgViewsPerPost,
    AVG(ps.CommentCount) AS AvgCommentsPerPost,
    COUNT(p.PostId) AS TotalPosts
FROM UserPostDetails p
JOIN UserReputation u ON p.UserId = u.UserId
GROUP BY u.UserName
HAVING SUM(ps.UpVoteCount) > 0
ORDER BY TotalViews DESC
LIMIT 10;