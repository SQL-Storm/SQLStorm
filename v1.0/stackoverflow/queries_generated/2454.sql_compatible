
WITH UserStats AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        u.Reputation,
        u.Views,
        u.UpVotes,
        u.DownVotes,
        COUNT(DISTINCT p.Id) AS PostCount,
        SUM(CASE WHEN p.PostTypeId = 1 THEN 1 ELSE 0 END) AS QuestionCount,
        SUM(CASE WHEN p.PostTypeId = 2 THEN 1 ELSE 0 END) AS AnswerCount,
        DENSE_RANK() OVER (ORDER BY u.Reputation DESC) AS ReputationRank
    FROM 
        Users u
    LEFT JOIN 
        Posts p ON u.Id = p.OwnerUserId
    WHERE 
        u.Reputation > 0
    GROUP BY 
        u.Id, u.DisplayName, u.Reputation, u.Views, u.UpVotes, u.DownVotes
),
TopUsers AS (
    SELECT 
        UserId,
        DisplayName,
        Reputation,
        PostCount,
        QuestionCount,
        AnswerCount,
        ReputationRank
    FROM 
        UserStats
    WHERE 
        ReputationRank <= 10
),
PostSummary AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Score,
        COALESCE(c.CommentCount, 0) AS CommentCount,
        COALESCE(ph.EditCount, 0) AS EditCount,
        STRING_AGG(DISTINCT pt.Name, ', ') AS Tags
    FROM 
        Posts p
    LEFT JOIN (
        SELECT 
            PostId,
            COUNT(*) AS CommentCount
        FROM 
            Comments
        GROUP BY 
            PostId
    ) c ON p.Id = c.PostId
    LEFT JOIN (
        SELECT 
            PostId,
            COUNT(*) AS EditCount
        FROM 
            PostHistory
        WHERE 
            PostHistoryTypeId IN (4, 5, 6) 
        GROUP BY 
            PostId
    ) ph ON p.Id = ph.PostId
    LEFT JOIN 
        LATERAL (SELECT STRING_AGG(DISTINCT pt.Name, ', ') AS Tags
                  FROM PostTypes pt 
                  WHERE p.PostTypeId = pt.Id) pt ON TRUE
    GROUP BY 
        p.Id, p.Title, p.CreationDate, p.Score
)
SELECT 
    u.DisplayName,
    u.Reputation,
    ps.PostId,
    ps.Title,
    ps.CreationDate,
    ps.Score,
    ps.CommentCount,
    ps.EditCount,
    ps.Tags
FROM 
    TopUsers u
JOIN 
    Posts ps ON u.UserId = ps.OwnerUserId
WHERE 
    ps.Score > 10
ORDER BY 
    u.Reputation DESC, ps.Score DESC
LIMIT 25;
