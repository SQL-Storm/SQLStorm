
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Score,
        COALESCE(COUNT(c.Id) FILTER (WHERE c.UserId IS NOT NULL), 0) AS CommentCount,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS UserPostRank
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    WHERE 
        p.CreationDate >= (TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 year')
    GROUP BY 
        p.Id, p.Title, p.CreationDate, p.Score, p.OwnerUserId
),

UserBadges AS (
    SELECT 
        u.Id AS UserId,
        STRING_AGG(b.Name, ', ') AS Badges,
        SUM(CASE 
            WHEN b.Class = 1 THEN 1 
            ELSE 0 
        END) AS GoldCount,
        SUM(CASE 
            WHEN b.Class = 2 THEN 1 
            ELSE 0 
        END) AS SilverCount,
        SUM(CASE 
            WHEN b.Class = 3 THEN 1 
            ELSE 0 
        END) AS BronzeCount
    FROM 
        Users u 
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    GROUP BY 
        u.Id
),

PostStats AS (
    SELECT 
        p.OwnerUserId,
        COUNT(DISTINCT p.Id) AS TotalPosts,
        SUM(p.Score) AS TotalScore,
        AVG(p.Score) AS AvgScore,
        MAX(p.Score) AS MaxScore
    FROM 
        Posts p
    WHERE 
        p.CreationDate >= (TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '6 months')
    GROUP BY 
        p.OwnerUserId
)

SELECT 
    u.Id AS UserId,
    u.DisplayName,
    p.PostId,
    p.Title,
    COALESCE(up.Badges, 'None') AS UserBadges, 
    ps.TotalPosts,
    ps.TotalScore,
    ps.AvgScore,
    ps.MaxScore,
    p.CommentCount,
    (CASE 
        WHEN ps.MaxScore > 50 THEN 'Highly Active' 
        WHEN ps.MaxScore BETWEEN 20 AND 50 THEN 'Moderately Active' 
        ELSE 'Less Active' 
    END) AS ActivityLevel
FROM 
    RankedPosts p
JOIN 
    Users u ON p.OwnerUserId = u.Id
LEFT JOIN 
    UserBadges up ON u.Id = up.UserId
LEFT JOIN 
    PostStats ps ON u.Id = ps.OwnerUserId
WHERE 
    p.UserPostRank <= 3 
    AND (p.CommentCount > 0 OR ps.TotalPosts >= 5)
ORDER BY 
    ps.TotalScore DESC, u.Reputation DESC;
