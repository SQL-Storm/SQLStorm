
WITH RankedPosts AS (
    SELECT 
        p.Id,
        p.Title,
        p.Score,
        p.CreationDate,
        p.OwnerUserId,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC) AS PostRank
    FROM 
        Posts p
    WHERE 
        p.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 year'
        AND p.Score > 0
),
UserStats AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COALESCE(SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END), 0) AS UpVotes,
        COALESCE(SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END), 0) AS DownVotes,
        COUNT(DISTINCT b.Id) AS BadgeCount
    FROM 
        Users u
    LEFT JOIN 
        Votes v ON u.Id = v.UserId
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    GROUP BY 
        u.Id, u.DisplayName
),
ClosedPosts AS (
    SELECT 
        ph.PostId,
        ph.CreationDate,
        COUNT(*) AS CloseCount
    FROM 
        PostHistory ph
    WHERE 
        ph.PostHistoryTypeId = 10 
    GROUP BY 
        ph.PostId, ph.CreationDate
),
UserRank AS (
    SELECT 
        us.UserId, 
        us.DisplayName,
        RANK() OVER (ORDER BY us.UpVotes - us.DownVotes DESC) AS UserRank
    FROM 
        UserStats us
    WHERE 
        us.BadgeCount > 0
)
SELECT 
    u.UserId,
    u.DisplayName,
    rp.Title,
    rp.Score,
    rp.CreationDate,
    cp.CloseCount,
    ur.UserRank
FROM 
    RankedPosts rp
JOIN 
    Users u ON rp.OwnerUserId = u.Id
LEFT JOIN 
    ClosedPosts cp ON rp.Id = cp.PostId
JOIN 
    UserRank ur ON u.UserId = ur.UserId
WHERE 
    rp.PostRank = 1
    AND ur.UserRank <= 10
ORDER BY 
    ur.UserRank, rp.Score DESC
LIMIT 50;
