WITH UserStatistics AS (
    SELECT 
        U.Id AS UserId,
        U.Reputation,
        U.CreationDate,
        U.LastAccessDate,
        U.DisplayName,
        U.Views,
        U.UpVotes,
        U.DownVotes,
        COALESCE(B.BadgeCount, 0) AS BadgeCount,
        COALESCE(P.PostCount, 0) AS PostCount,
        ROW_NUMBER() OVER (PARTITION BY U.Id ORDER BY U.Reputation DESC) AS UserRank
    FROM 
        Users U
    LEFT JOIN (
        SELECT 
            UserId, 
            COUNT(*) AS BadgeCount 
        FROM 
            Badges 
        GROUP BY 
            UserId
    ) B ON U.Id = B.UserId
    LEFT JOIN (
        SELECT 
            OwnerUserId AS UserId, 
            COUNT(*) AS PostCount 
        FROM 
            Posts 
        WHERE 
            CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 year'
        GROUP BY 
            OwnerUserId
    ) P ON U.Id = P.UserId
),
PostDetails AS (
    SELECT
        P.Id AS PostId,
        P.Title,
        P.Score,
        P.ViewCount,
        CASE
            WHEN P.AcceptedAnswerId IS NOT NULL THEN 'Accepted'
            ELSE 'Not Accepted'
        END AS AcceptanceStatus,
        COUNT(CASE WHEN C.Id IS NOT NULL THEN 1 END) AS CommentCount
    FROM 
        Posts P
    LEFT JOIN 
        Comments C ON P.Id = C.PostId
    GROUP BY 
        P.Id
),
UserPerformance AS (
    SELECT 
        U.UserId,
        SUM(CASE WHEN P.Score > 0 THEN P.Score ELSE 0 END) AS TotalPositiveScore,
        SUM(CASE WHEN P.Score < 0 THEN ABS(P.Score) ELSE 0 END) AS TotalNegativeScore,
        AVG(P.ViewCount) AS AvgViewCount
    FROM 
        UserStatistics U
    JOIN 
        Posts P ON U.UserId = P.OwnerUserId
    GROUP BY 
        U.UserId
)

SELECT 
    U.DisplayName,
    U.Reputation,
    U.Views,
    U.BadgeCount,
    PP.PostCount,
    PP.AcceptanceStatus,
    UPerf.TotalPositiveScore,
    UPerf.TotalNegativeScore,
    UPerf.AvgViewCount
FROM 
    UserStatistics U
LEFT JOIN (
    SELECT 
        UserId,
        COUNT(*) AS PostCount,
        MAX(Title) AS Title, 
        MIN(AcceptanceStatus) AS AcceptanceStatus 
    FROM 
        PostDetails
    GROUP BY 
        UserId
) PP ON U.UserId = PP.UserId
JOIN 
    UserPerformance UPerf ON U.UserId = UPerf.UserId
WHERE 
    U.Reputation > 100
ORDER BY 
    U.Reputation DESC,
    U.BadgeCount DESC,
    U.UserRank ASC
OFFSET 10 ROWS
FETCH NEXT 5 ROWS ONLY;