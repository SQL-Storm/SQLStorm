
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.OwnerUserId,
        RANK() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS PostRank,
        COUNT(c.Id) AS CommentCount,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes,
        (SELECT COUNT(*) FROM PostHistory ph WHERE ph.PostId = p.Id AND ph.PostHistoryTypeId = 10) AS CloseCount
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    WHERE 
        p.CreationDate >= DATEADD(year, -1, CAST('2024-10-01' AS DATE))
    GROUP BY 
        p.Id, p.Title, p.CreationDate, p.OwnerUserId
),
UserReputation AS (
    SELECT 
        u.Id AS UserId,
        u.Reputation,
        RANK() OVER (ORDER BY u.Reputation DESC) AS ReputationRank
    FROM 
        Users u
),
Aggregated AS (
    SELECT 
        rp.OwnerUserId,
        COUNT(rp.PostId) AS TotalPosts,
        SUM(rp.CommentCount) AS TotalComments,
        SUM(rp.UpVotes) AS TotalUpVotes,
        SUM(rp.DownVotes) AS TotalDownVotes,
        MAX(rp.CloseCount) AS MaxCloseCount,
        ur.ReputationRank
    FROM 
        RankedPosts rp
    JOIN 
        UserReputation ur ON rp.OwnerUserId = ur.UserId
    GROUP BY 
        rp.OwnerUserId, ur.ReputationRank
)
SELECT 
    ur.UserId,
    COALESCE(a.TotalPosts, 0) AS TotalPosts,
    COALESCE(a.TotalComments, 0) AS TotalComments,
    COALESCE(a.TotalUpVotes, 0) AS TotalUpVotes,
    COALESCE(a.TotalDownVotes, 0) AS TotalDownVotes,
    ur.ReputationRank,
    CASE 
        WHEN a.MaxCloseCount IS NULL THEN 'Active' 
        ELSE 'Closed' 
    END AS PostStatus
FROM 
    UserReputation ur
LEFT JOIN 
    Aggregated a ON ur.UserId = a.OwnerUserId
WHERE 
    ur.ReputationRank <= 20
ORDER BY 
    ur.ReputationRank;
