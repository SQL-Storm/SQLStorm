
WITH RankedPosts AS (
    SELECT p.Id AS PostId,
           p.Title,
           p.CreationDate,
           p.Score,
           p.ViewCount,
           u.DisplayName AS OwnerDisplayName,
           ROW_NUMBER() OVER (PARTITION BY pt.Name ORDER BY p.Score DESC, p.CreationDate DESC) AS RN
    FROM Posts p
    JOIN PostTypes pt ON p.PostTypeId = pt.Id
    JOIN Users u ON p.OwnerUserId = u.Id
    WHERE p.CreationDate > TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '30 days'
)
SELECT rp.PostId,
       rp.Title,
       rp.CreationDate,
       rp.Score,
       rp.ViewCount,
       rp.OwnerDisplayName,
       pt.Name AS PostType,
       COUNT(c.Id) AS CommentCount,
       SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVoteCount,
       SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVoteCount,
       COALESCE(MAX(bp.Name), 'No Badge') AS TopBadge
FROM RankedPosts rp
LEFT JOIN Comments c ON rp.PostId = c.PostId
LEFT JOIN Votes v ON rp.PostId = v.PostId
LEFT JOIN Badges bp ON rp.OwnerDisplayName = (SELECT u.DisplayName FROM Users u WHERE u.Id = bp.UserId) AND bp.Class = 1
WHERE rp.RN <= 5
GROUP BY rp.PostId, rp.Title, rp.CreationDate, rp.Score, rp.ViewCount, rp.OwnerDisplayName, pt.Name
ORDER BY rp.Score DESC, rp.ViewCount DESC;
