
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.Score,
        p.CreationDate,
        p.ViewCount,
        COUNT(DISTINCT c.Id) AS CommentCount,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS UserPostRank
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    WHERE 
        p.CreationDate >= CAST('2024-10-01 12:34:56' AS TIMESTAMP) - INTERVAL '1 year'
    GROUP BY 
        p.Id, p.Title, p.Score, p.CreationDate, p.ViewCount, p.OwnerUserId
),
UserVoteSummary AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS TotalUpVotes,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS TotalDownVotes,
        COUNT(DISTINCT v.PostId) AS TotalVotedPosts
    FROM 
        Users u
    LEFT JOIN 
        Votes v ON u.Id = v.UserId
    WHERE 
        u.Reputation > 100
    GROUP BY 
        u.Id, u.DisplayName
),
ClosedPosts AS (
    SELECT 
        p.Id AS ClosedPostId,
        MAX(ph.CreationDate) AS LastClosedDate,
        ARRAY_AGG(DISTINCT cr.Name) AS CloseReasons
    FROM 
        Posts p
    INNER JOIN 
        PostHistory ph ON p.Id = ph.PostId
    INNER JOIN 
        CloseReasonTypes cr ON (CAST(ph.Comment AS INTEGER) = cr.Id AND ph.PostHistoryTypeId IN (10, 11)) 
    WHERE 
        ph.CreationDate >= CAST('2024-10-01 12:34:56' AS TIMESTAMP) - INTERVAL '6 months'
    GROUP BY 
        p.Id
)
SELECT 
    rp.PostId,
    rp.Title,
    rp.Score,
    rp.ViewCount,
    us.DisplayName AS TopVoter,
    us.TotalUpVotes,
    us.TotalDownVotes,
    us.TotalVotedPosts,
    cp.ClosedPostId,
    cp.LastClosedDate,
    cp.CloseReasons
FROM 
    RankedPosts rp
LEFT JOIN 
    UserVoteSummary us ON rp.UserPostRank = 1 AND rp.OwnerUserId = us.UserId
LEFT JOIN 
    ClosedPosts cp ON rp.PostId = cp.ClosedPostId
WHERE 
    (rp.Score > 0 AND cp.ClosedPostId IS NULL) 
   OR 
    (rp.ViewCount > 100 AND cp.ClosedPostId IS NOT NULL)
ORDER BY 
    rp.Score DESC, (us.TotalUpVotes - us.TotalDownVotes) DESC
LIMIT 50;
