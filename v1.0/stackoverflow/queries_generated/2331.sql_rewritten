WITH RankedPosts AS (
    SELECT 
        p.Id,
        p.Title,
        p.CreationDate,
        p.Score,
        p.AnswerCount,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) as RecentPostRank
    FROM 
        Posts p
    WHERE 
        p.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 year'
), 
UserStatistics AS (
    SELECT 
        u.Id as UserId,
        u.DisplayName,
        u.Reputation,
        COALESCE(SUM(v.BountyAmount), 0) AS TotalBounties,
        COUNT(b.Id) AS BadgeCount,
        AVG(p.Score) AS AveragePostScore
    FROM 
        Users u
    LEFT JOIN 
        Votes v ON u.Id = v.UserId
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    LEFT JOIN 
        Posts p ON u.Id = p.OwnerUserId 
    GROUP BY 
        u.Id, u.DisplayName, u.Reputation
), 
PostClosure AS (
    SELECT 
        p.Id AS PostId,
        STRING_AGG(DISTINCT c.Text, ', ') AS CloseReasons
    FROM 
        Posts p
    LEFT JOIN 
        PostHistory ph ON p.Id = ph.PostId AND ph.PostHistoryTypeId = 10
    LEFT JOIN 
        CloseReasonTypes c ON ph.Comment::int = c.Id
    GROUP BY 
        p.Id
)
SELECT 
    u.UserId,
    u.DisplayName,
    u.Reputation,
    u.TotalBounties,
    u.BadgeCount,
    u.AveragePostScore,
    rp.Title AS MostRecentPost,
    rp.Score AS MostRecentScore,
    pc.CloseReasons
FROM 
    UserStatistics u
LEFT JOIN 
    RankedPosts rp ON u.UserId = rp.RecentPostRank
LEFT JOIN 
    PostClosure pc ON rp.Id = pc.PostId
WHERE 
    u.Reputation > (
        SELECT 
            AVG(Reputation) 
        FROM 
            Users 
        WHERE 
            Reputation IS NOT NULL
    )
ORDER BY 
    u.Reputation DESC
LIMIT 10;