WITH FilteredPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.Body,
        p.Tags,
        p.CreationDate,
        u.DisplayName AS OwnerDisplayName,
        COALESCE((SELECT COUNT(*) FROM Comments c WHERE c.PostId = p.Id), 0) AS CommentCount,
        COALESCE((SELECT COUNT(*) FROM Posts a WHERE a.ParentId = p.Id), 0) AS AnswerCount,
        COALESCE((SELECT SUM(Score) FROM Votes v WHERE v.PostId = p.Id AND v.VoteTypeId IN (2, 3)), 0) AS ScoreSum
    FROM 
        Posts p
    JOIN 
        Users u ON p.OwnerUserId = u.Id
    WHERE 
        p.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 year'
        AND p.PostTypeId = 1
),
TagStats AS (
    SELECT 
        UNNEST(string_to_array(Tags, ',')) AS TagName,
        COUNT(*) AS PostCount
    FROM 
        FilteredPosts
    GROUP BY 
        TagName
),
UserStats AS (
    SELECT 
        OwnerDisplayName,
        COUNT(PostId) AS TotalPosts,
        SUM(CommentCount) AS TotalComments,
        SUM(AnswerCount) AS TotalAnswers,
        SUM(ScoreSum) AS TotalScore
    FROM 
        FilteredPosts
    GROUP BY 
        OwnerDisplayName
),
RankedUsers AS (
    SELECT 
        *,
        RANK() OVER (ORDER BY TotalScore DESC) AS Rank
    FROM 
        UserStats
)
SELECT 
    r.Rank,
    r.OwnerDisplayName,
    r.TotalPosts AS Posts,
    r.TotalComments AS Comments,
    r.TotalAnswers AS Answers,
    r.TotalScore AS Score,
    t.TagName,
    t.PostCount
FROM 
    RankedUsers r
LEFT JOIN 
    TagStats t ON t.PostCount > 10  
ORDER BY 
    r.Rank, t.PostCount DESC;