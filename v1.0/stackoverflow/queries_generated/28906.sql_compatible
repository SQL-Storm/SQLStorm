
WITH TagStats AS (
    SELECT
        t.TagName,
        COUNT(DISTINCT p.Id) AS PostCount,
        SUM(COALESCE(p.ViewCount, 0)) AS TotalViews,
        SUM(COALESCE(p.Score, 0)) AS TotalScore,
        AVG(COALESCE(p.AcceptedAnswerId, NULL)) AS AvgAcceptedAnswers,
        MAX(p.CreationDate) AS MostRecentPostDate
    FROM Tags t
    LEFT JOIN Posts p ON p.Tags LIKE CONCAT('%', t.TagName, '%')
    WHERE t.IsModeratorOnly = 0
    GROUP BY t.TagName
),
UserStats AS (
    SELECT
        u.Id AS UserId,
        u.DisplayName,
        COUNT(DISTINCT p.Id) AS TotalPosts,
        SUM(COALESCE(c.Score, 0)) AS TotalComments,
        SUM(COALESCE(b.Class, 0)) AS TotalBadges,
        SUM(u.UpVotes) AS TotalUpVotes,
        SUM(u.DownVotes) AS TotalDownVotes
    FROM Users u
    LEFT JOIN Posts p ON p.OwnerUserId = u.Id
    LEFT JOIN Comments c ON c.UserId = u.Id
    LEFT JOIN Badges b ON b.UserId = u.Id
    GROUP BY u.Id, u.DisplayName
),
PopularTags AS (
    SELECT
        ts.TagName,
        ts.PostCount,
        ts.TotalViews,
        ts.TotalScore,
        us.UserId,
        us.DisplayName,
        us.TotalPosts,
        us.TotalComments,
        us.TotalBadges
    FROM TagStats ts
    JOIN UserStats us ON us.TotalPosts > 0
    WHERE ts.PostCount > 10
    ORDER BY ts.TotalViews DESC, ts.TotalScore DESC
)

SELECT 
    pt.TagName,
    pt.PostCount,
    pt.TotalViews,
    pt.TotalScore,
    pt.UserId,
    pt.DisplayName,
    pt.TotalPosts,
    pt.TotalComments,
    pt.TotalBadges
FROM PopularTags pt
WHERE pt.TotalScore > 100
AND pt.TotalPosts > 5
ORDER BY pt.TotalViews DESC, pt.TotalScore DESC;
