WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Score,
        u.DisplayName AS OwnerDisplayName,
        COUNT(c.Id) AS TotalComments,
        COUNT(DISTINCT v.Id) AS TotalVotes,
        ROW_NUMBER() OVER (PARTITION BY p.PostTypeId ORDER BY p.Score DESC, p.CreationDate DESC) AS Rank
    FROM 
        Posts p
    JOIN 
        Users u ON p.OwnerUserId = u.Id
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    WHERE 
        p.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '30 days'
    GROUP BY 
        p.Id, p.Title, p.CreationDate, p.Score, u.DisplayName
), TopRankedPosts AS (
    SELECT 
        PostId,
        Title,
        CreationDate,
        Score,
        OwnerDisplayName,
        TotalComments,
        TotalVotes,
        Rank
    FROM 
        RankedPosts
    WHERE 
        Rank <= 5
)
SELECT 
    trp.Title,
    trp.CreationDate,
    trp.Score,
    trp.OwnerDisplayName,
    trp.TotalComments,
    trp.TotalVotes,
    pt.Name AS PostTypeName,
    ht.Name AS HistoryTypeName,
    STRING_AGG(ht.Name, ', ') AS HistoryTypes
FROM 
    TopRankedPosts trp
JOIN 
    PostTypes pt ON trp.PostTypeId = pt.Id
LEFT JOIN 
    PostHistory ph ON trp.PostId = ph.PostId
LEFT JOIN 
    PostHistoryTypes ht ON ph.PostHistoryTypeId = ht.Id
GROUP BY 
    trp.PostId, trp.Title, trp.CreationDate, trp.Score, trp.OwnerDisplayName, trp.TotalComments, trp.TotalVotes, pt.Name
ORDER BY 
    trp.Score DESC;