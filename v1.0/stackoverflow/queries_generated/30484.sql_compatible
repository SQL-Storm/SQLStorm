
WITH RecursivePosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Score,
        p.ViewCount,
        p.OwnerUserId,
        1 AS Level
    FROM 
        Posts p
    WHERE 
        p.PostTypeId = 1 
    
    UNION ALL
    
    SELECT 
        p.Id,
        p.Title,
        p.CreationDate,
        p.Score,
        p.ViewCount,
        p.OwnerUserId,
        rp.Level + 1
    FROM 
        Posts p
    INNER JOIN 
        RecursivePosts rp ON p.ParentId = rp.PostId
),
UserStats AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COALESCE(SUM(v.BountyAmount), 0) AS TotalBounty,
        COALESCE(COUNT(b.Id), 0) AS BadgeCount,
        COALESCE(COUNT(DISTINCT p.Id), 0) AS QuestionCount,
        COALESCE(COUNT(DISTINCT ans.Id), 0) AS AnswerCount
    FROM 
        Users u
    LEFT JOIN 
        Votes v ON u.Id = v.UserId
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    LEFT JOIN 
        Posts p ON u.Id = p.OwnerUserId AND p.PostTypeId = 1
    LEFT JOIN 
        Posts ans ON p.Id = ans.ParentId
    GROUP BY 
        u.Id, u.DisplayName
),
RankedPosts AS (
    SELECT 
        rp.PostId,
        rp.Title,
        rp.CreationDate,
        rp.Score,
        rp.ViewCount,
        u.DisplayName AS OwnerDisplay,
        ROW_NUMBER() OVER (PARTITION BY u.Id ORDER BY rp.Score DESC) AS Rank,
        u.Reputation,
        rp.OwnerUserId -- Added to GROUP BY in final query
    FROM 
        RecursivePosts rp
    JOIN 
        Users u ON rp.OwnerUserId = u.Id
    WHERE 
        rp.Level = 1
),
PostHistoryWithComments AS (
    SELECT 
        ph.PostId, 
        ph.CreationDate,
        ph.Comment, 
        COUNT(c.Id) AS CommentCount
    FROM 
        PostHistory ph
    LEFT JOIN 
        Comments c ON ph.PostId = c.PostId
    WHERE 
        ph.PostHistoryTypeId IN (10, 11) 
    GROUP BY 
        ph.PostId, ph.CreationDate, ph.Comment
)
SELECT 
    pp.Title AS PostTitle,
    pp.CreationDate,
    phc.CreationDate AS HistoryDate,
    phc.Comment AS HistoryComment,
    us.DisplayName AS User,
    us.TotalBounty,
    us.BadgeCount,
    us.QuestionCount,
    us.AnswerCount,
    RANK() OVER (ORDER BY us.TotalBounty DESC) AS UserBountyRank
FROM 
    RankedPosts pp
JOIN 
    UserStats us ON pp.OwnerUserId = us.UserId
JOIN 
    PostHistoryWithComments phc ON pp.PostId = phc.PostId
WHERE 
    pp.Rank <= 5 
ORDER BY 
    pp.Rank, us.TotalBounty DESC;
