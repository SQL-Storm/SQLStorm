
WITH RECURSIVE UserHierarchy AS (
    SELECT Id, Reputation, CreationDate, 
           DisplayName, Location, 
           CAST(DisplayName AS VARCHAR(100)) AS HierarchyPath
    FROM Users
    WHERE Reputation > 500 
    UNION ALL
    SELECT u.Id, u.Reputation, u.CreationDate, 
           u.DisplayName, u.Location, 
           CONCAT(uh.HierarchyPath, ' -> ', u.DisplayName)
    FROM Users u
    INNER JOIN UserHierarchy uh ON u.Id = uh.Id + 1 
    WHERE u.Reputation > 500
),
PostStats AS (
    SELECT p.Id AS PostId, p.OwnerUserId, 
           COUNT(c.Id) AS CommentCount, 
           SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes,
           SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes,
           SUM(CASE WHEN v.VoteTypeId = 6 THEN 1 ELSE 0 END) AS CloseVotes
    FROM Posts p
    LEFT JOIN Comments c ON p.Id = c.PostId
    LEFT JOIN Votes v ON p.Id = v.PostId
    GROUP BY p.Id, p.OwnerUserId
),
RankedPosts AS (
    SELECT ps.PostId, ps.OwnerUserId, 
           ps.CommentCount, ps.UpVotes, ps.DownVotes, ps.CloseVotes,
           RANK() OVER (PARTITION BY ps.OwnerUserId ORDER BY ps.UpVotes DESC) AS VoteRank
    FROM PostStats ps
),
ActiveUsers AS (
    SELECT u.Id, u.DisplayName,
           COALESCE(SUM(ps.UpVotes), 0) AS TotalUpVotes,
           COALESCE(SUM(ps.DownVotes), 0) AS TotalDownVotes
    FROM Users u
    LEFT JOIN RankedPosts ps ON u.Id = ps.OwnerUserId
    GROUP BY u.Id, u.DisplayName
    HAVING COALESCE(SUM(ps.UpVotes), 0) > 10 
)
SELECT uh.Id AS UserId, uh.DisplayName, uh.Reputation, uh.HierarchyPath, 
       COALESCE(au.TotalUpVotes, 0) AS TotalUpVotes, 
       COALESCE(au.TotalDownVotes, 0) AS TotalDownVotes
FROM UserHierarchy uh
LEFT JOIN ActiveUsers au ON uh.Id = au.UserId
WHERE uh.Reputation BETWEEN 500 AND 10000 
ORDER BY uh.Reputation DESC, uh.HierarchyPath;
