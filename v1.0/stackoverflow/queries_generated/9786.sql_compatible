
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.Score,
        p.CreationDate,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC) AS PostRank,
        COUNT(v.Id) AS VoteCount,
        COUNT(c.Id) AS CommentCount,
        SUM(CASE WHEN ph.PostHistoryTypeId = 10 THEN 1 ELSE 0 END) AS CloseCount,
        SUM(CASE WHEN ph.PostHistoryTypeId = 11 THEN 1 ELSE 0 END) AS ReopenCount
    FROM 
        Posts p
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        PostHistory ph ON p.Id = ph.PostId
    WHERE 
        p.CreationDate > '2024-10-01 12:34:56'::timestamp - INTERVAL '1 year'
    GROUP BY 
        p.Id, p.Title, p.Score, p.CreationDate, p.OwnerUserId
), 
UserBadges AS (
    SELECT 
        b.UserId,
        COUNT(b.Id) AS BadgeCount
    FROM 
        Badges b
    GROUP BY 
        b.UserId
),
TopUsers AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        u.Reputation,
        ub.BadgeCount,
        RANK() OVER (ORDER BY u.Reputation DESC) AS UserRank
    FROM 
        Users u
    LEFT JOIN 
        UserBadges ub ON u.Id = ub.UserId
    WHERE 
        u.CreationDate < '2024-10-01 12:34:56'::timestamp - INTERVAL '1 month'
)
SELECT 
    up.DisplayName AS UserName,
    up.Reputation AS UserReputation,
    rp.Title AS PostTitle,
    rp.Score AS PostScore,
    rp.VoteCount AS TotalVotes,
    rp.CommentCount AS TotalComments,
    rp.CloseCount AS TotalCloseVotes,
    rp.ReopenCount AS TotalReopenVotes,
    rp.PostRank AS UserPostRank
FROM 
    RankedPosts rp
JOIN 
    TopUsers up ON rp.OwnerUserId = up.UserId
WHERE 
    rp.PostRank <= 5
ORDER BY 
    up.UserRank, rp.Score DESC;
