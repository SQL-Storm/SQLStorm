
WITH UserReputation AS (
    SELECT 
        Id,
        Reputation,
        ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS Rank,
        LEAD(Reputation) OVER (ORDER BY Reputation DESC) AS NextHighestReputation
    FROM 
        Users
),
PostActivity AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        COALESCE(SUM(CASE WHEN vote.VoteTypeId = 2 THEN 1 ELSE 0 END) - SUM(CASE WHEN vote.VoteTypeId = 3 THEN 1 ELSE 0 END), 0) AS NetScore,
        COUNT(c.Id) AS CommentCount,
        COUNT(DISTINCT pl.RelatedPostId) AS RelatedPostCount
    FROM 
        Posts p
    LEFT JOIN 
        Votes vote ON p.Id = vote.PostId
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        PostLinks pl ON p.Id = pl.PostId
    WHERE 
        p.CreationDate >= (CAST('2024-10-01 12:34:56' AS TIMESTAMP) - INTERVAL '30 days') 
    GROUP BY 
        p.Id, p.Title, p.CreationDate
),
PostHistoryDetails AS (
    SELECT 
        ph.PostId,
        STRING_AGG(DISTINCT pht.Name, ', ') AS HistoryTypes,
        COUNT(*) AS EditCount,
        MAX(ph.CreationDate) AS LastEditDate
    FROM 
        PostHistory ph
    JOIN 
        PostHistoryTypes pht ON ph.PostHistoryTypeId = pht.Id
    WHERE 
        ph.Comment IS NOT NULL 
    GROUP BY 
        ph.PostId
)
SELECT 
    u.DisplayName,
    ur.Reputation,
    ur.Rank,
    p.Title,
    pa.NetScore,
    pa.CommentCount,
    phd.HistoryTypes,
    phd.EditCount,
    phd.LastEditDate,
    (SELECT COUNT(*) FROM Posts WHERE OwnerUserId = u.Id AND PostTypeId = 1) AS QuestionCount
FROM 
    Users u
JOIN 
    UserReputation ur ON u.Id = ur.Id
LEFT JOIN
    PostActivity pa ON pa.PostId IN (
        SELECT pl.PostId
        FROM PostLinks pl
        WHERE pl.RelatedPostId IN (
            SELECT Id FROM Posts WHERE PostTypeId = 1
        )
    )
LEFT JOIN 
    PostHistoryDetails phd ON phd.PostId IN (
        SELECT p.Id
        FROM Posts p 
        WHERE p.OwnerUserId = u.Id
    )
WHERE 
    ur.Reputation BETWEEN 100 AND 1000
    AND (ur.NextHighestReputation IS NULL OR ur.Reputation >= ur.NextHighestReputation * 0.5)
ORDER BY 
    ur.Rank, pa.NetScore DESC;
