
WITH RecursiveUserPostCounts AS (
    SELECT 
        u.Id AS UserId,
        COUNT(p.Id) AS PostCount
    FROM 
        Users u
    LEFT JOIN 
        Posts p ON u.Id = p.OwnerUserId
    GROUP BY 
        u.Id
),
FilteredBadges AS (
    SELECT 
        UserId,
        COUNT(*) AS BadgeCount,
        SUM(CASE WHEN Class = 1 THEN 1 ELSE 0 END) AS GoldBadges,
        SUM(CASE WHEN Class = 2 THEN 1 ELSE 0 END) AS SilverBadges,
        SUM(CASE WHEN Class = 3 THEN 1 ELSE 0 END) AS BronzeBadges
    FROM 
        Badges
    GROUP BY 
        UserId
),
TopUsers AS (
    SELECT 
        u.Id,
        u.DisplayName,
        COALESCE(ub.PostCount, 0) AS PostCount,
        COALESCE(b.BadgeCount, 0) AS BadgeCount,
        COALESCE(b.GoldBadges, 0) AS GoldBadges,
        COALESCE(b.SilverBadges, 0) AS SilverBadges,
        COALESCE(b.BronzeBadges, 0) AS BronzeBadges
    FROM 
        Users u
    LEFT JOIN 
        RecursiveUserPostCounts ub ON u.Id = ub.UserId
    LEFT JOIN 
        FilteredBadges b ON u.Id = b.UserId
    WHERE 
        u.Reputation > 1000
),
MostActiveUsers AS (
    SELECT 
        DisplayName,
        PostCount,
        BadgeCount,
        ROW_NUMBER() OVER (ORDER BY PostCount DESC, BadgeCount DESC) AS Rank
    FROM 
        TopUsers
)
SELECT 
    mu.DisplayName,
    mu.PostCount,
    mu.BadgeCount,
    COALESCE(mu.GoldBadges, 0) AS GoldBadges,
    COALESCE(mu.SilverBadges, 0) AS SilverBadges,
    COALESCE(mu.BronzeBadges, 0) AS BronzeBadges,
    (SELECT COUNT(*) FROM Posts p WHERE p.OwnerUserId = mu.Id AND p.CreationDate >= (CAST('2024-10-01 12:34:56' AS timestamp) - INTERVAL '30 days')) AS RecentPostCount,
    (SELECT SUM(v.BountyAmount) FROM Votes v WHERE v.UserId = mu.Id) AS TotalBountyAmount
FROM 
    MostActiveUsers mu
WHERE 
    mu.Rank <= 10
ORDER BY 
    mu.Rank;
