
WITH RankedPosts AS (
    SELECT 
        p.Id,
        p.Title,
        p.CreationDate,
        p.Score,
        p.ViewCount,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS rn
    FROM 
        Posts p
    JOIN 
        Users u ON p.OwnerUserId = u.Id
    WHERE 
        u.Reputation > 1000
),
TagCounts AS (
    SELECT 
        Tag,
        COUNT(*) AS TagUsage
    FROM 
        (SELECT 
            unnest(string_to_array(SUBSTRING(Tags FROM 2 FOR LENGTH(Tags) - 2), '><')) AS Tag
         FROM 
            Posts 
         WHERE 
            PostTypeId = 1) AS Tags
    GROUP BY 
        Tag
),
RecentActivity AS (
    SELECT 
        p.Id,
        (SELECT COUNT(*) FROM Comments c WHERE c.PostId = p.Id) AS CommentCount,
        (SELECT COUNT(*) FROM Votes v WHERE v.PostId = p.Id AND v.VoteTypeId = 2) AS UpvoteCount,
        (SELECT COUNT(*) FROM Votes v WHERE v.PostId = p.Id AND v.VoteTypeId = 3) AS DownvoteCount
    FROM 
        Posts p
    WHERE 
        p.CreationDate > TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '30 days'
)
SELECT 
    rp.Title,
    rp.CreationDate,
    rp.Score,
    rp.ViewCount,
    tc.Tag,
    tc.TagUsage,
    ra.CommentCount,
    ra.UpvoteCount,
    ra.DownvoteCount,
    COALESCE(ra.UpvoteCount - ra.DownvoteCount, 0) AS NetScore
FROM 
    RankedPosts rp
JOIN 
    TagCounts tc ON tc.Tag IN (SELECT 
                                   unnest(string_to_array(SUBSTRING(rp.Tags FROM 2 FOR LENGTH(rp.Tags) - 2), '><')))
                               )
LEFT JOIN 
    RecentActivity ra ON ra.Id = rp.Id
WHERE 
    rp.rn = 1
    AND (rp.Score > 10 OR ra.CommentCount > 5)
ORDER BY 
    rp.Score DESC, 
    ra.CommentCount DESC
LIMIT 50;
