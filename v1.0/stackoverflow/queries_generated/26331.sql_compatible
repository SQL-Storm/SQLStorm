
WITH UserReputation AS (
    SELECT
        u.Id AS UserId,
        u.DisplayName,
        u.Reputation,
        u.CreationDate,
        COUNT(b.Id) AS BadgeCount,
        SUM(CASE WHEN b.Class = 1 THEN 1 ELSE 0 END) AS GoldBadges,
        SUM(CASE WHEN b.Class = 2 THEN 1 ELSE 0 END) AS SilverBadges,
        SUM(CASE WHEN b.Class = 3 THEN 1 ELSE 0 END) AS BronzeBadges
    FROM
        Users u
    LEFT JOIN
        Badges b ON u.Id = b.UserId
    GROUP BY
        u.Id, u.DisplayName, u.Reputation, u.CreationDate
),
PopularTags AS (
    SELECT
        t.TagName,
        COUNT(p.Id) AS PostCount
    FROM
        Tags t
    JOIN
        Posts p ON p.Tags LIKE CONCAT('%', t.TagName, '%')
    GROUP BY
        t.TagName
    HAVING
        COUNT(p.Id) > 10
),
TopPosts AS (
    SELECT
        p.Id AS PostId,
        p.Title,
        p.Score,
        p.ViewCount,
        p.AnswerCount,
        p.CommentCount,
        STRING_AGG(t.TagName, ', ') AS Tags,
        ROW_NUMBER() OVER (ORDER BY p.Score DESC, p.ViewCount DESC) AS Rank
    FROM
        Posts p
    JOIN
        Tags t ON p.Tags LIKE CONCAT('%', t.TagName, '%')
    WHERE
        p.PostTypeId = 1 AND p.Score > 0
    GROUP BY
        p.Id, p.Title, p.Score, p.ViewCount, p.AnswerCount, p.CommentCount
    HAVING
        COUNT(t.Id) > 0
),
UserPostStats AS (
    SELECT
        u.Id AS UserId,
        u.DisplayName,
        COUNT(p.Id) AS PostCount,
        SUM(CASE WHEN p.PostTypeId = 1 THEN 1 ELSE 0 END) AS Questions,
        SUM(CASE WHEN p.PostTypeId = 2 THEN 1 ELSE 0 END) AS Answers,
        SUM(CASE WHEN p.PostTypeId = 2 AND p.AcceptedAnswerId IS NOT NULL THEN 1 ELSE 0 END) AS AcceptedAnswers
    FROM
        Users u
    LEFT JOIN
        Posts p ON u.Id = p.OwnerUserId
    GROUP BY
        u.Id, u.DisplayName
),
BenchmarkResults AS (
    SELECT
        u.UserId,
        u.DisplayName,
        u.Reputation,
        u.BadgeCount AS Badges,
        SUM(p.ViewCount) AS TotalViews,
        COUNT(p.Id) AS TotalPosts,
        SUM(CASE WHEN p.CreatedAt >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '30 days' THEN 1 ELSE 0 END) AS RecentPosts
    FROM
        UserReputation u
    JOIN
        UserPostStats p ON u.UserId = p.UserId
    GROUP BY
        u.UserId, u.DisplayName, u.Reputation, u.BadgeCount
)
SELECT
    b.UserId,
    b.DisplayName,
    b.Reputation,
    b.Badges,
    b.TotalViews,
    b.TotalPosts,
    b.RecentPosts,
    tp.Title AS TopPostTitle,
    tp.Score AS TopPostScore,
    tp.ViewCount AS TopPostViews
FROM
    BenchmarkResults b
LEFT JOIN
    TopPosts tp ON b.UserId = tp.OwnerUserId
WHERE
    b.Reputation > 1000
ORDER BY
    b.TotalViews DESC, b.Reputation DESC
LIMIT 10;
