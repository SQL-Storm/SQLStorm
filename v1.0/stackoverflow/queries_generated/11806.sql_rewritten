WITH PostMetrics AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Score,
        p.ViewCount,
        p.AnswerCount,
        p.CommentCount,
        p.FavoriteCount,
        COALESCE(u.DisplayName, 'Community User') AS OwnerDisplayName,
        COUNT(DISTINCT c.Id) AS CommentCount,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes
    FROM 
        Posts p
    LEFT JOIN 
        Users u ON p.OwnerUserId = u.Id
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    WHERE 
        p.CreationDate >= DATEADD(year, -1, GETDATE())  
    GROUP BY 
        p.Id, p.Title, p.CreationDate, p.Score, p.ViewCount, 
        p.AnswerCount, p.CommentCount, p.FavoriteCount, u.DisplayName
)

SELECT 
    OwnerDisplayName,
    COUNT(PostId) AS TotalPosts,
    AVG(Score) AS AverageScore,
    SUM(ViewCount) AS TotalViewCount,
    SUM(AnswerCount) AS TotalAnswers,
    SUM(CommentCount) AS TotalComments,
    SUM(FavoriteCount) AS TotalFavorites,
    SUM(UpVotes) AS TotalUpVotes,
    SUM(DownVotes) AS TotalDownVotes
FROM 
    PostMetrics
GROUP BY 
    OwnerDisplayName
ORDER BY 
    TotalPosts DESC
LIMIT 10;