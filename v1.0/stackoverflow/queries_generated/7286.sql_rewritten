WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId, 
        p.Title, 
        p.Score, 
        p.ViewCount, 
        p.CreationDate, 
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC) AS Rank
    FROM 
        Posts p
    JOIN 
        Users u ON p.OwnerUserId = u.Id
    WHERE 
        p.PostTypeId = 1 
        AND u.Reputation > 0
),
TopPosts AS (
    SELECT 
        rp.PostId, 
        rp.Title, 
        rp.Score, 
        rp.ViewCount, 
        rp.CreationDate 
    FROM 
        RankedPosts rp
    WHERE 
        rp.Rank <= 5
),
PostScores AS (
    SELECT 
        tp.PostId, 
        tp.Title, 
        tp.Score, 
        tp.ViewCount, 
        COALESCE(SUM(v.VoteTypeId = 2), 0) AS UpVotes, 
        COALESCE(SUM(v.VoteTypeId = 3), 0) AS DownVotes 
    FROM 
        TopPosts tp
    LEFT JOIN 
        Votes v ON tp.PostId = v.PostId
    GROUP BY 
        tp.PostId, tp.Title, tp.Score, tp.ViewCount
)
SELECT 
    ps.Title, 
    ps.Score, 
    ps.ViewCount, 
    ps.UpVotes, 
    ps.DownVotes, 
    (ps.UpVotes - ps.DownVotes) AS NetVotes 
FROM 
    PostScores ps
ORDER BY 
    ps.Score DESC, ps.ViewCount DESC;