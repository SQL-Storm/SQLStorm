WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.Body,
        STRING_AGG(DISTINCT t.TagName, ', ') AS Tags,
        COUNT(DISTINCT c.Id) AS CommentCount,
        COUNT(DISTINCT a.Id) AS AnswerCount,
        MAX(v.CreationDate) AS LastVoteDate,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY MAX(v.CreationDate) DESC) AS PostRank
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON c.PostId = p.Id
    LEFT JOIN 
        Posts a ON a.ParentId = p.Id AND a.PostTypeId = 2
    LEFT JOIN 
        Votes v ON v.PostId = p.Id
    LEFT JOIN 
        STRING_TO_ARRAY(p.Tags, ',') AS tagArray ON TRUE
    LEFT JOIN 
        Tags t ON t.TagName = TRIM(BOTH ' ' FROM tagArray.value)
    WHERE 
        p.CreationDate >= cast('2024-10-01' as date) - INTERVAL '1 year'
        AND p.PostTypeId IN (1, 2) 
    GROUP BY 
        p.Id, p.Title, p.Body, p.OwnerUserId
),
UserPostTotals AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        SUM(CASE WHEN rp.PostRank IS NOT NULL THEN 1 ELSE 0 END) AS TotalPosts,
        SUM(rp.AnswerCount) AS TotalAnswers,
        SUM(rp.CommentCount) AS TotalComments,
        MAX(rp.LastVoteDate) AS LastVote
    FROM 
        Users u
    LEFT JOIN 
        RankedPosts rp ON u.Id = rp.OwnerUserId
    GROUP BY 
        u.Id, u.DisplayName
)
SELECT 
    up.UserId,
    up.DisplayName,
    up.TotalPosts,
    up.TotalAnswers,
    up.TotalComments,
    COALESCE(TO_CHAR(up.LastVote, 'YYYY-MM-DD HH24:MI:SS'), 'Never') AS LastVote
FROM 
    UserPostTotals up
WHERE 
    up.TotalPosts > 0
ORDER BY 
    up.TotalPosts DESC, up.TotalAnswers DESC
LIMIT 10;