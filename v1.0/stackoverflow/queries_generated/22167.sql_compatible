
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Score,
        ROW_NUMBER() OVER(PARTITION BY p.PostTypeId ORDER BY p.Score DESC) AS Rank
    FROM Posts p
    WHERE p.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 year'
),
UserEngagement AS (
    SELECT 
        u.Id AS UserId,
        COUNT(DISTINCT c.Id) AS CommentCount,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS Upvotes,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS Downvotes,
        SUM(b.Class = 1) AS GoldBadges
    FROM Users u
    LEFT JOIN Comments c ON u.Id = c.UserId
    LEFT JOIN Votes v ON u.Id = v.UserId
    LEFT JOIN Badges b ON u.Id = b.UserId
    WHERE u.CreationDate < TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '6 months'
    GROUP BY u.Id
),
PostHistoryDetails AS (
    SELECT 
        ph.PostId,
        MAX(CASE WHEN ph.PostHistoryTypeId = 10 THEN ph.CreationDate END) AS CloseDate,
        MAX(CASE WHEN ph.PostHistoryTypeId = 11 THEN ph.CreationDate END) AS ReopenDate,
        COUNT(CASE WHEN ph.PostHistoryTypeId IN (10, 11) THEN 1 END) AS CloseReopenCount
    FROM PostHistory ph
    GROUP BY ph.PostId
),
FinalResults AS (
    SELECT 
        rp.PostId,
        rp.Title,
        ue.UserId,
        ue.CommentCount,
        ue.Upvotes,
        ue.Downvotes,
        COALESCE(ph.CloseDate, NULL) AS LastClosed,
        COALESCE(ph.ReopenDate, NULL) AS LastReopened,
        COALESCE(ph.CloseReopenCount, 0) AS ClosureReopenCount,
        CASE 
            WHEN rp.Rank = 1 THEN 'Top' 
            WHEN rp.Rank <= 5 THEN 'High'
            ELSE 'Others' 
        END AS PostCategory
    FROM RankedPosts rp
    LEFT JOIN UserEngagement ue ON ue.UserId = rp.PostId
    LEFT JOIN PostHistoryDetails ph ON ph.PostId = rp.PostId
)

SELECT 
    PostId,
    Title,
    UserId,
    CommentCount,
    Upvotes,
    Downvotes,
    LastClosed,
    LastReopened,
    ClosureReopenCount,
    PostCategory
FROM FinalResults
WHERE ClosureReopenCount > 0
ORDER BY Upvotes DESC, PostId DESC
LIMIT 100;
