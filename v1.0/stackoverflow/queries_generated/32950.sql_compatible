
WITH RecursivePostHierarchy AS (
    SELECT 
        Id, 
        Title, 
        ParentId, 
        CreationDate, 
        Score, 
        OwnerUserId,
        1 AS Level
    FROM Posts
    WHERE ParentId IS NULL

    UNION ALL

    SELECT 
        p.Id, 
        p.Title, 
        p.ParentId, 
        p.CreationDate, 
        p.Score, 
        p.OwnerUserId,
        rp.Level + 1
    FROM Posts p
    INNER JOIN RecursivePostHierarchy rp ON p.ParentId = rp.Id
),
UserActivity AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COUNT(DISTINCT p.Id) AS TotalPosts,
        SUM(CASE WHEN p.PostTypeId = 1 THEN 1 ELSE 0 END) AS Questions,
        SUM(CASE WHEN p.PostTypeId = 2 THEN 1 ELSE 0 END) AS Answers,
        SUM(CASE WHEN p.PostTypeId = 2 AND p.AcceptedAnswerId IS NOT NULL THEN 1 ELSE 0 END) AS AcceptedAnswers,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS Upvotes,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS Downvotes
    FROM Users u
    LEFT JOIN Posts p ON u.Id = p.OwnerUserId
    LEFT JOIN Votes v ON p.Id = v.PostId
    GROUP BY u.Id, u.DisplayName
),
PostWithHistory AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        h.PostHistoryTypeId,
        h.CreationDate AS HistoryDate,
        ROW_NUMBER() OVER (PARTITION BY p.Id ORDER BY h.CreationDate DESC) AS RowNum
    FROM Posts p
    LEFT JOIN PostHistory h ON p.Id = h.PostId
)
SELECT 
    u.DisplayName,
    ua.TotalPosts,
    ua.Questions,
    ua.Answers,
    ua.AcceptedAnswers,
    ua.Upvotes,
    ua.Downvotes,
    COUNT(DISTINCT pwh.PostId) AS HistoryChanges,
    COALESCE(SUM(rp.Score), 0) AS TotalScore,
    STRING_AGG(DISTINCT pt.Name, ', ') AS PostTypes,
    MAX(pwh.HistoryDate) AS LastActivityDate
FROM UserActivity ua
JOIN Users u ON ua.UserId = u.Id
LEFT JOIN Posts p ON u.Id = p.OwnerUserId
LEFT JOIN PostWithHistory pwh ON p.Id = pwh.PostId AND pwh.RowNum = 1
LEFT JOIN RecursivePostHierarchy rp ON p.Id = rp.Id OR p.Id = rp.ParentId
LEFT JOIN PostHistoryTypes pt ON pwh.PostHistoryTypeId = pt.Id
GROUP BY u.Id, u.DisplayName, ua.TotalPosts, ua.Questions, ua.Answers, ua.AcceptedAnswers, ua.Upvotes, ua.Downvotes
HAVING SUM(ua.Questions) > 5
ORDER BY TotalScore DESC, u.Reputation DESC;
