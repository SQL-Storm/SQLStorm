
WITH BenchmarkStats AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.Score,
        p.ViewCount,
        COUNT(c.Id) AS CommentCount,
        COALESCE(v.UpVotes, 0) AS UpVotes,
        COALESCE(v.DownVotes, 0) AS DownVotes,
        p.CreationDate,
        p.LastActivityDate,
        TIMESTAMPDIFF(MINUTE, p.CreationDate, NOW()) AS AgeInMinutes
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN (
        SELECT 
            PostId, 
            SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes,
            SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes
        FROM 
            Votes
        GROUP BY 
            PostId
    ) v ON p.Id = v.PostId
    GROUP BY 
        p.Id, p.Title, p.Score, p.ViewCount, p.CreationDate, p.LastActivityDate
)
SELECT 
    PostId,
    Title,
    Score,
    ViewCount,
    CommentCount,
    UpVotes,
    DownVotes,
    CreationDate,
    LastActivityDate,
    AgeInMinutes,
    (Score * 0.5 + ViewCount * 0.3 + CommentCount * 0.2) AS PerformanceScore
FROM 
    BenchmarkStats
ORDER BY 
    PerformanceScore DESC
LIMIT 10;
