WITH RankedPosts AS (
    SELECT 
        p.Id,
        p.Title,
        p.CreationDate,
        p.Score,
        p.ViewCount,
        p.AnswerCount,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC) as Rank
    FROM 
        Posts p
    WHERE 
        p.PostTypeId = 1 AND 
        p.Score > 5 AND 
        p.CreationDate >= cast('2024-10-01' as date) - INTERVAL '1 year'
),
UserStats AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COUNT(b.Id) AS BadgeCount,
        COALESCE(SUM(p.ViewCount), 0) AS TotalViews,
        COALESCE(SUM(p.Score), 0) AS TotalScores
    FROM 
        Users u
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    LEFT JOIN 
        Posts p ON u.Id = p.OwnerUserId AND p.PostTypeId = 1
    WHERE 
        u.Reputation > 1000
    GROUP BY 
        u.Id
),
RecentEdits AS (
    SELECT 
        ph.PostId,
        ph.CreationDate,
        ph.UserDisplayName,
        ph.Comment
    FROM 
        PostHistory ph
    WHERE 
        ph.PostHistoryTypeId IN (4, 5, 6) AND 
        ph.CreationDate >= cast('2024-10-01' as date) - INTERVAL '3 months'
),
PostCommentCount AS (
    SELECT 
        p.Id AS PostId,
        COUNT(c.Id) AS CommentCount
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    GROUP BY 
        p.Id
)
SELECT 
    r.Title,
    r.Score,
    r.ViewCount,
    r.AnswerCount,
    u.DisplayName AS OwnerDisplayName,
    u.BadgeCount,
    u.TotalViews,
    u.TotalScores,
    pc.CommentCount,
    COALESCE(re.CreationDate, 'No recent edits') AS LastEditDate,
    COALESCE(re.UserDisplayName, 'N/A') AS EditedBy
FROM 
    RankedPosts r
JOIN 
    UserStats u ON r.OwnerUserId = u.UserId
LEFT JOIN 
    PostCommentCount pc ON r.Id = pc.PostId
LEFT JOIN 
    RecentEdits re ON r.Id = re.PostId
WHERE 
    r.Rank <= 5
ORDER BY 
    r.Score DESC, r.ViewCount DESC;