
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.ViewCount,
        p.CreationDate,
        p.Score,
        u.DisplayName AS Author,
        COALESCE(SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) OVER (PARTITION BY p.Id), 0) AS UpVotes,
        COALESCE(SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) OVER (PARTITION BY p.Id), 0) AS DownVotes,
        ARRAY_AGG(DISTINCT t.TagName) AS Tags
    FROM 
        Posts p
    JOIN 
        Users u ON p.OwnerUserId = u.Id
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    LEFT JOIN 
        unnest(string_to_array(p.Tags, ',')) AS tag ON true
    LEFT JOIN 
        Tags t ON tag = t.TagName
    WHERE 
        p.PostTypeId = 1  
    GROUP BY 
        p.Id, u.DisplayName, p.Title, p.ViewCount, p.CreationDate, p.Score
), PostScores AS (
    SELECT 
        PostId,
        Title,
        ViewCount,
        CreationDate,
        Score,
        Author,
        UpVotes,
        DownVotes,
        Tags,
        (ViewCount + (UpVotes - DownVotes) * 10) AS PostScore  
    FROM 
        RankedPosts
)
SELECT 
    PostId,
    Title,
    ViewCount,
    CreationDate,
    Score,
    Author,
    UpVotes,
    DownVotes,
    Tags,
    PostScore,
    RANK() OVER (ORDER BY PostScore DESC) AS Rank
FROM 
    PostScores
WHERE 
    PostScore > 0  
ORDER BY 
    Rank
LIMIT 
    10;
