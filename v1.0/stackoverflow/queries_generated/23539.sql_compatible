
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.OwnerUserId,
        p.ViewCount,
        p.Score,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS PostRank
    FROM 
        Posts p
    WHERE 
        p.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 year'
),

PostCloseHistory AS (
    SELECT 
        p.Id AS PostId,
        ph.UserDisplayName,
        ph.CreationDate AS CloseDate,
        CASE 
            WHEN ph.Comment IS NOT NULL THEN ph.Comment
            ELSE 'No comment provided'
        END AS CloseReason,
        ROW_NUMBER() OVER (PARTITION BY p.Id ORDER BY ph.CreationDate DESC) AS CloseRank
    FROM 
        PostHistory ph
    JOIN 
        Posts p ON ph.PostId = p.Id
    WHERE 
        ph.PostHistoryTypeId IN (10, 11) 
),

UserReputation AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        u.Reputation,
        CASE 
            WHEN u.Reputation IS NULL THEN 'Unknown'
            WHEN u.Reputation < 100 THEN 'Low Reputation'
            WHEN u.Reputation BETWEEN 100 AND 1000 THEN 'Medium Reputation'
            ELSE 'High Reputation'
        END AS ReputationCategory
    FROM 
        Users u
)

SELECT 
    ps.PostId,
    ps.Title,
    ps.ViewCount,
    ps.Score,
    u.DisplayName AS OwnerDisplayName,
    COALESCE(pch.CloseDate, 'Not Closed') AS LastCloseDate,
    COALESCE(pch.CloseReason, 'N/A') AS LastCloseReason,
    ur.ReputationCategory,
    CASE 
        WHEN ps.Score > 100 THEN 'Highly Valuable'
        WHEN ps.Score BETWEEN 50 AND 100 THEN 'Moderately Valuable'
        ELSE 'Less Valuable'
    END AS ValueCategory
FROM 
    RankedPosts rp
LEFT JOIN 
    PostCloseHistory pch ON rp.PostId = pch.PostId AND pch.CloseRank = 1 
INNER JOIN 
    Users u ON rp.OwnerUserId = u.Id
LEFT JOIN 
    UserReputation ur ON ur.UserId = u.Id
WHERE 
    ur.ReputationCategory <> 'Unknown'
ORDER BY 
    ps.ViewCount DESC, 
    ps.Score DESC
LIMIT 100;
