WITH RankedPosts AS (
    SELECT 
        p.Id,
        p.Title,
        p.Score,
        p.CreationDate,
        u.DisplayName AS OwnerDisplayName,
        RANK() OVER (PARTITION BY p.PostTypeId ORDER BY p.Score DESC) AS ScoreRank,
        COUNT(c.Id) OVER (PARTITION BY p.Id) AS CommentCount
    FROM 
        Posts p
    JOIN 
        Users u ON p.OwnerUserId = u.Id
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    WHERE 
        p.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '30 days'
),
PopularPosts AS (
    SELECT 
        rp.Id, 
        rp.Title, 
        rp.Score, 
        rp.CreationDate, 
        rp.OwnerDisplayName, 
        rp.ScoreRank, 
        rp.CommentCount
    FROM 
        RankedPosts rp
    WHERE 
        rp.ScoreRank <= 5
),
PostHistories AS (
    SELECT 
        ph.PostId,
        ph.CreationDate AS HistoryDate,
        pht.Name AS HistoryType,
        COUNT(*) FILTER (WHERE ph.PostHistoryTypeId IN (10, 11, 12, 13)) AS CloseReopenCount
    FROM 
        PostHistory ph 
    JOIN 
        PostHistoryTypes pht ON ph.PostHistoryTypeId = pht.Id
    GROUP BY 
        ph.PostId, 
        ph.CreationDate, 
        pht.Name
)
SELECT 
    pp.Title,
    pp.OwnerDisplayName,
    pp.Score,
    pp.CommentCount,
    JSON_AGG(JSON_BUILD_OBJECT(
        'HistoryDate', ph.HistoryDate,
        'HistoryType', ph.HistoryType,
        'CloseReopenCount', ph.CloseReopenCount
    )) AS Histories
FROM 
    PopularPosts pp
LEFT JOIN 
    PostHistories ph ON pp.Id = ph.PostId
GROUP BY 
    pp.Title, pp.OwnerDisplayName, pp.Score, pp.CommentCount
ORDER BY 
    pp.Score DESC;