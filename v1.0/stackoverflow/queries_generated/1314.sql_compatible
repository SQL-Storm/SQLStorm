
WITH UserActivity AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        u.Reputation,
        COUNT(DISTINCT p.Id) AS PostCount,
        SUM(CASE WHEN vt.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes,
        SUM(CASE WHEN vt.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes,
        SUM(CASE WHEN p.PostTypeId = 1 THEN 1 ELSE 0 END) AS Questions,
        SUM(CASE WHEN p.PostTypeId = 2 THEN 1 ELSE 0 END) AS Answers,
        MAX(p.CreationDate) AS LastActive
    FROM 
        Users u
    LEFT JOIN 
        Posts p ON u.Id = p.OwnerUserId
    LEFT JOIN 
        Votes vt ON p.Id = vt.PostId
    WHERE 
        u.Reputation > 500
    GROUP BY 
        u.Id, u.DisplayName, u.Reputation
),
TopUsers AS (
    SELECT 
        UserId,
        DisplayName,
        Reputation,
        PostCount,
        UpVotes,
        DownVotes,
        Questions,
        Answers,
        RANK() OVER (ORDER BY Reputation DESC) AS Rank
    FROM 
        UserActivity
    WHERE 
        PostCount > 10
)
SELECT 
    tu.DisplayName,
    tu.Reputation,
    tu.PostCount,
    tu.UpVotes,
    tu.DownVotes,
    tu.Questions,
    tu.Answers,
    COALESCE(SUBSTRING_INDEX(GROUP_CONCAT(DISTINCT t.TagName ORDER BY t.Count DESC), ',', 5), 'No Tags') AS TopTags
FROM 
    TopUsers tu
LEFT JOIN 
    Posts p ON tu.UserId = p.OwnerUserId
LEFT JOIN 
    Tags t ON FIND_IN_SET(t.TagName, TRIM(BOTH ' ' FROM REPLACE(p.Tags, '<', '>'))) > 0
WHERE 
    tu.Rank <= 10
GROUP BY 
    tu.UserId, tu.DisplayName, tu.Reputation, tu.PostCount, tu.UpVotes, tu.DownVotes, tu.Questions, tu.Answers
ORDER BY 
    tu.Rank;
