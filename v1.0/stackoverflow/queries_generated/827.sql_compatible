
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        u.DisplayName AS Author,
        ROW_NUMBER() OVER (PARTITION BY p.PostTypeId ORDER BY p.CreationDate DESC) AS rn,
        COUNT(c.Id) AS CommentCount,
        COALESCE(SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END), 0) AS UpVotes,
        COALESCE(SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END), 0) AS DownVotes
    FROM 
        Posts p
    LEFT JOIN 
        Users u ON p.OwnerUserId = u.Id
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    GROUP BY 
        p.Id, p.Title, p.CreationDate, u.DisplayName, p.PostTypeId
),
ClosedPosts AS (
    SELECT 
        ph.PostId,
        MAX(ph.CreationDate) AS LastClosedDate
    FROM 
        PostHistory ph
    WHERE 
        ph.PostHistoryTypeId = 10
    GROUP BY 
        ph.PostId
),
PostMetrics AS (
    SELECT 
        rp.PostId,
        rp.Title,
        rp.Author,
        rp.CreationDate,
        rp.CommentCount,
        rp.UpVotes,
        rp.DownVotes,
        cp.LastClosedDate,
        CASE 
            WHEN cp.LastClosedDate IS NOT NULL THEN 'Closed'
            ELSE 'Open'
        END AS Status
    FROM 
        RankedPosts rp
    LEFT JOIN 
        ClosedPosts cp ON rp.PostId = cp.PostId
    WHERE 
        rp.rn <= 5
)
SELECT 
    pm.Title,
    pm.Author,
    pm.CreationDate,
    pm.CommentCount,
    pm.UpVotes,
    pm.DownVotes,
    pm.Status,
    CASE 
        WHEN pm.Status = 'Closed' THEN 
            CASE 
                WHEN pm.LastClosedDate IS NOT NULL THEN 
                    CONCAT('Closed on ', TO_CHAR(pm.LastClosedDate, 'YYYY-MM-DD HH24:MI:SS'))
                ELSE 
                    'No close date available'
            END
        ELSE 'N/A'
    END AS Closure_Info
FROM 
    PostMetrics pm
WHERE 
    pm.UpVotes - pm.DownVotes > 5
ORDER BY 
    pm.UpVotes DESC, 
    pm.CreationDate DESC
FETCH FIRST 10 ROWS ONLY;
