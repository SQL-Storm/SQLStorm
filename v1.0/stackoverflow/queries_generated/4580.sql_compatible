
WITH RankedPosts AS (
    SELECT 
        p.Id,
        p.Title,
        p.Score,
        p.ViewCount,
        p.CreationDate,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC) AS rn,
        COUNT(c.Id) OVER (PARTITION BY p.Id) AS CommentCount
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    WHERE 
        p.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 year'
),
UserStatistics AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpvotesReceived,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownvotesReceived,
        COUNT(DISTINCT b.Id) AS BadgeCount
    FROM 
        Users u
    LEFT JOIN 
        Votes v ON u.Id = v.UserId
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    GROUP BY 
        u.Id, u.DisplayName
),
PostHistoryDetails AS (
    SELECT 
        ph.PostId,
        ph.PostHistoryTypeId,
        COUNT(*) AS EditCount
    FROM 
        PostHistory ph
    WHERE 
        ph.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '6 months'
    GROUP BY 
        ph.PostId, ph.PostHistoryTypeId
)
SELECT 
    rp.Id AS PostId,
    rp.Title,
    COALESCE(us.DisplayName, 'Anonymous') AS OwnerName,
    rp.Score,
    rp.ViewCount,
    rp.CreationDate,
    rp.CommentCount,
    us.UpvotesReceived - us.DownvotesReceived AS ReputationChange,
    phd.EditCount AS RecentEditCount
FROM 
    RankedPosts rp
LEFT JOIN 
    UserStatistics us ON rp.OwnerUserId = us.UserId
LEFT JOIN 
    PostHistoryDetails phd ON rp.Id = phd.PostId
WHERE 
    rp.rn = 1
ORDER BY 
    ReputationChange DESC NULLS LAST, 
    rp.Score DESC
LIMIT 100;
