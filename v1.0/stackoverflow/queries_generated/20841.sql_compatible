
WITH RankedPosts AS (
    SELECT 
        p.Id,
        p.Title,
        p.CreationDate,
        p.ViewCount,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS PostRank,
        COUNT(c.Id) AS CommentCount
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON c.PostId = p.Id
    WHERE 
        p.CreationDate > DATE_SUB('2024-10-01', INTERVAL 1 YEAR)
    GROUP BY 
        p.Id, p.Title, p.CreationDate, p.ViewCount, p.OwnerUserId
),
TopUsers AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        u.Reputation,
        RANK() OVER (ORDER BY u.Reputation DESC) AS ReputationRank
    FROM 
        Users u
    WHERE 
        u.CreationDate < '2023-01-01' AND u.Reputation > 1000
)
SELECT 
    u.DisplayName,
    COALESCE(rp.Title, 'No Posts') AS LastPostTitle,
    COALESCE(rp.ViewCount, 0) AS LastPostViewCount,
    COALESCE(rp.CommentCount, 0) AS LastPostCommentCount,
    COALESCE(u.Location, 'Location Unknown') AS UserLocation,
    (SELECT COUNT(*) 
     FROM Votes v 
     WHERE v.UserId = u.Id AND v.CreationDate > DATE_SUB('2024-10-01', INTERVAL 1 MONTH)) AS RecentVotes,
    (SELECT STRING_AGG(DISTINCT t.TagName, ', ') 
     FROM Posts p
     JOIN UNNEST(SPLIT(p.Tags, '><')) AS t(TagName) ON TRUE
     WHERE p.OwnerUserId = u.Id
    ) AS UserTags
FROM 
    TopUsers u
LEFT JOIN 
    RankedPosts rp ON u.UserId = rp.OwnerUserId AND rp.PostRank = 1
WHERE 
    u.ReputationRank <= 10
ORDER BY 
    u.Reputation DESC
LIMIT 5;
