
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title AS PostTitle,
        p.CreationDate,
        p.ViewCount,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS rn,
        COUNT(*) OVER (PARTITION BY p.OwnerUserId) AS TotalPosts
    FROM 
        Posts p
    WHERE 
        p.CreationDate >= DATEADD(year, -1, CAST('2024-10-01' AS DATE))
        AND p.PostTypeId = 1 
),
UserPostStats AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COALESCE(SUM(p.ViewCount), 0) AS TotalViews,
        COALESCE(SUM(CASE WHEN p.AcceptedAnswerId IS NOT NULL THEN 1 ELSE 0 END), 0) AS AcceptedAnswers,
        COUNT(DISTINCT p.Id) AS TotalQuestions
    FROM 
        Users u
    LEFT JOIN 
        Posts p ON u.Id = p.OwnerUserId
    GROUP BY 
        u.Id, u.DisplayName
),
CloseReasons AS (
    SELECT
        ph.PostId,
        COUNT(ph.Id) AS CloseReasonCount,
        STRING_AGG(DISTINCT crt.Name, ', ') AS CloseReasons
    FROM 
        PostHistory ph
    JOIN 
        CloseReasonTypes crt ON CAST(ph.Comment AS INT) = crt.Id
    WHERE 
        ph.PostHistoryTypeId = 10 
    GROUP BY 
        ph.PostId
)
SELECT 
    ups.UserId,
    ups.DisplayName,
    ups.TotalViews,
    ups.AcceptedAnswers,
    ups.TotalQuestions,
    COALESCE(rp.PostTitle, 'No Recent Posts') AS RecentPost,
    COALESCE(rp.CreationDate, 'N/A') AS RecentPostDate,
    COALESCE(rp.TotalPosts, 0) AS NumberOfPostsByUser,
    COALESCE(cr.CloseReasonCount, 0) AS CloseReasonCount,
    COALESCE(cr.CloseReasons, 'N/A') AS CloseReasons
FROM 
    UserPostStats ups
LEFT JOIN 
    RankedPosts rp ON ups.UserId = rp.OwnerUserId AND rp.rn = 1
LEFT JOIN 
    CloseReasons cr ON rp.PostId = cr.PostId
WHERE 
    ups.TotalQuestions > 0
ORDER BY 
    ups.TotalViews DESC, ups.DisplayName ASC
FETCH FIRST 10 ROWS ONLY;
