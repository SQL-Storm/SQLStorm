
WITH RankedPosts AS (
    SELECT 
        P.Id AS PostId,
        P.Title,
        U.DisplayName AS Author,
        P.CreationDate,
        P.Score,
        RANK() OVER (PARTITION BY P.PostTypeId ORDER BY P.Score DESC) AS ScoreRank
    FROM 
        Posts P
    JOIN 
        Users U ON P.OwnerUserId = U.Id
    WHERE 
        P.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 year'
), 
CommentCounts AS (
    SELECT 
        PostId, 
        COUNT(*) AS TotalComments
    FROM 
        Comments
    GROUP BY 
        PostId
), 
PostHistorySummary AS (
    SELECT 
        PH.PostId, 
        MIN(PH.CreationDate) AS FirstEditDate,
        COUNT(CASE WHEN PH.PostHistoryTypeId IN (10, 11) THEN 1 END) AS ClosureEvents
    FROM 
        PostHistory PH
    GROUP BY 
        PH.PostId
), 
UserBadges AS (
    SELECT 
        U.Id AS UserId,
        COUNT(B.Id) AS BadgeCount
    FROM 
        Users U
    LEFT JOIN 
        Badges B ON U.Id = B.UserId
    GROUP BY 
        U.Id
)
SELECT 
    R.PostId,
    R.Title,
    R.Author,
    COALESCE(CC.TotalComments, 0) AS TotalComments,
    COALESCE(PHS.FirstEditDate, 'No edits') AS FirstEditDate,
    COALESCE(PHS.ClosureEvents, 0) AS ClosureEvents,
    UB.BadgeCount
FROM 
    RankedPosts R
LEFT JOIN 
    CommentCounts CC ON R.PostId = CC.PostId
LEFT JOIN 
    PostHistorySummary PHS ON R.PostId = PHS.PostId
LEFT JOIN 
    UserBadges UB ON R.Author = UB.UserId
WHERE 
    R.ScoreRank <= 5
ORDER BY 
    R.Score DESC, 
    R.CreationDate DESC 
LIMIT 100;
