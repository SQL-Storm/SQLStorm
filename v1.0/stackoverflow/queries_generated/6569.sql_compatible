
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId, 
        p.Title, 
        p.ViewCount, 
        COUNT(c.Id) AS CommentCount, 
        COALESCE(SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END), 0) AS UpvoteCount,
        COALESCE(SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END), 0) AS DownvoteCount,
        ROW_NUMBER() OVER (PARTITION BY p.PostTypeId ORDER BY p.Score DESC) AS Rank
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    WHERE 
        p.CreationDate >= '2023-01-01' 
        AND p.PostTypeId IN (1, 2) 
    GROUP BY 
        p.Id, p.Title, p.ViewCount, p.PostTypeId, p.Score
),
TopPosts AS (
    SELECT 
        PostId,
        Title,
        ViewCount,
        CommentCount,
        UpvoteCount,
        DownvoteCount
    FROM 
        RankedPosts
    WHERE 
        Rank <= 10
)
SELECT 
    t.PostId,
    t.Title,
    t.ViewCount,
    t.CommentCount,
    t.UpvoteCount,
    t.DownvoteCount,
    (SELECT STRING_AGG(TagName, ', ') 
     FROM Tags 
     WHERE Tags.Id IN (SELECT UNNEST(STRING_TO_ARRAY(p.Tags, '>')) FROM Posts p WHERE p.Id = t.PostId)) 
    ) AS Tags,
    (SELECT COUNT(*) 
     FROM PostHistory ph 
     WHERE ph.PostId = t.PostId 
     AND ph.CreationDate >= '2023-01-01') AS EditCount
FROM 
    TopPosts t
ORDER BY 
    t.UpvoteCount DESC, 
    t.ViewCount DESC;
