WITH RankedPosts AS (
    SELECT 
        P.Id AS PostId,
        P.Title,
        P.CreationDate,
        P.Score,
        P.ViewCount,
        P.OwnerUserId,
        U.DisplayName AS OwnerDisplayName,
        ROW_NUMBER() OVER (PARTITION BY P.OwnerUserId ORDER BY P.Score DESC) AS Rank
    FROM 
        Posts P
    JOIN 
        Users U ON P.OwnerUserId = U.Id
    WHERE 
        P.CreationDate >= cast('2024-10-01' as date) - INTERVAL '1 year'
),

CommentStatistics AS (
    SELECT 
        PostId,
        COUNT(*) AS CommentCount,
        MAX(CreationDate) AS LastCommentDate
    FROM 
        Comments
    GROUP BY 
        PostId
),

PostHistoryDetails AS (
    SELECT 
        PH.PostId,
        PH.CreationDate,
        MAX(CASE WHEN PHT.Name = 'Post Closed' THEN PH.CreationDate END) AS LastClosedDate,
        MAX(CASE WHEN PHT.Name = 'Post Reopened' THEN PH.CreationDate END) AS LastReopenedDate
    FROM 
        PostHistory PH
    JOIN 
        PostHistoryTypes PHT ON PH.PostHistoryTypeId = PHT.Id
    GROUP BY 
        PH.PostId
),

PostLinksSummary AS (
    SELECT 
        PL.PostId,
        COUNT(*) AS RelatedPostsCount
    FROM 
        PostLinks PL
    GROUP BY 
        PL.PostId
),

AggregatedPostData AS (
    SELECT 
        RP.PostId,
        RP.Title,
        RP.CreationDate,
        RP.Score,
        RP.ViewCount,
        RP.OwnerDisplayName,
        COALESCE(CS.CommentCount, 0) AS CommentCount,
        COALESCE(CS.LastCommentDate, '1970-01-01'::timestamp) AS LastCommentDate,
        COALESCE(PH.LastClosedDate, PH.LastReopenedDate) AS LastChangeDate,
        COALESCE(PS.RelatedPostsCount, 0) AS RelatedPostsCount,
        RP.Rank
    FROM 
        RankedPosts RP
    LEFT JOIN 
        CommentStatistics CS ON RP.PostId = CS.PostId
    LEFT JOIN 
        PostHistoryDetails PH ON RP.PostId = PH.PostId
    LEFT JOIN 
        PostLinksSummary PS ON RP.PostId = PS.PostId
    WHERE 
        RP.Rank <= 5
)

SELECT 
    APD.PostId,
    APD.Title,
    APD.OwnerDisplayName,
    APD.Score,
    APD.ViewCount,
    APD.CommentCount,
    APD.LastCommentDate,
    APD.LastChangeDate,
    APD.RelatedPostsCount,
    CASE 
        WHEN APD.LastChangeDate IS NULL THEN 'No changes made'
        ELSE 'Changes made'
    END AS ChangeStatus
FROM 
    AggregatedPostData APD
ORDER BY 
    APD.Score DESC, 
    APD.ViewCount DESC;