
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.ViewCount,
        p.CreationDate,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.ViewCount DESC) AS ViewRank,
        COUNT(c.Id) AS CommentCount,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    WHERE 
        p.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 YEAR'
    GROUP BY 
        p.Id, p.Title, p.ViewCount, p.CreationDate, p.OwnerUserId
),
HighestRanked AS (
    SELECT 
        PostId,
        Title,
        ViewCount,
        CreationDate,
        ViewRank,
        CommentCount,
        UpVotes,
        DownVotes
    FROM 
        RankedPosts
    WHERE 
        ViewRank = 1
),
UserStats AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        SUM(COALESCE(bp.Reputation, 0)) AS TotalReputation,
        COUNT(DISTINCT h.Id) AS EditCount
    FROM 
        Users u
    LEFT JOIN 
        Posts p ON u.Id = p.OwnerUserId
    LEFT JOIN 
        PostHistory h ON p.Id = h.PostId
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    LEFT JOIN 
        (SELECT Id, Reputation FROM Users) AS bp ON u.Id = bp.Id
    GROUP BY 
        u.Id, u.DisplayName
)
SELECT 
    u.DisplayName,
    up.TotalReputation,
    hp.Title,
    hp.ViewCount,
    hp.CommentCount,
    hp.UpVotes,
    hp.DownVotes,
    CASE 
        WHEN hp.CommentCount IS NULL THEN 'No Comments'
        WHEN hp.CommentCount > 100 THEN 'Highly Active'
        ELSE 'Active'
    END AS ActivityLevel
FROM 
    UserStats up
JOIN 
    HighestRanked hp ON up.UserId = hp.PostId
WHERE 
    up.TotalReputation > 1000
ORDER BY 
    up.TotalReputation DESC, hp.ViewCount DESC
LIMIT 10;
