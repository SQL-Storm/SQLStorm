
WITH UserBadgeStats AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COUNT(b.Id) AS BadgeCount,
        SUM(CASE WHEN b.Class = 1 THEN 1 ELSE 0 END) AS GoldBadges,
        SUM(CASE WHEN b.Class = 2 THEN 1 ELSE 0 END) AS SilverBadges,
        SUM(CASE WHEN b.Class = 3 THEN 1 ELSE 0 END) AS BronzeBadges
    FROM Users u
    LEFT JOIN Badges b ON u.Id = b.UserId
    GROUP BY u.Id, u.DisplayName
),

PostEngagement AS (
    SELECT 
        p.OwnerUserId,
        COUNT(c.Id) AS CommentCount,
        COALESCE(SUM(v.VoteTypeId = 2), 0) AS UpVotes,  
        COUNT(DISTINCT p.Id) AS PostCount 
    FROM Posts p 
    LEFT JOIN Comments c ON p.Id = c.PostId
    LEFT JOIN Votes v ON p.Id = v.PostId AND v.VoteTypeId IN (2, 3)  
    WHERE p.CreationDate > '2021-01-01' 
    GROUP BY p.OwnerUserId
),

CombinedStats AS (
    SELECT 
        ub.UserId,
        ub.DisplayName,
        ub.BadgeCount,
        ub.GoldBadges,
        ub.SilverBadges,
        ub.BronzeBadges,
        COALESCE(pe.CommentCount, 0) AS TotalComments,
        COALESCE(pe.UpVotes, 0) AS TotalUpVotes,
        pe.PostCount
    FROM UserBadgeStats ub
    LEFT JOIN PostEngagement pe ON ub.UserId = pe.OwnerUserId
)

SELECT 
    cs.UserId, 
    cs.DisplayName,
    cs.BadgeCount,
    cs.GoldBadges,
    cs.SilverBadges,
    cs.BronzeBadges,
    cs.TotalComments,
    cs.TotalUpVotes,
    cs.PostCount,
    CASE 
        WHEN cs.BadgeCount IS NULL THEN 'Badge Count Unavailable'
        WHEN cs.TotalComments > 100 THEN 'Highly Engaged User'
        WHEN cs.GoldBadges > 0 THEN 'Elite Contributor'
        ELSE 'Regular Contributor'
    END AS ContributorStatus
FROM CombinedStats cs
WHERE cs.BadgeCount > 0 
   OR cs.TotalComments > 50  
ORDER BY cs.TotalUpVotes DESC, cs.BadgeCount DESC
LIMIT 10;
