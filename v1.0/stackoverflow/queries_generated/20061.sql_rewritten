WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.ViewCount,
        p.Score,
        p.CreationDate,
        p.AcceptedAnswerId,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS UserPostRank
    FROM 
        Posts p
    WHERE 
        p.PostTypeId = 1 
        AND p.ViewCount IS NOT NULL
),
UserBadges AS (
    SELECT 
        u.Id AS UserId,
        COUNT(b.Id) AS BadgeCount,
        MAX(b.Class) AS HighestBadge
    FROM 
        Users u
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    GROUP BY 
        u.Id
),
ClosedPosts AS (
    SELECT 
        ph.PostId,
        COUNT(*) AS CloseCount,
        MAX(CASE WHEN ph.PostHistoryTypeId = 10 THEN ph.CreationDate END) AS LastClosedDate
    FROM 
        PostHistory ph
    WHERE 
        ph.PostHistoryTypeId IN (10, 11) 
    GROUP BY 
        ph.PostId
),
PostComments AS (
    SELECT 
        c.PostId,
        COUNT(c.Id) AS CommentCount
    FROM 
        Comments c
    GROUP BY 
        c.PostId
)
SELECT 
    u.DisplayName,
    COALESCE(rp.PostId, 0) AS PostId,
    COALESCE(rp.Title, 'No Recent Questions') AS Title,
    COALESCE(rp.ViewCount, 0) AS ViewCount,
    COALESCE(pc.CommentCount, 0) AS CommentCount,
    COALESCE(cb.CloseCount, 0) AS CloseCount,
    CASE 
        WHEN ub.BadgeCount > 0 THEN 'Badged User'
        ELSE 'Regular User'
    END AS UserType,
    COUNT(DISTINCT CASE WHEN rp.UserPostRank = 1 THEN rp.PostId END) AS AcceptedAnswerCount
FROM 
    Users u
LEFT JOIN 
    RankedPosts rp ON u.Id = rp.OwnerUserId AND rp.UserPostRank = 1
LEFT JOIN 
    UserBadges ub ON u.Id = ub.UserId
LEFT JOIN 
    PostComments pc ON rp.PostId = pc.PostId
LEFT JOIN 
    ClosedPosts cb ON rp.PostId = cb.PostId
WHERE 
    u.Reputation > 1000 
GROUP BY 
    u.DisplayName, rp.PostId, rp.Title, rp.ViewCount, pc.CommentCount, cb.CloseCount, ub.BadgeCount;