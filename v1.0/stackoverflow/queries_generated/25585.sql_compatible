
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.Body,
        p.CreationDate,
        p.AnswerCount,
        p.ViewCount,
        p.Score,
        u.DisplayName AS OwnerDisplayName,
        ROW_NUMBER() OVER (PARTITION BY p.Tags ORDER BY p.CreationDate DESC) AS TagGroupRank
    FROM 
        Posts p
    JOIN 
        Users u ON p.OwnerUserId = u.Id
    WHERE 
        p.PostTypeId = 1 
        AND p.CreationDate >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR)
),
MostActiveUsers AS (
    SELECT 
        OwnerUserId,
        COUNT(DISTINCT PostId) AS PostCount,
        SUM(AnswerCount) AS TotalAnswers,
        SUM(ViewCount) AS TotalViews,
        SUM(Score) AS TotalScore
    FROM 
        Posts
    WHERE 
        PostTypeId = 1 
    GROUP BY 
        OwnerUserId
    HAVING 
        COUNT(DISTINCT PostId) > 5 
),
TopTags AS (
    SELECT 
        Tags,
        COUNT(*) AS TagCount
    FROM 
        Posts
    GROUP BY 
        Tags
    ORDER BY 
        TagCount DESC
    LIMIT 10
)
SELECT 
    rp.PostId,
    rp.Title,
    rp.Body,
    rp.CreationDate,
    rp.AnswerCount,
    rp.ViewCount,
    rp.Score,
    rp.OwnerDisplayName,
    tag.Tags AS MatchingTags,
    mau.PostCount,
    mau.TotalAnswers,
    mau.TotalViews,
    mau.TotalScore
FROM 
    RankedPosts rp
JOIN 
    MostActiveUsers mau ON rp.OwnerDisplayName = mau.OwnerUserId
JOIN 
    TopTags tag ON rp.Tags LIKE CONCAT('%', tag.Tags, '%')
WHERE 
    rp.TagGroupRank <= 5 
ORDER BY 
    rp.CreationDate DESC, 
    rp.Score DESC;
