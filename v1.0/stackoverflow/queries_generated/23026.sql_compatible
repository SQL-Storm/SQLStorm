
WITH RankedPosts AS (
    SELECT
        p.Id AS PostId,
        p.Title,
        p.Score,
        p.CreationDate,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC) AS PostRank,
        COUNT(c.Id) AS CommentCount
    FROM
        Posts p
    LEFT JOIN
        Comments c ON p.Id = c.PostId
    WHERE
        p.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 year'
    GROUP BY
        p.Id, p.Title, p.Score, p.CreationDate, p.OwnerUserId
),
TagStats AS (
    SELECT
        t.Id AS TagId,
        t.TagName,
        COUNT(p.Id) AS PostCount
    FROM
        Tags t
    LEFT JOIN
        Posts p ON p.Tags LIKE CONCAT('%', t.TagName, '%')
    WHERE
        t.IsModeratorOnly = 0
    GROUP BY
        t.Id, t.TagName
),
ActiveUsers AS (
    SELECT
        u.Id AS UserId,
        u.DisplayName,
        SUM(v.BountyAmount) AS TotalBounty
    FROM
        Users u
    JOIN
        Votes v ON u.Id = v.UserId
    WHERE
        v.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '6 months'
    GROUP BY
        u.Id, u.DisplayName
)
SELECT
    rp.PostId,
    rp.Title,
    rp.Score,
    rp.CreationDate,
    ts.TagId,
    ts.TagName,
    au.UserId,
    au.DisplayName,
    au.TotalBounty,
    CASE 
        WHEN rp.PostRank = 1 THEN 'Top Post'
        WHEN rp.CommentCount > 5 THEN 'Popular Post'
        ELSE 'Regular Post'
    END AS PostType
FROM
    RankedPosts rp
LEFT JOIN
    TagStats ts ON rp.PostId = ts.TagId
LEFT JOIN
    ActiveUsers au ON rp.PostId IN (
        SELECT
            p.Id
        FROM
            Posts p
        WHERE
            p.OwnerUserId = au.UserId
    )
WHERE
    rp.Score > 0
ORDER BY
    rp.Score DESC, rp.CreationDate DESC
LIMIT 100;
