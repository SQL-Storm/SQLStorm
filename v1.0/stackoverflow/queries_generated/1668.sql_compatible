
WITH UserBadges AS (
    SELECT 
        U.Id AS UserId,
        COUNT(B.Id) AS BadgeCount,
        SUM(CASE WHEN B.Class = 1 THEN 1 ELSE 0 END) AS GoldBadges,
        SUM(CASE WHEN B.Class = 2 THEN 1 ELSE 0 END) AS SilverBadges,
        SUM(CASE WHEN B.Class = 3 THEN 1 ELSE 0 END) AS BronzeBadges
    FROM 
        Users U
    LEFT JOIN 
        Badges B ON U.Id = B.UserId
    GROUP BY 
        U.Id
),
UserPosts AS (
    SELECT 
        P.OwnerUserId,
        COUNT(P.Id) AS TotalPosts,
        COUNT(CASE WHEN P.PostTypeId = 1 THEN 1 END) AS Questions,
        COUNT(CASE WHEN P.PostTypeId = 2 THEN 1 END) AS Answers,
        SUM(P.Score) AS TotalScore
    FROM 
        Posts P
    GROUP BY 
        P.OwnerUserId
),
PostStats AS (
    SELECT 
        U.Id AS UserId,
        COALESCE(UB.BadgeCount, 0) AS BadgeCount,
        COALESCE(UP.TotalPosts, 0) AS TotalPosts,
        COALESCE(UP.Questions, 0) AS Questions,
        COALESCE(UP.Answers, 0) AS Answers,
        COALESCE(UP.TotalScore, 0) AS TotalScore
    FROM 
        Users U
    LEFT JOIN 
        UserBadges UB ON U.Id = UB.UserId
    LEFT JOIN 
        UserPosts UP ON U.Id = UP.OwnerUserId
)
SELECT 
    PS.UserId,
    PS.BadgeCount,
    PS.TotalPosts,
    PS.Questions,
    PS.Answers,
    PS.TotalScore,
    RANK() OVER (ORDER BY PS.TotalScore DESC, PS.BadgeCount DESC) AS ScoreRank
FROM 
    PostStats PS
WHERE 
    PS.TotalPosts > 0
ORDER BY 
    ScoreRank
LIMIT 50
UNION ALL
SELECT 
    PS.UserId,
    0 AS BadgeCount,
    0 AS TotalPosts,
    0 AS Questions,
    0 AS Answers,
    0 AS TotalScore
FROM 
    PostStats PS
WHERE 
    PS.UserId NOT IN (SELECT DISTINCT OwnerUserId FROM Posts)
ORDER BY 
    PS.UserId DESC
LIMIT 50;
