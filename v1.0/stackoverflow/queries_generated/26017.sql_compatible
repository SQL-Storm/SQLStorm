
WITH UserStats AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        u.Reputation,
        COALESCE(SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END), 0) AS UpVotesCount,
        COALESCE(SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END), 0) AS DownVotesCount,
        COUNT(DISTINCT p.Id) AS PostsCount,
        COUNT(DISTINCT c.Id) AS CommentsCount,
        COUNT(DISTINCT b.Id) AS BadgesCount
    FROM 
        Users u
    LEFT JOIN 
        Posts p ON u.Id = p.OwnerUserId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId AND v.UserId = u.Id
    LEFT JOIN 
        Comments c ON c.UserId = u.Id
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    GROUP BY 
        u.Id, u.DisplayName, u.Reputation
),
PostEngagement AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.ViewCount,
        p.AnswerCount,
        p.CommentCount,
        p.Score,
        ARRAY_AGG(DISTINCT t.TagName) AS Tags
    FROM 
        Posts p
    LEFT JOIN 
        Tags t ON p.Tags LIKE CONCAT('%', t.TagName, '%')
    WHERE 
        p.CreationDate >= CURRENT_TIMESTAMP - INTERVAL '1 year'
    GROUP BY 
        p.Id, p.Title, p.ViewCount, p.AnswerCount, p.CommentCount, p.Score
),
TopPosts AS (
    SELECT 
        pe.PostId,
        pe.Title,
        pe.ViewCount,
        pe.AnswerCount,
        pe.CommentCount,
        pe.Score,
        pe.Tags,
        RANK() OVER (ORDER BY pe.Score DESC) AS Rank
    FROM 
        PostEngagement pe
)
SELECT 
    us.UserId,
    us.DisplayName,
    us.Reputation,
    us.UpVotesCount,
    us.DownVotesCount,
    us.PostsCount,
    us.CommentsCount,
    us.BadgesCount,
    tp.Title AS TopPostTitle,
    tp.ViewCount AS TopPostViewCount,
    tp.AnswerCount AS TopPostAnswerCount,
    tp.CommentCount AS TopPostCommentCount,
    tp.Score AS TopPostScore,
    tp.Tags AS TopPostTags
FROM 
    UserStats us
LEFT JOIN 
    TopPosts tp ON us.UserId = (SELECT p.OwnerUserId FROM Posts p WHERE p.Id = tp.PostId LIMIT 1)
WHERE 
    us.Reputation > 100
ORDER BY 
    us.Reputation DESC, tp.Score DESC
LIMIT 10;
