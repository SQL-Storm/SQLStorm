
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.ViewCount,
        p.Score,
        p.OwnerUserId,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS PostRank,
        COUNT(c.Id) AS CommentCount,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpvoteCount,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownvoteCount
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    WHERE 
        p.PostTypeId = 1 
    GROUP BY 
        p.Id, p.Title, p.CreationDate, p.ViewCount, p.Score, p.OwnerUserId
),
UserBadges AS (
    SELECT 
        u.Id AS UserId,
        COUNT(b.Id) AS BadgeCount,
        MAX(b.Class) AS HighestBadgeClass 
    FROM 
        Users u
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    GROUP BY 
        u.Id
),
PostHistoryCTE AS (
    SELECT 
        p.Id AS PostId,
        ph.UserId,
        ph.PostHistoryTypeId,
        ph.CreationDate,
        ROW_NUMBER() OVER (PARTITION BY ph.PostId ORDER BY ph.CreationDate DESC) AS HistoryRank
    FROM 
        PostHistory ph
    JOIN 
        Posts p ON ph.PostId = p.Id
    WHERE 
        ph.PostHistoryTypeId IN (10, 11) 
)

SELECT 
    up.DisplayName AS UserDisplayName,
    COUNT(rp.PostId) AS QuestionsCount,
    SUM(rp.ViewCount) AS TotalViews,
    SUM(rp.UpvoteCount) AS TotalUpvotes,
    SUM(rp.DownvoteCount) AS TotalDownvotes,
    ub.BadgeCount,
    (SELECT COUNT(*) FROM PostHistoryCTE ph WHERE ph.UserId = up.Id AND ph.HistoryRank = 1) AS LatestActionRank,
    STRING_AGG(DISTINCT CASE WHEN ph.PostHistoryTypeId = 10 THEN 'Closed' ELSE 'Reopened' END, ', ') AS PostActions
FROM 
    Users up
JOIN 
    RankedPosts rp ON up.Id = rp.OwnerUserId
LEFT JOIN 
    UserBadges ub ON up.Id = ub.UserId
LEFT JOIN 
    PostHistoryCTE ph ON up.Id = ph.UserId
WHERE 
    up.Reputation > 1000 
GROUP BY 
    up.DisplayName, ub.BadgeCount
HAVING 
    COUNT(rp.PostId) > 5 
ORDER BY 
    TotalViews DESC, QuestionsCount DESC;
