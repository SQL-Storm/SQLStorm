WITH PostDetails AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.Body,
        p.Tags,
        p.Score,
        p.AnswerCount,
        p.CommentCount,
        p.CreationDate,
        u.DisplayName AS OwnerDisplayName,
        ARRAY_AGG(t.TagName) AS TagList,
        COALESCE(ph.ClosedDate, 'Not Closed') AS ClosedStatus
    FROM 
        Posts p
    JOIN 
        Users u ON p.OwnerUserId = u.Id
    LEFT JOIN 
        Tags t ON POSITION(t.TagName IN p.Tags) > 0
    LEFT JOIN 
        (SELECT 
             PostId, 
             MAX(ClosedDate) AS ClosedDate 
         FROM 
             PostHistory 
         WHERE 
             PostHistoryTypeId = 10 
         GROUP BY 
             PostId) ph ON p.Id = ph.PostId
    WHERE 
        p.PostTypeId = 1 
    GROUP BY 
        p.Id, u.DisplayName, ph.ClosedDate
), 
PostStats AS (
    SELECT 
        pd.PostId,
        pd.Title,
        pd.Score,
        pd.TagList,
        pd.ClosedStatus,
        RANK() OVER (ORDER BY pd.Score DESC) AS ScoreRank,
        RANK() OVER (ORDER BY pd.AnswerCount DESC) AS AnswerRank
    FROM 
        PostDetails pd
)
SELECT 
    ps.Title,
    ps.ClosedStatus,
    ps.Score AS PostScore,
    ps.ScoreRank,
    ps.AnswerRank,
    cd.CommentCount
FROM 
    PostStats ps
LEFT JOIN 
    (SELECT 
         PostId, 
         COUNT(*) AS CommentCount 
     FROM 
         Comments 
     GROUP BY 
         PostId) cd ON ps.PostId = cd.PostId
WHERE 
    ps.ClosedStatus = 'Not Closed'
ORDER BY 
    ps.Score DESC, ps.AnswerCount DESC 
LIMIT 10;