
WITH RankedPosts AS (
    SELECT 
        p.Id,
        p.Title,
        p.Body,
        p.CreationDate,
        p.OwnerUserId,
        u.DisplayName AS OwnerDisplayName,
        p.ViewCount,
        p.Score,
        p.Tags,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC) AS PostRank,
        STRING_AGG(DISTINCT t.TagName, ', ') AS TagList
    FROM 
        Posts p
    JOIN 
        Users u ON p.OwnerUserId = u.Id
    LEFT JOIN 
        LATERAL string_to_array(substring(p.Tags, 2, length(p.Tags)-2), '><') AS tag ON TRUE
    LEFT JOIN 
        Tags t ON t.TagName = tag 
    WHERE 
        p.PostTypeId = 1  
    GROUP BY 
        p.Id, p.Title, p.Body, p.CreationDate, p.OwnerUserId, u.DisplayName, p.ViewCount, p.Score, p.Tags
),
TopUsers AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COUNT(p.Id) AS QuestionCount,
        SUM(p.Score) AS TotalScore
    FROM 
        Users u
    JOIN 
        Posts p ON u.Id = p.OwnerUserId
    WHERE 
        p.PostTypeId = 1  
    GROUP BY 
        u.Id, u.DisplayName
    HAVING 
        COUNT(p.Id) > 5  
),
RecentActivePosts AS (
    SELECT 
        p.Id,
        p.Title,
        p.CreationDate,
        u.DisplayName AS OwnerDisplayName,
        p.ViewCount,
        ROW_NUMBER() OVER (ORDER BY p.LastActivityDate DESC) AS RecentRank
    FROM 
        Posts p
    JOIN 
        Users u ON p.OwnerUserId = u.Id
    WHERE 
        p.LastActivityDate IS NOT NULL
)
SELECT 
    tu.DisplayName AS TopUserDisplayName,
    COUNT(DISTINCT rp.Id) AS QuestionsRanked,
    STRING_AGG(DISTINCT rp.TagList, '; ') AS AllTagsUsed,
    COUNT(DISTINCT rap.Id) AS RecentPostsCount,
    SUM(rp.Score) AS TotalRankedScore
FROM 
    TopUsers tu
JOIN 
    RankedPosts rp ON tu.UserId = rp.OwnerUserId
JOIN 
    RecentActivePosts rap ON tu.UserId = (SELECT OwnerUserId FROM Posts WHERE Id = rap.Id)
GROUP BY 
    tu.Id, tu.DisplayName
HAVING 
    COUNT(DISTINCT rp.Id) > 10  
ORDER BY 
    TotalRankedScore DESC
LIMIT 10;
