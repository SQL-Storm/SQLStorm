WITH RecursivePostHierarchy AS (
    
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.PostTypeId,
        p.AcceptedAnswerId,
        p.OwnerUserId,
        1 AS Level
    FROM 
        Posts p
    WHERE 
        p.PostTypeId = 1  
    UNION ALL
    SELECT 
        p.Id,
        p.Title,
        p.PostTypeId,
        p.AcceptedAnswerId,
        p.OwnerUserId,
        rp.Level + 1
    FROM 
        Posts p
    INNER JOIN 
        RecursivePostHierarchy rp ON p.ParentId = rp.PostId
    WHERE 
        p.PostTypeId = 2  
),
UserVoteSummary AS (
    
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COUNT(v.Id) AS TotalVotes,
        SUM(CASE WHEN vt.Name = 'UpMod' THEN 1 ELSE 0 END) AS UpVotes,
        SUM(CASE WHEN vt.Name = 'DownMod' THEN 1 ELSE 0 END) AS DownVotes
    FROM 
        Users u
    LEFT JOIN 
        Votes v ON u.Id = v.UserId
    LEFT JOIN 
        VoteTypes vt ON v.VoteTypeId = vt.Id
    GROUP BY 
        u.Id, u.DisplayName
),
PostScoreData AS (
    
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.Score,
        p.ViewCount,
        RANK() OVER (ORDER BY p.Score DESC, p.ViewCount DESC) AS Rank
    FROM 
        Posts p
    WHERE 
        p.PostTypeId IN (1, 2)  
),
RecentActivity AS (
    
    SELECT
        ph.PostId,
        ph.CreationDate AS RecentActivityDate,
        MAX(ph.CreationDate) OVER (PARTITION BY ph.PostId) AS MaxActivityDate,
        STRING_AGG(DISTINCT ph.Comment, '; ') AS ActivityComments
    FROM 
        PostHistory ph
    WHERE 
        ph.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - interval '30 days'  
    GROUP BY 
        ph.PostId, ph.CreationDate
)
SELECT 
    rp.PostId,
    rp.Title,
    rp.Level,
    uvs.DisplayName AS PostOwner,
    uvs.TotalVotes AS OwnerTotalVotes,
    psd.Rank,
    r.RecentActivityDate,
    r.ActivityComments,
    (SELECT COUNT(c.Id) FROM Comments c WHERE c.PostId = rp.PostId) AS CommentCount
FROM 
    RecursivePostHierarchy rp
JOIN 
    UserVoteSummary uvs ON rp.OwnerUserId = uvs.UserId
JOIN 
    PostScoreData psd ON rp.PostId = psd.PostId
LEFT JOIN 
    RecentActivity r ON rp.PostId = r.PostId
WHERE 
    rp.Level = 1  
ORDER BY 
    psd.Rank, uvs.TotalVotes DESC;