
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId, 
        p.Score, 
        p.CreationDate, 
        p.Title, 
        p.OwnerUserId, 
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC) AS Rank
    FROM 
        Posts p
    WHERE 
        p.PostTypeId IN (1, 2) AND 
        p.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 year' 
),
TopPosts AS (
    SELECT 
        rp.PostId, 
        rp.Score, 
        rp.CreationDate, 
        rp.Title AS PostTitle, 
        u.DisplayName AS OwnerName, 
        COUNT(c.Id) AS CommentCount,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS Upvotes,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS Downvotes
    FROM 
        RankedPosts rp
    JOIN 
        Users u ON rp.OwnerUserId = u.Id
    LEFT JOIN 
        Comments c ON rp.PostId = c.PostId
    LEFT JOIN 
        Votes v ON rp.PostId = v.PostId
    WHERE 
        rp.Rank = 1
    GROUP BY 
        rp.PostId, rp.Score, rp.CreationDate, u.DisplayName, rp.Title
),
ClosedPostReasons AS (
    SELECT 
        ph.PostId, 
        JSON_AGG(prt.Name) AS CloseReasons 
    FROM 
        PostHistory ph
    JOIN 
        PostHistoryTypes pht ON ph.PostHistoryTypeId = pht.Id
    JOIN 
        CloseReasonTypes prt ON ph.Comment::int = prt.Id 
    WHERE 
        ph.PostHistoryTypeId IN (10, 11)
    GROUP BY 
        ph.PostId
)
SELECT 
    tp.PostId, 
    tp.PostTitle, 
    tp.OwnerName, 
    tp.CreationDate, 
    tp.Score, 
    COALESCE(cpr.CloseReasons, '[]') AS CloseReasons,
    tp.CommentCount, 
    tp.Upvotes, 
    tp.Downvotes
FROM 
    TopPosts tp
LEFT JOIN 
    ClosedPostReasons cpr ON tp.PostId = cpr.PostId
ORDER BY 
    tp.Score DESC, tp.CreationDate DESC;
