WITH RECURSIVE UserBadges AS (
    SELECT b.UserId, 
           COUNT(*) AS BadgeCount, 
           ROW_NUMBER() OVER (PARTITION BY b.UserId ORDER BY b.Date DESC) AS LatestBadgeRank
    FROM Badges b
    GROUP BY b.UserId
),
TopUsers AS (
    SELECT u.Id AS UserId, 
           u.DisplayName,
           COALESCE(SUM(v.BountyAmount), 0) AS TotalBounties,
           COALESCE(SUM(p.ViewCount), 0) AS TotalViews,
           RANK() OVER (ORDER BY COALESCE(SUM(v.BountyAmount), 0) DESC) AS BountyRank
    FROM Users u
    LEFT JOIN Votes v ON u.Id = v.UserId
    LEFT JOIN Posts p ON u.Id = p.OwnerUserId
    WHERE u.Reputation > 1000
    GROUP BY u.Id
),
RecentEdits AS (
    SELECT ph.PostId,
           ph.UserId,
           ph.CreationDate,
           MIN(ph.CreationDate) OVER (PARTITION BY ph.PostId) AS FirstEditDate,
           ROW_NUMBER() OVER (PARTITION BY ph.PostId ORDER BY ph.CreationDate DESC) AS EditRank
    FROM PostHistory ph
    WHERE ph.PostHistoryTypeId IN (4, 5) 
),
ClosedPosts AS (
    SELECT p.Id AS PostId,
           ph.UserId AS CloserId,
           ph.CreationDate AS CloseDate,
           LAST_VALUE(ph.UserDisplayName) OVER (PARTITION BY p.Id ORDER BY ph.CreationDate ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS CloserDisplayName
    FROM Posts p
    JOIN PostHistory ph ON p.Id = ph.PostId
    WHERE ph.PostHistoryTypeId = 10 
)
SELECT tu.UserId, 
       tu.DisplayName, 
       tu.TotalBounties,
       tu.TotalViews,
       ub.BadgeCount AS BadgeCount,
       r.PostId,
       (SELECT COUNT(*) FROM Comments c WHERE c.PostId = r.PostId) AS CommentCount,
       (SELECT COUNT(*) FROM Posts p WHERE p.ParentId = r.PostId) AS AnswerCount,
       cp.CloserDisplayName,
       CASE
           WHEN r.EditRank = 1 THEN 'Latest Edit'
           WHEN r.FirstEditDate < cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '30 days' THEN 'Stale Edit'
           ELSE 'Recent Edit'
       END AS EditAgeCategory
FROM TopUsers tu
LEFT JOIN UserBadges ub ON tu.UserId = ub.UserId
LEFT JOIN RecentEdits r ON tu.UserId = r.UserId
LEFT JOIN ClosedPosts cp ON r.PostId = cp.PostId
WHERE tu.BountyRank <= 10
ORDER BY tu.TotalBounties DESC, tu.TotalViews DESC;