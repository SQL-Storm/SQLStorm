WITH RecursivePostHierarchy AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.OwnerUserId,
        p.ParentId,
        p.CreationDate,
        1 AS Level
    FROM 
        Posts p
    WHERE 
        p.ParentId IS NULL 
    
    UNION ALL
    
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.OwnerUserId,
        p.ParentId,
        p.CreationDate,
        Level + 1
    FROM 
        Posts p
    INNER JOIN 
        RecursivePostHierarchy r ON p.ParentId = r.PostId
),
PostVoteCounts AS (
    SELECT 
        PostId,
        SUM(CASE WHEN vt.Name = 'UpMod' THEN 1 ELSE 0 END) AS Upvotes,
        SUM(CASE WHEN vt.Name = 'DownMod' THEN 1 ELSE 0 END) AS Downvotes
    FROM 
        Votes v
    INNER JOIN 
        VoteTypes vt ON v.VoteTypeId = vt.Id
    GROUP BY 
        PostId
),
PostTagCounts AS (
    SELECT 
        p.Id AS PostId,
        COUNT(t.Id) AS TagCount
    FROM 
        Posts p
    LEFT JOIN 
        LATERAL unnest(string_to_array(p.Tags, '><')) AS t(TagName) ON true
    GROUP BY 
        p.Id
),
UserReputation AS (
    SELECT 
        u.Id AS UserId,
        u.Reputation,
        CASE 
            WHEN u.Reputation >= 1000 THEN 'High Reputation'
            WHEN u.Reputation BETWEEN 500 AND 999 THEN 'Medium Reputation'
            ELSE 'Low Reputation'
        END AS ReputationLevel
    FROM 
        Users u
)
SELECT 
    r.PostId,
    r.Title,
    r.OwnerUserId,
    pvc.Upvotes,
    pvc.Downvotes,
    ptc.TagCount,
    ur.Reputation,
    ur.ReputationLevel,
    CASE 
        WHEN r.ParentId IS NOT NULL THEN 'Answer'
        ELSE 'Question'
    END AS PostType,
    CASE 
        WHEN COUNT(c.Id) > 0 THEN 'Has Comments'
        ELSE 'No Comments'
    END AS CommentStatus
FROM 
    RecursivePostHierarchy r
LEFT JOIN 
    PostVoteCounts pvc ON r.PostId = pvc.PostId
LEFT JOIN 
    PostTagCounts ptc ON r.PostId = ptc.PostId
LEFT JOIN 
    Comments c ON r.PostId = c.PostId
LEFT JOIN 
    Users u ON r.OwnerUserId = u.Id
LEFT JOIN 
    UserReputation ur ON u.Id = ur.UserId
GROUP BY 
    r.PostId, r.Title, r.OwnerUserId, pvc.Upvotes, pvc.Downvotes, ptc.TagCount, ur.Reputation, ur.ReputationLevel
ORDER BY 
    r.CreationDate DESC
FETCH FIRST 100 ROWS ONLY;