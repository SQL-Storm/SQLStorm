WITH RECURSIVE UserReputationCTE AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        u.Reputation,
        u.CreationDate,
        1 AS Level
    FROM 
        Users u
    WHERE 
        u.Reputation > 500

    UNION ALL

    SELECT 
        u.Id,
        u.DisplayName,
        u.Reputation,
        u.CreationDate,
        Level + 1
    FROM 
        Users u
    INNER JOIN 
        UserReputationCTE ur ON ur.Reputation < u.Reputation
    WHERE 
        u.Reputation > 500 
)

, UserBadges AS (
    SELECT 
        b.UserId,
        COUNT(*) AS TotalBadges,
        SUM(CASE WHEN b.Class = 1 THEN 1 ELSE 0 END) AS GoldBadges,
        SUM(CASE WHEN b.Class = 2 THEN 1 ELSE 0 END) AS SilverBadges,
        SUM(CASE WHEN b.Class = 3 THEN 1 ELSE 0 END) AS BronzeBadges
    FROM 
        Badges b
    GROUP BY 
        b.UserId
)

, RecentPostStats AS (
    SELECT 
        p.OwnerUserId,
        COUNT(*) AS TotalPosts,
        SUM(CASE WHEN p.PostTypeId = 1 THEN 1 ELSE 0 END) AS Questions,
        SUM(CASE WHEN p.PostTypeId = 2 THEN 1 ELSE 0 END) AS Answers,
        AVG(p.Score) AS AvgScore
    FROM 
        Posts p
    WHERE 
        p.CreationDate > cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '30 days'
    GROUP BY 
        p.OwnerUserId
)

SELECT 
    u.Id AS UserId,
    u.DisplayName,
    COALESCE(ur.Reputation, 0) AS Reputation,
    COALESCE(ub.TotalBadges, 0) AS TotalBadges,
    COALESCE(ub.GoldBadges, 0) AS GoldBadges,
    COALESCE(ub.SilverBadges, 0) AS SilverBadges,
    COALESCE(ub.BronzeBadges, 0) AS BronzeBadges,
    COALESCE(rp.TotalPosts, 0) AS TotalPosts,
    COALESCE(rp.Questions, 0) AS Questions,
    COALESCE(rp.Answers, 0) AS Answers,
    COALESCE(rp.AvgScore, 0) AS AvgScore
FROM 
    Users u
LEFT JOIN 
    UserReputationCTE ur ON u.Id = ur.UserId
LEFT JOIN 
    UserBadges ub ON u.Id = ub.UserId
LEFT JOIN 
    RecentPostStats rp ON u.Id = rp.OwnerUserId
WHERE 
    u.Location IS NOT NULL
ORDER BY 
    Reputation DESC, 
    TotalPosts DESC
LIMIT 100;