WITH RecursiveTagCounts AS (
    SELECT 
        t.Id,
        t.TagName,
        COUNT(DISTINCT p.Id) AS PostCount
    FROM 
        Tags t
    LEFT JOIN 
        Posts p ON p.Tags LIKE '%' || t.TagName || '%'
    GROUP BY 
        t.Id, t.TagName
    
    UNION ALL
    
    SELECT 
        t.Id,
        t.TagName,
        COUNT(DISTINCT p.Id) + rt.PostCount
    FROM 
        RecursiveTagCounts rt
    JOIN 
        PostLinks pl ON pl.RelatedPostId IN (SELECT Id FROM Posts WHERE Tags LIKE '%' || rt.TagName || '%')
    JOIN 
        Tags t ON rt.Id = t.Id
    LEFT JOIN 
        Posts p ON p.Id = pl.PostId
    GROUP BY 
        t.Id, t.TagName
),
UserVotes AS (
    SELECT 
        u.Id AS UserId,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS TotalUpVotes,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS TotalDownVotes
    FROM 
        Users u
    LEFT JOIN 
        Votes v ON u.Id = v.UserId
    GROUP BY 
        u.Id 
),
PostEngagementStats AS (
    SELECT 
        p.Id AS PostId,
        COUNT(c.Id) AS CommentCount,
        SUM(v.VoteTypeId = 2) AS UpVoteCount,
        SUM(v.VoteTypeId = 3) AS DownVoteCount,
        AVG(EXTRACT(EPOCH FROM (cast('2024-10-01 12:34:56' as timestamp) - p.CreationDate)) / 3600) AS HoursSinceCreation
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    WHERE 
        p.CreationDate >= cast('2024-10-01' as date) - INTERVAL '30 days'
    GROUP BY 
        p.Id
),
CombinedData AS (
    SELECT 
        rt.TagName,
        tc.PostCount,
        ue.UserId,
        ue.TotalUpVotes,
        ue.TotalDownVotes,
        pes.PostId,
        pes.CommentCount,
        pes.UpVoteCount,
        pes.DownVoteCount,
        pes.HoursSinceCreation
    FROM 
        RecursiveTagCounts rt
    JOIN 
        UserVotes ue ON ue.TotalUpVotes > 10
    LEFT JOIN 
        PostEngagementStats pes ON pes.CommentCount > 5
    ORDER BY 
        rt.PostCount DESC, ue.TotalUpVotes DESC
)
SELECT 
    c.TagName,
    c.TotalUpVotes,
    c.TotalDownVotes,
    MAX(pes.HoursSinceCreation) AS MaxHoursSinceCreation,
    SUM(pes.CommentCount) AS TotalComments,
    SUM(pes.UpVoteCount) AS TotalUpVotesPerPost,
    SUM(pes.DownVoteCount) AS TotalDownVotesPerPost
FROM 
    CombinedData c
JOIN 
    PostEngagementStats pes ON c.PostId = pes.PostId
GROUP BY 
    c.TagName, c.TotalUpVotes, c.TotalDownVotes
HAVING 
    COUNT(c.PostId) > 5
ORDER BY 
    TotalUpVotes DESC, TotalComments DESC;