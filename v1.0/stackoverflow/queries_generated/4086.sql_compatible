
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Score,
        COUNT(c.Id) AS CommentCount,
        RANK() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC) AS UserRank
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    WHERE 
        p.PostTypeId = 1 AND
        p.CreationDate >= '2024-10-01 12:34:56' - INTERVAL '1 year'
    GROUP BY 
        p.Id, p.Title, p.CreationDate, p.Score, p.OwnerUserId
),
PostDetails AS (
    SELECT 
        rp.PostId,
        rp.Title,
        rp.CreationDate,
        rp.Score,
        rp.CommentCount,
        COALESCE(b.Name, 'No Badge') AS Badge,
        u.DisplayName,
        u.Reputation
    FROM 
        RankedPosts rp
    JOIN 
        Users u ON u.Id = rp.OwnerUserId AND rp.UserRank = 1
    LEFT JOIN 
        Badges b ON u.Id = b.UserId AND b.Class = 1
),
PostHistoryCounts AS (
    SELECT 
        ph.PostId,
        COUNT(*) AS HistoryCount
    FROM 
        PostHistory ph
    WHERE 
        ph.CreationDate >= '2024-10-01 12:34:56' - INTERVAL '6 months'
    GROUP BY 
        ph.PostId
)
SELECT 
    pd.Title,
    pd.CreationDate,
    pd.Score,
    pd.CommentCount,
    pd.Badge,
    pd.DisplayName,
    pd.Reputation,
    COALESCE(phc.HistoryCount, 0) AS PostHistoryCount
FROM 
    PostDetails pd
LEFT JOIN 
    PostHistoryCounts phc ON pd.PostId = phc.PostId
ORDER BY 
    pd.Score DESC, pd.CommentCount DESC;
