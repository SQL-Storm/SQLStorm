
WITH UserReputation AS (
    SELECT
        u.Id AS UserId,
        u.Reputation,
        COALESCE(SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END), 0) AS Upvotes,
        COALESCE(SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END), 0) AS Downvotes,
        COUNT(DISTINCT p.Id) AS PostCount
    FROM Users u
    LEFT JOIN Posts p ON u.Id = p.OwnerUserId
    LEFT JOIN Votes v ON p.Id = v.PostId
    GROUP BY u.Id, u.Reputation
),
ClosedPosts AS (
    SELECT 
        ph.UserId,
        COUNT(*) AS ClosedPostCount
    FROM PostHistory ph
    WHERE ph.PostHistoryTypeId = 10 
    GROUP BY ph.UserId
),
PopularTags AS (
    SELECT 
        unnest(string_to_array(Tags, ',')) AS Tag
    FROM Posts
    WHERE PostTypeId = 1 
),
TagCounts AS (
    SELECT 
        Tag,
        COUNT(*) AS TagUsage
    FROM PopularTags
    GROUP BY Tag
    HAVING COUNT(*) > 5
),
RankedUsers AS (
    SELECT 
        u.Id AS UserId,
        ur.Reputation,
        COALESCE(cp.ClosedPostCount, 0) AS ClosedPostCount,
        ROW_NUMBER() OVER (ORDER BY ur.Reputation DESC, ur.Upvotes - ur.Downvotes DESC) AS UserRank
    FROM UserReputation ur
    LEFT JOIN ClosedPosts cp ON ur.UserId = cp.UserId
    WHERE ur.PostCount > 5
)
SELECT 
    ru.UserId,
    ru.Reputation,
    ru.ClosedPostCount,
    tg.Tag AS PopularTag,
    COALESCE(tg.TagUsage, 0) AS TagUsage
FROM RankedUsers ru
LEFT JOIN TagCounts tg ON tg.Tag IN (
    SELECT DISTINCT Tag 
    FROM PopularTags p
    WHERE p.Tag IS NOT NULL
)
WHERE ru.UserRank <= 20
ORDER BY ru.UserRank,
    COALESCE(tg.TagUsage, 0) DESC;
