
WITH RankedPosts AS (
    SELECT 
        p.Id,
        p.Title,
        p.CreationDate,
        p.ViewCount,
        p.Score,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS rn
    FROM 
        Posts p
    WHERE 
        p.PostTypeId = 1
),
UserReputation AS (
    SELECT 
        u.Id AS UserId,
        u.Reputation,
        COUNT(DISTINCT p.Id) AS PostCount,
        SUM(v.BountyAmount) AS TotalBounty
    FROM 
        Users u
    LEFT JOIN 
        Posts p ON u.Id = p.OwnerUserId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId AND v.VoteTypeId IN (8, 9) 
    GROUP BY 
        u.Id, u.Reputation
),
UserBadges AS (
    SELECT 
        b.UserId,
        STRING_AGG(b.Name, ', ') AS BadgeNames
    FROM 
        Badges b
    WHERE 
        b.Class = 1 
    GROUP BY 
        b.UserId
)
SELECT 
    u.DisplayName,
    u.Reputation,
    COALESCE(ub.BadgeNames, 'No Gold Badges') AS GoldBadges,
    COUNT(DISTINCT p.Id) AS TotalPosts,
    SUM(CASE WHEN p.Score >= 0 THEN 1 ELSE 0 END) AS PositiveScores,
    SUM(CASE WHEN p.ViewCount > 100 THEN 1 ELSE 0 END) AS HighViews,
    COUNT(DISTINCT ph.Id) AS PostHistoryCount,
    MAX(rp.Title) AS MostRecentPostTitle
FROM 
    Users u
LEFT JOIN 
    Posts p ON u.Id = p.OwnerUserId
LEFT JOIN 
    PostHistory ph ON p.Id = ph.PostId
LEFT JOIN 
    UserBadges ub ON u.Id = ub.UserId
LEFT JOIN 
    RankedPosts rp ON u.Id = rp.OwnerUserId AND rp.rn = 1
WHERE 
    u.Reputation > (
        SELECT AVG(Reputation) 
        FROM Users
    )
GROUP BY 
    u.Id, u.DisplayName, u.Reputation, ub.BadgeNames
ORDER BY 
    u.Reputation DESC
LIMIT 10;
