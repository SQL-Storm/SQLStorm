
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Score,
        p.ViewCount,
        p.CreationDate,
        ROW_NUMBER() OVER (PARTITION BY p.PostTypeId ORDER BY p.Score DESC, p.ViewCount DESC) AS Rank
    FROM 
        Posts p
    WHERE 
        p.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '6 months'
),
UserReputation AS (
    SELECT 
        u.Id AS UserId,
        SUM(u.Reputation) AS TotalReputation,
        COUNT(b.Id) AS BadgeCount
    FROM 
        Users u
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    GROUP BY 
        u.Id
),
ClosedPosts AS (
    SELECT 
        ph.PostId,
        ph.CreationDate AS CloseDate,
        (SELECT Name FROM CloseReasonTypes WHERE Id = CAST(ph.Comment AS INT)) AS CloseReason
    FROM 
        PostHistory ph
    WHERE 
        ph.PostHistoryTypeId = 10 
),
PostsWithDetails AS (
    SELECT 
        rp.PostId,
        rp.Score,
        rp.ViewCount,
        COALESCE(cp.CloseDate, 'N/A') AS CloseDate,
        COALESCE(cp.CloseReason, 'Not Closed') AS CloseReason,
        ur.TotalReputation AS UserReputation,
        ur.BadgeCount
    FROM 
        RankedPosts rp
    LEFT JOIN 
        ClosedPosts cp ON rp.PostId = cp.PostId
    JOIN 
        Users u ON u.Id = rp.OwnerUserId
    LEFT JOIN 
        UserReputation ur ON ur.UserId = u.Id
)
SELECT 
    p.Title,
    p.Body,
    pd.Score,
    pd.ViewCount,
    pd.CloseDate,
    pd.CloseReason,
    pd.UserReputation,
    pd.BadgeCount,
    (SELECT COUNT(c.Id) 
        FROM Comments c 
        WHERE c.PostId = pd.PostId) AS CommentCount,
    CASE 
        WHEN pd.UserReputation > 1000 THEN 'High Reputation'
        WHEN pd.UserReputation BETWEEN 500 AND 1000 THEN 'Medium Reputation'
        ELSE 'Low Reputation'
    END AS ReputationCategory
FROM 
    PostsWithDetails pd
JOIN 
    Posts p ON pd.PostId = p.Id
WHERE 
    pd.Rank <= 10 
ORDER BY 
    pd.Score DESC,
    pd.ViewCount DESC
OFFSET 0 ROWS 
FETCH NEXT 50 ROWS ONLY
UNION ALL
SELECT 
    NULL AS Title,
    'Total Reputation Across Users' AS Body,
    SUM(ur.TotalReputation) AS Score,
    COUNT(ur.UserId) AS ViewCount,
    NULL AS CloseDate,
    NULL AS CloseReason,
    NULL AS UserReputation,
    NULL AS BadgeCount,
    NULL AS CommentCount,
    'Aggregate' AS ReputationCategory
FROM 
    UserReputation ur
GROUP BY 
    ur.UserId;
