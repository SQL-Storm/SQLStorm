
WITH FilteredPosts AS (
    SELECT 
        p.Id AS PostId,
        p.OwnerUserId,
        p.Title,
        p.Body,
        p.CreationDate,
        p.ViewCount,
        p.AnswerCount,
        p.CommentCount,
        string_to_array(substring(p.Tags, 2, length(p.Tags) - 2), '><') AS TagArray
    FROM 
        Posts p
    WHERE 
        p.CreationDate >= CAST('2024-10-01 12:34:56' AS timestamp) - INTERVAL '6 months'
        AND p.PostTypeId = 1 
),
UserActivities AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COUNT(DISTINCT b.Id) AS BadgeCount,
        COALESCE(SUM(v.BountyAmount), 0) AS TotalBounty,
        COALESCE(SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END), 0) AS TotalUpVotes
    FROM 
        Users u
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    LEFT JOIN 
        Votes v ON u.Id = v.UserId
    GROUP BY 
        u.Id, u.DisplayName
),
PostTagStats AS (
    SELECT 
        t.TagName,
        COUNT(*) AS PostCount,
        SUM(p.ViewCount) AS TotalViews,
        SUM(p.AnswerCount) AS TotalAnswers,
        SUM(p.CommentCount) AS TotalComments
    FROM 
        FilteredPosts p
    JOIN 
        UNNEST(p.TagArray) AS t(TagName) ON TRUE
    GROUP BY 
        t.TagName
)
SELECT 
    u.UserId,
    u.DisplayName,
    COALESCE(u.BadgeCount, 0) AS UserBadgeCount,
    COALESCE(u.TotalBounty, 0) AS UserTotalBounty,
    COALESCE(u.TotalUpVotes, 0) AS UserTotalUpVotes,
    pt.TagName,
    pt.PostCount AS NumberOfPosts,
    pt.TotalViews,
    pt.TotalAnswers,
    pt.TotalComments
FROM 
    PostTagStats pt
JOIN 
    UserActivities u ON pt.TagName = ANY((
        SELECT string_to_array(substring(p.Tags, 2, length(p.Tags) - 2), '><')
        FROM Posts p
        WHERE p.OwnerUserId = u.UserId
        AND p.PostTypeId = 1)) 
ORDER BY 
    pt.PostCount DESC, 
    pt.TotalViews DESC;
