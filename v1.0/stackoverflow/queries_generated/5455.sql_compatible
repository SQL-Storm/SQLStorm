
WITH RecentActiveUsers AS (
    SELECT Id, DisplayName, Reputation, CreationDate, LastAccessDate, 
           ROW_NUMBER() OVER (ORDER BY LastAccessDate DESC) AS UserRank
    FROM Users
    WHERE LastAccessDate >= '2024-10-01 12:34:56'::timestamp - INTERVAL '30 days'
),
TopPosts AS (
    SELECT p.Id, p.Title, p.CreationDate, p.Score, p.ViewCount, 
           COUNT(a.Id) AS AnswerCount, STRING_AGG(DISTINCT t.TagName, ', ') AS Tags
    FROM Posts p
    LEFT JOIN Posts a ON a.ParentId = p.Id
    LEFT JOIN LATERAL unnest(string_to_array(p.Tags, ',')) AS tag ON true
    LEFT JOIN Tags t ON TRIM(tag) = t.TagName
    WHERE p.PostTypeId = 1 AND p.CreationDate >= '2024-10-01 12:34:56'::timestamp - INTERVAL '90 days'
    GROUP BY p.Id, p.Title, p.CreationDate, p.Score, p.ViewCount
),
UserParticipation AS (
    SELECT u.Id AS UserId, COUNT(v.Id) AS VotesCount, 
           SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes, 
           SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes
    FROM Users u
    LEFT JOIN Votes v ON u.Id = v.UserId
    WHERE u.Id IN (SELECT Id FROM RecentActiveUsers)
    GROUP BY u.Id
)
SELECT u.DisplayName, u.Reputation, u.CreationDate, 
       p.Title AS TopPostTitle, p.Score AS PostScore, p.ViewCount AS PostViews, 
       up.VotesCount, up.UpVotes, up.DownVotes,
       STRING_AGG(DISTINCT t.TagName, ', ') AS AssociatedTags
FROM RecentActiveUsers u
JOIN UserParticipation up ON u.Id = up.UserId
JOIN TopPosts p ON p.AnswerCount > 0
LEFT JOIN LATERAL unnest(string_to_array(p.Tags, ',')) AS tag ON true
LEFT JOIN Tags t ON TRIM(tag) = t.TagName
GROUP BY u.Id, u.DisplayName, u.Reputation, u.CreationDate, 
         p.Id, p.Title, p.Score, p.ViewCount, up.VotesCount, up.UpVotes, up.DownVotes
ORDER BY u.Reputation DESC, p.Score DESC
LIMIT 10;
