WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS Rank,
        COUNT(c.Id) AS CommentCount,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes,
        COALESCE(SUM(CASE WHEN ph.PostHistoryTypeId = 10 THEN 1 ELSE 0 END), 0) AS ClosedPosts
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    LEFT JOIN 
        PostHistory ph ON p.Id = ph.PostId
    GROUP BY 
        p.Id, p.Title, p.CreationDate, p.OwnerUserId
),
UserReputation AS (
    SELECT 
        u.Id,
        u.Reputation,
        u.DisplayName,
        ARRAY_AGG(DISTINCT b.Name) AS Badges
    FROM 
        Users u
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    GROUP BY 
        u.Id, u.Reputation, u.DisplayName
),
PostActivitySummary AS (
    SELECT 
        r.PostId,
        r.Title,
        r.Rank,
        r.CommentCount,
        r.UpVotes,
        r.DownVotes,
        r.ClosedPosts,
        ur.DisplayName,
        ur.Reputation,
        ur.Badges
    FROM 
        RankedPosts r
    JOIN 
        Users u ON r.OwnerUserId = u.Id
    JOIN 
        UserReputation ur ON u.Id = ur.Id
)
SELECT 
    pas.PostId,
    pas.Title,
    pas.CommentCount,
    pas.UpVotes,
    pas.DownVotes,
    pas.ClosedPosts,
    pas.DisplayName,
    pas.Reputation,
    CASE 
        WHEN pas.ClosedPosts > 0 THEN 'Closed' 
        ELSE 'Open' 
    END AS PostStatus,
    COALESCE(array_length(pas.Badges, 1), 0) AS BadgeCount,
    STRING_AGG(DISTINCT t.TagName, ', ') FILTER (WHERE p.Tags IS NOT NULL) AS Tags
FROM 
    PostActivitySummary pas
LEFT JOIN 
    Posts p ON pas.PostId = p.Id
LEFT JOIN 
    Tags t ON t.Id = ANY(string_to_array(substring(p.Tags, 2, length(p.Tags)-2), '><')::int[])
WHERE 
    pas.Rank <= 3 
GROUP BY 
    pas.PostId, pas.Title, pas.CommentCount, pas.UpVotes, pas.DownVotes, 
    pas.ClosedPosts, pas.DisplayName, pas.Reputation
ORDER BY 
    pas.UpVotes DESC NULLS LAST,
    pas.CommentCount DESC NULLS LAST;