WITH UserVoteStats AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes,
        COUNT(DISTINCT p.Id) AS PostsCount,
        COUNT(DISTINCT c.Id) AS CommentsCount
    FROM Users u
    LEFT JOIN Votes v ON u.Id = v.UserId
    LEFT JOIN Posts p ON u.Id = p.OwnerUserId
    LEFT JOIN Comments c ON u.Id = c.UserId
    GROUP BY u.Id, u.DisplayName
),
PostStats AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.OwnerUserId,
        COUNT(c.Id) AS CommentCount,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes
    FROM Posts p
    LEFT JOIN Comments c ON p.Id = c.PostId
    LEFT JOIN Votes v ON p.Id = v.PostId
    WHERE p.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - interval '1 year'
    GROUP BY p.Id, p.Title, p.CreationDate, p.OwnerUserId
),
RankedPosts AS (
    SELECT 
        ps.*,
        ROW_NUMBER() OVER (PARTITION BY ps.OwnerUserId ORDER BY ps.UpVotes DESC, ps.CommentCount DESC) AS Rank
    FROM PostStats ps
),
ClosedPosts AS (
    SELECT 
        p.Id,
        p.Title,
        ph.CreationDate AS ClosedDate,
        pt.Name AS CloseReason
    FROM Posts p
    JOIN PostHistory ph ON p.Id = ph.PostId AND ph.PostHistoryTypeId = 10
    JOIN CloseReasonTypes pt ON ph.Comment::int = pt.Id
)
SELECT 
    uvs.UserId,
    uvs.DisplayName,
    COALESCE(rp.Title, 'No Posts') AS TopPost,
    COALESCE(rp.UpVotes, 0) AS TopPostUpVotes,
    COALESCE(cp.ClosedDate, 'Not Closed') AS PostClosedDate,
    cp.CloseReason AS CloseReason
FROM UserVoteStats uvs
LEFT JOIN RankedPosts rp ON uvs.UserId = rp.OwnerUserId AND rp.Rank = 1
LEFT JOIN ClosedPosts cp ON rp.PostId = cp.Id
WHERE uvs.Reputation > 1000
ORDER BY uvs.UpVotes DESC, uvs.PostsCount DESC;