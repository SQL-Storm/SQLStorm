
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostID,
        p.Title,
        p.CreationDate,
        p.Score,
        p.ViewCount,
        p.AnswerCount,
        u.DisplayName AS OwnerDisplayName,
        COUNT(c.Id) AS CommentCount,
        STRING_AGG(DISTINCT t.TagName, ', ') AS Tags,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC) AS UserRank
    FROM 
        Posts p
    LEFT JOIN 
        Users u ON p.OwnerUserId = u.Id
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        (SELECT 
            PostId, 
            UNNEST(STRING_TO_ARRAY(SUBSTRING(Tags, 2, LENGTH(Tags) - 2), '><')) AS TagName 
         FROM 
            Posts) AS t ON p.Id = t.PostId
    WHERE 
        p.PostTypeId = 1  
    GROUP BY 
        p.Id, p.Title, p.CreationDate, p.Score, p.ViewCount, p.AnswerCount, u.DisplayName
),

HighlightedPosts AS (
    SELECT 
        rp.*,
        CASE 
            WHEN rp.ViewCount > 1000 THEN 'Hot'
            WHEN rp.AnswerCount > 5 THEN 'Engaging'
            ELSE 'Standard'
        END AS PostCategory
    FROM 
        RankedPosts rp
)

SELECT 
    h.PostID,
    h.Title,
    h.CreationDate,
    h.Score,
    h.ViewCount,
    h.AnswerCount,
    h.CommentCount,
    h.OwnerDisplayName,
    h.Tags,
    h.PostCategory
FROM 
    HighlightedPosts h
WHERE 
    h.UserRank <= 5  
ORDER BY 
    h.Score DESC, h.ViewCount DESC;
