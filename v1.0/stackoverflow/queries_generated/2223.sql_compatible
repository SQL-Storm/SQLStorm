
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.ViewCount,
        p.Score,
        COUNT(c.Id) AS CommentCount,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS UserPostRank
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    WHERE 
        p.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 year' 
        AND p.PostTypeId = 1
    GROUP BY 
        p.Id, p.Title, p.CreationDate, p.ViewCount, p.Score, p.OwnerUserId
),
UserActivity AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COALESCE(SUM(v.BountyAmount), 0) AS TotalBounties,
        COALESCE(SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END), 0) AS TotalUpvotes,
        COALESCE(SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END), 0) AS TotalDownvotes
    FROM 
        Users u
    LEFT JOIN 
        Votes v ON u.Id = v.UserId
    GROUP BY 
        u.Id, u.DisplayName
),
TopUsers AS (
    SELECT 
        ua.UserId,
        ua.DisplayName,
        SUM(ua.TotalUpvotes - ua.TotalDownvotes) AS NetVotes
    FROM 
        UserActivity ua
    GROUP BY 
        ua.UserId, ua.DisplayName
    HAVING 
        SUM(ua.TotalUpvotes - ua.TotalDownvotes) > 0
)

SELECT 
    p.Title,
    p.CreationDate,
    p.ViewCount,
    p.Score,
    up.UserId,
    up.DisplayName,
    up.NetVotes,
    COALESCE(b.Count, 0) AS BadgeCount
FROM 
    RankedPosts p
JOIN 
    TopUsers up ON p.OwnerUserId = up.UserId
LEFT JOIN 
    (SELECT UserId, COUNT(*) AS Count 
     FROM Badges 
     GROUP BY UserId) b ON up.UserId = b.UserId
WHERE 
    p.UserPostRank <= 5
ORDER BY 
    p.Score DESC, 
    p.ViewCount DESC;
