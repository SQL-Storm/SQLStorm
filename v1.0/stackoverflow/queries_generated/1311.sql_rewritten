WITH UserBadgeCounts AS (
    SELECT 
        u.Id AS UserId,
        COUNT(b.Id) AS BadgeCount,
        SUM(CASE WHEN b.Class = 1 THEN 1 ELSE 0 END) AS GoldBadges,
        SUM(CASE WHEN b.Class = 2 THEN 1 ELSE 0 END) AS SilverBadges,
        SUM(CASE WHEN b.Class = 3 THEN 1 ELSE 0 END) AS BronzeBadges
    FROM Users u
    LEFT JOIN Badges b ON u.Id = b.UserId
    GROUP BY u.Id
),
PostStats AS (
    SELECT
        p.OwnerUserId,
        COUNT(p.Id) AS PostCount,
        SUM(COALESCE(p.Score, 0)) AS TotalScore,
        AVG(p.ViewCount) AS AvgViewCount
    FROM Posts p
    GROUP BY p.OwnerUserId
),
TopUsers AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        ub.BadgeCount,
        ps.PostCount,
        ps.TotalScore,
        ps.AvgViewCount,
        RANK() OVER (ORDER BY ps.TotalScore DESC) AS ScoreRank
    FROM Users u
    JOIN UserBadgeCounts ub ON u.Id = ub.UserId
    LEFT JOIN PostStats ps ON u.Id = ps.OwnerUserId
    WHERE u.Reputation > 1000
),
PostComments AS (
    SELECT 
        p.Id AS PostId,
        COUNT(c.Id) AS CommentCount
    FROM Posts p
    LEFT JOIN Comments c ON p.Id = c.PostId
    GROUP BY p.Id
),
RecentPostEdits AS (
    SELECT 
        ph.PostId,
        ph.UserId,
        ph.CreationDate,
        CONCAT('Edited by ', ph.UserDisplayName, ' on ', TO_CHAR(ph.CreationDate, 'YYYY-MM-DD')) AS EditDetails
    FROM PostHistory ph
    WHERE ph.PostHistoryTypeId IN (4, 5) 
    ORDER BY ph.CreationDate DESC
    LIMIT 10
)

SELECT 
    tu.UserId,
    tu.DisplayName,
    tu.BadgeCount,
    tu.PostCount,
    tu.TotalScore,
    tu.AvgViewCount,
    COALESCE(pc.CommentCount, 0) AS TotalComments,
    COALESCE(rpe.EditDetails, 'No Edits') AS RecentEditDetails
FROM TopUsers tu
LEFT JOIN PostComments pc ON tu.UserId = (SELECT OwnerUserId FROM Posts p WHERE p.OwnerUserId = tu.UserId LIMIT 1)
LEFT JOIN RecentPostEdits rpe ON rpe.PostId = (SELECT Id FROM Posts p WHERE p.OwnerUserId = tu.UserId ORDER BY CreationDate DESC LIMIT 1)
WHERE tu.ScoreRank <= 10
ORDER BY tu.TotalScore DESC;