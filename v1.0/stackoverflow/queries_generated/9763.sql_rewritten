WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId, 
        p.Title, 
        p.Score, 
        p.ViewCount, 
        COALESCE(SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END), 0) AS UpVotes,
        COALESCE(SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END), 0) AS DownVotes,
        COALESCE(COUNT(c.Id), 0) AS CommentCount,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC, p.CreationDate DESC) AS Rank
    FROM 
        Posts p
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    WHERE 
        p.CreationDate >= cast('2024-10-01' as date) - INTERVAL '30 days'
    GROUP BY 
        p.Id
),
UsersWithPosts AS (
    SELECT 
        u.Id AS UserId, 
        u.DisplayName, 
        u.Reputation, 
        rp.PostId, 
        rp.Title, 
        rp.Score, 
        rp.UpVotes, 
        rp.DownVotes, 
        rp.CommentCount
    FROM 
        Users u
    JOIN 
        RankedPosts rp ON u.Id = rp.OwnerUserId
)
SELECT 
    uwp.UserId, 
    uwp.DisplayName, 
    uwp.Reputation, 
    COUNT(DISTINCT uwp.PostId) AS TotalPosts, 
    SUM(uwp.UpVotes) AS TotalUpVotes, 
    SUM(uwp.DownVotes) AS TotalDownVotes, 
    AVG(uwp.Score) AS AverageScore
FROM 
    UsersWithPosts uwp
GROUP BY 
    uwp.UserId, uwp.DisplayName, uwp.Reputation
HAVING 
    COUNT(DISTINCT uwp.PostId) > 5
ORDER BY 
    AverageScore DESC, TotalUpVotes DESC
LIMIT 10;