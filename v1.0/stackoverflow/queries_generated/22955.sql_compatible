
WITH RecursivePostHistory AS (
    SELECT 
        ph.PostId,
        ph.RevisionGUID,
        ph.CreationDate,
        ph.Comment,
        ROW_NUMBER() OVER (PARTITION BY ph.PostId ORDER BY ph.CreationDate DESC) AS rn
    FROM 
        PostHistory ph
    WHERE 
        ph.CreationDate >= DATE '2024-10-01' - INTERVAL '30 days'
),
AggregatedBadgeCounts AS (
    SELECT 
        b.UserId,
        COUNT(*) FILTER (WHERE b.Class = 1) AS GoldBadges,
        COUNT(*) FILTER (WHERE b.Class = 2) AS SilverBadges,
        COUNT(*) FILTER (WHERE b.Class = 3) AS BronzeBadges
    FROM 
        Badges b
    GROUP BY 
        b.UserId
),
UserPostStats AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COALESCE(SUM(CASE WHEN p.PostTypeId = 1 THEN 1 ELSE 0 END), 0) AS QuestionCount,
        COALESCE(SUM(CASE WHEN p.PostTypeId = 2 THEN 1 ELSE 0 END), 0) AS AnswerCount,
        COALESCE(SUM(CASE WHEN p.PostTypeId = 1 THEN p.ViewCount ELSE 0 END), 0) AS TotalViews
    FROM 
        Users u
    LEFT JOIN 
        Posts p ON u.Id = p.OwnerUserId
    GROUP BY 
        u.Id, u.DisplayName
),
UserActivity AS (
    SELECT 
        us.UserId,
        us.DisplayName,
        us.QuestionCount,
        us.AnswerCount,
        us.TotalViews,
        COALESCE(ag.GoldBadges, 0) AS GoldBadges,
        COALESCE(ag.SilverBadges, 0) AS SilverBadges,
        COALESCE(ag.BronzeBadges, 0) AS BronzeBadges,
        SUM(CASE 
                WHEN ph.PostId IS NOT NULL THEN 1 
                ELSE 0 
            END) AS RecentActivityCount,
        COUNT(DISTINCT ph.PostId) FILTER (WHERE ph.CreationDate >= DATE '2024-10-01' - INTERVAL '7 days') AS RecentCloseReopenCount 
    FROM 
        UserPostStats us
    LEFT JOIN 
        AggregatedBadgeCounts ag ON us.UserId = ag.UserId
    LEFT JOIN 
        RecursivePostHistory ph ON us.UserId = (SELECT UserId FROM Posts WHERE Id = ph.PostId LIMIT 1)
    GROUP BY 
        us.UserId, us.DisplayName, us.QuestionCount, us.AnswerCount, us.TotalViews, ag.GoldBadges, ag.SilverBadges, ag.BronzeBadges
)
SELECT 
    ua.DisplayName,
    ua.QuestionCount,
    ua.AnswerCount,
    ua.TotalViews,
    ua.GoldBadges,
    ua.SilverBadges,
    ua.BronzeBadges,
    ua.RecentActivityCount,
    ua.RecentCloseReopenCount,
    CASE 
        WHEN ua.TotalViews >= 1000 THEN 'High Activity'
        WHEN ua.TotalViews BETWEEN 500 AND 999 THEN 'Medium Activity'
        ELSE 'Low Activity'
    END AS ActivityLevel
FROM 
    UserActivity ua
WHERE 
    (ua.QuestionCount > 0 OR ua.AnswerCount > 0) 
    AND ua.RecentCloseReopenCount < 5
ORDER BY 
    ua.TotalViews DESC, ua.DisplayName ASC;
