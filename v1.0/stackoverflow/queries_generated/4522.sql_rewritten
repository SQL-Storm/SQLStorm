WITH RankedPosts AS (
    SELECT 
        p.Id, 
        p.Title, 
        p.Score, 
        p.CreationDate,
        ROW_NUMBER() OVER (PARTITION BY p.PostTypeId ORDER BY p.Score DESC) AS Rank,
        COUNT(c.Id) AS CommentCount
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    WHERE 
        p.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 year'
    GROUP BY 
        p.Id
), UserActivity AS (
    SELECT 
        u.Id AS UserId, 
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS Upvotes,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS Downvotes,
        COUNT(DISTINCT pb.Id) AS PostsBounty
    FROM 
        Users u
    LEFT JOIN 
        Votes v ON u.Id = v.UserId
    LEFT JOIN 
        Posts pb ON u.Id = pb.OwnerUserId
    GROUP BY 
        u.Id
), RecentPostHistory AS (
    SELECT 
        ph.PostId, 
        MIN(ph.CreationDate) AS FirstEdit,
        COUNT(ph.Id) AS EditCount,
        SUM(CASE WHEN ph.PostHistoryTypeId IN (10, 11) THEN 1 ELSE 0 END) AS CloseOpenCount
    FROM 
        PostHistory ph
    WHERE 
        ph.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '6 months'
    GROUP BY 
        ph.PostId
)
SELECT 
    rp.Id AS PostId,
    rp.Title,
    rp.Score,
    COALESCE(ua.Upvotes, 0) AS Upvotes,
    COALESCE(ua.Downvotes, 0) AS Downvotes,
    COALESCE(php.FirstEdit, 'Never') AS FirstEdit,
    COALESCE(php.EditCount, 0) AS TotalEdits,
    COALESCE(php.CloseOpenCount, 0) AS CloseOpenCount,
    rp.CommentCount,
    CASE 
        WHEN rp.Rank <= 5 THEN 'Top Post'
        WHEN rp.Rank <= 20 THEN 'Moderately Popular'
        ELSE 'Less Popular'
    END AS PopularityStatus
FROM 
    RankedPosts rp
LEFT JOIN 
    UserActivity ua ON ua.UserId = rp.Id
LEFT JOIN 
    RecentPostHistory php ON php.PostId = rp.Id
WHERE 
    rp.Rank <= 20
ORDER BY 
    rp.Score DESC, rp.CreationDate DESC
LIMIT 100;