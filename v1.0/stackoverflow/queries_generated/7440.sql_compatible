
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.ViewCount,
        p.Score,
        p.CreationDate,
        u.DisplayName AS OwnerDisplayName,
        ROW_NUMBER() OVER (PARTITION BY p.PostTypeId ORDER BY p.Score DESC, p.ViewCount DESC) AS Rank
    FROM 
        Posts p
    JOIN 
        Users u ON p.OwnerUserId = u.Id
    WHERE 
        p.CreationDate >= CURRENT_DATE - INTERVAL '6 months' 
        AND p.PostTypeId IN (1, 2)  
),
PopularTags AS (
    SELECT 
        t.TagName,
        COUNT(pt.PostId) AS TagUsage
    FROM 
        Tags t
    JOIN 
        Posts p ON p.Tags LIKE '%' || t.TagName || '%'
    JOIN 
        PostTypes pt ON p.PostTypeId = pt.Id
    WHERE 
        p.CreationDate >= CURRENT_DATE - INTERVAL '6 months'
    GROUP BY 
        t.TagName
),
TopBadges AS (
    SELECT 
        b.Name,
        COUNT(b.UserId) AS BadgeCount
    FROM 
        Badges b
    JOIN 
        Users u ON b.UserId = u.Id
    GROUP BY 
        b.Name
    ORDER BY 
        BadgeCount DESC
    LIMIT 10
)
SELECT 
    rp.PostId,
    rp.Title,
    rp.ViewCount,
    rp.Score,
    rp.CreationDate,
    rp.OwnerDisplayName,
    pt.TagName,
    tb.Name AS BadgeName,
    tb.BadgeCount
FROM 
    RankedPosts rp
LEFT JOIN 
    PopularTags pt ON rp.PostId = pt.TagUsage
LEFT JOIN 
    TopBadges tb ON rp.OwnerDisplayName = tb.Name
WHERE 
    rp.Rank <= 10
ORDER BY 
    rp.CreationDate DESC;
