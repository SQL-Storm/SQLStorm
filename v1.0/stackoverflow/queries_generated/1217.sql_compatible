
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Score,
        p.AnswerCount,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS PostRank,
        COUNT(c.Id) OVER (PARTITION BY p.Id) AS CommentCount
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    WHERE 
        p.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 year'
),
UserBadges AS (
    SELECT 
        b.UserId,
        COUNT(b.Id) AS BadgeCount,
        STRING_AGG(b.Name, ', ') AS BadgeNames
    FROM 
        Badges b
    GROUP BY 
        b.UserId
),
UserReputation AS (
    SELECT 
        u.Id AS UserId,
        u.Reputation,
        COALESCE(b.BadgeCount, 0) AS BadgeCount,
        COALESCE(b.BadgeNames, 'No Badges') AS BadgeNames
    FROM 
        Users u
    LEFT JOIN 
        UserBadges b ON u.Id = b.UserId
)
SELECT 
    p.Title,
    p.Score,
    p.AnswerCount,
    u.DisplayName,
    u.Reputation,
    ub.BadgeCount,
    ub.BadgeNames,
    p.CreationDate
FROM 
    RankedPosts p
JOIN 
    Users u ON p.OwnerUserId = u.Id
LEFT JOIN 
    UserReputation ub ON u.Id = ub.UserId
WHERE 
    p.PostRank = 1 
    AND (p.Score > 10 OR p.AnswerCount > 5)
ORDER BY 
    p.Score DESC, 
    p.CreationDate DESC
LIMIT 100;
