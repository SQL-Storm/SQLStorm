
WITH UserStats AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        u.Reputation,
        COALESCE(SUM(CASE WHEN p.Score > 0 THEN 1 ELSE 0 END), 0) AS TotalQuestions,
        COALESCE(SUM(CASE WHEN p.Score < 0 THEN 1 ELSE 0 END), 0) AS TotalAnswers,
        COUNT(DISTINCT c.Id) AS TotalComments,
        COUNT(DISTINCT b.Id) AS TotalBadges
    FROM 
        Users u
    LEFT JOIN 
        Posts p ON u.Id = p.OwnerUserId AND p.PostTypeId IN (1, 2)
    LEFT JOIN 
        Comments c ON u.Id = c.UserId
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    GROUP BY 
        u.Id, u.DisplayName, u.Reputation
),
TopContent AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.ViewCount,
        p.LastActivityDate,
        STRING_AGG(DISTINCT t.TagName, ', ') AS Tags
    FROM 
        Posts p
    JOIN 
        Tags t ON p.Tags LIKE CONCAT('%', t.TagName, '%')
    WHERE 
        p.CreationDate >= CURRENT_DATE - INTERVAL '1 year'
    GROUP BY 
        p.Id, p.Title, p.ViewCount, p.LastActivityDate
)
SELECT 
    us.UserId,
    us.DisplayName,
    us.Reputation,
    us.TotalQuestions,
    us.TotalAnswers,
    us.TotalComments,
    us.TotalBadges,
    tc.PostId,
    tc.Title,
    tc.ViewCount,
    tc.LastActivityDate,
    tc.Tags
FROM 
    UserStats us
LEFT JOIN 
    TopContent tc ON us.UserId = (
        SELECT OwnerUserId FROM Posts WHERE Id = (
            SELECT p.Id FROM Posts p
            WHERE p.OwnerUserId = us.UserId
            ORDER BY p.ViewCount DESC
            FETCH FIRST 1 ROW ONLY
        )
    )
WHERE 
    us.Reputation > (
        SELECT AVG(Reputation) FROM Users
    )
ORDER BY 
    us.Reputation DESC,
    tc.ViewCount DESC
FETCH FIRST 10 ROWS ONLY;
