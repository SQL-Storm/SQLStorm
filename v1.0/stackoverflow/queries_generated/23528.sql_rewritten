WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.ViewCount,
        p.CreationDate,
        p.Score,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS rn,
        COUNT(p.Id) OVER (PARTITION BY p.OwnerUserId) AS PostCount
    FROM 
        Posts p
    WHERE 
        p.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 YEAR'
),
TopUsers AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        SUM(v.BountyAmount) AS TotalBountyEarned,
        COUNT(DISTINCT bp.PostId) AS BountiedPosts
    FROM 
        Users u
    LEFT JOIN 
        Votes v ON u.Id = v.UserId AND v.VoteTypeId = 9 
    LEFT JOIN 
        Posts bp ON u.Id = bp.OwnerUserId
    WHERE 
        u.Reputation > 1000
    GROUP BY 
        u.Id, u.DisplayName
),
PostHistoryStats AS (
    SELECT 
        ph.PostId,
        MAX(ph.CreationDate) AS LastEditDate,
        COUNT(CASE WHEN ph.PostHistoryTypeId IN (10, 11) THEN 1 END) AS CloseCount, 
        COUNT(CASE WHEN ph.PostHistoryTypeId = 6 THEN 1 END) AS TagEditCount
    FROM 
        PostHistory ph
    GROUP BY 
        ph.PostId
)
SELECT 
    rp.PostId,
    rp.Title,
    rp.ViewCount,
    rp.Score,
    rp.CreationDate,
    CASE 
        WHEN rp.PostCount > 3 THEN 'Active'
        ELSE 'Newbie'
    END AS ActivityStatus,
    tu.DisplayName,
    COALESCE(tu.TotalBountyEarned, 0) AS TotalBountyEarned,
    phs.LastEditDate,
    phs.CloseCount,
    phs.TagEditCount
FROM 
    RankedPosts rp
LEFT JOIN 
    TopUsers tu ON rp.PostId IN (SELECT PostId FROM Posts WHERE OwnerUserId = tu.UserId)
LEFT JOIN 
    PostHistoryStats phs ON rp.PostId = phs.PostId
WHERE 
    rp.rn = 1
    AND (phs.CloseCount > 0 OR phs.TagEditCount > 0) 
ORDER BY 
    rp.ViewCount DESC, rp.Score DESC
LIMIT 50;