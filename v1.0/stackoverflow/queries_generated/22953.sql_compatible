
WITH UserBadgeCounts AS (
    SELECT 
        u.Id AS UserId,
        SUM(CASE WHEN b.Class = 1 THEN 1 ELSE 0 END) AS GoldBadges,
        SUM(CASE WHEN b.Class = 2 THEN 1 ELSE 0 END) AS SilverBadges,
        SUM(CASE WHEN b.Class = 3 THEN 1 ELSE 0 END) AS BronzeBadges
    FROM 
        Users u
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    GROUP BY 
        u.Id
), 
UserPostDetails AS (
    SELECT 
        p.OwnerUserId,
        COUNT(DISTINCT p.Id) AS TotalPosts,
        COUNT(DISTINCT CASE WHEN p.PostTypeId = 1 THEN p.Id END) AS TotalQuestions,
        COUNT(DISTINCT CASE WHEN p.PostTypeId = 2 THEN p.Id END) AS TotalAnswers,
        SUM(COALESCE(p.ViewCount, 0)) AS TotalViews,
        AVG(p.Score) AS AverageScore
    FROM 
        Posts p
    GROUP BY 
        p.OwnerUserId
),
ActiveUsers AS (
    SELECT 
        UserId,
        Reputation,
        DENSE_RANK() OVER (ORDER BY Reputation DESC) AS Rank
    FROM 
        Users
    WHERE 
        LastAccessDate > (TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 month')
),
PostHistoryWithTags AS (
    SELECT 
        ph.PostId,
        ph.UserId,
        STRING_AGG(DISTINCT t.TagName, ', ') AS RelatedTags
    FROM 
        PostHistory ph
    LEFT JOIN 
        Posts p ON ph.PostId = p.Id
    LEFT JOIN 
        UNNEST(string_to_array(p.Tags, '>')) AS t(TagName) ON true
    GROUP BY 
        ph.PostId, ph.UserId
)

SELECT 
    ua.UserId,
    ua.Reputation,
    ub.GoldBadges,
    ub.SilverBadges,
    ub.BronzeBadges,
    upd.TotalPosts,
    upd.TotalQuestions,
    upd.TotalAnswers,
    upd.TotalViews,
    upd.AverageScore,
    pt.RelatedTags,
    CASE 
        WHEN ub.GoldBadges > 0 THEN 'Gold Badge Holder'
        WHEN ub.SilverBadges > 1 THEN 'Silver Badge Enthusiast'
        WHEN ub.BronzeBadges > 10 THEN 'Bronze Badge Collector'
        ELSE 'New User'
    END AS UserCategory
FROM 
    ActiveUsers ua
LEFT JOIN 
    UserBadgeCounts ub ON ua.UserId = ub.UserId
LEFT JOIN 
    UserPostDetails upd ON ua.UserId = upd.OwnerUserId
LEFT JOIN 
    PostHistoryWithTags pt ON upd.OwnerUserId = pt.UserId
WHERE 
    ua.Rank <= 10
ORDER BY 
    ua.Reputation DESC, ub.GoldBadges DESC, upd.TotalPosts DESC
LIMIT 5;
