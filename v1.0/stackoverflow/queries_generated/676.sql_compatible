
WITH RankedPosts AS (
    SELECT 
        p.Id,
        p.Title,
        p.CreationDate,
        p.Score,
        p.ViewCount,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC) AS rn
    FROM 
        Posts p
    WHERE 
        p.CreationDate >= CAST('2024-10-01 12:34:56' AS TIMESTAMP) - INTERVAL '1 year'
    AND
        p.Score > 0
),
UserBadges AS (
    SELECT 
        u.Id AS UserId,
        COUNT(b.Id) AS BadgeCount,
        SUM(CASE WHEN b.Class = 1 THEN 1 ELSE 0 END) AS GoldBadges,
        SUM(CASE WHEN b.Class = 2 THEN 1 ELSE 0 END) AS SilverBadges,
        SUM(CASE WHEN b.Class = 3 THEN 1 ELSE 0 END) AS BronzeBadges
    FROM 
        Users u
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    GROUP BY 
        u.Id
),
ClosedPosts AS (
    SELECT 
        DISTINCT p.Id,
        ph.UserId AS CloserId,
        ph.CreationDate AS CloseDate,
        ph.Comment
    FROM 
        Posts p
    JOIN 
        PostHistory ph ON p.Id = ph.PostId
    WHERE 
        ph.PostHistoryTypeId = 10
)
SELECT 
    u.Id AS UserId,
    u.DisplayName,
    u.Reputation,
    ub.BadgeCount,
    COALESCE(cp.CloseDate, NULL) AS PostCloseDate,
    COUNT(DISTINCT rp.Id) AS TopPostsCount,
    MAX(COALESCE(cp.Comment, 'No reason provided')) AS LastCloseReason,
    STRING_AGG(DISTINCT p.Title, ', ') AS TopPostTitles
FROM 
    Users u
LEFT JOIN 
    UserBadges ub ON u.Id = ub.UserId
LEFT JOIN 
    RankedPosts rp ON u.Id = rp.OwnerUserId AND rp.rn <= 5
LEFT JOIN 
    ClosedPosts cp ON u.Id = cp.CloserId
GROUP BY 
    u.Id, u.DisplayName, u.Reputation, ub.BadgeCount, cp.CloseDate
HAVING 
    COUNT(DISTINCT rp.Id) > 0
ORDER BY 
    u.Reputation DESC, TopPostsCount DESC;
