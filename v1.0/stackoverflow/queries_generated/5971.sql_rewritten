WITH PostStats AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Score,
        p.ViewCount,
        COUNT(c.Id) AS CommentCount,
        COUNT(DISTINCT v.UserId) AS VoteCount,
        STRING_AGG(DISTINCT t.TagName, ', ') AS Tags,
        MAX(ph.CreationDate) AS LastEditDate
    FROM 
        Posts p
        LEFT JOIN Comments c ON p.Id = c.PostId
        LEFT JOIN Votes v ON p.Id = v.PostId
        LEFT JOIN PostHistory ph ON p.Id = ph.PostId
        LEFT JOIN PostTags pt ON p.Id = pt.PostId
        LEFT JOIN Tags t ON pt.TagId = t.Id
    WHERE 
        p.CreationDate > cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 year'
        AND p.Score > 10
    GROUP BY 
        p.Id, p.Title, p.CreationDate, p.Score, p.ViewCount
),
UserStats AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COUNT(DISTINCT p.Id) AS PostsCount,
        SUM(u.UpVotes) AS TotalUpVotes,
        SUM(u.DownVotes) AS TotalDownVotes,
        AVG(u.Reputation) AS AvgReputation
    FROM 
        Users u
        JOIN Posts p ON u.Id = p.OwnerUserId
    WHERE 
        u.CreationDate > cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '5 years'
    GROUP BY 
        u.Id, u.DisplayName
)
SELECT 
    ps.PostId,
    ps.Title,
    ps.CreationDate,
    ps.Score AS PostScore,
    ps.ViewCount,
    ps.CommentCount,
    ps.VoteCount,
    ps.Tags,
    ps.LastEditDate,
    us.UserId,
    us.DisplayName AS OwnerDisplayName,
    us.PostsCount,
    us.TotalUpVotes,
    us.TotalDownVotes,
    us.AvgReputation
FROM 
    PostStats ps
JOIN 
    UserStats us ON ps.PostId IN (SELECT p.Id FROM Posts p WHERE p.OwnerUserId = us.UserId)
ORDER BY 
    ps.Score DESC, 
    us.TotalUpVotes DESC
LIMIT 100;