WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.ViewCount,
        p.AnswerCount,
        STRING_AGG(DISTINCT t.TagName, ', ') AS Tags,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS UserPostRank
    FROM 
        Posts p
    LEFT JOIN 
        Tags t ON POSITION(t.TagName IN p.Tags) > 0
    WHERE 
        p.PostTypeId = 1 
        AND p.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 year' 
    GROUP BY 
        p.Id, p.Title, p.CreationDate, p.ViewCount, p.AnswerCount, p.OwnerUserId
),
UserPostStats AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COUNT(rp.PostId) AS TotalPosts,
        SUM(rp.AnswerCount) AS TotalAnswers,
        SUM(rp.ViewCount) AS TotalViews,
        MAX(rp.CreationDate) AS LastPostDate
    FROM 
        Users u
    JOIN 
        RankedPosts rp ON u.Id = rp.OwnerUserId
    GROUP BY 
        u.Id, u.DisplayName
),
TopUsers AS (
    SELECT 
        up.UserId,
        up.DisplayName,
        up.TotalPosts,
        up.TotalAnswers,
        up.TotalViews,
        ROW_NUMBER() OVER (ORDER BY up.TotalViews DESC) AS Rank 
    FROM 
        UserPostStats up
    WHERE 
        up.TotalPosts > 0
)
SELECT 
    tu.Rank,
    tu.DisplayName,
    tu.TotalPosts,
    tu.TotalAnswers,
    tu.TotalViews,
    par.UserPostRank
FROM 
    TopUsers tu
JOIN 
    RankedPosts par ON par.OwnerUserId = tu.UserId
WHERE 
    tu.Rank <= 10
ORDER BY 
    tu.Rank;