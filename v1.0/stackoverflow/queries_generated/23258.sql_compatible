
WITH UserVotes AS (
    SELECT 
        v.UserId,
        COUNT(CASE WHEN vt.Name = 'UpMod' THEN 1 END) AS UpVotes,
        COUNT(CASE WHEN vt.Name = 'DownMod' THEN 1 END) AS DownVotes,
        SUM(CASE WHEN vt.Name = 'BountyStart' THEN v.BountyAmount ELSE 0 END) AS TotalBounty
    FROM Votes v
    JOIN VoteTypes vt ON vt.Id = v.VoteTypeId
    WHERE v.CreationDate >= DATEADD(YEAR, -1, CAST('2024-10-01' AS DATE))
    GROUP BY v.UserId
),

UniqueBadges AS (
    SELECT 
        b.UserId,
        COUNT(DISTINCT b.Id) AS BadgeCount
    FROM Badges b
    WHERE b.Class = 1 
    GROUP BY b.UserId
),

PostStats AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        COUNT(c.Id) AS CommentCount,
        SUM(v.BountyAmount) AS TotalBountyFromVotes,
        COALESCE(SUM(CASE WHEN ph.PostHistoryTypeId = 10 THEN 1 END), 0) AS CloseCount,
        COALESCE(SUM(CASE WHEN ph.PostHistoryTypeId = 11 THEN 1 END), 0) AS OpenCount
    FROM Posts p
    LEFT JOIN Comments c ON c.PostId = p.Id
    LEFT JOIN Votes v ON v.PostId = p.Id AND v.VoteTypeId IN (6, 7) 
    LEFT JOIN PostHistory ph ON ph.PostId = p.Id
    GROUP BY p.Id, p.Title
),

UserPerformance AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        u.Reputation,
        u.CreationDate,
        COALESCE(uv.UpVotes, 0) AS TotalUpVotes,
        COALESCE(uv.DownVotes, 0) AS TotalDownVotes,
        COALESCE(ub.BadgeCount, 0) AS GoldBadges,
        COUNT(ps.PostId) AS TotalPosts,
        SUM(ps.CommentCount) AS TotalComments,
        SUM(ps.TotalBountyFromVotes) AS TotalBountyFromPostVotes,
        SUM(ps.CloseCount) AS TotalClosedPosts,
        SUM(ps.OpenCount) AS TotalOpenedPosts
    FROM Users u
    LEFT JOIN UserVotes uv ON uv.UserId = u.Id
    LEFT JOIN UniqueBadges ub ON ub.UserId = u.Id
    LEFT JOIN Posts p ON p.OwnerUserId = u.Id
    LEFT JOIN PostStats ps ON ps.PostId = p.Id
    GROUP BY u.Id, u.DisplayName, u.Reputation, u.CreationDate
)

SELECT 
    up.UserId,
    up.DisplayName,
    up.Reputation,
    up.CreationDate,
    up.TotalUpVotes,
    up.TotalDownVotes,
    up.GoldBadges,
    up.TotalPosts,
    up.TotalComments,
    up.TotalBountyFromPostVotes,
    up.TotalClosedPosts,
    up.TotalOpenedPosts,
    CASE 
        WHEN up.Reputation > 1000 AND up.GoldBadges > 0 THEN 'Elite Contributor'
        WHEN up.Reputation BETWEEN 500 AND 1000 AND up.TotalPosts > 10 THEN 'Active Contributor'
        ELSE 'New Contributor' 
    END AS ContributorLevel
FROM UserPerformance up
ORDER BY up.Reputation DESC, up.TotalUpVotes DESC
LIMIT 50;
