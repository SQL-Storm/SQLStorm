
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        RANK() OVER (PARTITION BY p.PostTypeId ORDER BY p.Score DESC) AS RankScore,
        COUNT(c.Id) AS CommentCount
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    WHERE 
        p.CreationDate >= (TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 year') 
    GROUP BY 
        p.Id, p.PostTypeId, p.Title, p.CreationDate
), 

UserReputation AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        SUM(b.Class) AS TotalBadgeClass,
        COUNT(v.Id) FILTER (WHERE v.VoteTypeId = 2) AS UpModCount,
        COUNT(v.Id) FILTER (WHERE v.VoteTypeId = 3) AS DownModCount
    FROM 
        Users u
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    LEFT JOIN 
        Votes v ON u.Id = v.UserId
    GROUP BY 
        u.Id, u.DisplayName
),

PostHistorySummary AS (
    SELECT 
        ph.PostId,
        COUNT(DISTINCT ph.UserId) AS EditorCount,
        ARRAY_AGG(DISTINCT ph.Comment) FILTER (WHERE ph.PostHistoryTypeId IN (10, 11)) AS CloseReasons
    FROM 
        PostHistory ph
    GROUP BY 
        ph.PostId
)

SELECT 
    pp.PostId,
    pp.Title,
    pp.CreationDate,
    pp.RankScore,
    COALESCE(up.DisplayName, 'Unknown') AS Author,
    up.TotalBadgeClass,
    up.UpModCount,
    up.DownModCount,
    phs.EditorCount,
    STRING_AGG(DISTINCT rg.Role) AS UserRoles,
    CASE
        WHEN pp.CommentCount > 0 THEN 'Has Comments'
        ELSE 'No Comments'
    END AS CommentStatus,
    CASE
        WHEN phs.CloseReasons IS NOT NULL THEN 'Closed - Reasons: ' || STRING_AGG(phs.CloseReasons, ', ')
        ELSE 'Open'
    END AS PostStatus
FROM 
    RankedPosts pp
JOIN 
    UserReputation up ON pp.PostId IN (SELECT p.Id FROM Posts p WHERE p.OwnerUserId = up.UserId)
LEFT JOIN 
    PostHistorySummary phs ON pp.PostId = phs.PostId
LEFT JOIN 
    LATERAL (
        SELECT 
            CASE 
                WHEN u.Reputation > 1000 THEN 'Expert' 
                WHEN u.Reputation > 100 THEN 'Contributor' 
                ELSE 'Newbie' 
            END AS Role
        FROM 
            Users u 
        WHERE 
            u.Id = pp.OwnerUserId
    ) rg ON true 
GROUP BY 
    pp.PostId, pp.Title, pp.CreationDate, up.DisplayName,
    up.TotalBadgeClass, up.UpModCount, up.DownModCount, phs.EditorCount, phs.CloseReasons
ORDER BY 
    pp.RankScore;
