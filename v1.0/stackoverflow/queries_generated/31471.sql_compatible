
WITH RankedPosts AS (
    SELECT 
        P.Id AS PostId,
        P.Title,
        P.Body,
        P.CreationDate,
        P.OwnerUserId,
        P.Score,
        ROW_NUMBER() OVER (PARTITION BY P.OwnerUserId ORDER BY P.CreationDate DESC) AS PostRank
    FROM 
        Posts P
    WHERE 
        P.PostTypeId = 1
),
ActiveUsers AS (
    SELECT 
        U.Id AS UserId,
        U.DisplayName,
        U.Reputation,
        COUNT(DISTINCT P.Id) AS TotalPosts,
        SUM(CASE WHEN P.Score > 0 THEN 1 ELSE 0 END) AS PositivePosts,
        SUM(CASE WHEN P.Score < 0 THEN 1 ELSE 0 END) AS NegativePosts
    FROM 
        Users U
    LEFT JOIN 
        Posts P ON U.Id = P.OwnerUserId
    WHERE 
        U.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 year'
    GROUP BY 
        U.Id, U.DisplayName, U.Reputation
),
PostComments AS (
    SELECT 
        C.PostId,
        COUNT(C.Id) AS CommentCount
    FROM 
        Comments C
    GROUP BY 
        C.PostId
),
PostVotes AS (
    SELECT 
        V.PostId,
        COUNT(V.Id) AS VoteCount
    FROM 
        Votes V
    WHERE 
        V.VoteTypeId = 2 
    GROUP BY 
        V.PostId
),
FinalResults AS (
    SELECT 
        RP.PostId,
        RP.Title,
        RP.Score,
        COALESCE(PC.CommentCount, 0) AS TotalComments,
        COALESCE(PV.VoteCount, 0) AS TotalVotes,
        AU.DisplayName,
        AU.Reputation,
        AU.TotalPosts,
        AU.PositivePosts,
        AU.NegativePosts
    FROM 
        RankedPosts RP
    JOIN 
        ActiveUsers AU ON RP.OwnerUserId = AU.UserId
    LEFT JOIN 
        PostComments PC ON RP.PostId = PC.PostId
    LEFT JOIN 
        PostVotes PV ON RP.PostId = PV.PostId
)
SELECT 
    *,
    CASE 
        WHEN TotalVotes > 0 THEN 'Popular' 
        WHEN TotalComments > 5 THEN 'Engaged' 
        ELSE 'Needs Attention' 
    END AS PostStatus
FROM 
    FinalResults
WHERE 
    PostRank = 1 
ORDER BY 
    TotalVotes DESC, Score DESC;
