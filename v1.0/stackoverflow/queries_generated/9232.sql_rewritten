WITH UserStats AS (
    SELECT 
        U.Id AS UserId,
        U.DisplayName,
        U.Reputation,
        U.CreationDate,
        U.Views,
        U.UpVotes,
        U.DownVotes,
        COUNT(DISTINCT P.Id) AS PostCount,
        COUNT(DISTINCT C.Id) AS CommentCount,
        COUNT(DISTINCT B.Id) AS BadgeCount,
        SUM(CASE WHEN P.Score > 0 THEN 1 ELSE 0 END) AS PositivePosts,
        SUM(CASE WHEN P.Score < 0 THEN 1 ELSE 0 END) AS NegativePosts
    FROM Users U
    LEFT JOIN Posts P ON U.Id = P.OwnerUserId
    LEFT JOIN Comments C ON U.Id = C.UserId
    LEFT JOIN Badges B ON U.Id = B.UserId
    WHERE U.Reputation > 100
    GROUP BY U.Id, U.DisplayName, U.Reputation, U.CreationDate, U.Views, U.UpVotes, U.DownVotes
),
PostHistorySummary AS (
    SELECT 
        PH.UserId,
        COUNT(PH.Id) AS TotalEdits,
        COUNT(DISTINCT PH.PostId) AS EditedPosts,
        AVG(EXTRACT(EPOCH FROM (cast('2024-10-01 12:34:56' as timestamp) - PH.CreationDate))) AS AvgEditTime,
        MIN(PH.CreationDate) AS FirstEditDate,
        MAX(PH.CreationDate) AS LastEditDate
    FROM PostHistory PH
    GROUP BY PH.UserId
)
SELECT 
    U.DisplayName,
    U.Reputation,
    U.Views,
    US.PostCount,
    US.CommentCount,
    US.BadgeCount,
    US.PositivePosts,
    US.NegativePosts,
    PHS.TotalEdits,
    PHS.EditedPosts,
    PHS.AvgEditTime,
    PHS.FirstEditDate,
    PHS.LastEditDate
FROM UserStats US
JOIN PostHistorySummary PHS ON US.UserId = PHS.UserId
ORDER BY US.Reputation DESC, US.PostCount DESC, PHS.TotalEdits DESC;