
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Score,
        p.ViewCount,
        u.DisplayName AS OwnerDisplayName,
        ROW_NUMBER() OVER (PARTITION BY et.TagName ORDER BY p.Score DESC) AS Rank,
        et.TagName
    FROM 
        Posts p
    JOIN 
        Users u ON p.OwnerUserId = u.Id
    CROSS JOIN 
        (
            SELECT DISTINCT TRIM(UNNEST(string_to_array(Tags, '>'))) AS TagName
            FROM Posts
            WHERE Tags IS NOT NULL
        ) et
    WHERE 
        p.PostTypeId = 1 
),
PostAggregates AS (
    SELECT 
        rp.PostId,
        rp.Title,
        rp.CreationDate,
        rp.OwnerDisplayName,
        COUNT(c.Id) AS CommentCount,
        SUM(COALESCE(v.BountyAmount, 0)) AS TotalBounty,
        AVG(COALESCE(vote.Score, 0)) AS AverageVoteScore
    FROM 
        RankedPosts rp
    LEFT JOIN 
        Comments c ON rp.PostId = c.PostId
    LEFT JOIN 
        Votes v ON rp.PostId = v.PostId AND v.VoteTypeId = 2 
    WHERE 
        rp.Rank <= 5 
    GROUP BY 
        rp.PostId, rp.Title, rp.CreationDate, rp.OwnerDisplayName
),
PostHistoryCTE AS (
    SELECT 
        ph.PostId,
        STRING_AGG(ph.Comment || ' on ' || FORMAT(ph.CreationDate, 'YYYY-MM-DD HH24:MI:SS'), '; ') AS EditComments
    FROM 
        PostHistory ph
    WHERE 
        ph.PostHistoryTypeId IN (4, 5, 6) 
    GROUP BY 
        ph.PostId
)
SELECT 
    pa.PostId,
    pa.Title,
    pa.CreationDate,
    pa.OwnerDisplayName,
    pa.CommentCount,
    pa.TotalBounty,
    pa.AverageVoteScore,
    COALESCE(ph.EditComments, 'No edits recorded') AS EditComments
FROM 
    PostAggregates pa
LEFT JOIN 
    PostHistoryCTE ph ON pa.PostId = ph.PostId
ORDER BY 
    pa.AverageVoteScore DESC, pa.CommentCount DESC;
