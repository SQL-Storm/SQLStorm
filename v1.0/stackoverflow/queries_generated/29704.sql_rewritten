WITH RankedPosts AS (
    SELECT
        p.Id AS PostId,
        p.Title,
        p.Body,
        p.CreationDate,
        p.Score,
        p.ViewCount,
        p.AnswerCount,
        p.CommentCount,
        u.DisplayName AS OwnerDisplayName,
        u.Reputation AS OwnerReputation,
        t.TagName,
        ROW_NUMBER() OVER (PARTITION BY t.TagName ORDER BY p.CreationDate DESC) AS TagRank
    FROM 
        Posts p
    JOIN 
        Users u ON p.OwnerUserId = u.Id
    CROSS JOIN 
        (SELECT DISTINCT tag FROM unnest(string_to_array(substring(Tags, 2, length(Tags)-2), '><')) AS tag) t
    WHERE 
        p.PostTypeId = 1  
),
TopPosts AS (
    SELECT 
        PostId,
        Title,
        Body,
        CreationDate,
        Score,
        ViewCount,
        AnswerCount,
        CommentCount,
        OwnerDisplayName,
        OwnerReputation,
        TagName
    FROM 
        RankedPosts
    WHERE 
        TagRank <= 5  
),
PostStats AS (
    SELECT 
        TagName,
        COUNT(PostId) AS PostCount,
        AVG(ViewCount) AS AvgViewCount,
        AVG(Score) AS AvgScore,
        AVG(AnswerCount) AS AvgAnswerCount,
        AVG(CommentCount) AS AvgCommentCount
    FROM 
        TopPosts
    GROUP BY 
        TagName
)
SELECT 
    p.PostId,
    p.Title,
    p.Body,
    p.CreationDate,
    p.Score,
    p.ViewCount,
    p.OwnerDisplayName,
    ps.TagName,
    ps.PostCount,
    ps.AvgViewCount,
    ps.AvgScore,
    ps.AvgAnswerCount,
    ps.AvgCommentCount
FROM 
    TopPosts p
JOIN 
    PostStats ps ON p.TagName = ps.TagName
ORDER BY 
    ps.PostCount DESC, p.Score DESC;