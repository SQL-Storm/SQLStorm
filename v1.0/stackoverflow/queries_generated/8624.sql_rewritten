WITH UserStats AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        u.Reputation,
        COUNT(DISTINCT p.Id) AS TotalPosts,
        SUM(CASE WHEN p.PostTypeId = 2 THEN 1 ELSE 0 END) AS TotalAnswers,
        SUM(CASE WHEN p.PostTypeId = 1 THEN 1 ELSE 0 END) AS TotalQuestions,
        SUM(CASE WHEN p.Score > 0 THEN 1 ELSE 0 END) AS TotalUpvotedPosts,
        SUM(v.BountyAmount) AS TotalBounties
    FROM 
        Users u
    LEFT JOIN 
        Posts p ON u.Id = p.OwnerUserId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId AND v.VoteTypeId IN (2, 8)  
    GROUP BY 
        u.Id
),
TagStats AS (
    SELECT 
        t.Id AS TagId,
        t.TagName,
        COUNT(DISTINCT p.Id) AS PostsWithTag
    FROM 
        Tags t
    LEFT JOIN 
        Posts p ON p.Tags ILIKE CONCAT('%<', t.TagName, '>%') 
    GROUP BY 
        t.Id
),
PostHistorySummary AS (
    SELECT 
        ph.UserId,
        ph.PostId,
        COUNT(*) AS EditCount,
        MAX(ph.CreationDate) AS LastEditDate
    FROM 
        PostHistory ph
    WHERE 
        ph.PostHistoryTypeId IN (4, 5, 6)  
    GROUP BY 
        ph.UserId, ph.PostId
)

SELECT 
    us.UserId,
    us.DisplayName,
    us.Reputation,
    us.TotalPosts,
    us.TotalQuestions,
    us.TotalAnswers,
    us.TotalUpvotedPosts,
    us.TotalBounties,
    ts.TagId,
    ts.TagName,
    ts.PostsWithTag,
    phs.EditCount,
    phs.LastEditDate
FROM 
    UserStats us
LEFT JOIN 
    PostHistorySummary phs ON us.UserId = phs.UserId
LEFT JOIN 
    TagStats ts ON ts.TagId IN (SELECT DISTINCT UNNEST(STRING_TO_ARRAY(p.Tags, ','))::int FROM Posts p WHERE p.OwnerUserId = us.UserId)
WHERE 
    us.Reputation > 1000 
ORDER BY 
    us.Reputation DESC, 
    us.TotalPosts DESC;