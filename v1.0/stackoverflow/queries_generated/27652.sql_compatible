
WITH TagCounts AS (
    SELECT 
        TRIM(UNNEST(string_to_array(Tags, '><'))) AS TagName,
        COUNT(*) AS PostCount
    FROM 
        Posts
    WHERE 
        PostTypeId = 1  
    GROUP BY 
        TRIM(UNNEST(string_to_array(Tags, '><')))
),
TopTags AS (
    SELECT 
        TagName,
        PostCount,
        ROW_NUMBER() OVER (ORDER BY PostCount DESC) AS TagRank
    FROM 
        TagCounts
    WHERE 
        PostCount > 10  
),
UserEngagement AS (
    SELECT 
        U.Id AS UserId,
        AVG(U.Reputation) AS AvgReputation,
        SUM(COALESCE(P.ViewCount, 0)) AS TotalViews,
        COUNT(DISTINCT P.Id) AS QuestionCount,
        COUNT(DISTINCT C.Id) AS CommentCount
    FROM 
        Users U
    LEFT JOIN 
        Posts P ON U.Id = P.OwnerUserId AND P.PostTypeId = 1  
    LEFT JOIN 
        Comments C ON P.Id = C.PostId
    GROUP BY 
        U.Id
),
EngagementStats AS (
    SELECT 
        UserId,
        AvgReputation,
        TotalViews,
        QuestionCount,
        CommentCount,
        DENSE_RANK() OVER (ORDER BY TotalViews DESC) AS EngagementRank
    FROM 
        UserEngagement
),
FinalStats AS (
    SELECT 
        T.TagName,
        T.PostCount,
        E.UserId,
        E.AvgReputation,
        E.TotalViews,
        E.QuestionCount,
        E.CommentCount,
        E.EngagementRank
    FROM 
        TopTags T
    JOIN 
        EngagementStats E ON T.TagName = ANY(string_to_array((SELECT STRING_AGG(Tags) FROM Posts WHERE PostTypeId = 1), '><'))
    ORDER BY 
        T.PostCount DESC, E.EngagementRank
)
SELECT 
    TagName,
    PostCount,
    UserId,
    AvgReputation,
    TotalViews,
    QuestionCount,
    CommentCount,
    EngagementRank
FROM 
    FinalStats
WHERE 
    EngagementRank <= 10;
