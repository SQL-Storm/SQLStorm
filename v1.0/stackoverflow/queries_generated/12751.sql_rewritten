WITH UserStats AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COUNT(DISTINCT p.Id) AS PostCount,
        SUM(COALESCE(p.Score, 0)) AS TotalScore,
        SUM(COALESCE(p.ViewCount, 0)) AS TotalViews,
        COUNT(DISTINCT b.Id) AS BadgeCount,
        COUNT(DISTINCT c.Id) AS CommentCount
    FROM 
        Users u
    LEFT JOIN 
        Posts p ON u.Id = p.OwnerUserId
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    LEFT JOIN 
        Comments c ON u.Id = c.UserId
    WHERE 
        u.Reputation > 0
    GROUP BY 
        u.Id
),
PostStats AS (
    SELECT 
        p.PostTypeId,
        COUNT(*) AS TotalPosts,
        SUM(CASE WHEN p.Score > 0 THEN 1 ELSE 0 END) AS PositivePosts,
        SUM(CASE WHEN p.Score < 0 THEN 1 ELSE 0 END) AS NegativePosts,
        AVG(p.ViewCount) AS AvgViews
    FROM 
        Posts p
    GROUP BY 
        p.PostTypeId
),
BadgeStats AS (
    SELECT 
        b.Class,
        COUNT(b.Id) AS BadgeCount
    FROM 
        Badges b
    GROUP BY 
        b.Class
)
SELECT 
    u.DisplayName,
    u.PostCount,
    u.TotalScore,
    u.TotalViews,
    u.BadgeCount,
    u.CommentCount,
    ps.PostTypeId,
    ps.TotalPosts,
    ps.PositivePosts,
    ps.NegativePosts,
    ps.AvgViews,
    bs.Class,
    bs.BadgeCount AS ClassBadgeCount
FROM 
    UserStats u
LEFT JOIN 
    PostStats ps ON u.PostCount > 0
LEFT JOIN 
    BadgeStats bs ON u.BadgeCount > 0
ORDER BY 
    u.TotalScore DESC, 
    u.BadgeCount DESC;