
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.ViewCount,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS PostRank,
        COUNT(c.Id) AS CommentCount,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes, 
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes
    FROM 
        Posts p
        LEFT JOIN Comments c ON p.Id = c.PostId
        LEFT JOIN Votes v ON p.Id = v.PostId
    WHERE 
        p.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 year'
    GROUP BY 
        p.Id, p.Title, p.CreationDate, p.ViewCount, p.OwnerUserId
),
PostStats AS (
    SELECT 
        rp.PostId,
        rp.Title,
        rp.CreationDate,
        rp.CommentCount,
        rp.ViewCount,
        rp.UpVotes,
        rp.DownVotes,
        CASE 
            WHEN rp.CommentCount > 10 THEN 'Active' 
            WHEN rp.UpVotes - rp.DownVotes > 0 THEN 'Positive' 
            ELSE 'Neutral or Negative' 
        END AS PostSentiment,
        COALESCE((SELECT MAX(ph.CreationDate) 
                  FROM PostHistory ph 
                  WHERE ph.PostId = rp.PostId), 'No edits') AS LastEditDate
    FROM 
        RankedPosts rp
)
SELECT 
    ps.PostId,
    ps.Title,
    ps.CreationDate,
    ps.ViewCount,
    ps.CommentCount,
    ps.UpVotes,
    ps.DownVotes,
    ps.PostSentiment,
    ps.LastEditDate,
    COALESCE(u.DisplayName, 'Deleted User') AS OwnerDisplayName
FROM 
    PostStats ps
    LEFT JOIN Users u ON ps.PostId = u.Id
WHERE 
    ps.PostSentiment IN ('Active', 'Positive')
ORDER BY 
    ps.ViewCount DESC, 
    ps.CommentCount DESC
LIMIT 100;
