WITH UserBadges AS (
    SELECT 
        U.Id AS UserId, 
        COUNT(B.Id) AS BadgeCount,
        SUM(CASE WHEN B.Class = 1 THEN 1 ELSE 0 END) AS GoldBadges,
        SUM(CASE WHEN B.Class = 2 THEN 1 ELSE 0 END) AS SilverBadges,
        SUM(CASE WHEN B.Class = 3 THEN 1 ELSE 0 END) AS BronzeBadges
    FROM Users U
    LEFT JOIN Badges B ON U.Id = B.UserId
    GROUP BY U.Id
),
PostMetrics AS (
    SELECT 
        P.Id AS PostId,
        P.Title,
        COUNT(A.Id) AS AnswerCount,
        COALESCE(SUM(V.VoteTypeId = 2), 0) AS UpvoteCount,
        COALESCE(SUM(V.VoteTypeId = 3), 0) AS DownvoteCount
    FROM Posts P
    LEFT JOIN Posts A ON P.Id = A.ParentId AND P.PostTypeId = 1 
    LEFT JOIN Votes V ON P.Id = V.PostId
    WHERE P.ViewCount IS NOT NULL
    GROUP BY P.Id
),
ClosedPosts AS (
    SELECT 
        P.Id AS PostId,
        PH.CreationDate,
        CT.Name AS CloseReason
    FROM Posts P
    JOIN PostHistory PH ON P.Id = PH.PostId AND PH.PostHistoryTypeId = 10 
    LEFT JOIN CloseReasonTypes CT ON PH.Comment::int = CT.Id 
),
UserPostActivity AS (
    SELECT 
        U.Id AS UserId,
        COUNT(DISTINCT P.Id) AS PostCount,
        COUNT(DISTINCT C.Id) AS CommentCount,
        SUM(CASE WHEN V.VoteTypeId = 2 THEN 1 ELSE 0 END) AS TotalUpvotes,
        SUM(CASE WHEN V.VoteTypeId = 3 THEN 1 ELSE 0 END) AS TotalDownvotes
    FROM Users U
    LEFT JOIN Posts P ON U.Id = P.OwnerUserId
    LEFT JOIN Comments C ON P.Id = C.PostId
    LEFT JOIN Votes V ON U.Id = V.UserId
    WHERE U.Reputation IS NOT NULL
    GROUP BY U.Id
)
SELECT 
    U.DisplayName AS UserName,
    U.Reputation,
    UB.BadgeCount,
    UB.GoldBadges,
    UB.SilverBadges,
    UB.BronzeBadges,
    PM.PostId,
    PM.Title AS PostTitle,
    PM.AnswerCount,
    PM.UpvoteCount,
    PM.DownvoteCount,
    COALESCE(CP.CloseReason, 'Not Closed') AS CloseReason,
    CPA.PostCount,
    CPA.CommentCount,
    CPA.TotalUpvotes,
    CPA.TotalDownvotes
FROM Users U
JOIN UserBadges UB ON U.Id = UB.UserId
LEFT JOIN PostMetrics PM ON PM.UpvoteCount > PM.DownvoteCount 
LEFT JOIN ClosedPosts CP ON PM.PostId = CP.PostId
LEFT JOIN UserPostActivity CPA ON CPA.UserId = U.Id
WHERE U.Reputation > 1000 
ORDER BY U.Reputation DESC, PM.AnswerCount DESC, PM.UpvoteCount - PM.DownvoteCount DESC
FETCH FIRST 100 ROWS ONLY;