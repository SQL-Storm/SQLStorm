WITH UserStats AS (
    SELECT 
        U.Id AS UserId,
        U.DisplayName,
        U.Reputation,
        U.CreationDate,
        COUNT(DISTINCT P.Id) AS TotalPosts,
        COUNT(DISTINCT C.Id) AS TotalComments,
        SUM(CASE WHEN V.VoteTypeId = 2 THEN 1 ELSE 0 END) AS TotalUpvotes,
        SUM(CASE WHEN V.VoteTypeId = 3 THEN 1 ELSE 0 END) AS TotalDownvotes
    FROM 
        Users U
    LEFT JOIN 
        Posts P ON U.Id = P.OwnerUserId
    LEFT JOIN 
        Comments C ON U.Id = C.UserId
    LEFT JOIN 
        Votes V ON P.Id = V.PostId
    GROUP BY 
        U.Id, U.DisplayName, U.Reputation, U.CreationDate
),
PostDetails AS (
    SELECT 
        P.Id AS PostId,
        P.Title,
        P.CreationDate AS PostCreationDate,
        P.Score,
        P.ViewCount,
        U.DisplayName AS OwnerDisplayName,
        COUNT(DISTINCT C.Id) AS CommentCount,
        SUM(CASE WHEN V.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpvoteCount,
        SUM(CASE WHEN V.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownvoteCount
    FROM 
        Posts P
    LEFT JOIN 
        Users U ON P.OwnerUserId = U.Id
    LEFT JOIN 
        Comments C ON P.Id = C.PostId
    LEFT JOIN 
        Votes V ON P.Id = V.PostId
    WHERE 
        P.CreationDate > cast('2024-10-01' as date) - INTERVAL '1 year'
    GROUP BY 
        P.Id, P.Title, P.CreationDate, P.Score, P.ViewCount, U.DisplayName
),
TopPosts AS (
    SELECT 
        PD.*,
        ROW_NUMBER() OVER (ORDER BY PD.Score DESC) AS Rank
    FROM 
        PostDetails PD
)
SELECT 
    US.DisplayName AS UserName,
    US.Reputation,
    US.TotalPosts,
    US.TotalComments,
    TP.Title AS TopPostTitle,
    TP.PostCreationDate,
    TP.Score AS TopPostScore,
    TP.ViewCount AS TopPostViewCount,
    TP.CommentCount AS TopPostCommentCount,
    TP.UpvoteCount AS TopPostUpvotes,
    TP.DownvoteCount AS TopPostDownvotes
FROM 
    UserStats US
LEFT JOIN 
    TopPosts TP ON US.UserId = TP.OwnerDisplayName
WHERE 
    TP.Rank <= 10
ORDER BY 
    US.Reputation DESC, TP.Score DESC;