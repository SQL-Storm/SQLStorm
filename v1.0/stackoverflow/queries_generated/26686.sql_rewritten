WITH TagCounts AS (
    SELECT
        unnest(string_to_array(substring(Tags, 2, length(Tags)-2), '><')) AS TagName,
        COUNT(*) AS PostCount
    FROM Posts
    WHERE PostTypeId = 1 
    GROUP BY TagName
),
TopTags AS (
    SELECT
        TagName,
        PostCount,
        ROW_NUMBER() OVER (ORDER BY PostCount DESC) AS Rank
    FROM TagCounts
),
TagData AS (
    SELECT
        tt.TagName,
        tt.PostCount,
        COALESCE(p.Title, 'No Title') AS PostTitle,
        COALESCE(u.DisplayName, 'Deleted User') AS User,
        p.CreationDate
    FROM TopTags tt
    JOIN Posts p ON p.Tags LIKE '%' || tt.TagName || '%'
    LEFT JOIN Users u ON p.OwnerUserId = u.Id
    WHERE tt.Rank <= 10 
),
UserEngagement AS (
    SELECT
        u.Id AS UserId,
        u.DisplayName,
        COUNT(DISTINCT p.Id) AS TotalPosts,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS TotalUpvotes,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS TotalDownvotes
    FROM Users u
    LEFT JOIN Posts p ON u.Id = p.OwnerUserId
    LEFT JOIN Votes v ON p.Id = v.PostId
    WHERE u.Reputation > 100 
    GROUP BY u.Id, u.DisplayName
),
PostHistoryAggregates AS (
    SELECT
        p.Id AS PostId,
        COUNT(ph.Id) AS HistoryCount,
        MAX(ph.CreationDate) AS LastEdited
    FROM Posts p
    LEFT JOIN PostHistory ph ON p.Id = ph.PostId
    GROUP BY p.Id
)
SELECT
    td.TagName,
    td.PostCount,
    td.PostTitle,
    td.User,
    td.CreationDate,
    ue.DisplayName AS EngagedUser,
    ue.TotalPosts,
    ue.TotalUpvotes,
    ue.TotalDownvotes,
    pha.HistoryCount,
    pha.LastEdited
FROM TagData td
LEFT JOIN UserEngagement ue ON ue.TotalPosts > 0 
LEFT JOIN PostHistoryAggregates pha ON pha.PostId = td.PostId
ORDER BY td.PostCount DESC, ue.TotalPosts DESC;