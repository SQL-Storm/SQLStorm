
WITH RankedPosts AS (
    SELECT 
        P.Id AS PostId,
        P.Title,
        P.CreationDate,
        P.ViewCount,
        P.Score,
        U.DisplayName AS OwnerName,
        ROW_NUMBER() OVER (PARTITION BY P.OwnerUserId ORDER BY P.CreationDate DESC) AS RN,
        COUNT(CASE WHEN V.VoteTypeId = 2 THEN 1 END) AS UpVotes,
        COUNT(CASE WHEN V.VoteTypeId = 3 THEN 1 END) AS DownVotes
    FROM Posts P
    LEFT JOIN Users U ON P.OwnerUserId = U.Id
    LEFT JOIN Votes V ON P.Id = V.PostId
    WHERE P.PostTypeId = 1 
    GROUP BY P.Id, P.Title, P.CreationDate, P.ViewCount, P.Score, P.OwnerUserId, U.DisplayName 
),
RecentEdits AS (
    SELECT 
        PH.PostId,
        PH.UserDisplayName,
        PH.CreationDate AS EditDate,
        PH.Comment,
        ROW_NUMBER() OVER (PARTITION BY PH.PostId ORDER BY PH.CreationDate DESC) AS EditRN
    FROM PostHistory PH
    WHERE PH.PostHistoryTypeId IN (4, 5, 6, 10, 11) 
),
MostVotedPosts AS (
    SELECT 
        PostId,
        COUNT(*) AS VoteCount
    FROM Votes
    WHERE VoteTypeId IN (2, 3) 
    GROUP BY PostId
)
SELECT 
    RP.PostId,
    RP.Title,
    RP.CreationDate,
    RP.ViewCount,
    RP.Score,
    COALESCE(RE.UserDisplayName, 'No Edits') AS LastEditedBy,
    COALESCE(RE.EditDate, 'No Edits') AS LastEditDate,
    RP.UpVotes,
    RP.DownVotes,
    COALESCE(M.VoteCount, 0) AS TotalVotes
FROM RankedPosts RP
LEFT JOIN RecentEdits RE ON RP.PostId = RE.PostId AND RE.EditRN = 1 
LEFT JOIN MostVotedPosts M ON RP.PostId = M.PostId
WHERE RP.RN = 1 
AND RP.Score > 0 
ORDER BY RP.CreationDate DESC
LIMIT 10;
