
WITH RankedPosts AS (
    SELECT p.Id, p.Title, p.CreationDate, p.Score, p.ViewCount, COUNT(c.Id) AS CommentCount,
           ROW_NUMBER() OVER (PARTITION BY p.Id ORDER BY p.CreationDate DESC) AS rn
    FROM Posts p
    LEFT JOIN Comments c ON p.Id = c.PostId
    WHERE p.PostTypeId = 1 AND p.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 year'
    GROUP BY p.Id, p.Title, p.CreationDate, p.Score, p.ViewCount
),
TopPosts AS (
    SELECT rp.Id, rp.Title, rp.CreationDate, rp.Score, rp.ViewCount, rp.CommentCount
    FROM RankedPosts rp
    WHERE rp.rn = 1
    ORDER BY rp.Score DESC, rp.ViewCount DESC
    LIMIT 10
)
SELECT tp.Id, tp.Title, tp.CreationDate, tp.Score, tp.ViewCount, tp.CommentCount,
       u.DisplayName AS OwnerDisplayName, u.Reputation AS OwnerReputation,
       (SELECT COUNT(*) FROM Votes v WHERE v.PostId = tp.Id AND v.VoteTypeId = 2) AS UpVotes,
       (SELECT COUNT(*) FROM Votes v WHERE v.PostId = tp.Id AND v.VoteTypeId = 3) AS DownVotes,
       (SELECT STRING_AGG(t.TagName, ', ') FROM Tags t 
        JOIN Posts p ON p.Tags LIKE CONCAT('%', t.TagName, '%')
        WHERE p.Id = tp.Id) AS Tags
FROM TopPosts tp
JOIN Users u ON tp.OwnerUserId = u.Id
ORDER BY tp.Score DESC, tp.ViewCount DESC;
