
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId, 
        p.Title, 
        p.OwnerUserId,
        p.PostTypeId,
        COUNT(DISTINCT c.Id) AS CommentCount,
        COALESCE(SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END), 0) AS UpvoteCount,
        COALESCE(SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END), 0) AS DownvoteCount,
        RANK() OVER (PARTITION BY p.PostTypeId ORDER BY COALESCE(SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END), 0) DESC) AS Rank
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    GROUP BY 
        p.Id, p.Title, p.OwnerUserId, p.PostTypeId
),
ClosedPosts AS (
    SELECT 
        ph.PostId,
        ph.CreationDate AS CloseDate,
        CASE 
            WHEN ph.Comment IN (SELECT Name FROM CloseReasonTypes) THEN ph.Comment
            ELSE 'Unknown reason'
        END AS CloseReason
    FROM 
        PostHistory ph
    WHERE 
        ph.PostHistoryTypeId = 10
),
UserReputation AS (
    SELECT 
        u.Id AS UserId,
        SUM(u.Reputation) AS TotalReputation
    FROM 
        Users u
    GROUP BY 
        u.Id
)
SELECT 
    p.Title,
    rp.CommentCount,
    rp.UpvoteCount,
    rp.DownvoteCount,
    cp.CloseDate,
    cp.CloseReason,
    ur.TotalReputation,
    CASE 
        WHEN rp.PostTypeId = 1 AND cp.CloseDate IS NOT NULL THEN 'Closed Question'
        WHEN rp.PostTypeId = 1 THEN 'Open Question'
        ELSE 'Other Post Type'
    END AS PostStatus,
    COALESCE(DATEDIFF(DAY, p.CreationDate, CURRENT_DATE), 0) AS AgeInDays
FROM 
    RankedPosts rp
JOIN 
    Posts p ON rp.PostId = p.Id
LEFT JOIN 
    ClosedPosts cp ON p.Id = cp.PostId
LEFT JOIN 
    UserReputation ur ON p.OwnerUserId = ur.UserId
WHERE 
    rp.Rank <= 5
    AND rp.UpvoteCount > 0
ORDER BY 
    rp.UpvoteCount DESC;
