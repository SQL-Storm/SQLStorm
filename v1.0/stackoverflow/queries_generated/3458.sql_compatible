
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.OwnerUserId,
        u.DisplayName AS OwnerDisplayName,
        COUNT(a.Id) AS AnswerCount,
        ROW_NUMBER() OVER (PARTITION BY u.Id ORDER BY p.CreationDate DESC) AS UserRank
    FROM 
        Posts p
    LEFT JOIN 
        Users u ON p.OwnerUserId = u.Id
    LEFT JOIN 
        Posts a ON p.Id = a.ParentId
    WHERE 
        p.PostTypeId = 1 
    GROUP BY 
        p.Id, p.Title, p.CreationDate, p.OwnerUserId, u.DisplayName
),
ClosedPosts AS (
    SELECT 
        ph.PostId,
        ph.CreationDate AS CloseDate,
        ph.Comment AS CloseReason
    FROM 
        PostHistory ph
    WHERE 
        ph.PostHistoryTypeId = 10 
)
SELECT 
    rp.PostId,
    rp.Title,
    rp.CreationDate,
    rp.OwnerDisplayName,
    rp.AnswerCount,
    cp.CloseDate,
    cp.CloseReason,
    CASE 
        WHEN cp.CloseDate IS NOT NULL THEN 'Closed' 
        ELSE 'Open' 
    END AS PostStatus,
    COALESCE((
        SELECT 
            STRING_AGG(b.Name, ', ') 
        FROM 
            Badges b 
        WHERE 
            b.UserId = rp.OwnerUserId
    ), 'No Badges') AS OwnerBadges
FROM 
    RankedPosts rp
LEFT JOIN 
    ClosedPosts cp ON rp.PostId = cp.PostId
WHERE 
    rp.UserRank = 1 AND 
    rp.AnswerCount > 0
ORDER BY 
    rp.CreationDate DESC
LIMIT 100;
