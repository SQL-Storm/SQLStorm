
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.ViewCount,
        ARRAY_AGG(DISTINCT t.TagName) AS Tags,
        (SELECT COUNT(*) FROM Comments c WHERE c.PostId = p.Id) AS CommentCount,
        (SELECT COUNT(*) FROM Votes v WHERE v.PostId = p.Id AND v.VoteTypeId = 2) AS UpVoteCount,
        RANK() OVER (ORDER BY p.Score DESC, p.CreationDate ASC) AS Rank
    FROM 
        Posts p
    JOIN 
        UNNEST(string_to_array(p.Tags, '>')) AS tag ON true
    LEFT JOIN 
        Tags t ON t.TagName = tag
    WHERE 
        p.PostTypeId = 1 
    GROUP BY 
        p.Id, p.Title, p.CreationDate, p.ViewCount, p.Score
),
PopularTags AS (
    SELECT 
        tag.TagName,
        COUNT(*) AS PostCount
    FROM 
        Posts p
    JOIN 
        UNNEST(string_to_array(p.Tags, '>')) AS tag ON true
    WHERE 
        p.PostTypeId = 1 
    GROUP BY 
        tag.TagName
    ORDER BY 
        PostCount DESC
    LIMIT 10
),
TopPostDetails AS (
    SELECT 
        rp.PostId,
        rp.Title,
        rp.CreationDate,
        rp.ViewCount,
        rp.Tags,
        rp.CommentCount,
        rp.UpVoteCount
    FROM 
        RankedPosts rp
    WHERE 
        rp.Rank <= 10 
)
SELECT 
    t.TagName AS PopularTag,
    COUNT(tp.PostId) AS QuestionCount,
    AVG(tp.ViewCount) AS AvgViewCount,
    AVG(tp.CommentCount) AS AvgCommentCount,
    AVG(tp.UpVoteCount) AS AvgUpVoteCount
FROM 
    PopularTags t
LEFT JOIN 
    TopPostDetails tp ON tp.Tags @> ARRAY[t.TagName]
GROUP BY 
    t.TagName
ORDER BY 
    QuestionCount DESC;
