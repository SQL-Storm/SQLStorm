
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId, 
        p.Title, 
        p.CreationDate, 
        p.OwnerUserId, 
        p.Score,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS PostRank
    FROM 
        Posts p
    WHERE 
        p.CreationDate >= DATE_SUB(CAST('2024-10-01' AS DATE), INTERVAL 1 YEAR)
),
UserReputation AS (
    SELECT 
        u.Id AS UserId, 
        u.Reputation,
        CASE 
            WHEN u.Reputation < 100 THEN 'Newbie'
            WHEN u.Reputation BETWEEN 100 AND 999 THEN 'Experienced'
            ELSE 'Veteran'
        END AS ReputationLevel
    FROM 
        Users u
),
PostCommentStats AS (
    SELECT 
        c.PostId,
        COUNT(c.Id) AS CommentCount,
        MAX(c.CreationDate) AS LastCommentDate
    FROM 
        Comments c
    GROUP BY 
        c.PostId
),
ClosedPosts AS (
    SELECT 
        ph.PostId, 
        ph.Comment,
        COUNT(*) OVER (PARTITION BY ph.PostId) AS CloseVoteCount
    FROM 
        PostHistory ph
    WHERE 
        ph.PostHistoryTypeId IN (10, 11) 
),
FinalResults AS (
    SELECT 
        rp.PostId,
        rp.Title,
        ur.Reputation,
        ur.ReputationLevel,
        COALESCE(pcs.CommentCount, 0) AS TotalComments,
        COALESCE(pcs.LastCommentDate, DATE '1970-01-01') AS LastCommentDate,
        COALESCE(cp.CloseVoteCount, 0) AS CloseVotes,
        rp.Score,
        CASE 
            WHEN rp.Score IS NULL THEN 'No Score'
            WHEN rp.Score > 0 THEN 'Positive'
            WHEN rp.Score < 0 THEN 'Negative'
            ELSE 'Neutral'
        END AS ScoreCategory
    FROM 
        RankedPosts rp
    JOIN 
        UserReputation ur ON rp.OwnerUserId = ur.UserId
    LEFT JOIN 
        PostCommentStats pcs ON rp.PostId = pcs.PostId
    LEFT JOIN 
        ClosedPosts cp ON rp.PostId = cp.PostId
    WHERE 
        rp.PostRank = 1 
)
SELECT 
    fir.*,
    CASE 
        WHEN TotalComments = 0 THEN 'No Comments'
        ELSE 'Comments Exist'
    END AS CommentExistence,
    EXTRACT(YEAR FROM TIMESTAMP '2024-10-01 12:34:56' - CreationDate) AS AgeInYears
FROM 
    FinalResults fir
ORDER BY 
    TotalComments DESC, 
    fir.Score DESC
LIMIT 50;
