WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.Score,
        p.ViewCount,
        COALESCE(COUNT(c.Id), 0) AS CommentCount,
        ROW_NUMBER() OVER(PARTITION BY p.PostTypeId ORDER BY p.Score DESC) AS PostRank
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    WHERE 
        p.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 year'
    GROUP BY 
        p.Id, p.Title, p.Score, p.ViewCount
),
PostDetails AS (
    SELECT 
        rp.PostId,
        rp.Title,
        rp.Score,
        rp.ViewCount,
        rp.CommentCount,
        pt.Name AS PostTypeName,
        u.Reputation AS OwnerReputation
    FROM 
        RankedPosts rp
    JOIN 
        PostTypes pt ON rp.PostRank = pt.Id
    LEFT JOIN 
        Users u ON rp.PostId = u.Id
    WHERE 
        rp.PostRank <= 10
),
VotesSummary AS (
    SELECT 
        v.PostId,
        SUM(CASE WHEN vt.Id = 2 THEN 1 ELSE 0 END) AS UpVotes,
        SUM(CASE WHEN vt.Id = 3 THEN 1 ELSE 0 END) AS DownVotes
    FROM 
        Votes v
    JOIN 
        VoteTypes vt ON v.VoteTypeId = vt.Id
    GROUP BY 
        v.PostId
)
SELECT 
    pd.Title,
    pd.Score,
    pd.ViewCount,
    pd.CommentCount,
    ps.UpVotes,
    ps.DownVotes,
    pd.OwnerReputation,
    CASE 
        WHEN pd.Score >= 100 THEN 'Hot'
        WHEN pd.Score BETWEEN 50 AND 99 THEN 'Warm'
        ELSE 'Cold'
    END AS PostTemperature,
    CASE 
        WHEN pd.OwnerReputation IS NULL THEN 'Unknown'
        ELSE CONCAT('Reputation: ', pd.OwnerReputation)
    END AS OwnerInfo
FROM 
    PostDetails pd
LEFT JOIN 
    VotesSummary ps ON pd.PostId = ps.PostId
WHERE 
    NULLIF(pd.Title, '') IS NOT NULL
ORDER BY 
    pd.ViewCount DESC
FETCH FIRST 5 ROWS ONLY
UNION ALL
SELECT 
    'Total Posts:' AS Title, 
    COUNT(*) AS Score, 
    NULL AS ViewCount,
    NULL AS CommentCount,
    NULL AS UpVotes,
    NULL AS DownVotes,
    NULL AS OwnerReputation,
    NULL AS PostTemperature,
    NULL AS OwnerInfo
FROM 
    Posts
WHERE 
    CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 year';