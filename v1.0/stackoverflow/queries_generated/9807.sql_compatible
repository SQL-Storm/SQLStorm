
SELECT 
    p.Title AS Post_Title,
    p.CreationDate AS Post_Creation_Date,
    u.DisplayName AS Owner_Display_Name,
    COUNT(c.Id) AS Total_Comments,
    SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS Total_UpVotes,
    SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS Total_DownVotes,
    STRING_AGG(DISTINCT t.TagName, ', ') AS Associated_Tags,
    FORMAT(p.LastActivityDate, 'yyyy-MM') AS Month_Activity,
    STRING_AGG(DISTINCT CONCAT(ph.Comment, ' (', ph.CreationDate, ')'), '; ') AS Edit_History
FROM 
    Posts p
JOIN 
    Users u ON p.OwnerUserId = u.Id
LEFT JOIN 
    Comments c ON p.Id = c.PostId
LEFT JOIN 
    Votes v ON p.Id = v.PostId
LEFT JOIN 
    Tags t ON FIND_IN_SET(t.Id, SUBSTRING_INDEX(SUBSTRING_INDEX(p.Tags, '<', -1), '>', 1)) -- Depending on DBMS, you may want to use specific string manipulations
LEFT JOIN 
    PostHistory ph ON p.Id = ph.PostId
WHERE 
    p.PostTypeId IN (1, 2) AND 
    p.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 YEAR'
GROUP BY 
    p.Id, p.Title, p.CreationDate, u.DisplayName, p.LastActivityDate
ORDER BY 
    Total_UpVotes DESC, Total_DownVotes ASC, p.CreationDate DESC
LIMIT 100;
