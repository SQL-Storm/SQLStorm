WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId, 
        p.Title, 
        p.Score, 
        p.ViewCount, 
        p.CreationDate,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC) AS RowNum,
        COUNT(*) OVER (PARTITION BY p.OwnerUserId) AS TotalPosts
    FROM 
        Posts p
    WHERE 
        p.PostTypeId = 1 /* Questions only */
),
UserBadges AS (
    SELECT 
        u.Id AS UserId, 
        COUNT(b.Id) AS BadgeCount, 
        SUM(CASE WHEN b.Class = 1 THEN 1 ELSE 0 END) AS GoldBadges,
        SUM(CASE WHEN b.Class = 2 THEN 1 ELSE 0 END) AS SilverBadges,
        SUM(CASE WHEN b.Class = 3 THEN 1 ELSE 0 END) AS BronzeBadges
    FROM 
        Users u
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    GROUP BY 
        u.Id
),
RecentPostComments AS (
    SELECT 
        p.Id AS PostId, 
        COUNT(c.Id) AS CommentCount,
        MAX(c.CreationDate) AS LastCommentDate
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId 
    GROUP BY 
        p.Id
),
PostHistoryAndVotes AS (
    SELECT 
        ph.PostId, 
        MAX(ph.CreationDate) AS LastModificationDate,
        COUNT(v.Id) AS VoteCount,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes
    FROM 
        PostHistory ph
    LEFT JOIN 
        Votes v ON ph.PostId = v.PostId
    WHERE 
        ph.CreationDate > cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '30 days'
    GROUP BY 
        ph.PostId
)
SELECT 
    p.Title, 
    p.Score, 
    p.ViewCount, 
    rb.UserId, 
    ub.BadgeCount, 
    ub.GoldBadges, 
    ub.SilverBadges, 
    ub.BronzeBadges, 
    rpc.CommentCount AS RecentCommentCount,
    ph.VoteCount AS TotalVotes,
    ph.UpVotes, 
    ph.DownVotes,
    p.CreationDate,
    p.LastActivityDate
FROM 
    RankedPosts rp
JOIN 
    Users rb ON rp.OwnerUserId = rb.Id
JOIN 
    UserBadges ub ON ub.UserId = rb.Id
LEFT JOIN 
    RecentPostComments rpc ON rp.PostId = rpc.PostId
LEFT JOIN 
    PostHistoryAndVotes ph ON rp.PostId = ph.PostId
WHERE 
    rp.RowNum = 1
    AND rp.TotalPosts > 5
    AND upVotes > downVotes
ORDER BY 
    rp.Score DESC, p.CreationDate DESC;