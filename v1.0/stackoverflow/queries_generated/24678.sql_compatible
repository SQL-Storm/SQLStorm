
WITH UserReputation AS (
    SELECT 
        u.Id AS UserId,
        u.Reputation,
        u.CreationDate,
        DENSE_RANK() OVER (ORDER BY u.Reputation DESC) AS ReputationRank,
        COUNT(DISTINCT p.Id) AS TotalPosts
    FROM Users u
    LEFT JOIN Posts p ON u.Id = p.OwnerUserId
    WHERE u.Reputation IS NOT NULL
    GROUP BY u.Id, u.Reputation, u.CreationDate
), 
PostStats AS (
    SELECT 
        p.Id AS PostId,
        p.PostTypeId,
        COUNT(c.Id) AS CommentCount,
        COALESCE(SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) - SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END), 0) AS NetVotes,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS UserPostRank
    FROM Posts p
    LEFT JOIN Comments c ON p.Id = c.PostId
    LEFT JOIN Votes v ON p.Id = v.PostId
    WHERE p.CreationDate >= CURRENT_DATE - INTERVAL '1 year'
    GROUP BY p.Id, p.PostTypeId
), 
ClosedPostReasons AS (
    SELECT 
        ph.PostId,
        STRING_AGG(cr.Name, '; ') AS CloseReasons,
        COUNT(ph.Id) AS CloseCount
    FROM PostHistory ph
    INNER JOIN CloseReasonTypes cr ON ph.Comment = cr.Id
    WHERE ph.PostHistoryTypeId IN (10, 11)
    GROUP BY ph.PostId
)
SELECT 
    u.DisplayName,
    ur.Reputation,
    ur.ReputationRank,
    ps.PostId,
    ps.PostTypeId,
    ps.CommentCount,
    ps.NetVotes,
    COALESCE(cpr.CloseReasons, 'No Close Reasons') AS CloseReasons,
    cpr.CloseCount,
    CASE 
        WHEN ur.TotalPosts > 5 THEN 'Active Contributor'
        WHEN ur.TotalPosts BETWEEN 1 AND 5 THEN 'New Contributor'
        ELSE 'Inactive User' 
    END AS UserType,
    CASE 
        WHEN MAX(ps.NetVotes) > 0 THEN 'Prominent Posts'
        WHEN MAX(ps.NetVotes) < 0 THEN 'Content Needs Improvement'
        ELSE 'Neutral Posts' 
    END AS PostAssessment
FROM UserReputation ur
LEFT JOIN PostStats ps ON ur.UserId = ps.OwnerUserId
LEFT JOIN ClosedPostReasons cpr ON ps.PostId = cpr.PostId
JOIN Users u ON ur.UserId = u.Id
GROUP BY 
    u.DisplayName, 
    ur.Reputation, 
    ur.ReputationRank, 
    ps.PostId, 
    ps.PostTypeId, 
    ps.CommentCount,
    ps.NetVotes,
    cpr.CloseReasons,
    cpr.CloseCount
ORDER BY 
    ur.Reputation DESC, 
    ps.NetVotes DESC, 
    ps.CommentCount DESC;
