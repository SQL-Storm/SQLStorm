
WITH RankedPosts AS (
    SELECT p.Id,
           p.Title,
           p.Score,
           p.ViewCount,
           p.CreationDate,
           ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC) AS PostRank,
           COUNT(DISTINCT p2.Id) OVER (PARTITION BY p.OwnerUserId) AS TotalPosts,
           STRING_AGG(DISTINCT t.TagName, ', ') OVER (PARTITION BY p.Id) AS Tags
    FROM Posts p
    LEFT JOIN PostLinks pl ON p.Id = pl.PostId
    LEFT JOIN Posts p2 ON pl.RelatedPostId = p2.Id
    LEFT JOIN Tags t ON t.ExcerptPostId = p.Id
    WHERE p.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 year'
),
UserBadges AS (
    SELECT u.Id AS UserId, 
           COUNT(b.Id) AS BadgeCount,
           STRING_AGG(b.Name, ', ') AS BadgeNames
    FROM Users u
    LEFT JOIN Badges b ON u.Id = b.UserId
    GROUP BY u.Id
),
ActiveUsers AS (
    SELECT u.Id,
           u.DisplayName,
           u.Reputation,
           COALESCE(ub.BadgeCount, 0) AS BadgeCount,
           ub.BadgeNames
    FROM Users u
    LEFT JOIN UserBadges ub ON u.Id = ub.UserId
    WHERE u.Reputation > 100
)

SELECT u.DisplayName,
       u.Reputation,
       COALESCE(rp.Title, 'No Posts') AS MostActivePostTitle,
       COALESCE(rp.Score, 0) AS PostScore,
       COALESCE(rp.ViewCount, 0) AS PostViewCount,
       u.BadgeCount,
       u.BadgeNames,
       u.Reputation * 0.01 AS ReputationRank 
FROM ActiveUsers u
LEFT JOIN RankedPosts rp ON u.Id = rp.OwnerUserId AND rp.PostRank = 1
WHERE (u.BadgeCount > 0 AND u.Reputation > 200) OR (u.BadgeCount = 0 AND u.Reputation < 200)
ORDER BY u.Reputation DESC, u.BadgeCount DESC
LIMIT 50;
