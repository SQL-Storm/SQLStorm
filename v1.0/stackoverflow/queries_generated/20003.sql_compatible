
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Score,
        p.OwnerUserId,
        COUNT(c.Id) AS CommentCount,
        RANK() OVER (PARTITION BY p.PostTypeId ORDER BY p.Score DESC) AS RankByScore
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    WHERE 
        p.CreationDate > DATE('2024-10-01') - INTERVAL '1 year'
    GROUP BY 
        p.Id, p.Title, p.CreationDate, p.Score, p.OwnerUserId, p.PostTypeId
),
PopularTags AS (
    SELECT 
        t.TagName,
        COUNT(p.Id) AS PostCount,
        SUM(COALESCE(v.BountyAmount, 0)) AS TotalBounty
    FROM 
        Tags t
    JOIN 
        Posts p ON t.Id = p.TagId  
    LEFT JOIN 
        Votes v ON p.Id = v.PostId AND v.VoteTypeId IN (8, 9)  
    WHERE 
        t.IsModeratorOnly = 0
    GROUP BY 
        t.TagName
    HAVING 
        COUNT(p.Id) > 10
),
BountiedPosts AS (
    SELECT 
        p.Id AS PostId, 
        p.Title, 
        u.DisplayName,
        SUM(CASE WHEN v.VoteTypeId = 9 THEN v.BountyAmount ELSE 0 END) AS TotalBounty
    FROM 
        Posts p
    JOIN 
        Users u ON p.OwnerUserId = u.Id
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    WHERE 
        p.Score >= 10
    GROUP BY 
        p.Id, p.Title, u.DisplayName
    HAVING 
        SUM(CASE WHEN v.VoteTypeId = 9 THEN v.BountyAmount ELSE 0 END) > 0
)
SELECT 
    rp.PostId,
    rp.Title,
    rp.CreationDate,
    rp.CommentCount,
    pt.TagName,
    bh.PostId AS BountyPostId,
    bh.Title AS BountyPostTitle,
    bh.TotalBounty
FROM 
    RankedPosts rp
LEFT JOIN 
    PopularTags pt ON EXISTS (SELECT 1 FROM Posts p WHERE strpos(p.Tags, pt.TagName) > 0 AND p.Id = rp.PostId)
LEFT JOIN 
    BountiedPosts bh ON rp.PostId = bh.PostId
WHERE 
    rp.RankByScore <= 5
ORDER BY 
    rp.CreationDate DESC, 
    rp.Score DESC 
LIMIT 50;
