WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Score,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS PostRank,
        COUNT(c.Id) AS CommentCount
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON c.PostId = p.Id
    WHERE 
        p.CreationDate > (cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 year')
    GROUP BY 
        p.Id
), UserReputation AS (
    SELECT 
        u.Id AS UserId,
        u.Reputation,
        u.DisplayName,
        COUNT(b.Id) AS BadgeCount
    FROM 
        Users u
    LEFT JOIN 
        Badges b ON b.UserId = u.Id
    GROUP BY 
        u.Id
), RecentHistory AS (
    SELECT 
        ph.PostId,
        MAX(ph.CreationDate) AS LastChangeDate,
        STRING_AGG(DISTINCT pht.Name, ', ') AS ChangeTypes
    FROM 
        PostHistory ph
    JOIN 
        PostHistoryTypes pht ON ph.PostHistoryTypeId = pht.Id
    WHERE 
        ph.CreationDate > (cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '6 months')
    GROUP BY 
        ph.PostId
), FilteredClosedPosts AS (
    SELECT 
        p.Id,
        p.Title,
        p.Score,
        p.CreationDate,
        COALESCE(ch.UserId, -1) AS ClosedByUserId
    FROM 
        Posts p
    LEFT JOIN 
        PostHistory ph ON ph.PostId = p.Id AND ph.PostHistoryTypeId = 10  
    LEFT JOIN 
        Users ch ON ph.UserId = ch.Id
    WHERE 
        ph.CreationDate IS NOT NULL
), DetailedPostInfo AS (
    SELECT 
        r.PostId,
        r.Title,
        r.CreationDate,
        r.Score,
        r.CommentCount,
        ur.DisplayName AS OwnerDisplayName,
        ur.Reputation AS OwnerReputation,
        rh.LastChangeDate,
        rh.ChangeTypes,
        CASE 
            WHEN fcp.ClosedByUserId IS NOT NULL THEN 'Closed'
            ELSE 'Active'
        END AS PostStatus
    FROM 
        RankedPosts r
    JOIN 
        Users ur ON ur.Id = (SELECT OwnerUserId FROM Posts WHERE Id = r.PostId)
    LEFT JOIN 
        RecentHistory rh ON rh.PostId = r.PostId
    LEFT JOIN 
        FilteredClosedPosts fcp ON fcp.Id = r.PostId
)
SELECT 
    d.PostId,
    d.Title,
    d.CommentCount,
    d.OwnerDisplayName,
    d.OwnerReputation,
    COALESCE(d.ChangeTypes, 'No Changes') AS RecentChanges,
    d.Score,
    d.PostStatus
FROM 
    DetailedPostInfo d
WHERE 
    d.PostStatus = 'Closed' 
    OR (d.Score > (
        SELECT AVG(Score) 
        FROM DetailedPostInfo 
        WHERE PostStatus = 'Active'
      ) AND d.CommentCount > (SELECT AVG(CommentCount) FROM DetailedPostInfo))
ORDER BY 
    d.Reputation DESC NULLS LAST, 
    d.CreationDate DESC;