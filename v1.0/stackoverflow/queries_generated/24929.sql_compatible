
WITH UserStatistics AS (
    SELECT 
        Id AS UserId,
        DisplayName,
        Reputation,
        COALESCE(UpVotes, 0) AS UpVotes,
        COALESCE(DownVotes, 0) AS DownVotes,
        CASE 
            WHEN Reputation > 1000 THEN 'Expert'
            WHEN Reputation BETWEEN 500 AND 1000 THEN 'Intermediate'
            ELSE 'Novice'
        END AS UserLevel
    FROM Users
),
RecentPosts AS (
    SELECT 
        p.Id AS PostId,
        p.OwnerUserId,
        p.PostTypeId,
        p.Title,
        p.CreationDate,
        COUNT(c.Id) AS CommentCount,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS RowNum
    FROM Posts p
    LEFT JOIN Comments c ON p.Id = c.PostId
    LEFT JOIN Votes v ON p.Id = v.PostId
    WHERE p.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '30 days'
    GROUP BY p.Id, p.OwnerUserId, p.PostTypeId, p.Title, p.CreationDate
),
TopUsers AS (
    SELECT 
        us.UserId,
        us.DisplayName,
        us.Reputation,
        COUNT(DISTINCT rp.PostId) AS PostCount,
        SUM(rp.UpVotes) AS TotalUpVotes,
        SUM(rp.DownVotes) AS TotalDownVotes
    FROM UserStatistics us
    JOIN RecentPosts rp ON us.UserId = rp.OwnerUserId
    GROUP BY us.UserId, us.DisplayName, us.Reputation
    HAVING COUNT(DISTINCT rp.PostId) > 2
),
PostHistoryDetails AS (
    SELECT 
        ph.PostId,
        ph.PostHistoryTypeId,
        ph.UserId AS EditorId,
        ph.CreationDate,
        ph.Comment,
        ph.Text
    FROM PostHistory ph
    WHERE ph.PostHistoryTypeId IN (4, 5, 6)  
),
EnhancedPostHistory AS (
    SELECT 
        p.Title AS PostTitle,
        phd.PostHistoryTypeId,
        phd.EditorId,
        phd.CreationDate AS EditDate,
        phd.Comment,
        phd.Text,
        pp.DisplayName AS EditorDisplayName
    FROM PostHistoryDetails phd
    JOIN Posts p ON phd.PostId = p.Id
    LEFT JOIN Users pp ON phd.EditorId = pp.Id
),
FinalResults AS (
    SELECT 
        u.DisplayName AS UserName,
        u.Reputation,
        rp.Title AS RecentPostTitle,
        rp.CommentCount,
        COALESCE(rp.UpVotes - rp.DownVotes, 0) AS NetVotes,
        ph.EditDate,
        ph.Comment,
        ph.Text
    FROM TopUsers u
    JOIN RecentPosts rp ON u.UserId = rp.OwnerUserId
    LEFT JOIN EnhancedPostHistory ph ON rp.PostId = ph.PostId
    WHERE u.Reputation > 500
)
SELECT 
    fr.UserName,
    fr.Reputation,
    fr.RecentPostTitle,
    fr.CommentCount,
    fr.NetVotes,
    COALESCE(fr.EditDate, 'No Edits') AS LastEditDate,
    COALESCE(fr.Comment, 'N/A') AS LastEditComment
FROM FinalResults fr
WHERE fr.NetVotes IS NOT NULL 
ORDER BY fr.Reputation DESC, fr.CommentCount DESC;
