
WITH UserStats AS (
    SELECT 
        U.Id AS UserId,
        U.DisplayName,
        U.Reputation,
        COALESCE(SUM(CASE WHEN V.VoteTypeId = 2 THEN 1 ELSE 0 END), 0) AS TotalUpVotes,
        COALESCE(SUM(CASE WHEN V.VoteTypeId = 3 THEN 1 ELSE 0 END), 0) AS TotalDownVotes,
        COUNT(DISTINCT P.Id) AS TotalPosts,
        COUNT(DISTINCT C.Id) AS TotalComments
    FROM Users U
    LEFT JOIN Posts P ON U.Id = P.OwnerUserId
    LEFT JOIN Votes V ON P.Id = V.PostId
    LEFT JOIN Comments C ON P.Id = C.PostId
    GROUP BY U.Id, U.DisplayName, U.Reputation
),
RankedUsers AS (
    SELECT 
        UserId,
        DisplayName,
        Reputation,
        TotalUpVotes,
        TotalDownVotes,
        TotalPosts,
        TotalComments,
        RANK() OVER (ORDER BY Reputation DESC) AS ReputationRank,
        RANK() OVER (ORDER BY TotalUpVotes DESC) AS UpVoteRank
    FROM UserStats
),
MostActiveUsers AS (
    SELECT 
        U.UserId,
        U.DisplayName,
        U.TotalPosts,
        U.TotalComments,
        R.ReputationRank,
        R.UpVoteRank
    FROM UserStats U
    INNER JOIN RankedUsers R ON U.UserId = R.UserId
    WHERE U.TotalPosts > 5
)
SELECT 
    U.DisplayName,
    U.Reputation,
    U.TotalUpVotes,
    U.TotalDownVotes,
    U.TotalPosts,
    U.TotalComments,
    CASE 
        WHEN U.TotalUpVotes > 0 THEN CAST(U.TotalUpVotes AS VARCHAR(255)) || ' Upvotes'
        ELSE 'No Upvotes'
    END AS UpvoteStatus,
    CASE 
        WHEN U.TotalDownVotes > 0 THEN CAST(U.TotalDownVotes AS VARCHAR(255)) || ' Downvotes'
        ELSE 'No Downvotes'
    END AS DownvoteStatus,
    (SELECT STRING_AGG(P.Title, ', ') 
     FROM Posts P 
     WHERE P.OwnerUserId = U.UserId) AS PostTitles
FROM MostActiveUsers U
ORDER BY U.ReputationRank, U.UpVoteRank
LIMIT 10;
