
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.Body,
        p.CreationDate,
        p.OwnerUserId,
        p.Score,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS Rank,
        STRING_AGG(t.TagName, ', ') AS TagsList
    FROM 
        Posts p
    LEFT JOIN 
        Tags t ON t.Id = ANY (STRING_TO_ARRAY(SUBSTRING(p.Tags FROM 2 FOR LENGTH(p.Tags) - 2), '><')::text[])
    GROUP BY 
        p.Id, p.Title, p.Body, p.CreationDate, p.OwnerUserId, p.Score
),
UserActivity AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COUNT(DISTINCT p.Id) AS PostCount,
        SUM(p.Score) AS TotalScore,
        SUM(CASE WHEN p.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '30 days' THEN 1 ELSE 0 END) AS RecentPostCount
    FROM 
        Users u
    LEFT JOIN 
        Posts p ON u.Id = p.OwnerUserId
    GROUP BY 
        u.Id, u.DisplayName
),
TopContributors AS (
    SELECT 
        ua.UserId,
        ua.DisplayName,
        ua.PostCount,
        ua.TotalScore,
        ua.RecentPostCount,
        RANK() OVER (ORDER BY ua.TotalScore DESC) AS ContributorRank
    FROM 
        UserActivity ua
)
SELECT 
    pc.PostId,
    pc.Title,
    pc.Body,
    pc.CreationDate AS PostDate,
    tc.DisplayName AS ContributorName,
    tc.PostCount AS ContributorPosts,
    tc.TotalScore AS ContributorScore,
    tc.RecentPostCount AS ContributorRecentPosts,
    pc.TagsList
FROM 
    RankedPosts pc
JOIN 
    TopContributors tc ON pc.OwnerUserId = tc.UserId
WHERE 
    pc.Rank <= 5
ORDER BY 
    tc.TotalScore DESC, pc.CreationDate DESC;
