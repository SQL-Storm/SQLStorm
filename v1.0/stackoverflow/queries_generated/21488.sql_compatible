
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostID,
        p.Title,
        p.CreationDate,
        p.Score,
        p.ViewCount,
        p.AcceptedAnswerId,
        u.DisplayName AS OwnerDisplayName,
        ROW_NUMBER() OVER (PARTITION BY p.PostTypeId ORDER BY p.Score DESC, p.ViewCount DESC) AS Rank
    FROM 
        Posts p
    JOIN 
        Users u ON p.OwnerUserId = u.Id
    WHERE 
        p.CreationDate >= DATE('2024-10-01') - INTERVAL '2 months'
),
RecentEdits AS (
    SELECT 
        ph.PostId,
        ph.UserDisplayName,
        ph.CreationDate,
        ph.Comment,
        ROW_NUMBER() OVER (PARTITION BY ph.PostId ORDER BY ph.CreationDate DESC) AS EditRank
    FROM 
        PostHistory ph
    WHERE 
        ph.PostHistoryTypeId IN (4, 5) 
    AND 
        ph.CreationDate >= DATE('2024-10-01') - INTERVAL '1 month'
),
ClosedPosts AS (
    SELECT 
        p.Id,
        p.Title,
        ph.CreationDate AS ClosedDate,
        cr.Name AS CloseReason
    FROM 
        Posts p
    JOIN 
        PostHistory ph ON p.Id = ph.PostId 
    JOIN 
        CloseReasonTypes cr ON CAST(ph.Comment AS jsonb)->>'CloseReasonId'::integer = cr.Id
    WHERE 
        ph.PostHistoryTypeId = 10 
    AND 
        ph.CreationDate >= DATE('2024-10-01') - INTERVAL '1 month'
),
AggregateVotes AS (
    SELECT 
        p.Id AS PostId,
        COUNT(v.Id) FILTER (WHERE v.VoteTypeId = 2) AS UpVotes,
        COUNT(v.Id) FILTER (WHERE v.VoteTypeId = 3) AS DownVotes
    FROM 
        Posts p
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    GROUP BY 
        p.Id
),
FinalReport AS (
    SELECT 
        rp.PostID,
        rp.Title,
        rp.CreationDate,
        rp.Score,
        rp.ViewCount,
        rp.OwnerDisplayName,
        COALESCE(re.EditRank, 0) AS RecentEditRank,
        COALESCE(cp.ClosedDate, NULL) AS ClosedPostDate,
        COALESCE(cp.CloseReason, 'Not Closed') AS CloseReason,
        av.UpVotes,
        av.DownVotes
    FROM 
        RankedPosts rp
    LEFT JOIN 
        RecentEdits re ON rp.PostID = re.PostId AND re.EditRank = 1
    LEFT JOIN 
        ClosedPosts cp ON rp.PostID = cp.Id
    LEFT JOIN 
        AggregateVotes av ON rp.PostID = av.PostId
)
SELECT 
    *,
    CASE 
        WHEN ClosedPostDate IS NOT NULL THEN 'Closed'
        ELSE 'Active'
    END AS PostStatus,
    GREATEST(UpVotes - DownVotes, 0) AS NetVotes
FROM 
    FinalReport
WHERE 
    Rank <= 10
ORDER BY 
    Score DESC, ViewCount DESC, Title;
