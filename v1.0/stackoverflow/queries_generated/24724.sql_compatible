
WITH RankedPosts AS (
    SELECT 
        p.Id, 
        p.Title, 
        p.CreationDate, 
        p.ViewCount,
        p.Score,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS rn
    FROM 
        Posts p 
    WHERE 
        p.PostTypeId = 1 
        AND p.CreationDate >= DATE_SUB(CAST('2024-10-01' AS DATE), INTERVAL 1 YEAR)
),
UserActivity AS (
    SELECT 
        u.Id AS UserId,
        COUNT(DISTINCT p.Id) AS PostCount,
        SUM(COALESCE(v.VoteAmount, 0)) AS TotalVotes,
        SUM(CASE WHEN b.Name IS NOT NULL THEN 1 ELSE 0 END) AS BadgeCount
    FROM 
        Users u
    LEFT JOIN Posts p ON u.Id = p.OwnerUserId
    LEFT JOIN Votes v ON p.Id = v.PostId
    LEFT JOIN Badges b ON u.Id = b.UserId
    GROUP BY 
        u.Id
),
ClosedPosts AS (
    SELECT 
        ph.PostId,
        MAX(ph.CreationDate) AS LastClosed,
        STRING_AGG(DISTINCT cr.Name, ', ') AS CloseReasons
    FROM 
        PostHistory ph
    JOIN CloseReasonTypes cr ON CAST(ph.Comment AS INTEGER) = cr.Id
    WHERE 
        ph.PostHistoryTypeId IN (10, 11)
    GROUP BY 
        ph.PostId
)
SELECT 
    u.Id AS UserId,
    u.DisplayName,
    COALESCE(ua.PostCount, 0) AS PostCount,
    COALESCE(ua.TotalVotes, 0) AS TotalVotes,
    COALESCE(ua.BadgeCount, 0) AS BadgeCount,
    COUNT(DISTINCT rp.Id) AS RecentPostCount,
    COALESCE(cp.CloseReasons, '') AS ClosedReasonList,
    MAX(rp.CreationDate) AS LastPostDate
FROM 
    Users u
LEFT JOIN UserActivity ua ON u.Id = ua.UserId
LEFT JOIN RankedPosts rp ON u.Id = rp.OwnerUserId AND rp.rn <= 3
LEFT JOIN ClosedPosts cp ON cp.PostId IN (SELECT p.Id FROM Posts p WHERE p.OwnerUserId = u.Id)
WHERE 
    u.Reputation > 1000 
    AND u.LastAccessDate > DATE_SUB(CAST('2024-10-01' AS DATE), INTERVAL 6 MONTH)
GROUP BY 
    u.Id, u.DisplayName
HAVING 
    SUM(COALESCE(ua.PostCount, 0)) > 5 
    OR COUNT(DISTINCT rp.Id) > 0
ORDER BY 
    LastPostDate DESC NULLS LAST
LIMIT 50 OFFSET 10;
