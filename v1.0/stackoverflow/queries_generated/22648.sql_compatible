
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Score,
        COALESCE(p.ViewCount, 0) AS ViewCount,
        p.OwnerUserId,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS Rn
    FROM 
        Posts p
    WHERE 
        p.PostTypeId = 1 /* Questions */
        AND p.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 year'
),
AggPostStats AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COUNT(rp.PostId) AS QuestionCount,
        SUM(rp.Score) AS TotalScore,
        AVG(rp.ViewCount) AS AvgViewCount
    FROM 
        Users u
    LEFT JOIN 
        RankedPosts rp ON u.Id = rp.OwnerUserId
    GROUP BY 
        u.Id, u.DisplayName
),
RecentCloseReasons AS (
    SELECT 
        ph.PostId,
        MAX(ph.CreationDate) AS LastCloseDate,
        ARRAY_AGG(DISTINCT crt.Name) AS CloseReasons
    FROM 
        PostHistory ph
    JOIN 
        CloseReasonTypes crt ON CAST(ph.Comment AS INT) = crt.Id
    WHERE 
        ph.PostHistoryTypeId IN (10, 11) /* Post Closed / Post Reopened */
    GROUP BY 
        ph.PostId
)
SELECT 
    aps.DisplayName,
    aps.QuestionCount,
    aps.TotalScore,
    aps.AvgViewCount,
    COALESCE(rcr.LastCloseDate, 'No closes') AS LastCloseDate,
    COALESCE(rcr.CloseReasons, ARRAY['No close reasons']) AS CloseReasons
FROM 
    AggPostStats aps
LEFT JOIN 
    RecentCloseReasons rcr ON aps.UserId = rcr.PostId
WHERE 
    aps.QuestionCount > 5
    AND aps.TotalScore > (SELECT AVG(TotalScore) FROM AggPostStats)
ORDER BY 
    aps.QuestionCount DESC,
    aps.TotalScore DESC
FETCH FIRST 10 ROWS ONLY;
