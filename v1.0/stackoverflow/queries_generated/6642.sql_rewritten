WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Score,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC) AS Rank,
        COUNT(c.Id) AS CommentCount,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVoteCount,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVoteCount
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    WHERE 
        p.PostTypeId = 1 
    GROUP BY 
        p.Id, p.Title, p.CreationDate, p.Score, p.OwnerUserId
),
PopularUsers AS (
    SELECT 
        OwnerUserId,
        COUNT(DISTINCT PostId) AS PostCount,
        SUM(Score) AS TotalScore,
        SUM(CommentCount) AS TotalComments,
        SUM(UpVoteCount) AS TotalUpVotes,
        SUM(DownVoteCount) AS TotalDownVotes
    FROM 
        RankedPosts
    WHERE 
        Rank <= 5
    GROUP BY 
        OwnerUserId
),
UserDetails AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        u.Reputation,
        pu.PostCount,
        pu.TotalScore,
        pu.TotalComments,
        pu.TotalUpVotes,
        pu.TotalDownVotes
    FROM 
        Users u
    JOIN 
        PopularUsers pu ON u.Id = pu.OwnerUserId
)
SELECT 
    ud.DisplayName,
    ud.Reputation,
    ud.PostCount,
    ud.TotalScore,
    ud.TotalComments,
    ud.TotalUpVotes,
    ud.TotalDownVotes
FROM 
    UserDetails ud
ORDER BY 
    ud.TotalScore DESC, ud.PostCount DESC
LIMIT 10;