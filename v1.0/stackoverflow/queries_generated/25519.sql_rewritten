WITH TagSummary AS (
    SELECT 
        t.TagName,
        COUNT(DISTINCT p.Id) AS PostCount,
        SUM(COALESCE(p.ViewCount, 0)) AS TotalViews,
        SUM(COALESCE(p.AnswerCount, 0)) AS TotalAnswers,
        SUM(CASE WHEN p.AcceptedAnswerId IS NOT NULL THEN 1 ELSE 0 END) AS AcceptedAnswers,
        AVG(p.Score) AS AverageScore
    FROM 
        Tags t
    JOIN 
        Posts p ON t.Id = ANY(string_to_array(substring(p.Tags, 2, length(p.Tags) - 2), '><')::int[])
    WHERE 
        p.PostTypeId = 1 
    GROUP BY 
        t.TagName
), 
UserActivitySummary AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COUNT(DISTINCT p.Id) AS QuestionsAsked,
        COUNT(DISTINCT a.Id) AS AnswersProvided,
        SUM(p.ViewCount) AS TotalQuestionViews,
        SUM(a.Score) AS TotalAnswerScore
    FROM 
        Users u
    LEFT JOIN 
        Posts p ON u.Id = p.OwnerUserId AND p.PostTypeId = 1 
    LEFT JOIN 
        Posts a ON u.Id = a.OwnerUserId AND a.ParentId IS NOT NULL 
    GROUP BY 
        u.Id, u.DisplayName
)
SELECT 
    ts.TagName,
    ts.PostCount,
    ts.TotalViews,
    ts.TotalAnswers,
    ts.AcceptedAnswers,
    ts.AverageScore,
    uas.DisplayName AS TopUser,
    uas.QuestionsAsked,
    uas.AnswersProvided,
    uas.TotalQuestionViews,
    uas.TotalAnswerScore
FROM 
    TagSummary ts
JOIN 
    UserActivitySummary uas ON uas.QuestionsAsked = (
        SELECT MAX(QuestionsAsked)
        FROM UserActivitySummary
    )
ORDER BY 
    ts.TotalViews DESC
LIMIT 10;