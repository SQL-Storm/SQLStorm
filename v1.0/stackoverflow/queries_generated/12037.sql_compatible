
WITH PostStats AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.PostTypeId,
        COUNT(c.Id) AS CommentCount,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVoteCount,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVoteCount,
        COUNT(DISTINCT b.Id) AS BadgeCount,
        p.OwnerUserId
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    LEFT JOIN 
        Badges b ON p.OwnerUserId = b.UserId
    GROUP BY 
        p.Id, p.Title, p.PostTypeId, p.OwnerUserId
),
UserStats AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        u.Reputation,
        COUNT(DISTINCT p.Id) AS PostCount,
        SUM(s.CommentCount) AS TotalComments,
        SUM(s.UpVoteCount) AS TotalUpVotes,
        SUM(s.DownVoteCount) AS TotalDownVotes,
        SUM(s.BadgeCount) AS TotalBadges
    FROM 
        Users u
    LEFT JOIN 
        PostStats s ON u.Id = s.OwnerUserId
    LEFT JOIN 
        Posts p ON u.Id = p.OwnerUserId
    GROUP BY 
        u.Id, u.DisplayName, u.Reputation
)
SELECT 
    ps.PostId,
    ps.Title,
    ps.PostTypeId,
    us.UserId,
    us.DisplayName,
    us.Reputation,
    us.PostCount,
    us.TotalComments,
    us.TotalUpVotes,
    us.TotalDownVotes,
    us.TotalBadges
FROM 
    PostStats ps
JOIN 
    Users us ON ps.OwnerUserId = us.Id
ORDER BY 
    ps.Title;
