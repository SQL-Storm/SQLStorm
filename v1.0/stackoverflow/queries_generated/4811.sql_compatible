
WITH UserStats AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        u.Reputation,
        ROW_NUMBER() OVER (ORDER BY u.Reputation DESC) AS ReputationRank,
        COUNT(DISTINCT p.Id) AS PostCount,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVoteCount,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVoteCount
    FROM 
        Users u
    LEFT JOIN 
        Posts p ON u.Id = p.OwnerUserId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    GROUP BY 
        u.Id, u.DisplayName, u.Reputation
),
TopPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Score,
        p.ViewCount,
        COUNT(c.Id) AS CommentCount,
        DENSE_RANK() OVER (ORDER BY p.Score DESC) AS ScoreRank
    FROM 
        Posts p 
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    WHERE 
        p.CreationDate > (CAST('2024-10-01 12:34:56' AS TIMESTAMP) - INTERVAL '1 year')
    GROUP BY 
        p.Id, p.Title, p.CreationDate, p.Score, p.ViewCount
),
PostHistoryCounts AS (
    SELECT 
        ph.PostId,
        COUNT(*) AS HistoryCount,
        MAX(ph.CreationDate) AS LastEditDate
    FROM 
        PostHistory ph
    WHERE 
        ph.PostHistoryTypeId IN (4, 5, 6)
    GROUP BY 
        ph.PostId
),
CombinedData AS (
    SELECT 
        us.UserId,
        us.DisplayName,
        us.Reputation,
        us.ReputationRank,
        us.PostCount,
        tp.PostId,
        tp.Title,
        tp.CreationDate,
        tp.Score,
        tp.ViewCount,
        tp.CommentCount,
        phc.HistoryCount,
        phc.LastEditDate
    FROM 
        UserStats us
    LEFT JOIN 
        TopPosts tp ON us.PostCount > 0
    LEFT JOIN 
        PostHistoryCounts phc ON tp.PostId = phc.PostId
)
SELECT 
    cd.DisplayName,
    cd.Reputation,
    cd.ReputationRank,
    cd.PostCount,
    cd.Title,
    cd.Score,
    cd.ViewCount,
    cd.CommentCount,
    COALESCE(phc.HistoryCount, 0) AS PostHistoryCount,
    COALESCE(phc.LastEditDate, 'No Edits') AS LastEditInfo
FROM 
    CombinedData cd
LEFT JOIN 
    (SELECT 
         UserId, 
         COUNT(*) AS SpecialBadgeCount 
     FROM 
         Badges 
     WHERE 
         Class = 1 
     GROUP BY UserId) b ON cd.UserId = b.UserId
WHERE 
    cd.Reputation > 1000
ORDER BY 
    cd.Reputation DESC,
    cd.Score DESC
LIMIT 50;
