
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.Score,
        p.ViewCount,
        COALESCE(p.AcceptedAnswerId, -1) AS AcceptedAnswerId,
        COUNT(c.Id) AS CommentCount,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS RowNum
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    WHERE 
        p.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 year'
    GROUP BY 
        p.Id, p.Title, p.Score, p.ViewCount, p.AcceptedAnswerId, p.OwnerUserId
),
TopUsers AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        SUM(p.Score) AS TotalScore,
        COUNT(p.Id) AS PostsCount
    FROM 
        Users u
    JOIN 
        Posts p ON u.Id = p.OwnerUserId
    GROUP BY 
        u.Id, u.DisplayName
    HAVING 
        COUNT(p.Id) > 10
),
PostHistoryCounts AS (
    SELECT 
        ph.PostId,
        ph.PostHistoryTypeId,
        COUNT(ph.Id) AS ChangeCount
    FROM 
        PostHistory ph
    WHERE 
        ph.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '6 months'
    GROUP BY 
        ph.PostId, ph.PostHistoryTypeId
)
SELECT 
    p.Title AS "Post Title",
    u.DisplayName AS "Owner",
    p.Score AS "Score",
    p.ViewCount AS "View Count",
    p.CommentCount AS "Comment Count",
    COALESCE(phc.ChangeCount, 0) AS "History Changes",
    CASE 
        WHEN p.AcceptedAnswerId != -1 THEN 'Yes' 
        ELSE 'No' 
    END AS "Accepted Answer"
FROM 
    RankedPosts p
JOIN 
    TopUsers u ON p.OwnerUserId = u.UserId
LEFT JOIN 
    PostHistoryCounts phc ON p.Id = phc.PostId
WHERE 
    p.RowNum = 1
ORDER BY 
    p.Score DESC,
    p.CommentCount DESC;
