WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Score,
        p.ViewCount,
        p.AnswerCount,
        RANK() OVER (PARTITION BY p.PostTypeId ORDER BY p.Score DESC, p.ViewCount DESC) AS RankByScore,
        ROW_NUMBER() OVER (PARTITION BY p.PostTypeId ORDER BY p.CreationDate DESC) AS RecentPosts
    FROM 
        Posts p
    WHERE 
        p.CreationDate BETWEEN cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 year' AND cast('2024-10-01 12:34:56' as timestamp)
),
UserVoteStats AS (
    SELECT 
        v.UserId,
        COUNT(v.Id) AS TotalVotes,
        SUM(CASE WHEN vt.Name = 'UpMod' THEN 1 ELSE 0 END) AS UpVotes,
        SUM(CASE WHEN vt.Name = 'DownMod' THEN 1 ELSE 0 END) AS DownVotes
    FROM 
        Votes v
    JOIN 
        VoteTypes vt ON v.VoteTypeId = vt.Id
    GROUP BY 
        v.UserId
),
PostComments AS (
    SELECT 
        c.PostId,
        COUNT(c.Id) AS CommentCount,
        STRING_AGG(c.Text, ' | ') AS CommentsText
    FROM 
        Comments c
    WHERE 
        c.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '6 months'
    GROUP BY 
        c.PostId
),
PostHistoryCTE AS (
    SELECT 
        ph.PostId,
        ph.PostHistoryTypeId,
        COUNT(*) AS EditCount
    FROM 
        PostHistory ph
    WHERE 
        ph.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '5 years'
        AND ph.PostHistoryTypeId IN (4, 5, 6) 
    GROUP BY 
        ph.PostId, ph.PostHistoryTypeId
)
SELECT 
    rp.PostId,
    rp.Title,
    rp.CreationDate,
    rp.Score,
    rp.ViewCount,
    COALESCE(cs.CommentCount, 0) AS TotalComments,
    COALESCE(cs.CommentsText, 'No comments') AS Comments,
    us.TotalVotes,
    us.UpVotes,
    us.DownVotes,
    CASE 
        WHEN rp.RankByScore <= 5 THEN 'Top Post'
        ELSE 'Regular Post'
    END AS PostCategory,
    STRING_AGG(DISTINCT ph.EditCount::text, ', ') AS EditHistoryCounts,
    COUNT(DISTINCT CASE WHEN ph.PostHistoryTypeId = 4 THEN ph.EditCount END) AS TitleEdits,
    COUNT(DISTINCT CASE WHEN ph.PostHistoryTypeId = 5 THEN ph.EditCount END) AS BodyEdits,
    COUNT(DISTINCT CASE WHEN ph.PostHistoryTypeId = 6 THEN ph.EditCount END) AS TagEdits
FROM 
    RankedPosts rp
LEFT JOIN 
    PostComments cs ON rp.PostId = cs.PostId
LEFT JOIN 
    UserVoteStats us ON us.UserId = rp.PostId  
LEFT JOIN 
    PostHistoryCTE ph ON rp.PostId = ph.PostId
WHERE 
    rp.RankByScore < 10  
GROUP BY 
    rp.PostId, rp.Title, rp.CreationDate, rp.Score, rp.ViewCount, us.TotalVotes, us.UpVotes, us.DownVotes, rp.RankByScore
ORDER BY 
    rp.Score DESC, rp.ViewCount DESC;