
SELECT 
    p.Id AS PostId,
    p.Title,
    p.CreationDate,
    p.Score,
    p.ViewCount,
    COALESCE(a.AnswerCount, 0) AS AnswerCount,
    COALESCE(c.CommentCount, 0) AS CommentCount,
    COALESCE(b.BadgeCount, 0) AS BadgeCount,
    u.Reputation,
    u.DisplayName,
    ul.Location,
    ul.WebsiteUrl,
    ul.Views AS UserViews,
    ul.UpVotes AS UserUpVotes,
    ul.DownVotes AS UserDownVotes
FROM 
    Posts p
JOIN 
    Users u ON p.OwnerUserId = u.Id
LEFT JOIN 
    (SELECT PostId, COUNT(*) AS AnswerCount 
     FROM Posts 
     WHERE PostTypeId = 2 
     GROUP BY PostId) a ON p.Id = a.PostId
LEFT JOIN 
    (SELECT PostId, COUNT(*) AS CommentCount 
     FROM Comments 
     GROUP BY PostId) c ON p.Id = c.PostId
LEFT JOIN 
    (SELECT UserId, COUNT(*) AS BadgeCount 
     FROM Badges 
     GROUP BY UserId) b ON u.Id = b.UserId
LEFT JOIN 
    (SELECT Id, Location, WebsiteUrl, Views, UpVotes, DownVotes 
     FROM Users) ul ON u.Id = ul.Id
WHERE 
    p.PostTypeId = 1  
GROUP BY 
    p.Id, p.Title, p.CreationDate, p.Score, p.ViewCount,
    a.AnswerCount, c.CommentCount, b.BadgeCount,
    u.Reputation, u.DisplayName, ul.Location, 
    ul.WebsiteUrl, ul.Views, ul.UpVotes, ul.DownVotes
ORDER BY 
    p.CreationDate DESC
LIMIT 100;
