
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.ViewCount,
        p.CreationDate,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.ViewCount DESC) AS Rank,
        (SELECT COUNT(*) FROM Comments c WHERE c.PostId = p.Id) AS CommentCount,
        (SELECT COUNT(*) FROM Votes v WHERE v.PostId = p.Id AND v.VoteTypeId = 2) AS UpvoteCount, 
        (SELECT COUNT(*) FROM Votes v WHERE v.PostId = p.Id AND v.VoteTypeId = 3) AS DownvoteCount
    FROM 
        Posts p
    WHERE 
        p.CreationDate >= CAST('2024-10-01 12:34:56' AS TIMESTAMP) - INTERVAL '1 year'
),
RecentUsers AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        u.Reputation,
        ROW_NUMBER() OVER (ORDER BY u.CreationDate DESC) AS UserRank
    FROM 
        Users u
    WHERE 
        u.Reputation > 50
),
UserPostAssociations AS (
    SELECT 
        ru.UserId,
        rp.PostId,
        rp.Title,
        rp.ViewCount,
        rp.CreationDate AS CreatedDate,
        CASE 
            WHEN rp.CommentCount > 0 THEN 'Has Comments' 
            ELSE 'No Comments' 
        END AS CommentStatus,
        rp.UpvoteCount,
        rp.DownvoteCount
    FROM 
        RecentUsers ru
    LEFT JOIN 
        RankedPosts rp ON ru.UserId = rp.OwnerUserId 
    WHERE 
        rp.Rank = 1 AND rp.CommentCount IS NOT NULL
)
SELECT 
    u.DisplayName,
    COUNT(up.PostId) AS TotalPosts,
    SUM(CASE WHEN up.UpvoteCount > up.DownvoteCount THEN 1 ELSE 0 END) AS PositiveEngagements,
    STRING_AGG(DISTINCT up.Title, '; ') AS PostTitles,
    NULLIF(SUM(up.ViewCount), 0) AS TotalViews,
    MAX(COALESCE(up.CreatedDate, '1900-01-01'::TIMESTAMP)) AS LastPostDate
FROM 
    UserPostAssociations up
JOIN 
    Users u ON up.UserId = u.Id
GROUP BY 
    u.DisplayName
HAVING 
    COUNT(up.PostId) > 3 
    AND MAX(up.CreatedDate) > CAST('2024-10-01 12:34:56' AS TIMESTAMP) - INTERVAL '6 months'
ORDER BY 
    TotalPosts DESC, TotalViews DESC;
