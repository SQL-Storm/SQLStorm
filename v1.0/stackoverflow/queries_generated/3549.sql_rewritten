WITH RankedPosts AS (
    SELECT 
        p.Id,
        p.Title,
        p.CreationDate,
        p.Score,
        p.ViewCount,
        COUNT(c.Id) AS CommentCount,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC) AS rk
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    WHERE 
        p.CreationDate >= cast('2024-10-01' as date) - INTERVAL '1 year'
    GROUP BY 
        p.Id, p.Title, p.CreationDate, p.Score, p.ViewCount
),
UserStatistics AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        SUM(p.Score) AS TotalScore,
        COUNT(p.Id) AS TotalPosts,
        AVG(p.Score) AS AvgScore
    FROM 
        Users u
    JOIN 
        Posts p ON u.Id = p.OwnerUserId
    GROUP BY 
        u.Id, u.DisplayName
),
FilteredBadges AS (
    SELECT 
        b.UserId,
        COUNT(b.Id) AS BadgeCount,
        STRING_AGG(b.Name, ', ') AS BadgeNames
    FROM 
        Badges b
    WHERE 
        b.Class = 1 
    GROUP BY 
        b.UserId
)
SELECT 
    up.DisplayName AS UserName,
    up.TotalPosts,
    up.TotalScore,
    ub.BadgeCount,
    ub.BadgeNames,
    rp.Title AS MostPopularPost,
    rp.Score AS PostScore,
    rp.CommentCount,
    rp.ViewCount
FROM 
    UserStatistics up
LEFT JOIN 
    FilteredBadges ub ON up.UserId = ub.UserId
LEFT JOIN 
    RankedPosts rp ON up.UserId = rp.OwnerUserId AND rp.rk = 1
WHERE 
    up.AvgScore > 10
ORDER BY 
    up.TotalScore DESC, up.TotalPosts DESC NULLS LAST
LIMIT 100;