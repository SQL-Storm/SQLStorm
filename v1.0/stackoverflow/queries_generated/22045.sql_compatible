
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.Score,
        p.ViewCount,
        p.CreationDate,
        U.DisplayName AS OwnerName,
        ROW_NUMBER() OVER (PARTITION BY p.PostTypeId ORDER BY p.ViewCount DESC) AS ViewRank
    FROM 
        Posts p
    JOIN 
        Users U ON p.OwnerUserId = U.Id
    WHERE 
        p.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 year'
), 
ClosedPosts AS (
    SELECT 
        ph.PostId,
        ph.CreationDate AS ClosedDate,
        ph.Comment AS CloseReasonId
    FROM 
        PostHistory ph
    WHERE 
        ph.PostHistoryTypeId IN (10, 11) 
), 
PostVoteSummary AS (
    SELECT 
        PostId,
        COUNT(CASE WHEN VoteTypeId = 2 THEN 1 END) AS UpVotes,
        COUNT(CASE WHEN VoteTypeId = 3 THEN 1 END) AS DownVotes,
        COUNT(CASE WHEN VoteTypeId = 6 THEN 1 END) AS CloseVotes,
        COUNT(CASE WHEN VoteTypeId = 7 THEN 1 END) AS ReopenVotes
    FROM 
        Votes
    GROUP BY 
        PostId
), 
PostTagData AS (
    SELECT 
        p.Id AS PostId,
        STRING_AGG(DISTINCT t.TagName, ', ') AS Tags
    FROM 
        Posts p
    LEFT JOIN 
        Tags t ON POSITION(',' || t.TagName || ',' IN ',' || p.Tags || ',') > 0
    GROUP BY 
        p.Id
)

SELECT 
    RP.PostId,
    RP.Title,
    RP.Score,
    RP.ViewCount,
    RP.CreationDate,
    COALESCE(CT.ClosedDate, 'Not Closed') AS ClosedOrReopenedDate,
    COALESCE(CT.CloseReasonId, 'N/A') AS CloseReason,
    PVS.UpVotes,
    PVS.DownVotes,
    PVS.CloseVotes,
    PVS.ReopenVotes,
    PT.Tags,
    (SELECT COUNT(*) 
        FROM Comments c 
        WHERE c.PostId = RP.PostId 
        AND c.CreationDate > TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '30 days') AS RecentComments
FROM 
    RankedPosts RP
LEFT JOIN 
    ClosedPosts CT ON RP.PostId = CT.PostId
LEFT JOIN 
    PostVoteSummary PVS ON RP.PostId = PVS.PostId
LEFT JOIN 
    PostTagData PT ON RP.PostId = PT.PostId
WHERE 
    RP.ViewRank <= 5 
ORDER BY 
    RP.PostId;
