WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.Body,
        p.CreationDate,
        p.OwnerUserId,
        u.DisplayName AS OwnerDisplayName,
        COUNT(c.Id) AS CommentCount,
        COUNT(DISTINCT v.Id) AS VoteCount,
        STRING_AGG(DISTINCT SUBSTRING(t.TagName, 1, 20), ', ') AS Tags,
        ROW_NUMBER() OVER (PARTITION BY p.Id ORDER BY p.CreationDate DESC) AS RN
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    LEFT JOIN 
        PostLinks pl ON p.Id = pl.PostId
    LEFT JOIN 
        Tags t ON t.Id = ANY(STRING_TO_ARRAY(p.Tags, '<>'))  
    LEFT JOIN 
        Users u ON p.OwnerUserId = u.Id
    WHERE 
        p.PostTypeId = 1  
    GROUP BY 
        p.Id, u.DisplayName, p.Title, p.Body, p.CreationDate, p.OwnerUserId
),
TopPosts AS (
    SELECT 
        *,
        RANK() OVER (ORDER BY VoteCount DESC, CommentCount DESC) AS Rank
    FROM 
        RankedPosts
),
RecentPosts AS (
    SELECT 
        PostId,
        Title,
        OwnerDisplayName,
        CreationDate,
        Tags
    FROM 
        TopPosts 
    WHERE 
        Rank <= 10
)

SELECT 
    rp.*,
    ph.UserDisplayName AS LastEditor,
    ph.CreationDate AS LastEditDate,
    ph.Comment AS EditComment
FROM 
    RecentPosts rp
LEFT JOIN 
    PostHistory ph ON rp.PostId = ph.PostId 
WHERE 
    ph.CreationDate = (SELECT MAX(CreationDate) FROM PostHistory WHERE PostId = rp.PostId AND PostHistoryTypeId IN (4, 5, 6))  
ORDER BY 
    rp.CreationDate DESC;