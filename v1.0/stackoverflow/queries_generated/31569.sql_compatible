
WITH RankedPosts AS (
    SELECT
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Score,
        p.ViewCount,
        u.Id AS OwnerId,
        u.DisplayName AS OwnerDisplayName,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS rn,
        COUNT(c.Id) AS CommentCount
    FROM
        Posts p
    LEFT JOIN
        Users u ON p.OwnerUserId = u.Id
    LEFT JOIN
        Comments c ON p.Id = c.PostId
    WHERE
        p.PostTypeId = 1 
        AND p.CreationDate >= DATEADD(YEAR, -1, CURRENT_TIMESTAMP) 
    GROUP BY
        p.Id, p.Title, p.CreationDate, p.Score, p.ViewCount, u.Id, u.DisplayName
),
RecentActiveUsers AS (
    SELECT
        u.Id AS UserId,
        u.DisplayName,
        COUNT(DISTINCT p.Id) AS ActivePostCount
    FROM
        Users u
    JOIN
        Posts p ON u.Id = p.OwnerUserId
    WHERE
        p.CreationDate >= DATEADD(MONTH, -6, CURRENT_TIMESTAMP) 
    GROUP BY
        u.Id, u.DisplayName
),
PopularPostDetails AS (
    SELECT
        p.Id AS PostId,
        p.Title,
        p.Score,
        p.ViewCount,
        STRING_AGG(t.TagName, ', ') AS Tags,
        COALESCE(ph.Comment, 'No comments') AS LastEditComment
    FROM
        Posts p
    LEFT JOIN
        PostLinks pl ON p.Id = pl.PostId
    LEFT JOIN
        Tags t ON pl.RelatedPostId = t.Id
    LEFT JOIN
        PostHistory ph ON p.Id = ph.PostId AND ph.PostHistoryTypeId IN (4, 5) 
    WHERE
        p.Score > 10
    GROUP BY
        p.Id, p.Title, p.Score, p.ViewCount
)
SELECT
    r.PostId,
    r.Title,
    r.CreationDate,
    r.Score,
    r.ViewCount,
    r.OwnerDisplayName,
    ra.ActivePostCount,
    pp.Tags,
    pp.LastEditComment
FROM
    RankedPosts r
LEFT JOIN
    RecentActiveUsers ra ON r.OwnerId = ra.UserId
JOIN
    PopularPostDetails pp ON r.PostId = pp.PostId
WHERE
    r.rn = 1 
ORDER BY
    r.Score DESC, r.ViewCount DESC
LIMIT 100;
