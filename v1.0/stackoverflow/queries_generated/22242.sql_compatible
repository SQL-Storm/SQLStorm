
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Score,
        p.ViewCount,
        p.OwnerUserId,
        p.AcceptedAnswerId,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC) AS RankPerUser,
        COUNT(DISTINCT c.Id) OVER (PARTITION BY p.OwnerUserId) AS TotalComments
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    WHERE 
        p.Score > 0
),
PostInteractions AS (
    SELECT 
        r.PostId,
        r.Title,
        r.CreationDate,
        r.Score,
        r.ViewCount,
        (SELECT COUNT(*) 
         FROM Votes v 
         WHERE v.PostId = r.PostId AND v.VoteTypeId = 2) AS UpVotes,
        (SELECT COUNT(*) 
         FROM Votes v 
         WHERE v.PostId = r.PostId AND v.VoteTypeId = 3) AS DownVotes,
        (SELECT COUNT(*) 
         FROM PostHistory ph 
         WHERE ph.PostId = r.PostId AND ph.PostHistoryTypeId IN (10, 11)) AS CloseReopenActions,
        COALESCE(NULLIF(GROUP_CONCAT(DISTINCT t.TagName ORDER BY t.TagName), ''), 'No tags') AS TagList
    FROM 
        RankedPosts r
    LEFT JOIN 
        PostsTags pt ON r.PostId = pt.PostId
    LEFT JOIN 
        Tags t ON pt.TagId = t.Id
    WHERE 
        r.RankPerUser <= 5
    GROUP BY 
        r.PostId, r.Title, r.CreationDate, r.Score, r.ViewCount
)
SELECT 
    pi.PostId,
    pi.Title,
    pi.CreationDate,
    pi.Score,
    pi.ViewCount,
    pi.UpVotes,
    pi.DownVotes,
    pi.CloseReopenActions,
    pi.TagList,
    COALESCE(u.DisplayName, 'Anonymous') AS OwnerDisplayName,
    CASE 
        WHEN pi.Score >= 100 THEN 'Highly Engaging'
        WHEN pi.Score >= 50 THEN 'Moderately Engaging'
        ELSE 'Less Engaging' 
    END AS EngagementLevel,
    RANK() OVER (ORDER BY pi.Score DESC) AS GlobalRank,
    FIRST_VALUE(pi.ViewCount) OVER (PARTITION BY pi.TagList ORDER BY pi.Score DESC) AS FirstViewCountByTag
FROM 
    PostInteractions pi
LEFT JOIN 
    Users u ON pi.OwnerUserId = u.Id
WHERE 
    (pi.CloseReopenActions = 0 OR pi.CloseReopenActions IS NULL)
ORDER BY 
    pi.Score DESC, pi.ViewCount DESC
LIMIT 100;
