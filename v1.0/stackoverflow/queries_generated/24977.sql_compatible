
WITH RankedPosts AS (
    SELECT 
        p.Id,
        p.Title,
        p.CreationDate,
        p.ViewCount,
        p.Score,
        p.OwnerUserId,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS UserPostRank
    FROM 
        Posts p
    WHERE 
        p.CreationDate >= DATEADD(year, -1, '2024-10-01')
),
PostScores AS (
    SELECT 
        rp.Id,
        rp.Title,
        rp.Score,
        u.Reputation,
        CASE 
            WHEN rp.Score > 100 THEN 'High'
            WHEN rp.Score BETWEEN 50 AND 100 THEN 'Medium'
            ELSE 'Low'
        END AS ScoreCategory,
        COUNT(c.Id) AS CommentCount
    FROM 
        RankedPosts rp
    LEFT JOIN 
        Users u ON rp.OwnerUserId = u.Id
    LEFT JOIN 
        Comments c ON rp.Id = c.PostId
    GROUP BY 
        rp.Id, rp.Title, rp.Score, u.Reputation
),
ClosedPosts AS (
    SELECT 
        p.Id,
        p.Title,
        p.CreationDate,
        ph.Comment AS CloseReason,
        ph.CreationDate AS CloseDate,
        'Closed' AS Status
    FROM 
        Posts p
    JOIN 
        PostHistory ph ON p.Id = ph.PostId
    WHERE 
        ph.PostHistoryTypeId = 10 
),
ActiveUsers AS (
    SELECT 
        u.Id,
        u.DisplayName,
        u.Reputation,
        CASE 
            WHEN u.Reputation > 2000 THEN 'Veteran'
            WHEN u.Reputation BETWEEN 1000 AND 2000 THEN 'Intermediate'
            ELSE 'Newbie'
        END AS UserCategory
    FROM 
        Users u
    WHERE 
        u.LastAccessDate >= DATEADD(day, -30, '2024-10-01')
),
FinalReport AS (
    SELECT 
        ps.Id,
        ps.Title,
        ps.Score,
        ps.ScoreCategory,
        ps.CommentCount,
        CASE 
            WHEN cp.Id IS NOT NULL THEN 'Closed'
            ELSE 'Active'
        END AS PostStatus,
        au.UserCategory
    FROM 
        PostScores ps
    LEFT JOIN 
        ClosedPosts cp ON ps.Id = cp.Id
    LEFT JOIN 
        ActiveUsers au ON ps.OwnerUserId = au.Id
)
SELECT 
    fr.Title,
    fr.Score,
    fr.ScoreCategory,
    fr.CommentCount,
    fr.PostStatus,
    fr.UserCategory,
    COALESCE(cd.MaxLastAccess, '2024-10-01 12:34:56') AS ReportTimestamp
FROM 
    FinalReport fr
LEFT JOIN 
    (
        SELECT 
            OwnerUserId, 
            MAX(LastAccessDate) AS MaxLastAccess
        FROM 
            Users
        GROUP BY 
            OwnerUserId
    ) AS cd ON fr.OwnerUserId = cd.OwnerUserId
WHERE 
    fr.PostStatus = 'Active' OR (fr.PostStatus = 'Closed' AND fr.CommentCount > 5)
ORDER BY 
    fr.Score DESC, 
    fr.CommentCount DESC;
