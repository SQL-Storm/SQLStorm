WITH RankedPosts AS (
    SELECT 
        p.Id, p.Title, p.CreationDate, p.Score, p.ViewCount,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC) AS Rank,
        u.DisplayName AS OwnerDisplayName,
        COUNT(c.Id) AS CommentCount,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS Upvotes,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS Downvotes
    FROM 
        Posts p
    LEFT JOIN 
        Users u ON p.OwnerUserId = u.Id
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    WHERE 
        p.CreationDate >= '2023-01-01' 
    GROUP BY 
        p.Id, p.Title, p.CreationDate, p.Score, p.ViewCount, u.DisplayName
),
TopPosts AS (
    SELECT 
        rp.OwnerDisplayName, rp.Title, rp.CreationDate, rp.Score, 
        rp.ViewCount, rp.CommentCount, rp.Upvotes, rp.Downvotes
    FROM 
        RankedPosts rp
    WHERE 
        rp.Rank <= 5
)
SELECT 
    t.OwnerDisplayName,
    t.Title,
    t.CreationDate,
    t.Score,
    t.ViewCount,
    t.CommentCount,
    t.Upvotes,
    t.Downvotes,
    COALESCE(Badges.Name, 'No Badge') AS BadgeName
FROM 
    TopPosts t
LEFT JOIN 
    Badges b ON t.OwnerDisplayName = (SELECT DisplayName FROM Users WHERE Id = b.UserId) 
ORDER BY 
    t.Score DESC, t.ViewCount DESC;