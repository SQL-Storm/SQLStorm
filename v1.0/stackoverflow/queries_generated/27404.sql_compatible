
WITH UserBadges AS (
    SELECT 
        U.Id AS UserId,
        U.DisplayName,
        COUNT(B.Id) AS TotalBadges,
        SUM(CASE WHEN B.Class = 1 THEN 1 ELSE 0 END) AS GoldBadges,
        SUM(CASE WHEN B.Class = 2 THEN 1 ELSE 0 END) AS SilverBadges,
        SUM(CASE WHEN B.Class = 3 THEN 1 ELSE 0 END) AS BronzeBadges
    FROM 
        Users U
    LEFT JOIN 
        Badges B ON U.Id = B.UserId
    GROUP BY 
        U.Id, U.DisplayName
),
PopularPosts AS (
    SELECT 
        P.Id AS PostId,
        P.Title,
        P.Score,
        P.ViewCount,
        CASE 
            WHEN P.PostTypeId = 1 THEN 'Question' 
            WHEN P.PostTypeId = 2 THEN 'Answer' 
            ELSE 'Other' 
        END AS PostType,
        ARRAY_AGG(T.TagName) AS Tags
    FROM 
        Posts P
    LEFT JOIN 
        unnest(string_to_array(substring(P.Tags, 2, length(P.Tags) - 2), '><')) AS TagName ON true
    LEFT JOIN 
        Tags T ON T.TagName = TagName
    WHERE 
        P.Score > 10 AND P.ViewCount > 1000
    GROUP BY 
        P.Id, P.Title, P.Score, P.ViewCount, P.PostTypeId
    ORDER BY 
        P.Score DESC
    LIMIT 10
),
UserEngagement AS (
    SELECT 
        U.Id AS UserId,
        U.DisplayName,
        COUNT(C.Id) AS TotalComments,
        SUM(COALESCE(V.BountyAmount, 0)) AS TotalBounties
    FROM 
        Users U
    LEFT JOIN 
        Comments C ON U.Id = C.UserId
    LEFT JOIN 
        Votes V ON U.Id = V.UserId
    GROUP BY 
        U.Id, U.DisplayName
),
CombinedData AS (
    SELECT 
        UB.DisplayName AS UserDisplayName,
        UB.TotalBadges,
        UB.GoldBadges,
        UB.SilverBadges,
        UB.BronzeBadges,
        UP.PostId,
        UP.Title AS PostTitle,
        UP.ViewCount,
        UP.PostType,
        UE.TotalComments,
        UE.TotalBounties,
        UP.Tags
    FROM 
        UserBadges UB
    LEFT JOIN 
        PopularPosts UP ON UB.UserId = UP.PostId
    LEFT JOIN 
        UserEngagement UE ON UB.UserId = UE.UserId
)
SELECT 
    UserDisplayName,
    TotalBadges,
    GoldBadges,
    SilverBadges,
    BronzeBadges,
    PostId,
    PostTitle,
    ViewCount,
    PostType,
    TotalComments,
    TotalBounties,
    Tags
FROM 
    CombinedData
WHERE 
    TotalBadges > 3 
ORDER BY 
    ViewCount DESC, TotalBadges DESC;
