
WITH TagFrequency AS (
    SELECT
        TagName,
        COUNT(*) AS PostCount
    FROM
        Tags
    GROUP BY
        TagName
    HAVING
        COUNT(*) > 10
),
ActiveUsers AS (
    SELECT
        U.Id AS UserId,
        U.DisplayName,
        COUNT(DISTINCT P.Id) AS PostCount,
        COUNT(DISTINCT C.Id) AS CommentCount,
        COALESCE(SUM(V.BountyAmount), 0) AS TotalBounty
    FROM
        Users U
    LEFT JOIN
        Posts P ON U.Id = P.OwnerUserId
    LEFT JOIN
        Comments C ON P.Id = C.PostId
    LEFT JOIN
        Votes V ON P.Id = V.PostId AND V.UserId = U.Id
    WHERE
        U.LastAccessDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 year'
    GROUP BY
        U.Id, U.DisplayName
    HAVING
        COUNT(DISTINCT P.Id) > 5
),
TopPosts AS (
    SELECT
        P.Id,
        P.Title,
        P.OwnerUserId,
        P.Score,
        P.ViewCount,
        STRING_AGG(DISTINCT T.TagName, ', ') AS Tags
    FROM
        Posts P
    JOIN
        Tags T ON P.Tags LIKE '%' || T.TagName || '%'
    WHERE
        P.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 year'
        AND P.Score > 0
    GROUP BY
        P.Id, P.Title, P.OwnerUserId, P.Score, P.ViewCount
    ORDER BY
        P.Score DESC, P.ViewCount DESC
    LIMIT 10
)
SELECT
    U.DisplayName AS ActiveUser,
    TF.TagName AS PopularTag,
    TP.Title AS TopPostTitle,
    TP.Score AS TopPostScore,
    TP.ViewCount AS TopPostViewCount,
    A.PostCount AS UserPostCount,
    A.CommentCount AS UserCommentCount,
    A.TotalBounty AS UserTotalBounty
FROM
    ActiveUsers A
CROSS JOIN
    TagFrequency TF
CROSS JOIN
    TopPosts TP
WHERE
    A.UserId = TP.OwnerUserId
ORDER BY
    A.TotalBounty DESC, A.PostCount DESC;
