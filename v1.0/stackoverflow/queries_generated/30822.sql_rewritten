WITH RECURSIVE UserReputation AS (
    SELECT 
        Id,
        Reputation,
        CreationDate,
        1 AS Level
    FROM 
        Users
    WHERE 
        Reputation > 1000

    UNION ALL

    SELECT 
        u.Id,
        u.Reputation,
        u.CreationDate,
        ur.Level + 1
    FROM 
        Users u
    JOIN 
        UserReputation ur ON u.Reputation < ur.Reputation
    WHERE 
        ur.Level < 5
),
RecentQuestions AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.OwnerDisplayName,
        p.Score,
        COUNT(c.Id) AS CommentCount
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    WHERE 
        p.PostTypeId = 1 
    GROUP BY 
        p.Id, p.Title, p.CreationDate, p.OwnerDisplayName, p.Score
    HAVING 
        p.CreationDate > cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '30 days'
),
TopTags AS (
    SELECT 
        t.TagName,
        COUNT(p.Id) AS PostCount
    FROM 
        Tags t
    JOIN 
        Posts p ON p.Tags LIKE CONCAT('%', t.TagName, '%')
    GROUP BY 
        t.TagName
    ORDER BY 
        PostCount DESC
    LIMIT 10
)

SELECT 
    u.Id AS UserId,
    u.DisplayName,
    u.Reputation,
    rq.PostId,
    rq.Title AS QuestionTitle,
    rq.CreationDate AS QuestionDate,
    rq.CommentCount,
    tt.TagName,
    tt.PostCount
FROM 
    Users u
JOIN 
    UserReputation ur ON u.Id = ur.Id
LEFT JOIN 
    RecentQuestions rq ON u.Id = rq.OwnerUserId
JOIN 
    TopTags tt ON tt.PostCount > 0
WHERE 
    u.Location IS NOT NULL
    AND u.CreationDate <= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 year'
ORDER BY 
    ur.Reputation DESC, rq.CommentCount DESC
OFFSET 0 ROWS FETCH NEXT 20 ROWS ONLY;