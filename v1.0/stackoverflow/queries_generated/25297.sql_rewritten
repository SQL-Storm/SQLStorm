WITH TagFrequency AS (
    SELECT 
        UNNEST(STRING_TO_ARRAY(SUBSTRING(Tags FROM 2 FOR LENGTH(Tags) - 2), '><')) AS Tag, 
        COUNT(*) AS TagCount
    FROM 
        Posts
    WHERE 
        PostTypeId = 1  
    GROUP BY 
        Tag
),
TopTags AS (
    SELECT 
        Tag, 
        TagCount, 
        ROW_NUMBER() OVER (ORDER BY TagCount DESC) AS Rank
    FROM 
        TagFrequency
    WHERE 
        Tag IS NOT NULL
),
MostRecentPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        COALESCE(c.UserDisplayName, 'Community User') AS LastEditor,
        p.LastEditDate,
        tt.Tag
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON c.PostId = p.Id
    JOIN 
        TopTags tt ON tt.Tag IN (SELECT UNNEST(STRING_TO_ARRAY(SUBSTRING(p.Tags FROM 2 FOR LENGTH(p.Tags) - 2), '><')))
                                 WHERE p.PostTypeId = 1)  
    WHERE 
        p.PostTypeId = 1
    ORDER BY 
        p.CreationDate DESC
    LIMIT 10
),
PostStatistics AS (
    SELECT 
        PostId,
        Title,
        CreationDate,
        LastEditor,
        LastEditDate,
        COUNT(c.Id) AS CommentCount,
        COUNT(v.Id) AS VoteCount,
        AVG(v.BountyAmount) AS AvgBounty
    FROM 
        MostRecentPosts mrp
    LEFT JOIN 
        Comments c ON c.PostId = mrp.PostId
    LEFT JOIN 
        Votes v ON v.PostId = mrp.PostId
    GROUP BY 
        PostId, Title, CreationDate, LastEditor, LastEditDate
)
SELECT 
    ps.PostId,
    ps.Title,
    ps.CreationDate,
    ps.LastEditor,
    ps.LastEditDate,
    ps.CommentCount,
    ps.VoteCount,
    COALESCE(ps.AvgBounty, 0) AS AvgBounty,
    tt.Tag
FROM 
    PostStatistics ps
JOIN 
    MostRecentPosts mrp ON ps.PostId = mrp.PostId
JOIN 
    TopTags tt ON tt.Tag IN (SELECT UNNEST(STRING_TO_ARRAY(SUBSTRING(mrp.Tags FROM 2 FOR LENGTH(mrp.Tags) - 2), '><')))
                              WHERE mrp.PostId = ps.PostId)
ORDER BY 
    ps.CreationDate DESC;