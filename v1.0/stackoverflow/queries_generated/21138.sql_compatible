
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Score,
        p.ViewCount,
        ROW_NUMBER() OVER (PARTITION BY p.PostTypeId ORDER BY p.Score DESC) AS PostRank
    FROM 
        Posts p
    WHERE 
        p.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 year'
), 
UserActivity AS (
    SELECT 
        u.Id AS UserId,
        COUNT(c.Id) AS CommentCount,
        SUM(v.BountyAmount) AS TotalBounties
    FROM 
        Users u
    LEFT JOIN 
        Comments c ON c.UserId = u.Id
    LEFT JOIN 
        Votes v ON v.UserId = u.Id 
    WHERE 
        u.Reputation > 1000
    GROUP BY 
        u.Id
),
PostHistoryCounts AS (
    SELECT 
        ph.PostId,
        COUNT(ph.Id) AS EditCount
    FROM 
        PostHistory ph 
    WHERE 
        ph.PostHistoryTypeId IN (4, 5) 
    GROUP BY 
        ph.PostId
),
TopPosts AS (
    SELECT 
        rp.PostId,
        rp.Title,
        rp.Score,
        rp.ViewCount,
        ph.EditCount,
        ua.CommentCount,
        ua.TotalBounties
    FROM 
        RankedPosts rp
    JOIN 
        PostHistoryCounts ph ON rp.PostId = ph.PostId
    JOIN 
        UserActivity ua ON rp.PostId IN (SELECT DISTINCT PostId FROM Comments WHERE UserId = ua.UserId)
    WHERE 
        rp.PostRank <= 5
)
SELECT 
    tp.Title,
    tp.Score,
    tp.ViewCount,
    tp.EditCount,
    tp.CommentCount,
    COALESCE(tp.TotalBounties, 0) AS TotalBounties,
    STRING_AGG(DISTINCT et.Name, ', ') AS TagNames
FROM 
    TopPosts tp
LEFT JOIN 
    (SELECT UNNEST(STRING_TO_ARRAY((SELECT Tags FROM Posts WHERE Id = tp.PostId), ', ')) AS tag) AS tag ON TRUE
LEFT JOIN 
    Tags et ON et.TagName = tag
GROUP BY 
    tp.Title, tp.Score, tp.ViewCount, tp.EditCount, tp.CommentCount, tp.TotalBounties
ORDER BY 
    tp.Score DESC, tp.ViewCount DESC;
