WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.Score,
        p.CreationDate,
        p.ViewCount,
        p.OwnerUserId,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS PostRank
    FROM 
        Posts p
    WHERE 
        p.PostTypeId = 1  
),
UserReputation AS (
    SELECT 
        u.Id AS UserId,
        u.Reputation,
        COUNT(DISTINCT p.Id) AS QuestionCount,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotesCount,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotesCount
    FROM 
        Users u
    LEFT JOIN 
        Posts p ON u.Id = p.OwnerUserId AND p.PostTypeId = 1  
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    GROUP BY 
        u.Id, u.Reputation
),
TopUsers AS (
    SELECT 
        ur.UserId,
        ur.Reputation,
        ur.QuestionCount,
        (ur.UpVotesCount - ur.DownVotesCount) AS NetVotes,
        RANK() OVER (ORDER BY ur.Reputation DESC, ur.NetVotes DESC) AS UserRank
    FROM 
        UserReputation ur
    WHERE 
        ur.QuestionCount > 5  
)
SELECT 
    u.DisplayName,
    u.Location,
    u.CreationDate,
    ur.QuestionCount,
    ur.UpVotesCount,
    ur.DownVotesCount,
    tp.QuestionCount AS PostsCreatedByTopUser,
    p.Title AS RecentPostTitle,
    p.CreationDate AS RecentPostDate,
    p.Score AS RecentPostScore
FROM 
    TopUsers tu
JOIN 
    Users u ON tu.UserId = u.Id
LEFT JOIN 
    RankedPosts p ON p.OwnerUserId = tu.UserId AND p.PostRank = 1
JOIN 
    (SELECT UserId, COUNT(*) AS QuestionCount FROM Posts WHERE PostTypeId = 1 GROUP BY UserId) tp ON tu.UserId = tp.UserId
WHERE 
    tu.UserRank <= 10  
ORDER BY 
    tu.UserRank;