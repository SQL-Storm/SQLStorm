
WITH RankedPosts AS (
    SELECT
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        pt.Name AS PostType,
        u.DisplayName AS Owner,
        COUNT(c.Id) AS CommentCount,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVoteCount,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVoteCount,
        ROW_NUMBER() OVER (PARTITION BY pt.Id ORDER BY p.CreationDate DESC) AS Rank
    FROM
        Posts p
    JOIN
        PostTypes pt ON p.PostTypeId = pt.Id
    LEFT JOIN
        Comments c ON p.Id = c.PostId
    LEFT JOIN
        Votes v ON p.Id = v.PostId
    JOIN
        Users u ON p.OwnerUserId = u.Id 
    WHERE
        p.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 year'
    GROUP BY
        p.Id, p.Title, p.CreationDate, pt.Name, u.DisplayName
),
TopPerformingPosts AS (
    SELECT
        PostId,
        Title,
        CreationDate,
        PostType,
        Owner,
        CommentCount,
        UpVoteCount,
        DownVoteCount
    FROM
        RankedPosts
    WHERE
        Rank <= 5
)
SELECT 
    tp.Title,
    tp.CreationDate,
    tp.PostType,
    tp.Owner,
    tp.CommentCount,
    tp.UpVoteCount,
    tp.DownVoteCount,
    CASE 
        WHEN tp.UpVoteCount > tp.DownVoteCount THEN 'Positive Engagement'
        WHEN tp.UpVoteCount < tp.DownVoteCount THEN 'Negative Engagement'
        ELSE 'Neutral Engagement'
    END AS EngagementStatus
FROM 
    TopPerformingPosts tp
ORDER BY 
    tp.CreationDate DESC;
