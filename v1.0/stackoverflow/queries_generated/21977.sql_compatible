
WITH RecursivePostHierarchy AS (
    SELECT 
        Id, 
        PostTypeId, 
        ParentId, 
        Title, 
        CreationDate,
        1 AS Level
    FROM 
        Posts
    WHERE 
        ParentId IS NULL
    
    UNION ALL
    
    SELECT 
        p.Id, 
        p.PostTypeId, 
        p.ParentId, 
        p.Title, 
        p.CreationDate,
        Level + 1
    FROM 
        Posts p
    INNER JOIN 
        RecursivePostHierarchy r ON p.ParentId = r.Id
),
PostStatistics AS (
    SELECT 
        Posts.Id AS PostId,
        Posts.Title,
        COUNT(Comments.Id) AS TotalComments,
        SUM(CASE WHEN Votes.VoteTypeId = 2 THEN 1 ELSE 0 END) AS TotalUpvotes,
        AVG(DATEDIFF(CreationDate, Posts.CreationDate)) AS AvgCommentTime,
        ROW_NUMBER() OVER (PARTITION BY Posts.Id ORDER BY Posts.ViewCount DESC) AS Rank
    FROM 
        Posts
    LEFT JOIN 
        Comments ON Comments.PostId = Posts.Id
    LEFT JOIN 
        Votes ON Votes.PostId = Posts.Id
    GROUP BY 
        Posts.Id, Posts.Title
),
MilestonePosts AS (
    SELECT 
        PostId,
        Title,
        TotalComments,
        TotalUpvotes,
        AvgCommentTime,
        CASE 
            WHEN TotalComments > 10 THEN 'High Activity'
            WHEN TotalComments BETWEEN 5 AND 10 THEN 'Moderate Activity'
            ELSE 'Low Activity'
        END AS ActivityLevel,
        CASE 
            WHEN TotalUpvotes = (SELECT MAX(TotalUpvotes) FROM PostStatistics) THEN 'Most Upvotes'
            ELSE 'Regular'
        END AS VoteStatus
    FROM 
        PostStatistics
)
SELECT 
    ph.Id AS HierarchyPostId, 
    ph.Title AS HierarchyTitle,
    COALESCE(mp.Title, 'No Milestone') AS MilestoneTitle,
    mp.TotalComments,
    mp.TotalUpvotes,
    mp.AvgCommentTime,
    mp.ActivityLevel,
    mp.VoteStatus,
    ph.Level AS PostLevel
FROM 
    RecursivePostHierarchy ph
LEFT JOIN 
    MilestonePosts mp ON ph.Id = mp.PostId
WHERE 
    ph.Level > 1
    AND ph.CreationDate >= (DATE '2024-10-01' - INTERVAL '6 months')
ORDER BY 
    ph.Level, 
    mp.TotalComments DESC NULLS LAST;
