SELECT 
    p.Id AS PostId,
    p.Title,
    p.CreationDate,
    p.Score,
    p.ViewCount,
    COALESCE(a.AnswerCount, 0) AS AnswerCount,
    COALESCE(c.CommentCount, 0) AS CommentCount,
    COALESCE(v.UpVotes, 0) AS UpVotes,
    COALESCE(v.DownVotes, 0) AS DownVotes,
    u.DisplayName AS OwnerDisplayName,
    u.Reputation AS OwnerReputation,
    u.CreationDate AS UserCreationDate,
    SUM(CASE WHEN bh.PostHistoryTypeId = 10 THEN 1 ELSE 0 END) AS CloseCount,
    SUM(CASE WHEN bh.PostHistoryTypeId = 11 THEN 1 ELSE 0 END) AS ReopenCount,
    SUM(CASE WHEN bh.PostHistoryTypeId = 12 THEN 1 ELSE 0 END) AS DeleteCount,
    SUM(CASE WHEN bh.PostHistoryTypeId = 13 THEN 1 ELSE 0 END) AS UndeleteCount
FROM 
    Posts p
LEFT JOIN 
    (SELECT 
         PostId, 
         COUNT(*) AS AnswerCount 
     FROM 
         Posts 
     WHERE 
         PostTypeId = 2 
     GROUP BY 
         PostId) a ON p.Id = a.PostId
LEFT JOIN 
    (SELECT 
         PostId, 
         COUNT(*) AS CommentCount 
     FROM 
         Comments 
     GROUP BY 
         PostId) c ON p.Id = c.PostId
LEFT JOIN 
    (SELECT 
         UserId, 
         SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes,
         SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes
     FROM 
         Votes 
     GROUP BY 
         UserId) v ON p.OwnerUserId = v.UserId
LEFT JOIN 
    Users u ON p.OwnerUserId = u.Id
LEFT JOIN 
    PostHistory bh ON p.Id = bh.PostId
WHERE 
    p.CreationDate >= '2023-01-01'  
GROUP BY 
    p.Id, p.Title, p.CreationDate, p.Score, p.ViewCount, 
    u.DisplayName, u.Reputation, u.CreationDate, a.AnswerCount, 
    c.CommentCount, v.UpVotes, v.DownVotes
ORDER BY 
    p.CreationDate DESC;