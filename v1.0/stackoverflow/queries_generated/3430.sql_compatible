
WITH RankedPosts AS (
    SELECT 
        p.Id, 
        p.Title, 
        p.Score, 
        p.ViewCount, 
        p.CreationDate,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.ViewCount DESC) AS UserRank,
        COUNT(v.Id) OVER (PARTITION BY p.Id) AS VoteCount
    FROM 
        Posts p
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    WHERE 
        p.CreationDate >= '2023-01-01' 
        AND p.PostTypeId = 1
),
TopUsers AS (
    SELECT 
        u.Id AS UserId, 
        COUNT(p.Id) AS PostCount, 
        SUM(p.Score) AS TotalScore
    FROM 
        Users u
    JOIN 
        Posts p ON u.Id = p.OwnerUserId
    WHERE 
        p.CreationDate >= '2023-01-01'
    GROUP BY 
        u.Id
    HAVING 
        COUNT(p.Id) > 5
)
SELECT 
    u.DisplayName,
    tp.UserId,
    tp.PostCount,
    tp.TotalScore,
    COALESCE(rp.Title, 'No Posts') AS TopPostTitle,
    COALESCE(rp.ViewCount, 0) AS TopPostViews,
    CASE 
        WHEN rp.UserRank IS NULL THEN 'No Rank'
        WHEN rp.UserRank <= 3 THEN 'Top Rank'
        ELSE 'Other Rank' 
    END AS RankCategory
FROM 
    TopUsers tp
LEFT JOIN 
    RankedPosts rp ON tp.UserId = rp.OwnerUserId 
LEFT JOIN 
    Users u ON tp.UserId = u.Id
WHERE 
    tp.TotalScore > 50
ORDER BY 
    tp.TotalScore DESC, 
    tp.PostCount DESC;
