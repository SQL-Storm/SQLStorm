
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.ViewCount,
        p.Score,
        u.DisplayName AS OwnerName,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC) AS Rank
    FROM 
        Posts p
    JOIN 
        Users u ON p.OwnerUserId = u.Id
    WHERE 
        p.PostTypeId = 1 
),
RecentActivity AS (
    SELECT 
        p.OwnerUserId,
        MAX(p.LastActivityDate) AS MostRecentActivity
    FROM 
        Posts p
    GROUP BY 
        p.OwnerUserId
),
UserBadges AS (
    SELECT 
        b.UserId,
        COUNT(b.Id) AS BadgeCount,
        STRING_AGG(b.Name, ', ') AS Badges
    FROM 
        Badges b
    GROUP BY 
        b.UserId
),
TopUsers AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        u.Reputation,
        COALESCE(ra.MostRecentActivity, 'No Activity') AS LastActivity,
        COALESCE(ub.BadgeCount, 0) AS BadgeCount,
        COALESCE(ub.Badges, 'No Badges') AS BadgeNames
    FROM 
        Users u
    LEFT JOIN 
        RecentActivity ra ON u.Id = ra.OwnerUserId
    LEFT JOIN 
        UserBadges ub ON u.Id = ub.UserId
    ORDER BY 
        u.Reputation DESC
)
SELECT 
    t.UserId,
    t.DisplayName,
    t.Reputation,
    t.LastActivity,
    t.BadgeCount,
    t.BadgeNames,
    rp.PostId,
    rp.Title,
    rp.CreationDate,
    rp.ViewCount,
    rp.Score
FROM 
    TopUsers t
LEFT JOIN 
    RankedPosts rp ON t.UserId = rp.OwnerName AND rp.Rank <= 5
WHERE 
    t.Reputation > 100 
    AND (t.BadgeCount >= 1 OR t.LastActivity != 'No Activity') 
ORDER BY 
    t.Reputation DESC, 
    rp.Score DESC;
