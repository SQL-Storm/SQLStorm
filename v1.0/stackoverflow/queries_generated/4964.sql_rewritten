WITH RecentPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.ViewCount,
        p.Score,
        COALESCE(p.AcceptedAnswerId, -1) AS AcceptedAnswer,
        p.CreationDate,
        COUNT(c.Id) AS CommentCount,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS UserPostRank
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    WHERE 
        p.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 year'
    GROUP BY 
        p.Id, p.Title, p.ViewCount, p.Score, p.AcceptedAnswerId, p.CreationDate, p.OwnerUserId
), 
UserActivity AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        SUM(u.UpVotes) AS TotalUpVotes,
        SUM(u.DownVotes) AS TotalDownVotes,
        COUNT(DISTINCT p.Id) AS TotalPosts,
        MAX(b.Class) AS HighestBadgeClass
    FROM 
        Users u
    LEFT JOIN 
        Votes v ON u.Id = v.UserId
    LEFT JOIN 
        Posts p ON u.Id = p.OwnerUserId
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    GROUP BY 
        u.Id, u.DisplayName
), 
PostStats AS (
    SELECT 
        rp.PostId,
        rp.Title,
        rp.ViewCount,
        rp.Score,
        ua.DisplayName AS OwnerName,
        ua.TotalPosts,
        ua.TotalUpVotes,
        ua.TotalDownVotes,
        rp.CommentCount,
        ROW_NUMBER() OVER (ORDER BY rp.Score DESC, rp.ViewCount DESC) AS Ranking
    FROM 
        RecentPosts rp
    JOIN 
        UserActivity ua ON rp.OwnerUserId = ua.UserId
)
SELECT 
    ps.PostId,
    ps.Title,
    ps.ViewCount,
    ps.Score,
    ps.OwnerName,
    ps.TotalPosts,
    ps.TotalUpVotes,
    ps.TotalDownVotes,
    ps.CommentCount,
    CASE 
        WHEN ps.Ranking <= 10 THEN 'Top 10'
        ELSE 'Other'
    END AS PostRankingCategory,
    (SELECT 
         COUNT(*)
     FROM 
         Votes v
     WHERE 
         v.PostId = ps.PostId
         AND v.VoteTypeId = 2) AS UpvoteCount,
    (SELECT 
         COUNT(*)
     FROM 
         Votes v
     WHERE 
         v.PostId = ps.PostId
         AND v.VoteTypeId = 3) AS DownvoteCount
FROM 
    PostStats ps
WHERE 
    ps.TotalPosts > 5
ORDER BY 
    ps.Ranking;