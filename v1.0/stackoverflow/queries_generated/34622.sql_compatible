
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        u.DisplayName AS Owner,
        COUNT(c.Id) AS CommentsCount,
        COUNT(DISTINCT v.Id) AS VoteCount,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS RN,
        COALESCE(SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END), 0) AS UpVotes,
        COALESCE(SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END), 0) AS DownVotes
    FROM 
        Posts p
    LEFT JOIN 
        Users u ON p.OwnerUserId = u.Id
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    WHERE 
        p.CreationDate >= CURRENT_DATE - INTERVAL '1 year'
    GROUP BY 
        p.Id, p.Title, p.CreationDate, u.DisplayName, p.OwnerUserId
), 
TopPosts AS (
    SELECT 
        PostId, 
        Title, 
        CreationDate, 
        Owner, 
        CommentsCount, 
        VoteCount, 
        UpVotes, 
        DownVotes, 
        RN
    FROM 
        RankedPosts
    WHERE 
        RN = 1
), 
PostHistoryDetails AS (
    SELECT 
        ph.PostId,
        MAX(ph.CreationDate) AS LastEditDate,
        STRING_AGG(CONCAT(ph.UserDisplayName, ': ', ph.Comment), '; ') AS EditComments
    FROM 
        PostHistory ph
    WHERE 
        ph.PostHistoryTypeId IN (4, 5, 6) 
    GROUP BY 
        ph.PostId
)
SELECT 
    tp.PostId,
    tp.Title,
    tp.CreationDate,
    tp.Owner,
    tp.CommentsCount,
    tp.VoteCount,
    tp.UpVotes,
    tp.DownVotes,
    COALESCE(ph.LastEditDate, 'Never Edited') AS LastEdit,
    COALESCE(ph.EditComments, 'No Comments') AS EditComments
FROM 
    TopPosts tp
LEFT JOIN 
    PostHistoryDetails ph ON tp.PostId = ph.PostId
ORDER BY 
    tp.CreationDate DESC, tp.Title;
