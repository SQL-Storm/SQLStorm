
WITH TagList AS (
    SELECT 
        PostId,
        UNNEST(string_to_array(SUBSTRING(Tags FROM 2 FOR LENGTH(Tags) - 2), '><')) AS Tag
    FROM 
        Posts
    WHERE 
        PostTypeId = 1 
),
UserReputation AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        u.Reputation,
        COUNT(DISTINCT b.Id) AS BadgeCount,
        COALESCE(SUM(v.BountyAmount), 0) AS TotalBounty
    FROM 
        Users u
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    LEFT JOIN 
        Votes v ON u.Id = v.UserId
    GROUP BY 
        u.Id, u.DisplayName, u.Reputation
),
PostStats AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.ViewCount,
        p.Score,
        COUNT(c.Id) AS CommentCount,
        COUNT(hl.PostId) AS LinkCount,
        STRING_AGG(DISTINCT tl.Tag, ', ') AS Tags
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        PostLinks hl ON p.Id = hl.PostId
    LEFT JOIN 
        TagList tl ON p.Id = tl.PostId
    WHERE 
        p.PostTypeId = 1
    GROUP BY 
        p.Id, p.Title, p.CreationDate, p.ViewCount, p.Score
)
SELECT 
    us.DisplayName AS User,
    us.Reputation AS Reputation,
    ps.PostId,
    ps.Title AS QuestionTitle,
    ps.CreationDate AS QuestionDate,
    ps.ViewCount AS QuestionViews,
    ps.Score AS QuestionScore,
    ps.CommentCount AS TotalComments,
    ps.LinkCount AS RelatedLinks,
    ps.Tags AS Tags,
    us.BadgeCount AS NumberOfBadges,
    us.TotalBounty AS TotalBountyAwarded
FROM 
    UserReputation us
JOIN 
    Posts p ON us.UserId = p.OwnerUserId
JOIN 
    PostStats ps ON p.Id = ps.PostId
WHERE 
    ps.Score > 10
ORDER BY 
    us.Reputation DESC, 
    ps.Score DESC;
