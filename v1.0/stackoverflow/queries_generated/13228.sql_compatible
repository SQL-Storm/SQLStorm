
SELECT 
    p.Id AS PostId,
    p.Title,
    p.CreationDate,
    p.Score,
    p.ViewCount,
    COUNT(c.Id) AS CommentCount,
    COUNT(v.Id) AS VoteCount,
    COUNT(b.Id) AS BadgeCount,
    DATEDIFF(TIMESTAMP '2024-10-01 12:34:56', p.CreationDate) AS AgeInDays,
    u.Reputation AS OwnerReputation,
    u.DisplayName AS OwnerDisplayName,
    STRING_AGG(DISTINCT pt.Name) AS PostType,
    STRING_AGG(DISTINCT lt.Name) AS LinkType
FROM 
    Posts p
LEFT JOIN 
    Comments c ON p.Id = c.PostId
LEFT JOIN 
    Votes v ON p.Id = v.PostId
LEFT JOIN 
    Users u ON p.OwnerUserId = u.Id 
LEFT JOIN 
    PostTypes pt ON p.PostTypeId = pt.Id 
LEFT JOIN 
    PostLinks pl ON p.Id = pl.PostId 
LEFT JOIN 
    LinkTypes lt ON pl.LinkTypeId = lt.Id 
LEFT JOIN 
    Badges b ON u.Id = b.UserId 
WHERE 
    p.CreationDate >= DATE_SUB(DATE '2024-10-01', INTERVAL '1 YEAR')
GROUP BY 
    p.Id, p.Title, p.CreationDate, p.Score, p.ViewCount, u.Reputation, u.DisplayName
ORDER BY 
    p.CreationDate DESC;
