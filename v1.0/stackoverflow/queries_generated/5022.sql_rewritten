WITH UserActivity AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COUNT(DISTINCT p.Id) AS TotalPosts,
        SUM(CASE WHEN p.PostTypeId = 1 THEN 1 ELSE 0 END) AS TotalQuestions,
        SUM(CASE WHEN p.PostTypeId = 2 THEN 1 ELSE 0 END) AS TotalAnswers,
        SUM(CASE WHEN c.Id IS NOT NULL THEN 1 ELSE 0 END) AS TotalComments,
        SUM(COALESCE(v.UpVotes, 0)) AS TotalUpVotes,
        SUM(COALESCE(v.DownVotes, 0)) AS TotalDownVotes,
        MAX(p.CreationDate) AS LastActivityDate
    FROM 
        Users u
    LEFT JOIN 
        Posts p ON u.Id = p.OwnerUserId
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        (SELECT PostId, 
                SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes, 
                SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes 
         FROM Votes 
         GROUP BY PostId) v ON p.Id = v.PostId
    GROUP BY 
        u.Id, u.DisplayName
),
PostStatistics AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.Score,
        p.ViewCount,
        ARRAY_AGG(DISTINCT SUBSTRING(t.TagName FROM 1 FOR 35)) AS Tags,
        COUNT(DISTINCT c.Id) AS CommentCount,
        (SELECT COUNT(*) FROM Votes vw WHERE vw.PostId = p.Id AND vw.VoteTypeId = 2) AS UpVotes,
        (SELECT COUNT(*) FROM Votes vw WHERE vw.PostId = p.Id AND vw.VoteTypeId = 3) AS DownVotes
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        UNNEST(STRING_TO_ARRAY(p.Tags, '>')) AS tagId WITH ORDINALITY
        ON tagId.ORDINALITY = 1
    LEFT JOIN 
        Tags t ON tagId.CAST(tagId AS INTEGER) = t.Id
    GROUP BY 
        p.Id, p.Title, p.Score, p.ViewCount
)
SELECT 
    ua.DisplayName,
    ua.TotalPosts,
    ua.TotalQuestions,
    ua.TotalAnswers,
    ua.TotalComments,
    ua.TotalUpVotes,
    ua.TotalDownVotes,
    ps.PostId,
    ps.Title,
    ps.Score,
    ps.ViewCount,
    ps.Tags,
    ps.CommentCount,
    ps.UpVotes,
    ps.DownVotes
FROM 
    UserActivity ua
JOIN 
    PostStatistics ps ON ua.UserId = ps.OwnerUserId
WHERE 
    ua.TotalPosts > 0 AND 
    ua.LastActivityDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 year'
ORDER BY 
    ua.TotalUpVotes DESC, ua.TotalPosts DESC;