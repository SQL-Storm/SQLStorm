
WITH RECURSIVE PostHierarchy AS (
    SELECT 
        Id, 
        Title, 
        ParentId, 
        0 AS Level 
    FROM 
        Posts 
    WHERE 
        ParentId IS NULL

    UNION ALL

    SELECT 
        p.Id, 
        p.Title, 
        p.ParentId, 
        ph.Level + 1 
    FROM 
        Posts p
    INNER JOIN 
        PostHierarchy ph ON p.ParentId = ph.Id
),
RecentActivity AS (
    SELECT 
        u.Id AS UserId, 
        u.DisplayName, 
        COUNT(DISTINCT p.Id) AS PostCount, 
        COUNT(DISTINCT c.Id) AS CommentCount, 
        COUNT(DISTINCT b.Id) AS BadgeCount,
        MAX(p.CreationDate) AS LastActivityDate
    FROM 
        Users u
    LEFT JOIN 
        Posts p ON u.Id = p.OwnerUserId
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    WHERE 
        u.Reputation > 1000
    GROUP BY 
        u.Id, u.DisplayName
),
PostScores AS (
    SELECT 
        p.Id AS PostId, 
        p.Title, 
        p.Score,
        DENSE_RANK() OVER (ORDER BY p.Score DESC) AS RankScore
    FROM 
        Posts p
    WHERE 
        p.CreationDate > TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 year'
),
ClosedPosts AS (
    SELECT 
        h.PostId,
        h.CreationDate,
        c.Name AS CloseReason
    FROM 
        PostHistory h
    JOIN 
        CloseReasonTypes c ON h.Comment = CAST(c.Id AS INTEGER)
    WHERE 
        h.PostHistoryTypeId = 10 
)
SELECT 
    u.UserId,
    u.DisplayName,
    u.PostCount,
    u.CommentCount,
    u.BadgeCount,
    ph.Title AS RootPostTitle,
    ps.RankScore,
    cp.CloseReason,
    cp.CreationDate AS ClosedDate
FROM 
    RecentActivity u
LEFT JOIN 
    PostHierarchy ph ON ph.Id IN (SELECT ParentId FROM Posts WHERE OwnerUserId = u.UserId)
LEFT JOIN 
    PostScores ps ON ps.PostId IN (SELECT Id FROM Posts WHERE OwnerUserId = u.UserId)
LEFT JOIN 
    ClosedPosts cp ON cp.PostId IN (SELECT Id FROM Posts WHERE OwnerUserId = u.UserId)
WHERE 
    u.LastActivityDate > TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '30 days'
ORDER BY 
    u.BadgeCount DESC, 
    ps.RankScore ASC NULLS LAST;
