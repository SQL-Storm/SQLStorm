
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Score,
        p.ViewCount,
        a.AnswerCount,
        c.CommentCount,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS rn
    FROM 
        Posts p
    LEFT JOIN 
        (SELECT ParentId, COUNT(*) AS AnswerCount FROM Posts WHERE PostTypeId = 2 GROUP BY ParentId) a ON p.Id = a.ParentId
    LEFT JOIN 
        (SELECT PostId, COUNT(*) AS CommentCount FROM Comments GROUP BY PostId) c ON p.Id = c.PostId
    WHERE 
        p.PostTypeId = 1
),
TopPosts AS (
    SELECT 
        rp.PostId,
        rp.Title,
        rp.CreationDate,
        rp.Score,
        rp.ViewCount,
        rp.AnswerCount,
        rp.CommentCount
    FROM 
        RankedPosts rp
    WHERE 
        rp.rn = 1
)
SELECT 
    u.DisplayName,
    COUNT(DISTINCT bp.Id) AS BadgeCount,
    SUM(tp.ViewCount) AS TotalViews,
    AVG(tp.Score) AS AvgScore,
    COUNT(tp.PostId) AS TotalPosts
FROM 
    TopPosts tp
JOIN 
    Users u ON u.Id = tp.OwnerUserId
LEFT JOIN 
    Badges bp ON bp.UserId = u.Id
GROUP BY 
    u.DisplayName
ORDER BY 
    TotalPosts DESC, AvgScore DESC
LIMIT 10;
