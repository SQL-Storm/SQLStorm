WITH PopularTags AS (
    SELECT 
        split_part(t.TagName, ' ', 1) AS Tag, 
        COUNT(t.Id) AS TagCount
    FROM 
        Tags t
    JOIN 
        Posts p ON p.Tags LIKE '%' || t.TagName || '%'
    WHERE 
        p.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 year'
    GROUP BY 
        t.TagName
    HAVING 
        COUNT(t.Id) > 10
),
TopUsers AS (
    SELECT 
        u.Id, 
        u.DisplayName, 
        SUM(CASE WHEN p.PostTypeId = 1 THEN 1 ELSE 0 END) AS QuestionCount,
        SUM(CASE WHEN p.PostTypeId = 2 THEN 1 ELSE 0 END) AS AnswerCount,
        SUM(CASE WHEN a.UserId IS NOT NULL THEN 1 ELSE 0 END) AS AcceptedAnswerCount
    FROM 
        Users u
    LEFT JOIN 
        Posts p ON u.Id = p.OwnerUserId
    LEFT JOIN 
        Posts a ON p.AcceptedAnswerId = a.Id
    GROUP BY 
        u.Id, u.DisplayName
    HAVING 
        SUM(CASE WHEN p.PostTypeId = 1 OR p.PostTypeId = 2 THEN 1 ELSE 0 END) > 0
),
ActiveUsers AS (
    SELECT 
        u.Id, 
        u.DisplayName, 
        COUNT(c.Id) AS CommentCount
    FROM 
        Users u
    LEFT JOIN 
        Comments c ON u.Id = c.UserId
    GROUP BY 
        u.Id, u.DisplayName
    HAVING 
        COUNT(c.Id) > 5
),
UserMetrics AS (
    SELECT 
        pu.DisplayName AS PopularUser, 
        COUNT(pt.Tag) AS TotalTags,
        au.CommentCount, 
        pu.QuestionCount, 
        pu.AnswerCount, 
        pu.AcceptedAnswerCount
    FROM 
        TopUsers pu
    JOIN 
        ActiveUsers au ON pu.Id = au.Id
    JOIN 
        PopularTags pt ON pt.TagCount > 10
    GROUP BY 
        pu.DisplayName,  au.CommentCount, pu.QuestionCount, pu.AnswerCount, pu.AcceptedAnswerCount
)
SELECT 
    PopularUser, 
    TotalTags, 
    CommentCount, 
    QuestionCount, 
    AnswerCount, 
    AcceptedAnswerCount
FROM 
    UserMetrics
ORDER BY 
    CommentCount DESC, AnswerCount DESC
LIMIT 10;