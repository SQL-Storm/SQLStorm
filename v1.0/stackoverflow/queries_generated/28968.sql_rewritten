WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.Body,
        p.CreationDate,
        p.Score,
        u.DisplayName AS OwnerDisplayName,
        t.TagName,
        ROW_NUMBER() OVER (PARTITION BY t.TagName ORDER BY p.Score DESC) AS Rank
    FROM 
        Posts p
    JOIN 
        Users u ON p.OwnerUserId = u.Id
    JOIN 
        LATERAL (
            SELECT 
                unnest(string_to_array(substring(p.Tags, 2, length(p.Tags)-2), '><')) AS TagName
        ) t ON TRUE
    WHERE 
        p.PostTypeId = 1  
        AND p.Score > 0   
),
TopPosts AS (
    SELECT 
        r.* 
    FROM 
        RankedPosts r
    WHERE 
        r.Rank <= 5  
),
PostWithBadges AS (
    SELECT 
        tp.*,
        COUNT(b.Id) AS BadgeCount
    FROM 
        TopPosts tp
    LEFT JOIN 
        Badges b ON tp.OwnerDisplayName = b.UserId
    GROUP BY 
        tp.PostId, tp.Title, tp.Body, tp.CreationDate, tp.Score, tp.OwnerDisplayName, tp.TagName
)
SELECT 
    pwp.PostId,
    pwp.Title,
    pwp.Body,
    pwp.CreationDate,
    pwp.Score,
    pwp.OwnerDisplayName,
    pwp.TagName,
    pwp.BadgeCount
FROM 
    PostWithBadges pwp
ORDER BY 
    pwp.TagName, pwp.Score DESC;