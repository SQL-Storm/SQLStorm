
WITH RecentPosts AS (
    SELECT p.Id, p.Title, p.CreationDate, p.Score, p.ViewCount, u.DisplayName AS OwnerDisplayName
    FROM Posts p
    JOIN Users u ON p.OwnerUserId = u.Id
    WHERE p.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '30 days'
      AND p.PostTypeId = 1
),
PostStatistics AS (
    SELECT rp.Id, rp.Title, rp.CreationDate, 
           rp.Score, rp.ViewCount, rp.OwnerDisplayName,
           COALESCE(c.CommentCount, 0) AS CommentCount,
           COALESCE(v.UpVoteCount, 0) AS UpVoteCount,
           COALESCE(v.DownVoteCount, 0) AS DownVoteCount
    FROM RecentPosts rp
    LEFT JOIN (
        SELECT PostId, COUNT(*) AS CommentCount
        FROM Comments
        GROUP BY PostId
    ) c ON rp.Id = c.PostId
    LEFT JOIN (
        SELECT PostId, 
               COUNT(CASE WHEN VoteTypeId = 2 THEN 1 END) AS UpVoteCount,
               COUNT(CASE WHEN VoteTypeId = 3 THEN 1 END) AS DownVoteCount
        FROM Votes
        GROUP BY PostId
    ) v ON rp.Id = v.PostId
),
AggregatedStatistics AS (
    SELECT AVG(Score) AS AverageScore,
           SUM(ViewCount) AS TotalViews,
           SUM(CommentCount) AS TotalComments,
           SUM(UpVoteCount) AS TotalUpVotes,
           SUM(DownVoteCount) AS TotalDownVotes
    FROM PostStatistics
),
HighlightedPosts AS (
    SELECT ps.*, (ps.Score * 0.5 + ps.CommentCount * 0.2 + ps.UpVoteCount * 0.3) AS EngagementScore
    FROM PostStatistics ps
)
SELECT hp.*, as.AverageScore, as.TotalViews, as.TotalComments, as.TotalUpVotes, as.TotalDownVotes
FROM HighlightedPosts hp, AggregatedStatistics as
ORDER BY hp.EngagementScore DESC
LIMIT 10;
