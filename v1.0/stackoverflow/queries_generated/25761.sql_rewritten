WITH TagStatistics AS (
    SELECT
        t.TagName,
        COUNT(p.Id) AS PostCount,
        SUM(COALESCE(p.ViewCount, 0)) AS TotalViews,
        SUM(CASE WHEN p.OwnerUserId IS NOT NULL THEN 1 ELSE 0 END) AS UserPosts,
        SUM(CASE WHEN p.OwnerUserId IS NULL THEN 1 ELSE 0 END) AS CommunityPosts
    FROM
        Tags t
    LEFT JOIN 
        Posts p ON t.Id = ANY(string_to_array(substring(p.Tags, 2, length(p.Tags)-2), '><')::int[])
    GROUP BY
        t.TagName
),
TopUsers AS (
    SELECT
        u.Id AS UserId,
        u.DisplayName,
        COUNT(DISTINCT p.Id) AS AnsweredQuestions,
        SUM(v.BountyAmount) AS TotalBounties
    FROM
        Users u
    JOIN 
        Posts p ON u.Id = p.OwnerUserId AND p.PostTypeId = 2 
    LEFT JOIN 
        Votes v ON v.UserId = u.Id AND v.PostId IN (SELECT Id FROM Posts WHERE PostTypeId = 1) 
    GROUP BY
        u.Id, u.DisplayName
),
RecentPostHistory AS (
    SELECT
        ph.PostId,
        ph.UserId,
        ph.Comment,
        ph.CreationDate,
        p.Title,
        p.CreationDate AS PostCreationDate,
        ROW_NUMBER() OVER (PARTITION BY ph.PostId ORDER BY ph.CreationDate DESC) AS rn
    FROM
        PostHistory ph
    JOIN 
        Posts p ON ph.PostId = p.Id
    WHERE
        ph.CreationDate > cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '30 days'
)
SELECT
    ts.TagName,
    ts.PostCount,
    ts.TotalViews,
    ts.UserPosts,
    ts.CommunityPosts,
    tu.UserDisplayName,
    tu.AnsweredQuestions,
    tu.TotalBounties,
    rph.Comment,
    rph.CreationDate AS LastEditDate,
    rph.Title,
    rph.PostCreationDate
FROM
    TagStatistics ts
JOIN 
    TopUsers tu ON ts.PostCount > 10 
LEFT JOIN 
    RecentPostHistory rph ON rph.PostId IN (SELECT Id FROM Posts WHERE Tags LIKE '%' || ts.TagName || '%')
WHERE
    rph.rn = 1 
ORDER BY
    ts.PostCount DESC, tu.AnsweredQuestions DESC
LIMIT 100;