WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.Body,
        p.CreationDate,
        p.ViewCount,
        p.Score,
        p.AnswerCount,
        p.CommentCount,
        u.DisplayName AS OwnerDisplayName,
        t.TagName,
        ROW_NUMBER() OVER (PARTITION BY t.TagName ORDER BY p.Score DESC) AS Rank
    FROM 
        Posts p
    JOIN 
        Users u ON p.OwnerUserId = u.Id
    LEFT JOIN 
        Tags t ON t.Id = ANY(string_to_array(substring(p.Tags, 2, length(p.Tags) - 2), '><')::int[])
    WHERE 
        p.PostTypeId = 1
        AND p.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 year'
)

SELECT 
    rp.TagName,
    COUNT(rp.PostId) AS PostCount,
    AVG(rp.ViewCount) AS AvgViewCount,
    AVG(rp.Score) AS AvgScore,
    SUM(rp.AnswerCount) AS TotalAnswers,
    SUM(rp.CommentCount) AS TotalComments,
    STRING_AGG(rp.Title, '; ') AS Titles,
    STRING_AGG(rp.OwnerDisplayName, '; ') AS Owners
FROM 
    RankedPosts rp
WHERE 
    rp.Rank <= 5
GROUP BY 
    rp.TagName
ORDER BY 
    PostCount DESC;