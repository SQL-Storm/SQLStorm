WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.ViewCount,
        p.Score,
        p.AcceptedAnswerId,
        ROW_NUMBER() OVER (PARTITION BY p.PostTypeId ORDER BY p.CreationDate DESC) AS rn
    FROM 
        Posts p
    WHERE 
        p.ViewCount > 100
),
UserScore AS (
    SELECT 
        u.Id AS UserId,
        u.Reputation,
        COUNT(DISTINCT b.Id) AS BadgeCount,
        SUM(v.BountyAmount) AS TotalBounties
    FROM 
        Users u
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    LEFT JOIN 
        Votes v ON u.Id = v.UserId
    GROUP BY 
        u.Id, u.Reputation
),
ClosedPostReasons AS (
    SELECT 
        p.Id AS PostId,
        ph.CreationDate AS CloseDate,
        cr.Name AS CloseReason
    FROM 
        PostHistory ph
    JOIN 
        Posts p ON ph.PostId = p.Id
    JOIN 
        CloseReasonTypes cr ON ph.Comment::int = cr.Id
    WHERE 
        ph.PostHistoryTypeId = 10 
)
SELECT 
    rp.PostId,
    rp.Title,
    rp.CreationDate,
    rp.ViewCount,
    rp.Score,
    us.UserId,
    us.Reputation,
    us.BadgeCount,
    us.TotalBounties,
    cpr.CloseReason,
    cpr.CloseDate
FROM 
    RankedPosts rp
LEFT JOIN 
    UserScore us ON rp.AcceptedAnswerId = us.UserId
LEFT JOIN 
    ClosedPostReasons cpr ON rp.PostId = cpr.PostId
WHERE 
    rp.rn = 1
ORDER BY 
    rp.Score DESC, 
    rp.ViewCount DESC
LIMIT 50
UNION ALL
SELECT 
    NULL AS PostId,
    'Total Posts with High Views' AS Title,
    NULL AS CreationDate,
    COUNT(*) AS ViewCount,
    SUM(rp.Score) AS Score,
    NULL AS UserId,
    NULL AS Reputation,
    NULL AS BadgeCount,
    NULL AS TotalBounties,
    NULL AS CloseReason,
    NULL AS CloseDate
FROM 
    RankedPosts rp
WHERE 
    rp.ViewCount > 100;