
WITH RankedPosts AS (
    SELECT 
        p.Id, 
        p.Title, 
        p.CreationDate, 
        p.ViewCount, 
        p.Score, 
        U.DisplayName AS OwnerDisplayName, 
        COUNT(CASE WHEN c.Id IS NOT NULL THEN 1 END) OVER (PARTITION BY p.Id) AS CommentCount,
        ROW_NUMBER() OVER (ORDER BY p.Score DESC) AS Rank
    FROM 
        Posts p
    LEFT JOIN 
        Users U ON p.OwnerUserId = U.Id
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    WHERE 
        p.PostTypeId = 1 AND 
        p.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 year'
),
TopPosts AS (
    SELECT 
        Id, Title, CreationDate, ViewCount, Score, OwnerDisplayName, CommentCount
    FROM 
        RankedPosts
    WHERE 
        Rank <= 10
),
PostHistoryData AS (
    SELECT 
        ph.PostId, 
        ph.UserDisplayName, 
        ph.CreationDate AS HistoryDate, 
        ph.Comment, 
        p.Title, 
        pt.Name AS PostHistoryType
    FROM 
        PostHistory ph 
    JOIN 
        Posts p ON ph.PostId = p.Id
    JOIN 
        PostHistoryTypes pt ON ph.PostHistoryTypeId = pt.Id
    WHERE 
        ph.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '6 months'
)
SELECT 
    tp.*, 
    COALESCE(STRING_AGG(DISTINCT ph.UserDisplayName, ', ') FILTER (WHERE ph.UserDisplayName IS NOT NULL), 'No edits') AS Editors,
    COALESCE(STRING_AGG(DISTINCT pt.Name, ', ') FILTER (WHERE pt.Id IS NOT NULL), 'No history') AS HistoryTypes
FROM 
    TopPosts tp
LEFT JOIN 
    PostHistoryData ph ON tp.Id = ph.PostId
LEFT JOIN 
    PostHistoryTypes pt ON ph.PostHistoryTypeId = pt.Id
GROUP BY 
    tp.Id, tp.Title, tp.CreationDate, tp.ViewCount, tp.Score, tp.OwnerDisplayName, tp.CommentCount
ORDER BY 
    tp.Score DESC, tp.ViewCount DESC;
