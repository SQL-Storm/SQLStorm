
WITH UserBadgeStats AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COUNT(b.Id) AS BadgeCount,
        SUM(CASE WHEN b.Class = 1 THEN 1 ELSE 0 END) AS GoldBadges,
        SUM(CASE WHEN b.Class = 2 THEN 1 ELSE 0 END) AS SilverBadges,
        SUM(CASE WHEN b.Class = 3 THEN 1 ELSE 0 END) AS BronzeBadges
    FROM 
        Users u
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    GROUP BY 
        u.Id, u.DisplayName
),
PostStats AS (
    SELECT 
        p.OwnerUserId,
        COUNT(p.Id) AS TotalPosts,
        SUM(CASE WHEN p.PostTypeId = 1 THEN 1 ELSE 0 END) AS Questions,
        SUM(CASE WHEN p.PostTypeId = 2 THEN 1 ELSE 0 END) AS Answers,
        SUM(CASE WHEN p.PostTypeId = 10 THEN 1 ELSE 0 END) AS ClosedPosts
    FROM 
        Posts p
    WHERE
        p.CreationDate >= CAST('2024-10-01 12:34:56' AS TIMESTAMP) - INTERVAL '1 year'
    GROUP BY 
        p.OwnerUserId
),
CombinedStats AS (
    SELECT 
        u.UserId,
        u.DisplayName,
        COALESCE(b.BadgeCount, 0) AS BadgeCount,
        COALESCE(b.GoldBadges, 0) AS GoldBadges,
        COALESCE(b.SilverBadges, 0) AS SilverBadges,
        COALESCE(b.BronzeBadges, 0) AS BronzeBadges,
        COALESCE(p.TotalPosts, 0) AS TotalPosts,
        COALESCE(p.Questions, 0) AS Questions,
        COALESCE(p.Answers, 0) AS Answers,
        COALESCE(p.ClosedPosts, 0) AS ClosedPosts
    FROM 
        UserBadgeStats b
    FULL OUTER JOIN 
        PostStats p ON b.UserId = p.OwnerUserId
    FULL OUTER JOIN 
        Users u ON u.Id = COALESCE(b.UserId, p.OwnerUserId)
)
SELECT 
    c.DisplayName,
    c.BadgeCount,
    c.GoldBadges,
    c.SilverBadges,
    c.BronzeBadges,
    c.TotalPosts,
    c.Questions,
    c.Answers,
    c.ClosedPosts
FROM 
    CombinedStats c
ORDER BY 
    c.BadgeCount DESC, 
    c.TotalPosts DESC
LIMIT 10;
