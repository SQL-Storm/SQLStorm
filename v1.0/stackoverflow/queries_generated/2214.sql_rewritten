WITH UserPosts AS (
    SELECT 
        u.Id as UserId,
        u.DisplayName,
        COUNT(p.Id) AS TotalPosts,
        SUM(CASE WHEN p.PostTypeId = 2 THEN 1 ELSE 0 END) AS TotalAnswers,
        SUM(CASE WHEN p.PostTypeId = 1 THEN 1 ELSE 0 END) AS TotalQuestions
    FROM 
        Users u
    LEFT JOIN 
        Posts p ON u.Id = p.OwnerUserId
    GROUP BY 
        u.Id
),
RecentPostHistory AS (
    SELECT 
        ph.PostId,
        ph.UserDisplayName,
        ph.CreationDate,
        ph.PostHistoryTypeId,
        ROW_NUMBER() OVER (PARTITION BY ph.PostId ORDER BY ph.CreationDate DESC) AS rn
    FROM 
        PostHistory ph
    WHERE 
        ph.CreationDate > cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '30 days'
)
SELECT 
    up.UserId,
    up.DisplayName,
    up.TotalPosts,
    up.TotalAnswers,
    up.TotalQuestions,
    COUNT(DISTINCT rph.UserDisplayName) AS RecentEditors,
    AVG(DATEDIFF(COALESCE(MAX(rph.CreationDate), '1970-01-01'), COALESCE(MIN(rph.CreationDate), '1970-01-01'))) AS AvgEditDuration,
    STRING_AGG(DISTINCT CASE WHEN ph.PostHistoryTypeId = 10 THEN 'Closed' ELSE 'Other' END, ', ') AS RecentActions,
    CASE 
        WHEN up.TotalQuestions > up.TotalAnswers THEN 'More Questions'
        WHEN up.TotalAnswers > up.TotalQuestions THEN 'More Answers'
        ELSE 'Balanced'
    END AS PostDistribution
FROM 
    UserPosts up
LEFT JOIN 
    RecentPostHistory rph ON rph.PostId IN (
        SELECT 
            p.Id 
        FROM 
            Posts p 
        WHERE 
            p.OwnerUserId = up.UserId 
            AND p.PostTypeId IN (1, 2)
    )
LEFT JOIN 
    PostHistory ph ON ph.PostId = rph.PostId
WHERE 
    up.TotalPosts > 0
GROUP BY 
    up.UserId, up.DisplayName, up.TotalPosts, up.TotalAnswers, up.TotalQuestions;