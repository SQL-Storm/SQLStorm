
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.PostTypeId,
        p.Score,
        p.ViewCount,
        p.AnswerCount,
        p.CommentCount,
        u.DisplayName AS OwnerDisplayName,
        ROW_NUMBER() OVER (PARTITION BY p.PostTypeId ORDER BY p.Score DESC, p.CreationDate DESC) AS Rank,
        COUNT(c.Id) OVER (PARTITION BY p.Id) AS TotalComments
    FROM 
        Posts p
    JOIN 
        Users u ON p.OwnerUserId = u.Id
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    WHERE 
        p.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 year'
),
TopPosts AS (
    SELECT 
        PostId,
        Title,
        CreationDate,
        OwnerDisplayName,
        PostTypeId,
        Score,
        ViewCount,
        AnswerCount,
        TotalComments
    FROM 
        RankedPosts
    WHERE 
        Rank <= 10
),
PostHistoryDetail AS (
    SELECT 
        ph.PostId,
        p.Title,
        ph.CreationDate AS HistoryDate,
        pht.Name AS ChangeType,
        ph.UserDisplayName,
        ph.Comment
    FROM 
        PostHistory ph
    JOIN 
        PostHistoryTypes pht ON ph.PostHistoryTypeId = pht.Id
    JOIN 
        Posts p ON ph.PostId = p.Id
    WHERE 
        ph.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 year'
)
SELECT 
    tp.Title AS PostTitle,
    tp.CreationDate AS PostCreationDate,
    tp.OwnerDisplayName,
    tp.PostTypeId,
    tp.Score,
    tp.ViewCount,
    tp.AnswerCount,
    tp.TotalComments,
    ARRAY_AGG(DISTINCT pht.ChangeType) AS ChangeTypes,
    COUNT(DISTINCT ph.HistoryDate) AS TotalHistoryEntries
FROM 
    TopPosts tp
LEFT JOIN 
    PostHistoryDetail ph ON tp.PostId = ph.PostId
GROUP BY 
    tp.PostId, tp.Title, tp.CreationDate, tp.OwnerDisplayName, tp.PostTypeId, tp.Score, tp.ViewCount, tp.AnswerCount, tp.TotalComments
ORDER BY 
    tp.Score DESC, tp.CreationDate DESC;
