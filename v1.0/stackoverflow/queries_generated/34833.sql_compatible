
WITH RecursivePostCTE AS (
    SELECT 
        P.Id AS PostId,
        P.Title,
        P.OwnerUserId,
        P.AcceptedAnswerId,
        0 AS Level,
        P.CreationDate
    FROM 
        Posts P
    WHERE 
        P.ParentId IS NULL

    UNION ALL

    SELECT 
        P.Id,
        P.Title,
        P.OwnerUserId,
        P.AcceptedAnswerId,
        R.Level + 1,
        P.CreationDate
    FROM 
        Posts P
    INNER JOIN 
        RecursivePostCTE R ON P.ParentId = R.PostId
),
PostMetrics AS (
    SELECT 
        P.Id,
        COUNT(CASE WHEN V.VoteTypeId = 2 THEN 1 END) AS UpVotes,
        COUNT(CASE WHEN V.VoteTypeId = 3 THEN 1 END) AS DownVotes,
        COUNT(CASE WHEN C.Id IS NOT NULL THEN 1 END) AS CommentCount,
        COUNT(CASE WHEN PH.Id IS NOT NULL THEN 1 END) AS EditCount,
        P.OwnerUserId
    FROM 
        Posts P
    LEFT JOIN 
        Votes V ON P.Id = V.PostId
    LEFT JOIN 
        Comments C ON P.Id = C.PostId
    LEFT JOIN 
        PostHistory PH ON P.Id = PH.PostId 
    GROUP BY 
        P.Id, P.OwnerUserId
),
TopUsers AS (
    SELECT 
        U.Id,
        U.DisplayName,
        SUM(PO.ViewCount) AS TotalViews,
        SUM(PM.UpVotes - PM.DownVotes) AS Score,
        RANK() OVER (ORDER BY SUM(PO.ViewCount) DESC) AS UserRank
    FROM 
        Users U
    INNER JOIN 
        Posts PO ON U.Id = PO.OwnerUserId
    INNER JOIN 
        PostMetrics PM ON PO.Id = PM.Id
    WHERE 
        U.Reputation > 100
    GROUP BY 
        U.Id, U.DisplayName
    HAVING 
        COUNT(PO.Id) > 10
),
FinalReport AS (
    SELECT 
        U.DisplayName,
        U.TotalViews,
        U.Score,
        MAX(pm.CommentCount) AS MaxCommentCount,
        MAX(pm.EditCount) AS MaxEditCount
    FROM 
        TopUsers U
    JOIN 
        PostMetrics pm ON U.Id = pm.OwnerUserId
    GROUP BY 
        U.DisplayName, U.TotalViews, U.Score
)

SELECT 
    FR.DisplayName,
    FR.TotalViews,
    FR.Score,
    FR.MaxCommentCount,
    FR.MaxEditCount
FROM 
    FinalReport FR
WHERE 
    FR.Score > 0
ORDER BY 
    FR.Score DESC, FR.TotalViews DESC;
