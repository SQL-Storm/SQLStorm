
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.Score,
        COUNT(c.Id) AS CommentCount,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS UserPostRank
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId 
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    WHERE 
        p.CreationDate > DATE '2024-10-01' - INTERVAL '365 days'
    GROUP BY 
        p.Id, p.Title, p.Score, p.OwnerUserId, p.CreationDate
),
TopUsers AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        SUM(rp.Score + rp.UpVotes - rp.DownVotes) AS TotalEngagement
    FROM 
        Users u
    JOIN 
        RankedPosts rp ON u.Id = rp.OwnerUserId 
    WHERE 
        rp.UserPostRank <= 5
    GROUP BY 
        u.Id, u.DisplayName
),
UserRankings AS (
    SELECT 
        UserId,
        DisplayName,
        TotalEngagement,
        RANK() OVER (ORDER BY TotalEngagement DESC) AS EngagementRank
    FROM 
        TopUsers
)
SELECT 
    ur.DisplayName,
    ur.TotalEngagement,
    ur.EngagementRank,
    COUNT(b.Id) AS BadgeCount
FROM 
    UserRankings ur
LEFT JOIN 
    Badges b ON ur.UserId = b.UserId
GROUP BY 
    ur.UserId, ur.DisplayName, ur.TotalEngagement, ur.EngagementRank
ORDER BY 
    ur.EngagementRank;
