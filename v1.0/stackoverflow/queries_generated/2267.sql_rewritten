WITH UserActivity AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COUNT(DISTINCT p.Id) AS TotalPosts,
        SUM(CASE WHEN p.PostTypeId = 2 THEN 1 ELSE 0 END) AS TotalAnswers,
        SUM(CASE WHEN p.PostTypeId = 1 THEN 1 ELSE 0 END) AS TotalQuestions,
        AVG(COALESCE(v.Score, 0)) AS AverageVoteScore,
        ROW_NUMBER() OVER (PARTITION BY u.Id ORDER BY u.CreationDate DESC) AS UserRank
    FROM 
        Users u
    LEFT JOIN 
        Posts p ON u.Id = p.OwnerUserId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    WHERE 
        u.Reputation > 1000
    GROUP BY 
        u.Id, u.DisplayName
),
PostDetails AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.ViewCount,
        p.CreationDate,
        COALESCE(CAST(SUM(CASE WHEN c.Id IS NOT NULL THEN 1 ELSE 0 END) AS INT), 0) AS TotalComments,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.LastActivityDate DESC) AS RecentPostRank
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    WHERE 
        p.CreationDate >= (cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 year')
    GROUP BY 
        p.Id, p.Title, p.ViewCount, p.CreationDate
)
SELECT 
    ua.UserId,
    ua.DisplayName,
    ua.TotalPosts,
    ua.TotalQuestions,
    ua.TotalAnswers,
    ua.AverageVoteScore,
    pd.PostId,
    pd.Title,
    pd.ViewCount,
    pd.TotalComments
FROM 
    UserActivity ua
LEFT JOIN 
    PostDetails pd ON ua.UserId = pd.OwnerUserId
WHERE 
    ua.UserRank <= 10 AND pd.RecentPostRank <= 5
ORDER BY 
    ua.TotalPosts DESC, pd.ViewCount DESC
LIMIT 50;