WITH UserReputation AS (
    SELECT 
        u.Id AS UserId,
        u.Reputation,
        COUNT(b.Id) AS BadgeCount,
        SUM(CASE WHEN b.Class = 1 THEN 1 ELSE 0 END) AS GoldBadges,
        SUM(CASE WHEN b.Class = 2 THEN 1 ELSE 0 END) AS SilverBadges,
        SUM(CASE WHEN b.Class = 3 THEN 1 ELSE 0 END) AS BronzeBadges
    FROM 
        Users u
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    GROUP BY 
        u.Id, u.Reputation
),
PostStatistics AS (
    SELECT 
        p.OwnerUserId,
        COUNT(DISTINCT p.Id) AS PostCount,
        SUM(CASE WHEN p.Score > 0 THEN 1 ELSE 0 END) AS PositiveScorePosts,
        AVG(p.ViewCount) AS AvgViewCount,
        MAX(p.CreationDate) AS LastPostDate
    FROM 
        Posts p
    GROUP BY 
        p.OwnerUserId
),
VoteCounts AS (
    SELECT 
        v.PostId,
        COUNT(CASE WHEN v.VoteTypeId = 2 THEN 1 END) AS UpVotes,
        COUNT(CASE WHEN v.VoteTypeId = 3 THEN 1 END) AS DownVotes
    FROM 
        Votes v
    GROUP BY 
        v.PostId
),
ClosedPosts AS (
    SELECT 
        ph.UserId AS CloserUserId,
        COUNT(ph.Id) AS CloseCount,
        MAX(ph.CreationDate) AS LastCloseDate
    FROM 
        PostHistory ph
    WHERE 
        ph.PostHistoryTypeId = 10 
    GROUP BY 
        ph.UserId
)
SELECT 
    u.DisplayName,
    COALESCE(ur.BadgeCount, 0) AS TotalBadges,
    COALESCE(ps.PostCount, 0) AS TotalPosts,
    COALESCE(v.UpVotes, 0) AS TotalUpVotes,
    COALESCE(v.DownVotes, 0) AS TotalDownVotes,
    cr.CloseCount AS TotalClosedPosts,
    DENSE_RANK() OVER (ORDER BY COALESCE(u.Reputation, 0) DESC) AS ReputationRank,
    CASE 
        WHEN u.Location IS NULL THEN 'Location not specified'
        ELSE u.Location 
    END AS UserLocation,
    CASE 
        WHEN ps.LastPostDate IS NOT NULL THEN 
            DATEDIFF(cast('2024-10-01 12:34:56' as timestamp), ps.LastPostDate)
        ELSE 
            NULL 
    END AS DaysSinceLastPost
FROM 
    Users u
LEFT JOIN 
    UserReputation ur ON u.Id = ur.UserId
LEFT JOIN 
    PostStatistics ps ON u.Id = ps.OwnerUserId
LEFT JOIN 
    VoteCounts v ON v.PostId IN (SELECT Id FROM Posts WHERE OwnerUserId = u.Id)
LEFT JOIN 
    ClosedPosts cr ON u.Id = cr.CloserUserId
WHERE 
    (ur.Reputation > 500 OR cr.CloseCount > 0)
    AND (SELECT COUNT(*) FROM Posts WHERE OwnerUserId = u.Id) > 5
ORDER BY 
    TotalBadges DESC, TotalPosts DESC, TotalUpVotes DESC
LIMIT 100 OFFSET 0;