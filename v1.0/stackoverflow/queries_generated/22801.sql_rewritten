WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Score,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS rn,
        COUNT(v.UserId) FILTER (WHERE v.VoteTypeId = 2) OVER (PARTITION BY p.Id) AS Upvotes,
        COUNT(v.UserId) FILTER (WHERE v.VoteTypeId = 3) OVER (PARTITION BY p.Id) AS Downvotes
    FROM 
        Posts p
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    WHERE 
        p.CreationDate >= cast('2024-10-01' as date) - INTERVAL '30 days'
),
PostHistoricalData AS (
    SELECT 
        ph.PostId,
        ph.Comment,
        ph.CreationDate,
        ph.PostHistoryTypeId,
        MAX(ph.CreationDate) OVER (PARTITION BY ph.PostId, ph.PostHistoryTypeId) AS LastActionDate,
        pt.Name AS HistoryType
    FROM 
        PostHistory ph
    JOIN 
        PostHistoryTypes pt ON ph.PostHistoryTypeId = pt.Id
    WHERE 
        ph.CreationDate >= cast('2024-10-01' as date) - INTERVAL '30 days'
),
ActiveUsers AS (
    SELECT 
        u.Id,
        u.DisplayName,
        SUM(p.ViewCount) AS TotalViews,
        SUM((CASE WHEN p.Score > 0 THEN p.Score ELSE 0 END)) AS PositiveScoreContributions
    FROM 
        Users u
    JOIN 
        Posts p ON u.Id = p.OwnerUserId
    WHERE 
        u.CreationDate >= '2023-01-01'
    GROUP BY 
        u.Id
)
SELECT 
    p.Title,
    p.CreationDate,
    p.Score,
    html_upvotes.Upvotes,
    html_downvotes.Downvotes,
    ph.Comment AS RecentHistoryComment,
    ph.LastActionDate,
    au.DisplayName AS ActiveUser,
    au.TotalViews,
    au.PositiveScoreContributions
FROM 
    RankedPosts p
LEFT JOIN 
    PostHistoricalData ph ON ph.PostId = p.PostId AND ph.LastActionDate = p.CreationDate
LEFT JOIN 
    ActiveUsers au ON au.Id = p.OwnerUserId
LEFT JOIN 
    (SELECT PostId, SUM(Upvotes) AS Upvotes FROM RankedPosts GROUP BY PostId) html_upvotes ON html_upvotes.PostId = p.PostId
LEFT JOIN 
    (SELECT PostId, SUM(Downvotes) AS Downvotes FROM RankedPosts GROUP BY PostId) html_downvotes ON html_downvotes.PostId = p.PostId
WHERE 
    p.rn = 1 
    AND (p.Score > 0 OR ph.Comment IS NOT NULL) 
ORDER BY 
    p.Score DESC, p.CreationDate DESC;