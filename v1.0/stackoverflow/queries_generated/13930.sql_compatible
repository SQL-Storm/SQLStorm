
WITH PostActivity AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.LastActivityDate,
        p.Score,
        p.ViewCount,
        COUNT(c.Id) AS CommentCount,
        COALESCE(SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END), 0) AS UpVotes,
        COALESCE(SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END), 0) AS DownVotes,
        STRING_AGG(t.TagName, ', ') AS Tags
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    LEFT JOIN 
        UNNEST(string_to_array(p.Tags, '><')) AS tagname ON TRUE
    LEFT JOIN 
        Tags t ON t.TagName = TRIM(BOTH '<>' FROM tagname)
    GROUP BY 
        p.Id, p.Title, p.CreationDate, p.LastActivityDate, p.Score, p.ViewCount
),
RankedPosts AS (
    SELECT 
        PostId,
        Title,
        CreationDate,
        LastActivityDate,
        Score,
        ViewCount,
        CommentCount,
        UpVotes,
        DownVotes,
        Tags,
        ROW_NUMBER() OVER (ORDER BY LastActivityDate DESC) AS Rank
    FROM 
        PostActivity
)

SELECT 
    *
FROM 
    RankedPosts
WHERE 
    Rank <= 100 
ORDER BY 
    LastActivityDate DESC;
