
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Score,
        p.ViewCount,
        COUNT(a.Id) AS AnswerCount,
        COUNT(c.Id) AS CommentCount,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC) AS Rank,
        u.DisplayName AS OwnerDisplayName,
        u.Reputation AS OwnerReputation
    FROM 
        Posts p
    LEFT JOIN 
        Posts a ON p.Id = a.ParentId
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    JOIN 
        Users u ON p.OwnerUserId = u.Id
    WHERE 
        p.PostTypeId = 1 
    GROUP BY 
        p.Id, p.Title, p.CreationDate, p.Score, p.ViewCount, u.DisplayName, u.Reputation
),
TopRankedPosts AS (
    SELECT 
        PostId,
        Title,
        CreationDate,
        Score,
        ViewCount,
        AnswerCount,
        CommentCount,
        OwnerDisplayName,
        OwnerReputation
    FROM 
        RankedPosts
    WHERE 
        Rank <= 5
)
SELECT 
    trp.*,
    pt.Name AS PostType,
    STRING_AGG(DISTINCT t.TagName, ',') AS Tags
FROM 
    TopRankedPosts trp
LEFT JOIN 
    PostsTags pt ON trp.PostId = pt.PostId
LEFT JOIN 
    Tags t ON pt.TagId = t.Id
JOIN 
    PostHistory ph ON trp.PostId = ph.PostId
WHERE 
    ph.CreationDate >= DATE_SUB('2024-10-01 12:34:56', INTERVAL 30 DAY) 
GROUP BY 
    trp.PostId, trp.Title, trp.CreationDate, trp.Score, trp.ViewCount, trp.AnswerCount, trp.CommentCount, trp.OwnerDisplayName, trp.OwnerReputation, pt.Name
ORDER BY 
    trp.Score DESC, trp.ViewCount DESC;
