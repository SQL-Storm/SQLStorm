
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.ViewCount,
        p.Score,
        p.CreationDate,
        p.OwnerUserId,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC, p.ViewCount DESC) AS Rank
    FROM 
        Posts p
    WHERE 
        p.CreationDate > DATEADD(year, -1, CURRENT_TIMESTAMP)
),
UserActivity AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COALESCE(SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) - SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END), 0) AS ScoreChanged,
        COUNT(c.Id) AS CommentCount,
        MAX(c.CreationDate) AS LastCommentDate
    FROM 
        Users u
    LEFT JOIN 
        Votes v ON v.UserId = u.Id
    LEFT JOIN 
        Comments c ON c.UserId = u.Id
    WHERE 
        u.Reputation > 1000
    GROUP BY 
        u.Id, u.DisplayName
),
PostClosures AS (
    SELECT 
        ph.PostId,
        COUNT(CASE WHEN ph.PostHistoryTypeId IN (10, 12) THEN 1 END) AS CloseCount,
        COUNT(CASE WHEN ph.PostHistoryTypeId = 11 THEN 1 END) AS ReopenCount,
        MAX(ph.CreationDate) AS LastChangeDate
    FROM 
        PostHistory ph
    GROUP BY 
        ph.PostId
)
SELECT 
    up.DisplayName,
    rp.Title,
    rp.Score,
    rp.ViewCount,
    COALESCE(pc.CloseCount, 0) AS CloseCount,
    COALESCE(pc.ReopenCount, 0) AS ReopenCount,
    ua.ScoreChanged,
    ua.CommentCount,
    ua.LastCommentDate,
    DATEDIFF(day, rp.CreationDate, CURRENT_TIMESTAMP) AS DaysSinceCreation
FROM 
    RankedPosts rp
JOIN 
    Users up ON rp.OwnerUserId = up.Id
LEFT JOIN 
    UserActivity ua ON up.Id = ua.UserId
LEFT JOIN 
    PostClosures pc ON rp.PostId = pc.PostId
WHERE 
    rp.Rank = 1
    AND rp.Score > 0
    AND (pc.CloseCount IS NULL OR pc.CloseCount < 3) 
ORDER BY 
    DaysSinceCreation ASC, 
    rp.Score DESC,
    rp.ViewCount DESC;
