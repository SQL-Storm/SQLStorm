
WITH RecursivePostHierarchy AS (
    SELECT
        p.Id AS PostId,
        p.Title,
        p.OwnerUserId,
        p.PostTypeId,
        0 AS Level,
        p.CreationDate AS PostDate,
        CONCAT(p.Title, ' (Level 0)') AS FullTitle
    FROM
        Posts p
    WHERE
        p.ParentId IS NULL
    UNION ALL
    SELECT
        p.Id,
        p.Title,
        p.OwnerUserId,
        p.PostTypeId,
        r.Level + 1,
        p.CreationDate,
        CONCAT(r.FullTitle, ' -> ', p.Title, ' (Level ', (r.Level + 1), ')') AS FullTitle
    FROM
        Posts p
    INNER JOIN
        RecursivePostHierarchy r ON p.ParentId = r.PostId
),
UserReputation AS (
    SELECT
        u.Id AS UserId,
        u.DisplayName,
        u.Reputation,
        COUNT(b.Id) AS BadgeCount,
        SUM(CASE WHEN b.Class = 1 THEN 1 ELSE 0 END) AS GoldBadges,
        SUM(CASE WHEN b.Class = 2 THEN 1 ELSE 0 END) AS SilverBadges,
        SUM(CASE WHEN b.Class = 3 THEN 1 ELSE 0 END) AS BronzeBadges
    FROM
        Users u
    LEFT JOIN
        Badges b ON u.Id = b.UserId
    GROUP BY
        u.Id, u.DisplayName, u.Reputation
),
RecentPosts AS (
    SELECT
        p.Id AS PostId,
        p.Title,
        p.OwnerUserId,
        p.CreationDate,
        p.LastActivityDate
    FROM
        Posts p
    WHERE
        p.CreationDate > (CAST('2024-10-01 12:34:56' AS timestamp) - INTERVAL '30 days')
),
PostVoteStatistics AS (
    SELECT
        p.Id AS PostId,
        COUNT(CASE WHEN v.VoteTypeId = 2 THEN 1 END) AS UpVoteCount,
        COUNT(CASE WHEN v.VoteTypeId = 3 THEN 1 END) AS DownVoteCount,
        COUNT(v.Id) AS TotalVotes
    FROM
        Posts p
    LEFT JOIN
        Votes v ON p.Id = v.PostId
    GROUP BY
        p.Id
)
SELECT
    rp.FullTitle,
    ur.DisplayName,
    ur.Reputation,
    ur.BadgeCount,
    rpo.PostId,
    rpo.Title AS RecentPostTitle,
    pvs.UpVoteCount,
    pvs.DownVoteCount,
    pvs.TotalVotes,
    CASE 
        WHEN pvs.TotalVotes = 0 THEN 'No Votes Yet'
        ELSE ROUND((pvs.UpVoteCount * 100.0) / NULLIF(pvs.TotalVotes, 0), 2)
    END AS UpVotePercentage
FROM
    RecursivePostHierarchy rp
JOIN
    RecentPosts rpo ON rp.PostId = rpo.PostId
JOIN
    Users u ON u.Id = rp.OwnerUserId
JOIN
    UserReputation ur ON ur.UserId = rp.OwnerUserId
JOIN
    PostVoteStatistics pvs ON pvs.PostId = rp.PostId
WHERE
    rp.Level <= 3
ORDER BY
    ur.Reputation DESC, rp.PostId;
