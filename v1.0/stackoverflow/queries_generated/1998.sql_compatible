
WITH RankedPosts AS (
    SELECT 
        p.Id,
        p.Title,
        p.CreationDate,
        p.Score,
        p.ViewCount,
        p.AnswerCount,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS PostRank
    FROM Posts p
    WHERE p.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 year'
),
UserActivity AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COALESCE(SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END), 0) AS UpVotes,
        COALESCE(SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END), 0) AS DownVotes,
        COALESCE(SUM(c.Score), 0) AS CommentScore
    FROM Users u
    LEFT JOIN Votes v ON u.Id = v.UserId
    LEFT JOIN Comments c ON u.Id = c.UserId
    GROUP BY u.Id, u.DisplayName
),
TopBadges AS (
    SELECT 
        b.UserId,
        COUNT(*) AS BadgeCount,
        MAX(b.Class) AS MaxBadgeClass
    FROM Badges b 
    WHERE b.Date >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 year'
    GROUP BY b.UserId
)
SELECT 
    u.DisplayName,
    u.Reputation,
    ua.UpVotes,
    ua.DownVotes,
    ua.CommentScore,
    tb.BadgeCount,
    tb.MaxBadgeClass,
    rp.Title,
    rp.CreationDate,
    rp.Score,
    rp.ViewCount
FROM Users u
JOIN UserActivity ua ON u.Id = ua.UserId
LEFT JOIN TopBadges tb ON u.Id = tb.UserId
LEFT JOIN RankedPosts rp ON u.Id = rp.OwnerUserId
WHERE ua.UpVotes > ua.DownVotes 
  AND tb.BadgeCount >= 3 
  AND rp.PostRank <= 5
ORDER BY u.Reputation DESC, rp.Score DESC
LIMIT 100;
