
WITH UserActivity AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COUNT(DISTINCT p.Id) AS PostCount,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes,
        AVG(COALESCE(p.Score, 0)) AS AvgScore,
        ROW_NUMBER() OVER (PARTITION BY u.Id ORDER BY SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) DESC) AS UpvoteRank
    FROM Users u
    LEFT JOIN Posts p ON p.OwnerUserId = u.Id
    LEFT JOIN Votes v ON v.PostId = p.Id
    WHERE u.Reputation > 1000
    GROUP BY u.Id, u.DisplayName
),
RecentPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.ViewCount,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS RecentPostRank
    FROM Posts p
    WHERE p.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '30 days'
),
PostStatistics AS (
    SELECT 
        p.Id AS PostId,
        COUNT(c.Id) AS CommentCount,
        SUM(CASE WHEN ph.PostHistoryTypeId = 10 THEN 1 ELSE 0 END) AS CloseCounts,
        AVG(p.ViewCount) AS AvgViewCount
    FROM Posts p
    LEFT JOIN Comments c ON c.PostId = p.Id
    LEFT JOIN PostHistory ph ON ph.PostId = p.Id
    GROUP BY p.Id
)
SELECT
    ua.UserId,
    ua.DisplayName,
    ua.PostCount AS TotalPosts,
    ua.UpVotes AS TotalUpVotes,
    ua.DownVotes AS TotalDownVotes,
    ua.AvgScore AS AverageScore,
    rp.PostId,
    rp.Title AS RecentPostTitle,
    rp.CreationDate AS RecentPostDate,
    ps.CommentCount AS CommentsOnPost,
    ps.CloseCounts AS TotalCloseReasons,
    ps.AvgViewCount AS AveragePostViewCount
FROM UserActivity ua
INNER JOIN RecentPosts rp ON ua.UserId = rp.OwnerUserId AND rp.RecentPostRank = 1
LEFT JOIN PostStatistics ps ON rp.PostId = ps.PostId
WHERE ua.UpvoteRank <= 5
ORDER BY ua.UpVotes DESC, ps.AvgViewCount DESC;
