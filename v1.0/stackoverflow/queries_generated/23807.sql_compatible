
WITH RankedPosts AS (
    SELECT
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.ViewCount,
        COUNT(c.Id) AS CommentCount,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS RankByUser,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes
    FROM Posts p
    LEFT JOIN Comments c ON p.Id = c.PostId
    LEFT JOIN Votes v ON p.Id = v.PostId
    WHERE
        p.CreationDate > TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 year'
    GROUP BY p.Id, p.Title, p.CreationDate, p.ViewCount, p.OwnerUserId
),

UserStatistics AS (
    SELECT
        u.Id AS UserId,
        u.DisplayName,
        u.Reputation,
        u.Views,
        COALESCE(b.BadgeCount, 0) AS BadgeCount
    FROM Users u
    LEFT JOIN (
        SELECT
            UserId,
            COUNT(*) AS BadgeCount
        FROM Badges
        GROUP BY UserId
    ) b ON u.Id = b.UserId
),

ClosedPosts AS (
    SELECT
        p.Id AS PostId,
        ph.CreationDate AS ClosedDate,
        ph.UserDisplayName AS ClosedBy,
        ph.Comment AS CloseReason
    FROM Posts p
    INNER JOIN PostHistory ph ON p.Id = ph.PostId
    WHERE ph.PostHistoryTypeId = 10
),

PostCommentDetails AS (
    SELECT
        rp.PostId,
        rp.Title,
        rp.CommentCount,
        COALESCE(cp.ClosedDate, 'No Closure') AS ClosureInfo,
        COALESCE(cp.ClosedBy, 'Not Closed') AS ClosedBy,
        COALESCE(cp.CloseReason, 'N/A') AS CloseReasonDetails,
        us.UserId,
        us.DisplayName AS OwnerDisplayName,
        us.Reputation,
        us.Views,
        us.BadgeCount
    FROM RankedPosts rp
    JOIN Users us ON rp.RankByUser = 1 AND us.Id = rp.PostId
    LEFT JOIN ClosedPosts cp ON rp.PostId = cp.PostId
    WHERE rp.CommentCount > 0 AND rp.UpVotes - rp.DownVotes > 10
)

SELECT
    pcd.Title,
    pcd.CommentCount,
    pcd.ClosureInfo,
    pcd.ClosedBy,
    pcd.CloseReasonDetails,
    pcd.OwnerDisplayName,
    pcd.Reputation,
    pcd.Views,
    CASE 
        WHEN pcd.BadgeCount > 5 THEN 'High Achiever'
        WHEN pcd.BadgeCount BETWEEN 1 AND 5 THEN 'Contributor'
        ELSE 'New User'
    END AS UserCategory
FROM PostCommentDetails pcd
ORDER BY pcd.CommentCount DESC, pcd.ClosureInfo DESC;
