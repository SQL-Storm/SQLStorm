
WITH RecursivePostHierarchy AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.OwnerUserId,
        0 AS Level
    FROM 
        Posts p
    WHERE 
        p.PostTypeId = 1  
    UNION ALL
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.OwnerUserId,
        rph.Level + 1
    FROM 
        Posts p
    JOIN 
        RecursivePostHierarchy rph ON p.ParentId = rph.PostId
),
UserStats AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COUNT(b.Id) AS BadgeCount,
        SUM(CASE 
            WHEN v.VoteTypeId = 2 THEN 1 
            ELSE 0 END) AS UpvotesCount,
        SUM(CASE 
            WHEN v.VoteTypeId = 3 THEN 1 
            ELSE 0 END) AS DownvotesCount
    FROM 
        Users u
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    LEFT JOIN 
        Votes v ON u.Id = v.UserId
    GROUP BY 
        u.Id, u.DisplayName
),
PostActivity AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        COALESCE(SUM(CASE 
            WHEN v.VoteTypeId = 2 THEN 1 
            ELSE 0 END), 0) AS Upvotes,
        COALESCE(SUM(CASE 
            WHEN v.VoteTypeId = 3 THEN 1 
            ELSE 0 END), 0) AS Downvotes,
        COUNT(c.Id) AS CommentCount,
        COUNT(DISTINCT ph.Id) AS EditCount
    FROM 
        Posts p
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        PostHistory ph ON p.Id = ph.PostId
    GROUP BY 
        p.Id, p.Title, p.CreationDate
),
AggregatedUserStats AS (
    SELECT 
        us.UserId,
        us.DisplayName,
        SUM(pa.Upvotes) AS TotalUpvotes,
        SUM(pa.Downvotes) AS TotalDownvotes,
        SUM(pa.CommentCount) AS TotalComments,
        SUM(pa.EditCount) AS TotalEdits
    FROM 
        UserStats us
    JOIN 
        Posts p ON us.UserId = p.OwnerUserId
    JOIN 
        PostActivity pa ON p.Id = pa.PostId
    GROUP BY 
        us.UserId, us.DisplayName
)
SELECT 
    u.UserId,
    u.DisplayName,
    COALESCE(u.BadgeCount, 0) AS BadgeCount,
    a.TotalUpvotes,
    a.TotalDownvotes,
    a.TotalComments,
    a.TotalEdits,
    COUNT(DISTINCT rph.PostId) AS NumberOfQuestionsAnswered
FROM 
    UserStats u
LEFT JOIN 
    AggregatedUserStats a ON u.UserId = a.UserId
LEFT JOIN 
    RecursivePostHierarchy rph ON u.UserId = rph.OwnerUserId
GROUP BY 
    u.UserId, u.DisplayName, a.TotalUpvotes, a.TotalDownvotes, a.TotalComments, a.TotalEdits
ORDER BY 
    BadgeCount DESC, TotalUpvotes DESC;
