
WITH UserStats AS (
    SELECT 
        u.Id AS UserId, 
        u.DisplayName, 
        u.Reputation,
        COUNT(DISTINCT p.Id) AS TotalPosts, 
        COUNT(DISTINCT c.Id) AS TotalComments,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS TotalUpvotes,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS TotalDownvotes
    FROM 
        Users u
    LEFT JOIN 
        Posts p ON p.OwnerUserId = u.Id
    LEFT JOIN 
        Comments c ON c.UserId = u.Id
    LEFT JOIN 
        Votes v ON v.UserId = u.Id
    GROUP BY 
        u.Id, u.DisplayName, u.Reputation
),
PopularTags AS (
    SELECT 
        t.TagName,
        COUNT(p.Id) AS PostCount
    FROM 
        Tags t
    JOIN 
        Posts p ON p.Tags LIKE CONCAT('%', t.TagName, '%')
    GROUP BY 
        t.TagName
    ORDER BY 
        PostCount DESC
    LIMIT 10
),
RecentPostHistory AS (
    SELECT 
        ph.PostId,
        ph.UserId,
        ph.PostHistoryTypeId,
        ph.CreationDate,
        ROW_NUMBER() OVER (PARTITION BY ph.PostId ORDER BY ph.CreationDate DESC) AS rn
    FROM 
        PostHistory ph
    WHERE 
        ph.CreationDate > DATEADD(DAY, -30, CAST('2024-10-01' AS DATE))
)
SELECT 
    us.UserId,
    us.DisplayName,
    us.Reputation,
    us.TotalPosts,
    us.TotalComments,
    us.TotalUpvotes,
    us.TotalDownvotes,
    COALESCE(rt.TagCount, 0) AS TagPostCount,
    COALESCE(rph.UserId, 'No recent activity') AS RecentUserId,
    COALESCE(rph.PostHistoryTypeId, 'None') AS RecentAction
FROM 
    UserStats us
LEFT JOIN 
    (SELECT TagName, SUM(PostCount) AS TagCount FROM PopularTags GROUP BY TagName) rt ON rt.TagName = ANY(STRING_TO_ARRAY(us.DisplayName, ' ')) 
LEFT JOIN 
    RecentPostHistory rph ON rph.UserId = us.UserId AND rph.rn = 1
WHERE 
    us.Reputation > 1000
ORDER BY 
    us.Reputation DESC,
    us.TotalPosts DESC;
