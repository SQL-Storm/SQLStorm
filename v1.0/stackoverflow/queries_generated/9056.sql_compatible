
WITH UserScores AS (
    SELECT u.Id AS UserId,
           u.DisplayName,
           SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes,
           SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes,
           SUM(CASE WHEN b.Class = 1 THEN 1 ELSE 0 END) AS GoldBadges,
           SUM(CASE WHEN b.Class = 2 THEN 1 ELSE 0 END) AS SilverBadges,
           SUM(CASE WHEN b.Class = 3 THEN 1 ELSE 0 END) AS BronzeBadges,
           COUNT(DISTINCT p.Id) AS PostCount,
           COUNT(DISTINCT c.Id) AS CommentCount
    FROM Users u
    LEFT JOIN Votes v ON u.Id = v.UserId
    LEFT JOIN Posts p ON u.Id = p.OwnerUserId
    LEFT JOIN Comments c ON p.Id = c.PostId
    LEFT JOIN Badges b ON u.Id = b.UserId
    GROUP BY u.Id, u.DisplayName
),
PostDetails AS (
    SELECT p.Id AS PostId,
           p.Title,
           p.CreationDate,
           p.Score,
           p.ViewCount,
           COUNT(c.Id) AS CommentCount,
           SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS TotalUpVotes,
           SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS TotalDownVotes
    FROM Posts p
    LEFT JOIN Comments c ON p.Id = c.PostId
    LEFT JOIN Votes v ON p.Id = v.PostId
    GROUP BY p.Id, p.Title, p.CreationDate, p.Score, p.ViewCount
),
RankedPosts AS (
    SELECT pd.PostId,
           pd.Title,
           pd.CreationDate,
           pd.Score,
           pd.ViewCount,
           pd.CommentCount,
           pd.TotalUpVotes,
           pd.TotalDownVotes,
           ROW_NUMBER() OVER (ORDER BY pd.Score DESC, pd.ViewCount DESC) AS Rank
    FROM PostDetails pd
)
SELECT u.DisplayName,
       us.UpVotes,
       us.DownVotes,
       us.GoldBadges,
       us.SilverBadges,
       us.BronzeBadges,
       rp.Title,
       rp.CreationDate,
       rp.Score,
       rp.ViewCount,
       rp.CommentCount,
       rp.Rank
FROM UserScores us
JOIN RankedPosts rp ON us.UserId = rp.PostId
WHERE us.PostCount > 5
ORDER BY us.UpVotes DESC, rp.Rank;
