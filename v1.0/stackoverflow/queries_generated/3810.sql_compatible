
WITH UserPostStats AS (
    SELECT 
        u.Id AS UserId, 
        u.DisplayName,
        COUNT(p.Id) AS PostCount, 
        SUM(CASE WHEN p.Score > 0 THEN 1 ELSE 0 END) AS PositivePosts,
        SUM(CASE WHEN p.Score < 0 THEN 1 ELSE 0 END) AS NegativePosts,
        AVG(p.Score) AS AvgScore,
        ROW_NUMBER() OVER (PARTITION BY u.Id ORDER BY SUM(p.Score) DESC) AS Rank
    FROM 
        Users u
    LEFT JOIN 
        Posts p ON u.Id = p.OwnerUserId
    GROUP BY 
        u.Id, u.DisplayName
),
TopUsers AS (
    SELECT 
        UserId, 
        DisplayName, 
        PostCount, 
        PositivePosts, 
        NegativePosts, 
        AvgScore
    FROM 
        UserPostStats
    WHERE 
        PostCount > 10 AND AvgScore IS NOT NULL
    ORDER BY 
        AvgScore DESC
    LIMIT 10
),
HighlightedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Score,
        COALESCE(c.CommentCount, 0) AS CommentCount,
        ARRAY_AGG(DISTINCT t.TagName) AS Tags
    FROM 
        Posts p
    LEFT JOIN 
        (SELECT PostId, COUNT(*) AS CommentCount 
         FROM Comments 
         GROUP BY PostId) c ON p.Id = c.PostId
    LEFT JOIN 
        (SELECT DISTINCT 
            UNNEST(STRING_TO_ARRAY(Tags, '>')) AS TagName, 
            p.Id 
         FROM 
            Posts p) t ON p.Id = t.Id
    WHERE 
        p.Score > 0
    GROUP BY 
        p.Id, p.Title, p.CreationDate, p.Score
    ORDER BY 
        p.CreationDate DESC
    LIMIT 5
)
SELECT 
    u.UserId,
    u.DisplayName,
    up.PostCount,
    up.PositivePosts,
    up.NegativePosts,
    up.AvgScore,
    hp.PostId,
    hp.Title,
    hp.CreationDate,
    hp.Score,
    hp.Tags
FROM 
    TopUsers u
JOIN 
    UserPostStats up ON u.UserId = up.UserId
LEFT JOIN 
    HighlightedPosts hp ON up.UserId = (SELECT OwnerUserId FROM Posts WHERE Id = hp.PostId)
ORDER BY 
    up.AvgScore DESC, hp.CreationDate DESC;
