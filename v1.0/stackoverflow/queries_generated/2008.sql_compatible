
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Score,
        p.ViewCount,
        p.AnswerCount,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC) AS Rank,
        COUNT(DISTINCT c.Id) OVER (PARTITION BY p.Id) AS CommentCount
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    WHERE 
        p.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 year'
),
BadgedUsers AS (
    SELECT 
        u.Id AS UserId,
        COUNT(b.Id) AS BadgeCount,
        MAX(b.Date) AS LastBadgeDate
    FROM 
        Users u
    JOIN 
        Badges b ON u.Id = b.UserId
    WHERE 
        b.Class IN (1, 2) 
    GROUP BY 
        u.Id
)
SELECT 
    r.PostId,
    r.Title,
    r.CreationDate,
    r.Score,
    r.ViewCount,
    r.AnswerCount,
    r.CommentCount,
    bu.BadgeCount,
    bu.LastBadgeDate,
    COALESCE(u.DisplayName, 'Anonymous') AS OwnerDisplayName
FROM 
    RankedPosts r
LEFT JOIN 
    Users u ON u.Id = r.OwnerUserId
LEFT JOIN 
    BadgedUsers bu ON u.Id = bu.UserId
WHERE 
    r.Rank <= 3
ORDER BY 
    r.Score DESC, r.ViewCount DESC
LIMIT 50;
