WITH TagCounts AS (
    SELECT 
        unnest(string_to_array(trim(both '<>' FROM Tags), '><')) AS Tag,
        COUNT(*) AS PostCount
    FROM 
        Posts
    WHERE 
        PostTypeId = 1 
    GROUP BY 
        Tag
),
PopularTags AS (
    SELECT 
        Tag,
        PostCount,
        ROW_NUMBER() OVER (ORDER BY PostCount DESC) AS Rank
    FROM 
        TagCounts
    WHERE 
        PostCount > 1 
),
UserBadgeCounts AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        SUM(CASE WHEN b.Class = 1 THEN 1 ELSE 0 END) AS GoldBadges,
        SUM(CASE WHEN b.Class = 2 THEN 1 ELSE 0 END) AS SilverBadges,
        SUM(CASE WHEN b.Class = 3 THEN 1 ELSE 0 END) AS BronzeBadges,
        COUNT(b.Id) AS TotalBadges
    FROM 
        Users u
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    GROUP BY 
        u.Id
),
ActiveQuestions AS (
    SELECT 
        p.Id,
        p.Title,
        p.CreationDate,
        u.DisplayName AS OwnerDisplayName,
        COUNT(c.Id) AS CommentCount,
        COUNT(DISTINCT v.Id) AS VoteCount,
        STRING_AGG(DISTINCT pt.Name, ', ') AS PostTypes
    FROM 
        Posts p
    LEFT JOIN 
        Users u ON p.OwnerUserId = u.Id
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    JOIN 
        PostTypes pt ON p.PostTypeId = pt.Id
    WHERE 
        p.PostTypeId = 1 
    GROUP BY 
        p.Id, p.Title, p.CreationDate, u.DisplayName
),
EnhancedReport AS (
    SELECT 
        aq.Id AS QuestionId,
        aq.Title,
        aq.CreationDate,
        aq.OwnerDisplayName,
        aq.CommentCount,
        aq.VoteCount,
        pt.Tag AS PopularTag,
        ubc.UserId,
        ubc.DisplayName AS BadgeOwner,
        ubc.GoldBadges,
        ubc.SilverBadges,
        ubc.BronzeBadges,
        ubc.TotalBadges
    FROM 
        ActiveQuestions aq
    LEFT JOIN 
        PopularTags pt ON aq.VoteCount > 5 
    LEFT JOIN 
        UserBadgeCounts ubc ON aq.OwnerDisplayName = ubc.DisplayName
)
SELECT 
    QuestionId,
    Title,
    CreationDate,
    OwnerDisplayName,
    CommentCount,
    VoteCount,
    PopularTag,
    BadgeOwner,
    GoldBadges,
    SilverBadges,
    BronzeBadges,
    TotalBadges
FROM 
    EnhancedReport
ORDER BY 
    VoteCount DESC, CreationDate DESC;