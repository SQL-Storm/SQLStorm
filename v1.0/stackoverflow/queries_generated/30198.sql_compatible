
WITH RecursivePostHierarchy AS (
    SELECT Id, Title, ParentId, PostTypeId, CreationDate, 0 AS Level
    FROM Posts
    WHERE ParentId IS NULL

    UNION ALL

    SELECT p.Id, p.Title, p.ParentId, p.PostTypeId, p.CreationDate, ph.Level + 1
    FROM Posts p
    INNER JOIN RecursivePostHierarchy ph ON p.ParentId = ph.Id
),
PostMetrics AS (
    SELECT 
        p.Id,
        p.Title,
        COUNT(DISTINCT c.Id) AS CommentCount,
        COUNT(DISTINCT v.Id) AS VoteCount,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVoteCount,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVoteCount,
        SUM(CASE WHEN b.Id IS NOT NULL THEN 1 ELSE 0 END) AS BadgeCount
    FROM Posts p
    LEFT JOIN Comments c ON p.Id = c.PostId
    LEFT JOIN Votes v ON p.Id = v.PostId
    LEFT JOIN Badges b ON p.OwnerUserId = b.UserId
    WHERE p.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 YEAR'
    GROUP BY p.Id, p.Title
),
PostHistorySummary AS (
    SELECT 
        ph.PostId,
        COUNT(DISTINCT ph.Id) AS RevisionCount,
        MAX(ph.CreationDate) AS LastEditedDate,
        STRING_AGG(DISTINCT pht.Name, ', ') AS HistoryTypes
    FROM PostHistory ph
    JOIN PostHistoryTypes pht ON ph.PostHistoryTypeId = pht.Id
    GROUP BY ph.PostId
)
SELECT 
    p.Id AS PostId,
    p.Title,
    COALESCE(pm.CommentCount, 0) AS CommentCount,
    COALESCE(pm.VoteCount, 0) AS VoteCount,
    COALESCE(pm.UpVoteCount, 0) AS UpVoteCount,
    COALESCE(pm.DownVoteCount, 0) AS DownVoteCount,
    COALESCE(badgeCount, 0) AS BadgeCount,
    COALESCE(phs.RevisionCount, 0) AS RevisionCount,
    phs.LastEditedDate,
    phs.HistoryTypes,
    json_build_object(
        'viewCount', p.ViewCount,
        'creationDate', p.CreationDate
    ) AS PostDetails
FROM Posts p
LEFT JOIN PostMetrics pm ON p.Id = pm.Id
LEFT JOIN PostHistorySummary phs ON p.Id = phs.PostId
LEFT JOIN (
    SELECT OwnerUserId, COUNT(DISTINCT Id) AS badgeCount
    FROM Badges
    GROUP BY OwnerUserId
) b ON p.OwnerUserId = b.OwnerUserId
WHERE p.PostTypeId = 1 
ORDER BY p.CreationDate DESC
LIMIT 100;
