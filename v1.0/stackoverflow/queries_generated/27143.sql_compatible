
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.Body,
        p.CreationDate,
        p.ViewCount,
        p.Score,
        ARRAY_AGG(DISTINCT t.TagName) AS Tags,
        COUNT(c.Id) AS CommentCount,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC) AS Rank 
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        Tags t ON POSITION(t.TagName IN p.Tags) > 0 
    WHERE 
        p.PostTypeId = 1 
    GROUP BY 
        p.Id, p.Title, p.Body, p.CreationDate, p.ViewCount, p.Score, p.OwnerUserId 
    HAVING 
        COUNT(c.Id) > 5 
),

AggregatedScores AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        SUM(rp.Score) AS TotalScore,
        SUM(rp.ViewCount) AS TotalViews,
        COUNT(rp.PostId) AS PostCount
    FROM 
        Users u
    JOIN 
        RankedPosts rp ON u.Id = rp.OwnerUserId
    GROUP BY 
        u.Id, u.DisplayName 
)

SELECT 
    ag.UserId,
    ag.DisplayName,
    ag.TotalScore,
    ag.TotalViews,
    ag.PostCount,
    RANK() OVER (ORDER BY ag.TotalScore DESC) AS ScoreRank
FROM 
    AggregatedScores ag
WHERE 
    ag.TotalScore > 1000 
ORDER BY 
    ScoreRank;
