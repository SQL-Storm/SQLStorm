
WITH RankedPosts AS (
    SELECT 
        P.Id AS PostId,
        P.Title,
        P.Score,
        P.CreationDate,
        U.DisplayName AS OwnerDisplayName,
        ROW_NUMBER() OVER (PARTITION BY P.OwnerUserId ORDER BY P.Score DESC) AS PosByUser,
        COUNT(C.CommentId) AS TotalComments,
        SUM(CASE WHEN V.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes,
        SUM(CASE WHEN V.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes
    FROM 
        Posts P
    LEFT JOIN 
        Users U ON P.OwnerUserId = U.Id
    LEFT JOIN 
        Comments C ON P.Id = C.PostId
    LEFT JOIN 
        Votes V ON P.Id = V.PostId
    WHERE 
        P.CreationDate >= '2024-10-01 12:34:56'::timestamp - INTERVAL '1 year'
    GROUP BY 
        P.Id, P.Title, P.Score, P.CreationDate, U.DisplayName, P.OwnerUserId
),
TopUsers AS (
    SELECT 
        U.Id,
        U.DisplayName,
        U.Reputation,
        RANK() OVER (ORDER BY U.Reputation DESC) AS UserRank
    FROM 
        Users U
    WHERE 
        U.Reputation > 1000
),
PostHistoryStats AS (
    SELECT 
        PH.PostId,
        PH.PostHistoryTypeId,
        COUNT(*) AS HistoryCount
    FROM 
        PostHistory PH
    WHERE 
        PH.CreationDate >= '2024-10-01 12:34:56'::timestamp - INTERVAL '6 months'
    GROUP BY 
        PH.PostId, PH.PostHistoryTypeId
)

SELECT 
    RP.PostId,
    RP.Title,
    RP.Score,
    RP.CreationDate,
    RP.OwnerDisplayName,
    RP.PosByUser,
    COALESCE(TH.HistoryCount, 0) AS TotalHistory,
    TU.UserRank,
    RP.UpVotes,
    RP.DownVotes,
    RP.TotalComments
FROM 
    RankedPosts RP
LEFT JOIN 
    PostHistoryStats TH ON RP.PostId = TH.PostId
LEFT JOIN 
    TopUsers TU ON RP.OwnerDisplayId = TU.Id
WHERE 
    RP.PosByUser = 1
ORDER BY 
    RP.Score DESC, RP.CreationDate DESC
LIMIT 100;
