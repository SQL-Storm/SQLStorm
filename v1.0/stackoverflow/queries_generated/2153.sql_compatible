
WITH RankedPosts AS (
    SELECT 
        p.Id,
        p.Title,
        p.CreationDate,
        COALESCE(pr.AvgRating, 0) AS AvgRating,
        p.OwnerUserId,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS PostRank
    FROM 
        Posts p
    LEFT JOIN (
        SELECT 
            PostId, 
            AVG(Score) AS AvgRating 
        FROM 
            Votes v 
        JOIN 
            PostHistory ph ON ph.PostId = v.PostId AND v.VoteTypeId = 2 
        GROUP BY 
            PostId
    ) pr ON p.Id = pr.PostId
)
SELECT 
    u.Id AS UserId,
    u.DisplayName,
    COUNT(DISTINCT rp.Id) AS TotalPosts,
    SUM(CASE WHEN rp.AvgRating > 3 THEN 1 ELSE 0 END) AS HighRatedPosts,
    STRING_AGG(DISTINCT t.TagName, ', ') AS TagsUsed
FROM 
    Users u
JOIN 
    RankedPosts rp ON u.Id = rp.OwnerUserId
LEFT JOIN 
    (SELECT DISTINCT UNNEST(string_to_array(rp.Title, ' ')) AS TagName) AS t
GROUP BY 
    u.Id, u.DisplayName
HAVING 
    COUNT(DISTINCT rp.Id) > 5
ORDER BY 
    TotalPosts DESC
LIMIT 10;
