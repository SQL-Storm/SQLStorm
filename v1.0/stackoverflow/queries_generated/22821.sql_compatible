
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Score,
        p.ViewCount,
        p.OwnerUserId,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC, p.CreationDate DESC) AS PostRank,
        COUNT(DISTINCT c.Id) AS CommentCount,
        JSON_AGG(t.TagName) AS Tags
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        UNNEST(STRING_TO_ARRAY(p.Tags, '<>')) AS tag(tagname) ON TRUE
    LEFT JOIN 
        Tags t ON t.TagName = tag.tagname
    WHERE 
        p.CreationDate >= DATE '2024-10-01' - INTERVAL '1 year'
    GROUP BY 
        p.Id, p.Title, p.CreationDate, p.Score, p.ViewCount, p.OwnerUserId
),
UserStats AS (
    SELECT 
        u.Id AS UserId,
        u.Reputation,
        COUNT(DISTINCT p.Id) AS PostCount,
        SUM(COALESCE(b.Class, 0)) AS TotalBadges
    FROM 
        Users u
    LEFT JOIN 
        Posts p ON u.Id = p.OwnerUserId
    LEFT JOIN 
        Badges b ON u.Id = b.UserId 
    GROUP BY 
        u.Id, u.Reputation
),
ClosedPosts AS (
    SELECT 
        ph.PostId,
        ph.CreationDate,
        pt.Name AS PostHistoryType,
        u.DisplayName AS ClosedBy
    FROM 
        PostHistory ph
    JOIN 
        Users u ON ph.UserId = u.Id
    JOIN 
        PostHistoryTypes pt ON ph.PostHistoryTypeId = pt.Id
    WHERE 
        pt.Name = 'Post Closed'
        AND ph.CreationDate >= DATE '2024-10-01' - INTERVAL '6 months'
),
TopUsers AS (
    SELECT 
        us.UserId,
        us.Reputation,
        us.PostCount,
        us.TotalBadges,
        ROW_NUMBER() OVER (ORDER BY us.Reputation DESC) AS UserRank
    FROM 
        UserStats us
)
SELECT 
    rp.PostId,
    rp.Title,
    rp.CreationDate,
    rp.Score,
    rp.ViewCount,
    rp.CommentCount,
    rp.Tags,
    u.DisplayName AS OwnerDisplayName,
    us.Reputation AS OwnerReputation,
    cu.ClosedBy AS ClosedBy,
    cu.CreationDate AS ClosedDate,
    tu.UserRank,
    CASE 
        WHEN rp.PostRank = 1 THEN 'Top Post for User'
        ELSE NULL 
    END AS SpecialTag
FROM 
    RankedPosts rp
JOIN 
    Users u ON rp.OwnerUserId = u.Id
LEFT JOIN 
    ClosedPosts cu ON rp.PostId = cu.PostId
JOIN 
    TopUsers tu ON u.Id = tu.UserId
WHERE 
    (rp.CommentCount > 0 OR cu.ClosedBy IS NOT NULL)
    AND (rp.Score > 2 OR (rp.ViewCount > 100 AND (SELECT COUNT(*) FROM Votes v WHERE v.PostId = rp.PostId AND v.VoteTypeId = 2) > 5))
ORDER BY 
    rp.Score DESC, rp.ViewCount DESC;
