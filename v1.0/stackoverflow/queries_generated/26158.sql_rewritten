WITH UserStatistics AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        u.Reputation,
        COUNT(b.Id) AS BadgeCount,
        SUM(CASE WHEN b.Class = 1 THEN 1 ELSE 0 END) AS GoldBadges,
        SUM(CASE WHEN b.Class = 2 THEN 1 ELSE 0 END) AS SilverBadges,
        SUM(CASE WHEN b.Class = 3 THEN 1 ELSE 0 END) AS BronzeBadges
    FROM 
        Users u
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    GROUP BY 
        u.Id, u.DisplayName, u.Reputation
),

PostDetails AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Score,
        p.ViewCount,
        p.OwnerUserId,
        COUNT(c.Id) AS CommentCount,
        COUNT(a.Id) FILTER (WHERE p.PostTypeId = 1) AS AnswerCount
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        Posts a ON p.Id = a.ParentId
    WHERE 
        p.PostTypeId IN (1, 2)  
    GROUP BY 
        p.Id, p.Title, p.CreationDate, p.Score, p.ViewCount, p.OwnerUserId
),

UserPostStatistics AS (
    SELECT 
        us.UserId,
        us.DisplayName,
        COUNT(pd.PostId) AS TotalPosts,
        SUM(pd.Score) AS TotalPostScore,
        SUM(pd.ViewCount) AS TotalPostViews,
        SUM(pd.CommentCount) AS TotalComments,
        SUM(pd.AnswerCount) AS TotalAnswers
    FROM 
        UserStatistics us
    JOIN 
        PostDetails pd ON us.UserId = pd.OwnerUserId
    GROUP BY 
        us.UserId, us.DisplayName
)

SELECT 
    ups.DisplayName,
    ups.TotalPosts,
    ups.TotalPostScore,
    ups.TotalPostViews,
    ups.TotalComments,
    ups.TotalAnswers,
    COALESCE(ups.GoldBadges, 0) AS GoldBadges,
    COALESCE(ups.SilverBadges, 0) AS SilverBadges,
    COALESCE(ups.BronzeBadges, 0) AS BronzeBadges
FROM 
    UserStatistics ups
JOIN 
    UserPostStatistics ups2 ON ups.UserId = ups2.UserId
ORDER BY 
    ups.TotalPostScore DESC, ups.TotalPosts DESC 
LIMIT 10;