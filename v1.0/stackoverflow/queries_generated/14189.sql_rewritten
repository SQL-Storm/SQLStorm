WITH PostStats AS (
    SELECT 
        p.Id AS PostId,
        p.PostTypeId,
        p.CreationDate,
        p.Score,
        p.ViewCount,
        p.AnswerCount,
        p.CommentCount,
        p.FavoriteCount,
        p.LastActivityDate,
        u.Reputation AS OwnerReputation,
        u.CreationDate AS OwnerCreationDate
    FROM 
        Posts p
    JOIN 
        Users u ON p.OwnerUserId = u.Id
),
VotesStats AS (
    SELECT 
        PostId,
        COUNT(CASE WHEN VoteTypeId = 2 THEN 1 END) AS UpVotes,
        COUNT(CASE WHEN VoteTypeId = 3 THEN 1 END) AS DownVotes
    FROM 
        Votes
    GROUP BY 
        PostId
),
BadgeStats AS (
    SELECT 
        UserId,
        COUNT(*) AS TotalBadges
    FROM 
        Badges
    GROUP BY 
        UserId
)

SELECT 
    ps.PostId,
    pt.Name AS PostType,
    ps.CreationDate,
    ps.Score,
    ps.ViewCount,
    ps.AnswerCount,
    ps.CommentCount,
    ps.FavoriteCount,
    ps.LastActivityDate,
    vs.UpVotes,
    vs.DownVotes,
    ps.OwnerReputation,
    DATEDIFF(cast('2024-10-01 12:34:56' as timestamp), ps.OwnerCreationDate) AS OwnerAccountAgeDays,
    bs.TotalBadges
FROM 
    PostStats ps
JOIN 
    PostTypes pt ON ps.PostTypeId = pt.Id
LEFT JOIN 
    VotesStats vs ON ps.PostId = vs.PostId
LEFT JOIN 
    BadgeStats bs ON ps.OwnerUserId = bs.UserId
ORDER BY 
    ps.LastActivityDate DESC;