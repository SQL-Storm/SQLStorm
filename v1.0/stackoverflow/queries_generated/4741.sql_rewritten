WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Score,
        p.ViewCount,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC) AS Rank,
        COUNT(c.Id) AS CommentCount
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    WHERE 
        p.CreationDate > cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 year'
    GROUP BY 
        p.Id
),
UserStats AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        SUM(v.BountyAmount) AS TotalBounty,
        SUM(u.UpVotes) AS TotalUpVotes,
        COUNT(DISTINCT b.Id) AS BadgeCount
    FROM 
        Users u
    LEFT JOIN 
        Votes v ON u.Id = v.UserId
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    WHERE 
        u.Reputation > 1000
    GROUP BY 
        u.Id
)
SELECT 
    u.DisplayName,
    p.Title,
    p.Score,
    p.ViewCount,
    COALESCE(uStats.TotalBounty, 0) AS UserTotalBounty,
    COALESCE(uStats.TotalUpVotes, 0) AS UserTotalUpVotes,
    uStats.BadgeCount,
    p.Rank
FROM 
    RankedPosts p
JOIN 
    Users u ON u.Id = p.OwnerUserId
LEFT JOIN 
    UserStats uStats ON u.Id = uStats.UserId
WHERE 
    p.Rank <= 5
ORDER BY 
    p.Score DESC, p.ViewCount DESC;