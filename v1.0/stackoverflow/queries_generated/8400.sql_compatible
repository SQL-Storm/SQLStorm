
WITH RankedPosts AS (
    SELECT 
        p.Id,
        p.Title,
        p.CreationDate,
        p.Score,
        u.DisplayName AS OwnerDisplayName,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC) AS PostRank
    FROM 
        Posts p
    JOIN 
        Users u ON p.OwnerUserId = u.Id
    WHERE 
        p.CreationDate >= (CAST('2024-10-01 12:34:56' AS TIMESTAMP) - INTERVAL '1 year') AND p.Score > 0
),
TopPostDetails AS (
    SELECT 
        rp.Id,
        rp.Title,
        rp.CreationDate,
        rp.Score,
        rp.OwnerDisplayName,
        COUNT(c.Id) AS CommentCount,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS TotalUpvotes,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS TotalDownvotes
    FROM 
        RankedPosts rp
    LEFT JOIN 
        Comments c ON rp.Id = c.PostId
    LEFT JOIN 
        Votes v ON rp.Id = v.PostId
    WHERE 
        rp.PostRank <= 5
    GROUP BY 
        rp.Id, rp.Title, rp.CreationDate, rp.Score, rp.OwnerDisplayName
)
SELECT 
    tpd.Id,
    tpd.Title,
    tpd.CreationDate,
    tpd.Score,
    tpd.OwnerDisplayName,
    tpd.CommentCount,
    tpd.TotalUpvotes,
    tpd.TotalDownvotes,
    pt.Name AS PostTypeName,
    COALESCE(cl.Name, 'No Close Reason') AS CloseReason
FROM 
    TopPostDetails tpd
LEFT JOIN 
    PostTypes pt ON EXISTS (SELECT 1 FROM Posts p WHERE p.Id = tpd.Id AND p.PostTypeId = pt.Id)
LEFT JOIN 
    PostHistory ph ON tpd.Id = ph.PostId AND ph.PostHistoryTypeId = 10
LEFT JOIN 
    CloseReasonTypes cl ON ph.Comment = CAST(cl.Id AS INT)
ORDER BY 
    tpd.Score DESC, tpd.CommentCount DESC;
