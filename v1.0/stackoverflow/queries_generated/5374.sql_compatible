
WITH UserBadges AS (
    SELECT UserId, COUNT(*) AS BadgeCount
    FROM Badges
    WHERE Class = 1 OR Class = 2
    GROUP BY UserId
),
PopularPosts AS (
    SELECT Id, Title, Score, ViewCount, OwnerUserId
    FROM Posts
    WHERE CreationDate > DATEADD(year, -1, '2024-10-01')
    ORDER BY Score DESC, ViewCount DESC
    LIMIT 10
)
SELECT p.Id AS PostId, p.Title AS PostTitle, 
       p.Score AS PostScore, p.ViewCount AS PostViewCount, 
       u.DisplayName AS OwnerDisplayName, 
       COALESCE(ub.BadgeCount, 0) AS BadgeCount,
       COUNT(DISTINCT c.Id) AS CommentCount,
       COUNT(DISTINCT v.Id) AS VoteCount,
       ARRAY_AGG(DISTINCT t.TagName) AS Tags
FROM PopularPosts p
JOIN Users u ON p.OwnerUserId = u.Id
LEFT JOIN UserBadges ub ON ub.UserId = u.Id
LEFT JOIN Comments c ON c.PostId = p.Id
LEFT JOIN Votes v ON v.PostId = p.Id
LEFT JOIN Tags t ON t.Id = ANY(string_to_array(p.Tags, '<>'))
GROUP BY p.Id, p.Title, p.Score, p.ViewCount, p.OwnerUserId, u.DisplayName, ub.BadgeCount
ORDER BY p.Score DESC, BadgeCount DESC;
