
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.Body,
        p.CreationDate,
        p.ViewCount,
        u.DisplayName AS OwnerDisplayName,
        ROW_NUMBER() OVER(ORDER BY p.ViewCount DESC) AS ViewRank
    FROM 
        Posts p
    JOIN 
        Users u ON p.OwnerUserId = u.Id
    WHERE 
        p.PostTypeId = 1 
        AND p.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 year'
),
TagCounts AS (
    SELECT 
        unnest(string_to_array(p.Tags, '><')) AS TagName,
        COUNT(*) AS TagCount
    FROM 
        Posts p
    WHERE 
        p.PostTypeId = 1
    GROUP BY 
        unnest(string_to_array(p.Tags, '><'))
),
TopTags AS (
    SELECT 
        TagName,
        TagCount
    FROM 
        TagCounts
    ORDER BY 
        TagCount DESC 
    LIMIT 10
),
PostsWithTopTags AS (
    SELECT 
        rp.PostId,
        rp.Title,
        rp.OwnerDisplayName,
        tt.TagName
    FROM 
        RankedPosts rp
    JOIN 
        Posts p ON rp.PostId = p.Id
    JOIN 
        TopTags tt ON tt.TagName = ANY(string_to_array(p.Tags, '><'))
)
SELECT 
    pwt.PostId,
    pwt.Title,
    pwt.OwnerDisplayName,
    COUNT(pt.Id) AS RelatedPosts,
    SUM(CASE WHEN pt.LinkTypeId = 3 THEN 1 ELSE 0 END) AS DuplicateLinks,
    SUM(CASE WHEN ph.PostHistoryTypeId = 10 THEN 1 ELSE 0 END) AS CloseVotes,
    SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS Upvotes
FROM 
    PostsWithTopTags pwt
LEFT JOIN 
    PostLinks pl ON pwt.PostId = pl.PostId
LEFT JOIN 
    Posts pt ON pl.RelatedPostId = pt.Id
LEFT JOIN 
    PostHistory ph ON ph.PostId = pwt.PostId
LEFT JOIN 
    Votes v ON v.PostId = pwt.PostId
GROUP BY 
    pwt.PostId, pwt.Title, pwt.OwnerDisplayName
ORDER BY 
    COUNT(DISTINCT v.Id) DESC, pwt.Title;
