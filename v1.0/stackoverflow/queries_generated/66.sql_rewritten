WITH RankedPosts AS (
    SELECT 
        p.Id,
        p.Title,
        p.Score,
        p.OwnerUserId,
        p.CreationDate,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC) AS PostRank
    FROM 
        Posts p
    WHERE 
        p.PostTypeId = 1 
),
UserReputation AS (
    SELECT 
        u.Id AS UserId,
        u.Reputation,
        COUNT(DISTINCT p.Id) AS QuestionCount,
        SUM(CASE WHEN p.Score > 0 THEN 1 ELSE 0 END) AS PositiveScoredQuestions
    FROM 
        Users u
    LEFT JOIN 
        Posts p ON u.Id = p.OwnerUserId AND p.PostTypeId = 1
    GROUP BY 
        u.Id, u.Reputation
),
PostHistoryData AS (
    SELECT 
        ph.PostId,
        MAX(CASE WHEN ph.PostHistoryTypeId = 10 THEN ph.CreationDate END) AS LastClosedDate,
        MAX(CASE WHEN ph.PostHistoryTypeId = 11 THEN ph.CreationDate END) AS LastReopenedDate,
        COUNT(CASE WHEN ph.PostHistoryTypeId = 12 THEN 1 END) AS DeleteCount
    FROM 
        PostHistory ph
    GROUP BY 
        ph.PostId
)
SELECT 
    u.DisplayName,
    ur.Reputation,
    COUNT(rp.Id) AS TotalQuestions,
    SUM(COALESCE(ph.LastClosedDate, '1970-01-01'::timestamp)) AS LastClosed,
    SUM(COALESCE(ph.LastReopenedDate, '1970-01-01'::timestamp)) AS LastReopened,
    MAX(COALESCE(rp.CreationDate, '1970-01-01'::timestamp)) AS MostRecentQuestion,
    SUM(ph.DeleteCount) AS TotalDeletions,
    (SELECT COUNT(*) FROM Votes v WHERE v.PostId IN (SELECT Id FROM Posts WHERE OwnerUserId = u.Id) AND v.VoteTypeId = 2) AS TotalUpvotes
FROM 
    Users u
JOIN 
    UserReputation ur ON u.Id = ur.UserId
LEFT JOIN 
    RankedPosts rp ON u.Id = rp.OwnerUserId
LEFT JOIN 
    PostHistoryData ph ON rp.Id = ph.PostId
WHERE 
    ur.QuestionCount > 5
GROUP BY 
    u.Id, ur.Reputation
HAVING 
    SUM(rp.Score) OVER (PARTITION BY u.Id) > 10
ORDER BY 
    ur.Reputation DESC, TotalQuestions DESC;