
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId, 
        p.Title, 
        p.CreationDate, 
        p.ViewCount, 
        p.Score, 
        p.AnswerCount, 
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS UserPostRank 
    FROM 
        Posts p 
    WHERE 
        p.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 year'
), UserReputation AS (
    SELECT 
        u.Id AS UserId, 
        u.DisplayName, 
        u.Reputation, 
        COALESCE(SUM(CASE WHEN b.Class = 1 THEN 1 ELSE 0 END), 0) AS GoldBadges, 
        COALESCE(SUM(CASE WHEN b.Class = 2 THEN 1 ELSE 0 END), 0) AS SilverBadges, 
        COALESCE(SUM(CASE WHEN b.Class = 3 THEN 1 ELSE 0 END), 0) AS BronzeBadges 
    FROM 
        Users u 
    LEFT JOIN 
        Badges b ON u.Id = b.UserId 
    GROUP BY 
        u.Id, u.DisplayName, u.Reputation 
), PostStatistics AS (
    SELECT 
        p.OwnerUserId, 
        COUNT(p.Id) AS TotalPosts, 
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS TotalUpvotes,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS TotalDownvotes 
    FROM 
        Posts p 
    LEFT JOIN 
        Votes v ON p.Id = v.PostId 
    WHERE 
        p.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 year'
    GROUP BY 
        p.OwnerUserId 
)
SELECT 
    ur.DisplayName, 
    ur.Reputation, 
    ur.GoldBadges, 
    ur.SilverBadges, 
    ur.BronzeBadges, 
    ps.TotalPosts, 
    ps.TotalUpvotes, 
    ps.TotalDownvotes, 
    rp.PostId, 
    rp.Title, 
    rp.CreationDate, 
    rp.ViewCount, 
    rp.Score, 
    rp.AnswerCount 
FROM 
    UserReputation ur 
JOIN 
    PostStatistics ps ON ur.UserId = ps.OwnerUserId 
JOIN 
    RankedPosts rp ON ur.UserId = rp.OwnerUserId AND rp.UserPostRank = 1 
ORDER BY 
    ur.Reputation DESC, 
    rp.Score DESC;
