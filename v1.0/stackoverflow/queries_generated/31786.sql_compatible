
WITH RecursivePosts AS (
    SELECT p.Id, p.Title, p.ParentId, p.CreationDate, 1 AS Level
    FROM Posts p
    WHERE p.PostTypeId = 1  

    UNION ALL

    SELECT p.Id, p.Title, p.ParentId, p.CreationDate, rp.Level + 1
    FROM Posts p
    INNER JOIN RecursivePosts rp ON p.ParentId = rp.Id
),
VoteDetails AS (
    SELECT 
        v.PostId,
        COUNT(CASE WHEN v.VoteTypeId = 2 THEN 1 END) AS UpVotes,
        COUNT(CASE WHEN v.VoteTypeId = 3 THEN 1 END) AS DownVotes,
        COUNT(CASE WHEN v.VoteTypeId = 1 THEN 1 END) AS AcceptedVotes
    FROM Votes v
    GROUP BY v.PostId
),
PostHistories AS (
    SELECT 
        ph.PostId,
        MAX(CASE WHEN ph.PostHistoryTypeId = 10 THEN ph.CreationDate END) AS ClosedDate,
        MAX(CASE WHEN ph.PostHistoryTypeId = 12 THEN ph.CreationDate END) AS DeletedDate,
        COUNT(CASE WHEN ph.PostHistoryTypeId IN (10, 12) THEN 1 END) AS CloseDeleteCount
    FROM PostHistory ph
    GROUP BY ph.PostId
),
CombinedData AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        rp.Level,
        COALESCE(vd.UpVotes, 0) AS UpVotes,
        COALESCE(vd.DownVotes, 0) AS DownVotes,
        COALESCE(vd.AcceptedVotes, 0) AS AcceptedVotes,
        ph.ClosedDate,
        ph.DeletedDate,
        COALESCE(ph.CloseDeleteCount, 0) AS CloseDeleteCount
    FROM Posts p
    LEFT JOIN RecursivePosts rp ON p.Id = rp.Id
    LEFT JOIN VoteDetails vd ON p.Id = vd.PostId
    LEFT JOIN PostHistories ph ON p.Id = ph.PostId
    WHERE p.CreationDate >= DATEADD(YEAR, -1, CURRENT_TIMESTAMP) 
      AND (COALESCE(vd.UpVotes, 0) - COALESCE(vd.DownVotes, 0)) > 0 
)

SELECT 
    cd.PostId,
    cd.Title,
    cd.CreationDate,
    cd.Level,
    cd.UpVotes,
    cd.DownVotes,
    cd.AcceptedVotes,
    cd.ClosedDate,
    cd.DeletedDate,
    cd.CloseDeleteCount,
    CASE 
        WHEN cd.ClosedDate IS NOT NULL THEN 'Closed'
        WHEN cd.DeletedDate IS NOT NULL THEN 'Deleted'
        ELSE 'Active'
    END AS Status,
    DENSE_RANK() OVER (ORDER BY cd.UpVotes DESC) AS Rank
FROM CombinedData cd
ORDER BY Rank
LIMIT 10;
