
WITH UserBadges AS (
    SELECT 
        U.Id AS UserId,
        U.DisplayName,
        COUNT(B.Id) AS BadgeCount,
        SUM(CASE WHEN B.Class = 1 THEN 1 ELSE 0 END) AS GoldBadges,
        SUM(CASE WHEN B.Class = 2 THEN 1 ELSE 0 END) AS SilverBadges,
        SUM(CASE WHEN B.Class = 3 THEN 1 ELSE 0 END) AS BronzeBadges
    FROM Users U
    LEFT JOIN Badges B ON U.Id = B.UserId
    GROUP BY U.Id, U.DisplayName
),
RecentPosts AS (
    SELECT 
        P.Id AS PostId,
        P.OwnerUserId,
        P.Title,
        P.CreationDate,
        P.Score,
        ROW_NUMBER() OVER (PARTITION BY P.OwnerUserId ORDER BY P.CreationDate DESC) AS RecentPostRank
    FROM Posts P
    WHERE P.CreationDate >= DATE('2024-10-01') - INTERVAL '30 day'
),
PostDetails AS (
    SELECT 
        R.PostId,
        R.Title,
        R.CreationDate,
        R.Score,
        U.DisplayName AS OwnerDisplayName,
        CASE 
            WHEN U.DisplayName IS NULL THEN 'Anonymous' 
            ELSE U.DisplayName 
        END AS DisplayNameWithFallback
    FROM RecentPosts R
    JOIN Users U ON R.OwnerUserId = U.Id
)
SELECT 
    UB.DisplayName,
    UB.BadgeCount,
    UB.GoldBadges,
    UB.SilverBadges,
    UB.BronzeBadges,
    PD.Title,
    PD.CreationDate,
    PD.Score,
    COALESCE(PH.Comment, 'No comment') AS PostHistoryComment,
    COALESCE(g.HistoryCount, 0) AS GroupedPostHistoryCount
FROM UserBadges UB
JOIN PostDetails PD ON UB.UserId = PD.OwnerUserId
LEFT JOIN PostHistory PH ON PH.PostId = PD.PostId AND PH.PostHistoryTypeId IN (10, 11) 
LEFT JOIN (
    SELECT 
        PostId,
        COUNT(*) AS HistoryCount
    FROM PostHistory
    GROUP BY PostId
) g ON g.PostId = PD.PostId
WHERE UB.BadgeCount > 5  
ORDER BY UB.BadgeCount DESC, PD.CreationDate DESC
LIMIT 50;
