
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostID,
        p.Title,
        p.CreationDate,
        p.ViewCount,
        p.Score,
        ARRAY_LENGTH(string_to_array(substring(p.Tags, 2, length(p.Tags)-2), '><'), 1) AS TagCount,
        COUNT(c.Id) AS CommentCount,
        COUNT(DISTINCT CASE WHEN ph.PostHistoryTypeId = 10 THEN ph.Id END) AS CloseEventCount,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS OwnerPostRank
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        PostHistory ph ON p.Id = ph.PostId
    WHERE 
        p.CreationDate >= DATEADD(year, -1, '2024-10-01')
    GROUP BY 
        p.Id, p.Title, p.CreationDate, p.ViewCount, p.Score, p.OwnerUserId
),

SelectedPosts AS (
    SELECT 
        rp.PostID,
        rp.Title,
        rp.CreationDate,
        rp.ViewCount,
        rp.Score,
        rp.TagCount,
        rp.CommentCount,
        rp.CloseEventCount,
        u.DisplayName AS OwnerDisplayName, 
        u.Reputation,
        CASE 
            WHEN rp.OwnerPostRank = 1 THEN 'Latest Post'
            ELSE 'Earlier Post'
        END AS PostType
    FROM 
        RankedPosts rp
    JOIN 
        Users u ON rp.OwnerUserId = u.Id
    WHERE 
        rp.TagCount > 2 AND 
        rp.CommentCount > 5 
    ORDER BY 
        rp.Score DESC, rp.ViewCount DESC
)

SELECT 
    sp.Title,
    sp.OwnerDisplayName,
    sp.Reputation,
    sp.CreationDate,
    sp.ViewCount,
    sp.Score,
    sp.TagCount,
    sp.CommentCount,
    sp.CloseEventCount,
    sp.PostType
FROM 
    SelectedPosts sp
LIMIT 10;
