WITH UserStats AS (
    SELECT 
        u.Id AS UserId, 
        u.Reputation, 
        COUNT(b.Id) AS BadgeCount,
        COUNT(DISTINCT p.Id) AS PostCount,
        SUM(vote.VoteTypeId = 2) AS UpVotes,   
        SUM(vote.VoteTypeId = 3) AS DownVotes   
    FROM Users u
    LEFT JOIN Badges b ON u.Id = b.UserId
    LEFT JOIN Posts p ON u.Id = p.OwnerUserId
    LEFT JOIN Votes vote ON u.Id = vote.UserId
    GROUP BY u.Id, u.Reputation
),
PostStats AS (
    SELECT 
        p.Id AS PostId, 
        p.OwnerUserId, 
        p.Score, 
        p.ViewCount,
        COALESCE(COUNT(c.Id), 0) AS CommentCount
    FROM Posts p
    LEFT JOIN Comments c ON p.Id = c.PostId
    GROUP BY p.Id, p.OwnerUserId, p.Score, p.ViewCount
),
AggregateStats AS (
    SELECT 
        us.UserId,
        us.Reputation,
        us.BadgeCount,
        us.PostCount,
        us.UpVotes,
        us.DownVotes,
        COUNT(ps.PostId) AS TotalPosts,
        SUM(ps.Score) AS TotalScore,
        SUM(ps.ViewCount) AS TotalViews,
        SUM(ps.CommentCount) AS TotalComments
    FROM UserStats us
    LEFT JOIN PostStats ps ON us.UserId = ps.OwnerUserId
    GROUP BY us.UserId, us.Reputation, us.BadgeCount, us.PostCount, us.UpVotes, us.DownVotes
)

SELECT 
    UserId,
    Reputation,
    BadgeCount,
    PostCount,
    UpVotes,
    DownVotes,
    TotalPosts,
    TotalScore,
    TotalViews,
    TotalComments
FROM AggregateStats
ORDER BY Reputation DESC, TotalScore DESC;