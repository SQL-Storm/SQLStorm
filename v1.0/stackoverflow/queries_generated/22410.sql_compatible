
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.ViewCount,
        COALESCE(p.Score, 0) AS Score,
        p.AnswerCount,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY COALESCE(p.Score, 0) DESC) AS ScoreRank
    FROM 
        Posts p
    WHERE 
        p.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 year' 
        AND p.PostTypeId = 1  
),
TopUserPosts AS (
    SELECT 
        rp.OwnerUserId,
        COUNT(*) AS PostCount,
        SUM(rp.ViewCount) AS TotalViews,
        AVG(rp.Score) AS AvgScore
    FROM 
        RankedPosts rp
    WHERE 
        rp.ScoreRank <= 3  
    GROUP BY 
        rp.OwnerUserId
),
UserBadges AS (
    SELECT 
        u.Id AS UserId,
        COUNT(b.Id) FILTER (WHERE b.Class = 1) AS GoldBadges,
        COUNT(b.Id) FILTER (WHERE b.Class = 2) AS SilverBadges,
        COUNT(b.Id) FILTER (WHERE b.Class = 3) AS BronzeBadges
    FROM 
        Users u 
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    GROUP BY 
        u.Id
),
UserPerformance AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COALESCE(tp.PostCount, 0) AS PostCount,
        COALESCE(tp.TotalViews, 0) AS TotalViews,
        COALESCE(tp.AvgScore, 0) AS AvgScore,
        ub.GoldBadges,
        ub.SilverBadges,
        ub.BronzeBadges
    FROM 
        Users u
    LEFT JOIN 
        TopUserPosts tp ON u.Id = tp.OwnerUserId
    LEFT JOIN 
        UserBadges ub ON u.Id = ub.UserId
    WHERE 
        u.Reputation > 1000  
)
SELECT 
    up.UserId,
    up.DisplayName,
    up.PostCount,
    up.TotalViews,
    up.AvgScore,
    CASE 
        WHEN up.AvgScore > 5 THEN 'High Score'
        WHEN up.AvgScore BETWEEN 1 AND 5 THEN 'Moderate Score'
        ELSE 'Low Score'
    END AS ScoreCategory,
    COALESCE(up.GoldBadges, 0) + COALESCE(up.SilverBadges, 0) + COALESCE(up.BronzeBadges, 0) AS TotalBadges
FROM 
    UserPerformance up
WHERE 
    (up.PostCount > 10 OR up.TotalViews > 1000) AND 
    (COALESCE(up.GoldBadges, 0) >= 2 OR COALESCE(up.SilverBadges, 0) >= 5 OR COALESCE(up.BronzeBadges, 0) >= 10)
ORDER BY 
    up.AvgScore DESC, TotalBadges DESC
LIMIT 100;
