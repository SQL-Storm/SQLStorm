
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.Body,
        p.Tags,
        u.DisplayName AS OwnerDisplayName,
        p.CreationDate,
        COUNT(a.Id) AS AnswerCount,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes,
        ROW_NUMBER() OVER (PARTITION BY p.Tags ORDER BY p.CreationDate DESC) AS Rank
    FROM 
        Posts p
    LEFT JOIN 
        Users u ON p.OwnerUserId = u.Id
    LEFT JOIN 
        Posts a ON a.ParentId = p.Id AND a.PostTypeId = 2
    LEFT JOIN 
        Votes v ON v.PostId = p.Id
    WHERE 
        p.PostTypeId = 1 
    GROUP BY 
        p.Id, p.Title, p.Body, p.Tags, u.DisplayName, p.CreationDate
),
FilteredPosts AS (
    SELECT 
        rp.*,
        STRING_AGG(DISTINCT tag.TagName, ', ') AS TagNames
    FROM 
        RankedPosts rp
    LEFT JOIN 
        (SELECT unnest(string_to_array(rp.Tags, '><')) AS TagName) AS tag
    GROUP BY 
        rp.PostId, rp.Title, rp.Body, rp.Tags, rp.OwnerDisplayName, rp.CreationDate, rp.AnswerCount, rp.UpVotes, rp.DownVotes
)
SELECT 
    fp.PostId,
    fp.Title,
    fp.Body,
    fp.OwnerDisplayName,
    fp.CreationDate,
    fp.AnswerCount,
    fp.UpVotes,
    fp.DownVotes,
    fp.TagNames
FROM 
    FilteredPosts fp
WHERE 
    fp.Rank <= 5 
ORDER BY 
    fp.TagNames, fp.CreationDate DESC;
