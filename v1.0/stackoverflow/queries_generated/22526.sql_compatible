
WITH UserActivity AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        u.Reputation,
        COALESCE(SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END), 0) AS Upvotes,
        COALESCE(SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END), 0) AS Downvotes,
        COALESCE(COUNT(DISTINCT p.Id), 0) AS PostCount,
        ROW_NUMBER() OVER (PARTITION BY u.Id ORDER BY u.CreationDate DESC) AS UserRank
    FROM 
        Users u
    LEFT JOIN 
        Posts p ON u.Id = p.OwnerUserId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    WHERE 
        u.Reputation > 0
    GROUP BY 
        u.Id, u.DisplayName, u.Reputation
), 
MostActiveUsers AS (
    SELECT 
        UserId,
        DisplayName,
        Reputation,
        Upvotes - Downvotes AS VoteBalance,
        PostCount,
        RANK() OVER (ORDER BY PostCount DESC, VoteBalance DESC) AS ActivityRank
    FROM 
        UserActivity
), 
PostScore AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.Score,
        COALESCE(AVG(c.Score), 0) AS AvgCommentScore,
        COUNT(DISTINCT c.Id) AS CommentCount
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    WHERE 
        p.CreationDate > (DATE '2024-10-01' - INTERVAL '180 days')
    GROUP BY 
        p.Id, p.Title, p.Score
), 
PopularPosts AS (
    SELECT 
        ps.PostId,
        ps.Title,
        ps.Score,
        ps.CommentCount,
        ROW_NUMBER() OVER (ORDER BY ps.Score DESC, ps.CommentCount DESC) AS PostRank
    FROM 
        PostScore ps
    WHERE 
        ps.CommentCount > 5
)
SELECT 
    mau.UserId,
    mau.DisplayName,
    mau.Reputation,
    mau.VoteBalance,
    pp.Title AS PopularPostTitle,
    pp.Score AS PopularPostScore,
    pp.CommentCount AS PopularPostCommentCount
FROM 
    MostActiveUsers mau
LEFT JOIN 
    PopularPosts pp ON mau.UserId = (SELECT p.OwnerUserId FROM Posts p WHERE p.Id = pp.PostId LIMIT 1)
WHERE 
    mau.ActivityRank <= 10
ORDER BY 
    mau.ActivityRank, pp.Score DESC
LIMIT 10;
