
WITH RankedPosts AS (
    SELECT 
        p.Id,
        p.Title,
        p.CreationDate,
        p.OwnerUserId,
        p.Score,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC) AS rn
    FROM 
        Posts p
    WHERE 
        p.CreationDate >= DATEADD(YEAR, -1, CAST('2024-10-01' AS DATE))
),
UserReputation AS (
    SELECT 
        u.Id AS UserId,
        u.Reputation,
        COUNT(DISTINCT p.Id) AS PostCount
    FROM 
        Users u
    LEFT JOIN Posts p ON u.Id = p.OwnerUserId
    WHERE 
        u.Reputation IS NOT NULL
    GROUP BY 
        u.Id, u.Reputation
),
TopUsers AS (
    SELECT 
        ur.UserId,
        ur.Reputation,
        ur.PostCount,
        RANK() OVER (ORDER BY ur.Reputation DESC) AS UserRank
    FROM 
        UserReputation ur
    WHERE 
        ur.PostCount > 0
)
SELECT 
    t.UserRank,
    u.DisplayName,
    up.Reputation,
    up.PostCount,
    rp.Title AS TopPostTitle,
    rp.CreationDate AS TopPostDate,
    COALESCE(c.CommentCount, 0) AS TotalComments,
    COALESCE(b.BadgeCount, 0) AS TotalBadges
FROM 
    TopUsers t
JOIN 
    Users u ON t.UserId = u.Id
LEFT JOIN 
    RankedPosts rp ON rp.OwnerUserId = u.Id AND rp.rn = 1
LEFT JOIN (
    SELECT 
        PostId,
        COUNT(*) AS CommentCount
    FROM 
        Comments
    GROUP BY 
        PostId
) c ON c.PostId = rp.Id
LEFT JOIN (
    SELECT 
        UserId,
        COUNT(*) AS BadgeCount
    FROM 
        Badges
    GROUP BY 
        UserId
) b ON b.UserId = u.Id
WHERE 
    t.UserRank <= 10
ORDER BY 
    t.UserRank;
