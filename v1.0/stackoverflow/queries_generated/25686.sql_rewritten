WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Body,
        p.Tags,
        p.Score,
        COUNT(a.Id) AS AnswerCount,
        ARRAY_AGG(DISTINCT u.DisplayName) AS ContributorNames,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS PostRank
    FROM 
        Posts p
    LEFT JOIN 
        Posts a ON p.Id = a.ParentId
    LEFT JOIN 
        Users u ON p.OwnerUserId = u.Id
    WHERE 
        p.PostTypeId = 1 
    GROUP BY 
        p.Id, p.Title, p.CreationDate, p.Body, p.Tags, p.Score
),
PostHistoryAggregation AS (
    SELECT 
        ph.PostId,
        STRING_AGG(DISTINCT pht.Name, ', ') AS HistoryTypes,
        COUNT(ph.Id) AS TotalHistoryEntries
    FROM 
        PostHistory ph
    JOIN 
        PostHistoryTypes pht ON ph.PostHistoryTypeId = pht.Id
    GROUP BY 
        ph.PostId
),
UserBadges AS (
    SELECT 
        u.Id AS UserId,
        STRING_AGG(b.Name, ', ') AS Badges
    FROM 
        Users u
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    GROUP BY 
        u.Id
)
SELECT 
    rp.PostId,
    rp.Title,
    rp.CreationDate,
    rp.Body,
    rp.Tags,
    rp.Score,
    rp.AnswerCount,
    rp.ContributorNames,
    pha.HistoryTypes,
    pha.TotalHistoryEntries,
    ub.Badges,
    rp.PostRank
FROM 
    RankedPosts rp
LEFT JOIN 
    PostHistoryAggregation pha ON rp.PostId = pha.PostId
LEFT JOIN 
    UserBadges ub ON rp.OwnerUserId = ub.UserId
ORDER BY 
    rp.Score DESC, rp.CreationDate DESC;