WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        u.DisplayName AS Author,
        p.CreationDate,
        p.Score,
        COALESCE(p.AnswerCount, 0) AS AnswerCount,
        DENSE_RANK() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC) AS Rank
    FROM 
        Posts p
    JOIN 
        Users u ON p.OwnerUserId = u.Id
    WHERE 
        p.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 year' 
        AND p.PostTypeId = 1
),
TopPosts AS (
    SELECT 
        rp.PostId, 
        rp.Title, 
        rp.Author, 
        rp.CreationDate, 
        rp.Score, 
        rp.AnswerCount
    FROM 
        RankedPosts rp
    WHERE 
        rp.Rank = 1
),
UserBadges AS (
    SELECT 
        u.Id AS UserId,
        COUNT(b.Id) AS BadgeCount
    FROM 
        Users u
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    GROUP BY 
        u.Id
)
SELECT 
    tp.Title,
    tp.Author,
    tp.CreationDate,
    tp.Score,
    tp.AnswerCount,
    ub.BadgeCount
FROM 
    TopPosts tp
JOIN 
    UserBadges ub ON tp.Author = ub.UserId
ORDER BY 
    tp.Score DESC, tp.CreationDate DESC
LIMIT 10;