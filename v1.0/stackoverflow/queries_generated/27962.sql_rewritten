WITH PostStats AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.Body,
        p.ViewCount,
        COUNT(DISTINCT c.Id) AS CommentCount,
        COUNT(DISTINCT a.Id) AS AnswerCount,
        COALESCE(MAX(v.CreationDate), '1970-01-01') AS LastVoteDate,
        COALESCE(MAX(ph.CreationDate), '1970-01-01') AS LastHistoryDate
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        Posts a ON p.Id = a.ParentId AND a.PostTypeId = 2
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    LEFT JOIN 
        PostHistory ph ON p.Id = ph.PostId
    WHERE 
        p.PostTypeId IN (1, 2) 
    GROUP BY 
        p.Id, p.Title, p.Body, p.ViewCount
),
TagStats AS (
    SELECT 
        postId,
        STRING_AGG(tag.TagName, ', ') AS Tags
    FROM 
        Posts p
    JOIN 
        UNNEST(STRING_TO_ARRAY(SUBSTRING(p.Tags FROM 2 FOR LENGTH(p.Tags) - 2), '><')) AS tag(TagName) ON true
    GROUP BY 
        postId
)
SELECT 
    ps.PostId,
    ps.Title,
    ps.Body,
    ps.ViewCount,
    ps.CommentCount,
    ps.AnswerCount,
    ts.Tags,
    ps.LastVoteDate,
    ps.LastHistoryDate,
    CASE 
        WHEN ps.LastVoteDate > ps.LastHistoryDate THEN 'Recently Voted'
        ELSE 'Recently Edited'
    END AS Status
FROM 
    PostStats ps
LEFT JOIN 
    TagStats ts ON ps.PostId = ts.postId
ORDER BY 
    ps.ViewCount DESC, ps.LastVoteDate DESC
LIMIT 100;