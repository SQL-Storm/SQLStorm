
WITH RankedPosts AS (
    SELECT 
        P.Id AS PostId,
        P.Title,
        P.CreationDate,
        P.Score,
        U.DisplayName AS OwnerDisplayName,
        COUNT(CASE WHEN COALESCE(V.VoteTypeId, 0) = 2 THEN 1 END) AS UpVotes,
        COUNT(CASE WHEN COALESCE(V.VoteTypeId, 0) = 3 THEN 1 END) AS DownVotes,
        ROW_NUMBER() OVER (PARTITION BY P.Id ORDER BY PH.CreationDate DESC) AS EditRank
    FROM 
        Posts P
    LEFT JOIN 
        Users U ON P.OwnerUserId = U.Id
    LEFT JOIN 
        Votes V ON P.Id = V.PostId
    LEFT JOIN 
        PostHistory PH ON P.Id = PH.PostId AND PH.PostHistoryTypeId IN (4, 5, 6)
    WHERE 
        P.PostTypeId = 1 
    GROUP BY 
        P.Id, P.Title, P.CreationDate, P.Score, U.DisplayName
),
ClosedPosts AS (
    SELECT 
        PH.PostId,
        MAX(PH.CreationDate) AS LastClosedDate,
        STRING_AGG(COALESCE(CAST(PR.Name AS VARCHAR), 'Unknown'), ', ') AS CloseReasons
    FROM 
        PostHistory PH
    LEFT JOIN 
        CloseReasonTypes PR ON PH.Comment = CAST(PR.Id AS INT)
    WHERE 
        PH.PostHistoryTypeId = 10 
    GROUP BY 
        PH.PostId
),
FinalResults AS (
    SELECT 
        RP.PostId,
        RP.Title,
        RP.CreationDate,
        RP.Score,
        RP.OwnerDisplayName,
        RP.UpVotes,
        RP.DownVotes,
        COALESCE(CP.LastClosedDate, 'No closures') AS LastClosedDate,
        COALESCE(CP.CloseReasons, 'No reasons') AS CloseReasons
    FROM 
        RankedPosts RP
    LEFT JOIN 
        ClosedPosts CP ON RP.PostId = CP.PostId
)
SELECT 
    F.PostId,
    F.Title,
    F.CreationDate,
    F.Score,
    F.OwnerDisplayName,
    F.UpVotes,
    F.DownVotes,
    F.LastClosedDate,
    F.CloseReasons
FROM 
    FinalResults F
WHERE 
    (F.UpVotes - F.DownVotes) > 0
ORDER BY 
    F.Score DESC, F.LastClosedDate DESC
LIMIT 10;
