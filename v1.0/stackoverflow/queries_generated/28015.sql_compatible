
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId, 
        p.Title, 
        p.Body, 
        p.CreationDate, 
        p.ViewCount,
        p.Score,
        u.DisplayName AS OwnerDisplayName,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS PostRank
    FROM 
        Posts p
    JOIN 
        Users u ON p.OwnerUserId = u.Id
    WHERE 
        p.PostTypeId = 1 
),
UserActivity AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COUNT(DISTINCT p.Id) AS QuestionCount,
        SUM(CASE WHEN p.Score >= 0 THEN 1 ELSE 0 END) AS PositiveQuestions,
        SUM(CASE WHEN p.Score < 0 THEN 1 ELSE 0 END) AS NegativeQuestions,
        SUM(COALESCE(p.ViewCount, 0)) AS TotalViews
    FROM 
        Users u
    LEFT JOIN 
        Posts p ON u.Id = p.OwnerUserId AND p.PostTypeId = 1 
    GROUP BY 
        u.Id, u.DisplayName
),
TagAnalytics AS (
    SELECT 
        t.TagName,
        COUNT(pt.PostId) AS AssociatedPosts,
        SUM(pt.ViewCount) AS TotalViews,
        AVG(pt.Score) AS AverageScore
    FROM 
        Tags t
    JOIN 
        Posts pt ON pt.Tags LIKE CONCAT('%', t.TagName, '%')
    GROUP BY 
        t.TagName
)
SELECT 
    u.UserId,
    u.DisplayName,
    u.QuestionCount,
    u.PositiveQuestions,
    u.NegativeQuestions,
    u.TotalViews,
    tp.TagName,
    tp.AssociatedPosts,
    tp.TotalViews AS TagTotalViews,
    tp.AverageScore AS TagAverageScore,
    rp.Title,
    rp.ViewCount AS PostViewCount,
    rp.Score AS PostScore
FROM 
    UserActivity u
LEFT JOIN 
    TagAnalytics tp ON tp.AssociatedPosts > 0
LEFT JOIN 
    RankedPosts rp ON rp.PostRank = 1
ORDER BY 
    u.QuestionCount DESC, 
    tp.AssociatedPosts DESC, 
    rp.ViewCount DESC;
