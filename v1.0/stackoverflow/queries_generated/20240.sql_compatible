
WITH RankedPosts AS (
    SELECT p.Id AS PostId, 
           p.Title, 
           p.CreationDate, 
           p.Score,
           p.ViewCount,
           ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC) AS Rank,
           COUNT(c.Id) OVER (PARTITION BY p.Id) AS CommentCount
    FROM Posts p
    LEFT JOIN Comments c ON p.Id = c.PostId
    WHERE p.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '365 days' 
      AND p.Score > 0
),
UserStats AS (
    SELECT u.Id AS UserId, 
           u.Reputation,
           COALESCE(SUM(CASE WHEN b.Class = 1 THEN 1 ELSE 0 END), 0) AS GoldBadges,
           COALESCE(SUM(CASE WHEN b.Class = 2 THEN 1 ELSE 0 END), 0) AS SilverBadges,
           COALESCE(SUM(CASE WHEN b.Class = 3 THEN 1 ELSE 0 END), 0) AS BronzeBadges
    FROM Users u
    LEFT JOIN Badges b ON u.Id = b.UserId
    GROUP BY u.Id, u.Reputation
),
TopUsers AS (
    SELECT us.UserId,
           us.Reputation,
           us.GoldBadges,
           us.SilverBadges,
           us.BronzeBadges,
           RANK() OVER (ORDER BY us.Reputation DESC) AS UserRank
    FROM UserStats us
    WHERE us.Reputation > 0
),
CloseVotes AS (
    SELECT ph.UserId,
           ph.Comment AS CloseReason,
           COUNT(*) AS CloseCount
    FROM PostHistory ph
    WHERE ph.PostHistoryTypeId = 10
    GROUP BY ph.UserId, ph.Comment
    HAVING COUNT(*) > 1
),
AggregatedStats AS (
    SELECT p.PostId,
           COUNT(v.Id) AS VoteCount,
           AVG(v.BountyAmount) AS AvgBounty
    FROM Posts p
    LEFT JOIN Votes v ON p.Id = v.PostId AND v.VoteTypeId IN (2, 3) 
    GROUP BY p.PostId
)
SELECT rp.PostId, 
       rp.Title, 
       rp.CreationDate, 
       rp.Score, 
       rp.ViewCount,
       CASE 
           WHEN ru.UserId IS NOT NULL THEN 'Top User'
           ELSE 'Regular User'
       END AS UserType,
       a.VoteCount,
       a.AvgBounty,
       cu.CloseCount,
       CASE 
           WHEN cu.CloseCount IS NULL THEN 'No Close Votes'
           ELSE cu.CloseReason
       END AS MostCommonCloseReason
FROM RankedPosts rp
LEFT JOIN TopUsers ru ON rp.OwnerUserId = ru.UserId
LEFT JOIN AggregatedStats a ON rp.PostId = a.PostId
LEFT JOIN CloseVotes cu ON cu.UserId = rp.OwnerUserId
WHERE rp.Rank = 1 
  AND (rp.CommentCount IS NULL OR rp.CommentCount < 3)
ORDER BY rp.Score DESC, rp.ViewCount DESC
LIMIT 100;
