
WITH UserVoteCounts AS (
    SELECT 
        U.Id AS UserId,
        COUNT(CASE WHEN V.VoteTypeId = 2 THEN 1 END) AS UpVotes,
        COUNT(CASE WHEN V.VoteTypeId = 3 THEN 1 END) AS DownVotes,
        SUM(CASE WHEN V.VoteTypeId = 8 THEN V.BountyAmount ELSE 0 END) AS TotalBounty
    FROM Users U
    LEFT JOIN Votes V ON U.Id = V.UserId
    GROUP BY U.Id
),
PostDetails AS (
    SELECT 
        P.Id AS PostId,
        P.Title,
        P.Body,
        P.Score,
        P.ViewCount,
        P.CreationDate,
        P.AcceptedAnswerId,
        CASE 
            WHEN P.AcceptedAnswerId IS NOT NULL THEN 1 
            ELSE 0 
        END AS HasAcceptedAnswer,
        STRING_AGG(T.TagName, ', ') AS Tags
    FROM Posts P
    LEFT JOIN Tags T ON T.Id IN (SELECT UNNEST(STRING_TO_ARRAY(P.Tags, '>'))::int)
    GROUP BY P.Id, P.Title, P.Body, P.Score, P.ViewCount, P.CreationDate, P.AcceptedAnswerId
),
RankedPosts AS (
    SELECT 
        PD.PostId,
        PD.Title,
        PD.ViewCount,
        PD.Score,
        PD.CreationDate,
        PD.HasAcceptedAnswer,
        ROW_NUMBER() OVER (ORDER BY PD.Score DESC, PD.ViewCount DESC) AS PostRank
    FROM PostDetails PD
),
UserRanking AS (
    SELECT 
        U.Id AS UserId,
        U.DisplayName,
        U.Reputation,
        COALESCE(UVC.UpVotes, 0) AS UpVoteCount,
        COALESCE(UVC.DownVotes, 0) AS DownVoteCount,
        COALESCE(UVC.TotalBounty, 0) AS TotalBountyAmount,
        R.PostId,
        R.Title,
        R.Score,
        R.ViewCount,
        R.CreationDate,
        R.HasAcceptedAnswer,
        R.PostRank
    FROM Users U
    LEFT JOIN UserVoteCounts UVC ON U.Id = UVC.UserId
    LEFT JOIN RankedPosts R ON R.PostRank <= 10
)
SELECT 
    UR.UserId,
    UR.DisplayName,
    UR.Reputation,
    UR.UpVoteCount,
    UR.DownVoteCount,
    UR.TotalBountyAmount,
    COUNT(CASE WHEN UR.HasAcceptedAnswer = 1 THEN 1 END) AS CountOfAcceptedAnswers,
    COUNT(UR.PostId) AS CountOfPosts,
    COALESCE(ROUND(AVG(UR.Reputation) / NULLIF(COUNT(UR.PostId), 0), 2), 0) AS AvgPostReputation,
    MAX(UR.CreationDate) AS LatestPostDate
FROM UserRanking UR
GROUP BY UR.UserId, UR.DisplayName, UR.Reputation
HAVING COUNT(CASE WHEN UR.HasAcceptedAnswer = 1 THEN 1 END) > 0
   OR COUNT(UR.PostId) > 5
ORDER BY AvgPostReputation DESC, CountOfPosts DESC;
