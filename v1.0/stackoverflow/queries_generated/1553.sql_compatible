
WITH RankedPosts AS (
    SELECT 
        p.Id,
        p.Title,
        p.ViewCount,
        p.CreationDate,
        COUNT(DISTINCT c.Id) AS CommentCount,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVoteCount,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVoteCount,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS rn
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    WHERE 
        p.CreationDate >= DATEADD(year, -1, '2024-10-01')
    GROUP BY 
        p.Id, p.Title, p.ViewCount, p.CreationDate, p.OwnerUserId
),
TopPosts AS (
    SELECT 
        rp.Title,
        rp.ViewCount,
        rp.CommentCount,
        rp.UpVoteCount,
        rp.DownVoteCount,
        u.DisplayName,
        COALESCE(b.Class, 0) AS BadgeCount
    FROM 
        RankedPosts rp
    JOIN 
        Users u ON rp.OwnerUserId = u.Id
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    WHERE 
        rp.rn = 1
)
SELECT 
    tp.Title,
    tp.ViewCount,
    tp.CommentCount,
    tp.UpVoteCount,
    tp.DownVoteCount,
    tp.DisplayName,
    tp.BadgeCount,
    CASE 
        WHEN tp.UpVoteCount > tp.DownVoteCount THEN 'Positive Engagement'
        WHEN tp.UpVoteCount < tp.DownVoteCount THEN 'Negative Engagement'
        ELSE 'Neutral Engagement'
    END AS EngagementStatus
FROM 
    TopPosts tp
WHERE 
    tp.BadgeCount > 0
ORDER BY 
    tp.ViewCount DESC
LIMIT 10
UNION ALL
SELECT 
    'No Engaged Posts Yet' AS Title,
    0 AS ViewCount,
    0 AS CommentCount,
    0 AS UpVoteCount,
    0 AS DownVoteCount,
    'N/A' AS DisplayName,
    0 AS BadgeCount,
    'Neutral Engagement' AS EngagementStatus
WHERE NOT EXISTS (
    SELECT 1 FROM TopPosts
);
