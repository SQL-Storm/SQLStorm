
WITH UserBadges AS (
    SELECT 
        U.Id AS UserId,
        U.DisplayName,
        COUNT(B.Id) AS BadgeCount,
        SUM(CASE WHEN B.Class = 1 THEN 1 ELSE 0 END) AS GoldBadges,
        SUM(CASE WHEN B.Class = 2 THEN 1 ELSE 0 END) AS SilverBadges,
        SUM(CASE WHEN B.Class = 3 THEN 1 ELSE 0 END) AS BronzeBadges
    FROM 
        Users U
    LEFT JOIN 
        Badges B ON U.Id = B.UserId
    GROUP BY 
        U.Id, U.DisplayName
),
PostStats AS (
    SELECT 
        P.OwnerUserId,
        COUNT(CASE WHEN P.PostTypeId = 1 THEN 1 END) AS Questions,
        COUNT(CASE WHEN P.PostTypeId = 2 THEN 1 END) AS Answers,
        SUM(COALESCE(P.ViewCount, 0)) AS TotalViews,
        SUM(COALESCE(P.Score, 0)) AS TotalScore
    FROM 
        Posts P
    GROUP BY 
        P.OwnerUserId
),
RecentActivity AS (
    SELECT 
        U.Id AS UserId,
        U.DisplayName,
        MAX(COALESCE(P.CreationDate, C.CreationDate)) AS LastActivity
    FROM 
        Users U
    LEFT JOIN 
        Posts P ON U.Id = P.OwnerUserId
    LEFT JOIN 
        Comments C ON U.Id = C.UserId
    GROUP BY 
        U.Id, U.DisplayName
)
SELECT 
    U.DisplayName,
    UB.BadgeCount,
    UB.GoldBadges,
    UB.SilverBadges,
    UB.BronzeBadges,
    PS.Questions,
    PS.Answers,
    PS.TotalViews,
    PS.TotalScore,
    RA.LastActivity,
    CASE 
        WHEN PS.TotalViews IS NULL THEN 'No Posts'
        WHEN PS.TotalViews = 0 THEN 'Inactive User'
        WHEN PS.TotalViews < 100 THEN 'Novice'
        WHEN PS.TotalViews < 1000 THEN 'Intermediate'
        ELSE 'Expert'
    END AS ActivityLevel,
    STRING_AGG(DISTINCT TRIM(T.TagName), ', ') AS AssociatedTags
FROM 
    Users U
LEFT JOIN 
    UserBadges UB ON U.Id = UB.UserId
LEFT JOIN 
    PostStats PS ON U.Id = PS.OwnerUserId
LEFT JOIN 
    RecentActivity RA ON U.Id = RA.UserId
LEFT JOIN 
    Posts P ON U.Id = P.OwnerUserId 
LEFT JOIN 
    LATERAL STRING_TO_ARRAY(P.Tags, ',') AS T 
GROUP BY 
    U.DisplayName, UB.BadgeCount, UB.GoldBadges, UB.SilverBadges, UB.BronzeBadges, PS.Questions, PS.Answers, 
    PS.TotalViews, PS.TotalScore, RA.LastActivity
ORDER BY 
    PS.TotalScore DESC, U.Reputation DESC
LIMIT 50;
