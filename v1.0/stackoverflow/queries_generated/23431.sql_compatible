
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.Score,
        p.ViewCount,
        p.CreationDate,
        ROW_NUMBER() OVER (PARTITION BY p.PostTypeId ORDER BY p.Score DESC) AS Rank,
        COALESCE(NULLIF(u.Location, ''), 'Unknown Location') AS UserLocation
    FROM Posts p
    LEFT JOIN Users u ON p.OwnerUserId = u.Id
    WHERE p.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 year'
),
TopPosts AS (
    SELECT 
        rp.PostId,
        rp.Title,
        rp.Score,
        rp.ViewCount,
        rp.Rank,
        rp.UserLocation,
        CASE 
            WHEN rp.Rank <= 10 THEN 'Top 10'
            ELSE 'Other'
        END AS RankingCategory
    FROM RankedPosts rp
),
PostComments AS (
    SELECT 
        c.PostId,
        COUNT(*) AS CommentCount,
        STRING_AGG(c.Text, ' | ') AS Comments
    FROM Comments c
    GROUP BY c.PostId
),
PostHistoryDetails AS (
    SELECT 
        ph.PostId,
        SUM(CASE WHEN ph.PostHistoryTypeId IN (10, 11) THEN 1 ELSE 0 END) AS CloseReopenCount,
        MAX(ph.CreationDate) AS LastHistoryDate
    FROM PostHistory ph
    GROUP BY ph.PostId
)
SELECT 
    tp.PostId,
    tp.Title,
    tp.Score,
    COALESCE(pc.CommentCount, 0) AS TotalComments,
    tp.ViewCount,
    tp.UserLocation,
    tp.RankingCategory,
    COALESCE(phd.CloseReopenCount, 0) AS CloseReopenCount,
    CASE 
        WHEN phd.LastHistoryDate IS NOT NULL THEN 'Has History'
        ELSE 'No History'
    END AS HistoryStatus,
    COUNT(DISTINCT v.UserId) AS UniqueVoteCount
FROM TopPosts tp
LEFT JOIN PostComments pc ON tp.PostId = pc.PostId
LEFT JOIN PostHistoryDetails phd ON tp.PostId = phd.PostId
LEFT JOIN Votes v ON tp.PostId = v.PostId AND v.VoteTypeId IN (2, 3) 
GROUP BY 
    tp.PostId, 
    tp.Title, 
    tp.Score, 
    tp.ViewCount, 
    tp.UserLocation, 
    tp.RankingCategory,
    phd.CloseReopenCount,
    phd.LastHistoryDate
HAVING 
    COALESCE(pc.CommentCount, 0) > 0 OR tp.Score > 50
ORDER BY 
    tp.RankingCategory DESC, 
    tp.Score DESC, 
    tp.ViewCount DESC;
