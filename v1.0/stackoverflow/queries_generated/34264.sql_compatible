
WITH RecursivePosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.PostTypeId,
        p.CreationDate,
        p.OwnerUserId,
        1 AS Depth
    FROM 
        Posts p
    WHERE 
        p.ParentId IS NULL
    UNION ALL
    SELECT 
        p.Id,
        p.Title,
        p.PostTypeId,
        p.CreationDate,
        p.OwnerUserId,
        rp.Depth + 1
    FROM 
        Posts p
    INNER JOIN 
        RecursivePosts rp ON p.ParentId = rp.PostId
),
PostVoteStatistics AS (
    SELECT 
        v.PostId,
        COUNT(CASE WHEN v.VoteTypeId = 2 THEN 1 END) AS UpVotes,
        COUNT(CASE WHEN v.VoteTypeId = 3 THEN 1 END) AS DownVotes
    FROM 
        Votes v
    GROUP BY 
        v.PostId
),
RecentPostEditHistory AS (
    SELECT 
        ph.PostId,
        ph.CreationDate,
        ph.UserId,
        ph.Comment,
        DENSE_RANK() OVER (PARTITION BY ph.PostId ORDER BY ph.CreationDate DESC) AS EditRank
    FROM 
        PostHistory ph
    WHERE 
        ph.PostHistoryTypeId IN (4, 5) 
),
PopularTags AS (
    SELECT 
        t.TagName,
        COUNT(pt.PostId) AS TagUsage
    FROM 
        Tags t
    LEFT JOIN 
        Posts pt ON pt.Tags LIKE CONCAT('%', t.TagName, '%')
    GROUP BY 
        t.TagName
    HAVING 
        COUNT(pt.PostId) > 10
),
UserStats AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        SUM(COALESCE(ps.UpVotes, 0)) AS TotalUpVotes,
        SUM(COALESCE(ps.DownVotes, 0)) AS TotalDownVotes,
        COUNT(DISTINCT p.Id) AS PostsCreated
    FROM 
        Users u
    LEFT JOIN 
        Posts p ON p.OwnerUserId = u.Id
    LEFT JOIN 
        PostVoteStatistics ps ON ps.PostId = p.Id
    GROUP BY 
        u.Id, u.DisplayName
)
SELECT 
    rp.PostId,
    rp.Title,
    rp.Depth,
    pvs.UpVotes,
    pvs.DownVotes,
    phe.CreationDate AS LastEditDate,
    phe.UserId AS LastEditorId,
    phe.Comment AS LastEditComment,
    ut.UserId AS OwnerId,
    ut.DisplayName AS OwnerName,
    tt.TagName,
    ut.TotalUpVotes,
    ut.TotalDownVotes,
    ut.PostsCreated
FROM 
    RecursivePosts rp
LEFT JOIN 
    PostVoteStatistics pvs ON pvs.PostId = rp.PostId
LEFT JOIN 
    RecentPostEditHistory phe ON phe.PostId = rp.PostId AND phe.EditRank = 1
LEFT JOIN 
    Users ut ON ut.Id = rp.OwnerUserId
LEFT JOIN 
    PopularTags tt ON tt.TagUsage > 5 
WHERE 
    rp.Depth <= 2
ORDER BY 
    rp.CreationDate DESC;
