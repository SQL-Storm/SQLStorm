
WITH PostActivity AS (
    SELECT 
        p.Id AS PostId,
        p.OwnerUserId,
        p.PostTypeId,
        COUNT(c.Id) AS CommentCount,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS Upvotes,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS Downvotes,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS PostRank,
        p.Title,
        COALESCE(p.ViewCount, 0) * 1.5 AS AdjustedViewCount
    FROM Posts p
    LEFT JOIN Comments c ON c.PostId = p.Id
    LEFT JOIN Votes v ON v.PostId = p.Id
    WHERE p.CreationDate > TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 year'
    GROUP BY p.Id, p.OwnerUserId, p.PostTypeId, p.Title, p.ViewCount
),
UserActivity AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        u.Reputation,
        COUNT(DISTINCT p.Id) AS PostCount,
        SUM(CASE WHEN b.Class = 1 THEN 1 ELSE 0 END) AS GoldBadges,
        SUM(CASE WHEN b.Class = 2 THEN 1 ELSE 0 END) AS SilverBadges,
        SUM(CASE WHEN b.Class = 3 THEN 1 ELSE 0 END) AS BronzeBadges,
        COALESCE(SUM(pa.CommentCount), 0) AS TotalComments,
        COALESCE(SUM(pa.AdjustedViewCount), 0) AS TotalAdjustedViews
    FROM Users u
    LEFT JOIN Posts p ON p.OwnerUserId = u.Id
    LEFT JOIN Badges b ON b.UserId = u.Id
    LEFT JOIN PostActivity pa ON pa.OwnerUserId = u.Id
    WHERE u.Reputation > 1000 OR (u.CreationDate > TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 month' AND u.Reputation > 0)
    GROUP BY u.Id, u.DisplayName, u.Reputation
)
SELECT 
    ua.UserId,
    ua.DisplayName,
    ua.Reputation,
    ua.PostCount,
    ua.GoldBadges,
    ua.SilverBadges,
    ua.BronzeBadges,
    ua.TotalComments,
    ua.TotalAdjustedViews,
    CASE 
        WHEN u.TotalAdjustedViews IS NULL THEN 'No Activity'
        WHEN u.TotalAdjustedViews > 1000 THEN 'Highly Engaged'
        ELSE 'Moderately Engaged'
    END AS EngagementLevel
FROM UserActivity ua
FULL OUTER JOIN (
    SELECT 
        OwnerUserId AS UserId,
        SUM(AdjustedViewCount) AS TotalAdjustedViews
    FROM PostActivity
    GROUP BY OwnerUserId
) u ON ua.UserId = u.UserId
ORDER BY ua.Reputation DESC NULLS LAST, ua.PostCount DESC;
