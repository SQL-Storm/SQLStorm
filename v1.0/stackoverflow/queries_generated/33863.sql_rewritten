WITH RECURSIVE UserReputationCTE AS (
    SELECT 
        Id AS UserId, 
        Reputation, 
        CreationDate, 
        DisplayName,
        1 AS Level
    FROM 
        Users
    WHERE 
        Reputation > 1000
    
    UNION ALL
    
    SELECT 
        u.Id, 
        u.Reputation, 
        u.CreationDate, 
        u.DisplayName,
        Level + 1
    FROM 
        Users u
    INNER JOIN 
        UserReputationCTE ur ON u.Reputation < ur.Reputation
    WHERE 
        ur.Level < 5  
), 
PostStats AS (
    SELECT 
        p.OwnerUserId, 
        COUNT(*) AS PostCount, 
        SUM(p.Score) AS TotalScore,
        AVG(p.ViewCount) AS AvgViewCount,
        MAX(p.CreationDate) AS LatestPostDate
    FROM 
        Posts p
    GROUP BY 
        p.OwnerUserId
),
UserBadges AS (
    SELECT 
        b.UserId, 
        COUNT(*) AS BadgeCount, 
        STRING_AGG(b.Name, ', ') AS BadgeNames
    FROM 
        Badges b
    GROUP BY 
        b.UserId
)
SELECT 
    u.Id AS UserId,
    u.DisplayName, 
    COALESCE(rs.Reputation, 0) AS Reputation,
    COALESCE(ps.PostCount, 0) AS PostCount,
    COALESCE(ps.TotalScore, 0) AS TotalScore,
    COALESCE(ps.AvgViewCount, 0) AS AvgViewCount,
    COALESCE(ub.BadgeCount, 0) AS BadgeCount,
    COALESCE(ub.BadgeNames, 'No badges') AS BadgeNames,
    COALESCE(r.LatestPostDate, 'No posts') AS LatestPostDate,
    COUNT(c.Id) AS CommentCount 
FROM 
    Users u
LEFT JOIN 
    UserReputationCTE rs ON u.Id = rs.UserId 
LEFT JOIN 
    PostStats ps ON u.Id = ps.OwnerUserId 
LEFT JOIN 
    UserBadges ub ON u.Id = ub.UserId 
LEFT JOIN 
    Comments c ON u.Id = c.UserId 
LEFT JOIN 
    (SELECT 
         OwnerUserId, 
         MAX(CreationDate) AS LatestPostDate 
     FROM 
         Posts 
     GROUP BY 
         OwnerUserId) r ON u.Id = r.OwnerUserId
WHERE 
    u.Reputation >= 0
GROUP BY 
    u.Id, u.DisplayName, rs.Reputation, ps.PostCount, ps.TotalScore, 
    ps.AvgViewCount, ub.BadgeCount, ub.BadgeNames, r.LatestPostDate
ORDER BY 
    COALESCE(rs.Reputation, 0) DESC, 
    COALESCE(ps.TotalScore, 0) DESC
LIMIT 50;