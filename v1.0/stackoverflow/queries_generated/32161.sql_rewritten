WITH RecursivePostHierarchy AS (
    SELECT 
        Id,
        ParentId,
        Title,
        CreationDate,
        1 AS Level
    FROM 
        Posts
    WHERE 
        ParentId IS NULL 
    
    UNION ALL
    
    SELECT 
        p.Id,
        p.ParentId,
        p.Title,
        p.CreationDate,
        Level + 1
    FROM 
        Posts p
    INNER JOIN 
        RecursivePostHierarchy r ON p.ParentId = r.Id
),

UserActivity AS (
    SELECT 
        u.Id AS UserId,
        COUNT(DISTINCT p.Id) AS TotalPosts,
        SUM(COALESCE(v.VoteTypeId = 2, 0)) AS Upvotes,
        SUM(COALESCE(v.VoteTypeId = 3, 0)) AS Downvotes,
        AVG(DATEDIFF(second, p.CreationDate, GETDATE())) AS AvgPostAge 
    FROM 
        Users u
    LEFT JOIN 
        Posts p ON u.Id = p.OwnerUserId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    GROUP BY 
        u.Id
),

TopUsers AS (
    SELECT 
        UserId,
        TotalPosts,
        Upvotes,
        Downvotes,
        AvgPostAge,
        RANK() OVER (ORDER BY TotalPosts DESC) AS RankByPosts,
        RANK() OVER (ORDER BY Upvotes DESC) AS RankByUpvotes
    FROM 
        UserActivity
    WHERE 
        TotalPosts > 0
),

PostClosedReasons AS (
    SELECT 
        p.Id AS PostId,
        ph.CreationDate AS ClosedDate,
        ph.Comment AS CloseReason
    FROM 
        PostHistory ph
    INNER JOIN 
        Posts p ON ph.PostId = p.Id
    WHERE 
        ph.PostHistoryTypeId = 10 
)

SELECT 
    u.DisplayName,
    p.Title AS QuestionTitle,
    p.CreationDate AS QuestionDate,
    answers.AnswerCount,
    COALESCE(c.ClosedDate, 'Not Closed') AS PostStatus,
    COALESCE(c.CloseReason, 'N/A') AS CloseReason,
    u.Reputation,
    tu.RankByPosts,
    tu.RankByUpvotes,
    CASE 
        WHEN tu.TotalPosts > 100 THEN 'Elite User'
        WHEN tu.TotalPosts BETWEEN 50 AND 100 THEN 'Experienced User'
        ELSE 'Novice User'
    END AS UserLevel
FROM 
    Posts p
LEFT JOIN 
    (SELECT 
        ParentId, 
        COUNT(*) AS AnswerCount 
     FROM 
        Posts 
     WHERE 
        PostTypeId = 2 
     GROUP BY 
        ParentId) answers ON p.Id = answers.ParentId
LEFT JOIN 
    Users u ON p.OwnerUserId = u.Id
LEFT JOIN 
    PostClosedReasons c ON p.Id = c.PostId
JOIN 
    TopUsers tu ON u.Id = tu.UserId
WHERE 
    p.PostTypeId = 1 
ORDER BY 
    p.CreationDate DESC
LIMIT 100;