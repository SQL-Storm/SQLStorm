
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.Body,
        p.CreationDate,
        p.Score,
        p.ViewCount,
        p.Tags,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC, p.CreationDate DESC) AS RankPerUser,
        p.OwnerUserId
    FROM 
        Posts p
    WHERE 
        p.PostTypeId = 1 
),
MostActiveUsers AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        u.Reputation,
        COUNT(p.Id) AS NumberOfPosts
    FROM 
        Users u
    JOIN 
        Posts p ON u.Id = p.OwnerUserId
    WHERE 
        p.PostTypeId = 1 
    GROUP BY 
        u.Id, u.DisplayName, u.Reputation
    HAVING 
        COUNT(p.Id) > 5 
),
TopTags AS (
    SELECT 
        t.TagName,
        COUNT(p.Id) AS TagPostCount
    FROM 
        Tags t
    JOIN 
        Posts p ON p.Tags LIKE '%' || t.TagName || '%'
    WHERE 
        p.PostTypeId = 1 
    GROUP BY 
        t.TagName
    ORDER BY 
        TagPostCount DESC
    LIMIT 10 
),
UserTopPosts AS (
    SELECT 
        r.PostId,
        r.Title,
        r.Score,
        r.ViewCount,
        r.CreationDate,
        u.DisplayName AS OwnerDisplayName
    FROM 
        RankedPosts r
    JOIN 
        Users u ON r.OwnerUserId = u.Id
    WHERE 
        r.RankPerUser <= 3 
)

SELECT 
    u.DisplayName AS UserName,
    u.Reputation,
    u.NumberOfPosts,
    p.Title,
    p.Score,
    p.ViewCount,
    p.CreationDate,
    tt.TagName AS TopTag,
    ROW_NUMBER() OVER (PARTITION BY u.DisplayName ORDER BY p.Score DESC) AS PostRank
FROM 
    MostActiveUsers u
JOIN 
    UserTopPosts p ON u.UserId = p.OwnerDisplayName
JOIN 
    TopTags tt ON p.Title LIKE '%' || tt.TagName || '%'
ORDER BY 
    u.Reputation DESC, p.Score DESC;
