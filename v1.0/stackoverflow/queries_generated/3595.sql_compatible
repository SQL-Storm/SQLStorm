
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Score,
        p.ViewCount,
        p.OwnerUserId,
        RANK() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS PostRank
    FROM 
        Posts p
    WHERE 
        p.CreationDate >= CAST('2024-10-01 12:34:56' AS TIMESTAMP) - INTERVAL '1 year'
),
UserActivity AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        u.Reputation,
        COALESCE(SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END), 0) AS UpVotesCount,
        COALESCE(SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END), 0) AS DownVotesCount
    FROM 
        Users u
    LEFT JOIN 
        Votes v ON u.Id = v.UserId
    GROUP BY 
        u.Id, u.DisplayName, u.Reputation
),
FilteredPosts AS (
    SELECT 
        rp.PostId,
        rp.Title,
        rp.CreationDate,
        rp.Score,
        rp.ViewCount,
        ua.DisplayName AS OwnerDisplayName,
        ua.Reputation,
        ua.UpVotesCount,
        ua.DownVotesCount
    FROM 
        RankedPosts rp
    JOIN 
        UserActivity ua ON rp.OwnerUserId = ua.UserId
    WHERE 
        rp.PostRank = 1
        AND ua.Reputation > 100
),
FinalResults AS (
    SELECT 
        fp.*,
        COALESCE(ph.Comment, 'No comments') AS LastComment,
        ph.CreationDate AS LastCommentDate
    FROM 
        FilteredPosts fp
    LEFT JOIN 
        Comments ph ON fp.PostId = ph.PostId
    WHERE 
        ph.CreationDate = (
            SELECT MAX(CreationDate) 
            FROM Comments 
            WHERE PostId = fp.PostId
        )
)
SELECT 
    fr.*,
    CASE 
        WHEN fr.UpVotesCount > fr.DownVotesCount THEN 'Positive'
        WHEN fr.UpVotesCount < fr.DownVotesCount THEN 'Negative'
        ELSE 'Neutral'
    END AS VoteSentiment
FROM 
    FinalResults fr
ORDER BY 
    fr.Score DESC, fr.ViewCount DESC;
