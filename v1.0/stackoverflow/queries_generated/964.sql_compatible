
WITH PostVoteCounts AS (
    SELECT 
        PostId,
        COUNT(CASE WHEN VoteTypeId = 2 THEN 1 END) AS UpVotes,
        COUNT(CASE WHEN VoteTypeId = 3 THEN 1 END) AS DownVotes
    FROM Votes
    GROUP BY PostId
),
TopUsers AS (
    SELECT 
        U.Id AS UserId,
        U.DisplayName,
        SUM(COALESCE(U.UpVotes, 0)) AS TotalUpVotes,
        SUM(COALESCE(U.DownVotes, 0)) AS TotalDownVotes,
        RANK() OVER (ORDER BY SUM(COALESCE(U.Reputation, 0)) DESC) AS ReputationRank
    FROM Users U
    JOIN Posts P ON U.Id = P.OwnerUserId
    WHERE U.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 year'
    GROUP BY U.Id, U.DisplayName
),
ClosedPosts AS (
    SELECT 
        PH.PostId,
        P.Title,
        P.CreationDate,
        PH.UserDisplayName,
        PH.CreationDate AS CloseDate,
        CT.Name AS CloseReason
    FROM PostHistory PH
    JOIN Posts P ON PH.PostId = P.Id
    JOIN CloseReasonTypes CT ON CAST(PH.Comment AS INTEGER) = CT.Id
    WHERE PH.PostHistoryTypeId = 10
),
TopClosedPosts AS (
    SELECT 
        CP.Title,
        COUNT(DISTINCT CP.PostId) AS CloseCount,
        MAX(CP.CloseDate) AS LastClosed
    FROM ClosedPosts CP
    GROUP BY CP.Title
    HAVING COUNT(DISTINCT CP.PostId) > 5
),
FinalResults AS (
    SELECT 
        PU.UserId,
        PU.DisplayName,
        PV.UpVotes - PV.DownVotes AS NetVotes,
        TCP.CloseCount,
        TCP.LastClosed
    FROM TopUsers PU
    LEFT JOIN PostVoteCounts PV ON PU.UserId = PV.PostId
    LEFT JOIN TopClosedPosts TCP ON PV.PostId = TCP.PostId
    WHERE PU.ReputationRank <= 10
)
SELECT 
    U.DisplayName,
    U.TotalUpVotes,
    U.TotalDownVotes,
    COALESCE(TCP.CloseCount, 0) AS CloseCount,
    TCP.LastClosed,
    CASE 
        WHEN TCP.CloseCount IS NULL THEN 'No Closures'
        ELSE 'Has Closures'
    END AS ClosureStatus
FROM TopUsers U
LEFT JOIN TopClosedPosts TCP ON U.DisplayName = TCP.Title
WHERE U.TotalUpVotes > 100 OR U.TotalDownVotes > 50
ORDER BY U.TotalUpVotes DESC, U.TotalDownVotes DESC;
