WITH RecentPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        u.DisplayName AS OwnerName,
        COUNT(c.Id) AS CommentCount,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS Upvotes,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS Downvotes,
        STRING_AGG(DISTINCT t.TagName, ', ') AS Tags
    FROM 
        Posts p
    JOIN 
        Users u ON p.OwnerUserId = u.Id
    LEFT JOIN 
        Comments c ON c.PostId = p.Id
    LEFT JOIN 
        Votes v ON v.PostId = p.Id
    LEFT JOIN 
        STRING_TO_ARRAY(SUBSTRING(p.Tags, 2, LENGTH(p.Tags) - 2), '><') tags_arr ON TRUE
    LEFT JOIN 
        Tags t ON t.TagName = tags_arr
    WHERE 
        p.CreationDate > cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '30 days'
    GROUP BY 
        p.Id, u.DisplayName
),
PopularPosts AS (
    SELECT 
        rp.PostId,
        rp.Title,
        rp.CreationDate,
        rp.OwnerName,
        rp.CommentCount,
        rp.Upvotes,
        rp.Downvotes,
        rp.Tags,
        ROW_NUMBER() OVER (ORDER BY rp.Upvotes DESC, rp.CommentCount DESC) AS PopularityRank
    FROM 
        RecentPosts rp
)
SELECT 
    pp.PostId,
    pp.Title,
    pp.CreationDate,
    pp.OwnerName,
    pp.CommentCount,
    pp.Upvotes,
    pp.Downvotes,
    pp.Tags
FROM 
    PopularPosts pp
WHERE 
    pp.PopularityRank <= 10
ORDER BY 
    pp.Upvotes DESC, pp.CommentCount DESC;