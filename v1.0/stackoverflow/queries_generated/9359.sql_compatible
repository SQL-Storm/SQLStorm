
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.Score,
        p.ViewCount,
        u.DisplayName AS OwnerDisplayName,
        ROW_NUMBER() OVER (PARTITION BY p.PostTypeId ORDER BY p.Score DESC, p.CreationDate DESC) AS Rank
    FROM 
        Posts p
    JOIN 
        Users u ON p.OwnerUserId = u.Id
    WHERE 
        p.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 year'
),
TopPosts AS (
    SELECT 
        PostId,
        Title,
        Score,
        ViewCount,
        OwnerDisplayName
    FROM 
        RankedPosts
    WHERE 
        Rank <= 5
),
PostEngagement AS (
    SELECT 
        tp.PostId,
        tp.Title,
        tp.OwnerDisplayName,
        COALESCE(c.CommentCount, 0) AS TotalComments,
        COALESCE(b.BadgeCount, 0) AS TotalBadges,
        tp.Score * 1.0 / NULLIF(tp.ViewCount, 0) AS EngagementScore
    FROM 
        TopPosts tp
    LEFT JOIN (
        SELECT 
            PostId, 
            COUNT(*) AS CommentCount 
        FROM 
            Comments 
        GROUP BY 
            PostId
    ) c ON tp.PostId = c.PostId
    LEFT JOIN (
        SELECT 
            UserId, 
            COUNT(*) AS BadgeCount 
        FROM 
            Badges 
        GROUP BY 
            UserId
    ) b ON tp.OwnerDisplayName = b.UserId
)
SELECT 
    pe.PostId,
    pe.Title,
    pe.OwnerDisplayName,
    pe.TotalComments,
    pe.TotalBadges,
    pe.EngagementScore
FROM 
    PostEngagement pe
ORDER BY 
    pe.EngagementScore DESC;
