
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.Body,
        u.DisplayName AS OwnerDisplayName,
        p.CreationDate,
        COUNT(c.Id) AS CommentCount,
        COUNT(DISTINCT v.Id) AS VoteCount, 
        ROW_NUMBER() OVER (PARTITION BY p.Id ORDER BY p.CreationDate DESC) AS rn
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    LEFT JOIN 
        Users u ON p.OwnerUserId = u.Id
    WHERE 
        p.PostTypeId = 1  
    GROUP BY 
        p.Id, u.DisplayName, p.Title, p.Body, p.CreationDate
),

ProcessedPosts AS (
    SELECT
        rp.PostId,
        rp.Title,
        rp.Body,
        rp.OwnerDisplayName,
        rp.CreationDate,
        rp.CommentCount,
        rp.VoteCount,
        ARRAY_AGG(DISTINCT SUBSTRING(t.TagName, 1, 20)) AS TopTags
    FROM 
        RankedPosts rp
    LEFT JOIN 
        LATERAL (
            SELECT 
                SUBSTRING(tg.Tags FROM '\w+') AS TagName
            FROM 
                Posts p
            CROSS JOIN 
                UNNEST(STRING_TO_ARRAY(p.Tags, ',')) AS tg(Tag)
            WHERE 
                p.Id = rp.PostId
            LIMIT 5
        ) t ON true
    WHERE 
        rp.rn = 1
    GROUP BY 
        rp.PostId, rp.Title, rp.Body, rp.OwnerDisplayName, rp.CreationDate, rp.CommentCount, rp.VoteCount
)

SELECT 
    pp.PostId,
    pp.Title,
    pp.Body,
    pp.OwnerDisplayName,
    pp.CreationDate,
    pp.CommentCount,
    pp.VoteCount,
    CASE 
        WHEN pp.VoteCount > 50 THEN 'High Engagement'
        WHEN pp.VoteCount BETWEEN 20 AND 50 THEN 'Moderate Engagement'
        ELSE 'Low Engagement' 
    END AS EngagementLevel,
    STRING_AGG(pt.TopTags, ', ') AS TagsSummary
FROM 
    ProcessedPosts pp
LEFT JOIN 
    PostLinks pl ON pp.PostId = pl.PostId
LEFT JOIN 
    Posts rp ON pl.RelatedPostId = rp.Id
LEFT JOIN 
    LATERAL (
        SELECT 
            DISTINCT t.TagName 
        FROM 
            Tags t 
        WHERE 
            t.ExcerptPostId = pp.PostId 
        ORDER BY 
            t.Count DESC 
        LIMIT 3
    ) pt ON true
GROUP BY 
    pp.PostId, pp.Title, pp.Body, pp.OwnerDisplayName, pp.CreationDate, pp.CommentCount, pp.VoteCount
ORDER BY 
    pp.VoteCount DESC;
