
WITH TagStatistics AS (
    SELECT 
        t.TagName,
        COUNT(DISTINCT p.Id) AS PostCount,
        SUM(CASE WHEN p.PostTypeId = 1 THEN 1 ELSE 0 END) AS QuestionCount,
        SUM(CASE WHEN p.PostTypeId = 2 THEN 1 ELSE 0 END) AS AnswerCount,
        AVG(p.Score) AS AverageScore
    FROM 
        Tags AS t
    JOIN 
        Posts AS p ON ',' || t.TagName || ',' LIKE '%,' || SUBSTRING(p.Tags FROM 2 FOR LENGTH(p.Tags) - 2) || ',%'
    GROUP BY 
        t.TagName
),
UserEngagement AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COUNT(DISTINCT p.Id) AS TotalPosts,
        SUM(c.Score) AS TotalCommentScore,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS Upvotes,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS Downvotes
    FROM 
        Users AS u
    LEFT JOIN 
        Posts AS p ON p.OwnerUserId = u.Id
    LEFT JOIN 
        Comments AS c ON c.UserId = u.Id
    LEFT JOIN 
        Votes AS v ON v.UserId = u.Id
    GROUP BY 
        u.Id, u.DisplayName
),
PostHistoryCounts AS (
    SELECT 
        ph.PostId,
        ph.PostHistoryTypeId,
        COUNT(*) AS EditCount
    FROM 
        PostHistory AS ph
    WHERE 
        ph.PostHistoryTypeId IN (4, 5, 6)  
    GROUP BY 
        ph.PostId, ph.PostHistoryTypeId
)
SELECT 
    ts.TagName,
    us.DisplayName,
    us.TotalPosts,
    us.TotalCommentScore,
    us.Upvotes,
    us.Downvotes,
    COALESCE(SUM(phc.EditCount), 0) AS TotalEdits,
    ts.PostCount,
    ts.QuestionCount,
    ts.AnswerCount,
    ts.AverageScore
FROM 
    TagStatistics AS ts
JOIN 
    UserEngagement AS us ON 1=1  
LEFT JOIN 
    PostHistoryCounts AS phc ON phc.PostId IN (
        SELECT p.Id FROM Posts p 
        WHERE ',' || ts.TagName || ',' LIKE '%,' || SUBSTRING(p.Tags FROM 2 FOR LENGTH(p.Tags) - 2) || ',%'
    )
GROUP BY 
    ts.TagName, us.DisplayName, us.TotalPosts, us.TotalCommentScore, us.Upvotes, us.Downvotes, ts.PostCount, ts.QuestionCount, ts.AnswerCount, ts.AverageScore
ORDER BY 
    ts.PostCount DESC, us.TotalPosts DESC;
