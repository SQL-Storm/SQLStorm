
WITH UserStats AS (
    SELECT 
        u.Id AS UserId,
        COUNT(DISTINCT p.Id) AS PostCount,
        SUM(COALESCE(p.UpVotes, 0)) AS TotalUpVotes,
        SUM(COALESCE(p.DownVotes, 0)) AS TotalDownVotes,
        SUM(COALESCE(c.CommentsCount, 0)) AS TotalComments
    FROM 
        Users u
    LEFT JOIN 
        Posts p ON u.Id = p.OwnerUserId
    LEFT JOIN 
        (SELECT PostId, COUNT(*) AS CommentsCount FROM Comments GROUP BY PostId) c ON p.Id = c.PostId
    GROUP BY 
        u.Id
),
PostStats AS (
    SELECT 
        p.Id AS PostId,
        p.PostTypeId,
        COUNT(DISTINCT v.Id) AS VoteCount,
        COUNT(DISTINCT c.Id) AS CommentCount,
        p.OwnerUserId
    FROM 
        Posts p
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    GROUP BY 
        p.Id, p.PostTypeId, p.OwnerUserId
),
TagStats AS (
    SELECT 
        t.Id AS TagId,
        t.TagName,
        SUM(p.ViewCount) AS TotalViews,
        COUNT(DISTINCT p.Id) AS PostCount
    FROM 
        Tags t
    LEFT JOIN 
        Posts p ON p.Tags LIKE CONCAT('%', t.TagName, '%')
    GROUP BY 
        t.Id, t.TagName
)

SELECT 
    u.UserId,
    u.PostCount,
    u.TotalUpVotes,
    u.TotalDownVotes,
    u.TotalComments,
    p.PostId,
    p.PostTypeId,
    p.VoteCount,
    p.CommentCount,
    t.TagId,
    t.TagName,
    t.TotalViews,
    t.PostCount AS TagPostCount
FROM 
    UserStats u
JOIN 
    PostStats p ON u.UserId = p.OwnerUserId
JOIN 
    TagStats t ON p.PostId IN (SELECT Id FROM Posts WHERE Tags LIKE CONCAT('%', t.TagName, '%'))
ORDER BY 
    u.TotalUpVotes DESC, p.VoteCount DESC, t.TotalViews DESC
FETCH FIRST 100 ROWS ONLY;
