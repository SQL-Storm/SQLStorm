WITH RecursivePostHierarchy AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.OwnerUserId,
        p.ParentId,
        1 AS Level
    FROM 
        Posts p
    WHERE 
        p.ParentId IS NULL
    
    UNION ALL
    
    SELECT 
        p.Id,
        p.Title,
        p.OwnerUserId,
        p.ParentId,
        Level + 1
    FROM 
        Posts p
    INNER JOIN 
        RecursivePostHierarchy rph ON p.ParentId = rph.PostId
),
UserReputation AS (
    SELECT 
        u.Id AS UserId,
        u.Reputation,
        u.DisplayName,
        COALESCE(SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END), 0) AS UpVotes,
        COALESCE(SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END), 0) AS DownVotes
    FROM 
        Users u
    LEFT JOIN 
        Votes v ON u.Id = v.UserId
    GROUP BY 
        u.Id
),
PostStatistics AS (
    SELECT 
        p.Id AS PostId,
        COUNT(c.Id) AS CommentCount,
        COUNT(DISTINCT ph.UserId) AS EditorCount,
        SUM(v.BountyAmount) as TotalBounty
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        PostHistory ph ON p.Id = ph.PostId AND ph.PostHistoryTypeId IN (4, 5) 
    LEFT JOIN 
        Votes v ON p.Id = v.PostId AND v.VoteTypeId IN (8, 9) 
    WHERE 
        p.CreationDate > cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 year'
    GROUP BY 
        p.Id
),
FinalStatistics AS (
    SELECT 
        p.Title,
        p.OwnerUserId,
        ps.CommentCount,
        ps.EditorCount,
        ps.TotalBounty,
        ur.Reputation AS OwnerReputation,
        (ur.UpVotes - ur.DownVotes) AS VoteScore,
        ROW_NUMBER() OVER (ORDER BY ps.CommentCount DESC) AS Rank
    FROM 
        PostStatistics ps
    JOIN 
        Posts p ON ps.PostId = p.Id
    JOIN 
        UserReputation ur ON p.OwnerUserId = ur.UserId
)

SELECT 
    fs.Title,
    fs.OwnerUserId,
    fs.CommentCount,
    fs.EditorCount,
    fs.TotalBounty,
    fs.OwnerReputation,
    fs.VoteScore,
    fs.Rank
FROM 
    FinalStatistics fs
WHERE 
    fs.VoteScore > 0
    AND fs.EditorCount > 1
    AND fs.CommentCount > 10
ORDER BY 
    fs.Rank;