
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.Body,
        p.CreationDate,
        p.ViewCount,
        p.Score,
        u.DisplayName AS OwnerDisplayName,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS Rank
    FROM 
        Posts p
    JOIN 
        Users u ON p.OwnerUserId = u.Id
    WHERE 
        p.PostTypeId = 1  
)

SELECT 
    rp.OwnerDisplayName,
    COUNT(*) AS TotalQuestions,
    AVG(rp.ViewCount) AS AvgViews,
    AVG(rp.Score) AS AvgScore,
    STRING_AGG(DISTINCT t.TagName, ', ') AS Tags,
    MAX(rp.CreationDate) AS LastQuestionDate
FROM 
    RankedPosts rp
JOIN 
    (SELECT 
        p.Id AS PostId, 
        STRING_AGG(SUBSTRING(tag.TagName, 2, LENGTH(tag.TagName) - 2), ', ') AS TagName
     FROM 
        Posts p
     CROSS JOIN 
        UNNEST(string_to_array(SUBSTRING(p.Tags, 2, LENGTH(p.Tags) - 2), '><')) AS tag
     GROUP BY 
        p.Id) t ON rp.PostId = t.PostId
WHERE 
    rp.Rank = 1  
GROUP BY 
    rp.OwnerDisplayName
ORDER BY 
    TotalQuestions DESC
LIMIT 10;
