WITH UserBadgeCounts AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COUNT(b.Id) AS BadgeCount,
        SUM(CASE WHEN b.Class = 1 THEN 1 ELSE 0 END) AS GoldBadges,
        SUM(CASE WHEN b.Class = 2 THEN 1 ELSE 0 END) AS SilverBadges,
        SUM(CASE WHEN b.Class = 3 THEN 1 ELSE 0 END) AS BronzeBadges
    FROM 
        Users u
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    GROUP BY 
        u.Id, u.DisplayName
),
PostStatistics AS (
    SELECT 
        p.OwnerUserId,
        COUNT(p.Id) AS PostCount,
        SUM(CASE WHEN p.PostTypeId = 1 THEN 1 ELSE 0 END) AS Questions,
        SUM(CASE WHEN p.PostTypeId = 2 THEN 1 ELSE 0 END) AS Answers,
        SUM(p.Score) AS TotalScore,
        SUM(p.ViewCount) AS TotalViews
    FROM 
        Posts p
    GROUP BY 
        p.OwnerUserId
),
UserDetails AS (
    SELECT 
        u.Id AS UserId,
        u.Reputation,
        u.CreationDate,
        u.LastAccessDate,
        u.Location,
        ub.BadgeCount,
        ub.GoldBadges,
        ub.SilverBadges,
        ub.BronzeBadges,
        ps.PostCount,
        ps.Questions,
        ps.Answers,
        ps.TotalScore,
        ps.TotalViews
    FROM 
        Users u
    LEFT JOIN 
        UserBadgeCounts ub ON u.Id = ub.UserId
    LEFT JOIN 
        PostStatistics ps ON u.Id = ps.OwnerUserId
)

SELECT 
    ud.UserId,
    ud.DisplayName,
    ud.Reputation,
    ud.CreationDate,
    ud.LastAccessDate,
    ud.Location,
    ud.BadgeCount,
    ud.GoldBadges,
    ud.SilverBadges,
    ud.BronzeBadges,
    COALESCE(ud.PostCount, 0) AS TotalPosts,
    COALESCE(ud.Questions, 0) AS TotalQuestions,
    COALESCE(ud.Answers, 0) AS TotalAnswers,
    COALESCE(ud.TotalScore, 0) AS TotalScore,
    COALESCE(ud.TotalViews, 0) AS TotalViews,
    STRING_AGG(DISTINCT p.Title, ', ') AS PostTitles,
    STRING_AGG(DISTINCT CASE WHEN ct.Name IS NOT NULL THEN ct.Name ELSE 'No Close Reason' END, ', ') AS CloseReasons
FROM 
    UserDetails ud
LEFT JOIN 
    Posts p ON ud.UserId = p.OwnerUserId
LEFT JOIN 
    PostHistory ph ON ph.PostId = p.Id
LEFT JOIN 
    CloseReasonTypes ct ON ph.Comment::int = ct.Id AND ph.PostHistoryTypeId = 10 
GROUP BY 
    ud.UserId, ud.DisplayName, ud.Reputation, ud.CreationDate, ud.LastAccessDate, ud.Location, 
    ud.BadgeCount, ud.GoldBadges, ud.SilverBadges, ud.BronzeBadges
ORDER BY 
    ud.Reputation DESC, ud.UserId ASC;