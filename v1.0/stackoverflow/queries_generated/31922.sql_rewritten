WITH RECURSIVE PostHierarchy AS (
    SELECT 
        p.Id,
        p.ParentId,
        p.Title,
        p.OwnerUserId,
        0 AS Level
    FROM 
        Posts p
    WHERE 
        p.ParentId IS NULL  
    UNION ALL
    SELECT 
        p2.Id,
        p2.ParentId,
        p2.Title,
        p2.OwnerUserId,
        ph.Level + 1
    FROM 
        Posts p2
    JOIN 
        PostHierarchy ph ON p2.ParentId = ph.Id
),
UserPostCounts AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COUNT(p.Id) AS PostCount,
        COALESCE(SUM(v.VoteTypeId = 2), 0) AS Upvotes,
        COALESCE(SUM(v.VoteTypeId = 3), 0) AS Downvotes,
        COALESCE(SUM(b.Class = 1), 0) AS GoldBadges,
        COALESCE(SUM(b.Class = 2), 0) AS SilverBadges,
        COALESCE(SUM(b.Class = 3), 0) AS BronzeBadges
    FROM 
        Users u
    LEFT JOIN 
        Posts p ON u.Id = p.OwnerUserId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    GROUP BY 
        u.Id, u.DisplayName
),
TopUsers AS (
    SELECT 
        UserId,
        DisplayName,
        PostCount,
        Upvotes,
        Downvotes,
        GoldBadges,
        SilverBadges,
        BronzeBadges,
        RANK() OVER (ORDER BY PostCount DESC, Upvotes DESC) AS Rank
    FROM 
        UserPostCounts
),
PostActivity AS (
    SELECT 
        p.Id,
        p.Title,
        ph.Level,
        p.CreationDate,
        u.DisplayName AS OwnerName,
        COUNT(c.Id) AS CommentCount,
        COALESCE(SUM(v.VoteTypeId = 2), 0) AS Upvotes,
        COALESCE(SUM(v.VoteTypeId = 3), 0) AS Downvotes
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    LEFT JOIN 
        Users u ON p.OwnerUserId = u.Id
    LEFT JOIN 
        PostHierarchy ph ON ph.Id = p.Id
    WHERE 
        p.CreationDate > cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 year'
    GROUP BY 
        p.Id, ph.Level, u.DisplayName
)
SELECT 
    tu.Rank,
    tu.DisplayName,
    tu.PostCount,
    tu.Upvotes,
    tu.Downvotes,
    tu.GoldBadges,
    tu.SilverBadges,
    tu.BronzeBadges,
    pa.Title AS PostTitle,
    pa.Level AS PostLevel,
    pa.CommentCount,
    pa.Upvotes AS PostUpvotes,
    pa.Downvotes AS PostDownvotes
FROM 
    TopUsers tu
JOIN 
    PostActivity pa ON tu.UserId = pa.OwnerName
ORDER BY 
    tu.Rank, pa.Upvotes DESC;