WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        u.DisplayName AS Author,
        p.CreationDate,
        (SELECT COUNT(*) FROM Comments c WHERE c.PostId = p.Id) AS CommentCount,
        p.Body,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS Rank
    FROM 
        Posts p
    JOIN 
        Users u ON p.OwnerUserId = u.Id
    WHERE 
        p.PostTypeId = 1  
),
FilterComments AS (
    SELECT 
        PostId,
        STRING_AGG(Text, ' | ') AS AllComments
    FROM 
        Comments
    GROUP BY 
        PostId
),
PostHistoryAnalysis AS (
    SELECT
        ph.PostId,
        p.Title,
        p.Body,
        ph.UserDisplayName,
        ph.CreationDate,
        ph.Comment,
        PHT.Name AS ChangeType,
        ROW_NUMBER() OVER (PARTITION BY ph.PostId ORDER BY ph.CreationDate DESC) AS ChangeRank
    FROM 
        PostHistory ph
    JOIN 
        PostHistoryTypes PHT ON ph.PostHistoryTypeId = PHT.Id
    JOIN 
        Posts p ON ph.PostId = p.Id
)
SELECT 
    rp.PostId,
    rp.Title,
    rp.Author,
    rp.CreationDate,
    rp.CommentCount,
    fc.AllComments,
    pha.UserDisplayName AS Editor,
    pha.Comment AS HistoryComment,
    pha.ChangeType,
    pha.CreationDate AS HistoryDate,
    (SELECT COUNT(*) FROM Votes v WHERE v.PostId = rp.PostId AND v.VoteTypeId = 2) AS Upvotes,
    (SELECT COUNT(*) FROM Votes v WHERE v.PostId = rp.PostId AND v.VoteTypeId = 3) AS Downvotes,
    (SELECT COUNT(*) FROM Badges b WHERE b.UserId = rp.OwnerUserId) AS BadgeCount
FROM 
    RankedPosts rp
LEFT JOIN 
    FilterComments fc ON rp.PostId = fc.PostId
LEFT JOIN 
    PostHistoryAnalysis pha ON rp.PostId = pha.PostId AND pha.ChangeRank = 1  
WHERE 
    rp.Rank <= 5  
ORDER BY 
    rp.CreationDate DESC;