
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.Body,
        p.CreationDate,
        u.DisplayName AS OwnerDisplayName,
        p.Score,
        LENGTH(TRIM(BOTH ',' FROM Tags)) - LENGTH(REPLACE(TRIM(BOTH ',' FROM Tags), ',', '')) + 1 AS TagCount,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC) AS OwnerRank
    FROM 
        Posts p
    JOIN 
        Users u ON p.OwnerUserId = u.Id
    WHERE 
        p.PostTypeId = 1  
        AND p.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 year'  
),
TopQuestions AS (
    SELECT 
        PostId, 
        Title,
        OwnerDisplayName,
        Score,
        TagCount
    FROM 
        RankedPosts
    WHERE 
        OwnerRank <= 5  
),
PopularTags AS (
    SELECT 
        t.TagName,
        COUNT(pt.PostId) AS TagCount
    FROM 
        Tags t
    JOIN 
        Posts p ON p.Tags LIKE CONCAT('%<', t.TagName, '>%' )
    JOIN 
        PostTypes pt ON pt.Id = p.PostTypeId
    WHERE 
        pt.Name = 'Question'
    GROUP BY 
        t.TagName
    ORDER BY 
        TagCount DESC
    LIMIT 10  
)
SELECT 
    tq.Title,
    tq.OwnerDisplayName,
    tq.Score,
    tq.TagCount,
    pt.TagName
FROM 
    TopQuestions tq
CROSS JOIN 
    PopularTags pt
WHERE 
    tq.TagCount > 0  
ORDER BY 
    tq.Score DESC, 
    pt.TagCount DESC;
