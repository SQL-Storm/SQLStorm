WITH UserStats AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        u.Reputation,
        COALESCE(SUM(CASE WHEN p.PostTypeId = 2 THEN 1 ELSE 0 END), 0) AS TotalAnswers,
        COALESCE(SUM(CASE WHEN p.PostTypeId = 1 THEN 1 ELSE 0 END), 0) AS TotalQuestions,
        COALESCE(SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END), 0) AS TotalUpvotes,
        COALESCE(SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END), 0) AS TotalDownvotes
    FROM Users u
    LEFT JOIN Posts p ON u.Id = p.OwnerUserId
    LEFT JOIN Votes v ON p.Id = v.PostId
    GROUP BY u.Id
),
RecentActivity AS (
    SELECT 
        p.OwnerUserId,
        COUNT(p.Id) AS RecentPosts,
        MAX(p.CreationDate) AS LastPostDate
    FROM Posts p
    WHERE p.CreationDate > cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '30 days'
    GROUP BY p.OwnerUserId
),
BadgeCount AS (
    SELECT 
        b.UserId,
        COUNT(b.Id) AS TotalBadges
    FROM Badges b
    GROUP BY b.UserId
)

SELECT 
    us.UserId,
    us.DisplayName,
    us.Reputation,
    us.TotalQuestions,
    us.TotalAnswers,
    us.TotalUpvotes,
    us.TotalDownvotes,
    COALESCE(ra.RecentPosts, 0) AS RecentPosts,
    COALESCE(ra.LastPostDate, 'No recent activity') AS LastPostDate,
    COALESCE(bc.TotalBadges, 0) AS TotalBadges
FROM UserStats us
LEFT JOIN RecentActivity ra ON us.UserId = ra.OwnerUserId
LEFT JOIN BadgeCount bc ON us.UserId = bc.UserId
ORDER BY us.Reputation DESC
LIMIT 10;