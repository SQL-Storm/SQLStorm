
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Score,
        p.ViewCount,
        ROW_NUMBER() OVER (PARTITION BY p.PostTypeId ORDER BY p.CreationDate DESC) AS RowNum
    FROM 
        Posts p
    WHERE 
        p.CreationDate > DATE_SUB(CAST('2024-10-01' AS DATE), INTERVAL 1 YEAR)
),
UserActivity AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COALESCE(SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END), 0) AS TotalUpvotes,
        COALESCE(SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END), 0) AS TotalDownvotes,
        COUNT(DISTINCT b.Id) AS TotalBadges
    FROM 
        Users u
    LEFT JOIN 
        Votes v ON u.Id = v.UserId
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    GROUP BY 
        u.Id, u.DisplayName
),
PostInteraction AS (
    SELECT 
        ph.PostId,
        ph.UserId,
        MAX(ph.CreationDate) AS LastActivity
    FROM 
        PostHistory ph
    WHERE 
        ph.PostHistoryTypeId IN (10, 11, 12, 13, 14, 15) 
    GROUP BY 
        ph.PostId, ph.UserId
),
PostVotes AS (
    SELECT 
        p.Id AS PostId, 
        COUNT(v.Id) AS VoteCount
    FROM 
        Posts p
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    GROUP BY 
        p.Id
)
SELECT 
    rp.Title,
    rp.CreationDate,
    ua.DisplayName,
    ua.TotalUpvotes,
    ua.TotalDownvotes,
    COALESCE(pv.VoteCount, 0) AS TotalVotes,
    MAX(pi.LastActivity) AS LastInteraction,
    CASE 
        WHEN MAX(pi.LastActivity) IS NULL THEN 'No interaction'
        WHEN MAX(pi.LastActivity) < DATE_SUB(CAST('2024-10-01' AS DATE), INTERVAL 30 DAY) THEN 'Dormant'
        ELSE 'Active'
    END AS PostStatus,
    CASE 
        WHEN u.Reputation > 1000 THEN 'High Reputation User'
        WHEN u.Reputation BETWEEN 501 AND 1000 THEN 'Moderate Reputation User'
        ELSE 'New or Low Reputation User'
    END AS UserReputationStatus
FROM 
    RankedPosts rp
LEFT JOIN 
    UserActivity ua ON ua.UserId = rp.PostId 
LEFT JOIN 
    PostInteraction pi ON rp.PostId = pi.PostId
LEFT JOIN 
    PostVotes pv ON rp.PostId = pv.PostId
LEFT JOIN 
    Users u ON u.Id = ua.UserId
WHERE 
    rp.RowNum = 1 AND
    (ua.TotalUpvotes - ua.TotalDownvotes) > 0 
GROUP BY 
    rp.Title, 
    rp.CreationDate, 
    ua.DisplayName, 
    ua.TotalUpvotes, 
    ua.TotalDownvotes, 
    pv.VoteCount, 
    u.Reputation
ORDER BY 
    rp.Score DESC, 
    rp.CreationDate DESC;
