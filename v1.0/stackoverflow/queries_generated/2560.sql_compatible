
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Score,
        p.AnswerCount,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC) AS RankByScore
    FROM 
        Posts p
    WHERE 
        p.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 year'
),
PopularTags AS (
    SELECT 
        t.TagName,
        COUNT(pl.PostId) AS TagCount
    FROM 
        Tags t
    JOIN 
        PostTags pt ON pt.TagId = t.Id
    JOIN 
        Posts p ON p.Id = pt.PostId
    WHERE 
        p.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '6 months'
    GROUP BY 
        t.TagName
    HAVING 
        COUNT(pl.PostId) > 10
),
UserEngagement AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        SUM(v.BountyAmount) AS TotalBounty,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS Upvotes,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS Downvotes
    FROM 
        Users u
    JOIN 
        Votes v ON v.UserId = u.Id
    WHERE 
        v.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 year'
    GROUP BY 
        u.Id, u.DisplayName
)
SELECT 
    rp.PostId,
    rp.Title,
    rp.CreationDate,
    rp.Score,
    rp.AnswerCount,
    u.DisplayName AS UserName,
    ue.TotalBounty,
    ue.Upvotes,
    ue.Downvotes,
    pt.TagName
FROM 
    RankedPosts rp
LEFT JOIN 
    Users u ON u.Id = rp.OwnerUserId
JOIN 
    UserEngagement ue ON ue.UserId = u.Id
LEFT JOIN 
    PopularTags pt ON pt.TagCount > 5
WHERE 
    rp.RankByScore <= 3
ORDER BY 
    rp.Score DESC, rp.CreationDate DESC;
