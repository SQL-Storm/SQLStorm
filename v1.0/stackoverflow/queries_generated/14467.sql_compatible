
WITH PostStats AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Score,
        p.ViewCount,
        COALESCE(c.CommentCount, 0) AS CommentCount,
        COALESCE(a.AnswerCount, 0) AS AnswerCount,
        u.DisplayName AS OwnerDisplayName
    FROM 
        Posts p
    LEFT JOIN 
        (SELECT PostId, COUNT(*) AS CommentCount FROM Comments GROUP BY PostId) c ON p.Id = c.PostId
    LEFT JOIN 
        (SELECT ParentId, COUNT(*) AS AnswerCount FROM Posts WHERE PostTypeId = 2 GROUP BY ParentId) a ON p.Id = a.ParentId
    LEFT JOIN 
        Users u ON p.OwnerUserId = u.Id
    WHERE 
        p.CreationDate >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR)
),
PostHistoryStats AS (
    SELECT 
        ph.PostId,
        COUNT(*) AS HistoryChangeCount
    FROM 
        PostHistory ph
    GROUP BY 
        ph.PostId
),
FinalStats AS (
    SELECT 
        ps.PostId,
        ps.Title,
        ps.CreationDate,
        ps.Score,
        ps.ViewCount,
        ps.CommentCount,
        ps.AnswerCount,
        ps.OwnerDisplayName,
        COALESCE(phs.HistoryChangeCount, 0) AS HistoryChangeCount
    FROM 
        PostStats ps
    LEFT JOIN 
        PostHistoryStats phs ON ps.PostId = phs.PostId
)
SELECT 
    fs.*,
    DENSE_RANK() OVER (ORDER BY fs.Score DESC) AS ScoreRank,
    DENSE_RANK() OVER (ORDER BY fs.ViewCount DESC) AS ViewRank,
    DENSE_RANK() OVER (ORDER BY fs.HistoryChangeCount DESC) AS HistoryRank
FROM 
    FinalStats fs
ORDER BY 
    fs.Score DESC, fs.ViewCount DESC;
