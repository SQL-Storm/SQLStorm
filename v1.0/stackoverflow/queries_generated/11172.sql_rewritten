WITH PostStats AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        COUNT(c.Id) AS CommentCount,
        COUNT(v.Id) AS VoteCount,
        MAX(p.Score) AS MaxScore,
        AVG(p.Score) AS AvgScore,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVoteCount,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVoteCount
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    GROUP BY 
        p.Id, p.Title
),
UserStats AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COUNT(DISTINCT b.Id) AS BadgeCount,
        SUM(u.UpVotes) AS TotalUpVotes,
        SUM(u.DownVotes) AS TotalDownVotes
    FROM 
        Users u
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    GROUP BY 
        u.Id, u.DisplayName
),
FinalMetrics AS (
    SELECT 
        ps.PostId,
        ps.Title,
        ps.CommentCount,
        ps.VoteCount,
        ps.MaxScore,
        ps.AvgScore,
        ps.UpVoteCount,
        ps.DownVoteCount,
        us.UserId,
        us.DisplayName AS UserDisplayName,
        us.BadgeCount,
        us.TotalUpVotes,
        us.TotalDownVotes
    FROM 
        PostStats ps
    JOIN 
        Users us ON ps.VoteCount > 0
)

SELECT 
    *
FROM 
    FinalMetrics
ORDER BY 
    AvgScore DESC, CommentCount DESC
LIMIT 100;