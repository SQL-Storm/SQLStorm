WITH RankedPosts AS (
    SELECT 
        p.Id,
        p.Title,
        p.CreationDate,
        p.OwnerUserId,
        p.ViewCount,
        p.AnswerCount,
        RANK() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) as PostRank
    FROM 
        Posts p
    WHERE 
        p.PostTypeId = 1 AND p.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 year'
),
UserStatistics AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COUNT(DISTINCT p.Id) AS QuestionCount,
        COUNT(DISTINCT c.Id) AS CommentCount,
        SUM(COALESCE(b.Class, 0)) AS TotalBadgeClass,
        SUM(v.BountyAmount) AS TotalBounty
    FROM 
        Users u
    LEFT JOIN 
        Posts p ON u.Id = p.OwnerUserId AND p.PostTypeId = 1 
    LEFT JOIN 
        Comments c ON c.UserId = u.Id
    LEFT JOIN 
        Badges b ON b.UserId = u.Id
    LEFT JOIN 
        Votes v ON v.UserId = u.Id
    GROUP BY 
        u.Id
),
ClosedPosts AS (
    SELECT 
        ph.PostId,
        MIN(ph.CreationDate) AS FirstClosed
    FROM 
        PostHistory ph
    WHERE 
        ph.PostHistoryTypeId = 10 
    GROUP BY 
        ph.PostId
),
PostViews AS (
    SELECT 
        p.Id AS PostId,
        COUNT(v.Id) AS VoteCount
    FROM 
        Posts p
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    GROUP BY 
        p.Id
),
FinalResults AS (
    SELECT
        us.UserId,
        us.DisplayName,
        RANK() OVER (ORDER BY us.QuestionCount DESC) AS UserRank,
        rp.Title,
        rp.CreationDate,
        rp.ViewCount,
        rp.AnswerCount,
        cp.FirstClosed,
        pv.VoteCount,
        us.TotalBounty,
        us.TotalBadgeClass
    FROM 
        UserStatistics us
    JOIN 
        RankedPosts rp ON us.UserId = rp.OwnerUserId
    LEFT JOIN 
        ClosedPosts cp ON rp.Id = cp.PostId
    LEFT JOIN 
        PostViews pv ON rp.Id = pv.PostId
)
SELECT
    fr.UserId,
    fr.DisplayName,
    fr.UserRank,
    fr.Title,
    fr.CreationDate,
    fr.ViewCount,
    fr.AnswerCount,
    fr.FirstClosed,
    fr.VoteCount,
    fr.TotalBounty,
    fr.TotalBadgeClass
FROM 
    FinalResults fr
WHERE 
    fr.ViewCount > 1000
ORDER BY 
    fr.UserRank, fr.ViewCount DESC;