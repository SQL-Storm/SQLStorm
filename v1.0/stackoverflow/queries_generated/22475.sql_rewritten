WITH UserActivity AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        u.Reputation,
        COUNT(DISTINCT p.Id) AS PostCount,
        SUM(v.BountyAmount) AS TotalBounties,
        ROW_NUMBER() OVER (PARTITION BY u.Id ORDER BY COUNT(DISTINCT p.Id) DESC) AS Rank
    FROM 
        Users u
    LEFT JOIN 
        Posts p ON u.Id = p.OwnerUserId
    LEFT JOIN 
        Votes v ON u.Id = v.UserId
    GROUP BY 
        u.Id, u.DisplayName, u.Reputation
),
PostMetrics AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.ViewCount,
        p.Score,
        p.CommentCount,
        CASE 
            WHEN COALESCE(p.AcceptedAnswerId, -1) != -1 THEN 1 
            ELSE 0 
        END AS HasAcceptedAnswer,
        RANK() OVER (PARTITION BY p.PostTypeId ORDER BY p.Score DESC) AS PostRank
    FROM 
        Posts p
    WHERE 
        p.CreationDate >= cast('2024-10-01' as date) - INTERVAL '1 year'
),
ClosedPosts AS (
    SELECT 
        ph.PostId,
        MIN(ph.CreationDate) AS FirstClosedDate,
        COUNT(ph.Id) AS ClosureCount
    FROM 
        PostHistory ph
    WHERE 
        ph.PostHistoryTypeId = 10
    GROUP BY 
        ph.PostId
),
ActiveUsers AS (
    SELECT 
        ua.UserId,
        ua.DisplayName,
        SUM(ua.Reputation) AS TotalReputation,
        COUNT(DISTINCT ua.PostCount) AS UniquePostCount
    FROM 
        UserActivity ua
    WHERE 
        ua.Rank <= 10
    GROUP BY 
        ua.UserId, ua.DisplayName
)

SELECT 
    a.UserId,
    a.DisplayName,
    a.TotalReputation,
    a.UniquePostCount,
    pm.PostId,
    pm.Title,
    pm.ViewCount,
    pm.Score,
    COALESCE(cp.FirstClosedDate, 'No Closures') AS FirstClosedDate,
    COALESCE(cp.ClosureCount, 0) AS ClosureCount,
    pm.HasAcceptedAnswer,
    CASE 
        WHEN pm.ViewCount = 0 THEN 'No Views'
        WHEN pm.ViewCount < 100 THEN 'Low Views'
        WHEN pm.ViewCount BETWEEN 100 AND 1000 THEN 'Moderate Views'
        ELSE 'High Views'
    END AS ViewCategory
FROM 
    ActiveUsers a
JOIN 
    PostMetrics pm ON a.UserId = pm.OwnerUserId
LEFT JOIN 
    ClosedPosts cp ON pm.PostId = cp.PostId
WHERE 
    a.TotalReputation > 1000 AND 
    pm.PostRank <= 5
ORDER BY 
    a.TotalReputation DESC, 
    pm.Score DESC, 
    pm.ViewCount DESC;