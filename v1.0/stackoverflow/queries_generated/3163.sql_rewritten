WITH RankedPosts AS (
    SELECT 
        p.Id,
        p.Title,
        p.CreationDate,
        p.Score,
        p.ViewCount,
        p.OwnerUserId,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS rn,
        COUNT(c.Id) OVER (PARTITION BY p.Id) AS CommentCount
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    WHERE 
        p.PostTypeId = 1 
        AND p.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 year'
),
TopUsers AS (
    SELECT 
        u.Id,
        u.DisplayName,
        SUM(p.Score) AS TotalScore,
        COUNT(DISTINCT p.Id) AS QuestionCount
    FROM 
        Users u
    JOIN 
        Posts p ON u.Id = p.OwnerUserId
    WHERE 
        p.PostTypeId = 1 
    GROUP BY 
        u.Id
),
BadgedUsers AS (
    SELECT 
        b.UserId,
        STRING_AGG(b.Name, ', ') AS Badges
    FROM 
        Badges b
    GROUP BY 
        b.UserId
)
SELECT 
    u.Id AS UserId,
    u.DisplayName,
    COALESCE(b.Badges, 'No Badges') AS Badges,
    tp.Title,
    tp.CreationDate,
    tp.Score AS PostScore,
    tp.ViewCount,
    tp.CommentCount,
    tu.TotalScore,
    tu.QuestionCount
FROM 
    TopUsers tu
JOIN 
    RankedPosts tp ON tu.Id = tp.OwnerUserId
LEFT JOIN 
    BadgedUsers b ON tu.Id = b.UserId
WHERE 
    tp.rn = 1
ORDER BY 
    tu.TotalScore DESC, 
    tp.ViewCount DESC
LIMIT 10;