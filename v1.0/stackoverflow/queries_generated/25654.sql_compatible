
WITH ParsedTags AS (
    SELECT 
        Id AS PostId,
        UNNEST(STRING_SPLIT(SUBSTRING(Tags, 2, LEN(Tags) - 2), '><')) AS Tag,
        CreationDate
    FROM 
        Posts 
    WHERE 
        PostTypeId = 1 
),
TagStats AS (
    SELECT 
        Tag,
        COUNT(*) AS TagUsageCount,
        MIN(CreationDate) AS FirstSeen,
        MAX(CreationDate) AS LastSeen
    FROM 
        ParsedTags
    GROUP BY 
        Tag
),
UserActivity AS (
    SELECT 
        U.Id AS UserId,
        U.DisplayName,
        COUNT(P.Id) AS TotalPosts,
        SUM(CASE WHEN P.PostTypeId = 2 THEN 1 ELSE 0 END) AS TotalAnswers,
        SUM(CASE WHEN B.Id IS NOT NULL THEN 1 ELSE 0 END) AS TotalBadges
    FROM 
        Users U
    LEFT JOIN 
        Posts P ON U.Id = P.OwnerUserId
    LEFT JOIN 
        Badges B ON U.Id = B.UserId
    GROUP BY 
        U.Id, U.DisplayName
),
PopularQuestions AS (
    SELECT 
        P.Id AS QuestionId,
        P.Title,
        P.ViewCount,
        P.AnswerCount,
        P.CreationDate,
        P.Score
    FROM 
        Posts P
    WHERE 
        P.PostTypeId = 1 
    ORDER BY 
        P.ViewCount DESC
    LIMIT 10
),
FinalResults AS (
    SELECT 
        T.Tag,
        TS.TagUsageCount,
        UA.DisplayName AS TopUser,
        UA.TotalPosts,
        UA.TotalAnswers,
        UA.TotalBadges,
        PQ.QuestionId,
        PQ.Title AS PopularQuestionTitle,
        PQ.ViewCount AS PopularQuestionViews,
        PQ.AnswerCount AS PopularQuestionAnswers
    FROM 
        TagStats TS
    JOIN 
        ParsedTags T ON T.Tag = TS.Tag
    JOIN 
        UserActivity UA ON UA.TotalPosts = (
            SELECT 
                MAX(TotalPosts) 
            FROM 
                UserActivity 
        )
    JOIN 
        PopularQuestions PQ ON PQ.QuestionId = (
            SELECT 
                QuestionId 
            FROM 
                PopularQuestions 
            ORDER BY 
                ViewCount DESC 
            LIMIT 1
        )
)
SELECT 
    *
FROM 
    FinalResults
ORDER BY 
    TagUsageCount DESC;
