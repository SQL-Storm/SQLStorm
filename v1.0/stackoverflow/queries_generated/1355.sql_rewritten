WITH RecentPosts AS (
    SELECT p.Id, p.Title, p.CreationDate, p.OwnerUserId, p.PostTypeId, p.Score,
           ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) as PostRank
    FROM Posts p
    WHERE p.CreationDate > cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '30 days'
),

UserReputation AS (
    SELECT u.Id AS UserId, u.Reputation, 
           CASE 
               WHEN SUM(v.VoteTypeId = 2) IS NULL THEN 0 
               ELSE SUM(v.VoteTypeId = 2) 
           END AS UpVotesCount
    FROM Users u
    LEFT JOIN Votes v ON u.Id = v.UserId
    GROUP BY u.Id, u.Reputation
)

SELECT u.DisplayName, 
       COALESCE(rp.Title, 'No Recent Posts') AS RecentPostTitle,
       COALESCE(rp.CreationDate, 'N/A') AS RecentPostDate,
       ur.Reputation,
       ur.UpVotesCount,
       CASE 
           WHEN ur.Reputation > 1000 THEN 'High Reputation'
           WHEN ur.Reputation BETWEEN 500 AND 1000 THEN 'Medium Reputation'
           ELSE 'Low Reputation'
       END AS ReputationCategory
FROM Users u
LEFT JOIN RecentPosts rp ON u.Id = rp.OwnerUserId
JOIN UserReputation ur ON u.Id = ur.UserId
WHERE ur.UpVotesCount >= 10
ORDER BY ur.Reputation DESC, RecentPostDate DESC NULLS LAST
LIMIT 50;