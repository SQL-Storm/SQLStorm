
WITH PostDetails AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.ViewCount,
        p.Score,
        COUNT(c.Id) AS CommentCount,
        STRING_AGG(t.TagName, ', ') AS Tags,
        u.DisplayName AS OwnerDisplayName,
        u.Reputation AS OwnerReputation
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        Users u ON p.OwnerUserId = u.Id
    LEFT JOIN 
        UNNEST(SUBSTRING(p.Tags FROM 2 FOR LENGTH(p.Tags) - 2)::text[]) AS tag_arr ON TRUE 
    LEFT JOIN 
        Tags t ON tag_arr = t.TagName
    WHERE 
        p.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 year' 
    GROUP BY 
        p.Id, p.Title, p.CreationDate, p.ViewCount, p.Score, u.DisplayName, u.Reputation
)
SELECT 
    *,
    EXTRACT(EPOCH FROM (TIMESTAMP '2024-10-01 12:34:56' - CreationDate)) AS AgeInSeconds 
FROM 
    PostDetails
ORDER BY 
    ViewCount DESC
LIMIT 100;
