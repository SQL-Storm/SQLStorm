
WITH UserStats AS (
    SELECT 
        U.Id AS UserId,
        U.DisplayName,
        COALESCE(SUM(CASE WHEN V.VoteTypeId = 2 THEN 1 ELSE 0 END), 0) AS UpVotes,
        COALESCE(SUM(CASE WHEN V.VoteTypeId = 3 THEN 1 ELSE 0 END), 0) AS DownVotes,
        COALESCE(SUM(CASE WHEN B.Class = 1 THEN 1 ELSE 0 END), 0) AS GoldBadges,
        COALESCE(SUM(CASE WHEN B.Class = 2 THEN 1 ELSE 0 END), 0) AS SilverBadges,
        COALESCE(SUM(CASE WHEN B.Class = 3 THEN 1 ELSE 0 END), 0) AS BronzeBadges
    FROM 
        Users U
    LEFT JOIN 
        Votes V ON U.Id = V.UserId
    LEFT JOIN 
        Badges B ON U.Id = B.UserId
    GROUP BY 
        U.Id, U.DisplayName
),
PostInfo AS (
    SELECT 
        P.Id AS PostId,
        P.Title,
        P.CreationDate,
        P.Score,
        U.DisplayName AS OwnerDisplayName,
        COUNT(CASE WHEN C.Id IS NOT NULL THEN 1 END) AS CommentCount,
        COUNT(CASE WHEN PV.VoteTypeId = 2 THEN 1 END) AS UpVoteCount,
        COUNT(CASE WHEN PV.VoteTypeId = 3 THEN 1 END) AS DownVoteCount,
        ROW_NUMBER() OVER (PARTITION BY P.Id ORDER BY P.LastActivityDate DESC) AS RecentActivity
    FROM 
        Posts P
    LEFT JOIN 
        Users U ON P.OwnerUserId = U.Id
    LEFT JOIN 
        Comments C ON P.Id = C.PostId
    LEFT JOIN 
        Votes PV ON P.Id = PV.PostId
    WHERE 
        P.CreationDate >= (CAST('2024-10-01 12:34:56' AS TIMESTAMP) - INTERVAL '1 year')
    GROUP BY 
        P.Id, P.Title, P.CreationDate, P.Score, U.DisplayName
)
SELECT 
    UIS.UserId, 
    UIS.DisplayName, 
    UIS.UpVotes, 
    UIS.DownVotes,
    PIF.PostId,
    PIF.Title,
    PIF.CreationDate,
    PIF.Score,
    PIF.CommentCount,
    PIF.UpVoteCount,
    PIF.DownVoteCount
FROM 
    UserStats UIS
INNER JOIN 
    PostInfo PIF ON UIS.UserId = PIF.OwnerDisplayName
WHERE 
    UIS.UpVotes > 10 OR UIS.GoldBadges > 0
ORDER BY 
    UIS.Reputation DESC, 
    PIF.Score DESC 
LIMIT 100;
