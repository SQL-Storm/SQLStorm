
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Score,
        p.ViewCount,
        p.OwnerUserId,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC) AS RankByScore
    FROM 
        Posts p
    WHERE 
        p.CreationDate >= DATEADD(YEAR, -1, CURRENT_TIMESTAMP) 
),
UserStats AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        u.Reputation,
        COALESCE(SUM(v.BountyAmount), 0) AS TotalBounties,
        COUNT(DISTINCT b.Id) AS BadgeCount
    FROM 
        Users u
    LEFT JOIN 
        Votes v ON u.Id = v.UserId AND v.VoteTypeId IN (8, 9) 
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    GROUP BY 
        u.Id, u.DisplayName, u.Reputation
),
PostHistoryDetails AS (
    SELECT 
        ph.PostId,
        ph.UserId AS EditorId,
        ph.CreationDate AS EditDate,
        p.Title,
        p.Body,
        ph.Comment,
        ph.PostHistoryTypeId
    FROM 
        PostHistory ph
    JOIN 
        Posts p ON ph.PostId = p.Id
    WHERE 
        ph.PostHistoryTypeId IN (4, 5, 6) 
),
ClosedPostHistory AS (
    SELECT 
        ph.PostId,
        ph.CreationDate AS ClosureDate,
        cr.Name AS CloseReason
    FROM 
        PostHistory ph
    JOIN 
        CloseReasonTypes cr ON ph.Comment = cr.Id::TEXT
    WHERE 
        ph.PostHistoryTypeId = 10 
),
RecursiveUserPosts AS (
    SELECT 
        up.UserId,
        p.Title,
        p.CreationDate,
        p.Score,
        p.ViewCount,
        RANK() OVER (PARTITION BY up.UserId ORDER BY p.CreationDate ASC) AS PostRank
    FROM 
        Posts p
    INNER JOIN 
        Users up ON p.OwnerUserId = up.Id
    WHERE 
        p.OwnerUserId IS NOT NULL
)
SELECT 
    us.DisplayName,
    us.Reputation,
    us.TotalBounties,
    us.BadgeCount,
    rp.Title AS TopPostTitle,
    rp.CreationDate AS TopPostDate,
    rp.Score AS TopPostScore,
    ch.ClosureDate,
    ch.CloseReason
FROM 
    UserStats us
LEFT JOIN 
    RankedPosts rp ON us.UserId = rp.OwnerUserId AND rp.RankByScore = 1
LEFT JOIN 
    ClosedPostHistory ch ON ch.PostId = rp.PostId
WHERE 
    us.Reputation > (SELECT AVG(Reputation) FROM Users) 
ORDER BY 
    us.Reputation DESC;
