WITH RankedPosts AS (
    SELECT 
        p.Id,
        p.Title,
        p.ViewCount,
        p.CreationDate,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS PostRank,
        COUNT(DISTINCT c.Id) OVER (PARTITION BY p.Id) AS CommentCount,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) OVER (PARTITION BY p.Id) AS UpVotes,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) OVER (PARTITION BY p.Id) AS DownVotes
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    WHERE 
        p.CreationDate > cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 year'
),
UserStatistics AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COALESCE(SUM(rp.ViewCount), 0) AS TotalViews,
        COALESCE(SUM(rp.UpVotes), 0) AS TotalUpVotes,
        COALESCE(SUM(rp.DownVotes), 0) AS TotalDownVotes,
        COUNT(rp.Id) AS PostCount
    FROM 
        Users u 
    LEFT JOIN 
        RankedPosts rp ON u.Id = rp.OwnerUserId
    GROUP BY 
        u.Id
),
TopUsers AS (
    SELECT 
        us.UserId,
        us.DisplayName,
        us.TotalViews,
        us.TotalUpVotes,
        us.TotalDownVotes,
        us.PostCount,
        RANK() OVER (ORDER BY us.TotalUpVotes DESC, us.TotalViews DESC) AS Ranking
    FROM 
        UserStatistics us
)
SELECT 
    tu.DisplayName,
    tu.TotalViews,
    tu.TotalUpVotes,
    tu.TotalDownVotes,
    tu.PostCount,
    CASE 
        WHEN tu.PostCount = 0 THEN 'No Posts'
        ELSE 'Active User'
    END AS UserStatus
FROM 
    TopUsers tu
WHERE 
    tu.Ranking <= 10
ORDER BY 
    tu.Ranking;