WITH TagPostCounts AS (
    SELECT 
        unnest(string_to_array(substring(Tags, 2, length(Tags)-2), '><')) AS Tag,
        COUNT(*) AS PostCount
    FROM Posts
    WHERE PostTypeId = 1 
    GROUP BY Tag
),
UserReputation AS (
    SELECT 
        u.Id AS UserId,
        u.Reputation,
        COUNT(DISTINCT p.Id) AS QuestionCount,
        SUM(COALESCE(b.Class, 0)) AS TotalBadges
    FROM Users u
    LEFT JOIN Posts p ON u.Id = p.OwnerUserId AND p.PostTypeId = 1 
    LEFT JOIN Badges b ON u.Id = b.UserId
    GROUP BY u.Id, u.Reputation
),
PopularTags AS (
    SELECT 
        Tag,
        PostCount,
        RANK() OVER (ORDER BY PostCount DESC) AS TagRank
    FROM TagPostCounts
    WHERE PostCount > 5 
),
HighRepUsers AS (
    SELECT
        u.Id AS UserId,
        u.DisplayName,
        ur.Reputation,
        ur.QuestionCount,
        ur.TotalBadges,
        pt.Tag AS PopularTag
    FROM Users u
    JOIN UserReputation ur ON u.Id = ur.UserId
    JOIN PopularTags pt ON pt.PostCount > (SELECT AVG(PostCount) FROM PopularTags)
    WHERE ur.Reputation > 1000
)
SELECT 
    u.DisplayName,
    u.Reputation,
    COUNT(DISTINCT p.Id) AS QuestionsAnswered,
    COUNT(DISTINCT c.Id) AS CommentsMade,
    STRING_AGG(DISTINCT pt.PopularTag, ', ') AS PopularTagsEngaged
FROM HighRepUsers u
LEFT JOIN Posts p ON u.UserId = p.OwnerUserId AND p.PostTypeId = 2 
LEFT JOIN Comments c ON u.UserId = c.UserId 
GROUP BY u.DisplayName, u.Reputation
HAVING COUNT(DISTINCT p.Id) > 0 OR COUNT(DISTINCT c.Id) > 0
ORDER BY u.Reputation DESC;