WITH RecursivePostHierarchy AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.ParentId,
        0 AS Level
    FROM 
        Posts p
    WHERE 
        p.ParentId IS NULL
    
    UNION ALL
    
    SELECT 
        p.Id, 
        p.Title,
        p.ParentId,
        php.Level + 1
    FROM 
        Posts p
    INNER JOIN 
        RecursivePostHierarchy php ON p.ParentId = php.PostId
),
PostStats AS (
    SELECT 
        p.Id AS PostId,
        COALESCE(p.AcceptedAnswerId, -1) AS AcceptedAnswerId,
        COUNT(c.Id) AS CommentCount,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS TotalUpVotes,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS TotalDownVotes,
        SUM(CASE WHEN v.VoteTypeId = 10 THEN 1 ELSE 0 END) AS TotalDeletions
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    WHERE 
        p.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '30 days'
    GROUP BY 
        p.Id, p.AcceptedAnswerId
),
TopUsers AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        SUM(p.ViewCount) AS TotalViews,
        RANK() OVER (ORDER BY SUM(p.ViewCount) DESC) AS UserRank
    FROM 
        Users u
    JOIN 
        Posts p ON u.Id = p.OwnerUserId
    GROUP BY 
        u.Id, u.DisplayName
    HAVING 
        SUM(p.ViewCount) >= 100
),
ClosedPosts AS (
    SELECT 
        ph.PostId,
        ph.CreationDate,
        ph.Comment,
        p.Title,
        ROW_NUMBER() OVER (PARTITION BY ph.PostId ORDER BY ph.CreationDate DESC) AS rn
    FROM 
        PostHistory ph
    JOIN 
        Posts p ON ph.PostId = p.Id
    WHERE 
        ph.PostHistoryTypeId = 10 
)

SELECT 
    p.Title AS Post_Title,
    ps.CommentCount,
    ps.TotalUpVotes,
    ps.TotalDownVotes,
    ps.TotalDeletions,
    u.DisplayName AS Owner_DisplayName,
    u.Reputation AS Owner_Reputation,
    rph.Level AS Hierarchy_Level,
    COALESCE(tu.TotalViews, 0) AS User_Views,
    cp.Comment AS Close_Comment,
    cp.CreationDate AS Close_Date
FROM 
    Posts p
LEFT JOIN 
    PostStats ps ON p.Id = ps.PostId
LEFT JOIN 
    Users u ON p.OwnerUserId = u.Id
LEFT JOIN 
    RecursivePostHierarchy rph ON p.Id = rph.PostId
LEFT JOIN 
    TopUsers tu ON u.Id = tu.UserId
LEFT JOIN 
    ClosedPosts cp ON p.Id = cp.PostId AND cp.rn = 1
WHERE 
    ps.TotalDeletions > 0 OR ps.CommentCount > 0
ORDER BY 
    ps.TotalUpVotes DESC, 
    ps.CommentCount DESC;