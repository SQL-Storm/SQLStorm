
WITH RecursivePosts AS (
    SELECT 
        p.Id,
        p.Title,
        p.PostTypeId,
        p.OwnerUserId,
        p.AcceptedAnswerId,
        p.CreationDate,
        p.LastActivityDate,
        COALESCE(aph.Count, 0) AS AnswerCount,
        COALESCE(cmc.Count, 0) AS CommentCount,
        COALESCE(vote_stats.TotalUpvotes, 0) AS TotalUpvotes,
        COALESCE(vote_stats.TotalDownvotes, 0) AS TotalDownvotes,
        ROW_NUMBER() OVER(PARTITION BY p.Id ORDER BY p.CreationDate DESC) AS rn
    FROM 
        Posts p
    LEFT JOIN (
        SELECT 
            ParentId AS PostId, 
            COUNT(*) AS Count
        FROM 
            Posts
        WHERE 
            PostTypeId = 2 
        GROUP BY 
            ParentId
    ) aph ON p.Id = aph.PostId
    LEFT JOIN (
        SELECT 
            PostId, 
            COUNT(*) AS Count
        FROM 
            Comments
        GROUP BY 
            PostId
    ) cmc ON p.Id = cmc.PostId
    LEFT JOIN (
        SELECT 
            PostId,
            SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS TotalUpvotes,
            SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS TotalDownvotes
        FROM 
            Votes
        GROUP BY 
            PostId
    ) vote_stats ON p.Id = vote_stats.PostId
),
TopUsers AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        u.Reputation,
        RANK() OVER(ORDER BY SUM(COALESCE(p.Score, 0)) DESC) AS UserRank
    FROM 
        Users u
    JOIN 
        Posts p ON u.Id = p.OwnerUserId
    WHERE 
        p.PostTypeId = 1
    GROUP BY 
        u.Id, u.DisplayName, u.Reputation
),
PopularTags AS (
    SELECT 
        t.TagName,
        COUNT(p.Id) AS PostCount
    FROM 
        Tags t
    JOIN 
        Posts p ON p.Tags LIKE CONCAT('%', t.TagName, '%')
    GROUP BY 
        t.TagName
    HAVING 
        COUNT(p.Id) > 10
    ORDER BY 
        PostCount DESC
)
SELECT 
    rp.Title AS PostTitle,
    rp.CreationDate AS PostCreationDate,
    rp.AnswerCount,
    rp.CommentCount,
    rp.TotalUpvotes,
    rp.TotalDownvotes,
    tu.DisplayName AS TopUser,
    tu.Reputation,
    pt.TagName AS PopularTag
FROM 
    RecursivePosts rp
JOIN 
    TopUsers tu ON rp.OwnerUserId = tu.UserId
LEFT JOIN 
    PopularTags pt ON rp.Tags LIKE CONCAT('%', pt.TagName, '%')
WHERE 
    rp.PostTypeId = 1
    AND rp.AnswerCount > 0
    AND rp.TotalUpvotes > rp.TotalDownvotes
ORDER BY 
    rp.CreationDate DESC
LIMIT 10;
