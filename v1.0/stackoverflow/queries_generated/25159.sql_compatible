
WITH TagStatistics AS (
    SELECT 
        t.TagName,
        COUNT(p.Id) AS PostCount,
        SUM(CASE WHEN p.PostTypeId = 1 THEN 1 ELSE 0 END) AS QuestionCount,
        SUM(CASE WHEN p.PostTypeId = 2 THEN 1 ELSE 0 END) AS AnswerCount
    FROM Tags t
    JOIN Posts p ON p.Tags LIKE CONCAT('%<', t.TagName, '>%')
    GROUP BY t.TagName
),
UserReputation AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        u.Reputation,
        COUNT(DISTINCT p.Id) AS PostCount,
        COUNT(DISTINCT b.Id) AS BadgeCount
    FROM Users u
    LEFT JOIN Posts p ON p.OwnerUserId = u.Id
    LEFT JOIN Badges b ON b.UserId = u.Id
    GROUP BY u.Id, u.DisplayName, u.Reputation
),
TopTags AS (
    SELECT 
        TagName,
        PostCount,
        QuestionCount,
        AnswerCount,
        RANK() OVER (ORDER BY PostCount DESC) AS Rank
    FROM TagStatistics
),
ActiveUsers AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        SUM(v.BountyAmount) AS TotalBounties,
        COUNT(v.Id) AS VoteCount
    FROM Users u
    LEFT JOIN Votes v ON v.UserId = u.Id
    WHERE u.Reputation > 1000 
    GROUP BY u.Id, u.DisplayName
),
UserTagEngagement AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        t.TagName,
        COUNT(p.Id) AS UserPostCount
    FROM Users u
    JOIN Posts p ON p.OwnerUserId = u.Id
    JOIN Tags t ON p.Tags LIKE CONCAT('%<', t.TagName, '>%')
    GROUP BY u.Id, u.DisplayName, t.TagName
)
SELECT 
    ts.TagName,
    ts.PostCount,
    ts.QuestionCount,
    ts.AnswerCount,
    ut.DisplayName AS TopUser,
    ua.DisplayName AS ActiveUser,
    ts.Rank,
    ue.TotalBounties,
    ue.VoteCount
FROM TopTags ts
LEFT JOIN UserReputation ut ON ut.PostCount = (SELECT MAX(PostCount) FROM UserReputation)
LEFT JOIN ActiveUsers ue ON ue.UserId IN (SELECT UserId FROM UserTagEngagement WHERE TagName = ts.TagName ORDER BY UserPostCount DESC LIMIT 1)
LEFT JOIN UserTagEngagement u ON u.TagName = ts.TagName
WHERE ts.Rank <= 10 
ORDER BY ts.PostCount DESC;
