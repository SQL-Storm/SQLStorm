
WITH PostVoteSummary AS (
    SELECT 
        p.Id AS PostId,
        COUNT(v.Id) FILTER (WHERE v.VoteTypeId = 2) AS UpVotes,
        COUNT(v.Id) FILTER (WHERE v.VoteTypeId = 3) AS DownVotes,
        COUNT(v.Id) FILTER (WHERE v.VoteTypeId IN (6, 7)) AS CloseReopenVotes,
        SUM(CASE WHEN v.VoteTypeId = 8 THEN v.BountyAmount ELSE 0 END) AS TotalBounty
    FROM 
        Posts p
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    GROUP BY 
        p.Id
),
ClosedPosts AS (
    SELECT 
        ph.PostId,
        COUNT(*) AS CloseCount,
        STRING_AGG(DISTINCT c.Name, ', ') AS CloseReasonNames
    FROM 
        PostHistory ph
    JOIN 
        CloseReasonTypes c ON CAST(ph.Comment AS INTEGER) = c.Id
    WHERE 
        ph.PostHistoryTypeId = 10 
    GROUP BY 
        ph.PostId
),
UserBadges AS (
    SELECT 
        u.Id AS UserId,
        COUNT(b.Id) FILTER (WHERE b.Class = 1) AS GoldBadges,
        COUNT(b.Id) FILTER (WHERE b.Class = 2) AS SilverBadges,
        COUNT(b.Id) FILTER (WHERE b.Class = 3) AS BronzeBadges
    FROM 
        Users u
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    GROUP BY 
        u.Id
),
RecentActivity AS (
    SELECT 
        p.Id AS PostId,
        RANK() OVER (PARTITION BY p.Id ORDER BY p.LastActivityDate DESC) AS ActivityRank
    FROM 
        Posts p
    WHERE 
        p.LastActivityDate IS NOT NULL
)
SELECT 
    p.Title,
    p.CreationDate,
    u.DisplayName AS OwnerDisplayName,
    ps.UpVotes,
    ps.DownVotes,
    COALESCE(cp.CloseCount, 0) AS TotalCloseCount,
    COALESCE(cp.CloseReasonNames, 'No close reasons') AS CloseReasonDetails,
    ub.GoldBadges,
    ub.SilverBadges,
    ub.BronzeBadges,
    CASE 
        WHEN ra.ActivityRank = 1 THEN 'Most Recent Activity'
        ELSE 'Older Activity'
    END AS ActivityStatus,
    CASE 
        WHEN ps.TotalBounty > 0 THEN CONCAT('Bounty Awarded: ', ps.TotalBounty)
        ELSE 'No Bounty'
    END AS BountyStatus
FROM 
    Posts p
JOIN 
    Users u ON p.OwnerUserId = u.Id
JOIN 
    PostVoteSummary ps ON p.Id = ps.PostId
LEFT JOIN 
    ClosedPosts cp ON p.Id = cp.PostId
LEFT JOIN 
    UserBadges ub ON u.Id = ub.UserId
LEFT JOIN 
    RecentActivity ra ON p.Id = ra.PostId
WHERE 
    p.IsModeratorOnly = 0
    AND p.Title IS NOT NULL
ORDER BY 
    p.CreationDate DESC
LIMIT 100;
