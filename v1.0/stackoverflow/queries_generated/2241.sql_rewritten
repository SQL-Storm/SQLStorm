WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.ViewCount,
        p.Score,
        COUNT(c.Id) AS CommentCount,
        RANK() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC) AS RankPerUser
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    WHERE 
        p.CreationDate >= DATEADD(YEAR, -1, GETDATE())
    GROUP BY 
        p.Id, p.Title, p.CreationDate, p.ViewCount, p.Score, p.OwnerUserId
),
TopPosts AS (
    SELECT 
        rp.PostId,
        rp.Title,
        rp.CreationDate,
        rp.ViewCount,
        rp.Score,
        rp.CommentCount,
        rp.RankPerUser,
        CASE 
            WHEN rp.RankPerUser <= 5 THEN 'Top 5'
            ELSE 'Below Top 5'
        END AS PostRankGroup
    FROM 
        RankedPosts rp
)
SELECT 
    p.Title,
    p.ViewCount,
    COALESCE(SUM(v.BountyAmount), 0) AS TotalBounty,
    pt.Name AS PostType,
    rp.PostRankGroup,
    STRING_AGG(CONCAT(u.DisplayName, ': ', c.Text), '; ') AS CommentDetails
FROM 
    TopPosts rp
JOIN 
    Posts p ON rp.PostId = p.Id
LEFT JOIN 
    Votes v ON p.Id = v.PostId AND v.VoteTypeId = 8 
JOIN 
    PostTypes pt ON p.PostTypeId = pt.Id
LEFT JOIN 
    Comments c ON p.Id = c.PostId 
LEFT JOIN 
    Users u ON c.UserId = u.Id
GROUP BY 
    p.Title, p.ViewCount, pt.Name, rp.PostRankGroup
HAVING 
    COUNT(c.Id) > 0 OR TotalBounty > 0
ORDER BY 
    p.CreationDate DESC;