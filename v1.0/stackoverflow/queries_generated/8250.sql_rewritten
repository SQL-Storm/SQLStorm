WITH TopUsers AS (
    SELECT 
        U.Id,
        U.DisplayName,
        U.Reputation,
        RANK() OVER (ORDER BY U.Reputation DESC) AS ReputationRank
    FROM 
        Users U
    WHERE 
        U.Reputation > 1000
),
PopularPosts AS (
    SELECT 
        P.Id,
        P.Title,
        P.Score,
        P.ViewCount,
        U.DisplayName AS OwnerDisplayName,
        RANK() OVER (ORDER BY P.Score DESC) AS ScoreRank
    FROM 
        Posts P
    JOIN 
        Users U ON P.OwnerUserId = U.Id
    WHERE 
        P.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 year' 
        AND P.PostTypeId IN (1, 2)  
),
RecentPostHistory AS (
    SELECT 
        PH.PostId,
        PH.UserId,
        PH.CreationDate,
        PHT.Name AS ChangeType,
        COUNT(PH.Id) AS ChangeCount
    FROM 
        PostHistory PH
    JOIN 
        PostHistoryTypes PHT ON PH.PostHistoryTypeId = PHT.Id
    WHERE 
        PH.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '30 days'
    GROUP BY 
        PH.PostId, PH.UserId, PH.CreationDate, PHT.Name
),
UserBadges AS (
    SELECT 
        U.Id AS UserId,
        COUNT(B.Id) AS BadgeCount
    FROM 
        Users U
    LEFT JOIN 
        Badges B ON U.Id = B.UserId
    GROUP BY 
        U.Id
)
SELECT 
    TU.DisplayName AS TopUser,
    TU.Reputation AS UserReputation,
    PP.Title AS PopularPostTitle,
    PP.Score AS PopularPostScore,
    PP.ViewCount AS PopularPostViews,
    RPH.UserId AS EditorId,
    RPH.ChangeType AS RecentChangeType,
    RPH.ChangeCount AS RecentChangeCount,
    UB.BadgeCount AS UserBadges
FROM 
    TopUsers TU
JOIN 
    PopularPosts PP ON TU.Id = PP.OwnerDisplayName
LEFT JOIN 
    RecentPostHistory RPH ON PP.Id = RPH.PostId
LEFT JOIN 
    UserBadges UB ON TU.Id = UB.UserId
ORDER BY 
    TU.Reputation DESC, PP.Score DESC, RPH.ChangeCount DESC;