
WITH PostDetails AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.Body,
        p.CreationDate,
        p.Score,
        p.Tags,
        p.ViewCount,
        p.AnswerCount,
        u.DisplayName AS OwnerDisplayName,
        u.Reputation AS OwnerReputation,
        (SELECT COUNT(*) FROM Comments c WHERE c.PostId = p.Id) AS CommentCount,
        (SELECT STRING_AGG(DISTINCT b.Name, ', ') 
         FROM Badges b 
         WHERE b.UserId = p.OwnerUserId) AS OwnerBadges
    FROM 
        Posts p
    JOIN 
        Users u ON p.OwnerUserId = u.Id
    WHERE 
        p.PostTypeId = 1 
        AND p.CreationDate >= '2023-01-01'
),
EditedPosts AS (
    SELECT 
        ph.PostId,
        ph.CreationDate AS EditDate,
        ph.UserDisplayName AS EditorDisplayName,
        p.Title AS EditedTitle,
        p.Body AS EditedBody
    FROM 
        PostHistory ph
    JOIN 
        Posts p ON ph.PostId = p.Id
    WHERE 
        ph.PostHistoryTypeId IN (4, 5) 
        AND ph.CreationDate >= '2023-01-01'
),
TopTags AS (
    SELECT 
        t.TagName, 
        COUNT(p.Id) AS PostCount
    FROM 
        Tags t
    JOIN 
        Posts p ON p.Tags LIKE CONCAT('%', t.TagName, '%')
    GROUP BY 
        t.TagName
    ORDER BY 
        PostCount DESC
    LIMIT 5
),
PopularPosts AS (
    SELECT 
        pd.PostId,
        pd.Title,
        pd.ViewCount,
        pd.AnswerCount,
        pd.OwnerDisplayName,
        pd.OwnerReputation,
        pd.CommentCount,
        pd.OwnerBadges,
        tt.TagName
    FROM 
        PostDetails pd
    JOIN 
        TopTags tt ON pd.Tags LIKE CONCAT('%', tt.TagName, '%')
    ORDER BY 
        pd.ViewCount DESC
    LIMIT 10
)

SELECT 
    pp.PostId,
    pp.Title,
    pp.ViewCount,
    pp.AnswerCount,
    pp.OwnerDisplayName,
    pp.OwnerReputation,
    pp.CommentCount,
    pp.OwnerBadges,
    tt.TagName
FROM 
    PopularPosts pp
JOIN 
    TopTags tt ON pp.Tags LIKE CONCAT('%', tt.TagName, '%')
ORDER BY 
    pp.ViewCount DESC, pp.AnswerCount DESC;
