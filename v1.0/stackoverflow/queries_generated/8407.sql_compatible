
WITH UserActivity AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COUNT(DISTINCT p.Id) AS TotalPosts,
        COUNT(DISTINCT c.Id) AS TotalComments,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS Upvotes,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS Downvotes,
        SUM(b.Class) AS BadgePoints,
        RANK() OVER (ORDER BY COUNT(DISTINCT p.Id) DESC) AS PostRank
    FROM Users u
    LEFT JOIN Posts p ON u.Id = p.OwnerUserId
    LEFT JOIN Comments c ON u.Id = c.UserId
    LEFT JOIN Votes v ON p.Id = v.PostId
    LEFT JOIN Badges b ON u.Id = b.UserId
    WHERE u.Reputation > 100
    GROUP BY u.Id, u.DisplayName
), TopUsers AS (
    SELECT UserId, DisplayName, TotalPosts, TotalComments, Upvotes, Downvotes, BadgePoints,
           ROW_NUMBER() OVER (ORDER BY TotalPosts DESC) AS RowNum
    FROM UserActivity
    WHERE TotalPosts > 5
)
SELECT 
    tu.UserId,
    tu.DisplayName,
    tu.TotalPosts,
    tu.TotalComments,
    tu.Upvotes,
    tu.Downvotes,
    tu.BadgePoints,
    COUNT(DISTINCT pf.UserId) AS TotalFollowers,
    MAX(p.CreationDate) AS LastPostDate
FROM TopUsers tu
LEFT JOIN Posts p ON tu.UserId = p.OwnerUserId
LEFT JOIN (SELECT OwnerUserId AS UserId, COUNT(*) AS Id FROM Posts GROUP BY OwnerUserId) AS pf ON tu.UserId = pf.UserId
GROUP BY tu.UserId, tu.DisplayName, tu.TotalPosts, tu.TotalComments, tu.Upvotes, tu.Downvotes, tu.BadgePoints
HAVING COUNT(DISTINCT p.Id) > 3
ORDER BY tu.PostRank, tu.BadgePoints DESC
LIMIT 10;
