
WITH RecursiveTagCount AS (
    SELECT T.Id AS TagId, T.TagName, T.Count, 1 AS Level
    FROM Tags T
    WHERE T.Count > 0

    UNION ALL

    SELECT T.Id, T.TagName, T.Count, RTC.Level + 1
    FROM Tags T
    JOIN RecursiveTagCount RTC ON T.Id = RTC.TagId
    WHERE RTC.Level < 5
),
UserActivity AS (
    SELECT U.Id AS UserId, U.DisplayName, 
           SUM(CASE WHEN P.OwnerUserId IS NOT NULL THEN 1 ELSE 0 END) AS QuestionCount,
           SUM(CASE WHEN A.OwnerUserId IS NOT NULL THEN 1 ELSE 0 END) AS AnswerCount,
           COALESCE(SUM(COALESCE(P.Score, 0)), 0) AS TotalScore,
           COUNT(DISTINCT C.Id) AS CommentCount
    FROM Users U
    LEFT JOIN Posts P ON P.OwnerUserId = U.Id AND P.PostTypeId = 1
    LEFT JOIN Posts A ON A.OwnerUserId = U.Id AND A.PostTypeId = 2
    LEFT JOIN Comments C ON C.UserId = U.Id
    GROUP BY U.Id, U.DisplayName
),
TopUsers AS (
    SELECT UserId, DisplayName, TotalScore
    FROM UserActivity
    WHERE TotalScore > 100
    ORDER BY TotalScore DESC
    LIMIT 5
),
PostHistorySummary AS (
    SELECT PH.PostId, PT.Name AS PostType, COUNT(PH.Id) AS HistoryCount,
           MAX(PH.CreationDate) AS LastModified
    FROM PostHistory PH
    JOIN PostHistoryTypes PHT ON PH.PostHistoryTypeId = PHT.Id
    JOIN Posts P ON PH.PostId = P.Id
    JOIN PostTypes PT ON P.PostTypeId = PT.Id
    GROUP BY PH.PostId, PT.Name
),
FinalSummary AS (
    SELECT U.UserId, U.DisplayName, TH.TotalScore, TH.QuestionCount, TH.AnswerCount, TH.CommentCount,
           PHS.PostType, PHS.HistoryCount, PHS.LastModified
    FROM TopUsers U
    JOIN UserActivity TH ON U.UserId = TH.UserId
    JOIN PostHistorySummary PHS ON TH.QuestionCount > 0
)
SELECT F.UserId, F.DisplayName, F.TotalScore, F.QuestionCount, F.AnswerCount, 
       F.CommentCount, F.PostType, F.HistoryCount, F.LastModified
FROM FinalSummary F
WHERE F.LastModified >= (CURRENT_DATE - INTERVAL '6 months') 
ORDER BY F.TotalScore DESC, F.CommentCount DESC;
