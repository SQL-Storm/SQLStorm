WITH TagStatistics AS (
    SELECT
        t.TagName,
        COUNT(DISTINCT p.Id) AS PostCount,
        SUM(COALESCE(p.ViewCount, 0)) AS TotalViews,
        SUM(COALESCE(p.Score, 0)) AS TotalScore,
        AVG(COALESCE(p.Score, 0)) AS AverageScore,
        STRING_AGG(DISTINCT u.DisplayName, ', ') AS Contributors
    FROM Tags t
    LEFT JOIN Posts p ON p.Tags LIKE '%' || t.TagName || '%'
    LEFT JOIN Users u ON p.OwnerUserId = u.Id
    WHERE t.Count > 0
    GROUP BY t.TagName
),
MostActiveContributors AS (
    SELECT
        u.DisplayName,
        COUNT(DISTINCT p.Id) AS Contributions,
        SUM(COALESCE(v.BountyAmount, 0)) AS TotalBounty,
        AVG(COALESCE(v.CreationDate, 0)) AS AvgVoteDate
    FROM Users u
    LEFT JOIN Posts p ON p.OwnerUserId = u.Id
    LEFT JOIN Votes v ON v.UserId = u.Id
    GROUP BY u.DisplayName
    ORDER BY Contributions DESC
    LIMIT 10
),
PostHistoryAnalysis AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.ViewCount,
        p.AnswerCount,
        ph.PostHistoryTypeId,
        ph.UserDisplayName,
        ph.CreationDate AS HistoryDate,
        ph.Comment,
        ph.Text
    FROM Posts p
    JOIN PostHistory ph ON p.Id = ph.PostId
    WHERE ph.PostHistoryTypeId IN (10, 11, 12)  
    ORDER BY ph.CreationDate DESC
)
SELECT 
    ts.TagName,
    ts.PostCount,
    ts.TotalViews,
    ts.TotalScore,
    ts.AverageScore,
    mac.Contributors,
    pha.PostId,
    pha.Title,
    pha.CreationDate AS PostCreationDate,
    pha.ViewCount AS PostViewCount,
    pha.AnswerCount AS PostAnswerCount,
    pha.PostHistoryTypeId,
    pha.UserDisplayName AS Historian,
    pha.HistoryDate,
    pha.Comment,
    pha.Text AS HistoryText
FROM TagStatistics ts
JOIN MostActiveContributors mac ON mac.Contributions > 5
JOIN PostHistoryAnalysis pha ON pha.PostId IN (
    SELECT p.Id
    FROM Posts p
    WHERE p.Tags LIKE '%' || ts.TagName || '%'
)
ORDER BY ts.TotalViews DESC, ts.AverageScore DESC;