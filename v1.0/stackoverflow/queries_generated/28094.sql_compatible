
WITH RankedPosts AS (
    SELECT 
        P.Id AS PostId,
        P.Title,
        P.Body,
        P.CreationDate,
        P.Score,
        P.ViewCount,
        COUNT(CASE WHEN C.PostId IS NOT NULL THEN 1 END) AS CommentCount,
        ARRAY_AGG(DISTINCT T.TagName) AS Tags,
        RANK() OVER (ORDER BY P.Score DESC) AS RankScore
    FROM 
        Posts P
    LEFT JOIN 
        Comments C ON P.Id = C.PostId
    LEFT JOIN 
        UNNEST(string_to_array(P.Tags, ',')) AS TagArray(TagName) ON TRUE
    LEFT JOIN 
        Tags T ON TRIM(BOTH '<>' FROM TagArray.TagName) = T.TagName
    WHERE 
        P.PostTypeId = 1 
    GROUP BY 
        P.Id, P.Title, P.Body, P.CreationDate, P.Score, P.ViewCount
),
PopularPosts AS (
    SELECT 
        RP.*,
        U.DisplayName AS OwnerName,
        U.Reputation AS OwnerReputation
    FROM 
        RankedPosts RP
    JOIN 
        Users U ON RP.OwnerUserId = U.Id
    WHERE 
        RP.RankScore <= 10 
)

SELECT 
    PP.PostId,
    PP.Title,
    PP.Body,
    PP.CreationDate,
    PP.Score,
    PP.ViewCount,
    PP.CommentCount,
    PP.Tags,
    PP.OwnerName,
    PP.OwnerReputation,
    COALESCE(
        (SELECT ARRAY_AGG(HD.Comment)
         FROM PostHistory HD
         WHERE HD.PostId = PP.PostId
           AND HD.PostHistoryTypeId IN (10, 11) 
         ORDER BY HD.CreationDate DESC
         LIMIT 3
        ), ARRAY[] AS text[]) AS RecentHistoryComments
FROM 
    PopularPosts PP
ORDER BY 
    PP.Score DESC, 
    PP.ViewCount DESC;
