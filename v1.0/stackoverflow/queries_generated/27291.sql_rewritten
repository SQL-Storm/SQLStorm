WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.Tags,
        p.CreationDate,
        p.Score,
        p.ViewCount,
        p.AnswerCount,
        p.CommentCount,
        ROW_NUMBER() OVER (PARTITION BY p.Tags ORDER BY p.Score DESC) AS TagRank
    FROM 
        Posts p
    WHERE 
        p.PostTypeId = 1 
        AND p.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 year' 
),
TopPosts AS (
    SELECT 
        rp.PostId, 
        rp.Title, 
        rp.Tags, 
        rp.Score, 
        rp.ViewCount, 
        rp.AnswerCount, 
        rp.CommentCount
    FROM 
        RankedPosts rp
    WHERE 
        rp.TagRank <= 5 
),
UserActivity AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COUNT(DISTINCT p.Id) AS QuestionsAsked,
        COUNT(DISTINCT b.Id) AS BadgesEarned,
        SUM(v.VoteTypeId = 2) AS UpVotesReceived 
    FROM 
        Users u
    LEFT JOIN 
        Posts p ON u.Id = p.OwnerUserId AND p.PostTypeId = 1 
    LEFT JOIN 
        Badges b ON u.Id = b.UserId 
    LEFT JOIN 
        Votes v ON u.Id = v.UserId 
    GROUP BY 
        u.Id, u.DisplayName
),
FinalResults AS (
    SELECT 
        tp.Title AS QuestionTitle,
        tp.Tags AS QuestionTags,
        tp.Score AS QuestionScore,
        u.DisplayName AS UserName,
        u.QuestionsAsked,
        u.BadgesEarned,
        u.UpVotesReceived
    FROM 
        TopPosts tp
    JOIN 
        Users u ON tp.PostId = (SELECT MIN(p.Id) FROM Posts p WHERE p.OwnerUserId = u.Id AND p.PostTypeId = 1) 
    ORDER BY 
        tp.Score DESC, 
        u.UpVotesReceived DESC
)
SELECT 
    *
FROM 
    FinalResults
LIMIT 10;