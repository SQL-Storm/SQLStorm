WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId, 
        p.Title, 
        p.CreationDate, 
        p.Score, 
        p.ViewCount, 
        COUNT(c.Id) AS CommentCount,
        ARRAY_AGG(DISTINCT t.TagName) AS TagsList,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS UserPostRank
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        LATERAL unnest(string_to_array(substring(p.Tags, 2, length(p.Tags)-2), '><')) AS tag ON TRUE
    LEFT JOIN 
        Tags t ON t.TagName = tag
    WHERE 
        p.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 year' 
        AND p.Score > 0
    GROUP BY 
        p.Id
), UserStats AS (
    SELECT 
        u.Id AS UserId, 
        u.DisplayName, 
        u.Reputation, 
        COUNT(b.Id) AS BadgeCount, 
        SUM(v.BountyAmount) AS TotalBounties
    FROM 
        Users u
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    LEFT JOIN 
        Votes v ON u.Id = v.UserId AND v.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 year'
    GROUP BY 
        u.Id
)
SELECT 
    r.PostId, 
    r.Title, 
    r.CreationDate, 
    r.Score, 
    r.ViewCount, 
    r.CommentCount, 
    r.TagsList, 
    u.UserId, 
    u.DisplayName AS UserDisplayName, 
    u.Reputation AS UserReputation, 
    u.BadgeCount, 
    u.TotalBounties
FROM 
    RankedPosts r
JOIN 
    UserStats u ON r.OwnerUserId = u.UserId
WHERE 
    r.UserPostRank <= 5
ORDER BY 
    r.Score DESC, 
    r.ViewCount DESC;