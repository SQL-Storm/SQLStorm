WITH UserActivity AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COUNT(DISTINCT p.Id) AS PostCount,
        SUM(CASE WHEN p.PostTypeId = 1 THEN 1 ELSE 0 END) AS QuestionCount,
        SUM(CASE WHEN p.PostTypeId = 2 THEN 1 ELSE 0 END) AS AnswerCount,
        AVG(p.ViewCount) AS AverageViews,
        SUM(v.VoteTypeId = 2) AS UpVotes,
        SUM(v.VoteTypeId = 3) AS DownVotes
    FROM 
        Users u
    LEFT JOIN 
        Posts p ON u.Id = p.OwnerUserId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    GROUP BY 
        u.Id, u.DisplayName
),
PostEngagement AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.ViewCount,
        p.Score,
        COALESCE(SUM(c.Id), 0) AS CommentCount,
        COALESCE(SUM(pl.RelatedPostId IS NOT NULL), 0) AS RelatedPostCount
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        PostLinks pl ON p.Id = pl.PostId
    WHERE 
        p.CreationDate >= cast('2024-10-01' as date) - INTERVAL '1 year' 
        AND p.PostTypeId IN (1, 2)
    GROUP BY 
        p.Id
),
EngagementMetrics AS (
    SELECT 
        ua.UserId,
        ua.DisplayName,
        pa.PostId,
        pa.Title,
        pa.CreationDate,
        pa.ViewCount,
        pa.Score,
        pa.CommentCount,
        pa.RelatedPostCount,
        ua.QuestionCount,
        ua.AnswerCount,
        ua.AverageViews
    FROM 
        UserActivity ua
    JOIN 
        PostEngagement pa ON ua.UserId = p.OwnerUserId
)
SELECT 
    em.UserId,
    em.DisplayName,
    COUNT(em.PostId) AS TotalPosts,
    SUM(em.ViewCount) AS TotalViews,
    SUM(em.CommentCount) AS TotalComments,
    SUM(em.RelatedPostCount) AS TotalRelatedPosts,
    AVG(em.AverageViews) AS AvgPostViews,
    SUM(em.UpVotes) AS TotalUpVotes,
    SUM(em.DownVotes) AS TotalDownVotes
FROM 
    EngagementMetrics em
GROUP BY 
    em.UserId, em.DisplayName
ORDER BY 
    TotalPosts DESC, TotalViews DESC
LIMIT 10;