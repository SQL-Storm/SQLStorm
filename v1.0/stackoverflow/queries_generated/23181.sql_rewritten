WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.Score,
        p.ViewCount,
        p.CreationDate,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC) AS UserRank,
        COUNT(c.Id) AS CommentCount
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    WHERE 
        p.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 year' 
        AND p.PostTypeId IN (1, 2) 
        AND p.Score IS NOT NULL
    GROUP BY 
        p.Id, p.Title, p.Score, p.ViewCount, p.CreationDate, p.OwnerUserId
),
TopUsers AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        SUM(p.Score) AS TotalScore,
        AVG(p.Score) AS AverageScore
    FROM 
        Users u
    INNER JOIN 
        Posts p ON u.Id = p.OwnerUserId
    GROUP BY 
        u.Id, u.DisplayName
    HAVING 
        AVG(p.Score) > (SELECT AVG(Score) FROM Posts WHERE PostTypeId = 1)
),
PostHistoryInfo AS (
    SELECT 
        ph.PostId,
        ph.PostHistoryTypeId,
        ph.UserId,
        ph.CreationDate,
        ph.Comment,
        MAX(ph.CreationDate) OVER (PARTITION BY ph.PostId ORDER BY ph.CreationDate ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS LastActionDate
    FROM 
        PostHistory ph
    WHERE 
        ph.PostHistoryTypeId IN (10, 11, 12, 13, 19)
)
SELECT 
    rp.PostId,
    rp.Title,
    rp.Score,
    rp.ViewCount,
    ru.DisplayName AS Owner,
    ru.TotalScore,
    ru.AverageScore,
    ph.PostHistoryTypeId,
    ph.UserId AS ActionUserId,
    ph.CreationDate AS ActionDate,
    ph.Comment AS ActionComment,
    COALESCE((
        SELECT STRING_AGG(DISTINCT t.TagName, ', ') 
        FROM Tags t 
        JOIN Posts p ON t.Id = ANY(string_to_array(p.Tags, ', ')::int[])
        WHERE p.Id = rp.PostId
    ), 'No Tags') AS Tags,
    CASE 
        WHEN EXISTS (SELECT 1 FROM Votes v WHERE v.PostId = rp.PostId AND v.VoteTypeId IN (2, 3)) 
        THEN 'Has Votes' 
        ELSE 'No Votes' 
    END AS VoteStatus
FROM 
    RankedPosts rp
JOIN 
    TopUsers ru ON ru.UserId = rp.OwnerUserId
LEFT JOIN 
    PostHistoryInfo ph ON ph.PostId = rp.PostId
WHERE 
    rp.UserRank <= 3
ORDER BY 
    rp.Score DESC, 
    rp.ViewCount DESC, 
    rp.CreationDate DESC;