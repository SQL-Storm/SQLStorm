
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId, 
        p.Title, 
        p.CreationDate,
        p.OwnerUserId,
        COUNT(c.Id) AS CommentCount,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS PostRank
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    WHERE 
        p.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 year'
    GROUP BY 
        p.Id, p.Title, p.CreationDate, p.OwnerUserId
),
TopUsers AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        SUM(CASE WHEN b.Class = 1 THEN 1 ELSE 0 END) AS GoldBadges,
        SUM(CASE WHEN b.Class = 2 THEN 1 ELSE 0 END) AS SilverBadges,
        SUM(CASE WHEN b.Class = 3 THEN 1 ELSE 0 END) AS BronzeBadges
    FROM 
        Users u
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    GROUP BY 
        u.Id, u.DisplayName
    HAVING 
        COUNT(b.Id) > 0
),
UserPostStats AS (
    SELECT 
        u.DisplayName,
        COALESCE(rp.PostCount, 0) AS TotalPosts,
        COALESCE(SUM(rp.CommentCount), 0) AS TotalComments
    FROM 
        Users u
    LEFT JOIN 
        (SELECT 
            OwnerUserId, 
            COUNT(*) AS PostCount,
            SUM(CommentCount) AS CommentCount
        FROM 
            RankedPosts
        GROUP BY 
            OwnerUserId) rp ON u.Id = rp.OwnerUserId
    GROUP BY 
        u.DisplayName
)
SELECT 
    u.DisplayName,
    ups.TotalPosts,
    ups.TotalComments,
    (CASE 
        WHEN ups.TotalPosts > 0 THEN (CAST(ups.TotalComments AS float) / ups.TotalPosts) 
        ELSE 0 
    END) AS AvgCommentsPerPost,
    (SELECT 
        COUNT(DISTINCT p.Id) 
    FROM 
        Posts p 
    WHERE 
        p.OwnerUserId = u.Id AND 
        p.AcceptedAnswerId IS NOT NULL) AS AcceptedAnswersCount
FROM 
    Users u
JOIN 
    UserPostStats ups ON u.DisplayName = ups.DisplayName
WHERE 
    (SELECT COUNT(*) FROM Posts p WHERE p.OwnerUserId = u.Id) > 5
ORDER BY 
    AvgCommentsPerPost DESC;
