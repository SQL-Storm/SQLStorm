
WITH RankedPosts AS (
    SELECT 
        p.Id,
        p.Title,
        p.CreationDate,
        p.Score,
        p.ViewCount,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS rn,
        COUNT(CASE WHEN v.VoteTypeId = 2 THEN 1 END) OVER (PARTITION BY p.Id) AS UpVotes,
        COUNT(CASE WHEN v.VoteTypeId = 3 THEN 1 END) OVER (PARTITION BY p.Id) AS DownVotes
    FROM 
        Posts p
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    WHERE 
        p.CreationDate >= (CAST('2024-10-01 12:34:56' AS TIMESTAMP) - INTERVAL '1 year')
),
UserBadges AS (
    SELECT 
        b.UserId,
        COUNT(CASE WHEN b.Class = 1 THEN 1 END) AS GoldBadges,
        COUNT(CASE WHEN b.Class = 2 THEN 1 END) AS SilverBadges,
        COUNT(CASE WHEN b.Class = 3 THEN 1 END) AS BronzeBadges
    FROM 
        Badges b
    GROUP BY 
        b.UserId
),
ClosedPosts AS (
    SELECT 
        DISTINCT ph.PostId,
        ph.CreationDate,
        ph.Comment
    FROM 
        PostHistory ph 
    WHERE 
        ph.PostHistoryTypeId = 10
)
SELECT 
    u.Id AS UserId,
    u.DisplayName,
    COALESCE(rp.Title, 'No posts available') AS LastPostTitle,
    rp.CreationDate AS LastPostDate,
    rp.Score AS LastPostScore,
    rp.ViewCount AS LastPostViewCount,
    ub.GoldBadges,
    ub.SilverBadges,
    ub.BronzeBadges,
    cp.CreationDate AS ClosedDate,
    cp.Comment AS ClosureReason
FROM 
    Users u
LEFT JOIN 
    RankedPosts rp ON u.Id = rp.OwnerUserId AND rp.rn = 1
LEFT JOIN 
    UserBadges ub ON u.Id = ub.UserId
LEFT JOIN 
    ClosedPosts cp ON u.Id = cp.PostId
WHERE 
    u.Reputation > 1000
ORDER BY 
    u.Reputation DESC, 
    rp.CreationDate DESC NULLS LAST
LIMIT 20;
