WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Score,
        p.ViewCount,
        ROW_NUMBER() OVER (PARTITION BY p.PostTypeId ORDER BY p.Score DESC) AS Rank,
        COUNT(c.Id) OVER (PARTITION BY p.Id) AS CommentCount
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    WHERE 
        p.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 year'
), 
UserEngagement AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COUNT(DISTINCT p.Id) AS PostCount,
        COUNT(DISTINCT c.Id) AS CommentCount,
        SUM(COALESCE(v.BountyAmount, 0)) AS TotalBounties
    FROM 
        Users u
    LEFT JOIN 
        Posts p ON u.Id = p.OwnerUserId
    LEFT JOIN 
        Comments c ON u.Id = c.UserId
    LEFT JOIN 
        Votes v ON u.Id = v.UserId
    GROUP BY 
        u.Id, u.DisplayName
), 
TagStatistics AS (
    SELECT 
        t.TagName,
        COUNT(p.Id) AS PostCount,
        AVG(p.Score) AS AvgScore
    FROM 
        Tags t
    LEFT JOIN 
        Posts p ON p.Tags ILIKE '%' || t.TagName || '%'
    GROUP BY 
        t.TagName
)

SELECT 
    r.Title,
    r.Score, 
    r.ViewCount,
    r.Rank,
    u.DisplayName,
    u.PostCount AS UserPostCount,
    u.CommentCount AS UserCommentCount,
    u.TotalBounties,
    t.TagName,
    t.PostCount AS TagPostCount,
    t.AvgScore
FROM 
    RankedPosts r
JOIN 
    UserEngagement u ON r.PostId = u.UserId
JOIN 
    TagStatistics t ON r.PostId = ANY(STRING_TO_ARRAY(r.Tags, ','))
WHERE 
    r.Rank <= 10
ORDER BY 
    r.Score DESC, u.TotalBounties DESC
LIMIT 100;