WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.Score,
        p.CreationDate,
        p.LastActivityDate,
        ROW_NUMBER() OVER (PARTITION BY p.PostTypeId ORDER BY p.Score DESC, p.CreationDate ASC) AS rn,
        COUNT(*) OVER (PARTITION BY p.PostTypeId) AS TotalPosts,
        COALESCE(NULLIF(UPPER(p.Title), ''), 'Untitled') AS NormalizedTitle
    FROM 
        Posts p
    WHERE 
        p.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 year' 
        AND p.Score IS NOT NULL
),
PostTags AS (
    SELECT 
        p.Id AS PostId,
        STRING_AGG(t.TagName, ', ') AS Tags
    FROM 
        Posts p
    JOIN 
        UNNEST(string_to_array(substring(p.Tags, 2, length(p.Tags)-2), '><')) AS tagName ON true
    JOIN 
        Tags t ON t.TagName = tagName
    GROUP BY 
        p.Id
),
UserBadges AS (
    SELECT 
        u.Id AS UserId,
        COUNT(b.Id) AS BadgeCount,
        MAX(b.Class) AS HighestBadgeClass
    FROM 
        Users u
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    GROUP BY 
        u.Id
),
RecentComments AS (
    SELECT 
        c.PostId,
        c.Text,
        c.CreationDate,
        RANK() OVER (PARTITION BY c.PostId ORDER BY c.CreationDate DESC) AS RecentRank
    FROM 
        Comments c
    WHERE 
        c.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '30 days'
),
PostHistoryStats AS (
    SELECT 
        ph.PostId,
        ph.PostHistoryTypeId,
        COUNT(*) AS HistoryCount
    FROM 
        PostHistory ph
    GROUP BY 
        ph.PostId, ph.PostHistoryTypeId
)
SELECT 
    rp.PostId,
    rp.Title AS PostTitle,
    rp.Score AS PostScore,
    rp.NormalizedTitle,
    pt.Tags AS AssociatedTags,
    ub.BadgeCount,
    ub.HighestBadgeClass,
    MAX(CASE WHEN rc.RecentRank <= 3 THEN rc.Text END) AS RecentComment,
    phs.HistoryCount AS EditHistoryCount
FROM 
    RankedPosts rp
JOIN 
    PostTags pt ON rp.PostId = pt.PostId
JOIN 
    Users u ON rp.OwnerUserId = u.Id
LEFT JOIN 
    UserBadges ub ON u.Id = ub.UserId
LEFT JOIN 
    RecentComments rc ON rp.PostId = rc.PostId
LEFT JOIN 
    PostHistoryStats phs ON rp.PostId = phs.PostId
WHERE 
    rp.TotalPosts > 5
    AND (rp.Score > 10 OR rp.CreationDate < cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '6 months')
GROUP BY 
    rp.PostId, rp.Title, rp.Score, rp.NormalizedTitle, pt.Tags, ub.BadgeCount, ub.HighestBadgeClass, phs.HistoryCount
ORDER BY 
    rp.Score DESC, rp.LastActivityDate DESC
LIMIT 50;