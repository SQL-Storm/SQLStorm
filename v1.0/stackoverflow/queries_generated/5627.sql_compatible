
WITH RankedPosts AS (
    SELECT 
        p.Id, 
        p.Title, 
        p.CreationDate, 
        p.Score, 
        p.ViewCount, 
        ARRAY_AGG(DISTINCT t.TagName) AS Tags,
        RANK() OVER (PARTITION BY p.PostTypeId ORDER BY p.CreationDate DESC) AS PostRank
    FROM 
        Posts p
    LEFT JOIN 
        UNNEST(string_to_array(substring(p.Tags, 2, LENGTH(p.Tags) - 2), '><')) AS t(TagName)
    GROUP BY 
        p.Id, p.Title, p.CreationDate, p.Score, p.ViewCount, p.PostTypeId
),
PostStats AS (
    SELECT 
        u.DisplayName AS Author, 
        COUNT(c.Id) AS CommentCount, 
        COUNT(v.Id) FILTER (WHERE v.VoteTypeId = 2) AS UpVotes, 
        COUNT(v.Id) FILTER (WHERE v.VoteTypeId = 3) AS DownVotes
    FROM 
        Users u
    JOIN 
        Posts p ON u.Id = p.OwnerUserId
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    GROUP BY 
        u.DisplayName
),
CombinedResults AS (
    SELECT 
        rp.Title, 
        rp.CreationDate, 
        rp.Score, 
        rp.ViewCount, 
        rp.Tags, 
        ps.Author, 
        ps.CommentCount, 
        ps.UpVotes, 
        ps.DownVotes
    FROM 
        RankedPosts rp
    JOIN 
        PostStats ps ON ps.Author = rp.Title
    WHERE 
        rp.PostRank <= 5
)
SELECT 
    * 
FROM 
    CombinedResults
ORDER BY 
    Score DESC, 
    CreationDate DESC;
