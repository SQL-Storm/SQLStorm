WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        U.DisplayName AS Author,
        p.CreationDate,
        p.Tags,
        COUNT(a.Id) AS AnswerCount,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes,
        ROW_NUMBER() OVER (PARTITION BY p.Tags ORDER BY COUNT(a.Id) DESC, SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) DESC) AS Rank
    FROM 
        Posts p
    LEFT JOIN 
        Users U ON p.OwnerUserId = U.Id
    LEFT JOIN 
        Posts a ON a.ParentId = p.Id 
    LEFT JOIN 
        Votes v ON v.PostId = p.Id
    WHERE 
        p.PostTypeId = 1 
    GROUP BY 
        p.Id, U.DisplayName, p.CreationDate, p.Title, p.Tags
),
PopularTags AS (
    SELECT 
        unnest(string_to_array(REPLACE(REPLACE(p.Tags, '<', ''), '>', ''), '>')) AS Tag
    FROM 
        Posts p
    WHERE 
        p.PostTypeId = 1
    GROUP BY Tag
),
TagStats AS (
    SELECT 
        Tag,
        COUNT(*) AS PostCount,
        AVG(u.Reputation) AS AverageReputation
    FROM 
        PopularTags pt
    JOIN 
        Posts p ON pt.Tag IN (SELECT unnest(string_to_array(REPLACE(REPLACE(p.Tags, '<', ''), '>', ''), '>')))
    JOIN 
        Users u ON p.OwnerUserId = u.Id
    GROUP BY 
        Tag
)
SELECT 
    rp.PostId,
    rp.Title,
    rp.Author,
    rp.CreationDate,
    rp.AnswerCount,
    rp.UpVotes,
    rp.DownVotes,
    tt.Tag,
    ts.PostCount,
    ts.AverageReputation
FROM 
    RankedPosts rp
JOIN 
    PopularTags tt ON rp.Tags LIKE '%' || tt.Tag || '%'
JOIN 
    TagStats ts ON tt.Tag = ts.Tag
WHERE 
    rp.Rank <= 5 
ORDER BY 
    ts.PostCount DESC, rp.UpVotes DESC;