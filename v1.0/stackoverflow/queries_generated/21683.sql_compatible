
WITH UserActivity AS (
    SELECT 
        U.Id AS UserId,
        U.Reputation,
        COUNT(DISTINCT P.Id) AS PostCount,
        SUM(COALESCE(V.BountyAmount, 0)) AS TotalBounty,
        AVG(U.Views) AS AverageViews,
        SUM(CASE WHEN V.VoteTypeId = 2 THEN 1 ELSE 0 END) AS Upvotes,
        SUM(CASE WHEN V.VoteTypeId = 3 THEN 1 ELSE 0 END) AS Downvotes,
        ROW_NUMBER() OVER (PARTITION BY U.Id ORDER BY SUM(CASE WHEN V.VoteTypeId IN (2, 3) THEN 1 ELSE 0 END) DESC) AS ActivityRank
    FROM 
        Users U
    LEFT JOIN 
        Posts P ON U.Id = P.OwnerUserId
    LEFT JOIN 
        Votes V ON P.Id = V.PostId
    GROUP BY 
        U.Id, U.Reputation
),
ActiveUsers AS (
    SELECT 
        UserId, 
        Reputation,
        PostCount,
        TotalBounty,
        AverageViews,
        Upvotes,
        Downvotes,
        ActivityRank
    FROM 
        UserActivity
    WHERE 
        ActivityRank <= 10
),
PostDetails AS (
    SELECT 
        P.Id AS PostId,
        P.Title,
        P.CreationDate,
        P.Score,
        P.ViewCount,
        P.AnswerCount,
        COALESCE(GROUP_CONCAT(DISTINCT T.TagName ORDER BY T.TagName SEPARATOR ', '), 'No Tags') AS Tags,
        CASE 
            WHEN P.ClosedDate IS NOT NULL THEN 'Closed'
            ELSE 'Open'
        END AS Status
    FROM 
        Posts P
    LEFT JOIN 
        Tags T ON FIND_IN_SET(T.TagName, REPLACE(P.Tags, '><', ',')) > 0
    GROUP BY 
        P.Id, P.Title, P.CreationDate, P.Score, P.ViewCount, P.AnswerCount, P.ClosedDate
)
SELECT 
    U.DisplayName,
    U.Reputation,
    UA.PostCount,
    UA.TotalBounty,
    UA.AverageViews,
    PD.PostId,
    PD.Title,
    PD.CreationDate,
    PD.Score,
    PD.ViewCount,
    PD.AnswerCount,
    PD.Tags,
    PD.Status
FROM 
    ActiveUsers UA
JOIN 
    Users U ON UA.UserId = U.Id
LEFT JOIN 
    PostDetails PD ON PD.PostId IN (SELECT P.Id FROM Posts P WHERE P.OwnerUserId = U.Id)
ORDER BY 
    UA.Reputation DESC, 
    PD.Score DESC;
