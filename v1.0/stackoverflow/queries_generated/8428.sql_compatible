
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.ViewCount,
        p.Score,
        p.AnswerCount,
        p.CommentCount,
        u.DisplayName AS OwnerDisplayName,
        ROW_NUMBER() OVER (PARTITION BY p.Tags ORDER BY p.Score DESC, p.ViewCount DESC) AS rn
    FROM 
        Posts p
    JOIN 
        Users u ON p.OwnerUserId = u.Id
    WHERE 
        p.PostTypeId = 1 AND 
        p.Score > 0 AND 
        p.ViewCount > 100
),
PopularTags AS (
    SELECT 
        UNNEST(string_to_array(Tags, '>')) AS Tag 
    FROM 
        Posts 
    WHERE 
        PostTypeId = 1
)
SELECT 
    rp.PostId,
    rp.Title,
    rp.CreationDate,
    rp.ViewCount,
    rp.Score,
    rp.AnswerCount,
    rp.CommentCount,
    rp.OwnerDisplayName,
    COUNT(pt.Tag) AS TagCount
FROM 
    RankedPosts rp 
LEFT JOIN 
    PopularTags pt ON pt.Tag IN (SELECT unnest(string_to_array(rp.Title, ' ')))
WHERE 
    rp.rn <= 3
GROUP BY 
    rp.PostId, rp.Title, rp.CreationDate, rp.ViewCount, rp.Score, rp.AnswerCount, rp.CommentCount, rp.OwnerDisplayName
ORDER BY 
    rp.Score DESC, rp.ViewCount DESC
LIMIT 50;
