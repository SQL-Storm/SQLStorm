
WITH PostStats AS (
    SELECT 
        p.Id AS PostId,
        p.PostTypeId,
        p.CreationDate,
        p.Score,
        p.ViewCount,
        p.AnswerCount,
        p.CommentCount,
        u.Reputation AS OwnerReputation,
        CONCAT('{', STRING_AGG(DISTINCT t.TagName, ', '), '}') AS Tags
    FROM 
        Posts p
    JOIN 
        Users u ON p.OwnerUserId = u.Id
    LEFT JOIN 
        LATERAL STRING_TO_ARRAY(p.Tags, ',') AS tag_array ON TRUE
    LEFT JOIN 
        Tags t ON t.TagName = TRIM(BOTH ' ' FROM tag_array) 
    GROUP BY 
        p.Id, p.PostTypeId, p.CreationDate, p.Score, p.ViewCount, p.AnswerCount, p.CommentCount, u.Reputation
),
TopPosts AS (
    SELECT 
        PostId,
        PostTypeId,
        CreationDate,
        Score,
        ViewCount,
        AnswerCount,
        CommentCount,
        OwnerReputation,
        Tags,
        ROW_NUMBER() OVER (PARTITION BY PostTypeId ORDER BY Score DESC) AS Rank
    FROM 
        PostStats
)
SELECT 
    PostId,
    PostTypeId,
    CreationDate,
    Score,
    ViewCount,
    AnswerCount,
    CommentCount,
    OwnerReputation,
    Tags
FROM 
    TopPosts
WHERE 
    Rank <= 10  
ORDER BY 
    PostTypeId, Score DESC;
