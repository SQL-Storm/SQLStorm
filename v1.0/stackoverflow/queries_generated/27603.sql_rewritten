WITH TagDetails AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Body,
        p.Tags,
        COUNT(a.id) AS AnswerCount,
        COUNT(c.id) AS CommentCount,
        STRING_AGG(DISTINCT t.TagName, ', ') AS AssociatedTags
    FROM 
        Posts p
    LEFT JOIN 
        Posts a ON p.Id = a.ParentId
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        Tags t ON t.Id = ANY(string_to_array(substring(p.Tags, 2, length(p.Tags) - 2), '><')::int[])
    WHERE 
        p.PostTypeId = 1  
    GROUP BY 
        p.Id, p.Title, p.CreationDate, p.Body, p.Tags
),
PostHistoryStats AS (
    SELECT 
        ph.PostId,
        ph.PostHistoryTypeId,
        COUNT(ph.Id) AS ChangeCount,
        MAX(ph.CreationDate) AS LastChangeDate,
        STRING_AGG(CONCAT(ph.UserDisplayName, ': ', ph.Text), '; ') AS ChangeDetails
    FROM 
        PostHistory ph
    WHERE 
        ph.PostHistoryTypeId IN (10, 11, 12)  
    GROUP BY 
        ph.PostId, ph.PostHistoryTypeId
)
SELECT 
    t.PostId,
    t.Title,
    t.CreationDate,
    t.AssociatedTags,
    t.AnswerCount,
    t.CommentCount,
    COALESCE(h.ChangeCount, 0) AS HistoryChangeCount,
    COALESCE(h.LastChangeDate, 'No Changes') AS LastHistoryChange,
    COALESCE(h.ChangeDetails, 'No Details') AS HistoryDetails
FROM 
    TagDetails t
LEFT JOIN 
    PostHistoryStats h ON t.PostId = h.PostId 
ORDER BY 
    t.CreationDate DESC;