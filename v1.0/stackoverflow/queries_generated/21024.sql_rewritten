WITH UserBadges AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COUNT(b.Id) AS BadgeCount,
        MAX(b.Class) AS MaxBadgeClass,
        SUM(CASE WHEN b.TagBased THEN 1 ELSE 0 END) AS TagBasedCount
    FROM Users u
    LEFT JOIN Badges b ON u.Id = b.UserId
    WHERE u.Reputation > 1000 
    GROUP BY u.Id, u.DisplayName
),
RecentPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.OwnerUserId,
        p.CreationDate,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS RecentPostRank
    FROM Posts p
    WHERE p.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '30 days'
),
TopTags AS (
    SELECT 
        t.TagName,
        SUM(vote.Count) AS TotalVotes,
        COUNT(DISTINCT p.Id) AS PostCount
    FROM Tags t
    JOIN Posts p ON t.Id = p.Id
    LEFT JOIN (
        SELECT 
            PostId, 
            COUNT(*) AS Count 
        FROM Votes 
        WHERE VoteTypeId = 2  
        GROUP BY PostId
    ) vote ON p.Id = vote.PostId
    GROUP BY t.TagName
    HAVING SUM(vote.Count) > 100
),
PostHistoryDetails AS (
    SELECT 
        ph.PostId,
        PH.UserId,
        COUNT(DISTINCT CASE WHEN ph.PostHistoryTypeId IN (10, 11) THEN 1 END) AS CloseReopenCount,
        COUNT(DISTINCT CASE WHEN ph.PostHistoryTypeId IN (24, 35) THEN 1 END) AS EditApplyCount
    FROM PostHistory ph
    WHERE ph.CreationDate > cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '90 days'
    GROUP BY ph.PostId, PH.UserId
)

SELECT 
    ub.UserId,
    ub.DisplayName,
    ub.BadgeCount,
    ub.MaxBadgeClass,
    ub.TagBasedCount,
    rp.PostId,
    rp.Title,
    rp.CreationDate AS PostCreationDate,
    tt.TagName AS PopularTag,
    pCount.PostCount,
    COALESCE(pChanges.CloseReopenCount, 0) AS CloseReopenCount,
    COALESCE(pChanges.EditApplyCount, 0) AS EditApplyCount
FROM UserBadges ub
LEFT JOIN RecentPosts rp ON ub.UserId = rp.OwnerUserId AND rp.RecentPostRank = 1
LEFT JOIN TopTags tt ON tt.TotalVotes > 200
LEFT JOIN (
    SELECT 
        ph.PostId, 
        ph.UserId,
        SUM(ph.CloseReopenCount) AS CloseReopenCount,
        SUM(ph.EditApplyCount) AS EditApplyCount
    FROM PostHistoryDetails ph
    GROUP BY ph.PostId, ph.UserId
) pChanges ON rp.PostId = pChanges.PostId
ORDER BY ub.BadgeCount DESC, pCount.PostCount DESC, rp.CreationDate DESC;