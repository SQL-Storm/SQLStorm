
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.Tags,
        p.Score,
        p.ViewCount,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC) AS rn,
        u.DisplayName AS OwnerDisplayName,
        u.EmailHash
    FROM 
        Posts p
    JOIN 
        Users u ON p.OwnerUserId = u.Id
    WHERE 
        p.PostTypeId = 1  
        AND p.CreationDate >= CAST('2024-10-01 12:34:56' AS TIMESTAMP) - INTERVAL '1 year'  
),
TopPosts AS (
    SELECT 
        PostId,
        Title,
        Tags,
        Score,
        ViewCount,
        OwnerDisplayName,
        EmailHash
    FROM 
        RankedPosts
    WHERE 
        rn = 1  
),
TagStatistics AS (
    SELECT 
        UNNEST(SPLIT_PART(Tags, '><', 1)) AS TagName,
        COUNT(*) AS PostCount,
        SUM(Score) AS TotalScore,
        AVG(ViewCount) AS AvgViewCount
    FROM 
        TopPosts
    GROUP BY 
        TagName
),
BadgeCounts AS (
    SELECT 
        u.Id AS UserId,
        COUNT(b.Id) AS BadgeCount
    FROM 
        Users u
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    GROUP BY 
        u.Id
)
SELECT 
    ts.OwnerDisplayName,
    ts.EmailHash,
    t.TagName,
    t.PostCount,
    t.TotalScore,
    t.AvgViewCount,
    bc.BadgeCount
FROM 
    TagStatistics t
JOIN 
    TopPosts ts ON t.TagName = ANY(SPLIT_PART(ts.Tags, '><', 1)) 
JOIN 
    BadgeCounts bc ON ts.EmailHash = bc.UserId 
ORDER BY 
    t.TotalScore DESC, 
    t.PostCount DESC;
