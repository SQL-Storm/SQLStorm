
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.Body,
        p.CreationDate,
        p.ViewCount,
        p.Score,
        p.Tags,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC) AS Rank,
        u.DisplayName AS OwnerDisplayName
    FROM 
        Posts p
    JOIN 
        Users u ON p.OwnerUserId = u.Id
    WHERE 
        p.CreationDate >= (CAST('2024-10-01 12:34:56' AS TIMESTAMP) - INTERVAL '1 year') 
        AND p.PostTypeId = 1  
),
TopPosts AS (
    SELECT * 
    FROM RankedPosts 
    WHERE Rank <= 10
),
TagStats AS (
    SELECT 
        unnest(string_to_array(substring(Tags, 2, LENGTH(Tags) - 2), '><')) AS Tag,
        COUNT(*) AS PostCount
    FROM 
        TopPosts
    GROUP BY 
        Tag
),
UserReputation AS (
    SELECT 
        u.Id AS UserId,
        SUM(u.Reputation) AS TotalReputation,
        COUNT(DISTINCT p.Id) AS QuestionsCount
    FROM 
        Users u
    JOIN 
        Posts p ON u.Id = p.OwnerUserId
    WHERE 
        p.PostTypeId = 1 
    GROUP BY 
        u.Id
)
SELECT 
    tp.PostId,
    tp.Title,
    tp.OwnerDisplayName,
    tp.ViewCount,
    tp.Score,
    ts.Tag,
    ts.PostCount,
    ur.TotalReputation,
    ur.QuestionsCount
FROM 
    TopPosts tp
JOIN 
    TagStats ts ON tp.Tags LIKE CONCAT('%', ts.Tag, '%')
JOIN 
    UserReputation ur ON tp.OwnerUserId = ur.UserId
ORDER BY 
    tp.Score DESC, 
    tp.ViewCount DESC;
