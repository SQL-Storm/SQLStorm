
WITH TagStats AS (
    SELECT
        t.TagName,
        COUNT(DISTINCT p.Id) AS PostCount,
        SUM(COALESCE(p.ViewCount, 0)) AS TotalViews,
        AVG(p.Score) AS AvgScore
    FROM
        Tags AS t
    JOIN
        Posts AS p ON t.Id = ANY(string_to_array(substring(p.Tags, 2, length(p.Tags)-2), '><')::varchar[])
    WHERE
        p.PostTypeId = 1 
    GROUP BY
        t.TagName
),
UserActivity AS (
    SELECT
        u.Id AS UserId,
        u.DisplayName,
        SUM(p.ViewCount) AS TotalViewCount,
        COUNT(DISTINCT p.Id) AS TotalPostCount,
        COUNT(DISTINCT b.Id) AS TotalBadges,
        COUNT(DISTINCT v.Id) AS TotalVotes
    FROM
        Users AS u
    LEFT JOIN
        Posts AS p ON u.Id = p.OwnerUserId
    LEFT JOIN
        Badges AS b ON u.Id = b.UserId
    LEFT JOIN
        Votes AS v ON u.Id = v.UserId
    WHERE
        u.Reputation > 1000 
    GROUP BY
        u.Id, u.DisplayName
),
ClosedPosts AS (
    SELECT
        ph.PostId,
        COUNT(*) AS CloseReasonCount,
        STRING_AGG(DISTINCT crt.Name, ', ') AS CloseReasons
    FROM
        PostHistory AS ph
    JOIN
        PostHistoryTypes AS pht ON ph.PostHistoryTypeId = pht.Id
    JOIN
        CloseReasonTypes AS crt ON ph.Comment::varchar = crt.Id
    WHERE
        pht.Name = 'Post Closed'
    GROUP BY
        ph.PostId
)

SELECT
    ts.TagName,
    ts.PostCount,
    ts.TotalViews,
    ts.AvgScore,
    ua.UserId,
    ua.DisplayName,
    ua.TotalViewCount,
    ua.TotalPostCount,
    ua.TotalBadges,
    ua.TotalVotes,
    cp.CloseReasonCount,
    cp.CloseReasons
FROM
    TagStats AS ts
JOIN
    UserActivity AS ua ON ts.PostCount > 0 
LEFT JOIN
    ClosedPosts AS cp ON ua.TotalPostCount > 0 
WHERE
    ts.TotalViews > 1000 
ORDER BY
    ts.PostCount DESC,
    ua.TotalViewCount DESC;
