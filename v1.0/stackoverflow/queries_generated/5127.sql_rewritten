WITH RankedPosts AS (
    SELECT p.Id, p.Title, p.CreationDate, p.Score, 
           ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC) AS RN,
           COUNT(c.Id) AS CommentCount,
           SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes,
           SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes
    FROM Posts p
    LEFT JOIN Comments c ON p.Id = c.PostId
    LEFT JOIN Votes v ON p.Id = v.PostId
    WHERE p.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 year'
    GROUP BY p.Id, p.Title, p.CreationDate, p.Score, p.OwnerUserId
),
TopPosts AS (
    SELECT * FROM RankedPosts
    WHERE RN = 1
),
ActiveUsers AS (
    SELECT u.Id, u.DisplayName, u.Reputation 
    FROM Users u
    WHERE u.LastAccessDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '6 months'
)
SELECT au.DisplayName, au.Reputation, tp.Title, tp.Score, tp.CommentCount, tp.UpVotes, tp.DownVotes
FROM ActiveUsers au
JOIN TopPosts tp ON au.Id = tp.OwnerUserId
ORDER BY tp.Score DESC, au.Reputation DESC
LIMIT 10;