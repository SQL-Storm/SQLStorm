
WITH UserReputation AS (
    SELECT Id, Reputation, CreationDate,
           DENSE_RANK() OVER (ORDER BY Reputation DESC) AS ReputationRank
    FROM Users
),
TopUsers AS (
    SELECT Id, DisplayName, Reputation
    FROM UserReputation
    WHERE ReputationRank <= 10
),
PostMetrics AS (
    SELECT p.Id AS PostId, 
           COUNT(DISTINCT c.Id) AS CommentCount, 
           SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVoteCount,
           SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVoteCount,
           AVG(p.Score) AS AvgScore
    FROM Posts p
    LEFT JOIN Comments c ON p.Id = c.PostId
    LEFT JOIN Votes v ON p.Id = v.PostId
    WHERE p.CreationDate >= DATEADD(day, -30, '2024-10-01')
    GROUP BY p.Id
),
PostHistoryMetrics AS (
    SELECT ph.PostId,
           COUNT(CASE WHEN ph.PostHistoryTypeId IN (10, 11) THEN 1 END) AS CloseActions,
           MAX(ph.CreationDate) AS LastActionDate
    FROM PostHistory ph
    WHERE ph.CreationDate >= DATEADD(year, -1, '2024-10-01')
    GROUP BY ph.PostId
)

SELECT u.DisplayName, 
       p.Title, 
       pm.CommentCount, 
       pm.UpVoteCount, 
       pm.DownVoteCount, 
       pm.AvgScore, 
       ph.CloseActions, 
       ph.LastActionDate
FROM TopUsers u
JOIN Posts p ON u.Id = p.OwnerUserId
JOIN PostMetrics pm ON p.Id = pm.PostId
LEFT JOIN PostHistoryMetrics ph ON p.Id = ph.PostId
WHERE pm.CommentCount > 0
  AND pm.UpVoteCount > pm.DownVoteCount
  AND (ph.CloseActions IS NULL OR ph.CloseActions < 5)
ORDER BY pm.AvgScore DESC, pm.CommentCount DESC;
