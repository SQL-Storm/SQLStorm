WITH RecentPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Score,
        p.ViewCount,
        COALESCE(CAST(p.Body AS varchar(255)), '') AS Preview,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS UserPostRank
    FROM 
        Posts p
    WHERE 
        p.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '30 days'
),

TopUsers AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        SUM(u.UpVotes - u.DownVotes) AS NetVotes,
        RANK() OVER (ORDER BY SUM(u.UpVotes - u.DownVotes) DESC) AS UserRank
    FROM 
        Users u
    JOIN 
        Posts p ON u.Id = p.OwnerUserId
    WHERE 
        p.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '90 days'
    GROUP BY 
        u.Id
),

PostHistoryAggregates AS (
    SELECT 
        ph.PostId,
        ph.PostHistoryTypeId,
        COUNT(*) AS HistoryCount,
        JSON_AGG(DISTINCT ph.UserDisplayName) AS Editors
    FROM 
        PostHistory ph
    WHERE 
        ph.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 year'
    GROUP BY 
        ph.PostId, ph.PostHistoryTypeId
),

LabeledPosts AS (
    SELECT 
        rp.PostId,
        rp.Title,
        rp.CreationDate,
        rp.Score,
        rp.ViewCount,
        ph.HistoryCount,
        pu.NetVotes,
        CASE 
            WHEN pu.UserRank <= 10 THEN 'Top Contributor'
            ELSE 'Regular Contributor'
        END AS ContributorLabel
    FROM 
        RecentPosts rp
    LEFT JOIN 
        PostHistoryAggregates ph ON rp.PostId = ph.PostId
    LEFT JOIN 
        TopUsers pu ON rp.UserPostRank = pu.UserRank
)

SELECT 
    lp.PostId,
    lp.Title,
    lp.CreationDate,
    lp.Score,
    lp.ViewCount,
    lp.HistoryCount,
    NULLIF(lp.NetVotes, 0) AS AdjustedVotes,
    lp.ContributorLabel,
    CASE 
        WHEN lp.HistoryCount IS NULL THEN 'No Edits'
        ELSE 'Edited ' || lp.HistoryCount || ' times'
    END AS EditStatus
FROM 
    LabeledPosts lp
WHERE 
    lp.Score > 10
ORDER BY 
    lp.ViewCount DESC, 
    lp.CreationDate DESC
LIMIT 50
OFFSET 0;