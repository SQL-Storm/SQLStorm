
WITH RankedPosts AS (
    SELECT 
        p.Id, 
        p.Title, 
        p.CreationDate, 
        p.Score, 
        COALESCE(SUM(CASE WHEN vote.VoteTypeId = 2 THEN 1 ELSE 0 END) OVER (PARTITION BY p.Id), 0) AS UpVotes,
        COALESCE(SUM(CASE WHEN vote.VoteTypeId = 3 THEN 1 ELSE 0 END) OVER (PARTITION BY p.Id), 0) AS DownVotes,
        COALESCE(SUM(c.Score) OVER (PARTITION BY p.Id), 0) AS CommentScore,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS Rank
    FROM 
        Posts p
    LEFT JOIN 
        Votes vote ON p.Id = vote.PostId
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    WHERE 
        p.CreationDate >= CURRENT_TIMESTAMP - INTERVAL '30 days'
),
FilteredPosts AS (
    SELECT 
        rp.OwnerUserId, 
        SUM(rp.Score) AS TotalScore, 
        SUM(rp.UpVotes) AS TotalUpVotes, 
        SUM(rp.DownVotes) AS TotalDownVotes, 
        SUM(rp.CommentScore) AS TotalCommentScore
    FROM 
        RankedPosts rp
    WHERE 
        rp.Rank <= 5
    GROUP BY 
        rp.OwnerUserId
),
TopUsers AS (
    SELECT 
        u.Id, 
        u.DisplayName, 
        COALESCE(fp.TotalScore, 0) AS TotalScore, 
        COALESCE(fp.TotalUpVotes, 0) AS TotalUpVotes, 
        COALESCE(fp.TotalDownVotes, 0) AS TotalDownVotes, 
        COALESCE(fp.TotalCommentScore, 0) AS TotalCommentScore
    FROM 
        Users u
    LEFT JOIN 
        FilteredPosts fp ON u.Id = fp.OwnerUserId
)
SELECT 
    tu.DisplayName, 
    tu.TotalScore, 
    tu.TotalUpVotes, 
    tu.TotalDownVotes, 
    tu.TotalCommentScore
FROM 
    TopUsers tu
WHERE 
    tu.TotalScore > 0
ORDER BY 
    tu.TotalScore DESC
LIMIT 10;
