WITH RankedPosts AS (
    SELECT 
        p.Id,
        p.Title,
        p.Score,
        p.ViewCount,
        p.CreationDate,
        p.AcceptedAnswerId,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC) AS Rank,
        COALESCE((SELECT COUNT(*) FROM Votes v WHERE v.PostId = p.Id AND v.VoteTypeId = 2), 0) AS UpVoteCount
    FROM 
        Posts p
    WHERE 
        p.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 year'
),
PostStats AS (
    SELECT 
        rp.OwnerUserId,
        COUNT(rp.Id) AS PostCount,
        AVG(rp.Score) AS AvgScore,
        SUM(rp.UpVoteCount) AS TotalUpVotes
    FROM 
        RankedPosts rp
    WHERE 
        rp.Rank <= 5
    GROUP BY 
        rp.OwnerUserId
)
SELECT 
    u.DisplayName,
    ps.PostCount,
    ps.AvgScore,
    ps.TotalUpVotes,
    CASE 
        WHEN ps.AvgScore IS NULL THEN 'No Score'
        WHEN ps.AvgScore > 100 THEN 'High Performer'
        ELSE 'Regular Performer'
    END AS PerformanceCategory
FROM 
    Users u
LEFT JOIN 
    PostStats ps ON u.Id = ps.OwnerUserId
WHERE 
    u.Reputation > 1000
ORDER BY 
    ps.PostCount DESC NULLS LAST;