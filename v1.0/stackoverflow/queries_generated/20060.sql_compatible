
WITH UserPostStatistics AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COUNT(p.Id) AS TotalPosts,
        SUM(CASE WHEN p.PostTypeId = 1 THEN 1 ELSE 0 END) AS TotalQuestions,
        SUM(CASE WHEN p.PostTypeId = 2 THEN 1 ELSE 0 END) AS TotalAnswers,
        SUM(CASE WHEN p.LastActivityDate IS NOT NULL THEN 1 ELSE 0 END) AS ActivePosts
    FROM 
        Users u
    LEFT JOIN 
        Posts p ON u.Id = p.OwnerUserId
    GROUP BY 
        u.Id, u.DisplayName
), QuestionStats AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        COALESCE((SELECT COUNT(c.Id) FROM Comments c WHERE c.PostId = p.Id), 0) AS CommentCount,
        (SELECT COUNT(v.Id) FROM Votes v WHERE v.PostId = p.Id AND v.VoteTypeId IN (2, 3)) AS VoteCount,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS QuestionRank
    FROM 
        Posts p
    WHERE 
        p.PostTypeId = 1
), TopQuestions AS (
    SELECT 
        qs.PostId,
        qs.Title,
        qs.CommentCount,
        qs.VoteCount,
        ups.DisplayName,
        ups.TotalPosts,
        ups.TotalQuestions,
        ups.TotalAnswers,
        ups.ActivePosts
    FROM 
        QuestionStats qs
    JOIN 
        UserPostStatistics ups ON qs.PostId IN (SELECT p.Id FROM Posts p WHERE p.OwnerUserId = ups.UserId)
    WHERE 
        qs.QuestionRank <= 5
), CloseReasonCounts AS (
    SELECT 
        p.Id AS PostId,
        COUNT(ph.Id) AS CloseReasonCount
    FROM 
        Posts p
    LEFT JOIN 
        PostHistory ph ON p.Id = ph.PostId AND ph.PostHistoryTypeId = 10
    GROUP BY 
        p.Id
)
SELECT 
    tq.DisplayName,
    tq.Title,
    tq.CommentCount,
    tq.VoteCount,
    COALESCE(crc.CloseReasonCount, 0) AS CloseReasonCount,
    CASE 
        WHEN COALESCE(crc.CloseReasonCount, 0) > 0 THEN 'Closed'
        ELSE 'Open'
    END AS Status,
    CASE 
        WHEN tq.ActivePosts > 0 THEN 'Active'
        ELSE 'Inactive'
    END AS UserActivity,
    CASE 
        WHEN tq.TotalQuestions > 0 THEN ROUND(COALESCE(tq.VoteCount, 0)::numeric / tq.TotalQuestions, 2)
        ELSE NULL
    END AS AverageVotesPerQuestion
FROM 
    TopQuestions tq
LEFT JOIN 
    CloseReasonCounts crc ON tq.PostId = crc.PostId
ORDER BY 
    tq.VoteCount DESC, tq.CommentCount DESC;
