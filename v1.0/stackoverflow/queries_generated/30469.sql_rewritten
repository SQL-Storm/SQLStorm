WITH RankedPosts AS (
    SELECT 
        p.Id,
        p.Title,
        p.CreationDate,
        p.Score,
        p.ViewCount,
        p.AnswerCount,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS PostRank
    FROM 
        Posts p
    INNER JOIN 
        Users u ON p.OwnerUserId = u.Id
    WHERE 
        u.Reputation > 1000
),
PostHistorySummary AS (
    SELECT 
        ph.PostId,
        COUNT(*) AS EditCount,
        MAX(ph.CreationDate) AS LastEditDate
    FROM 
        PostHistory ph
    WHERE 
        ph.PostHistoryTypeId IN (4, 5, 6) 
    GROUP BY 
        ph.PostId
),
PopularTags AS (
    SELECT 
        t.TagName,
        COUNT(pt.PostId) AS UsageCount
    FROM 
        Tags t
    JOIN 
        Posts p ON p.Tags LIKE CONCAT('%', t.TagName, '%')
    GROUP BY 
        t.TagName
    HAVING 
        COUNT(pt.PostId) > 50
),
RecentComments AS (
    SELECT 
        c.PostId,
        c.UserDisplayName,
        c.Text,
        c.CreationDate,
        ROW_NUMBER() OVER (PARTITION BY c.PostId ORDER BY c.CreationDate DESC) AS CommentRank
    FROM 
        Comments c
    WHERE 
        c.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '30 days'
)
SELECT
    p.Title,
    p.CreationDate AS PostDate,
    p.Score,
    p.ViewCount,
    p.AnswerCount,
    p.OwnerUserId,
    u.DisplayName AS OwnerDisplayName,
    ph.EditCount,
    ph.LastEditDate,
    t.TagName,
    r.UserDisplayName AS RecentCommenter,
    r.Text AS RecentComment,
    r.CreationDate AS CommentDate
FROM 
    RankedPosts p
LEFT JOIN 
    PostHistorySummary ph ON p.Id = ph.PostId
LEFT JOIN 
    PopularTags t ON p.Tags LIKE CONCAT('%', t.TagName, '%')
LEFT JOIN 
    RecentComments r ON p.Id = r.PostId AND r.CommentRank = 1
INNER JOIN 
    Users u ON p.OwnerUserId = u.Id
WHERE 
    p.PostRank = 1
ORDER BY 
    p.CreationDate DESC
LIMIT 100;