WITH PostTags AS (
    SELECT
        p.Id AS PostId,
        UNNEST(string_to_array(SUBSTRING(p.Tags, 2, LENGTH(p.Tags) - 2), '><')) AS Tag
    FROM
        Posts p
    WHERE
        p.PostTypeId = 1 
),
TagStatistics AS (
    SELECT
        t.Tag AS TagName,
        COUNT(pt.PostId) AS PostCount,
        AVG(u.Reputation) AS AvgUserReputation,
        COUNT(DISTINCT u.Id) AS UniqueUsers
    FROM
        PostTags pt
    JOIN
        Tags t ON pt.Tag = t.TagName
    JOIN
        Posts p ON pt.PostId = p.Id
    JOIN
        Users u ON p.OwnerUserId = u.Id
    GROUP BY
        t.Tag
),
ClosedPosts AS (
    SELECT
        ph.PostId,
        COUNT(DISTINCT ph.UserId) AS CloseVoteCount,
        MIN(ph.CreationDate) AS FirstCloseDate
    FROM
        PostHistory ph
    WHERE
        ph.PostHistoryTypeId = 10 
    GROUP BY
        ph.PostId
),
ClosedPostDetails AS (
    SELECT
        tp.TagName,
        c.PostId,
        c.CloseVoteCount,
        c.FirstCloseDate,
        ts.AvgUserReputation,
        ts.UniqueUsers
    FROM
        ClosedPosts c
    JOIN
        PostTags pt ON c.PostId = pt.PostId
    JOIN
        TagStatistics ts ON pt.Tag = ts.TagName
    )
SELECT
    cp.TagName,
    COUNT(cp.PostId) AS TotalClosedPosts,
    AVG(cp.CloseVoteCount) AS AvgCloseVotes,
    MIN(cp.FirstCloseDate) AS EarliestCloseDate,
    AVG(cp.AvgUserReputation) AS AvgReputationOfPostOwners,
    SUM(cp.UniqueUsers) AS TotalUniqueUsers
FROM
    ClosedPostDetails cp
GROUP BY
    cp.TagName
ORDER BY
    TotalClosedPosts DESC;