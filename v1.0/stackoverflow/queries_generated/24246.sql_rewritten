WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.Body,
        p.CreationDate,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS Rank,
        COALESCE(UPVOTE.Count, 0) AS UpvoteCount,
        COALESCE(DOWNVOTE.Count, 0) AS DownvoteCount,
        COALESCE(POSTLINKS.RelatedCount, 0) AS RelatedPostCount
    FROM 
        Posts p
    LEFT JOIN (
        SELECT 
            PostId,
            COUNT(*) AS Count
        FROM 
            Votes
        WHERE 
            VoteTypeId = 2 
        GROUP BY 
            PostId
    ) UPVOTE ON UPVOTE.PostId = p.Id
    LEFT JOIN (
        SELECT 
            PostId,
            COUNT(*) AS Count
        FROM 
            Votes
        WHERE 
            VoteTypeId = 3 
        GROUP BY 
            PostId
    ) DOWNVOTE ON DOWNVOTE.PostId = p.Id
    LEFT JOIN (
        SELECT 
            PostId,
            COUNT(*) AS RelatedCount
        FROM 
            PostLinks
        GROUP BY 
            PostId
    ) POSTLINKS ON POSTLINKS.PostId = p.Id
    WHERE 
        p.CreationDate >= cast('2024-10-01' as date) - INTERVAL '1 year'
),
UserBadges AS (
    SELECT 
        b.UserId,
        ARRAY_AGG(b.Name) AS BadgeNames,
        COUNT(*) AS BadgeCount
    FROM 
        Badges b
    GROUP BY 
        b.UserId
),
PostActivity AS (
    SELECT 
        ph.PostId,
        ph.UserId,
        ph.CreationDate,
        ph.PostHistoryTypeId,
        CASE WHEN ph.UserId IS NOT NULL THEN COUNT(*) END AS EditCount,
        STRING_AGG(ph.Comment, ', ') AS EditsComments
    FROM 
        PostHistory ph
    WHERE 
        ph.PostHistoryTypeId IN (4, 5, 10, 11) 
    GROUP BY 
        ph.PostId, ph.UserId, ph.CreationDate, ph.PostHistoryTypeId
)
SELECT 
    u.DisplayName,
    u.Reputation,
    u.CreationDate AS UserCreationDate,
    p.Title,
    p.Body,
    p.CreationDate AS PostCreationDate,
    rp.UpvoteCount,
    rp.DownvoteCount,
    ub.BadgeNames,
    pa.EditCount,
    pa.EditsComments
FROM 
    Users u
JOIN 
    RankedPosts rp ON rp.PostId IN (SELECT Id FROM Posts WHERE OwnerUserId = u.Id)
LEFT JOIN 
    UserBadges ub ON ub.UserId = u.Id
LEFT JOIN 
    PostActivity pa ON pa.PostId = rp.PostId
WHERE 
    rp.Rank <= 5
ORDER BY 
    rp.UpvoteCount DESC,
    rp.DownvoteCount ASC,
    u.Reputation DESC
LIMIT 10;