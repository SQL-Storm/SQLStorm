
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Score,
        p.ViewCount,
        p.Tags,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS rn
    FROM 
        Posts p
    WHERE 
        p.PostTypeId = 1 
        AND p.Score > 0
        AND p.CreationDate >= CAST('2024-10-01 12:34:56' AS TIMESTAMP) - INTERVAL '1 year'
),
UserVotes AS (
    SELECT 
        v.UserId, 
        COUNT(CASE WHEN v.VoteTypeId = 2 THEN 1 END) AS UpVotesCount, 
        COUNT(CASE WHEN v.VoteTypeId = 3 THEN 1 END) AS DownVotesCount
    FROM 
        Votes v
    GROUP BY 
        v.UserId
),
PostHistoryInfo AS (
    SELECT 
        ph.PostId,
        ph.UserDisplayName,
        ph.CreationDate,
        STRING_AGG(DISTINCT pht.Name, ', ') AS ChangeTypes,
        COUNT(*) AS ChangeCount
    FROM 
        PostHistory ph
    JOIN 
        PostHistoryTypes pht ON ph.PostHistoryTypeId = pht.Id
    WHERE 
        ph.CreationDate >= LAST_DAY(CAST('2024-10-01 12:34:56' AS TIMESTAMP) - INTERVAL '30 day')
    GROUP BY 
        ph.PostId, ph.UserDisplayName, ph.CreationDate
),
TopUsers AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COALESCE(uv.UpVotesCount, 0) AS UpVotes,
        COALESCE(uv.DownVotesCount, 0) AS DownVotes,
        SUM(ph.ChangeCount) AS TotalChanges
    FROM 
        Users u
    LEFT JOIN 
        UserVotes uv ON u.Id = uv.UserId
    LEFT JOIN 
        PostHistoryInfo ph ON u.Id = (SELECT p.OwnerUserId FROM Posts p WHERE p.Id = ph.PostId)
    WHERE 
        u.Reputation > 1000
    GROUP BY 
        u.Id, u.DisplayName
)
SELECT 
    u.DisplayName, 
    COUNT(DISTINCT rp.PostId) AS QuestionCount,
    SUM(u.UpVotes) AS TotalUpVotes,
    SUM(u.DownVotes) AS TotalDownVotes,
    SUM(u.TotalChanges) AS TotalPostChanges,
    STRING_AGG(DISTINCT rp.Tags, ', ') AS AllTags
FROM 
    TopUsers u
LEFT JOIN 
    RankedPosts rp ON u.UserId = (SELECT p.OwnerUserId FROM Posts p WHERE p.Id = rp.PostId)
WHERE 
    u.UpVotes > u.DownVotes
GROUP BY 
    u.DisplayName
HAVING 
    COUNT(DISTINCT rp.PostId) > 10
ORDER BY 
    TotalPostChanges DESC, TotalUpVotes DESC;
