
WITH RankedPosts AS (
    SELECT 
        p.Title,
        p.CreationDate,
        u.DisplayName AS OwnerDisplayName,
        COUNT(c.Id) AS CommentCount,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC) AS PostRank
    FROM 
        Posts p
    LEFT JOIN 
        Users u ON p.OwnerUserId = u.Id
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    WHERE 
        p.CreationDate >= DATEADD(DAY, -30, '2024-10-01')
    GROUP BY 
        p.Id, p.Title, p.CreationDate, u.DisplayName, p.OwnerUserId, p.Score
),
TopUsers AS (
    SELECT 
        OwnerDisplayName,
        COUNT(*) AS PostCount,
        SUM(UpVotes) AS TotalUpVotes,
        SUM(DownVotes) AS TotalDownVotes
    FROM 
        RankedPosts
    WHERE 
        PostRank = 1
    GROUP BY 
        OwnerDisplayName
)
SELECT 
    OwnerDisplayName,
    PostCount,
    TotalUpVotes,
    TotalDownVotes,
    ROUND(COALESCE(TotalUpVotes, 0) * 1.0 / NULLIF(PostCount, 0), 2) AS AverageUpVotesPerPost,
    ROUND(COALESCE(TotalDownVotes, 0) * 1.0 / NULLIF(PostCount, 0), 2) AS AverageDownVotesPerPost
FROM 
    TopUsers
ORDER BY 
    PostCount DESC
FETCH FIRST 10 ROWS ONLY;
