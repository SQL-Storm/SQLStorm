WITH UserReputation AS (
    SELECT Id, Reputation
    FROM Users
),
PostStatistics AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.Score,
        p.ViewCount,
        COALESCE(a.AnswerCount, 0) AS AnswerCount,
        COALESCE(c.CommentCount, 0) AS CommentCount,
        COALESCE(v.UpVotes, 0) AS UpVotes,
        COALESCE(v.DownVotes, 0) AS DownVotes,
        u.DisplayName AS OwnerDisplayName
    FROM 
        Posts p
    LEFT JOIN (
        SELECT 
            ParentId,
            COUNT(*) AS AnswerCount
        FROM 
            Posts
        WHERE 
            PostTypeId = 2
        GROUP BY 
            ParentId
    ) a ON p.Id = a.ParentId
    LEFT JOIN (
        SELECT 
            PostId,
            COUNT(*) AS CommentCount
        FROM 
            Comments
        GROUP BY 
            PostId
    ) c ON p.Id = c.PostId
    LEFT JOIN (
        SELECT 
            PostId,
            SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes,
            SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes
        FROM 
            Votes
        GROUP BY 
            PostId
    ) v ON p.Id = v.PostId
    JOIN Users u ON p.OwnerUserId = u.Id
)
SELECT 
    u.Id AS UserId,
    u.DisplayName,
    SUM(ps.Score) AS TotalPostScore,
    SUM(ps.ViewCount) AS TotalViewCount,
    SUM(ps.AnswerCount) AS TotalAnswers,
    SUM(ps.CommentCount) AS TotalComments,
    SUM(ps.UpVotes) AS TotalUpVotes,
    SUM(ps.DownVotes) AS TotalDownVotes
FROM 
    UserReputation u
JOIN 
    PostStatistics ps ON u.Id = ps.OwnerUserId
GROUP BY 
    u.Id, u.DisplayName
ORDER BY 
    TotalPostScore DESC 
LIMIT 100;