
WITH UserScore AS (
    SELECT 
        U.Id AS UserId, 
        U.DisplayName, 
        U.Reputation, 
        COALESCE(SUM(CASE WHEN V.VoteTypeId = 2 THEN 1 ELSE 0 END), 0) AS Upvotes,
        COALESCE(SUM(CASE WHEN V.VoteTypeId = 3 THEN 1 ELSE 0 END), 0) AS Downvotes,
        COALESCE(SUM(CASE WHEN V.VoteTypeId = 10 THEN 1 ELSE 0 END), 0) AS Deletions,
        COALESCE(SUM(CASE WHEN V.VoteTypeId = 11 THEN 1 ELSE 0 END), 0) AS Undeletions
    FROM 
        Users U 
    LEFT JOIN 
        Votes V ON U.Id = V.UserId 
    GROUP BY 
        U.Id, U.DisplayName, U.Reputation
),
PostMetrics AS (
    SELECT 
        P.Id AS PostId, 
        P.Title, 
        P.PostTypeId, 
        P.Score, 
        P.ViewCount, 
        P.CreationDate,
        U.DisplayName AS OwnerDisplayName,
        COALESCE(COUNT(C.CreationDate), 0) AS CommentCount,
        COALESCE(SUM(CASE WHEN V.VoteTypeId = 2 THEN 1 ELSE 0 END), 0) AS Upvotes,
        COALESCE(SUM(CASE WHEN V.VoteTypeId = 3 THEN 1 ELSE 0 END), 0) AS Downvotes
    FROM 
        Posts P 
    LEFT JOIN 
        Users U ON P.OwnerUserId = U.Id
    LEFT JOIN 
        Comments C ON P.Id = C.PostId
    LEFT JOIN 
        Votes V ON P.Id = V.PostId
    GROUP BY 
        P.Id, P.Title, P.PostTypeId, P.Score, P.ViewCount, P.CreationDate, U.DisplayName
),
TagSummary AS (
    SELECT 
        T.TagName, 
        COUNT(P.Id) AS PostCount, 
        SUM(COALESCE(P.ViewCount, 0)) AS TotalViews
    FROM 
        Tags T 
    LEFT JOIN 
        Posts P ON P.Tags LIKE CONCAT('%', T.TagName, '%')
    GROUP BY 
        T.TagName
)
SELECT
    U.UserId,
    U.DisplayName,
    U.Reputation,
    U.Upvotes,
    U.Downvotes,
    U.Deletions,
    U.Undeletions,
    P.PostId,
    P.Title,
    P.PostTypeId,
    P.Score,
    P.ViewCount,
    P.CreationDate,
    P.CommentCount,
    P.Upvotes AS PostUpvotes,
    P.Downvotes AS PostDownvotes,
    T.TagName,
    T.PostCount,
    T.TotalViews
FROM 
    UserScore U
JOIN 
    PostMetrics P ON U.UserId = P.OwnerDisplayName
JOIN 
    TagSummary T ON T.TagName = ANY(string_to_array(P.Tags, ','))
WHERE 
    U.Reputation > 1000
ORDER BY 
    U.Reputation DESC, 
    P.CreationDate DESC
LIMIT 100;
