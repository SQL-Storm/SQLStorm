WITH UserActivity AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COALESCE(SUM(v.BountyAmount), 0) AS TotalBounty,
        COUNT(DISTINCT p.Id) AS TotalPosts,
        COUNT(DISTINCT c.Id) AS TotalComments,
        COUNT(DISTINCT b.Id) AS TotalBadges,
        AVG(u.Reputation) OVER () AS AvgReputation,
        ROW_NUMBER() OVER (ORDER BY COALESCE(SUM(v.BountyAmount), 0) DESC) AS BadgeRank
    FROM 
        Users u
    LEFT JOIN 
        Votes v ON u.Id = v.UserId
    LEFT JOIN 
        Posts p ON u.Id = p.OwnerUserId
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    GROUP BY 
        u.Id
),
PostDetails AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Score,
        p.ViewCount,
        COUNT(DISTINCT c.Id) AS NumberOfComments,
        COUNT(DISTINCT pt.Id) AS NumberOfPostHistoryEvents,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS RecentPostRank
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        PostHistory ph ON p.Id = ph.PostId
    LEFT JOIN 
        PostHistoryTypes pt ON ph.PostHistoryTypeId = pt.Id
    GROUP BY 
        p.Id
),
CombinedData AS (
    SELECT 
        ua.UserId,
        ua.DisplayName,
        ua.TotalBounty,
        ua.TotalPosts,
        ua.TotalComments,
        ua.TotalBadges,
        pd.PostId,
        pd.Title,
        pd.CreationDate,
        pd.Score,
        pd.ViewCount,
        pd.NumberOfComments,
        pd.RecentPostRank
    FROM 
        UserActivity ua
    LEFT JOIN 
        PostDetails pd ON ua.UserId = pd.RecentPostRank 
    WHERE 
        ua.TotalPosts > 0
)
SELECT 
    cd.UserId,
    cd.DisplayName,
    cd.TotalBounty,
    cd.TotalPosts,
    cd.TotalComments,
    cd.TotalBadges,
    cd.Title,
    cd.CreationDate,
    cd.Score,
    cd.ViewCount,
    cd.NumberOfComments,
    CASE 
        WHEN cd.ViewCount IS NULL THEN 'No Views'
        ELSE CONCAT(cd.ViewCount, ' views')
    END AS ViewSummary,
    CASE 
        WHEN cd.RecentPostRank = 1 THEN 'Most Recent'
        ELSE 'Older Post'
    END AS PostAge
FROM 
    CombinedData cd
WHERE 
    cd.TotalBadges BETWEEN 1 AND 10 OR cd.TotalBounty > 0
ORDER BY 
    cd.TotalBounty DESC,
    cd.TotalPosts DESC,
    cd.UserId
OFFSET 10 ROWS 
FETCH NEXT 25 ROWS ONLY;