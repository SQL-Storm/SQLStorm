
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.Body,
        p.Tags,
        p.CreationDate,
        p.ViewCount,
        u.DisplayName AS OwnerDisplayName,
        pt.Name AS PostTypeName,
        ROW_NUMBER() OVER (PARTITION BY p.Tags ORDER BY p.CreationDate DESC) AS TagRank
    FROM 
        Posts p
    JOIN 
        Users u ON p.OwnerUserId = u.Id
    JOIN 
        PostTypes pt ON p.PostTypeId = pt.Id
    WHERE 
        p.CreationDate >= DATE_SUB(CURRENT_DATE, INTERVAL 1 YEAR)
        AND p.ViewCount > 100
        AND p.Body LIKE '%SQL%'
),
TagsAggregate AS (
    SELECT 
        UNNEST(string_to_array(Tags, '><')) AS Tag,
        COUNT(*) AS PostsCount
    FROM 
        RankedPosts
    WHERE 
        TagRank = 1
    GROUP BY 
        UNNEST(string_to_array(Tags, '><'))
),
TopTags AS (
    SELECT 
        Tag,
        PostsCount,
        RANK() OVER (ORDER BY PostsCount DESC) AS TagRank
    FROM 
        TagsAggregate
)
SELECT 
    rp.PostId,
    rp.Title,
    rp.OwnerDisplayName,
    rp.ViewCount,
    tt.Tag AS TopTag,
    tt.PostsCount AS RelatedPostsCount
FROM 
    RankedPosts rp
JOIN 
    TopTags tt ON tt.Tag = ANY(string_to_array(rp.Tags, '><'))
WHERE 
    rp.TagRank = 1
    AND tt.TagRank <= 10
ORDER BY 
    rp.CreationDate DESC, 
    tt.PostsCount DESC;
