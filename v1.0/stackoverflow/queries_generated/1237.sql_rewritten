WITH UserStats AS (
    SELECT 
        U.Id AS UserId,
        U.DisplayName,
        U.Reputation,
        U.CreationDate,
        U.Views,
        U.UpVotes,
        U.DownVotes,
        COUNT(DISTINCT P.Id) AS TotalPosts,
        SUM(CASE WHEN P.PostTypeId = 1 THEN 1 ELSE 0 END) AS TotalQuestions,
        SUM(CASE WHEN P.PostTypeId = 2 THEN 1 ELSE 0 END) AS TotalAnswers,
        RANK() OVER (ORDER BY U.Reputation DESC) AS ReputationRank
    FROM 
        Users U
    LEFT JOIN 
        Posts P ON U.Id = P.OwnerUserId
    GROUP BY 
        U.Id
), PopularPosts AS (
    SELECT 
        P.Id AS PostId,
        P.Title,
        P.ViewCount,
        U.DisplayName AS OwnerDisplayName,
        ROW_NUMBER() OVER (ORDER BY P.ViewCount DESC) AS PopularityRank
    FROM 
        Posts P
    JOIN 
        Users U ON P.OwnerUserId = U.Id
    WHERE 
        P.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '30 days'
        AND P.ViewCount IS NOT NULL
), TagStatistics AS (
    SELECT 
        T.TagName,
        COUNT(DISTINCT P.Id) AS PostCount,
        SUM(P.AnswerCount) AS TotalAnswers
    FROM 
        Tags T
    LEFT JOIN 
        Posts P ON T.Id = ANY(string_to_array(P.Tags, '><'))
    GROUP BY 
        T.TagName
)
SELECT 
    U.DisplayName,
    U.Reputation,
    COALESCE(PP.Title, 'No Posts') AS PopularPostTitle,
    COALESCE(PP.ViewCount, 0) AS PopularPostViewCount,
    U.TotalQuestions,
    U.TotalAnswers,
    TS.TagName,
    TS.PostCount,
    TS.TotalAnswers AS TagTotalAnswers
FROM 
    UserStats U
LEFT JOIN 
    PopularPosts PP ON PP.OwnerDisplayName = U.DisplayName AND PP.PopularityRank <= 5
LEFT JOIN 
    TagStatistics TS ON U.TotalPosts > 0
ORDER BY 
    U.Reputation DESC, U.TotalPosts DESC, TS.PostCount DESC
LIMIT 100;