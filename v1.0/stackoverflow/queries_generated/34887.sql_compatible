
WITH RecursivePostCTE AS (
    SELECT 
        p.Id, 
        p.Title, 
        p.AcceptedAnswerId, 
        p.ParentId,
        0 AS Level
    FROM Posts p
    WHERE p.PostTypeId = 1 

    UNION ALL

    SELECT 
        p.Id, 
        p.Title, 
        p.AcceptedAnswerId, 
        p.ParentId,
        r.Level + 1
    FROM Posts p
    INNER JOIN RecursivePostCTE r ON p.ParentId = r.Id
),
PostStats AS (
    SELECT 
        p.Id,
        p.Title,
        COALESCE(a.Score, 0) AS AnswerScore,
        COALESCE(a.ViewCount, 0) AS AnswerViewCount,
        COALESCE(c.CommentCount, 0) AS TotalComments,
        STRING_AGG(DISTINCT t.TagName, ', ') AS AllTags
    FROM Posts p
    LEFT JOIN Posts a ON p.AcceptedAnswerId = a.Id
    LEFT JOIN (
        SELECT 
            PostId, 
            COUNT(*) AS CommentCount 
        FROM Comments 
        GROUP BY PostId
    ) c ON p.Id = c.PostId
    LEFT JOIN LATERAL (
        SELECT 
            unnest(string_to_array(p.Tags, ',')) AS TagName
    ) t ON TRUE
    WHERE p.PostTypeId = 1 
    GROUP BY p.Id, p.Title, a.Score, a.ViewCount
),
TagUsage AS (
    SELECT 
        t.TagName, 
        COUNT(*) AS UsageCount
    FROM Posts p
    JOIN LATERAL (
        SELECT 
            unnest(string_to_array(p.Tags, ',')) AS TagName
    ) t ON TRUE
    WHERE p.PostTypeId = 1 
    GROUP BY t.TagName
),
ClosedPosts AS (
    SELECT 
        ph.PostId,
        STRING_AGG(DISTINCT cr.Name, ', ') AS CloseReasons,
        COUNT(*) AS CloseCount
    FROM PostHistory ph
    JOIN CloseReasonTypes cr ON ph.Comment = CAST(cr.Id AS VARCHAR)
    WHERE ph.PostHistoryTypeId = 10 
    GROUP BY ph.PostId
)
SELECT 
    ps.Title AS QuestionTitle,
    ps.AnswerScore,
    ps.AnswerViewCount,
    ps.TotalComments,
    ps.AllTags,
    COALESCE(cp.CloseReasons, 'Not Closed') AS CloseReasons,
    COALESCE(tu.UsageCount, 0) AS TagUsageCount,
    r.Level AS RecursiveLevel
FROM PostStats ps
LEFT JOIN ClosedPosts cp ON ps.Id = cp.PostId
LEFT JOIN TagUsage tu ON ps.AllTags LIKE '%' || tu.TagName || '%' 
JOIN RecursivePostCTE r ON ps.Id = r.Id
ORDER BY ps.TotalComments DESC, ps.AnswerViewCount DESC;
