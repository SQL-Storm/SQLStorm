
WITH RankedUsers AS (
    SELECT 
        U.Id AS UserId,
        U.DisplayName,
        U.Reputation,
        RANK() OVER (PARTITION BY CASE 
                                        WHEN U.Reputation > 1000 THEN 'High'
                                        WHEN U.Reputation BETWEEN 500 AND 1000 THEN 'Medium'
                                        ELSE 'Low'
                                    END 
                    ORDER BY U.Reputation DESC) AS ReputationRank
    FROM 
        Users U
),
TopPosts AS (
    SELECT 
        P.Id AS PostId,
        P.Title,
        P.ViewCount,
        P.AnswerCount,
        P.Score,
        P.CreationDate,
        ROW_NUMBER() OVER (ORDER BY P.CreationDate DESC) AS PostRank
    FROM 
        Posts P
    WHERE 
        P.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '30 days'
      AND 
        P.ViewCount > (
            SELECT 
                AVG(ViewCount) 
            FROM 
                Posts 
            WHERE 
                CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '30 days'
        )
),
RecentComments AS (
    SELECT 
        C.PostId,
        C.Text,
        C.CreationDate,
        U.DisplayName AS CommenterName
    FROM 
        Comments C
    LEFT JOIN 
        Users U ON U.Id = C.UserId
    WHERE 
        C.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '2 weeks'
),
PostClosureReasons AS (
    SELECT 
        PH.PostId,
        PH.Comment AS ClosureReason
    FROM 
        PostHistory PH
    WHERE 
        PH.PostHistoryTypeId = 10
),
FinalPosts AS (
    SELECT 
        PP.*, 
        PU.DisplayName AS OwnerName,
        PR.ClosureReason
    FROM 
        TopPosts PP
    LEFT JOIN 
        Users PU ON PP.OwnerUserId = PU.Id
    LEFT JOIN 
        PostClosureReasons PR ON PP.PostId = PR.PostId
)
SELECT 
    FP.PostId,
    FP.Title,
    FP.ViewCount,
    FP.AnswerCount,
    FP.Score,
    FP.CreationDate,
    FP.OwnerName,
    FP.ClosureReason,
    ARRAY_AGG(DISTINCT RC.CommenterName) AS Commenters
FROM 
    FinalPosts FP
LEFT JOIN 
    RecentComments RC ON FP.PostId = RC.PostId
WHERE 
    (FP.ClosureReason IS NOT NULL OR FP.Score = 0)
GROUP BY 
    FP.PostId, FP.Title, FP.ViewCount, FP.AnswerCount, FP.Score, FP.CreationDate, FP.OwnerName, FP.ClosureReason
HAVING 
    COUNT(DISTINCT RC.CommenterName) > 2
ORDER BY 
    FP.CreationDate ASC
LIMIT 10;
