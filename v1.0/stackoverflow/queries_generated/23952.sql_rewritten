WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        COUNT(DISTINCT c.Id) AS CommentCount,
        COUNT(DISTINCT v.Id) AS VoteCount,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY COUNT(DISTINCT v.Id) DESC) AS PostRank,
        p.CreationDate,
        p.OwnerUserId
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON c.PostId = p.Id
    LEFT JOIN 
        Votes v ON v.PostId = p.Id
    WHERE 
        p.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 year'
        AND p.PostTypeId = 1 
    GROUP BY 
        p.Id, p.Title, p.OwnerUserId, p.CreationDate
),
UserStatistics AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        SUM(b.Class = 1::smallint) AS GoldBadges,
        SUM(b.Class = 2::smallint) AS SilverBadges,
        SUM(b.Class = 3::smallint) AS BronzeBadges,
        COALESCE(SUM(b.Class), 0) AS TotalBadges,
        COUNT(DISTINCT p.Id) AS TotalPosts,
        AVG(p.ViewCount) AS AvgViewCount
    FROM 
        Users u
    LEFT JOIN 
        Badges b ON b.UserId = u.Id
    LEFT JOIN 
        Posts p ON p.OwnerUserId = u.Id
    WHERE 
        u.Reputation >= 1000 
    GROUP BY 
        u.Id, u.DisplayName
),
ClosedPostStats AS (
    SELECT 
        p.Id AS PostId,
        SUM(CASE WHEN ph.PostHistoryTypeId IN (10, 11) THEN 1 ELSE 0 END) AS ClosedCount,
        COUNT(DISTINCT ph.UserId) FILTER (WHERE ph.PostHistoryTypeId = 10) AS CloseVoters,
        COUNT(DISTINCT ph.UserId) FILTER (WHERE ph.PostHistoryTypeId = 11) AS ReopenVoters
    FROM 
        Posts p
    LEFT JOIN 
        PostHistory ph ON ph.PostId = p.Id
    WHERE 
        ph.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '6 months'
    GROUP BY 
        p.Id
)

SELECT 
    up.PostId,
    up.Title,
    us.UserId,
    us.DisplayName,
    us.TotalBadges,
    us.GoldBadges,
    us.SilverBadges,
    us.BronzeBadges,
    up.CommentCount,
    up.VoteCount,
    up.UpVotes,
    up.DownVotes,
    cs.ClosedCount,
    cs.CloseVoters,
    cs.ReopenVoters
FROM 
    RankedPosts up
JOIN 
    UserStatistics us ON up.OwnerUserId = us.UserId
LEFT JOIN 
    ClosedPostStats cs ON up.PostId = cs.PostId
WHERE 
    up.PostRank <= 5 
ORDER BY 
    up.CreationDate DESC, 
    up.VoteCount DESC;