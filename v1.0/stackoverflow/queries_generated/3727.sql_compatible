
WITH UserBadges AS (
    SELECT UserId, COUNT(*) AS BadgeCount, 
           SUM(CASE WHEN Class = 1 THEN 1 ELSE 0 END) AS GoldBadges,
           SUM(CASE WHEN Class = 2 THEN 1 ELSE 0 END) AS SilverBadges,
           SUM(CASE WHEN Class = 3 THEN 1 ELSE 0 END) AS BronzeBadges
    FROM Badges
    GROUP BY UserId
),
PostStats AS (
    SELECT OwnerUserId, 
           COUNT(*) AS TotalPosts,
           SUM(CASE WHEN PostTypeId = 1 THEN 1 ELSE 0 END) AS Questions,
           SUM(CASE WHEN PostTypeId = 2 THEN 1 ELSE 0 END) AS Answers
    FROM Posts
    GROUP BY OwnerUserId
),
UserRankings AS (
    SELECT u.Id AS UserId, 
           u.DisplayName,
           COALESCE(ub.BadgeCount, 0) AS BadgeCount,
           COALESCE(ps.TotalPosts, 0) AS TotalPosts,
           COALESCE(ps.Questions, 0) AS Questions,
           COALESCE(ps.Answers, 0) AS Answers,
           RANK() OVER (ORDER BY COALESCE(ub.BadgeCount, 0) DESC, COALESCE(ps.TotalPosts, 0) DESC) AS UserRank
    FROM Users u
    LEFT JOIN UserBadges ub ON u.Id = ub.UserId
    LEFT JOIN PostStats ps ON u.Id = ps.OwnerUserId
),
QuestionStats AS (
    SELECT p.Id AS PostId, 
           p.Title, 
           p.OwnerUserId,
           p.CreationDate,
           p.Score,
           COUNT(c.Id) AS CommentCount,
           MAX(v.CreationDate) AS LastVoteDate,
           ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.LastActivityDate DESC) AS RecentPostRank
    FROM Posts p
    LEFT JOIN Comments c ON p.Id = c.PostId
    LEFT JOIN Votes v ON p.Id = v.PostId AND v.VoteTypeId = 2 
    WHERE p.PostTypeId = 1 
    GROUP BY p.Id, p.Title, p.OwnerUserId, p.CreationDate, p.Score
)
SELECT ur.UserId, ur.DisplayName, ur.BadgeCount, ur.TotalPosts, ur.Questions, ur.Answers, 
       qs.PostId, qs.Title AS QuestionTitle, 
       qs.CommentCount, 
       COALESCE(DATEDIFF(CURRENT_DATE, qs.LastVoteDate), -1) AS DaysSinceLastVote,
       CASE 
           WHEN ur.UserRank <= 10 THEN 'Top User'
           ELSE 'Regular User'
       END AS UserCategory
FROM UserRankings ur
LEFT JOIN QuestionStats qs ON ur.UserId = qs.OwnerUserId
WHERE ur.BadgeCount > 0 
  OR ur.TotalPosts > 5
ORDER BY ur.UserRank, qs.Score DESC;
