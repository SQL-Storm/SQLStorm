
WITH UserStats AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        u.Reputation,
        COUNT(DISTINCT p.Id) AS TotalPosts,
        SUM(CASE WHEN p.PostTypeId = 1 THEN 1 ELSE 0 END) AS TotalQuestions,
        SUM(CASE WHEN p.PostTypeId = 2 THEN 1 ELSE 0 END) AS TotalAnswers,
        SUM(CASE WHEN p.UpVotes > p.DownVotes THEN 1 ELSE 0 END) AS PositiveScorePosts
    FROM 
        Users u
    LEFT JOIN 
        Posts p ON u.Id = p.OwnerUserId
    WHERE 
        u.Reputation > 1000
    GROUP BY 
        u.Id, u.DisplayName, u.Reputation
),
PostMetrics AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Score,
        p.ViewCount,
        COUNT(c.Id) AS CommentCount,
        COUNT(v.Id) FILTER (WHERE v.VoteTypeId = 2) AS UpVotes,
        COUNT(v.Id) FILTER (WHERE v.VoteTypeId = 3) AS DownVotes
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    WHERE 
        p.CreationDate > (CAST('2024-10-01 12:34:56' AS TIMESTAMP) - INTERVAL '30 days')
    GROUP BY 
        p.Id, p.Title, p.CreationDate, p.Score, p.ViewCount
),
TopContributors AS (
    SELECT 
        us.UserId,
        us.DisplayName,
        SUM(pm.Score) AS TotalScore,
        SUM(pm.ViewCount) AS TotalViews
    FROM 
        UserStats us
    JOIN 
        Posts p ON us.UserId = p.OwnerUserId
    JOIN 
        PostMetrics pm ON p.Id = pm.PostId
    WHERE 
        us.TotalPosts > 5
    GROUP BY 
        us.UserId, us.DisplayName
)
SELECT 
    tc.UserId,
    tc.DisplayName,
    tc.TotalScore,
    tc.TotalViews
FROM 
    TopContributors tc
ORDER BY 
    tc.TotalScore DESC, 
    tc.TotalViews DESC
LIMIT 10;
