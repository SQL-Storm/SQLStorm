WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.ViewCount,
        p.ANSWER_COUNT,
        p.Score,
        U.DisplayName AS OwnerDisplayName,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC) AS Rank,
        STRING_AGG(t.TagName, ', ') AS TagsList
    FROM 
        Posts p
    JOIN 
        Users U ON p.OwnerUserId = U.Id
    LEFT JOIN 
        TagPost tp ON p.Id = tp.PostId
    LEFT JOIN 
        Tags t ON tp.TagId = t.Id
    WHERE 
        p.PostTypeId IN (1, 2) 
    GROUP BY 
        p.Id, U.DisplayName, p.CreationDate, p.ViewCount, p.ANSWER_COUNT, p.Score
),

AggregatedVotes AS (
    SELECT 
        v.PostId,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes
    FROM 
        Votes v
    GROUP BY 
        v.PostId
)

SELECT 
    rp.PostId,
    rp.Title,
    rp.CreationDate,
    rp.ViewCount,
    rp.AnswerCount,
    rp.Score,
    rv.UpVotes,
    rv.DownVotes,
    rp.OwnerDisplayName,
    rp.TagsList
FROM 
    RankedPosts rp
JOIN 
    AggregatedVotes rv ON rp.PostId = rv.PostId
WHERE 
    rp.Rank <= 5 
ORDER BY 
    rp.OwnerDisplayName, rp.Score DESC;