
WITH RankedPosts AS (
    SELECT 
        P.Id AS PostId,
        P.Title,
        P.CreationDate,
        U.DisplayName AS OwnerDisplayName,
        COUNT(CASE WHEN C.Id IS NOT NULL THEN 1 END) AS CommentCount,
        SUM(CASE WHEN V.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVoteCount,
        SUM(CASE WHEN V.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVoteCount,
        RANK() OVER (PARTITION BY P.PostTypeId ORDER BY P.CreationDate DESC) AS RankNum
    FROM 
        Posts P
    LEFT JOIN 
        Users U ON P.OwnerUserId = U.Id
    LEFT JOIN 
        Comments C ON C.PostId = P.Id
    LEFT JOIN 
        Votes V ON V.PostId = P.Id
    WHERE 
        P.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 year'
    GROUP BY 
        P.Id, P.Title, P.CreationDate, U.DisplayName
),
RecentBadges AS (
    SELECT 
        B.UserId,
        STRING_AGG(B.Name, ', ') AS BadgeNames
    FROM 
        Badges B
    WHERE 
        B.Date >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '6 months'
    GROUP BY 
        B.UserId
)
SELECT 
    R.PostId,
    R.Title,
    R.CreationDate,
    R.OwnerDisplayName,
    COALESCE(R.CommentCount, 0) AS TotalComments,
    COALESCE(R.UpVoteCount, 0) AS TotalUpVotes,
    COALESCE(R.DownVoteCount, 0) AS TotalDownVotes,
    RB.BadgeNames
FROM 
    RankedPosts R
LEFT JOIN 
    RecentBadges RB ON R.OwnerDisplayName = RB.UserId
WHERE 
    R.RankNum <= 5
ORDER BY 
    R.CreationDate DESC
LIMIT 20;
