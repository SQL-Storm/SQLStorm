
WITH PostStats AS (
    SELECT 
        P.Id AS PostId,
        P.PostTypeId,
        P.CreationDate,
        P.Score,
        P.ViewCount,
        P.AnswerCount,
        P.CommentCount,
        P.FavoriteCount,
        U.Reputation AS OwnerReputation,
        U.DisplayName AS OwnerDisplayName,
        COUNT(CASE WHEN V.VoteTypeId = 2 THEN 1 END) AS UpVotes,
        COUNT(CASE WHEN V.VoteTypeId = 3 THEN 1 END) AS DownVotes
    FROM 
        Posts P
    LEFT JOIN 
        Users U ON P.OwnerUserId = U.Id
    LEFT JOIN 
        Votes V ON P.Id = V.PostId
    GROUP BY 
        P.Id, P.PostTypeId, P.CreationDate, P.Score, P.ViewCount, 
        P.AnswerCount, P.CommentCount, P.FavoriteCount, U.Reputation, U.DisplayName
),
UserStats AS (
    SELECT 
        U.Id AS UserId,
        U.Reputation,
        COUNT(B.Id) AS BadgeCount,
        COUNT(P.Id) AS PostsCount
    FROM 
        Users U
    LEFT JOIN 
        Badges B ON U.Id = B.UserId
    LEFT JOIN 
        Posts P ON U.Id = P.OwnerUserId
    GROUP BY 
        U.Id, U.Reputation
)

SELECT 
    PS.PostId,
    PT.Name AS PostType,
    PS.CreationDate,
    PS.Score,
    PS.ViewCount,
    PS.AnswerCount,
    PS.CommentCount,
    PS.FavoriteCount,
    PS.OwnerReputation,
    PS.OwnerDisplayName,
    PS.UpVotes,
    PS.DownVotes,
    US.Reputation AS UserReputation,
    US.BadgeCount,
    US.PostsCount
FROM 
    PostStats PS
JOIN 
    PostTypes PT ON PS.PostTypeId = PT.Id
JOIN 
    UserStats US ON PS.OwnerDisplayName = US.UserId
ORDER BY 
    PS.CreationDate DESC
LIMIT 100;
