WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Score,
        p.ViewCount,
        COUNT(c.Id) AS CommentCount,
        COUNT(DISTINCT v.Id) AS VoteCount,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS RecentPostRank
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId AND v.VoteTypeId = 2 
    WHERE 
        p.CreationDate >= cast('2024-10-01' as date) - INTERVAL '1 year'
    GROUP BY 
        p.Id, p.Title, p.CreationDate, p.Score, p.ViewCount
),
ActiveUsers AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        u.Reputation,
        ROW_NUMBER() OVER (ORDER BY u.Reputation DESC) AS ReputationRank
    FROM 
        Users u
    WHERE 
        u.LastAccessDate >= cast('2024-10-01' as date) - INTERVAL '1 month'
)
SELECT 
    au.DisplayName AS UserName,
    au.Reputation,
    COUNT(rp.PostId) AS PostsCount,
    SUM(rp.CommentCount) AS TotalComments,
    SUM(rp.VoteCount) AS TotalVotes,
    MAX(rp.ViewCount) AS MaxViews,
    AVG(rp.Score) AS AvgScore,
    AVG(EXTRACT(EPOCH FROM (cast('2024-10-01 12:34:56' as timestamp) - rp.CreationDate))) AS AvgPostAgeInSeconds
FROM 
    ActiveUsers au
JOIN 
    RankedPosts rp ON au.UserId = rp.RecentPostRank
WHERE 
    rp.RecentPostRank <= 3 
GROUP BY 
    au.UserName, au.Reputation
ORDER BY 
    au.Reputation DESC, PostsCount DESC
LIMIT 10;