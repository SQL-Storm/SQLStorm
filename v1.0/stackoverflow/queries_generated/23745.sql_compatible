
WITH UserReputation AS (
    SELECT 
        Id, 
        Reputation, 
        CASE 
            WHEN Reputation > 1000 THEN 'High'
            WHEN Reputation BETWEEN 500 AND 1000 THEN 'Medium'
            ELSE 'Low'
        END AS ReputationBracket
    FROM Users
),
RecentPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Score,
        u.DisplayName AS OwnerName,
        ROW_NUMBER() OVER (PARTITION BY u.Reputation ORDER BY p.CreationDate DESC) AS UserPostRank
    FROM Posts p
    JOIN Users u ON p.OwnerUserId = u.Id
    WHERE p.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '30 days'
),
PostHistoryDetails AS (
    SELECT 
        ph.PostId,
        MAX(CASE WHEN ph.PostHistoryTypeId = 10 THEN ph.CreationDate END) AS LastCloseDate,
        COUNT(CASE WHEN ph.PostHistoryTypeId IN (10, 11) THEN 1 END) AS CloseReopenCount
    FROM PostHistory ph
    GROUP BY ph.PostId
),
PostAggr AS (
    SELECT 
        rp.PostId,
        rp.Title,
        rp.CreationDate,
        rp.Score,
        ph.LastCloseDate,
        COALESCE(ph.CloseReopenCount, 0) AS CloseReopenCount,
        u.DisplayName AS OwnerDisplayName
    FROM RecentPosts rp
    LEFT JOIN PostHistoryDetails ph ON rp.PostId = ph.PostId
    JOIN Users u ON rp.OwnerName = u.DisplayName
    WHERE rp.UserPostRank <= 5
)
SELECT 
    pa.Title,
    pa.CreationDate,
    pa.Score,
    pa.LastCloseDate,
    pa.CloseReopenCount,
    CASE 
        WHEN pa.CloseReopenCount = 0 THEN 'Never Closed'
        WHEN pa.CloseReopenCount > 3 THEN 'Frequent Issues'
        ELSE 'Occasionally Closed'
    END AS ClosingBehavior,
    u.ReputationBracket
FROM PostAggr pa
JOIN UserReputation u ON pa.OwnerDisplayName = u.DisplayName
WHERE pa.Score > (SELECT AVG(Score) FROM Posts)
ORDER BY pa.LastCloseDate DESC NULLS LAST, pa.CreationDate DESC;
