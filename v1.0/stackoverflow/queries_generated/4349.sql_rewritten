WITH UserReputation AS (
    SELECT 
        U.Id AS UserId,
        U.DisplayName,
        U.Reputation,
        ROW_NUMBER() OVER (ORDER BY U.Reputation DESC) AS Rank
    FROM Users U
),
TopPosts AS (
    SELECT 
        P.Id AS PostId,
        P.Title,
        P.CreationDate,
        P.Score,
        P.ViewCount,
        P.OwnerUserId,
        COUNT(CASE WHEN C.Id IS NOT NULL THEN 1 END) AS CommentCount,
        ROW_NUMBER() OVER (PARTITION BY P.OwnerUserId ORDER BY P.Score DESC) AS PostRank
    FROM Posts P
    LEFT JOIN Comments C ON P.Id = C.PostId
    WHERE P.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 year'
    GROUP BY P.Id
),
PostHistorySummary AS (
    SELECT 
        PH.PostId,
        MIN(PH.CreationDate) AS FirstModification,
        COUNT(*) AS ModificationCount,
        STRING_AGG(DISTINCT PHT.Name, ', ') AS HistoryTypes,
        COUNT(CASE WHEN PH.PostHistoryTypeId IN (10, 11) THEN 1 END) AS CloseReopenCount
    FROM PostHistory PH
    JOIN PostHistoryTypes PHT ON PH.PostHistoryTypeId = PHT.Id
    GROUP BY PH.PostId
)
SELECT 
    U.DisplayName,
    U.Reputation,
    COALESCE(TP.Title, 'N/A') AS PostTitle,
    COALESCE(TP.ViewCount, 0) AS TotalViews,
    COALESCE(TP.Score, 0) AS TotalScore,
    COALESCE(PHS.FirstModification, 'Never') AS FirstModificationDate,
    COALESCE(PHS.ModificationCount, 0) AS TotalModifications,
    COALESCE(PHS.HistoryTypes, 'None') AS ModificationsTypes,
    COALESCE(PHS.CloseReopenCount, 0) AS CloseReopenCount
FROM UserReputation U
LEFT JOIN TopPosts TP ON U.UserId = TP.OwnerUserId AND TP.PostRank = 1
LEFT JOIN PostHistorySummary PHS ON TP.PostId = PHS.PostId
WHERE U.Reputation > (
    SELECT AVG(Reputation) FROM Users
) AND
    U.CreationDate < (cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '6 months')
ORDER BY U.Reputation DESC, COALESCE(TP.Score, 0) DESC
LIMIT 50;