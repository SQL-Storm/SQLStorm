
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.Score,
        COALESCE(v.UserId, u.Id) AS VotedByUserId,
        ROW_NUMBER() OVER (PARTITION BY p.Id ORDER BY COALESCE(v.CreationDate, '1900-01-01')) AS VoteRank,
        COUNT(DISTINCT v.Id) OVER (PARTITION BY p.Id) AS TotalVotes
    FROM 
        Posts p
    LEFT JOIN 
        Votes v ON p.Id = v.PostId AND v.VoteTypeId = 2  
    LEFT JOIN 
        Users u ON p.OwnerUserId = u.Id
    WHERE 
        (p.ViewCount > 100 OR p.Score > 0)
        AND p.CreationDate >= DATE '2022-01-01'
),
AggPostData AS (
    SELECT 
        rp.PostId,
        rp.Title,
        MAX(rp.Score) AS MaxScore,
        AVG(rp.Score) AS AvgScore,
        STRING_AGG(CAST(rp.VotedByUserId AS varchar), ', ') AS VoterIds,
        COUNT(*) AS VoteCount,
        COUNT(rp.PostId) OVER () AS TotalPosts
    FROM 
        RankedPosts rp
    GROUP BY 
        rp.PostId, rp.Title
)
SELECT 
    apd.PostId,
    apd.Title,
    apd.MaxScore,
    apd.AvgScore,
    apd.VoterIds,
    apd.VoteCount,
    CASE 
        WHEN apd.TotalPosts = 0 THEN NULL 
        ELSE CAST(apd.VoteCount AS float) / apd.TotalPosts * 100 
    END AS VotePercentage
FROM 
    AggPostData apd
WHERE 
    apd.VoteCount > 0
ORDER BY 
    apd.MaxScore DESC
OFFSET 0 ROWS 
FETCH NEXT 10 ROWS ONLY
UNION ALL
SELECT 
    NULL AS PostId,
    'Total Votes Count' AS Title,
    NULL AS MaxScore,
    NULL AS AvgScore,
    NULL AS VoterIds,
    SUM(VoteCount) AS VoteCount,
    SUM(VoteCount) * 100.0 / COUNT(*) AS TotalVotePercentage
FROM 
    AggPostData;
