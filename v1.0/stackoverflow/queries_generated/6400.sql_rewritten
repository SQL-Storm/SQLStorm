WITH RankedPosts AS (
    SELECT 
        p.Id,
        p.Title,
        p.CreationDate,
        p.Score,
        p.AnswerCount,
        p.ViewCount,
        u.DisplayName AS OwnerDisplayName,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC, p.CreationDate DESC) AS Rank
    FROM 
        Posts p
    JOIN 
        Users u ON p.OwnerUserId = u.Id
    WHERE 
        p.PostTypeId = 1 AND 
        p.CreationDate >= '2023-01-01' 
),
TopPosts AS (
    SELECT 
        rp.Id,
        rp.Title,
        rp.CreationDate,
        rp.Score,
        rp.AnswerCount,
        rp.ViewCount,
        rp.OwnerDisplayName
    FROM 
        RankedPosts rp
    WHERE 
        rp.Rank <= 5 
),
UserStats AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COUNT(DISTINCT bp.Id) AS TotalTopPosts,
        SUM(bp.ViewCount) AS TotalViews,
        SUM(bp.AnswerCount) AS TotalAnswers
    FROM 
        Users u
    LEFT JOIN 
        TopPosts bp ON u.Id = bp.OwnerUserId
    GROUP BY 
        u.Id, u.DisplayName
)
SELECT 
    us.UserId,
    us.DisplayName,
    us.TotalTopPosts,
    us.TotalViews,
    us.TotalAnswers,
    b.Name AS BadgeName,
    CASE 
        WHEN us.TotalTopPosts >= 5 THEN 'Gold'
        WHEN us.TotalTopPosts >= 3 THEN 'Silver'
        ELSE 'Bronze'
    END AS BadgeClass
FROM 
    UserStats us
LEFT JOIN 
    Badges b ON us.UserId = b.UserId AND b.Class = (CASE 
        WHEN us.TotalTopPosts >= 5 THEN 1 
        WHEN us.TotalTopPosts >= 3 THEN 2 
        ELSE 3 
    END)
ORDER BY 
    us.TotalTopPosts DESC, us.TotalViews DESC;