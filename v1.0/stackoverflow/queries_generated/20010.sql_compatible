
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Score,
        p.ViewCount,
        COUNT(c.Id) AS CommentCount,
        ROW_NUMBER() OVER (PARTITION BY p.PostTypeId ORDER BY p.Score DESC) AS Rank,
        STRING_AGG(DISTINCT t.TagName, ', ') AS Tags
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        LATERAL STRING_TO_ARRAY(SUBSTRING(p.Tags, 2, LENGTH(p.Tags) - 2), '><') AS tag ON TRUE 
    LEFT JOIN 
        Tags t ON t.TagName = TRIM(tag)
    WHERE 
        p.CreationDate >= CAST('2024-10-01 12:34:56' AS TIMESTAMP) - INTERVAL '1 year'
    GROUP BY 
        p.Id, p.Title, p.CreationDate, p.Score, p.ViewCount
),

ClosedPostHistory AS (
    SELECT 
        ph.PostId,
        ph.CreationDate,
        ph.Comment,
        ph.Text,
        ph.PostHistoryTypeId
    FROM 
        PostHistory ph
    WHERE 
        ph.PostHistoryTypeId IN (10, 11) 
)

SELECT 
    rp.PostId,
    rp.Title,
    rp.CreationDate,
    rp.Score,
    rp.ViewCount,
    COALESCE(rp.CommentCount, 0) AS CommentCount,
    rp.Rank,
    rp.Tags,
    COALESCE(ch.CreationDate, 'No Closure Event') AS ClosureEventDate,
    CASE 
        WHEN ch.PostHistoryTypeId = 10 THEN 'Closed'
        WHEN ch.PostHistoryTypeId = 11 THEN 'Reopened'
        ELSE 'Not Applicable'
    END AS ClosureStatus
FROM 
    RankedPosts rp
LEFT JOIN 
    ClosedPostHistory ch ON rp.PostId = ch.PostId
WHERE 
    rp.Rank <= 5 
ORDER BY 
    rp.Title;
