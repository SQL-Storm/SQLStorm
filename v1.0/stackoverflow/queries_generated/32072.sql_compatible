
WITH RECURSIVE UserVoteSummary AS (
    SELECT u.Id AS UserId,
           u.DisplayName,
           SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS TotalUpVotes,
           SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS TotalDownVotes,
           COUNT(DISTINCT v.PostId) AS TotalPostsVotedOn
    FROM Users u
    LEFT JOIN Votes v ON u.Id = v.UserId
    GROUP BY u.Id, u.DisplayName
),
RecentPosts AS (
    SELECT p.Id AS PostId,
           p.Title,
           p.ViewCount,
           p.CreationDate,
           ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS rn
    FROM Posts p
    WHERE p.CreationDate >= CURRENT_DATE - INTERVAL '6 MONTH'
),
PostStatistics AS (
    SELECT p.Id AS PostId,
           COUNT(c.Id) AS CommentCount,
           SUM(CASE WHEN ph.PostHistoryTypeId = 12 THEN 1 ELSE 0 END) AS DeletionCount,
           SUM(CASE WHEN ph.PostHistoryTypeId = 10 THEN 1 ELSE 0 END) AS CloseCount
    FROM Posts p
    LEFT JOIN Comments c ON p.Id = c.PostId
    LEFT JOIN PostHistory ph ON p.Id = ph.PostId
    GROUP BY p.Id
),
FilteredPosts AS (
    SELECT rp.PostId,
           rp.Title,
           rp.ViewCount,
           ps.CommentCount,
           ps.DeletionCount,
           ps.CloseCount,
           us.TotalUpVotes,
           us.TotalDownVotes,
           us.TotalPostsVotedOn
    FROM RecentPosts rp
    JOIN PostStatistics ps ON rp.PostId = ps.PostId
    LEFT JOIN UserVoteSummary us ON rp.PostId IN (SELECT PostId FROM Votes WHERE UserId = us.UserId)
    WHERE ps.DeletionCount = 0 AND ps.CloseCount = 0
)
SELECT fp.PostId,
       fp.Title,
       fp.ViewCount,
       fp.CommentCount,
       fp.TotalUpVotes,
       fp.TotalDownVotes,
       fp.TotalPostsVotedOn
FROM FilteredPosts fp
ORDER BY fp.ViewCount DESC, fp.TotalUpVotes DESC
LIMIT 10 OFFSET 0;
