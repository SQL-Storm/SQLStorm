
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.PostTypeId,
        p.CreationDate,
        p.Score,
        p.ViewCount,
        ROW_NUMBER() OVER (PARTITION BY p.PostTypeId ORDER BY p.Score DESC, p.CreationDate DESC) AS rn,
        COUNT(c.Id) OVER (PARTITION BY p.Id) AS CommentCount,
        (SELECT COUNT(*) FROM Votes v WHERE v.PostId = p.Id AND v.VoteTypeId = 2) AS UpVoteCount,
        (SELECT COUNT(*) FROM Votes v WHERE v.PostId = p.Id AND v.VoteTypeId = 3) AS DownVoteCount
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON c.PostId = p.Id
    WHERE 
        p.CreationDate >= (CAST('2024-10-01 12:34:56' AS TIMESTAMP) - INTERVAL '1 year')
),
FilteredPosts AS (
    SELECT 
        rp.PostId,
        rp.Title,
        rp.CreationDate,
        rp.Score,
        rp.ViewCount,
        rp.CommentCount,
        rp.UpVoteCount,
        rp.DownVoteCount
    FROM 
        RankedPosts rp
    WHERE 
        rp.rn = 1
),
PostAnalytics AS (
    SELECT 
        fp.PostId,
        fp.Title,
        fp.CreationDate,
        fp.Score,
        fp.ViewCount,
        fp.CommentCount,
        fp.UpVoteCount,
        fp.DownVoteCount,
        CASE 
            WHEN (fp.UpVoteCount + fp.DownVoteCount) = 0 THEN NULL 
            ELSE ROUND((fp.UpVoteCount * 1.0 / (fp.UpVoteCount + fp.DownVoteCount)) * 100, 2) 
        END AS UpVotePercentage
    FROM 
        FilteredPosts fp
)
SELECT 
    pa.PostId,
    pa.Title,
    pa.CreationDate,
    pa.Score,
    pa.ViewCount,
    pa.CommentCount,
    pa.UpVoteCount,
    pa.DownVoteCount,
    COALESCE(pa.UpVotePercentage, 'No votes') AS UpVotePercentage,
    COALESCE((SELECT COUNT(DISTINCT b.Id) FROM Badges b WHERE b.UserId IN (SELECT OwnerUserId FROM Posts p WHERE p.Id = pa.PostId)), 0) AS BadgeCount,
    (SELECT b.Name FROM Badges b WHERE b.UserId = (SELECT OwnerUserId FROM Posts p WHERE p.Id = pa.PostId) ORDER BY b.Date DESC LIMIT 1) AS LatestBadge
FROM 
    PostAnalytics pa
WHERE 
    pa.ViewCount > 100
ORDER BY 
    pa.Score DESC, pa.ViewCount DESC
LIMIT 10;
