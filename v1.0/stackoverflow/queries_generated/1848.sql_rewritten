WITH PostDetails AS (
    SELECT 
        P.Id AS PostId,
        P.Title,
        P.CreationDate,
        P.ViewCount,
        P.Score,
        COUNT(CASE WHEN C.Id IS NOT NULL THEN 1 END) AS CommentCount,
        SUM(CASE WHEN V.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes,
        SUM(CASE WHEN V.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes,
        U.DisplayName AS OwnerDisplayName,
        RANK() OVER (PARTITION BY P.OwnerUserId ORDER BY P.CreationDate DESC) AS UserPostRank
    FROM 
        Posts P
    LEFT JOIN 
        Comments C ON P.Id = C.PostId
    LEFT JOIN 
        Votes V ON P.Id = V.PostId
    LEFT JOIN 
        Users U ON P.OwnerUserId = U.Id
    WHERE 
        P.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 year'
    GROUP BY 
        P.Id, U.DisplayName
),
PostHistoryDetails AS (
    SELECT 
        Ph.PostId,
        Ph.UserId AS ModifierUserId,
        MAX(Ph.CreationDate) AS LastEditDate,
        COUNT(*) FILTER (WHERE Ph.PostHistoryTypeId IN (4, 5, 6)) AS EditCount
    FROM 
        PostHistory Ph
    GROUP BY 
        Ph.PostId, Ph.UserId
)
SELECT 
    PD.PostId,
    PD.Title,
    PD.CreationDate,
    PD.ViewCount,
    PD.Score,
    PD.CommentCount,
    PD.UpVotes,
    PD.DownVotes,
    PD.OwnerDisplayName,
    COALESCE(PHD.LastEditDate, 'No Edits') AS LastEditDate,
    COALESCE(PHD.EditCount, 0) AS TotalEdits
FROM 
    PostDetails PD
LEFT JOIN 
    PostHistoryDetails PHD ON PD.PostId = PHD.PostId
WHERE 
    EXISTS (
        SELECT 1 
        FROM Users U 
        WHERE U.Reputation > 1000 AND U.Id = PD.OwnerUserId
    )
ORDER BY 
    PD.Score DESC, 
    PD.ViewCount DESC
FETCH FIRST 100 ROWS ONLY;