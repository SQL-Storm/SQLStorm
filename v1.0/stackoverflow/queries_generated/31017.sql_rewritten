WITH RecursivePostHistory AS (
    
    SELECT
        p.Id AS PostId,
        p.Title,
        ph.CreationDate AS InitialCreationDate,
        ph.UserDisplayName AS EditorDisplayName,
        ph.Comment AS EditComment,
        ROW_NUMBER() OVER (PARTITION BY p.Id ORDER BY ph.CreationDate) AS EditOrder
    FROM
        Posts p
    JOIN
        PostHistory ph ON p.Id = ph.PostId
    WHERE
        ph.PostHistoryTypeId IN (1, 2, 4, 5) 

    UNION ALL

    
    SELECT
        rp.PostId,
        rp.Title,
        ph.CreationDate,
        ph.UserDisplayName,
        ph.Comment,
        ROW_NUMBER() OVER (PARTITION BY rp.PostId ORDER BY ph.CreationDate) AS EditOrder
    FROM
        RecursivePostHistory rp
    JOIN
        PostHistory ph ON rp.PostId = ph.PostId
    WHERE
        ph.CreationDate > rp.InitialCreationDate
        AND ph.PostHistoryTypeId IN (4, 5) 
),
PostMetrics AS (
    SELECT
        p.Id AS PostId,
        COUNT(c.Id) AS CommentCount,
        SUM(v.BountyAmount) AS TotalBounty,
        AVG(v.BountyAmount) AS AverageBounty,
        COUNT(b.Id) AS BadgeCount
    FROM
        Posts p
    LEFT JOIN
        Comments c ON p.Id = c.PostId
    LEFT JOIN
        Votes v ON p.Id = v.PostId
    LEFT JOIN
        Badges b ON p.OwnerUserId = b.UserId
    GROUP BY
        p.Id
),
RankedPosts AS (
    SELECT
        pm.PostId,
        pm.CommentCount,
        pm.TotalBounty,
        pm.AverageBounty,
        rp.EditComment,
        rp.EditorDisplayName,
        ROW_NUMBER() OVER (PARTITION BY pm.PostId ORDER BY pm.CommentCount DESC, pm.TotalBounty DESC) AS Rank
    FROM
        PostMetrics pm
    JOIN
        RecursivePostHistory rp ON pm.PostId = rp.PostId
)
SELECT
    p.Title,
    p.Id,
    rp.EditorDisplayName,
    rp.EditComment,
    pm.CommentCount,
    pm.TotalBounty,
    pm.AverageBounty,
    CASE
        WHEN rp.EditOrder IS NULL THEN 'No Edits'
        ELSE 'Edited By: ' || rp.EditorDisplayName
    END AS EditStatus
FROM
    Posts p
LEFT JOIN
    RankedPosts pm ON p.Id = pm.PostId
LEFT JOIN
    RecursivePostHistory rp ON p.Id = rp.PostId
WHERE
    p.CreationDate >= cast('2024-10-01' as date) - INTERVAL '30 days' 
ORDER BY
    pm.CommentCount DESC,
    pm.TotalBounty DESC
LIMIT 100;