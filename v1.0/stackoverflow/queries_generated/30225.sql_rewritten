WITH RECURSIVE UserReputation AS (
    SELECT 
        U.Id AS UserId,
        U.Reputation AS TotalReputation,
        U.CreationDate,
        1 AS Level
    FROM Users U
    WHERE U.Reputation IS NOT NULL

    UNION ALL

    SELECT 
        U.Id,
        U.Reputation + UR.TotalReputation,
        U.CreationDate,
        UR.Level + 1
    FROM Users U
    JOIN UserReputation UR ON U.Id = UR.UserId
    WHERE U.Reputation IS NOT NULL AND UR.Level < 5
),
RecentPosts AS (
    SELECT 
        P.Id AS PostId, 
        P.Title,
        P.CreationDate,
        P.OwnerUserId,
        P.ViewCount,
        ROW_NUMBER() OVER (PARTITION BY P.OwnerUserId ORDER BY P.CreationDate DESC) AS rn
    FROM Posts P
    WHERE P.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 year'
),
TopUsers AS (
    SELECT 
        U.Id AS UserId, 
        U.DisplayName,
        SUM(COALESCE(CASE WHEN V.VoteTypeId = 2 THEN 1 WHEN V.VoteTypeId = 3 THEN -1 ELSE 0 END, 0)) AS ReputationChange,
        U.Reputation,
        COALESCE(B.Count, 0) AS BadgeCount
    FROM Users U
    LEFT JOIN Votes V ON U.Id = V.UserId
    LEFT JOIN (SELECT UserId, COUNT(*) AS Count FROM Badges GROUP BY UserId) B ON U.Id = B.UserId
    WHERE U.Reputation IS NOT NULL
    GROUP BY U.Id, U.DisplayName, U.Reputation
    HAVING ReputationChange > 0
),
UserRecentPosts AS (
    SELECT 
        RU.UserId,
        RU.DisplayName,
        RP.Title,
        RP.CreationDate,
        RP.ViewCount,
        RANK() OVER (PARTITION BY RU.UserId ORDER BY RP.ViewCount DESC) AS Rank
    FROM TopUsers RU
    JOIN RecentPosts RP ON RU.UserId = RP.OwnerUserId
)
SELECT 
    U.UserId, 
    U.DisplayName,
    COALESCE(SUM(CASE WHEN UR.TotalReputation IS NOT NULL THEN UR.TotalReputation ELSE 0 END), 0) AS TotalCombinedReputation,
    COUNT(DISTINCT UP.PostId) AS PostCount,
    STRING_AGG(UP.Title, ', ') AS RecentPostTitles,
    COUNT(*) FILTER (WHERE B.Class = 1) AS GoldBadges,
    COUNT(*) FILTER (WHERE B.Class = 2) AS SilverBadges,
    COUNT(*) FILTER (WHERE B.Class = 3) AS BronzeBadges
FROM TopUsers U
LEFT JOIN UserReputation UR ON U.UserId = UR.UserId
LEFT JOIN UserRecentPosts UP ON U.UserId = UP.UserId
LEFT JOIN Badges B ON U.UserId = B.UserId
WHERE U.Reputation IS NOT NULL
GROUP BY U.UserId, U.DisplayName
HAVING COUNT(DISTINCT UP.PostId) > 0
ORDER BY TotalCombinedReputation DESC, U.DisplayName;