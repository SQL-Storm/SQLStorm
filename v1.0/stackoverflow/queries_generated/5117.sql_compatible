
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.ViewCount,
        p.CreationDate,
        p.Score,
        u.DisplayName AS OwnerDisplayName,
        ROW_NUMBER() OVER (PARTITION BY t.TagName ORDER BY p.Score DESC, p.ViewCount DESC) AS Rank,
        ARRAY_AGG(DISTINCT t.TagName) AS TagsList
    FROM 
        Posts p
    JOIN 
        Users u ON p.OwnerUserId = u.Id
    JOIN 
        unnest(string_to_array(p.Tags, '><')) AS t(TagName) ON true
    WHERE 
        p.PostTypeId IN (1, 2) 
        AND p.CreationDate > '2024-10-01 12:34:56'::timestamp - INTERVAL '1 year'
    GROUP BY 
        p.Id, p.Title, p.ViewCount, p.CreationDate, p.Score, u.DisplayName
),
TopPosts AS (
    SELECT 
        rp.PostId,
        rp.Title,
        rp.ViewCount,
        rp.CreationDate,
        rp.Score,
        rp.OwnerDisplayName,
        COUNT(c.Id) AS CommentCount,
        COUNT(DISTINCT b.Id) AS BadgeCount,
        rp.TagsList
    FROM 
        RankedPosts rp
    LEFT JOIN 
        Comments c ON c.PostId = rp.PostId
    LEFT JOIN 
        Badges b ON b.UserId = (SELECT OwnerUserId FROM Posts WHERE Id = rp.PostId)
    WHERE 
        rp.Rank <= 5
    GROUP BY 
        rp.PostId, rp.Title, rp.ViewCount, rp.CreationDate, rp.Score, rp.OwnerDisplayName, rp.TagsList
)
SELECT 
    PostId, 
    Title, 
    ViewCount, 
    CreationDate, 
    Score, 
    OwnerDisplayName, 
    CommentCount, 
    BadgeCount, 
    TagsList 
FROM 
    TopPosts
ORDER BY 
    Score DESC, 
    ViewCount DESC;
