WITH RECURSIVE UserActivity AS (
    SELECT 
        U.Id AS UserId,
        U.DisplayName,
        U.Reputation,
        U.CreationDate,
        U.LastAccessDate,
        COUNT(DISTINCT P.Id) AS TotalPosts,
        COUNT(DISTINCT C.Id) AS TotalComments,
        SUM(VB.BountyAmount) AS TotalBounties
    FROM Users U
    LEFT JOIN Posts P ON U.Id = P.OwnerUserId
    LEFT JOIN Comments C ON U.Id = C.UserId
    LEFT JOIN Votes VB ON U.Id = VB.UserId
    WHERE U.Reputation > 1000
    GROUP BY U.Id, U.DisplayName, U.Reputation, U.CreationDate, U.LastAccessDate

    UNION ALL

    SELECT 
        UA.UserId,
        UA.DisplayName,
        UA.Reputation,
        UA.CreationDate,
        UA.LastAccessDate,
        UA.TotalPosts,
        UA.TotalComments,
        UA.TotalBounties
    FROM UserActivity UA
    JOIN Badges B ON UA.UserId = B.UserId
    WHERE B.Class = 1
)

SELECT 
    UA.UserId,
    UA.DisplayName,
    UA.Reputation,
    UA.CreationDate,
    UA.LastAccessDate,
    UA.TotalPosts,
    UA.TotalComments,
    UA.TotalBounties,
    COALESCE(PH.Id, -1) AS LastPostHistoryId,
    PH.Comment AS LastPostComment,
    COUNT(DISTINCT PH.Id) AS TotalPostHistoryChanges
FROM UserActivity UA
LEFT JOIN Posts P ON UA.UserId = P.OwnerUserId
LEFT JOIN PostHistory PH ON P.Id = PH.PostId
WHERE UA.TotalPosts > 10
GROUP BY UA.UserId, UA.DisplayName, UA.Reputation, UA.CreationDate, UA.LastAccessDate, PH.Id, PH.Comment

UNION

SELECT 
    U.Id,
    U.DisplayName,
    U.Reputation,
    U.CreationDate,
    U.LastAccessDate,
    COUNT(DISTINCT P.Id) AS TotalPosts,
    COUNT(DISTINCT C.Id) AS TotalComments,
    0 AS TotalBounties,
    NULL AS LastPostHistoryId,
    NULL AS LastPostComment,
    0 AS TotalPostHistoryChanges
FROM Users U
LEFT JOIN Posts P ON U.Id = P.OwnerUserId
LEFT JOIN Comments C ON U.Id = C.UserId
WHERE U.Reputation <= 500
GROUP BY U.Id, U.DisplayName, U.Reputation, U.CreationDate, U.LastAccessDate

ORDER BY TotalPosts DESC, Reputation DESC;