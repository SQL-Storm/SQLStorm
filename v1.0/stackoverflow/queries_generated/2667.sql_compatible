
WITH RankedPosts AS (
    SELECT 
        p.Id, 
        p.Title, 
        p.CreationDate, 
        COUNT(c.Id) AS CommentCount, 
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS PostRank
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    WHERE 
        p.CreationDate >= CURRENT_DATE - INTERVAL '1 year' 
        AND p.Score > 0
    GROUP BY 
        p.Id, p.Title, p.CreationDate, p.OwnerUserId
),
TopPosts AS (
    SELECT
        rp.Id,
        rp.Title,
        rp.CreationDate,
        rp.CommentCount,
        rp.UpVotes,
        rp.DownVotes,
        rp.OwnerUserId
    FROM 
        RankedPosts rp
    WHERE 
        rp.PostRank <= 5
)
SELECT 
    u.DisplayName,
    COUNT(DISTINCT b.Id) AS BadgesCount,
    SUM(tp.UpVotes) AS TotalUpVotes,
    SUM(tp.DownVotes) AS TotalDownVotes,
    COALESCE(SUM(tp.CommentCount), 0) AS TotalComments,
    STRING_AGG(tp.Title, ', ' ORDER BY tp.CreationDate DESC) AS RecentPostTitles
FROM 
    Users u
LEFT JOIN 
    Badges b ON u.Id = b.UserId
LEFT JOIN 
    TopPosts tp ON u.Id = tp.OwnerUserId
LEFT JOIN 
    Posts bp ON u.Id = bp.OwnerUserId AND bp.CreationDate >= CURRENT_DATE - INTERVAL '1 year'
WHERE 
    u.Reputation > 1000
GROUP BY 
    u.DisplayName
ORDER BY 
    TotalUpVotes DESC, TotalComments DESC;
