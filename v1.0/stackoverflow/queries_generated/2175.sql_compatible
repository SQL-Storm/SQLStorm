
WITH RankedPosts AS (
    SELECT
        p.Id,
        p.Title,
        p.CreationDate,
        p.Score,
        p.ViewCount,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS PostRank
    FROM
        Posts p
    WHERE
        p.PostTypeId = 1 AND p.Score > 0
),
ClosedPosts AS (
    SELECT
        ph.PostId,
        COUNT(*) AS CloseCount,
        ARRAY_AGG(DISTINCT ctr.Name) AS CloseReasons
    FROM
        PostHistory ph
    JOIN
        CloseReasonTypes ctr ON CAST(ph.Comment AS INT) = ctr.Id
    WHERE
        ph.PostHistoryTypeId IN (10, 11) 
    GROUP BY
        ph.PostId
),
UserBadges AS (
    SELECT
        b.UserId,
        COUNT(*) FILTER (WHERE b.Class = 1) AS GoldBadges,
        COUNT(*) FILTER (WHERE b.Class = 2) AS SilverBadges,
        COUNT(*) FILTER (WHERE b.Class = 3) AS BronzeBadges
    FROM
        Badges b
    GROUP BY
        b.UserId
),
TopUsers AS (
    SELECT
        u.Id,
        u.DisplayName,
        u.Reputation,
        COALESCE(ub.GoldBadges, 0) AS GoldBadges,
        COALESCE(ub.SilverBadges, 0) AS SilverBadges,
        COALESCE(ub.BronzeBadges, 0) AS BronzeBadges,
        RANK() OVER (ORDER BY u.Reputation DESC) AS UserRank
    FROM
        Users u
    LEFT JOIN
        UserBadges ub ON u.Id = ub.UserId
)
SELECT
    tu.DisplayName,
    tu.Reputation,
    ARRAY_AGG(DISTINCT rp.Title) AS RecentQuestions,
    COALESCE(cp.CloseCount, 0) AS TotalClosedPosts,
    COALESCE(cp.CloseReasons, ARRAY[]::TEXT[]) AS CloseReasons
FROM
    TopUsers tu
LEFT JOIN
    RankedPosts rp ON tu.Id = rp.OwnerUserId AND rp.PostRank <= 5
LEFT JOIN
    ClosedPosts cp ON rp.Id = cp.PostId
WHERE
    tu.UserRank <= 10
GROUP BY
    tu.Id, tu.DisplayName, tu.Reputation
ORDER BY
    tu.Reputation DESC;
