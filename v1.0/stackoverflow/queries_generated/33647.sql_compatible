
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Score,
        ROW_NUMBER() OVER (PARTITION BY p.PostTypeId ORDER BY p.Score DESC) AS Rank,
        COUNT(*) OVER (PARTITION BY p.PostTypeId) AS TotalPosts
    FROM 
        Posts p
    WHERE 
        p.Score > 0
),
TopPosts AS (
    SELECT 
        rp.PostId,
        rp.Title,
        rp.CreationDate,
        rp.Score,
        rp.Rank,
        rp.TotalPosts
    FROM 
        RankedPosts rp
    WHERE 
        rp.Rank <= 10
),
PostDetails AS (
    SELECT 
        tp.PostId,
        tp.Title,
        tp.CreationDate,
        tp.Score,
        COALESCE(COUNT(c.Id), 0) AS CommentCount,
        COALESCE(SUM(v.BountyAmount), 0) AS TotalBounties,
        STRING_AGG(DISTINCT t.TagName, ', ') AS Tags
    FROM 
        TopPosts tp
    LEFT JOIN 
        Comments c ON c.PostId = tp.PostId
    LEFT JOIN 
        Votes v ON v.PostId = tp.PostId AND v.VoteTypeId = 8 
    LEFT JOIN 
        UNNEST(STRING_TO_ARRAY(tp.Tags, ',')) AS tagId ON tagId::TEXT = t.Id::TEXT 
    LEFT JOIN 
        Tags t ON t.TagName = tagId
    GROUP BY 
        tp.PostId, tp.Title, tp.CreationDate, tp.Score
),
PostHistoryCTE AS (
    SELECT 
        ph.PostId,
        ph.PostHistoryTypeId,
        ph.CreationDate,
        ph.UserDisplayName,
        ph.Comment,
        ROW_NUMBER() OVER (PARTITION BY ph.PostId ORDER BY ph.CreationDate DESC) AS EditRank
    FROM 
        PostHistory ph
    WHERE 
        ph.PostHistoryTypeId IN (4, 5, 24) 
),
RecentEdits AS (
    SELECT 
        p.PostId,
        STRING_AGG(CONCAT(ph.UserDisplayName, ': ', ph.Comment), '; ') AS RecentEditComments
    FROM 
        PostHistoryCTE ph
    JOIN 
        TopPosts p ON p.PostId = ph.PostId
    WHERE 
        ph.EditRank <= 5
    GROUP BY 
        p.PostId
)
SELECT 
    pd.PostId,
    pd.Title,
    pd.CreationDate,
    pd.Score,
    pd.CommentCount,
    pd.TotalBounties,
    pd.Tags,
    COALESCE(re.RecentEditComments, 'No recent edits') AS RecentEditComments
FROM 
    PostDetails pd
LEFT JOIN 
    RecentEdits re ON pd.PostId = re.PostId
WHERE 
    pd.TotalPosts > 20 
ORDER BY 
    pd.Score DESC 
LIMIT 50;
