
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId, 
        p.Title, 
        p.CreationDate, 
        p.Score, 
        p.ViewCount, 
        u.Reputation,
        ROW_NUMBER() OVER (PARTITION BY p.PostTypeId ORDER BY p.Score DESC) AS rn,
        COUNT(pc.PostId) OVER (PARTITION BY p.Id) AS CommentCount
    FROM 
        Posts p
    JOIN 
        Users u ON p.OwnerUserId = u.Id
    LEFT JOIN 
        Comments pc ON p.Id = pc.PostId
    WHERE 
        p.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 year'
)

SELECT 
    rp.PostId,
    rp.Title,
    rp.CreationDate,
    rp.Score,
    rp.ViewCount,
    rp.Reputation,
    rp.CommentCount,
    ph.Comment AS EditComment,
    CASE 
        WHEN ph.PostHistoryTypeId IN (10, 11) THEN 'Closed/Reopened'
        ELSE NULL
    END AS PostStatus,
    CASE 
        WHEN rp.Score = 0 THEN 'No Score'
        ELSE 'Scored'
    END AS ScoreStatus
FROM 
    RankedPosts rp
LEFT JOIN 
    PostHistory ph ON rp.PostId = ph.PostId AND ph.CreationDate = (
        SELECT MAX(ph2.CreationDate) 
        FROM PostHistory ph2 
        WHERE ph2.PostId = rp.PostId
    )
WHERE 
    rp.rn = 1
    AND COALESCE(rp.CommentCount, 0) > 0
ORDER BY 
    rp.Score DESC, 
    rp.ViewCount DESC
LIMIT 100

UNION ALL

SELECT 
    p.Id AS PostId,
    p.Title,
    p.CreationDate,
    p.Score,
    p.ViewCount,
    u.Reputation,
    0 AS CommentCount,
    NULL AS EditComment,
    NULL AS PostStatus,
    'Deleted' AS ScoreStatus
FROM 
    Posts p
JOIN 
    Users u ON p.OwnerUserId = u.Id
WHERE 
    p.Id NOT IN (SELECT PostId FROM RankedPosts)
    AND p.CreationDate < TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '5 years'
    AND p.Score < 0
    AND p.IsDeleted = TRUE

ORDER BY 
    Score DESC, 
    CreationDate ASC
