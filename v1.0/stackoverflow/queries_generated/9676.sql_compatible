
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.ViewCount,
        p.Score,
        p.OwnerUserId,
        ROW_NUMBER() OVER (PARTITION BY p.PostTypeId ORDER BY p.ViewCount DESC, p.Score DESC) AS Rank,
        COUNT(c.Id) AS CommentCount,
        COALESCE(SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END), 0) AS UpVoteCount,
        COALESCE(SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END), 0) AS DownVoteCount
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    WHERE 
        p.CreationDate >= DATEADD(DAY, -30, '2024-10-01')
    GROUP BY 
        p.Id, p.Title, p.CreationDate, p.ViewCount, p.Score, p.OwnerUserId, p.PostTypeId
), 
PostStats AS (
    SELECT
        rp.PostId,
        rp.Title,
        rp.CreationDate,
        rp.ViewCount,
        rp.Score,
        rp.OwnerUserId,
        rp.Rank,
        ps.CommentCount,
        ps.UpVoteCount,
        ps.DownVoteCount,
        CASE 
            WHEN rp.Rank <= 10 THEN 'Top Posts'
            ELSE 'Other Posts'
        END AS FilteredCategory
    FROM 
        RankedPosts rp
    JOIN 
        (SELECT p.Id, COUNT(c.Id) AS CommentCount 
         FROM Posts p 
         LEFT JOIN Comments c ON p.Id = c.PostId 
         WHERE p.CreationDate >= DATEADD(DAY, -30, '2024-10-01')
         GROUP BY p.Id) ps ON rp.PostId = ps.Id
)
SELECT
    ps.Title,
    ps.ViewCount,
    ps.Score,
    ps.CommentCount,
    ps.UpVoteCount,
    ps.DownVoteCount,
    u.DisplayName AS OwnerUser
FROM 
    PostStats ps
JOIN 
    Users u ON ps.OwnerUserId = u.Id
WHERE 
    ps.FilteredCategory = 'Top Posts'
ORDER BY 
    ps.ViewCount DESC, ps.Score DESC;
