WITH RecentPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.LastActivityDate,
        p.ViewCount,
        p.AnswerCount,
        u.DisplayName AS AuthorName,
        ARRAY_AGG(DISTINCT t.TagName) AS TagsArray
    FROM 
        Posts p
    JOIN 
        Users u ON p.OwnerUserId = u.Id
    LEFT JOIN 
        Tags t ON t.Id = ANY(string_to_array(substring(p.Tags, 2, length(p.Tags)-2), '><')::int[])
    WHERE 
        p.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '30 days'
    GROUP BY 
        p.Id, u.DisplayName
),
PostActivity AS (
    SELECT 
        ph.PostId,
        ph.PostHistoryTypeId,
        ph.CreationDate AS HistoryDate,
        ph.UserDisplayName AS EditorName
    FROM 
        PostHistory ph
    JOIN 
        RecentPosts rp ON ph.PostId = rp.PostId
    WHERE 
        ph.CreationDate >= rp.CreationDate
),
UserComments AS (
    SELECT 
        c.PostId,
        COUNT(*) AS CommentCount,
        STRING_AGG(DISTINCT c.Text, ' | ') AS CommentTexts
    FROM 
        Comments c
    JOIN 
        RecentPosts rp ON c.PostId = rp.PostId
    GROUP BY 
        c.PostId
)
SELECT 
    rp.PostId,
    rp.Title,
    rp.CreationDate,
    rp.LastActivityDate,
    rp.ViewCount,
    rp.AnswerCount,
    rp.AuthorName,
    rp.TagsArray,
    COALESCE(pa.EditorName, 'None') AS LastEditor,
    COALESCE(pa.HistoryDate, 'No Edits') AS LastEditDate,
    COALESCE(uc.CommentCount, 0) AS TotalComments,
    COALESCE(uc.CommentTexts, 'No Comments') AS RecentComments
FROM 
    RecentPosts rp
LEFT JOIN 
    PostActivity pa ON rp.PostId = pa.PostId
LEFT JOIN 
    UserComments uc ON rp.PostId = uc.PostId
ORDER BY 
    rp.LastActivityDate DESC
LIMIT 50;