WITH UserActivity AS (
    SELECT
        u.Id AS UserId,
        u.Reputation,
        COUNT(DISTINCT p.Id) AS PostCount,
        COUNT(DISTINCT c.Id) AS CommentCount,
        COUNT(DISTINCT b.Id) AS BadgeCount,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes
    FROM Users u
    LEFT JOIN Posts p ON u.Id = p.OwnerUserId
    LEFT JOIN Comments c ON u.Id = c.UserId
    LEFT JOIN Badges b ON u.Id = b.UserId
    LEFT JOIN Votes v ON u.Id = v.UserId
    GROUP BY u.Id, u.Reputation
),
PostStatistics AS (
    SELECT
        p.Id AS PostId,
        p.Title,
        p.CreatedDate,
        p.Score,
        p.ViewCount,
        COUNT(c.Id) AS CommentCount,
        COUNT(DISTINCT CASE WHEN v.VoteTypeId = 2 THEN v.Id END) AS UpVotes,
        COUNT(DISTINCT CASE WHEN v.VoteTypeId = 3 THEN v.Id END) AS DownVotes
    FROM Posts p
    LEFT JOIN Comments c ON p.Id = c.PostId
    LEFT JOIN Votes v ON p.Id = v.PostId
    GROUP BY p.Id, p.Title, p.CreatedDate, p.Score, p.ViewCount
)
SELECT
    ua.UserId,
    ua.Reputation,
    ua.PostCount,
    ua.CommentCount AS TotalComments,
    ua.BadgeCount,
    ua.UpVotes AS TotalUpVotes,
    ua.DownVotes AS TotalDownVotes,
    ps.PostId,
    ps.Title,
    ps.CreatedDate,
    ps.Score,
    ps.ViewCount,
    ps.CommentCount AS PostComments,
    ps.UpVotes AS PostUpVotes,
    ps.DownVotes AS PostDownVotes
FROM UserActivity ua
LEFT JOIN PostStatistics ps ON ua.UserId = ps.OwnerUserId
ORDER BY ua.Reputation DESC, ua.PostCount DESC, ps.ViewCount DESC
LIMIT 100;