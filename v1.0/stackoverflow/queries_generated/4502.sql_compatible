
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.ViewCount,
        p.CreationDate,
        u.Reputation AS UserReputation,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS UserPostRank,
        p.OwnerUserId
    FROM Posts p
    LEFT JOIN Users u ON p.OwnerUserId = u.Id
    WHERE p.PostTypeId = 1 AND p.CreationDate >= DATEADD(year, -1, DATE '2024-10-01')
),
UserBadges AS (
    SELECT 
        UserId, 
        COUNT(*) AS BadgeCount,
        SUM(CASE WHEN Class = 1 THEN 1 ELSE 0 END) AS GoldBadges,
        SUM(CASE WHEN Class = 2 THEN 1 ELSE 0 END) AS SilverBadges,
        SUM(CASE WHEN Class = 3 THEN 1 ELSE 0 END) AS BronzeBadges
    FROM Badges
    GROUP BY UserId
),
PostStatistics AS (
    SELECT 
        rp.PostId,
        rp.Title,
        rp.ViewCount,
        rp.UserReputation,
        ub.BadgeCount,
        ub.GoldBadges,
        ub.SilverBadges,
        ub.BronzeBadges,
        rp.UserPostRank
    FROM RankedPosts rp
    LEFT JOIN UserBadges ub ON rp.OwnerUserId = ub.UserId
)
SELECT 
    ps.PostId,
    ps.Title,
    ps.ViewCount,
    ps.UserReputation,
    COALESCE(ps.BadgeCount, 0) AS BadgeCount,
    COALESCE(ps.GoldBadges, 0) AS GoldBadges,
    COALESCE(ps.SilverBadges, 0) AS SilverBadges,
    COALESCE(ps.BronzeBadges, 0) AS BronzeBadges
FROM PostStatistics ps
WHERE ps.UserPostRank = 1
  AND (ps.ViewCount > 100 OR ps.UserReputation > 100)
ORDER BY ps.ViewCount DESC, ps.UserReputation DESC
LIMIT 50
UNION ALL
SELECT 
    NULL AS PostId,
    'Total Users with Badges' AS Title,
    NULL AS ViewCount,
    NULL AS UserReputation,
    COUNT(DISTINCT UserId) AS BadgeCount,
    NULL AS GoldBadges,
    NULL AS SilverBadges,
    NULL AS BronzeBadges
FROM UserBadges
HAVING COUNT(DISTINCT UserId) > 0
ORDER BY BadgeCount DESC;
