WITH UserPostCounts AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COUNT(p.Id) AS PostCount,
        SUM(CASE WHEN p.PostTypeId = 1 THEN 1 ELSE 0 END) AS QuestionCount,
        SUM(CASE WHEN p.PostTypeId = 2 THEN 1 ELSE 0 END) AS AnswerCount,
        SUM(p.ViewCount) AS TotalViews,
        SUM(p.Score) AS TotalScore
    FROM 
        Users u
    LEFT JOIN 
        Posts p ON u.Id = p.OwnerUserId
    GROUP BY 
        u.Id, u.DisplayName
),
TopTags AS (
    SELECT
        t.TagName,
        COUNT(p.Id) AS PostCount
    FROM
        Tags t
    JOIN
        Posts p ON t.Id = ANY (STRING_TO_ARRAY(p.Tags, ',')::int[])
    GROUP BY
        t.TagName
    ORDER BY
        PostCount DESC
    LIMIT 10
),
PostHistoryStats AS (
    SELECT
        ph.PostId,
        COUNT(ph.Id) AS HistoryCount,
        MAX(ph.CreationDate) AS LastEditDate
    FROM
        PostHistory ph
    GROUP BY
        ph.PostId
)

SELECT 
    upc.UserId,
    upc.DisplayName,
    upc.PostCount,
    upc.QuestionCount,
    upc.AnswerCount,
    upc.TotalViews,
    upc.TotalScore,
    th.TagName,
    th.PostCount AS TagPostCount,
    phs.HistoryCount,
    phs.LastEditDate
FROM 
    UserPostCounts upc
CROSS JOIN 
    TopTags th
LEFT JOIN 
    PostHistoryStats phs ON phs.PostId IN (SELECT Id FROM Posts WHERE OwnerUserId = upc.UserId)
ORDER BY 
    upc.TotalScore DESC, upc.PostCount DESC;