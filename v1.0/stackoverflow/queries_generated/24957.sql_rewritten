WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Score,
        p.ViewCount,
        ROW_NUMBER() OVER(PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS UserPostRank
    FROM 
        Posts p
    WHERE 
        p.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 year' 
        AND p.Score >= 0
),
ActiveUsers AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        u.Reputation,
        COUNT(p.Id) AS PostCount,
        SUM(v.BountyAmount) AS TotalBounty
    FROM 
        Users u
    LEFT JOIN 
        Posts p ON u.Id = p.OwnerUserId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    WHERE 
        u.Reputation > 100
    GROUP BY 
        u.Id
),
PostActivity AS (
    SELECT 
        p.Id AS PostId,
        COUNT(c.Id) AS CommentCount,
        COUNT(v.Id) FILTER (WHERE v.VoteTypeId = 2) AS UpvoteCount,
        COUNT(v.Id) FILTER (WHERE v.VoteTypeId = 3) AS DownvoteCount,
        MAX(c.CreationDate) AS LastCommentDate
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    GROUP BY 
        p.Id
),
UserPostRanking AS (
    SELECT 
        u.UserId,
        u.DisplayName,
        p.PostId,
        p.Title,
        p.ViewCount,
        p.CommentCount,
        p.UpvoteCount,
        p.DownvoteCount,
        RANK() OVER (PARTITION BY u.UserId ORDER BY p.ViewCount DESC, p.CommentCount DESC) AS ViewCommentRank
    FROM 
        ActiveUsers u
    JOIN 
        PostActivity p ON u.UserId = p.PostId
)

SELECT 
    up.DisplayName,
    up.PostId,
    up.Title,
    up.ViewCount,
    up.CommentCount,
    up.UpvoteCount,
    up.DownvoteCount,
    CASE 
        WHEN up.UpvoteCount > up.DownvoteCount THEN 'Positive' 
        WHEN up.UpvoteCount < up.DownvoteCount THEN 'Negative'
        ELSE 'Neutral' 
    END AS VoteSentiment,
    COALESCE((
        SELECT COUNT(*) 
        FROM PostHistory ph
        WHERE ph.PostId = up.PostId AND ph.PostHistoryTypeId IN (10, 11, 12)
    ), 0) AS ClosureHistoryCount
FROM 
    UserPostRanking up
WHERE 
    up.ViewCommentRank = 1
ORDER BY 
    up.UserId, up.Title;