
WITH UserPostStats AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COUNT(p.Id) AS PostCount,
        SUM(COALESCE(p.Score, 0)) AS TotalScore,
        SUM(COALESCE(p.ViewCount, 0)) AS TotalViews,
        AVG(COALESCE(p.ViewCount, 0)) AS AvgViewsPerPost,
        RANK() OVER (ORDER BY SUM(COALESCE(p.ViewCount, 0)) DESC) AS ViewRank
    FROM 
        Users u
    LEFT JOIN 
        Posts p ON u.Id = p.OwnerUserId
    WHERE 
        u.Reputation > 1000
    GROUP BY 
        u.Id, u.DisplayName
),
TopPosts AS (
    SELECT 
        p.Id,
        p.Title,
        p.Score,
        p.ViewCount,
        p.CreationDate,
        ROW_NUMBER() OVER (PARTITION BY p.Tags ORDER BY p.Score DESC) AS TagRank
    FROM 
        Posts p
    WHERE 
        p.PostTypeId = 1
        AND p.Score > 10
),
RecentPostHistory AS (
    SELECT 
        ph.PostId,
        ph.PostHistoryTypeId,
        ph.CreationDate,
        ph.UserDisplayName,
        p.Title,
        CASE 
            WHEN ph.PostHistoryTypeId = 10 THEN 
                (SELECT Name FROM CloseReasonTypes cr WHERE cr.Id = CAST(ph.Comment AS INT))
            ELSE NULL 
        END AS CloseReason
    FROM 
        PostHistory ph
    JOIN 
        Posts p ON ph.PostId = p.Id
    WHERE 
        ph.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 month'
)
SELECT 
    ups.DisplayName,
    ups.PostCount,
    ups.TotalScore,
    ups.TotalViews,
    ups.AvgViewsPerPost,
    tp.Title AS TopPostTitle,
    tp.Score AS TopPostScore,
    tp.ViewCount AS TopPostViewCount,
    rph.PostId AS RecentPostId,
    rph.UserDisplayName AS EditorName,
    rph.CreationDate AS EditDate,
    rph.CloseReason
FROM 
    UserPostStats ups
LEFT JOIN 
    TopPosts tp ON ups.UserId = (SELECT OwnerUserId FROM Posts WHERE Id = tp.Id)
LEFT JOIN 
    RecentPostHistory rph ON ups.UserId = (SELECT UserId FROM PostHistory WHERE PostId = rph.PostId ORDER BY CreationDate DESC LIMIT 1)
WHERE 
    ups.ViewRank <= 10
ORDER BY 
    ups.TotalScore DESC, ups.AvgViewsPerPost DESC;
