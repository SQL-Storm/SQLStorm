
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Score,
        p.ViewCount,
        u.DisplayName AS OwnerDisplayName,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC) AS Rank,
        p.Tags
    FROM 
        Posts p
    JOIN 
        Users u ON p.OwnerUserId = u.Id
    WHERE 
        p.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '30 days'
        AND p.PostTypeId = 1 
),
TopQuestions AS (
    SELECT 
        PostId,
        Title,
        CreationDate,
        Score,
        ViewCount,
        OwnerDisplayName,
        Tags
    FROM 
        RankedPosts
    WHERE 
        Rank <= 5
),
TagCounts AS (
    SELECT 
        TRIM(tag) AS TagName,
        COUNT(*) AS Count
    FROM (
        SELECT 
            UNNEST(SPLIT_PART(SUBSTRING(Tags, 2, LENGTH(Tags)-2), '><')) AS tag
        FROM 
            Posts
        WHERE 
            PostTypeId = 1
    ) AS tags
    GROUP BY 
        TagName
)
SELECT 
    tq.PostId,
    tq.Title,
    tq.CreationDate,
    tq.Score,
    tq.ViewCount,
    tq.OwnerDisplayName,
    tc.TagName,
    tc.Count AS TagUsage
FROM 
    TopQuestions tq
LEFT JOIN 
    TagCounts tc ON tc.TagName IN (SELECT TRIM(tag) 
                                    FROM UNNEST(SPLIT_PART(SUBSTRING(tq.Tags, 2, LENGTH(tq.Tags)-2), '><')) AS tag)
                                    WHERE id = tq.PostId)
ORDER BY 
    tq.Score DESC, tq.ViewCount DESC;
