
WITH RecursiveTagHierarchy AS (
    SELECT 
        Id,
        TagName,
        Count,
        1 AS Level
    FROM 
        Tags
    WHERE 
        IsModeratorOnly = 0  
    UNION ALL
    SELECT 
        t.Id,
        t.TagName,
        t.Count,
        r.Level + 1
    FROM 
        Tags t
    INNER JOIN 
        RecursiveTagHierarchy r ON t.ExcerptPostId = r.Id
),
UserPostStatistics AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COUNT(p.Id) AS TotalPosts,
        SUM(CASE WHEN p.PostTypeId = 1 THEN 1 ELSE 0 END) AS Questions,
        SUM(CASE WHEN p.PostTypeId = 2 THEN 1 ELSE 0 END) AS Answers,
        AVG(p.Score) AS AverageScore,
        COUNT(DISTINCT b.Id) AS BadgeCount
    FROM 
        Users u
    LEFT JOIN 
        Posts p ON u.Id = p.OwnerUserId
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    GROUP BY 
        u.Id, u.DisplayName
),
RecentlyClosedPosts AS (
    SELECT 
        p.Id,
        p.Title,
        p.CreationDate,
        ph.CreationDate AS CloseDate,
        u.DisplayName AS CloserName
    FROM 
        Posts p
    INNER JOIN 
        PostHistory ph ON p.Id = ph.PostId AND ph.PostHistoryTypeId = 10  
    INNER JOIN 
        Users u ON ph.UserId = u.Id
    WHERE 
        ph.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '30 days'
),
PostActivity AS (
    SELECT 
        p.Id,
        p.Title,
        COUNT(c.Id) AS CommentCount,
        COUNT(v.Id) AS VoteCount
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    WHERE 
        p.LastActivityDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '60 days'
    GROUP BY 
        p.Id, p.Title
)
SELECT 
    u.DisplayName AS UserName,
    u.TotalPosts,
    u.Questions,
    u.Answers,
    u.AverageScore,
    u.BadgeCount,
    rth.TagName AS TagName,
    rth.Level AS TagLevel,
    rcp.Title AS RecentlyClosedTitle,
    rcp.CloseDate,
    rcp.CloserName,
    pa.CommentCount,
    pa.VoteCount
FROM 
    UserPostStatistics u
LEFT JOIN 
    RecursiveTagHierarchy rth ON u.UserId = rth.Id
LEFT JOIN 
    RecentlyClosedPosts rcp ON u.UserId = rcp.Id 
LEFT JOIN 
    PostActivity pa ON u.UserId = pa.Id
WHERE 
    u.TotalPosts > 0
ORDER BY 
    u.AverageScore DESC, 
    u.DisplayName ASC;
