WITH RecursiveCTE AS (
    SELECT 
        P.Id AS PostId,
        P.Title,
        P.OwnerUserId,
        P.CreationDate,
        P.Score,
        P.ViewCount,
        P.ParentId,
        1 AS Level
    FROM Posts P
    WHERE P.PostTypeId = 1 
    UNION ALL
    SELECT 
        P2.Id,
        P2.Title,
        P2.OwnerUserId,
        P2.CreationDate,
        P2.Score,
        P2.ViewCount,
        P2.ParentId,
        Level + 1
    FROM Posts P2
    INNER JOIN RecursiveCTE RCTE ON P2.ParentId = RCTE.PostId
),
PostStats AS (
    SELECT 
        U.DisplayName,
        COUNT(DISTINCT P.Id) AS PostCount,
        SUM(COALESCE(P.Score, 0)) AS TotalScore,
        SUM(COALESCE(P.ViewCount, 0)) AS TotalViews,
        STRING_AGG(DISTINCT T.TagName, ', ') AS Tags
    FROM Users U
    LEFT JOIN Posts P ON U.Id = P.OwnerUserId
    LEFT JOIN LATERAL (
        SELECT 
            TRIM(UNNEST(STRING_TO_ARRAY(P.Tags, '<>'))) AS TagName
    ) T ON true
    GROUP BY U.Id
),
RecentActivity AS (
    SELECT
        U.Id AS UserId,
        U.DisplayName,
        COUNT(DISTINCT C.Id) AS CommentCount,
        COUNT(DISTINCT V.Id) AS VoteCount
    FROM Users U
    LEFT JOIN Comments C ON U.Id = C.UserId
    LEFT JOIN Votes V ON U.Id = V.UserId
    WHERE C.CreationDate > cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '30 days' 
    OR V.CreationDate > cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '30 days'
    GROUP BY U.Id
),
PostHistorySummary AS (
    SELECT
        PH.UserId,
        COUNT(DISTINCT PH.PostId) AS EditedPostCount,
        COUNT(PH.Id) AS EditHistoryCount,
        MAX(PH.CreationDate) AS LastEditDate
    FROM PostHistory PH
    WHERE PH.PostHistoryTypeId IN (4, 6, 24) 
    GROUP BY PH.UserId
)

SELECT 
    U.Id AS UserId,
    U.DisplayName,
    PS.PostCount,
    PS.TotalScore,
    PS.TotalViews,
    PS.Tags,
    RA.CommentCount,
    RA.VoteCount,
    PHS.EditedPostCount,
    PHS.EditHistoryCount,
    PHS.LastEditDate
FROM Users U
LEFT JOIN PostStats PS ON U.Id = PS.UserId
LEFT JOIN RecentActivity RA ON U.Id = RA.UserId
LEFT JOIN PostHistorySummary PHS ON U.Id = PHS.UserId
WHERE U.Reputation > 1000
ORDER BY PS.TotalScore DESC, RA.CommentCount DESC;