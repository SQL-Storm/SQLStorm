
WITH UserStatistics AS (
    SELECT 
        U.Id AS UserId,
        U.DisplayName,
        U.Reputation,
        COUNT(DISTINCT P.Id) AS PostCount,
        SUM(CASE WHEN P.PostTypeId = 1 THEN 1 ELSE 0 END) AS QuestionCount,
        SUM(CASE WHEN P.PostTypeId = 2 THEN 1 ELSE 0 END) AS AnswerCount,
        COUNT(DISTINCT B.Id) AS BadgeCount
    FROM 
        Users U
    LEFT JOIN 
        Posts P ON U.Id = P.OwnerUserId
    LEFT JOIN 
        Badges B ON U.Id = B.UserId
    GROUP BY 
        U.Id, U.DisplayName, U.Reputation
),

PostDetails AS (
    SELECT 
        P.Id AS PostId,
        P.Title,
        P.CreationDate,
        P.AcceptedAnswerId,
        COALESCE(A.Score, 0) AS AcceptScore,
        COUNT(C.Id) AS CommentCount,
        SUM(CASE WHEN V.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes,
        SUM(CASE WHEN V.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes,
        P.OwnerUserId
    FROM 
        Posts P
    LEFT JOIN 
        Posts A ON P.AcceptedAnswerId = A.Id
    LEFT JOIN 
        Comments C ON P.Id = C.PostId
    LEFT JOIN 
        Votes V ON P.Id = V.PostId
    WHERE 
        P.CreationDate >= (CAST('2024-10-01 12:34:56' AS timestamp) - INTERVAL '1 year')
    GROUP BY 
        P.Id, P.Title, P.CreationDate, P.AcceptedAnswerId, P.OwnerUserId
),

ClosedPostHistory AS (
    SELECT 
        PH.PostId,
        COUNT(*) AS CloseCount,
        ARRAY_AGG(DISTINCT C.Name) AS CloseReasons
    FROM 
        PostHistory PH
    JOIN 
        CloseReasonTypes C ON CAST(PH.Comment AS integer) = C.Id
    WHERE 
        PH.PostHistoryTypeId IN (10, 11) 
    GROUP BY 
        PH.PostId
)

SELECT 
    US.DisplayName,
    US.Reputation,
    US.PostCount,
    US.QuestionCount,
    US.AnswerCount,
    US.BadgeCount,
    PD.Title,
    PD.CreationDate,
    PD.AcceptScore,
    PD.CommentCount,
    COALESCE(CPH.CloseCount, 0) AS CloseCount,
    COALESCE(CPH.CloseReasons, '{}') AS CloseReasons,
    (PD.UpVotes - PD.DownVotes) AS NetVotes,
    CASE 
        WHEN PD.CommentCount > 0 THEN 'Active'
        ELSE 'Inactive'
    END AS EngagementStatus
FROM 
    UserStatistics US
JOIN 
    PostDetails PD ON US.UserId = PD.OwnerUserId
LEFT JOIN 
    ClosedPostHistory CPH ON PD.PostId = CPH.PostId
WHERE 
    US.Reputation > 1000
    AND COALESCE(CPH.CloseCount, 0) < 3
ORDER BY 
    NetVotes DESC,
    PD.CreationDate DESC
LIMIT 50;
