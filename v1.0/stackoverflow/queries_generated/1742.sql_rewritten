WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        u.DisplayName AS OwnerDisplayName,
        COUNT(c.Id) AS CommentCount,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS rn
    FROM 
        Posts p
    LEFT JOIN 
        Users u ON p.OwnerUserId = u.Id
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    WHERE 
        p.PostTypeId = 1
    GROUP BY 
        p.Id, u.DisplayName, p.CreationDate
),
TopPosts AS (
    SELECT 
        PostId,
        Title,
        CreationDate,
        OwnerDisplayName,
        CommentCount,
        UpVotes,
        DownVotes
    FROM 
        RankedPosts
    WHERE 
        rn = 1
),
PostDetails AS (
    SELECT 
        t.PostId,
        t.Title,
        t.OwnerDisplayName,
        t.CommentCount,
        COALESCE(SUM(CASE WHEN ph.PostHistoryTypeId = 10 THEN 1 ELSE 0 END), 0) AS CloseCount,
        COALESCE(SUM(CASE WHEN ph.PostHistoryTypeId = 11 THEN 1 ELSE 0 END), 0) AS ReopenCount
    FROM 
        TopPosts t
    LEFT JOIN 
        PostHistory ph ON t.PostId = ph.PostId
    GROUP BY 
        t.PostId, t.Title, t.OwnerDisplayName, t.CommentCount
)
SELECT 
    pd.PostId,
    pd.Title,
    pd.OwnerDisplayName,
    pd.CommentCount,
    pd.CloseCount,
    pd.ReopenCount,
    (pd.UpVotes - pd.DownVotes) AS NetVotes
FROM 
    PostDetails pd
INNER JOIN 
    Votes v ON pd.PostId = v.PostId
WHERE 
    pd.CommentCount > 5 
    AND pd.CloseCount > 0 
    AND v.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '6 months'
ORDER BY 
    NetVotes DESC
LIMIT 10;