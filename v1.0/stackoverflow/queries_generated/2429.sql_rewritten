WITH UserReputation AS (
    SELECT u.Id AS UserId, 
           u.DisplayName, 
           u.Reputation, 
           RANK() OVER (ORDER BY u.Reputation DESC) AS ReputationRank
    FROM Users u
), 
PostDetails AS (
    SELECT p.Id AS PostId, 
           p.Title, 
           p.CreationDate, 
           p.Score, 
           COALESCE(SUM(v.VoteTypeId = 2), 0) AS UpVotes, 
           COALESCE(SUM(v.VoteTypeId = 3), 0) AS DownVotes,
           COALESCE(c.CommentCount, 0) AS CommentCount,
           PHT.Name AS PostHistoryType, 
           pt.Name AS PostTypeName
    FROM Posts p
    LEFT JOIN Votes v ON p.Id = v.PostId
    LEFT JOIN (SELECT PostId, COUNT(*) AS CommentCount
               FROM Comments
               GROUP BY PostId) c ON p.Id = c.PostId
    LEFT JOIN PostHistory ph ON p.Id = ph.PostId
    LEFT JOIN PostHistoryTypes PHT ON ph.PostHistoryTypeId = PHT.Id
    LEFT JOIN PostTypes pt ON p.PostTypeId = pt.Id
    WHERE p.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '30 days'
    GROUP BY p.Id, p.Title, p.CreationDate, p.Score, PHT.Name, pt.Name
), 
UserPostStats AS (
    SELECT u.UserId, 
           COUNT(DISTINCT pd.PostId) AS PostCount, 
           SUM(pd.Score) AS TotalScore
    FROM UserReputation u
    JOIN Posts p ON u.UserId = p.OwnerUserId
    JOIN PostDetails pd ON p.Id = pd.PostId
    GROUP BY u.UserId
)

SELECT upr.DisplayName, 
       upr.Reputation, 
       upr.ReputationRank, 
       ups.PostCount, 
       ups.TotalScore,
       ARRAY_AGG(DISTINCT pd.Title) AS RecentPostTitles
FROM UserReputation upr
JOIN UserPostStats ups ON upr.UserId = ups.UserId
JOIN PostDetails pd ON pd.PostId IN (
    SELECT p.Id
    FROM Posts p
    WHERE p.OwnerUserId = upr.UserId
    ORDER BY p.CreationDate DESC
    LIMIT 5
)
GROUP BY upr.UserId, upr.DisplayName, upr.Reputation, upr.ReputationRank, ups.PostCount, ups.TotalScore
HAVING ups.PostCount > 0
ORDER BY upr.Reputation DESC;