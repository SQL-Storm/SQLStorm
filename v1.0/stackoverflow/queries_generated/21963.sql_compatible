
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Score,
        ROW_NUMBER() OVER (PARTITION BY p.PostTypeId ORDER BY p.CreationDate DESC) AS rn,
        COALESCE(c.Score, 0) AS CommentScore,
        COALESCE(v.UpVotes, 0) - COALESCE(v.DownVotes, 0) AS VoteBalance
    FROM Posts p
    LEFT JOIN (
        SELECT 
            PostId, 
            SUM(Score) AS Score 
        FROM Comments 
        GROUP BY PostId
    ) c ON p.Id = c.PostId
    LEFT JOIN (
        SELECT 
            PostId, 
            SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes,
            SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes
        FROM Votes 
        GROUP BY PostId
    ) v ON p.Id = v.PostId
    WHERE p.CreationDate >= DATEADD(year, -1, '2024-10-01') 
),
PostHistoryInfo AS (
    SELECT 
        ph.PostId,
        ph.UserId,
        ph.PostHistoryTypeId,
        ph.CreationDate,
        ph.Comment,
        STRING_AGG(DISTINCT CONCAT(uh.DisplayName, ': ', ph.Comment), '; ') AS UserComments,
        COUNT(*) OVER (PARTITION BY ph.PostId) AS HistoryCount
    FROM PostHistory ph
    JOIN Users uh ON ph.UserId = uh.Id
    WHERE ph.PostHistoryTypeId IN (10, 11, 12) 
),
FinalResults AS (
    SELECT 
        rp.PostId,
        rp.Title,
        rp.Score,
        rp.CreationDate,
        rp.CommentScore,
        rp.VoteBalance,
        COALESCE(ph.UserComments, 'No actions recorded') AS UserComments,
        ph.HistoryCount
    FROM RankedPosts rp
    LEFT JOIN PostHistoryInfo ph ON rp.PostId = ph.PostId
    WHERE rp.rn <= 5 
)
SELECT 
    fr.PostId,
    fr.Title,
    fr.CreationDate,
    fr.Score,
    fr.CommentScore,
    fr.VoteBalance,
    fr.UserComments,
    fr.HistoryCount,
    CASE 
        WHEN fr.Score > 100 THEN 'High Score'
        WHEN fr.Score BETWEEN 50 AND 100 THEN 'Medium Score'
        ELSE 'Low Score'
    END AS ScoreCategory,
    EXTRACT(YEAR FROM AGE(fr.CreationDate)) AS AgeInYears
FROM FinalResults fr
WHERE EXTRACT(YEAR FROM AGE(fr.CreationDate)) < 5
ORDER BY fr.CreationDate DESC
LIMIT 50;
