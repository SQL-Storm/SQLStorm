
WITH RankedPosts AS (
    SELECT 
        p.Id,
        p.Title,
        p.ViewCount,
        p.Score,
        p.CreationDate,
        p.AcceptedAnswerId,
        COUNT(c.Id) AS CommentCount,
        RANK() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC, p.ViewCount DESC) AS RankWithinUser
    FROM Posts p
    LEFT JOIN Comments c ON p.Id = c.PostId
    WHERE p.CreationDate > TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 year'
    GROUP BY p.Id, p.Title, p.ViewCount, p.Score, p.CreationDate, p.AcceptedAnswerId
),
TopUsers AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COUNT(DISTINCT p.Id) AS PostCount,
        SUM(CASE WHEN p.PostTypeId = 1 THEN 1 ELSE 0 END) AS QuestionCount,
        AVG(u.Reputation) AS AvgReputation
    FROM Users u
    JOIN Posts p ON u.Id = p.OwnerUserId
    GROUP BY u.Id, u.DisplayName
    HAVING COUNT(DISTINCT p.Id) > 5
),
ClosedPosts AS (
    SELECT 
        ph.PostId,
        ph.CreationDate,
        ph.Comment AS CloseReason
    FROM PostHistory ph
    WHERE ph.PostHistoryTypeId = 10
),
ClosedPostsWithReasons AS (
    SELECT 
        p.*,
        cp.CloseReason
    FROM Posts p
    LEFT JOIN ClosedPosts cp ON p.Id = cp.PostId
    WHERE p.CreationDate < TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '6 months'
),
UserStats AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        SUM(v.BountyAmount) AS TotalBounties,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS Upvotes,
        COUNT(DISTINCT c.Id) AS TotalComments
    FROM Users u
    LEFT JOIN Votes v ON u.Id = v.UserId
    LEFT JOIN Comments c ON u.Id = c.UserId
    GROUP BY u.Id, u.DisplayName
)
SELECT 
    u.DisplayName,
    tu.PostCount,
    tu.QuestionCount,
    ru.RankWithinUser,
    cwp.Title,
    cwp.ViewCount,
    cwp.CloseReason,
    us.TotalBounties,
    us.Upvotes,
    us.TotalComments
FROM TopUsers tu
JOIN RankedPosts ru ON tu.UserId = ru.OwnerUserId
LEFT JOIN ClosedPostsWithReasons cwp ON tu.UserId = cwp.OwnerUserId
LEFT JOIN UserStats us ON tu.UserId = us.UserId
WHERE ru.RankWithinUser <= 5
ORDER BY tu.PostCount DESC, ru.Score DESC;
