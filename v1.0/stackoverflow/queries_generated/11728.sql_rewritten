WITH PostStatistics AS (
    SELECT 
        P.Id AS PostId,
        P.Title,
        P.CreationDate,
        P.ViewCount,
        P.Score,
        P.AnswerCount,
        P.CommentCount,
        U.DisplayName AS OwnerDisplayName,
        P.LastActivityDate,
        COUNT(C.CommentId) AS TotalComments,
        SUM(V.VoteTypeId = 2) AS TotalUpVotes,  
        SUM(V.VoteTypeId = 3) AS TotalDownVotes 
    FROM 
        Posts P
    LEFT JOIN 
        Users U ON P.OwnerUserId = U.Id
    LEFT JOIN 
        Comments C ON P.Id = C.PostId
    LEFT JOIN 
        Votes V ON P.Id = V.PostId
    WHERE 
        P.CreationDate >= DATEADD(YEAR, -1, GETDATE()) 
    GROUP BY 
        P.Id, P.Title, P.CreationDate, P.ViewCount, P.Score, P.AnswerCount, 
        P.CommentCount, U.DisplayName, P.LastActivityDate
),
UserStatistics AS (
    SELECT 
        U.Id AS UserId,
        U.DisplayName,
        COUNT(P.Id) AS TotalPosts,
        SUM(CASE WHEN P.PostTypeId = 1 THEN 1 ELSE 0 END) AS TotalQuestions,
        SUM(CASE WHEN P.PostTypeId = 2 THEN 1 ELSE 0 END) AS TotalAnswers,
        SUM(B.Id IS NOT NULL) AS TotalBadges
    FROM 
        Users U
    LEFT JOIN 
        Posts P ON U.Id = P.OwnerUserId
    LEFT JOIN 
        Badges B ON U.Id = B.UserId
    GROUP BY 
        U.Id, U.DisplayName
)
SELECT 
    PS.PostId,
    PS.Title,
    PS.CreationDate,
    PS.ViewCount,
    PS.Score,
    PS.AnswerCount,
    PS.CommentCount,
    PS.OwnerDisplayName,
    PS.LastActivityDate,
    PS.TotalComments,
    PS.TotalUpVotes,
    PS.TotalDownVotes,
    US.UserId,
    US.DisplayName AS UserName,
    US.TotalPosts,
    US.TotalQuestions,
    US.TotalAnswers,
    US.TotalBadges
FROM 
    PostStatistics PS
LEFT JOIN 
    UserStatistics US ON PS.OwnerDisplayName = US.DisplayName
ORDER BY 
    PS.LastActivityDate DESC;