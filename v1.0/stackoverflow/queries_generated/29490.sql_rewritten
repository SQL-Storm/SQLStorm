WITH FilteredPosts AS (
    SELECT p.Id AS PostId,
           p.Title,
           p.Tags,
           p.ViewCount,
           p.CreationDate,
           pt.Name AS PostType,
           COALESCE(u.DisplayName, 'Community') AS OwnerDisplayName,
           COUNT(DISTINCT a.Id) AS AnswerCount,
           STRING_AGG(DISTINCT t.TagName, ', ') AS TagList
    FROM Posts p
    LEFT JOIN PostTypes pt ON p.PostTypeId = pt.Id
    LEFT JOIN Users u ON p.OwnerUserId = u.Id
    LEFT JOIN Posts a ON p.Id = a.ParentId
    LEFT JOIN Tags t ON t.Id = ANY(string_to_array(substring(p.Tags, 2, length(p.Tags)-2), '><')::int[])
    WHERE p.CreationDate >= cast('2024-10-01' as date) - INTERVAL '1 year'
    GROUP BY p.Id, p.Title, p.Tags, p.ViewCount, p.CreationDate, pt.Name, u.DisplayName
),
RankedPosts AS (
    SELECT PostId,
           Title,
           Tags,
           ViewCount,
           CreationDate,
           PostType,
           OwnerDisplayName,
           AnswerCount,
           TagList,
           RANK() OVER (ORDER BY ViewCount DESC, CreationDate DESC) AS Rank
    FROM FilteredPosts
)
SELECT Rank,
       PostId,
       Title,
       PostType,
       OwnerDisplayName,
       ViewCount,
       CreationDate,
       AnswerCount,
       TagList
FROM RankedPosts
WHERE Rank <= 10
ORDER BY Rank;