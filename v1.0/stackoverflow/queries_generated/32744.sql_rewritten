WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.OwnerUserId,
        p.Score,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC) AS RankByScore,
        COUNT(c.Id) OVER (PARTITION BY p.Id) AS CommentCount,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) OVER (PARTITION BY p.Id) AS UpVoteCount,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) OVER (PARTITION BY p.Id) AS DownVoteCount
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    WHERE 
        p.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 year'
),
UserBadges AS (
    SELECT 
        UserId,
        COUNT(CASE WHEN Class = 1 THEN 1 END) AS GoldBadgeCount,
        COUNT(CASE WHEN Class = 2 THEN 1 END) AS SilverBadgeCount,
        COUNT(CASE WHEN Class = 3 THEN 1 END) AS BronzeBadgeCount
    FROM 
        Badges
    GROUP BY 
        UserId
),
MostActiveUsers AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        u.Reputation,
        COALESCE(b.GoldBadgeCount, 0) AS GoldBadges,
        COALESCE(b.SilverBadgeCount, 0) AS SilverBadges,
        COALESCE(b.BronzeBadgeCount, 0) AS BronzeBadges,
        SUM(p.Score) AS TotalScore,
        COUNT(p.Id) AS TotalPosts
    FROM 
        Users u
    LEFT JOIN 
        UserBadges b ON u.Id = b.UserId
    LEFT JOIN 
        Posts p ON u.Id = p.OwnerUserId
    WHERE 
        u.Reputation > 100
    GROUP BY 
        u.Id, u.DisplayName, u.Reputation, GoldBadges, SilverBadges, BronzeBadges
    ORDER BY 
        TotalScore DESC
    LIMIT 10
),
RecentTopPosts AS (
    SELECT 
        PostId,
        Title,
        Score,
        RankByScore
    FROM 
        RankedPosts
    WHERE 
        RankByScore <= 10
)
SELECT 
    u.UserId,
    u.DisplayName,
    u.Reputation,
    COALESCE(u.GoldBadges, 0) AS GoldBadges,
    COALESCE(u.SilverBadges, 0) AS SilverBadges,
    COALESCE(u.BronzeBadges, 0) AS BronzeBadges,
    r.Title AS TopPostTitle,
    r.Score AS TopPostScore,
    r.CommentCount AS TotalComments,
    r.UpVoteCount AS TotalUpVotes,
    r.DownVoteCount AS TotalDownVotes
FROM 
    MostActiveUsers u
LEFT JOIN 
    RecentTopPosts r ON u.UserId = r.PostId
ORDER BY 
    u.Reputation DESC, TopPostScore DESC;