SELECT 
    p.Id AS PostId,
    p.Title,
    p.CreationDate,
    p.ViewCount,
    p.Score,
    COUNT(c.Id) AS CommentCount,
    COUNT(v.Id) AS VoteCount,
    STRING_AGG(DISTINCT t.TagName, ', ') AS Tags,
    u.DisplayName AS OwnerDisplayName,
    p.LastActivityDate,
    bh.UserDisplayName AS LastEditorDisplayName,
    p.LastEditDate
FROM 
    Posts p
LEFT JOIN 
    Comments c ON p.Id = c.PostId
LEFT JOIN 
    Votes v ON p.Id = v.PostId
LEFT JOIN 
    Tags t ON t.Id = ANY(string_to_array(substring(p.Tags, 2, length(p.Tags) - 2), '><')::int[])
LEFT JOIN 
    Users u ON p.OwnerUserId = u.Id
LEFT JOIN 
    (SELECT 
         PostId, 
         UserDisplayName, 
         LastEditDate 
     FROM 
         PostHistory 
     WHERE 
         PostHistoryTypeId = 4 OR PostHistoryTypeId = 5 
    ) bh ON p.Id = bh.PostId
WHERE 
    p.CreationDate >= '2020-01-01' 
GROUP BY 
    p.Id, u.DisplayName, bh.UserDisplayName
ORDER BY 
    p.CreationDate DESC;