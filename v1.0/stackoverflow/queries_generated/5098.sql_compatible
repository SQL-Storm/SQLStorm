
WITH RankedPosts AS (
    SELECT 
        p.Id, 
        p.Title, 
        p.CreationDate, 
        p.Score, 
        p.ViewCount, 
        COUNT(DISTINCT c.Id) AS CommentCount,
        COUNT(DISTINCT a.Id) AS AnswerCount,
        ROW_NUMBER() OVER (ORDER BY p.Score DESC, p.CreationDate DESC) AS Rank
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        Posts a ON a.ParentId = p.Id AND a.PostTypeId = 2
    WHERE 
        p.PostTypeId = 1 
    GROUP BY 
        p.Id, p.Title, p.CreationDate, p.Score, p.ViewCount
),
UserReputation AS (
    SELECT 
        u.Id AS UserId, 
        u.Reputation, 
        u.DisplayName
    FROM 
        Users u
    WHERE 
        u.Reputation > 1000 
),
PostBadges AS (
    SELECT 
        p.Id AS PostId,
        STRING_AGG(b.Name, ', ') AS Badges
    FROM 
        Posts p
    LEFT JOIN 
        Badges b ON b.UserId = p.OwnerUserId
    GROUP BY 
        p.Id
)
SELECT 
    rp.Rank, 
    rp.Title, 
    rp.CreationDate, 
    rp.Score, 
    rp.ViewCount, 
    rp.CommentCount, 
    rp.AnswerCount, 
    ur.DisplayName AS OwnerDisplayName, 
    ur.Reputation AS OwnerReputation, 
    pb.Badges
FROM 
    RankedPosts rp
JOIN 
    Users u ON u.Id = rp.OwnerUserId
JOIN 
    UserReputation ur ON ur.UserId = u.Id
LEFT JOIN 
    PostBadges pb ON pb.PostId = rp.Id
WHERE 
    rp.Rank <= 10 
ORDER BY 
    rp.Rank;
