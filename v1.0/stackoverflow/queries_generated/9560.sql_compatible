
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        u.DisplayName AS OwnerDisplayName,
        p.Score,
        COUNT(c.Id) AS CommentCount,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes,
        ROW_NUMBER() OVER (PARTITION BY p.PostTypeId ORDER BY p.CreationDate DESC) AS Rank
    FROM 
        Posts p
    LEFT JOIN 
        Users u ON p.OwnerUserId = u.Id
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    WHERE 
        p.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 year'
    GROUP BY 
        p.Id, p.Title, p.CreationDate, u.DisplayName, p.Score, p.PostTypeId
),
TopRankedPosts AS (
    SELECT 
        PostId,
        Title,
        CreationDate,
        OwnerDisplayName,
        Score,
        CommentCount,
        UpVotes,
        DownVotes 
    FROM 
        RankedPosts
    WHERE 
        Rank <= 10
)
SELECT 
    trp.*,
    COALESCE(b.Name, 'No Badge') AS UserBadge,
    ph.Comment AS LastEditComment,
    ph.CreationDate AS LastEditDate
FROM 
    TopRankedPosts trp
LEFT JOIN 
    Badges b ON trp.OwnerDisplayName = b.UserId
LEFT JOIN 
    PostHistory ph ON trp.PostId = ph.PostId 
WHERE 
    ph.CreationDate = (
        SELECT 
            MAX(p2.CreationDate) 
        FROM 
            PostHistory p2
        WHERE 
            p2.PostId = trp.PostId
    )
ORDER BY 
    trp.Score DESC, trp.CommentCount DESC;
