WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.ViewCount,
        p.Score,
        p.CreationDate,
        COUNT(DISTINCT c.Id) AS CommentCount,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC, p.CreationDate ASC) AS PostRank
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    WHERE 
        p.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 year'
    GROUP BY 
        p.Id
),
TopUserPosts AS (
    SELECT 
        rp.OwnerUserId,
        rp.PostId,
        rp.Title,
        rp.ViewCount,
        rp.Score,
        rp.CreationDate,
        rp.CommentCount
    FROM 
        RankedPosts rp
    WHERE 
        rp.PostRank <= 5
),
UserReputation AS (
    SELECT 
        u.Id AS UserId,
        u.Reputation,
        COUNT(tp.PostId) AS TopPostsCount,
        SUM(tp.ViewCount) AS TotalViews,
        AVG(tp.Score) AS AverageScore
    FROM 
        Users u
    LEFT JOIN 
        TopUserPosts tp ON u.Id = tp.OwnerUserId
    GROUP BY 
        u.Id, u.Reputation
)
SELECT 
    ur.UserId, 
    ur.Reputation,
    ur.TopPostsCount,
    ur.TotalViews,
    ur.AverageScore
FROM 
    UserReputation ur
WHERE 
    ur.TopPostsCount > 0
ORDER BY 
    ur.Reputation DESC, 
    ur.TotalViews DESC;