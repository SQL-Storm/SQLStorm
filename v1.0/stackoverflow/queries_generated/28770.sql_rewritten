WITH RankedPosts AS (
    SELECT
        p.Id AS PostId,
        p.Title,
        p.Body,
        p.CreationDate,
        p.ViewCount,
        p.AnswerCount,
        u.DisplayName AS OwnerDisplayName,
        ROW_NUMBER() OVER (PARTITION BY p.Tags ORDER BY p.ViewCount DESC) AS TagRank
    FROM
        Posts p
    JOIN 
        Users u ON p.OwnerUserId = u.Id
    WHERE
        p.PostTypeId = 1 
        AND p.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '6 months' 
),
TagStatistics AS (
    SELECT
        tags.TagName,
        COUNT(DISTINCT rp.PostId) AS PostCount,
        SUM(rp.ViewCount) AS TotalViews,
        AVG(rp.ViewCount) AS AvgViewsPerPost
    FROM
        RankedPosts rp
    CROSS JOIN LATERAL (
        SELECT unnest(string_to_array(trim(both '<>' FROM rp.Tags), '>')) AS TagName
    ) tags
    GROUP BY
        tags.TagName
),
UserActivity AS (
    SELECT
        u.Id AS UserId,
        u.DisplayName,
        COUNT(DISTINCT p.Id) AS QuestionsAsked,
        COUNT(DISTINCT c.Id) AS CommentsMade
    FROM
        Users u
    LEFT JOIN 
        Posts p ON u.Id = p.OwnerUserId AND p.PostTypeId = 1
    LEFT JOIN 
        Comments c ON u.Id = c.UserId
    GROUP BY
        u.Id, u.DisplayName
)
SELECT
    ts.TagName,
    ts.PostCount,
    ts.TotalViews,
    ts.AvgViewsPerPost,
    ua.UserId,
    ua.DisplayName,
    ua.QuestionsAsked,
    ua.CommentsMade
FROM
    TagStatistics ts
JOIN 
    UserActivity ua ON ua.QuestionsAsked > 0
ORDER BY 
    ts.TotalViews DESC,
    ua.CommentsMade DESC;