
WITH UserReputation AS (
    SELECT Id AS UserId, 
           Reputation,
           CASE 
               WHEN Reputation > 10000 THEN 'High'
               WHEN Reputation BETWEEN 5000 AND 10000 THEN 'Medium'
               ELSE 'Low'
           END AS ReputationLevel
    FROM Users
), TopPosts AS (
    SELECT p.Id AS PostId,
           p.Title,
           p.CreationDate,
           p.Score,
           p.ViewCount,
           ROW_NUMBER() OVER (PARTITION BY p.PostTypeId ORDER BY p.Score DESC) AS PostRank
    FROM Posts p
    WHERE p.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 year'
), PostsWithComments AS (
    SELECT p.Title,
           p.Id AS PostId,
           COUNT(c.Id) AS CommentCount,
           p.Score,
           p.ViewCount,
           u.ReputationLevel
    FROM TopPosts tp
    LEFT JOIN Posts p ON tp.PostId = p.Id
    LEFT JOIN Comments c ON p.Id = c.PostId
    LEFT JOIN UserReputation u ON p.OwnerUserId = u.UserId
    WHERE tp.PostRank <= 5
    GROUP BY p.Title, p.Id, p.Score, p.ViewCount, u.ReputationLevel
), PostsHistoryStats AS (
    SELECT ph.PostId,
           ph.PostHistoryTypeId,
           COUNT(*) AS ChangeCount
    FROM PostHistory ph
    WHERE ph.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '6 months'
    GROUP BY ph.PostId, ph.PostHistoryTypeId
), EnhancedPostStats AS (
    SELECT p.Title,
           pc.CommentCount,
           p.Score,
           p.ViewCount,
           ph.ChangeCount,
           p.CreationDate,
           CASE 
               WHEN pc.CommentCount >= 5 THEN 'Active'
               WHEN ph.ChangeCount >= 3 THEN 'Updated Frequently'
               ELSE 'Stagnant'
           END AS Status,
           p.OwnerUserId
    FROM PostsWithComments pc
    LEFT JOIN PostsHistoryStats ph ON pc.PostId = ph.PostId
)

SELECT eps.Title,
       eps.CommentCount,
       eps.Score,
       eps.ViewCount,
       COALESCE(eps.ChangeCount, 0) AS ChangeCount,
       eps.Status,
       u.DisplayName AS OwnerDisplayName,
       u.Location,
       CASE 
           WHEN eps.Status = 'Active' AND eps.Score > 10 THEN 'Trending'
           WHEN eps.Status = 'Stagnant' AND eps.CommentCount < 3 THEN 'Needs Attention'
           ELSE 'Normal'
       END AS PostTrend
FROM EnhancedPostStats eps
JOIN Users u ON eps.OwnerUserId = u.Id
WHERE eps.ViewCount > 100
ORDER BY eps.Score DESC, eps.ViewCount DESC
LIMIT 50;
