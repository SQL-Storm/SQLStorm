WITH RankedPosts AS (
    SELECT 
        p.Id AS PostID,
        p.Title,
        p.Body,
        p.CreationDate,
        p.ViewCount,
        p.AnswerCount,
        p.CommentCount,
        p.Score,
        u.DisplayName AS OwnerDisplayName,
        ARRAY_AGG(DISTINCT t.TagName) AS Tags,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC) AS Rank
    FROM 
        Posts p
    JOIN 
        Users u ON p.OwnerUserId = u.Id
    LEFT JOIN 
        LATERAL unnest(string_to_array(p.Tags, '><')) AS t(TagName) ON true 
    WHERE 
        p.PostTypeId = 1 
    GROUP BY 
        p.Id, u.DisplayName
), 
UserReputation AS (
    SELECT 
        u.Id AS UserID,
        u.DisplayName,
        u.Reputation,
        COUNT(DISTINCT p.Id) AS TotalQuestions,
        COUNT(DISTINCT b.Id) AS TotalBadges
    FROM 
        Users u
    LEFT JOIN 
        Posts p ON p.OwnerUserId = u.Id AND p.PostTypeId = 1
    LEFT JOIN 
        Badges b ON b.UserId = u.Id
    GROUP BY 
        u.Id
), 
TopUserQuestions AS (
    SELECT 
        ur.DisplayName,
        ur.Reputation,
        rp.Title,
        rp.CREATEDATE,
        rp.ViewCount,
        rp.AnswerCount,
        rp.CommentCount,
        rp.Score,
        rp.Tags
    FROM 
        UserReputation ur
    JOIN 
        RankedPosts rp ON ur.UserID = rp.PostID 
    WHERE 
        ur.TotalQuestions > 0
    ORDER BY 
        ur.Reputation DESC, rp.Score DESC
    LIMIT 10
)
SELECT 
    DisplayName,
    Reputation,
    Title,
    CreationDate,
    ViewCount,
    AnswerCount,
    CommentCount,
    Score,
    Tags
FROM 
    TopUserQuestions
ORDER BY 
    Reputation DESC, Score DESC;