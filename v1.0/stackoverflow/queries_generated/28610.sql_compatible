
WITH UserReputation AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        u.Reputation,
        COUNT(b.Id) AS BadgeCount,
        COALESCE(SUM(v.BountyAmount), 0) AS TotalBounty
    FROM Users u
    LEFT JOIN Badges b ON u.Id = b.UserId
    LEFT JOIN Votes v ON u.Id = v.UserId
    GROUP BY u.Id, u.DisplayName, u.Reputation
),
PopularTags AS (
    SELECT 
        t.TagName,
        COUNT(p.Id) AS PostCount,
        COALESCE(SUM(p.ViewCount), 0) AS TotalViews
    FROM Tags t
    JOIN Posts p ON p.Tags LIKE '%' || t.TagName || '%'
    GROUP BY t.TagName
    HAVING COUNT(p.Id) > 10
    ORDER BY TotalViews DESC
    LIMIT 10
),
PostStat AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.ViewCount,
        p.CreationDate,
        p.Tags,
        COUNT(c.Id) AS CommentCount,
        COALESCE(SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END), 0) AS Upvotes,
        COALESCE(SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END), 0) AS Downvotes,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.ViewCount DESC) AS PostRank
    FROM Posts p
    LEFT JOIN Comments c ON p.Id = c.PostId
    LEFT JOIN Votes v ON p.Id = v.PostId
    WHERE p.CreationDate >= DATEADD(YEAR, -1, '2024-10-01 12:34:56')
    GROUP BY p.Id, p.Title, p.ViewCount, p.CreationDate, p.Tags, p.OwnerUserId
),
TopUsers AS (
    SELECT 
        ur.UserId,
        ur.DisplayName,
        ur.Reputation,
        COUNT(ps.PostId) AS PostCount,
        COALESCE(SUM(ps.Upvotes), 0) AS TotalUpvotes,
        COALESCE(SUM(ps.Downvotes), 0) AS TotalDownvotes,
        COALESCE(AVG(ps.ViewCount), 0) AS AvgViewCount
    FROM UserReputation ur
    JOIN PostStat ps ON ur.UserId = ps.OwnerUserId
    GROUP BY ur.UserId, ur.DisplayName, ur.Reputation
    ORDER BY ur.Reputation DESC
    LIMIT 5
)
SELECT 
    u.DisplayName AS TopUser,
    u.Reputation,
    u.PostCount,
    u.TotalUpvotes,
    u.TotalDownvotes,
    u.AvgViewCount,
    pt.TagName,
    pt.PostCount AS PopularTagPostCount,
    pt.TotalViews AS PopularTagTotalViews
FROM TopUsers u
JOIN PopularTags pt ON POSITION(pt.TagName IN u.Tags) > 0
ORDER BY u.Reputation DESC, pt.TotalViews DESC;
