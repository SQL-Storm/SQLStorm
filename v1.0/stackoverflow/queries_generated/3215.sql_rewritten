WITH RankedPosts AS (
    SELECT 
        p.Id,
        p.Title,
        p.CreationDate,
        p.Score,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS rn,
        COUNT(c.Id) OVER (PARTITION BY p.Id) AS comment_count,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) OVER (PARTITION BY p.Id) AS upvotes
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    WHERE 
        p.PostTypeId = 1 
        AND p.CreationDate > (cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 year')
),
FilteredPosts AS (
    SELECT 
        rp.Id,
        rp.Title,
        rp.CreationDate,
        rp.Score,
        rp.comment_count,
        rp.upvotes,
        COALESCE(u.DisplayName, 'Anonymous') AS AuthorName
    FROM 
        RankedPosts rp
    LEFT JOIN 
        Users u ON rp.OwnerUserId = u.Id
    WHERE 
        rp.rn = 1 
        AND rp.Score > 10 
        AND rp.comment_count > 5
)
SELECT 
    f.Id,
    f.Title,
    f.CreationDate,
    f.Score,
    f.comment_count,
    f.upvotes,
    f.AuthorName,
    CASE 
        WHEN f.upvotes > 50 THEN 'Highly Voted'
        WHEN f.upvotes BETWEEN 20 AND 50 THEN 'Moderately Voted'
        ELSE 'Low Voted'
    END AS VoteCategory
FROM 
    FilteredPosts f
ORDER BY 
    f.Score DESC, f.CreationDate DESC
LIMIT 10;