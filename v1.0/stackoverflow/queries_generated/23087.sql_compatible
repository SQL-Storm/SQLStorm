
WITH UserStats AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        u.Reputation,
        u.Views,
        u.UpVotes,
        u.DownVotes,
        RANK() OVER (ORDER BY u.Reputation DESC) AS ReputationRank,
        COUNT(DISTINCT b.Id) AS BadgeCount,
        COUNT(DISTINCT p.Id) AS PostCount,
        SUM(COALESCE(vn.VoteCount, 0)) AS TotalVotes
    FROM Users u
    LEFT JOIN Badges b ON b.UserId = u.Id
    LEFT JOIN Posts p ON p.OwnerUserId = u.Id
    LEFT JOIN (
        SELECT 
            PostId,
            COUNT(*) AS VoteCount
        FROM Votes
        GROUP BY PostId
    ) vn ON vn.PostId = p.Id
    GROUP BY u.Id, u.DisplayName, u.Reputation, u.Views, u.UpVotes, u.DownVotes
),
TopUsers AS (
    SELECT 
        UserId,
        DisplayName,
        Reputation,
        BadgeCount,
        ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS TopRank
    FROM UserStats
    WHERE Reputation BETWEEN 100 AND 10000
),
PostStats AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.ViewCount,
        COALESCE(c.CommentCount, 0) AS CommentCount,
        COUNT(v.Id) AS VoteCount,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS Upvotes,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS Downvotes,
        COALESCE(CASE WHEN p.AcceptedAnswerId IS NOT NULL THEN 1 ELSE 0 END, 0) AS AnswerAccepted
    FROM Posts p
    LEFT JOIN (SELECT PostId, COUNT(*) AS CommentCount FROM Comments GROUP BY PostId) c ON c.PostId = p.Id
    LEFT JOIN Votes v ON v.PostId = p.Id
    WHERE p.CreationDate >= CAST('2024-10-01 12:34:56' AS TIMESTAMP) - INTERVAL '1 year'
    GROUP BY p.Id, p.Title, p.CreationDate, p.ViewCount, c.CommentCount
),
TotalPostStats AS (
    SELECT 
        SUM(ViewCount) AS TotalViews,
        SUM(CommentCount) AS TotalComments,
        SUM(VoteCount) AS TotalVotes,
        AVG(ViewCount * 1.0) AS AverageViews
    FROM PostStats
),
FinalAnalytics AS (
    SELECT 
        u.UserId,
        u.DisplayName,
        u.Reputation,
        u.BadgeCount,
        p.PostId,
        p.Title,
        p.ViewCount,
        p.CommentCount,
        p.VoteCount,
        tp.TotalViews,
        tp.TotalComments,
        tp.TotalVotes,
        tp.AverageViews,
        CASE 
            WHEN p.AnswerAccepted = 1 THEN 'Yes' 
            ELSE 'No' 
        END AS IsAccepted
    FROM TopUsers u
    JOIN PostStats p ON u.UserId = p.OwnerUserId
    CROSS JOIN TotalPostStats tp
)

SELECT 
    f.UserId,
    f.DisplayName,
    f.Reputation,
    f.BadgeCount,
    f.Title,
    f.ViewCount,
    f.CommentCount,
    f.VoteCount,
    f.TotalViews,
    f.TotalComments,
    f.TotalVotes,
    f.AverageViews,
    f.IsAccepted
FROM FinalAnalytics f
WHERE f.ViewCount > (SELECT AVG(ViewCount) FROM PostStats) 
ORDER BY f.Reputation DESC, f.ViewCount DESC
LIMIT 100;
