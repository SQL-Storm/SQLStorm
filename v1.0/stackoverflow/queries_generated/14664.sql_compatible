
WITH BenchmarkData AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Score,
        p.ViewCount,
        COUNT(c.Id) AS CommentCount,
        COUNT(v.Id) AS VoteCount,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes,
        MAX(b.Date) AS LastBadgeDate,
        COUNT(DISTINCT ph.UserId) AS EditHistoryCount
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    LEFT JOIN 
        Badges b ON p.OwnerUserId = b.UserId
    LEFT JOIN 
        PostHistory ph ON p.Id = ph.PostId
    GROUP BY 
        p.Id, p.Title, p.CreationDate, p.Score, p.ViewCount
)
SELECT 
    AVG(ViewCount) AS Avg_ViewCount,
    AVG(Score) AS Avg_Score,
    AVG(CommentCount) AS Avg_CommentCount,
    AVG(VoteCount) AS Avg_VoteCount,
    AVG(UpVotes) AS Avg_UpVotes,
    AVG(DownVotes) AS Avg_DownVotes,
    AVG(LastBadgeDate) AS Avg_LastBadgeDate,
    AVG(EditHistoryCount) AS Avg_EditHistoryCount
FROM 
    BenchmarkData;
