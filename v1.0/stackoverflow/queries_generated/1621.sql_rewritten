WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Score,
        p.CreationDate,
        p.OwnerUserId,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC) AS RankScore
    FROM 
        Posts p
    WHERE 
        p.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - interval '1 year'
), UserBadges AS (
    SELECT 
        b.UserId, 
        COUNT(CASE WHEN b.Class = 1 THEN 1 END) AS GoldBadges,
        COUNT(CASE WHEN b.Class = 2 THEN 1 END) AS SilverBadges,
        COUNT(CASE WHEN b.Class = 3 THEN 1 END) AS BronzeBadges
    FROM 
        Badges b
    GROUP BY 
        b.UserId
), UserActivity AS (
    SELECT 
        u.Id AS UserId,
        COALESCE(up.Reputation, 0) AS Reputation,
        COALESCE(ub.GoldBadges, 0) AS GoldBadges,
        COALESCE(ub.SilverBadges, 0) AS SilverBadges,
        COALESCE(ub.BronzeBadges, 0) AS BronzeBadges
    FROM 
        Users u
    LEFT JOIN UserBadges ub ON u.Id = ub.UserId
    LEFT JOIN (SELECT UserId, SUM(Score) AS Reputation FROM Votes GROUP BY UserId) up ON u.Id = up.UserId
), ClosedPosts AS (
    SELECT 
        ph.PostId,
        MAX(ph.CreationDate) AS LastClosedDate
    FROM 
        PostHistory ph
    WHERE 
        ph.PostHistoryTypeId = 10
    GROUP BY 
        ph.PostId
)
SELECT 
    p.Title,
    p.ViewCount,
    ra.RankScore,
    ua.Reputation,
    ua.GoldBadges,
    ua.SilverBadges,
    ua.BronzeBadges,
    cp.LastClosedDate,
    CASE 
        WHEN cp.LastClosedDate IS NOT NULL THEN 'Closed' 
        ELSE 'Open' 
    END AS PostStatus
FROM 
    Posts p
JOIN 
    RankedPosts ra ON p.Id = ra.PostId
JOIN 
    UserActivity ua ON p.OwnerUserId = ua.UserId
LEFT JOIN 
    ClosedPosts cp ON p.Id = cp.PostId
WHERE 
    ua.Reputation >= 100 AND 
    (SELECT COUNT(*) FROM Comments c WHERE c.PostId = p.Id) > 5
ORDER BY 
    ra.RankScore, p.ViewCount DESC;