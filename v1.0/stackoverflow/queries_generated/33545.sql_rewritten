WITH RecursivePosts AS (
    SELECT 
        p.Id,
        p.Title,
        p.CreationDate,
        p.OwnerUserId,
        p.AcceptedAnswerId,
        1 AS PostLevel
    FROM 
        Posts p
    WHERE 
        p.PostTypeId = 1 

    UNION ALL

    SELECT 
        a.Id,
        a.Title,
        a.CreationDate,
        a.OwnerUserId,
        a.AcceptedAnswerId,
        rp.PostLevel + 1
    FROM 
        Posts a
    JOIN 
        RecursivePosts rp ON a.ParentId = rp.Id
    WHERE 
        a.PostTypeId = 2 
),
UserReputation AS (
    SELECT 
        u.Id AS UserId,
        COALESCE(SUM(bp.Count), 0) AS BadgeCount,
        COALESCE(SUM(v.BountyAmount), 0) AS TotalBounty
    FROM 
        Users u
    LEFT JOIN 
        Badges bp ON u.Id = bp.UserId
    LEFT JOIN 
        Votes v ON u.Id = v.UserId AND v.VoteTypeId IN (8, 9) 
    GROUP BY 
        u.Id
),
TopUsers AS (
    SELECT 
        u.Id,
        u.DisplayName,
        u.Reputation,
        ur.BadgeCount,
        ur.TotalBounty,
        ROW_NUMBER() OVER (ORDER BY u.Reputation DESC) AS Rank
    FROM 
        Users u
    JOIN 
        UserReputation ur ON u.Id = ur.UserId
    WHERE 
        u.Reputation > 0
),
ClosedPosts AS (
    SELECT 
        ph.PostId,
        ph.CreationDate,
        ph.UserId,
        u.DisplayName AS EditorName,
        ph.Comment AS CloseReason
    FROM 
        PostHistory ph
    JOIN 
        Users u ON ph.UserId = u.Id
    WHERE 
        ph.PostHistoryTypeId = 10 
)
SELECT 
    rp.Title AS QuestionTitle,
    rp.CreationDate AS QuestionCreationDate,
    u.DisplayName AS CreatorName,
    t.BadgeCount,
    t.TotalBounty,
    cp.EditorName,
    cp.CloseReason,
    COUNT(DISTINCT a.Id) AS AnswerCount,
    AVG(rp.PostLevel) AS AvgAnswerLevel,
    SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes,
    SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes
FROM 
    RecursivePosts rp
JOIN 
    Users u ON rp.OwnerUserId = u.Id
JOIN 
    TopUsers t ON u.Id = t.Id
LEFT JOIN 
    Posts a ON a.ParentId = rp.Id 
LEFT JOIN 
    ClosePosts cp ON cp.PostId = rp.Id
LEFT JOIN 
    Votes v ON v.PostId = rp.Id 
GROUP BY 
    rp.Title, rp.CreationDate, u.DisplayName, t.BadgeCount, t.TotalBounty, cp.EditorName, cp.CloseReason
HAVING 
    COUNT(DISTINCT a.Id) > 0 
ORDER BY 
    t.Rank, QuestionCreationDate DESC;