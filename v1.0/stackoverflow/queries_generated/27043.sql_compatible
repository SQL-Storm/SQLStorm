
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.Body,
        p.Tags,
        p.CreationDate,
        p.ViewCount,
        p.AnswerCount,
        p.Score,
        u.DisplayName AS OwnerDisplayName,
        ROW_NUMBER() OVER (PARTITION BY p.Tags ORDER BY p.Score DESC) AS Rank
    FROM 
        Posts p
    JOIN 
        Users u ON p.OwnerUserId = u.Id
    WHERE 
        p.PostTypeId = 1 
    AND 
        p.CreationDate >= CAST('2024-10-01 12:34:56' AS TIMESTAMP) - INTERVAL '1 year' 
),
MostViewedPosts AS (
    SELECT 
        r.PostId,
        r.Title,
        r.Body,
        r.CreationDate,
        r.ViewCount,
        r.OwnerDisplayName,
        COUNT(c.Id) AS CommentCount
    FROM 
        RankedPosts r
    LEFT JOIN 
        Comments c ON r.PostId = c.PostId
    WHERE 
        r.Rank = 1 
    GROUP BY 
        r.PostId, r.Title, r.Body, r.CreationDate, r.ViewCount, r.OwnerDisplayName
),
TopTags AS (
    SELECT 
        UNNEST(STRING_TO_ARRAY(r.Tags, '>')) AS TagName,
        COUNT(*) AS TagCount
    FROM 
        RankedPosts r
    WHERE 
        r.Rank = 1
    GROUP BY 
        UNNEST(STRING_TO_ARRAY(r.Tags, '>'))
)
SELECT 
    mp.PostId,
    mp.Title,
    mp.Body,
    mp.CreationDate,
    mp.ViewCount,
    mp.OwnerDisplayName,
    mp.CommentCount,
    tt.TagName,
    tt.TagCount
FROM 
    MostViewedPosts mp
JOIN 
    TopTags tt ON tt.TagName = ANY(STRING_TO_ARRAY(mp.Tags, '>'))
WHERE 
    mp.ViewCount > 100 
ORDER BY 
    mp.ViewCount DESC, 
    tt.TagCount DESC;
