
WITH UserBadges AS (
    SELECT 
        u.Id AS UserId,
        COUNT(*) AS BadgeCount,
        SUM(CASE WHEN b.Class = 1 THEN 1 ELSE 0 END) AS GoldBadges,
        SUM(CASE WHEN b.Class = 2 THEN 1 ELSE 0 END) AS SilverBadges,
        SUM(CASE WHEN b.Class = 3 THEN 1 ELSE 0 END) AS BronzeBadges
    FROM 
        Users u
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    GROUP BY 
        u.Id
),
PostStatistics AS (
    SELECT 
        p.Id AS PostId,
        COUNT(CASE WHEN p.PostTypeId = 2 THEN 1 END) AS AnswerCount,
        COUNT(CASE WHEN c.Id IS NOT NULL THEN 1 END) AS CommentCount,
        COALESCE(AVG(v.BountyAmount), 0) AS AverageBounty
    FROM 
        Posts p
    LEFT JOIN 
        Votes v ON p.Id = v.PostId AND v.VoteTypeId IN (8, 9)
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    GROUP BY 
        p.Id
),
HighestScorers AS (
    SELECT 
        p.Id AS PostId,
        p.OwnerUserId,
        p.Score,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC) AS rn
    FROM 
        Posts p
),
UserPostSummary AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        ub.BadgeCount,
        ps.AnswerCount,
        ps.CommentCount,
        ps.AverageBounty
    FROM 
        Users u
    LEFT JOIN 
        UserBadges ub ON u.Id = ub.UserId
    LEFT JOIN 
        PostStatistics ps ON u.Id = (SELECT OwnerUserId FROM Posts WHERE UserId = u.Id LIMIT 1)
)
SELECT 
    ups.UserId,
    ups.DisplayName,
    ups.BadgeCount,
    ups.AnswerCount,
    ups.CommentCount,
    ups.AverageBounty,
    hs.Score AS HighestPostScore
FROM 
    UserPostSummary ups
LEFT JOIN 
    HighestScorers hs ON ups.UserId = hs.OwnerUserId AND hs.rn = 1
WHERE 
    ups.AverageBounty > 0 
    OR ups.BadgeCount > 3
    OR EXISTS (SELECT 1 
                FROM Posts p 
                WHERE p.OwnerUserId = ups.UserId 
                  AND p.Score > (SELECT AVG(Score) FROM Posts WHERE OwnerUserId = ups.UserId));
