WITH RankedPosts AS (
    SELECT 
        p.Id, 
        p.Title, 
        p.CreationDate, 
        p.Score, 
        p.ViewCount, 
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC) AS rn,
        COUNT(c.Id) OVER (PARTITION BY p.Id) AS CommentCount
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    WHERE 
        p.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 year'
),
UserStats AS (
    SELECT 
        u.Id AS UserId, 
        SUM(v.BountyAmount) AS TotalBounty, 
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS TotalUpVotes,
        AVG(vote_duration) AS AvgVoteDuration
    FROM 
        Users u
    LEFT JOIN 
        Votes v ON u.Id = v.UserId
    LEFT JOIN (
        SELECT 
            v.UserId, 
            v.PostId, 
            EXTRACT(EPOCH FROM (v.CreationDate - p.CreationDate)) AS vote_duration
        FROM 
            Votes v
        JOIN 
            Posts p ON v.PostId = p.Id
    ) vote_details ON u.Id = vote_details.UserId
    GROUP BY 
        u.Id
)
SELECT 
    up.UserId,
    COALESCE(rp.Title, 'No Posts') AS Title,
    rp.CreationDate,
    rp.Score,
    rp.ViewCount,
    us.TotalBounty,
    us.TotalUpVotes,
    us.AvgVoteDuration
FROM 
    UserStats us
FULL OUTER JOIN 
    RankedPosts rp ON us.UserId = rp.OwnerUserId
WHERE 
    us.TotalBounty IS NOT NULL OR rp.Title IS NOT NULL
ORDER BY 
    us.TotalBounty DESC NULLS LAST, 
    rp.Score DESC NULLS LAST;