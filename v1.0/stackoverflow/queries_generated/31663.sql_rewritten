WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Score,
        p.ViewCount,
        p.OwnerUserId,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS rn
    FROM 
        Posts p
    WHERE 
        p.CreationDate >= DATEADD(YEAR, -1, GETDATE()) 
        AND p.PostTypeId = 1  
),
PopularTags AS (
    SELECT 
        t.TagName,
        COUNT(*) AS UsageCount
    FROM 
        Tags t
    JOIN 
        Posts p ON t.Id = ANY(string_to_array(substring(p.Tags, 2, length(p.Tags) - 2), '><')::int[])
    GROUP BY 
        t.TagName
    HAVING 
        COUNT(*) > 100
),
UserReputation AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        u.Reputation,
        u.Views,
        SUM(CASE WHEN b.Class = 1 THEN 1 ELSE 0 END) AS GoldBadges,
        SUM(CASE WHEN b.Class = 2 THEN 1 ELSE 0 END) AS SilverBadges,
        SUM(CASE WHEN b.Class = 3 THEN 1 ELSE 0 END) AS BronzeBadges
    FROM 
        Users u
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    GROUP BY 
        u.Id, u.DisplayName, u.Reputation, u.Views
)
SELECT 
    up.DisplayName,
    up.Reputation,
    up.Views,
    (SELECT STRING_AGG(pt.TagName, ', ') 
     FROM PopularTags pt 
     JOIN Posts p ON pt.TagName = ANY(string_to_array(substring(p.Tags, 2, length(p.Tags) - 2), '><')::varchar[])) 
     WHERE p.OwnerUserId = up.UserId) AS PopularTags,
    rp.Title AS RecentPostTitle,
    rp.CreationDate AS RecentPostDate,
    rp.Score AS RecentPostScore,
    rp.ViewCount AS RecentPostViewCount,
    COALESCE( (SELECT COUNT(*) 
                FROM Votes v 
                WHERE v.PostId = rp.PostId AND v.VoteTypeId = 2), 0) AS UpvoteCount,
    COALESCE( (SELECT COUNT(*) 
                FROM Votes v 
                WHERE v.PostId = rp.PostId AND v.VoteTypeId = 3), 0) AS DownvoteCount
FROM 
    UserReputation up
LEFT JOIN 
    RankedPosts rp ON up.UserId = rp.OwnerUserId AND rp.rn = 1  
WHERE 
    up.Reputation > 1000
ORDER BY 
    up.Reputation DESC,
    RecentPostDate DESC
OPTION (RECOMPILE);