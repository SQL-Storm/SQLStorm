
WITH UserBadges AS (
    SELECT UserId, 
           COUNT(*) FILTER (WHERE Class = 1) AS GoldBadges,
           COUNT(*) FILTER (WHERE Class = 2) AS SilverBadges,
           COUNT(*) FILTER (WHERE Class = 3) AS BronzeBadges
    FROM Badges
    GROUP BY UserId
),
PopularPosts AS (
    SELECT Id, 
           Title, 
           Score, 
           ViewCount, 
           (SELECT COUNT(*) FROM Comments WHERE PostId = P.Id) AS TotalComments,
           RANK() OVER (ORDER BY Score DESC, ViewCount DESC) AS Rank
    FROM Posts P
    WHERE CreationDate >= CAST('2024-10-01 12:34:56' AS TIMESTAMP) - INTERVAL '1 year'
),
MostActiveUsers AS (
    SELECT U.Id, 
           U.DisplayName, 
           SUM(COALESCE(V.BountyAmount, 0)) AS TotalBounties,
           SUM(COALESCE(C.CommentCount, 0)) AS TotalComments
    FROM Users U
    LEFT JOIN Votes V ON U.Id = V.UserId
    LEFT JOIN (
        SELECT PostId, COUNT(*) AS CommentCount
        FROM Comments
        GROUP BY PostId
    ) C ON C.PostId IN (SELECT Id FROM Posts WHERE OwnerUserId = U.Id)
    GROUP BY U.Id, U.DisplayName
),
ClosedPosts AS (
    SELECT PostId, 
           COUNT(*) AS CloseCount,
           STRING_AGG(DISTINCT CloseReasonTypes.Name, ', ') AS CloseReasons
    FROM PostHistory PH
    JOIN CloseReasonTypes ON PH.Comment = CAST(CloseReasonTypes.Id AS int)
    WHERE PH.PostHistoryTypeId IN (10, 11) 
    GROUP BY PostId
)

SELECT U.Id AS UserId,
       U.DisplayName,
       COALESCE(UB.GoldBadges, 0) AS GoldBadges,
       COALESCE(UB.SilverBadges, 0) AS SilverBadges,
       COALESCE(UB.BronzeBadges, 0) AS BronzeBadges,
       PP.Title,
       PP.Score,
       PP.ViewCount,
       PP.TotalComments,
       M.TotalBounties,
       M.TotalComments AS UserComments,
       CP.CloseCount,
       CP.CloseReasons
FROM Users U
LEFT JOIN UserBadges UB ON U.Id = UB.UserId
JOIN PopularPosts PP ON PP.Rank <= 10
LEFT JOIN MostActiveUsers M ON U.Id = M.Id
LEFT JOIN ClosedPosts CP ON CP.PostId = PP.Id
WHERE U.Reputation > 100
ORDER BY U.Reputation DESC, PP.Score DESC;
