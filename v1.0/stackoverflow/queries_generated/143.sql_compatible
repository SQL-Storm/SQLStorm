
WITH RankedPosts AS (
    SELECT 
        p.Id,
        p.Title,
        p.CreationDate,
        p.OwnerUserId,
        p.Score,
        p.ViewCount,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC) AS Rank,
        COUNT(c.Id) AS CommentCount
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    WHERE 
        p.CreationDate >= CAST('2024-10-01 12:34:56' AS TIMESTAMP) - INTERVAL '1 year'
    GROUP BY 
        p.Id, p.Title, p.CreationDate, p.OwnerUserId, p.Score, p.ViewCount
),
TopUsers AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        SUM(p.Score) AS TotalScore,
        AVG(p.Score) AS AverageScore,
        COUNT(DISTINCT p.Id) AS PostCount
    FROM 
        Users u
    INNER JOIN 
        Posts p ON u.Id = p.OwnerUserId
    WHERE 
        u.Reputation > 1000
    GROUP BY 
        u.Id, u.DisplayName
),
ClosedPosts AS (
    SELECT 
        ph.PostId,
        MAX(ph.CreationDate) AS LastCloseDate,
        COUNT(CASE WHEN ph.PostHistoryTypeId = 10 THEN 1 END) AS CloseCount
    FROM 
        PostHistory ph
    WHERE 
        ph.PostHistoryTypeId IN (10, 11)
    GROUP BY 
        ph.PostId
)
SELECT 
    pu.DisplayName,
    p.Id AS PostId,
    p.Title,
    p.CreationDate,
    p.Score,
    p.ViewCount,
    r.Rank,
    t.TotalScore,
    t.AverageScore,
    t.PostCount,
    COALESCE(c.LastCloseDate, 'No Closures') AS LastCloseDate,
    COALESCE(c.CloseCount, 0) AS CloseCount
FROM 
    RankedPosts r
JOIN 
    Posts p ON r.Id = p.Id
JOIN 
    TopUsers t ON p.OwnerUserId = t.UserId
LEFT JOIN 
    ClosedPosts c ON p.Id = c.PostId
JOIN 
    Users pu ON p.OwnerUserId = pu.Id
WHERE 
    r.Rank <= 5
ORDER BY 
    t.TotalScore DESC, p.ViewCount DESC;
