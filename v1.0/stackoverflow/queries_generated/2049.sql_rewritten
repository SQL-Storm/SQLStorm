WITH UserReputation AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        SUM(u.UpVotes) AS TotalUpVotes,
        SUM(u.DownVotes) AS TotalDownVotes,
        COUNT(b.Id) AS BadgeCount,
        COALESCE(AVG(CASE WHEN p.PostTypeId = 1 THEN p.Score END), 0) AS AvgQuestionScore
    FROM Users u
    LEFT JOIN Badges b ON u.Id = b.UserId
    LEFT JOIN Posts p ON u.Id = p.OwnerUserId
    GROUP BY u.Id
),
PopularPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.ViewCount,
        COUNT(c.Id) AS CommentCount,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.ViewCount DESC) AS ViewRank
    FROM Posts p
    LEFT JOIN Comments c ON p.Id = c.PostId
    WHERE p.CreationDate >= cast('2024-10-01' as date) - INTERVAL '1 year'
    GROUP BY p.Id
),
UserPostStats AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COUNT(p.Id) AS TotalPosts,
        SUM(CASE WHEN p.PostTypeId = 1 THEN 1 ELSE 0 END) AS QuestionCount,
        SUM(CASE WHEN p.PostTypeId = 2 THEN 1 ELSE 0 END) AS AnswerCount
    FROM Users u
    LEFT JOIN Posts p ON u.Id = p.OwnerUserId
    GROUP BY u.Id
)
SELECT 
    ur.DisplayName,
    ur.TotalUpVotes,
    ur.TotalDownVotes,
    ur.BadgeCount,
    ur.AvgQuestionScore,
    ups.TotalPosts,
    ups.QuestionCount,
    ups.AnswerCount,
    pp.Title AS PopularPostTitle,
    pp.ViewCount AS PopularPostViewCount
FROM UserReputation ur
JOIN UserPostStats ups ON ur.UserId = ups.UserId
LEFT JOIN PopularPosts pp ON pp.PostId = 
    (SELECT PostId 
     FROM PopularPosts pp2 
     WHERE pp2.UserId = ur.UserId
     ORDER BY pp2.ViewCount DESC 
     LIMIT 1)
WHERE ur.TotalUpVotes > ur.TotalDownVotes
ORDER BY ur.TotalUpVotes DESC, ur.BadgeCount DESC;