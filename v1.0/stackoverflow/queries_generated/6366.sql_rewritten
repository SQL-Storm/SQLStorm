WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.ViewCount,
        p.Score,
        u.DisplayName AS OwnerName,
        COUNT(c.Id) AS CommentCount,
        ROW_NUMBER() OVER (PARTITION BY pt.Name ORDER BY p.Score DESC, p.CreationDate DESC) AS Rank,
        STRING_AGG(DISTINCT t.TagName, ', ') AS TagsList
    FROM Posts p
    JOIN Users u ON p.OwnerUserId = u.Id
    JOIN PostTypes pt ON p.PostTypeId = pt.Id
    LEFT JOIN Comments c ON p.Id = c.PostId
    LEFT JOIN LATERAL STRING_TO_ARRAY(substring(p.Tags, 2, length(p.Tags)-2), '><') AS tag_arr ON TRUE
    LEFT JOIN Tags t ON tag_arr::text::varchar = t.TagName
    WHERE p.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 year' 
    GROUP BY p.Id, u.DisplayName, pt.Name
),
TopPosts AS (
    SELECT 
        rp.*,
        pt.Name AS PostTypeName
    FROM RankedPosts rp
    JOIN PostTypes pt ON pt.Id IN (1, 2)  
    WHERE rp.Rank <= 10
)
SELECT 
    tp.PostId,
    tp.Title,
    tp.CreationDate,
    tp.ViewCount,
    tp.Score,
    tp.CommentCount,
    tp.OwnerName,
    tp.TagsList,
    tp.PostTypeName
FROM TopPosts tp
ORDER BY tp.Score DESC, tp.ViewCount DESC;