
WITH RECURSIVE UserReputationCTE AS (
    SELECT 
        Id, 
        Reputation, 
        CreationDate, 
        DisplayName, 
        LastAccessDate
    FROM 
        Users
    WHERE 
        Reputation IS NOT NULL
    
    UNION ALL
    
    SELECT 
        u.Id, 
        u.Reputation + r.Reputation AS Reputation,
        u.CreationDate, 
        u.DisplayName, 
        u.LastAccessDate
    FROM 
        Users u
    INNER JOIN 
        UserReputationCTE r ON u.Reputation > r.Reputation
)
, RecentPosts AS (
    SELECT 
        p.Id AS PostId, 
        p.Title, 
        p.CreationDate, 
        p.ViewCount, 
        p.OwnerUserId,
        COUNT(c.Id) AS CommentCount,
        COUNT(v.Id) AS VoteCount
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    WHERE 
        p.CreationDate > '2024-10-01 12:34:56'::timestamp - INTERVAL '30 days'
    GROUP BY 
        p.Id, p.Title, p.CreationDate, p.ViewCount, p.OwnerUserId
)
, PostsWithTags AS (
    SELECT 
        rp.PostId, 
        rp.Title, 
        rp.CreationDate, 
        rp.ViewCount, 
        rp.CommentCount, 
        rp.VoteCount,
        STRING_AGG(t.TagName, ', ') AS Tags
    FROM 
        RecentPosts rp
    LEFT JOIN 
        Posts p ON p.Id = rp.PostId
    LEFT JOIN 
        LATERAL STRING_TO_ARRAY(substring(p.Tags, 2, length(p.Tags) - 2), '><') AS t
    GROUP BY 
        rp.PostId, rp.Title, rp.CreationDate, rp.ViewCount, rp.CommentCount, rp.VoteCount
)
SELECT 
    pft.Name AS PostType,
    u.DisplayName AS UserName,
    u.Reputation,
    w.PostId,
    w.Title, 
    w.ViewCount,
    w.CommentCount,
    w.VoteCount,
    w.Tags
FROM 
    PostsWithTags w
JOIN 
    Users u ON w.OwnerUserId = u.Id
JOIN 
    PostTypes pft ON EXISTS (
        SELECT 1 
        FROM Posts p 
        WHERE p.Id = w.PostId AND p.PostTypeId = pft.Id
    )
WHERE 
    u.Reputation >= (SELECT AVG(Reputation) FROM Users WHERE Reputation IS NOT NULL)
    AND w.CommentCount > 5
ORDER BY 
    w.ViewCount DESC
LIMIT 10;
