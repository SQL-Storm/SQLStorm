
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.Score,
        p.CreationDate,
        p.LastActivityDate,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC, p.CreationDate ASC) AS rn
    FROM 
        Posts p
    WHERE 
        p.PostTypeId = 1 AND 
        p.Score > 0
),
UserBadges AS (
    SELECT 
        u.Id AS UserId,
        COUNT(b.Id) AS BadgeCount,
        MAX(b.Class) AS HighestBadgeClass
    FROM 
        Users u
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    GROUP BY 
        u.Id
),
PostCommentCounts AS (
    SELECT 
        PostId,
        COUNT(*) AS CommentCount
    FROM 
        Comments
    GROUP BY 
        PostId
),
ClosedPostLinks AS (
    SELECT 
        p.Id AS PostId,
        COUNT(pl.RelatedPostId) AS RelatedPostCount
    FROM 
        Posts p
    JOIN 
        PostLinks pl ON p.Id = pl.PostId
    WHERE 
        p.ClosedDate IS NOT NULL
    GROUP BY 
        p.Id
)
SELECT 
    up.Id AS UserId,
    up.DisplayName, 
    rp.Title,
    rp.PostId,
    rp.Score,
    rp.CreationDate,
    rp.LastActivityDate,
    COALESCE(cc.CommentCount, 0) AS CommentCount,
    COALESCE(cpl.RelatedPostCount, 0) AS RelatedPostCount,
    ub.BadgeCount,
    ub.HighestBadgeClass
FROM 
    RankedPosts rp
JOIN 
    Users up ON rp.OwnerUserId = up.Id
LEFT JOIN 
    UserBadges ub ON up.Id = ub.UserId
LEFT JOIN 
    PostCommentCounts cc ON rp.PostId = cc.PostId
LEFT JOIN 
    ClosedPostLinks cpl ON rp.PostId = cpl.PostId
WHERE 
    rp.rn = 1
ORDER BY 
    rp.Score DESC, 
    rp.CreationDate ASC
LIMIT 100;
