
WITH RecursivePostCTE AS (
    
    SELECT
        p.Id AS PostId,
        p.Title,
        p.AcceptedAnswerId,
        1 AS Level
    FROM Posts p
    WHERE p.PostTypeId = 1 

    UNION ALL

    SELECT
        p2.Id AS PostId,
        p2.Title,
        p2.AcceptedAnswerId,
        r.Level + 1
    FROM Posts p2
    INNER JOIN RecursivePostCTE r ON p2.ParentId = r.PostId
    WHERE p2.PostTypeId = 2 
),
PostStats AS (
    
    SELECT 
        p.Id AS QuestionId,
        p.Title,
        p.ViewCount,
        COALESCE(a.AnswerCount, 0) AS TotalAnswers,
        COALESCE(AVG(a.Score), 0) AS AvgAnswerScore,
        COUNT(DISTINCT c.Id) AS TotalComments
    FROM Posts p
    LEFT JOIN (
        SELECT
            ParentId,
            COUNT(*) AS AnswerCount,
            AVG(Score) AS Score
        FROM Posts
        WHERE PostTypeId = 2 
        GROUP BY ParentId
    ) a ON p.Id = a.ParentId
    LEFT JOIN Comments c ON p.Id = c.PostId
    WHERE p.PostTypeId = 1 
    GROUP BY p.Id, p.Title, p.ViewCount
),
TopUsers AS (
    
    SELECT
        u.Id,
        u.DisplayName,
        COUNT(p.Id) AS PostCount
    FROM Users u
    LEFT JOIN Posts p ON u.Id = p.OwnerUserId
    GROUP BY u.Id, u.DisplayName
    ORDER BY u.Reputation DESC
    LIMIT 5
)
SELECT 
    ps.QuestionId,
    ps.Title,
    ps.ViewCount,
    ps.TotalAnswers,
    ps.AvgAnswerScore,
    ps.TotalComments,
    u.DisplayName AS TopUser,
    u.PostCount
FROM PostStats ps
CROSS JOIN TopUsers u
WHERE ps.TotalAnswers > 0
ORDER BY ps.AvgAnswerScore DESC, ps.ViewCount DESC;
