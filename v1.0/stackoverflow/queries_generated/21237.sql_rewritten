WITH UserStats AS (
    SELECT 
        U.Id AS UserId,
        U.DisplayName,
        U.Reputation,
        COALESCE(BadgeCounts.BadgesCount, 0) AS BadgesCount,
        COALESCE(PostCounts.PostsCount, 0) AS PostsCount,
        COALESCE(UpvoteCounts.TotalUpVotes, 0) AS TotalUpVotes,
        COALESCE(DownvoteCounts.TotalDownVotes, 0) AS TotalDownVotes,
        DATEDIFF(MINUTE, U.CreationDate, GETDATE()) AS AccountAgeInMinutes
    FROM Users U
    LEFT JOIN (
        SELECT 
            UserId, 
            COUNT(*) AS BadgesCount 
        FROM Badges 
        GROUP BY UserId
    ) AS BadgeCounts ON U.Id = BadgeCounts.UserId
    LEFT JOIN (
        SELECT 
            OwnerUserId AS UserId, 
            COUNT(*) AS PostsCount 
        FROM Posts 
        GROUP BY OwnerUserId
    ) AS PostCounts ON U.Id = PostCounts.UserId
    LEFT JOIN (
        SELECT 
            UserId, 
            SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS TotalUpVotes,
            SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS TotalDownVotes
        FROM Votes 
        GROUP BY UserId
    ) AS UpvoteCounts ON U.Id = UpvoteCounts.UserId
    WHERE U.Reputation IS NOT NULL
),
TopUsers AS (
    SELECT 
        UserId,
        DisplayName,
        Reputation,
        BadgesCount,
        PostsCount,
        TotalUpVotes,
        TotalDownVotes,
        ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS Rank
    FROM UserStats
)
SELECT 
    U.DisplayName,
    U.Reputation,
    U.BadgesCount,
    U.PostsCount,
    U.TotalUpVotes,
    U.TotalDownVotes,
    CASE 
        WHEN U.AccountAgeInMinutes IS NULL THEN 'N/A'
        WHEN U.AccountAgeInMinutes < 60 THEN CONCAT(U.AccountAgeInMinutes, ' minutes')
        WHEN U.AccountAgeInMinutes < 1440 THEN CONCAT(FLOOR(U.AccountAgeInMinutes / 60), ' hours')
        ELSE CONCAT(FLOOR(U.AccountAgeInMinutes / 1440), ' days')
    END AS AccountAge,
    (
        SELECT 
            STRING_AGG(P.Title, ', ') 
        FROM Posts P 
        WHERE P.OwnerUserId = U.UserId 
        AND P.PostTypeId = 1
        AND P.ViewCount > 100
        ORDER BY P.Score DESC
        FOR XML PATH(''), TYPE
    ) AS PopularQuestions
FROM TopUsers U
WHERE U.Rank <= 10
ORDER BY U.Rank;