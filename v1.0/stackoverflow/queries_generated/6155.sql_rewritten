WITH UserReputation AS (
    SELECT Id AS UserId, Reputation, COUNT(*) AS PostCount
    FROM Users
    JOIN Posts ON Users.Id = Posts.OwnerUserId
    WHERE CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 year'
    GROUP BY Users.Id, Reputation
), TopUsers AS (
    SELECT UserId, Reputation, PostCount
    FROM UserReputation
    WHERE PostCount > 10
    ORDER BY Reputation DESC
    LIMIT 10
), UserBadges AS (
    SELECT UserId, COUNT(*) AS BadgeCount
    FROM Badges
    WHERE Date >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 year'
    GROUP BY UserId
), UserStats AS (
    SELECT u.Id AS UserId, COALESCE(ub.BadgeCount, 0) AS BadgeCount, tr.Reputation, tr.PostCount
    FROM TopUsers tr
    LEFT JOIN UserBadges ub ON tr.UserId = ub.UserId
), PostEngagement AS (
    SELECT p.OwnerUserId, COUNT(c.Id) AS CommentCount, SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS Upvotes, SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS Downvotes
    FROM Posts p
    LEFT JOIN Comments c ON p.Id = c.PostId
    LEFT JOIN Votes v ON p.Id = v.PostId
    WHERE p.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 year'
    GROUP BY p.OwnerUserId
)
SELECT us.UserId, us.Reputation, us.BadgeCount, COALESCE(pe.CommentCount, 0) AS CommentCount, COALESCE(pe.Upvotes, 0) AS Upvotes, COALESCE(pe.Downvotes, 0) AS Downvotes
FROM UserStats us
LEFT JOIN PostEngagement pe ON us.UserId = pe.OwnerUserId
ORDER BY us.Reputation DESC, us.BadgeCount DESC;