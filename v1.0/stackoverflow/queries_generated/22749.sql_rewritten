WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.Score,
        COUNT(c.Id) AS CommentCount,
        RANK() OVER (PARTITION BY p.PostTypeId ORDER BY p.Score DESC) AS ScoreRank,
        COALESCE(p.ClosedDate, 'No Closure') AS ClosureStatus
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    WHERE 
        p.CreationDate >= cast('2024-10-01' as date) - INTERVAL '1 year'
    GROUP BY 
        p.Id, p.Title, p.Score, p.ClosedDate
),

ActiveUsers AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS TotalUpVotes,
        COUNT(DISTINCT b.Id) AS BadgeCount
    FROM 
        Users u
    LEFT JOIN 
        Votes v ON u.Id = v.UserId
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    WHERE 
        u.Reputation > 1000
    GROUP BY 
        u.Id, u.DisplayName
),

PostCloseReasons AS (
    SELECT 
        ph.PostId,
        MIN(CASE 
            WHEN ph.PostHistoryTypeId = 10 THEN cr.Name 
            ELSE NULL END) AS CloseReasonName
    FROM 
        PostHistory ph
    LEFT JOIN 
        CloseReasonTypes cr ON CAST(ph.Comment AS INTEGER) = cr.Id
    GROUP BY 
        ph.PostId
)

SELECT 
    rp.PostId,
    rp.Title,
    rp.Score,
    rp.CommentCount,
    rp.ScoreRank,
    rp.ClosureStatus,
    au.UserId,
    au.DisplayName,
    au.TotalUpVotes,
    au.BadgeCount,
    pcr.CloseReasonName
FROM 
    RankedPosts rp
JOIN 
    Posts p ON rp.PostId = p.Id
LEFT JOIN 
    ActiveUsers au ON p.OwnerUserId = au.UserId
LEFT JOIN 
    PostCloseReasons pcr ON rp.PostId = pcr.PostId
WHERE 
    rp.ScoreRank <= 5 
    AND (rp.ClosureStatus = 'No Closure' OR rp.ClosureStatus IS NULL)
    AND (p.Title LIKE '%SQL%' OR p.Tags ILIKE '%sql%')
ORDER BY 
    rp.Score DESC, au.TotalUpVotes DESC 
FETCH FIRST 10 ROWS ONLY;