
WITH UserReputation AS (
    SELECT 
        U.Id AS UserId,
        U.DisplayName,
        U.Reputation,
        U.CreationDate,
        (SELECT COUNT(*) FROM Posts P WHERE P.OwnerUserId = U.Id) AS PostCount,
        (SELECT COUNT(*) FROM Comments C WHERE C.UserId = U.Id) AS CommentCount
    FROM Users U
),
PopularTags AS (
    SELECT 
        T.Id AS TagId, 
        T.TagName,
        COUNT(P.Id) AS TotalPosts,
        AVG(U.Reputation) AS AvgUserReputation
    FROM Tags T
    LEFT JOIN Posts P ON P.Tags LIKE CONCAT('%', T.TagName, '%')
    LEFT JOIN Users U ON P.OwnerUserId = U.Id
    GROUP BY T.Id, T.TagName
    HAVING COUNT(P.Id) > 10
),
PostDetails AS (
    SELECT 
        P.Id AS PostId,
        P.Title,
        P.ViewCount,
        PH.CreationDate AS PostHistoryDate,
        PH.UserId AS EditorId,
        PT.Name AS PostType,
        PT.Id AS PostTypeId,
        ROW_NUMBER() OVER (PARTITION BY P.Id ORDER BY PH.CreationDate DESC) AS HistoryRank
    FROM Posts P
    LEFT JOIN PostHistory PH ON P.Id = PH.PostId AND PH.PostHistoryTypeId IN (4, 5, 6)
    LEFT JOIN PostTypes PT ON P.PostTypeId = PT.Id
),
MostActiveUsers AS (
    SELECT 
        U.Id,
        U.DisplayName,
        COUNT(P.Id) AS AnswersCount,
        SUM(P.Score) AS TotalScore,
        RANK() OVER (ORDER BY COUNT(P.Id) DESC) AS UserRank
    FROM Users U
    JOIN Posts P ON U.Id = P.OwnerUserId
    WHERE P.PostTypeId = 2 
    GROUP BY U.Id, U.DisplayName
)
SELECT 
    U.DisplayName AS TopUser,
    U.Reputation,
    U.PostCount,
    U.CommentCount,
    COALESCE(PD.PostId, 'No Recent Edits') AS EditedPostId,
    COALESCE(PD.Title, 'No Title') AS EditedPostTitle,
    COALESCE(PD.ViewCount, 0) AS PostViewCount,
    COALESCE(PT.Name, 'N/A') AS PostType,
    T.TagName AS PopularTag,
    T.TotalPosts AS TagPostCount,
    T.AvgUserReputation AS AvgTagUserReputation
FROM UserReputation U
LEFT JOIN PostDetails PD ON U.UserId = PD.EditorId AND PD.HistoryRank = 1
LEFT JOIN (SELECT DISTINCT TagId, Tags FROM PopularTags) T ON U.UserId IN (SELECT UserId FROM Badges WHERE TagId = T.TagId)
LEFT JOIN MostActiveUsers MA ON U.Id = MA.Id
WHERE U.Reputation > 1000
ORDER BY U.Reputation DESC, MA.AnswersCount DESC
LIMIT 10;
