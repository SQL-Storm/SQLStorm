
WITH UserBadgeStats AS (
    SELECT 
        U.Id AS UserId,
        U.DisplayName,
        COALESCE(SUM(CASE WHEN B.Class = 1 THEN 1 ELSE 0 END), 0) AS GoldBadges,
        COALESCE(SUM(CASE WHEN B.Class = 2 THEN 1 ELSE 0 END), 0) AS SilverBadges,
        COALESCE(SUM(CASE WHEN B.Class = 3 THEN 1 ELSE 0 END), 0) AS BronzeBadges,
        COALESCE(SUM(B.Class), 0) AS TotalBadges
    FROM 
        Users U
    LEFT JOIN 
        Badges B ON U.Id = B.UserId
    GROUP BY 
        U.Id, U.DisplayName
), PostStats AS (
    SELECT 
        P.OwnerUserId,
        COUNT(P.Id) AS PostCount,
        SUM(P.Score) AS TotalScore,
        AVG(COALESCE(P.ViewCount, 0)) AS AvgViewCount
    FROM 
        Posts P
    WHERE 
        P.CreationDate >= DATE '2024-10-01' - INTERVAL '1 year'  
    GROUP BY 
        P.OwnerUserId
), TopUsers AS (
    SELECT 
        U.Id,
        U.DisplayName,
        U.Reputation,
        B.GoldBadges,
        B.SilverBadges,
        B.BronzeBadges,
        P.PostCount,
        P.TotalScore,
        P.AvgViewCount,
        RANK() OVER (ORDER BY U.Reputation DESC) AS ReputationRank  
    FROM 
        Users U
    JOIN 
        UserBadgeStats B ON U.Id = B.UserId
    JOIN 
        PostStats P ON U.Id = P.OwnerUserId
    WHERE 
        U.Reputation > 1000  
), AggregatedData AS (
    SELECT 
        T.UserId,
        T.DisplayName,
        T.Reputation,
        T.GoldBadges + T.SilverBadges + T.BronzeBadges AS TotalBadges,
        T.PostCount,
        T.TotalScore,
        T.AvgViewCount,
        CASE 
            WHEN T.ReputationRank <= 10 THEN 'Top User'
            ELSE 'Regular User'
        END AS UserCategory
    FROM 
        TopUsers T
)

SELECT 
    AD.DisplayName,
    AD.Reputation,
    AD.TotalBadges,
    AD.PostCount,
    AD.TotalScore,
    AD.AvgViewCount,
    AD.UserCategory,
    CASE 
        WHEN AD.TotalBadges > (SELECT AVG(TotalBadges) FROM AggregatedData) THEN 'Above Average Badge Holder'
        ELSE 'Below Average Badge Holder'
    END AS BadgeComparison
FROM 
    AggregatedData AD
LEFT JOIN 
    Users U ON AD.UserId = U.Id
LEFT JOIN 
    Votes V ON U.Id = V.UserId
WHERE 
    V.CreationDate >= DATE '2024-10-01' - INTERVAL '6 months' AND
    (V.VoteTypeId IN (2, 3) OR V.VoteTypeId IS NULL)  
ORDER BY 
    AD.Reputation DESC, 
    AD.TotalScore DESC;
