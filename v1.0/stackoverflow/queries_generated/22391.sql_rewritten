WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.ViewCount,
        p.Score,
        ROW_NUMBER() OVER (PARTITION BY p.PostTypeId ORDER BY p.Score DESC) AS Rank
    FROM Posts p
    WHERE p.CreationDate >= cast('2024-10-01 12:34:56' as timestamp) - INTERVAL '1 year'
    AND p.ViewCount IS NOT NULL
),
UserActivity AS (
    SELECT 
        u.Id AS UserId,
        COUNT(v.Id) AS TotalVotes,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes
    FROM Users u
    LEFT JOIN Votes v ON u.Id = v.UserId
    GROUP BY u.Id
),
TagStats AS (
    SELECT 
        t.TagName,
        COUNT(DISTINCT p.Id) AS PostCount,
        SUM(CASE WHEN ph.PostHistoryTypeId IN (10, 11) THEN 1 ELSE 0 END) AS ClosedPosts,
        SUM(CASE WHEN ph.PostHistoryTypeId IN (24, 25) THEN 1 ELSE 0 END) AS EditedPosts
    FROM Tags t
    JOIN Posts p ON p.Tags LIKE '%' || t.TagName || '%'
    LEFT JOIN PostHistory ph ON p.Id = ph.PostId
    GROUP BY t.TagName
)
SELECT 
    up.UserId,
    up.TotalVotes,
    up.UpVotes,
    up.DownVotes,
    tp.TagName,
    ts.PostCount,
    ts.ClosedPosts,
    ts.EditedPosts,
    rp.Title,
    rp.CreationDate,
    rp.ViewCount,
    rp.Score
FROM UserActivity up
JOIN TagStats ts ON ts.PostCount > 10
LEFT JOIN RankedPosts rp ON rp.Rank <= 10
LEFT JOIN Tags tp ON tp.TagName = SUBSTRING(rp.Title FROM '\#(\w+)$') 
WHERE up.TotalVotes > 50
AND up.UpVotes IS NOT NULL
AND (up.DownVotes IS NULL OR up.DownVotes < 5)
ORDER BY ts.PostCount DESC, up.TotalVotes DESC, rp.Score DESC
LIMIT 50 OFFSET 0;