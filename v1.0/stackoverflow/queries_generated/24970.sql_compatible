
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS PostRank,
        COALESCE(v.UpVotes, 0) AS UpVotes,
        COALESCE(v.DownVotes, 0) AS DownVotes,
        COALESCE((SELECT COUNT(*) 
                  FROM Comments c 
                  WHERE c.PostId = p.Id),
                 0) AS CommentCount
    FROM Posts p
    LEFT JOIN (
        SELECT 
            PostId,
            SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes,
            SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes
        FROM Votes
        GROUP BY PostId
    ) v ON p.Id = v.PostId
    WHERE p.CreationDate >= DATE '2024-10-01' - INTERVAL '1 year'
),
TopPosts AS (
    SELECT 
        rp.PostId,
        rp.Title,
        rp.CreationDate,
        rp.PostRank,
        (rp.UpVotes - rp.DownVotes) AS VoteBalance,
        CASE 
            WHEN rp.CommentCount > 0 THEN 'Has Comments'
            WHEN rp.CommentCount = 0 THEN 'No Comments'
            ELSE 'Unknown Comments'
        END AS CommentStatus
    FROM RankedPosts rp
    WHERE rp.PostRank <= 5
),
UserPostStats AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COUNT(p.Id) AS TotalPosts,
        AVG(COALESCE(v.UpVotes, 0)::FLOAT) AS AvgUpVotes,
        AVG(COALESCE(v.DownVotes, 0)::FLOAT) AS AvgDownVotes,
        SUM(CASE WHEN p.CreationDate >= DATE '2024-10-01' - INTERVAL '30 days' THEN 1 ELSE 0 END) AS RecentPosts
    FROM Users u
    LEFT JOIN Posts p ON u.Id = p.OwnerUserId
    LEFT JOIN (
        SELECT 
            PostId,
            SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes,
            SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes
        FROM Votes
        GROUP BY PostId
    ) v ON p.Id = v.PostId
    GROUP BY u.Id, u.DisplayName
)
SELECT 
    u.DisplayName,
    ups.TotalPosts,
    ups.AvgUpVotes,
    ups.AvgDownVotes,
    ups.RecentPosts,
    tp.Title AS TopPostTitle,
    tp.VoteBalance,
    tp.CommentStatus
FROM UserPostStats ups
LEFT JOIN TopPosts tp ON ups.TotalPosts > 10
ORDER BY ups.TotalPosts DESC, tp.VoteBalance DESC
LIMIT 100;
