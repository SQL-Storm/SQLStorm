
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId, 
        p.Title,
        p.CreationDate,
        p.Score,
        p.ViewCount,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS UserPostRank,
        STRING_AGG(t.TagName, ', ') AS PostTags
    FROM 
        Posts p
    LEFT JOIN 
        Tags t ON t.Id = ANY(string_to_array(substring(p.Tags, 2, length(p.Tags) - 2), '><')::integer[])
    WHERE 
        p.CreationDate >= CAST('2024-10-01 12:34:56' AS TIMESTAMP) - INTERVAL '1 year'
    GROUP BY 
        p.Id, p.Title, p.CreationDate, p.Score, p.ViewCount, p.OwnerUserId
),
OwnerReputation AS (
    SELECT 
        u.Id AS UserId, 
        u.Reputation, 
        MAX(u.LastAccessDate) AS LastActiveDate,
        COUNT(b.Id) AS BadgeCount
    FROM 
        Users u
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    GROUP BY 
        u.Id, u.Reputation
),
PostHistoryDetails AS (
    SELECT 
        ph.PostId,
        ph.PostHistoryTypeId,
        ph.CreationDate AS HistoryDate,
        ph.UserDisplayName,
        ph.Comment,
        CASE 
            WHEN ph.PostHistoryTypeId IN (10, 11, 12, 13) THEN JSONB_AGG(DISTINCT ph.Comment) FILTER (WHERE ph.Comment IS NOT NULL)
            ELSE NULL 
        END AS CloseReasonComments
    FROM 
        PostHistory ph
    WHERE 
        ph.CreationDate >= CAST('2024-10-01 12:34:56' AS TIMESTAMP) - INTERVAL '6 months'
    GROUP BY 
        ph.PostId, ph.PostHistoryTypeId, ph.CreationDate, ph.UserDisplayName, ph.Comment
)
SELECT 
    rp.PostId,
    rp.Title,
    rp.CreationDate,
    rp.Score,
    rp.ViewCount,
    rp.PostTags,
    orp.Reputation,
    orp.LastActiveDate,
    orp.BadgeCount,
    COALESCE(phd.CloseReasonComments, 'No closure comments') AS ClosureComments,
    CASE 
        WHEN rp.UserPostRank = 1 THEN 'Recent Post by User'
        WHEN rp.Score > 0 THEN 'Popular Post'
        ELSE 'Regular Post'
    END AS PostType
FROM 
    RankedPosts rp
LEFT JOIN 
    OwnerReputation orp ON rp.OwnerUserId = orp.UserId
LEFT JOIN 
    PostHistoryDetails phd ON rp.PostId = phd.PostId
WHERE 
    rp.Score IS NOT NULL
AND 
    (orp.Reputation >= 1000 OR rp.ViewCount > 500)
ORDER BY 
    rp.CreationDate DESC
LIMIT 50;
