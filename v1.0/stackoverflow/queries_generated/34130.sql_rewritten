WITH RecursiveTagHierarchy AS (
    SELECT
        Id,
        TagName,
        Count,
        NULL AS ParentId
    FROM
        Tags

    UNION ALL

    SELECT
        t.Id,
        t.TagName,
        t.Count,
        r.Id AS ParentId
    FROM
        Tags t
    JOIN
        RecursiveTagHierarchy r ON t.WikiPostId = r.Id
),
UserActivity AS (
    SELECT
        u.Id AS UserId,
        u.DisplayName,
        COUNT(DISTINCT p.Id) AS PostCount,
        SUM(COALESCE(v.BountyAmount, 0)) AS TotalBounty,
        SUM(v.VoteTypeId = 2) AS UpVotes,
        SUM(v.VoteTypeId = 3) AS DownVotes,
        RANK() OVER (ORDER BY COUNT(DISTINCT p.Id) DESC) AS ActivityRank
    FROM
        Users u
    LEFT JOIN
        Posts p ON u.Id = p.OwnerUserId
    LEFT JOIN
        Votes v ON p.Id = v.PostId
    GROUP BY
        u.Id
),
TagStats AS (
    SELECT
        rt.TagName,
        SUM(u.PostCount) AS UserPostCount,
        AVG(u.TotalBounty) AS AverageBounty,
        COUNT(u.UserId) AS UserCount
    FROM
        RecursiveTagHierarchy rt
    LEFT JOIN
        Posts p ON rt.Id = p.Tags::int[]  
    LEFT JOIN
        UserActivity u ON p.OwnerUserId = u.UserId
    GROUP BY
        rt.TagName
)
SELECT
    ts.TagName,
    ts.UserPostCount,
    ts.AverageBounty,
    ts.UserCount,
    COALESCE(ut.DisplayName, 'No Activity') AS ActiveUser,
    ut.PostCount AS ActiveUserPosts,
    ut.UpVotes AS ActiveUserUpVotes,
    ut.DownVotes AS ActiveUserDownVotes,
    CASE
        WHEN ut.ActivityRank IS NOT NULL AND ut.ActivityRank <= 5 THEN 'Top Contributor'
        ELSE 'Regular Contributor'
    END AS ContributorType
FROM
    TagStats ts
LEFT JOIN
    UserActivity ut ON ts.UserCount > 0
WHERE
    ts.UserPostCount > 10
ORDER BY
    ts.UserPostCount DESC, ts.TagName ASC;