WITH UserStats AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COUNT(DISTINCT p.Id) AS TotalPosts,
        SUM(CASE WHEN p.PostTypeId = 1 THEN 1 ELSE 0 END) AS Questions,
        SUM(CASE WHEN p.PostTypeId = 2 THEN 1 ELSE 0 END) AS Answers,
        SUM(CASE WHEN p.Score IS NOT NULL THEN p.Score END) AS TotalScore,
        SUM(COALESCE(b.Class, 0)) AS TotalBadges
    FROM 
        Users u
    LEFT JOIN 
        Posts p ON u.Id = p.OwnerUserId
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    GROUP BY 
        u.Id, u.DisplayName
),
PostStats AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.ViewCount,
        p.AnswerCount,
        p.CommentCount,
        COALESCE(pc.CloseReasonId, 0) AS CloseReason,
        MAX(CASE WHEN p.LastActivityDate IS NOT NULL THEN p.LastActivityDate END) AS LastActivity
    FROM 
        Posts p
    LEFT JOIN 
        (SELECT PostId, JSON_AGG(comment) AS CloseReasonId
         FROM PostHistory
         WHERE PostHistoryTypeId IN (10, 11)
         GROUP BY PostId) pc ON p.Id = pc.PostId
    GROUP BY 
        p.Id, p.Title, p.ViewCount, p.AnswerCount, p.CommentCount
)
SELECT 
    us.DisplayName,
    us.TotalPosts,
    us.Questions,
    us.Answers,
    us.TotalScore,
    us.TotalBadges,
    ps.Title,
    ps.ViewCount,
    ps.AnswerCount,
    ps.CommentCount,
    ps.CloseReason,
    ps.LastActivity
FROM 
    UserStats us
JOIN 
    PostStats ps ON us.UserId = ps.OwnerUserId
ORDER BY 
    us.TotalScore DESC, us.TotalPosts DESC;