WITH RECURSIVE UserReputationCTE AS (
    SELECT Id, Reputation, CreationDate, 
           ROW_NUMBER() OVER (ORDER BY Reputation DESC) AS Rank
    FROM Users
    WHERE Reputation > 0
),
PostStatistics AS (
    SELECT p.Id AS PostId, 
           p.Title, 
           p.ViewCount, 
           COALESCE(a.AnswerCount, 0) AS AnswerCount,
           COALESCE(c.CommentCount, 0) AS CommentCount,
           COALESCE(v.UpVoteCount, 0) AS UpVoteCount,
           COALESCE(v.DownVoteCount, 0) AS DownVoteCount,
           CASE 
               WHEN p.AcceptedAnswerId IS NOT NULL THEN 1 
               ELSE 0 
           END AS IsAccepted
    FROM Posts p
    LEFT JOIN (
        SELECT ParentId, COUNT(*) AS AnswerCount 
        FROM Posts 
        WHERE PostTypeId = 2 
        GROUP BY ParentId
    ) a ON p.Id = a.ParentId
    LEFT JOIN (
        SELECT PostId, COUNT(*) AS CommentCount 
        FROM Comments 
        GROUP BY PostId
    ) c ON p.Id = c.PostId
    LEFT JOIN (
        SELECT PostId,
               SUM(CASE WHEN VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVoteCount,
               SUM(CASE WHEN VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVoteCount
        FROM Votes 
        GROUP BY PostId
    ) v ON p.Id = v.PostId
    WHERE p.CreationDate >= cast('2024-10-01' as date) - INTERVAL '30 days'
),
UserActivity AS (
    SELECT u.Id AS UserId,
           u.DisplayName,
           SUM(p.ViewCount) AS TotalViews,
           SUM(ps.ViewCount) AS PostsViewed,
           SUM(b.Id IS NOT NULL) AS BadgesEarned
    FROM Users u
    LEFT JOIN Posts p ON u.Id = p.OwnerUserId
    LEFT JOIN PostStatistics ps ON p.Id = ps.PostId
    LEFT JOIN Badges b ON u.Id = b.UserId
    GROUP BY u.Id
)
SELECT u.UserId, 
       u.DisplayName,
       COALESCE(u.TotalViews, 0) AS TotalViews,
       COALESCE(u.PostsViewed, 0) AS PostsViewed,
       COALESCE(u.BadgesEarned, 0) AS BadgesEarned,
       COALESCE(r.Reputation, 0) AS ReputationRank,
       ps.Title,
       ps.ViewCount,
       ps.AnswerCount,
       ps.CommentCount,
       ps.UpVoteCount,
       ps.DownVoteCount,
       ps.IsAccepted
FROM UserActivity u
FULL OUTER JOIN UserReputationCTE r ON u.UserId = r.Id
JOIN PostStatistics ps ON u.PostsViewed > 0
ORDER BY u.TotalViews DESC, r.Rank 
LIMIT 100;