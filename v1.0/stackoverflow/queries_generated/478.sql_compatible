
WITH UserBadgeCounts AS (
    SELECT 
        UserId, 
        COUNT(Id) AS BadgeCount, 
        SUM(CASE WHEN Class = 1 THEN 1 ELSE 0 END) AS GoldBadges,
        SUM(CASE WHEN Class = 2 THEN 1 ELSE 0 END) AS SilverBadges,
        SUM(CASE WHEN Class = 3 THEN 1 ELSE 0 END) AS BronzeBadges
    FROM Badges
    GROUP BY UserId
),
PostAggregates AS (
    SELECT 
        OwnerUserId,
        COUNT(CASE WHEN PostTypeId = 1 THEN 1 END) AS QuestionCount,
        COUNT(CASE WHEN PostTypeId = 2 THEN 1 END) AS AnswerCount,
        SUM(ViewCount) AS TotalViews,
        AVG(Score) AS AverageScore
    FROM Posts
    GROUP BY OwnerUserId
),
PostHistorySummary AS (
    SELECT 
        PostId,
        MAX(CASE WHEN PostHistoryTypeId IN (10, 11) THEN CreationDate END) AS LastClosedDate,
        COUNT(*) FILTER (WHERE PostHistoryTypeId = 24) AS EditCount
    FROM PostHistory
    GROUP BY PostId
),
UserStats AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COALESCE(ub.BadgeCount, 0) AS BadgeCount,
        COALESCE(pa.QuestionCount, 0) AS TotalQuestions,
        COALESCE(pa.AnswerCount, 0) AS TotalAnswers,
        COALESCE(pa.TotalViews, 0) AS TotalViews,
        COALESCE(pa.AverageScore, 0) AS AverageScore,
        COALESCE(ph.LastClosedDate, 'No Closures') AS LastClosedPost,
        COALESCE(ph.EditCount, 0) AS TotalEdits
    FROM Users u
    LEFT JOIN UserBadgeCounts ub ON u.Id = ub.UserId
    LEFT JOIN PostAggregates pa ON u.Id = pa.OwnerUserId
    LEFT JOIN PostHistorySummary ph ON u.Id = ph.UserId
)
SELECT 
    UserId, 
    DisplayName,
    BadgeCount,
    TotalQuestions,
    TotalAnswers,
    TotalViews,
    AverageScore,
    LastClosedPost,
    TotalEdits
FROM UserStats
WHERE BadgeCount > (
    SELECT AVG(BadgeCount) FROM UserBadgeCounts
) 
AND TotalQuestions > 5
ORDER BY TotalViews DESC, AverageScore DESC
LIMIT 10;
