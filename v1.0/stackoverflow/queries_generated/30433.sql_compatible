
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Score,
        p.ViewCount,
        p.AnswerCount,
        p.CommentCount,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC) AS Rank,
        U.DisplayName AS OwnerName,
        COALESCE(SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END), 0) AS UpVotes,
        COALESCE(SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END), 0) AS DownVotes
    FROM 
        Posts p
    LEFT JOIN 
        Users U ON p.OwnerUserId = U.Id
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    GROUP BY 
        p.Id, U.DisplayName, p.Title, p.CreationDate, p.Score, p.ViewCount, p.AnswerCount, p.CommentCount
),
MostCommentedPosts AS (
    SELECT 
        PostId,
        COUNT(*) AS CommentCount
    FROM 
        Comments
    GROUP BY 
        PostId
),
TopUsers AS (
    SELECT 
        U.Id,
        U.DisplayName,
        U.Reputation,
        RANK() OVER (ORDER BY U.Reputation DESC) AS UserRank
    FROM 
        Users U
    WHERE 
        U.Reputation > 1000
),
PostHistoryLatest AS (
    SELECT 
        ph.PostId,
        ph.CreationDate AS LastEditDate,
        ph.UserDisplayName AS LastEditor,
        pht.Name AS HistoryType
    FROM 
        PostHistory ph
    JOIN 
        PostHistoryTypes pht ON ph.PostHistoryTypeId = pht.Id
    WHERE 
        ph.CreationDate = (SELECT MAX(CreationDate) FROM PostHistory WHERE PostId = ph.PostId)
)
SELECT 
    RP.PostId,
    RP.Title,
    RP.CreationDate,
    RP.ViewCount,
    RP.Score,
    RP.AnswerCount,
    RP.CommentCount,
    RP.OwnerName,
    RP.Rank,
    PC.CommentCount AS TotalComments,
    TUsers.DisplayName AS TopUser,
    TUsers.Reputation,
    COALESCE(PH.LastEditDate, 'No Edits') AS LastEditDate,
    PH.LastEditor,
    PH.HistoryType
FROM 
    RankedPosts RP
LEFT JOIN 
    MostCommentedPosts PC ON RP.PostId = PC.PostId
LEFT JOIN 
    TopUsers TUsers ON RP.OwnerUserId = TUsers.Id
LEFT JOIN 
    PostHistoryLatest PH ON RP.PostId = PH.PostId
WHERE 
    RP.Rank <= 3
ORDER BY 
    RP.Score DESC, RP.ViewCount DESC;
