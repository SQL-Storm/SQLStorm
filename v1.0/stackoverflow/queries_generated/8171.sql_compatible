
WITH UserScoreData AS (
    SELECT 
        U.Id AS UserId,
        U.DisplayName,
        U.Reputation,
        U.CreationDate,
        U.LastAccessDate,
        COALESCE(SUM(CASE WHEN V.VoteTypeId = 2 THEN 1 ELSE 0 END), 0) AS UpVotes,
        COALESCE(SUM(CASE WHEN V.VoteTypeId = 3 THEN 1 ELSE 0 END), 0) AS DownVotes,
        COALESCE(COUNT(DISTINCT P.Id), 0) AS TotalPosts,
        COALESCE(COUNT(DISTINCT C.Id), 0) AS TotalComments,
        COALESCE(SUM(CASE WHEN B.Class = 1 THEN 1 ELSE 0 END), 0) AS GoldBadges,
        COALESCE(SUM(CASE WHEN B.Class = 2 THEN 1 ELSE 0 END), 0) AS SilverBadges,
        COALESCE(SUM(CASE WHEN B.Class = 3 THEN 1 ELSE 0 END), 0) AS BronzeBadges
    FROM 
        Users U
    LEFT JOIN 
        Votes V ON V.UserId = U.Id
    LEFT JOIN 
        Posts P ON P.OwnerUserId = U.Id
    LEFT JOIN 
        Comments C ON C.UserId = U.Id
    LEFT JOIN 
        Badges B ON B.UserId = U.Id
    GROUP BY 
        U.Id, U.DisplayName, U.Reputation, U.CreationDate, U.LastAccessDate
), TopUsers AS (
    SELECT 
        UserId,
        DisplayName,
        Reputation,
        LEAD(Reputation) OVER (ORDER BY Reputation DESC) AS NextUserReputation,
        RANK() OVER (ORDER BY Reputation DESC) AS UserRank
    FROM 
        UserScoreData
)
SELECT
    UserId,
    DisplayName,
    Reputation,
    NextUserReputation,
    UserRank,
    UpVotes,
    DownVotes,
    TotalPosts,
    TotalComments,
    GoldBadges,
    SilverBadges,
    BronzeBadges
FROM 
    UserScoreData
JOIN 
    TopUsers ON UserScoreData.UserId = TopUsers.UserId
WHERE 
    UserRank <= 10
ORDER BY 
    UserRank;
