
WITH TagStatistics AS (
    SELECT 
        t.TagName,
        COUNT(p.Id) AS PostCount,
        SUM(CASE WHEN p.PostTypeId = 1 THEN 1 ELSE 0 END) AS QuestionCount,
        SUM(CASE WHEN p.PostTypeId = 2 THEN 1 ELSE 0 END) AS AnswerCount,
        AVG(u.Reputation) AS AvgReputation,
        STRING_AGG(DISTINCT u.DisplayName, ', ') AS ActiveUsers,
        COALESCE(MAX(p.LastActivityDate), '1970-01-01') AS LastActivityDate
    FROM Tags t
    LEFT JOIN Posts p ON p.Tags LIKE '%' || t.TagName || '%'
    LEFT JOIN Users u ON u.Id = p.OwnerUserId
    GROUP BY t.TagName
),
TopTags AS (
    SELECT 
        TagName,
        PostCount,
        QuestionCount,
        AnswerCount,
        AvgReputation,
        ActiveUsers,
        LastActivityDate,
        ROW_NUMBER() OVER (ORDER BY PostCount DESC) AS Rank
    FROM TagStatistics
),
RecentPostHistory AS (
    SELECT 
        ph.PostId,
        ph.PostHistoryTypeId,
        ph.CreationDate,
        STRING_AGG(DISTINCT CONCAT(ph.UserDisplayName, ' ', CAST(ph.CreationDate AS DATE)), '; ' ORDER BY ph.CreationDate DESC) AS Contributors
    FROM PostHistory ph
    WHERE ph.CreationDate >= DATEADD(month, -6, CAST('2024-10-01 12:34:56' AS TIMESTAMP))
    GROUP BY ph.PostId, ph.PostHistoryTypeId
)
SELECT 
    tt.TagName,
    tt.PostCount,
    tt.QuestionCount,
    tt.AnswerCount,
    tt.AvgReputation,
    tt.ActiveUsers,
    tt.LastActivityDate,
    rph.Contributors,
    rph.PostHistoryTypeId,
    rph.CreationDate
FROM TopTags tt
LEFT JOIN RecentPostHistory rph ON tt.PostCount > 0
WHERE tt.Rank <= 10
ORDER BY tt.PostCount DESC, tt.TagName;
