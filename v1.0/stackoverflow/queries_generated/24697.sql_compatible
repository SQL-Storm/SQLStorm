
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId, 
        p.Title, 
        p.Score, 
        p.ViewCount, 
        p.CreationDate, 
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC, p.CreationDate DESC) AS rnk
    FROM 
        Posts p
    WHERE 
        p.PostTypeId = 1 
),
UserStats AS (
    SELECT 
        u.Id AS UserId,
        u.Reputation,
        u.DisplayName,
        COALESCE(SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END), 0) AS UpVotesCount,
        COALESCE(SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END), 0) AS DownVotesCount
    FROM 
        Users u
    LEFT JOIN Votes v ON u.Id = v.UserId
    GROUP BY 
        u.Id, u.Reputation, u.DisplayName
),
PostHistoryStats AS (
    SELECT 
        ph.PostId, 
        COUNT(*) AS EditCount,
        MAX(ph.CreationDate) AS LastEditDate
    FROM 
        PostHistory ph
    WHERE 
        ph.PostHistoryTypeId IN (4, 5, 6)
    GROUP BY 
        ph.PostId
),
FilteredPosts AS (
    SELECT 
        rp.PostId, 
        rp.Title,
        rp.Score,
        rp.ViewCount,
        ps.EditCount,
        ps.LastEditDate,
        us.UserId,
        us.DisplayName,
        us.Reputation,
        us.UpVotesCount,
        us.DownVotesCount
    FROM 
        RankedPosts rp
    JOIN PostHistoryStats ps ON rp.PostId = ps.PostId
    JOIN Users u ON u.Id = rp.OwnerUserId
    JOIN UserStats us ON u.Id = us.UserId
    WHERE 
        rp.rnk = 1
        AND (us.Reputation >= 2000 OR (us.Reputation IS NULL AND rp.ViewCount > 100))
)
SELECT 
    fp.Title, 
    fp.Score,
    fp.ViewCount,
    fp.EditCount,
    fp.LastEditDate,
    COALESCE(CONCAT(fp.DisplayName, ' (Reputation: ', fp.Reputation, ')'), 'Anonymous') AS UserDisplay,
    CASE 
        WHEN fp.UpVotesCount > fp.DownVotesCount THEN 'More UpVotes'
        WHEN fp.UpVotesCount < fp.DownVotesCount THEN 'More DownVotes'
        ELSE 'Equal Votes'
    END AS VoteStatus,
    CASE 
        WHEN fp.EditCount > 5 THEN 'Frequent Edits'
        WHEN fp.EditCount IS NULL THEN 'Never Edited'
        ELSE 'Occasional Edits'
    END AS EditStatus,
    STRING_AGG(DISTINCT t.TagName, ', ') AS Tags
FROM 
    FilteredPosts fp
LEFT JOIN 
    Posts p ON fp.PostId = p.Id
LEFT JOIN 
    UNNEST(string_to_array(p.Tags, ',')) AS t(TagName) ON t.TagName IS NOT NULL
GROUP BY 
    fp.PostId, fp.Title, fp.Score, fp.ViewCount, fp.EditCount, fp.LastEditDate, 
    fp.DisplayName, fp.Reputation, fp.UpVotesCount, fp.DownVotesCount
ORDER BY 
    fp.Score DESC, 
    fp.ViewCount DESC
LIMIT 100;
