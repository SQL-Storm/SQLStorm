WITH UserActivity AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        u.Reputation,
        COUNT(DISTINCT p.Id) AS PostCount,
        COUNT(DISTINCT c.Id) AS CommentCount,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpvoteCount,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownvoteCount,
        SUM(CASE WHEN b.Id IS NOT NULL THEN 1 ELSE 0 END) AS BadgeCount,
        ROW_NUMBER() OVER (ORDER BY u.Reputation DESC) AS UserRank
    FROM Users u
    LEFT JOIN Posts p ON u.Id = p.OwnerUserId
    LEFT JOIN Comments c ON u.Id = c.UserId
    LEFT JOIN Votes v ON u.Id = v.UserId
    LEFT JOIN Badges b ON u.Id = b.UserId
    GROUP BY u.Id, u.DisplayName, u.Reputation
),
PostStatistics AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.ViewCount,
        COUNT(DISTINCT c.Id) AS CommentCount,
        COALESCE(SUM(v.BountyAmount), 0) AS TotalBounty,
        (SELECT COUNT(*) FROM Votes v_sub WHERE v_sub.PostId = p.Id AND v_sub.VoteTypeId = 2) AS UpvoteCount,
        (SELECT COUNT(*) FROM Votes v_sub WHERE v_sub.PostId = p.Id AND v_sub.VoteTypeId = 3) AS DownvoteCount
    FROM Posts p
    LEFT JOIN Comments c ON p.Id = c.PostId
    LEFT JOIN Votes v ON p.Id = v.PostId
    GROUP BY p.Id, p.Title, p.CreationDate, p.ViewCount
)
SELECT 
    ua.UserId,
    ua.DisplayName,
    ua.Reputation,
    P.PostId,
    P.Title,
    P.CreationDate,
    P.ViewCount,
    P.CommentCount,
    P.TotalBounty,
    P.UpvoteCount,
    P.DownvoteCount,
    CASE 
        WHEN P.UpvoteCount > P.DownvoteCount THEN 'Positive'
        WHEN P.DownvoteCount > P.UpvoteCount THEN 'Negative'
        ELSE 'Neutral'
    END AS PostSentiment,
    CASE 
        WHEN ua.UserRank <= 10 THEN 'Top Contributor'
        WHEN ua.UserRank BETWEEN 11 AND 50 THEN 'Frequent Contributor'
        ELSE 'New Contributor'
    END AS UserContributionLevel,
    (SELECT MAX(oh.CreationDate)
     FROM PostHistory oh
     WHERE oh.PostId = P.PostId
     AND oh.PostHistoryTypeId IN (4, 5, 6, 9)  
    ) AS LastEditDate
FROM UserActivity ua
JOIN PostStatistics P ON P.PostId IN (
    SELECT DISTINCT PostId
    FROM Votes v
    WHERE v.UserId = ua.UserId 
      AND v.VoteTypeId IN (2, 3)   
)
ORDER BY ua.Reputation DESC, P.ViewCount DESC
LIMIT 100 OFFSET 0;