WITH UserVotes AS (
    SELECT 
        u.Id AS UserId, 
        COUNT(v.Id) AS TotalVotes,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes
    FROM 
        Users u
    LEFT JOIN 
        Votes v ON u.Id = v.UserId
    GROUP BY 
        u.Id
),
PostMetrics AS (
    SELECT 
        p.Id AS PostId,
        COUNT(c.Id) AS CommentCount,
        COUNT(DISTINCT ph.Id) AS EditCount,
        COUNT(DISTINCT CASE WHEN v.VoteTypeId = 2 THEN v.Id END) AS UpVotes,
        COUNT(DISTINCT CASE WHEN v.VoteTypeId = 3 THEN v.Id END) AS DownVotes,
        SUM(CASE WHEN v.VoteTypeId IN (2, 3) THEN 1 ELSE 0 END) AS TotalVotes
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        PostHistory ph ON p.Id = ph.PostId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    GROUP BY 
        p.Id
)
SELECT 
    u.UserId,
    u.TotalVotes,
    u.UpVotes,
    u.DownVotes,
    p.PostId,
    p.CommentCount,
    p.EditCount,
    p.UpVotes AS PostUpVotes,
    p.DownVotes AS PostDownVotes,
    p.TotalVotes AS PostTotalVotes
FROM 
    UserVotes u
JOIN 
    PostMetrics p ON p.UpVotes > 0 OR p.DownVotes > 0
ORDER BY 
    u.TotalVotes DESC, p.TotalVotes DESC
LIMIT 100;