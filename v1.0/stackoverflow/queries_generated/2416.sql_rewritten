WITH RankedPosts AS (
    SELECT 
        p.Id, 
        p.Title, 
        p.Score, 
        p.ViewCount, 
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC) AS Rank,
        p.CreationDate,
        STRING_AGG(t.TagName, ', ') AS Tags
    FROM 
        Posts p
    JOIN 
        Tags t ON t.Id IN (SELECT unnest(string_to_array(substring(p.Tags, 2, length(p.Tags)-2), '><'))::int)
    WHERE 
        p.PostTypeId = 1 
    GROUP BY 
        p.Id, p.Title, p.Score, p.ViewCount, p.OwnerUserId, p.CreationDate
),
UserActivity AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COALESCE(SUM(v.BountyAmount), 0) AS TotalBounties,
        COALESCE(SUM(v.BountyAmount) FILTER (WHERE v.CreationDate >= cast('2024-10-01' as date) - INTERVAL '30 days'), 0) AS RecentBounties,
        COUNT(DISTINCT p.Id) AS TotalPosts
    FROM 
        Users u
    LEFT JOIN 
        Votes v ON v.UserId = u.Id
    LEFT JOIN 
        Posts p ON p.OwnerUserId = u.Id 
    GROUP BY 
        u.Id, u.DisplayName
),
UserPerformance AS (
    SELECT 
        ua.UserId,
        ua.DisplayName,
        ua.TotalBounties,
        ua.RecentBounties,
        ua.TotalPosts,
        COALESCE(rp.Rank, 0) AS HighestPostRank
    FROM 
        UserActivity ua
    LEFT JOIN 
        RankedPosts rp ON rp.OwnerUserId = ua.UserId
)
SELECT 
    up.UserId,
    up.DisplayName,
    up.TotalBounties,
    up.RecentBounties,
    up.TotalPosts,
    up.HighestPostRank,
    CASE 
        WHEN up.TotalPosts > 10 THEN 'High Contribution'
        WHEN up.TotalPosts BETWEEN 5 AND 10 THEN 'Moderate Contribution'
        ELSE 'Low Contribution'
    END AS ContributionLevel
FROM 
    UserPerformance up
WHERE 
    up.TotalBounties > 0
ORDER BY 
    up.TotalBounties DESC, up.RecentBounties DESC;