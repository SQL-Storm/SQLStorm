
WITH UserReputation AS (
    SELECT 
        U.Id AS UserId, 
        U.DisplayName,
        U.Reputation,
        RANK() OVER (ORDER BY U.Reputation DESC) AS ReputationRank,
        COUNT(DISTINCT P.Id) AS PostCount,
        SUM(CASE WHEN V.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotes,
        SUM(CASE WHEN V.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotes,
        COALESCE(SUM(CASE WHEN B.Class = 1 THEN 1 ELSE 0 END), 0) AS GoldBadges,
        COALESCE(SUM(CASE WHEN B.Class = 2 THEN 1 ELSE 0 END), 0) AS SilverBadges,
        COALESCE(SUM(CASE WHEN B.Class = 3 THEN 1 ELSE 0 END), 0) AS BronzeBadges
    FROM Users U
    LEFT JOIN Posts P ON U.Id = P.OwnerUserId
    LEFT JOIN Votes V ON P.Id = V.PostId
    LEFT JOIN Badges B ON U.Id = B.UserId
    GROUP BY U.Id, U.DisplayName, U.Reputation
),
TopUsers AS (
    SELECT 
        UserId, 
        DisplayName,
        Reputation,
        ReputationRank,
        PostCount,
        UpVotes,
        DownVotes,
        GoldBadges,
        SilverBadges,
        BronzeBadges
    FROM UserReputation
    WHERE ReputationRank <= 10
),
ClosedPosts AS (
    SELECT 
        PH.PostId, 
        P.Title, 
        P.CreationDate, 
        COUNT(DISTINCT PH2.Id) AS ClosureCount, 
        MAX(PH.CreationDate) AS LastClosedDate
    FROM PostHistory PH
    INNER JOIN Posts P ON PH.PostId = P.Id
    WHERE PH.PostHistoryTypeId = 10
    LEFT JOIN PostHistory PH2 ON PH2.PostId = P.Id AND PH2.PostHistoryTypeId = 11
    GROUP BY PH.PostId, P.Title, P.CreationDate
)
SELECT 
    TU.DisplayName,
    TU.Reputation,
    TU.PostCount,
    TU.UpVotes,
    TU.DownVotes,
    TU.GoldBadges,
    TU.SilverBadges,
    TU.BronzeBadges,
    CP.Title AS ClosedPostTitle,
    CP.CreationDate AS ClosedPostCreationDate,
    CP.LastClosedDate,
    CP.ClosureCount AS TotalClosureVotes
FROM TopUsers TU
LEFT JOIN ClosedPosts CP ON TU.UserId = CP.PostId
ORDER BY TU.Reputation DESC, CP.ClosureCount DESC NULLS LAST;
