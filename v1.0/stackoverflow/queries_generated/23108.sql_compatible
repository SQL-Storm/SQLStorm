
WITH RankedPosts AS (
    SELECT 
        p.Id,
        p.Title,
        p.Score,
        COUNT(c.Id) AS CommentCount,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC) AS UserPostRank,
        MAX(v.CreationDate) AS LastVoteDate,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotesCount,
        SUM(CASE WHEN v.VoteTypeId = 3 THEN 1 ELSE 0 END) AS DownVotesCount
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    WHERE 
        p.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 year'
    GROUP BY 
        p.Id, p.Title, p.Score, p.OwnerUserId
),
PostHistoryRank AS (
    SELECT 
        ph.PostId,
        ph.PostHistoryTypeId,
        ph.CreationDate,
        ROW_NUMBER() OVER (PARTITION BY ph.PostId ORDER BY ph.CreationDate DESC) AS HistoryRank
    FROM 
        PostHistory ph
),
BadgeSummary AS (
    SELECT 
        b.UserId,
        COUNT(b.Id) AS TotalBadges,
        MIN(b.Date) AS FirstBadgeDate
    FROM 
        Badges b
    GROUP BY 
        b.UserId
)
SELECT 
    up.DisplayName AS UserName,
    rp.Title AS PostTitle,
    rp.Score AS PostScore,
    rp.CommentCount,
    CASE 
        WHEN rp.UserPostRank = 1 THEN 'Top Post'
        ELSE 'Regular Post'
    END AS PostRankLabel,
    phr.PostHistoryTypeId,
    phr.CreationDate AS HistoryCreationDate,
    bs.TotalBadges,
    bs.FirstBadgeDate,
    CASE WHEN phr.PostHistoryTypeId IS NOT NULL 
         THEN 'Had History'
         ELSE 'No History' 
    END AS HistoryStatus
FROM 
    RankedPosts rp
JOIN 
    Users up ON rp.OwnerUserId = up.Id
LEFT JOIN 
    PostHistoryRank phr ON rp.Id = phr.PostId AND phr.HistoryRank = 1
LEFT JOIN 
    BadgeSummary bs ON up.Id = bs.UserId
WHERE 
    (rp.CommentCount > 5 OR rp.Score > 10)
    AND (bs.TotalBadges IS NULL OR bs.TotalBadges > 1)
    AND (rp.LastVoteDate IS NULL OR rp.LastVoteDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '30 days')
ORDER BY 
    rp.Score DESC, rp.CommentCount DESC;
