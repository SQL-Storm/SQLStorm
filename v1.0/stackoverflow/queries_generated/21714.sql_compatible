
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Score,
        p.ViewCount,
        p.OwnerUserId,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC) AS RankScore,
        COUNT(c.Id) AS CommentCount
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    WHERE 
        p.CreationDate >= DATE_SUB(CAST('2024-10-01' AS DATE), INTERVAL 1 YEAR)
    GROUP BY 
        p.Id, p.Title, p.CreationDate, p.Score, p.ViewCount, p.OwnerUserId
),
UserBadges AS (
    SELECT 
        u.Id AS UserId,
        COUNT(b.Id) AS BadgeCount
    FROM 
        Users u
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    GROUP BY 
        u.Id
),
PostHistoryInfo AS (
    SELECT 
        ph.PostId,
        ph.PostHistoryTypeId,
        ph.UserId AS EditUserId,
        ph.CreationDate AS EditDate,
        COALESCE(ph.Comment, 'No Comment') AS EditComment,
        ph.Text AS NewValue
    FROM 
        PostHistory ph 
    WHERE 
        ph.PostHistoryTypeId IN (4, 5, 6) 
),
TopUsers AS (
    SELECT 
        u.Id,
        u.DisplayName,
        u.Reputation,
        COALESCE(ub.BadgeCount, 0) AS BadgeCount
    FROM 
        Users u
    LEFT JOIN 
        UserBadges ub ON u.Id = ub.UserId
    WHERE 
        u.Reputation > (SELECT AVG(Reputation) FROM Users) 
    ORDER BY 
        u.Reputation DESC
    LIMIT 10
)
SELECT 
    rp.PostId,
    rp.Title,
    rp.CreationDate,
    rp.Score,
    rp.ViewCount,
    tb.UserId,
    tb.DisplayName,
    tb.Reputation,
    tb.BadgeCount,
    ph.EditUserId,
    ph.EditDate,
    ph.EditComment,
    ph.NewValue,
    CASE 
        WHEN rp.CommentCount > 0 THEN 'Has Comments' 
        ELSE 'No Comments' 
    END AS CommentStatus,
    CASE 
        WHEN rp.RankScore = 1 THEN 'Top Post' 
        ELSE 'Regular Post' 
    END AS PostRank
FROM 
    RankedPosts rp
JOIN 
    TopUsers tb ON rp.OwnerUserId = tb.Id
LEFT JOIN 
    PostHistoryInfo ph ON rp.PostId = ph.PostId
WHERE 
    (rp.Score > 10 AND rp.ViewCount > 100) OR 
    (ph.EditUserId IS NOT NULL AND ph.EditDate >= DATE_SUB(CAST('2024-10-01' AS DATE), INTERVAL 30 DAY))
ORDER BY 
    tb.Reputation DESC, rp.Score DESC;
