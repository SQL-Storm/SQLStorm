
WITH RecentPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Score,
        u.DisplayName AS OwnerDisplayName,
        ARRAY_AGG(DISTINCT t.TagName) AS Tags
    FROM 
        Posts p
    JOIN 
        Users u ON p.OwnerUserId = u.Id
    JOIN 
        LATERAL unnest(string_to_array(substring(p.Tags, 2, length(p.Tags) - 2), '><')) AS tag(TagName) ON TRUE
    WHERE 
        p.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '30 days'
    GROUP BY 
        p.Id, p.Title, p.CreationDate, p.Score, u.DisplayName
),
MostActiveUsers AS (
    SELECT 
        u.Id,
        u.DisplayName,
        COUNT(p.Id) AS PostCount
    FROM 
        Users u
    JOIN 
        Posts p ON u.Id = p.OwnerUserId
    GROUP BY 
        u.Id, u.DisplayName
    ORDER BY 
        PostCount DESC
    LIMIT 10
),
PostCommentCounts AS (
    SELECT 
        p.Id AS PostId,
        COALESCE(COUNT(c.Id), 0) AS CommentCount
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    GROUP BY 
        p.Id
)
SELECT 
    rp.PostId,
    rp.Title,
    rp.CreationDate,
    rp.Score,
    rp.OwnerDisplayName,
    rp.Tags,
    pac.CommentCount,
    mau.DisplayName AS MostActiveUser
FROM 
    RecentPosts rp
JOIN 
    PostCommentCounts pac ON rp.PostId = pac.PostId
JOIN 
    MostActiveUsers mau ON mau.Id = (
        SELECT u.Id 
        FROM Users u 
        JOIN Posts p ON u.Id = p.OwnerUserId 
        WHERE p.Id = rp.PostId
        ORDER BY u.Reputation DESC
        LIMIT 1
    )
ORDER BY 
    rp.Score DESC,
    rp.CreationDate DESC
LIMIT 100;
