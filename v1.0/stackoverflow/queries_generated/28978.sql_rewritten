WITH RankedPosts AS (
    SELECT 
        p.Id,
        p.Title,
        p.Body,
        p.Tags,
        p.CreationDate,
        p.OwnerUserId,
        p.Score,
        p.ViewCount,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.ViewCount DESC) AS RankByViews
    FROM 
        Posts p
    WHERE 
        p.PostTypeId = 1 
        AND p.CreationDate >= DATEADD(YEAR, -1, GETDATE()) 
),
UserStatistics AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COUNT(DISTINCT p.Id) AS QuestionsAsked,
        COUNT(DISTINCT a.Id) AS AnswersGiven,
        SUM(CASE WHEN b.Class = 1 THEN 1 ELSE 0 END) AS GoldBadges,
        SUM(CASE WHEN b.Class = 2 THEN 1 ELSE 0 END) AS SilverBadges,
        SUM(CASE WHEN b.Class = 3 THEN 1 ELSE 0 END) AS BronzeBadges,
        SUM(p.Score) AS TotalScore
    FROM 
        Users u
    LEFT JOIN 
        Posts p ON u.Id = p.OwnerUserId AND p.PostTypeId = 1
    LEFT JOIN 
        Posts a ON u.Id = a.OwnerUserId AND a.PostTypeId = 2
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    GROUP BY 
        u.Id, u.DisplayName
),
TopUsers AS (
    SELECT 
        us.UserId,
        us.DisplayName,
        us.QuestionsAsked,
        us.AnswersGiven,
        us.GoldBadges,
        us.SilverBadges,
        us.BronzeBadges,
        us.TotalScore,
        RANK() OVER (ORDER BY us.TotalScore DESC) AS UserRank
    FROM 
        UserStatistics us
)
SELECT 
    ru.DisplayName AS QuestionAuthor,
    rp.Title,
    rp.Body,
    STRING_AGG(DISTINCT t.TagName, ', ') AS TagsUsed,
    ru.QuestionsAsked,
    ru.AnswersGiven,
    ru.GoldBadges,
    ru.SilverBadges,
    ru.BronzeBadges,
    ra.RankByViews,
    rp.ViewCount AS TotalViews,
    rp.CreationDate
FROM 
    RankedPosts rp
JOIN 
    TopUsers ru ON rp.OwnerUserId = ru.UserId
LEFT JOIN 
    Posts a ON rp.Id = a.ParentId
LEFT JOIN 
    LATERAL (SELECT * FROM STRING_TO_ARRAY(rp.Tags, '<>') AS tag) t ON TRUE
WHERE 
    ru.UserRank <= 10 
GROUP BY 
    ru.DisplayName, rp.Title, rp.Body, ra.RankByViews, rp.ViewCount, ru.QuestionsAsked, ru.AnswersGiven, ru.GoldBadges, ru.SilverBadges, ru.BronzeBadges, rp.CreationDate
ORDER BY 
    ru.TotalScore DESC;