WITH UserPostStatistics AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COUNT(p.Id) AS TotalPosts,
        SUM(CASE WHEN p.PostTypeId = 1 THEN 1 ELSE 0 END) AS TotalQuestions,
        SUM(CASE WHEN p.PostTypeId = 2 THEN 1 ELSE 0 END) AS TotalAnswers,
        SUM(p.ViewCount) AS TotalViews,
        SUM(p.Score) AS TotalScore,
        AVG(COALESCE(DATEDIFF(second, p.CreationDate, p.LastActivityDate), 0)) AS AvgPostLifetimeInSeconds
    FROM 
        Users u
    LEFT JOIN 
        Posts p ON u.Id = p.OwnerUserId
    GROUP BY 
        u.Id, u.DisplayName
),
BadgeStatistics AS (
    SELECT 
        b.UserId,
        COUNT(b.Id) AS TotalBadges,
        SUM(CASE WHEN b.Class = 1 THEN 1 ELSE 0 END) AS TotalGoldBadges,
        SUM(CASE WHEN b.Class = 2 THEN 1 ELSE 0 END) AS TotalSilverBadges,
        SUM(CASE WHEN b.Class = 3 THEN 1 ELSE 0 END) AS TotalBronzeBadges
    FROM 
        Badges b
    GROUP BY 
        b.UserId
)
SELECT 
    u.UserId,
    u.DisplayName,
    u.TotalPosts,
    u.TotalQuestions,
    u.TotalAnswers,
    u.TotalViews,
    u.TotalScore,
    u.AvgPostLifetimeInSeconds,
    COALESCE(b.TotalBadges, 0) AS TotalBadges,
    COALESCE(b.TotalGoldBadges, 0) AS TotalGoldBadges,
    COALESCE(b.TotalSilverBadges, 0) AS TotalSilverBadges,
    COALESCE(b.TotalBronzeBadges, 0) AS TotalBronzeBadges
FROM 
    UserPostStatistics u
LEFT JOIN 
    BadgeStatistics b ON u.UserId = b.UserId
ORDER BY 
    u.TotalPosts DESC;