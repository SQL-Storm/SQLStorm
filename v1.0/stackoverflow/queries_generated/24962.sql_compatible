
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.ViewCount,
        p.CreationDate,
        p.Score,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.CreationDate DESC) AS rn,
        COUNT(pc.Id) OVER (PARTITION BY p.Id) AS CommentCount,
        STRING_AGG(DISTINCT t.TagName, ', ') AS Tags
    FROM 
        Posts p
    LEFT JOIN 
        Comments pc ON p.Id = pc.PostId
    LEFT JOIN 
        UNNEST(string_to_array(trim(both '{}' FROM p.Tags), '><')) AS t(TagName)
    WHERE 
        p.PostTypeId = 1 
    GROUP BY 
        p.Id, p.Title, p.ViewCount, p.CreationDate, p.Score
),
ClosedPosts AS (
    SELECT 
        ph.PostId,
        ph.CreationDate,
        ph.UserId,
        ph.Comment,
        pt.Name AS CloseReason,
        ROW_NUMBER() OVER (PARTITION BY ph.PostId ORDER BY ph.CreationDate DESC) AS ClosureRank
    FROM 
        PostHistory ph
    JOIN 
        CloseReasonTypes pt ON ph.Comment = pt.Id::text
    WHERE 
        ph.PostHistoryTypeId = 10 
),
UserAggregates AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COUNT(DISTINCT p.Id) AS TotalPosts,
        COALESCE(SUM(v.BountyAmount), 0) AS TotalBounty,
        COALESCE(SUM(CASE WHEN b.Class = 1 THEN 1 ELSE 0 END), 0) AS GoldBadges,
        SUM(CASE WHEN v.VoteTypeId = 2 THEN 1 ELSE 0 END) AS UpVotesCount
    FROM 
        Users u
    LEFT JOIN 
        Posts p ON u.Id = p.OwnerUserId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    LEFT JOIN 
        Badges b ON u.Id = b.UserId
    GROUP BY 
        u.Id, u.DisplayName
    HAVING 
        COUNT(DISTINCT p.Id) > 10 
)
SELECT 
    up.UserId,
    up.DisplayName,
    rp.Title,
    rp.ViewCount,
    rp.Tags,
    COALESCE(clp.CloseReason, 'Not Closed') AS CloseReason,
    up.TotalPosts,
    up.TotalBounty,
    up.GoldBadges,
    up.UpVotesCount
FROM 
    UserAggregates up
JOIN 
    RankedPosts rp ON up.UserId = rp.PostId
LEFT JOIN 
    (SELECT * FROM ClosedPosts WHERE ClosureRank = 1) clp ON rp.PostId = clp.PostId
WHERE 
    rp.ViewCount > 100
ORDER BY 
    up.TotalPosts DESC, rp.ViewCount DESC;
