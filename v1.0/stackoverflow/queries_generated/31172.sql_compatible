
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.CreationDate,
        p.Score,
        p.ViewCount,
        ROW_NUMBER() OVER (PARTITION BY p.OwnerUserId ORDER BY p.Score DESC) AS PostRank,
        COUNT(c.Id) OVER (PARTITION BY p.Id) AS CommentCount,
        p.OwnerUserId
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    WHERE 
        p.CreationDate >= '2023-01-01' 
        AND p.PostTypeId = 1  
),
PopularUsers AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        u.Reputation,
        RANK() OVER (ORDER BY SUM(p.Score) DESC) AS UserRank
    FROM 
        Users u
    JOIN 
        Posts p ON u.Id = p.OwnerUserId
    WHERE 
        p.CreationDate >= '2023-01-01'
    GROUP BY 
        u.Id, u.DisplayName, u.Reputation
),
PostDetails AS (
    SELECT 
        rp.PostId,
        rp.Title,
        rp.CreationDate,
        rp.Score,
        rp.ViewCount,
        pu.DisplayName AS OwnerDisplayName,
        pu.Reputation AS OwnerReputation,
        rp.CommentCount,
        COALESCE((
            SELECT 
                STRING_AGG(CONCAT('Tag: ', t.TagName), ', ') 
            FROM 
                Tags t 
            WHERE 
                t.Id IN (
                    SELECT 
                        CAST(UNNEST(string_to_array(rp.Tags, '<>')) AS INTEGER)  
                )
        ), 'No Tags') AS Tags
    FROM 
        RankedPosts rp
    LEFT JOIN 
        Users pu ON rp.OwnerUserId = pu.Id
    WHERE 
        rp.PostRank = 1  
),
PostHistorySummary AS (
    SELECT 
        p.Id AS PostId,
        COUNT(ph.Id) AS HistoryCount,
        MAX(ph.CreationDate) AS LastEditDate
    FROM 
        Posts p
    LEFT JOIN 
        PostHistory ph ON p.Id = ph.PostId
    GROUP BY 
        p.Id 
)
SELECT 
    pd.Title,
    pd.CreationDate,
    pd.Score,
    pd.ViewCount,
    pd.OwnerDisplayName,
    pd.OwnerReputation,
    pd.CommentCount,
    phs.HistoryCount,
    phs.LastEditDate,
    pu.UserRank
FROM 
    PostDetails pd
INNER JOIN 
    PostHistorySummary phs ON pd.PostId = phs.PostId
LEFT JOIN 
    PopularUsers pu ON pd.OwnerDisplayName = pu.DisplayName
ORDER BY 
    pd.Score DESC, 
    pd.ViewCount DESC
LIMIT 10;
