
WITH RankedPosts AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        p.Score,
        p.ViewCount,
        u.DisplayName AS Owner,
        ROW_NUMBER() OVER (PARTITION BY p.PostTypeId ORDER BY p.CreationDate DESC) AS rn
    FROM 
        Posts p
    JOIN 
        Users u ON p.OwnerUserId = u.Id
    WHERE 
        p.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 year'
),
ClosedPosts AS (
    SELECT 
        ph.PostId,
        ph.CreationDate,
        ph.Comment,
        r.Title
    FROM 
        PostHistory ph
    JOIN 
        RankedPosts r ON ph.PostId = r.PostId
    WHERE 
        ph.PostHistoryTypeId = 10 
        AND ph.CreationDate >= TIMESTAMP '2024-10-01 12:34:56' - INTERVAL '1 month'
),
ActiveTags AS (
    SELECT 
        tags.TagName,
        COUNT(p.Id) AS PostCount
    FROM 
        Tags tags
    JOIN 
        Posts p ON tags.Id = ANY (string_to_array(p.Tags, ',')::text[])
    GROUP BY 
        tags.TagName
    HAVING 
        COUNT(p.Id) > 5
)
SELECT 
    rp.PostId,
    rp.Title,
    rp.Score,
    rp.ViewCount,
    rp.Owner,
    COALESCE(cp.Comment, 'N/A') AS ClosureComment,
    COALESCE(cp.CreationDate, 'No recent closure') AS ClosureDate,
    at.TagName,
    at.PostCount
FROM 
    RankedPosts rp
LEFT JOIN 
    ClosedPosts cp ON rp.PostId = cp.PostId
JOIN 
    ActiveTags at ON at.PostCount > 5 
WHERE 
    rp.rn = 1 
ORDER BY 
    rp.Score DESC, 
    rp.ViewCount DESC
LIMIT 50;
