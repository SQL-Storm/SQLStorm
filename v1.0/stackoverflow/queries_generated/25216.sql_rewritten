WITH TagCounts AS (
    SELECT 
        unnest(string_to_array(substring(Tags, 2, length(Tags)-2), '> <')) AS TagName,
        COUNT(*) AS NumberOfPosts
    FROM 
        Posts 
    WHERE 
        PostTypeId = 1 
    GROUP BY 
        TagName
),
UserActivity AS (
    SELECT 
        u.Id AS UserId,
        u.DisplayName,
        COUNT(p.Id) AS NumberOfPosts,
        SUM(CASE WHEN p.PostTypeId = 2 THEN 1 ELSE 0 END) AS NumberOfAnswers,
        SUM(CASE WHEN p.PostTypeId = 1 THEN 1 ELSE 0 END) AS NumberOfQuestions,
        SUM(CASE WHEN p.ViewCount IS NOT NULL THEN p.ViewCount ELSE 0 END) AS TotalViews
    FROM 
        Users u
    LEFT JOIN 
        Posts p ON u.Id = p.OwnerUserId
    GROUP BY 
        u.Id, u.DisplayName
),
PostStats AS (
    SELECT 
        p.Id AS PostId,
        p.Title,
        COUNT(c.Id) AS CommentCount,
        COALESCE(AVG(v.BountyAmount), 0) AS AverageBounty,
        MAX(CASE 
            WHEN ph.PostHistoryTypeId = 10 THEN ph.CreationDate 
            ELSE NULL 
         END) AS LastClosedDate,
        ARRAY_AGG(DISTINCT th.TagName) AS Tags
    FROM 
        Posts p
    LEFT JOIN 
        Comments c ON p.Id = c.PostId
    LEFT JOIN 
        Votes v ON p.Id = v.PostId
    LEFT JOIN 
        PostHistory ph ON p.Id = ph.PostId
    LEFT JOIN 
        TagCounts th ON th.TagName = ANY(ARRAY(SELECT unnest(string_to_array(substring(p.Tags, 2, length(p.Tags)-2), '> <'))))
    WHERE 
        p.PostTypeId IN (1, 2) 
    GROUP BY 
        p.Id, p.Title
)
SELECT 
    u.DisplayName,
    ua.NumberOfPosts,
    ua.NumberOfQuestions,
    ua.NumberOfAnswers,
    ua.TotalViews,
    ps.PostId,
    ps.Title,
    ps.CommentCount,
    ps.AverageBounty,
    ps.LastClosedDate,
    ps.Tags
FROM 
    UserActivity ua
JOIN 
    Posts p ON ua.UserId = p.OwnerUserId
JOIN 
    PostStats ps ON p.Id = ps.PostId
WHERE 
    ua.NumberOfPosts >= 5
ORDER BY 
    ua.TotalViews DESC, ps.CommentCount DESC;